name: pr-number-assign
on: 
  [workflow_call]
permissions:
  contents: write
  
jobs:
  pr-number-assign:
    runs-on: ubuntu-latest 
    
    env:
      FEAT: default

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    
    - name: do work
      run: |
        pip install tomlkit
        scripts=$(cat <<EOF
        #!/usr/bin/env python

        from pathlib import Path
        import os
        import re
        import tomlkit

        pr_number = "${{github.event.pull_request.number}}"
        path = Path('./changes')
        
        with open('./pyproject.toml', 'r') as f:
            data = tomlkit.load(f)
            t_types = [sub['directory'] for sub in data["tool"]["towncrier"]["type"]]

        pattern = r"^(\.)?(" + "|".join(t_types) + ")(\.)?(md)?$"
        result = None

        files = [f.name for f in path.iterdir() if f.is_file()]
        print(str(files) + " are in changes floder.")

        for file in files:
            if str(file[0 : file.find(".")]) == pr_number:
                print("Change log file already exist for this PR.")
                exit(0)

        for file in files:
            result = re.search(pattern, file)
            if result:
                original_filename = result.group()
                feat = re.search(r"|".join(t_types), original_filename).group()
                file_path = path / original_filename
                file_path.rename(path / (pr_number + "." + feat + ".md"))
 
                env_file = os.getenv("GITHUB_ENV")
                myfile = open(env_file, "a")
                myfile.write("ORIGINAL_FILENAME=" + original_filename + "\n")
                myfile.write("FEAT=" + feat)
                myfile.close()

                print(original_filename + " file changed to " + pr_number + "." + feat + ".md")
                exit(0)

        if result:
            print("There is not change log file for this PR in changes folder.")
            print("Also, there is not feature named file in changes folder.")
            exit(0)

        
        EOF
        )
        echo "$scripts" | python

    - name: commit message for changing change log file
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_user_name: ${{ github.actor }}
        commit_message: GitHub Actions changed file name. '${{ env.ORIGINAL_FILENAME }}' -> '${{github.event.pull_request.number}}.${{ env.FEAT }}.md'
