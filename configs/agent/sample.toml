# Backend.AI Agent Configuration Sample
#
# This is a sample configuration file for the Backend.AI Agent.
# All configuration options are documented with their descriptions,
# default values, and examples.
#
# Generated automatically from the AgentUnifiedConfig schema.

# Logging configuration
# logging = ""
# Plugins configuration.
# This field is injected at runtime based on etcd configuration.
# It is not intended to be set in the configuration file.
# plugins = ""

[agent]
  # Backend type for the agent.
  # This determines how the agent interacts with the underlying infrastructure.
  # Available options are:
  # - `docker`: Uses Docker as the backend.
  # - `kubernetes`: Uses Kubernetes as the backend.
  # - `dummy`: A dummy backend for testing purposes.
  backend = "docker"
  # Whether to enable SSL
  ssl-enabled = true
  # Path to SSL certificate file
  ssl-cert = "/path/to/cert.pem"
  # Path to SSL private key file
  ssl-key = "/path/to/key.pem"
  # Advertised RPC address and port
  # Path to RPC auth manager public key
  rpc-auth-manager-public-key = "/path/to/public.key"
  # Path to RPC auth agent keypair
  rpc-auth-agent-keypair = "/path/to/keypair.key"
  # Agent socket port
  agent-sock-port = 6007
  # Agent ID
  id = "agent-001"
  # Base path for IPC
  ipc-base-path = "/tmp/backend.ai/ipc"
  # Base path for variable data
  var-base-path = "./var/lib/backend.ai"
  # Mount path for containers
  mount-path = "/mnt/backend.ai"
  # Whether to enable cohabiting storage proxy
  cohabiting-storage-proxy = true
  # Public host address
  public-host = "backend.ai"
  # Region name
  region = "us-east-1"
  # Instance type
  instance-type = "m5.large"
  # Scaling group name
  scaling-group = "default"
  # Scaling group type
  scaling-group-type = "compute"
  # Path to PID file
  pid-file = "/var/run/agent.pid"
  # Event loop type
  event-loop = "asyncio"
  # Whether to skip manager detection
  skip-manager-detection = true
  # Port for aiomonitor terminal UI
  aiomonitor-termui-port = 38200
  # Port for aiomonitor web UI
  aiomonitor-webui-port = 39200
  # Metadata server bind host
  metadata-server-bind-host = "0.0.0.0"
  # Metadata server port
  metadata-server-port = 40128
  # Allowed compute plugins
  allow-compute-plugins = [ "cuda", "rocm",]
  # Blocked compute plugins
  block-compute-plugins = [ "cpu",]
  # Allowed network plugins
  allow-network-plugins = [ "overlay",]
  # Blocked network plugins
  block-network-plugins = [ "host",]
  # Path for image commit
  image-commit-path = "./tmp/backend.ai/commit"
  # Path for abuse reports
  abuse-report-path = "/var/log/backend.ai/abuse"
  # Whether to force terminate abusing containers
  force-terminate-abusing-containers = true
  # Kernel creation concurrency
  kernel-creation-concurrency = 4
  # Whether to use experimental Redis event dispatcher
  use-experimental-redis-event-dispatcher = true
  # Docker mode detected based on kernel version (linuxkit/native)
  docker-mode = "linuxkit"
  # Owner uid:gid of the mount directory
  mount-path-uid-gid = "root:root"

[agent.rpc-listen-addr]
    # Host address of the service.
    # Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
    # all interfaces.
    host = "127.0.0.1"
    # Port number of the service.
    # Must be between 1 and 65535.
    # Ports below 1024 require root/admin privileges.
    port = 8080

[agent.service-addr]
    # Host address of the service.
    # Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
    # all interfaces.
    host = "127.0.0.1"
    # Port number of the service.
    # Must be between 1 and 65535.
    # Ports below 1024 require root/admin privileges.
    port = 8080

[agent.announce-addr]
    # Host address of the service.
    # Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
    # all interfaces.
    host = "127.0.0.1"
    # Port number of the service.
    # Must be between 1 and 65535.
    # Ports below 1024 require root/admin privileges.
    port = 8080

[agent.sync-container-lifecycles]
    # Whether to enable container lifecycle synchronization
    enabled = true
    # Synchronization interval in seconds
    interval = 10.0

[container]
  # Kernel user ID
  kernel-uid = 1000
  # Kernel group ID
  kernel-gid = 1000
  # Bind host for containers
  bind-host = "0.0.0.0"
  # Advertised host for containers
  advertised-host = "192.168.1.100"
  # Port range for containers
  port-range = [ 30000, 31000,]
  # Statistics type
  stats-type = "cgroup"
  # Sandbox type
  sandbox-type = "docker"
  # Jail arguments
  jail-args = [ "--mount", "/tmp",]
  # Scratch type
  scratch-type = "hostdir"
  # Scratch root directory
  scratch-root = "./scratches"
  # Scratch size
  scratch-size = "1G"
  # Scratch NFS address
  scratch-nfs-address = "192.168.1.100:/export"
  # Scratch NFS options
  scratch-nfs-options = "rw,sync"
  # Alternative bridge network
  alternative-bridge = "br-backend"
  # KRunner volumes configuration, mapping container names to host paths.
  # This is used to specify volumes that should be mounted into containers
  # when using the KRunner backend.
  # This fields is filled by the agent at runtime based on the
  # `krunner_volumes` configuration in the agent's environment.
  # It is not intended to be set in the configuration file.
  # Whether to enable Docker Swarm mode.
  # This allows the agent to manage containers in a Docker Swarm cluster.
  # When enabled, the agent will use Docker Swarm APIs to manage containers,
  # networks, and services.
  # This field is only used when backend is set to 'docker'.
  swarm-enabled = true

[pyroscope]
  # Whether to enable Pyroscope profiling
  enabled = true
  # Application name to use in Pyroscope
  app-name = "backendai-agent"
  # Address of the Pyroscope server
  server-addr = "http://localhost:4040"
  # Sampling rate for Pyroscope profiling
  sample-rate = 10

[resource]
  # Reserved CPU cores
  reserved-cpu = 1
  # Reserved memory
  reserved-mem = "1G"
  # Reserved disk space
  reserved-disk = "8G"
  # Resource allocation order
  allocation-order = [ "cuda", "rocm", "tpu", "cpu", "mem",]
  # Affinity policy
  affinity-policy = "PREFER_SINGLE_NODE"

[otel]
  # Whether to enable OpenTelemetry
  enabled = true
  # Log level for OpenTelemetry
  log-level = "DEBUG"
  # OTLP endpoint for sending traces
  endpoint = "http://127.0.0.1:4317"

[service-discovery]
  # Type of service discovery to use
  type = "etcd"

[debug]
  # Master switch for debug mode
  enabled = true
  # Whether to enable asyncio debug mode
  asyncio = true
  # Whether to enable kernel runner debug mode
  kernel-runner = true
  # Enable enhanced task information in aiomonitor
  enhanced-aiomonitor-task-info = true
  # Whether to skip container deletion for debugging
  skip-container-deletion = true
  # Whether to log statistics
  log-stats = true
  # Whether to log kernel configuration
  log-kernel-config = true
  # Whether to log allocation map
  log-alloc-map = true
  # Whether to log all internal events
  log-events = true
  # Whether to log heartbeats
  log-heartbeats = true
  # Heartbeat interval in seconds
  heartbeat-interval = 20.0
  # Whether to log Docker events
  log-docker-events = true

[debug.coredump]
    # Whether to enable core dump collection
    enabled = true
    # Directory path for storing core dumps
    path = "./coredumps"
    # Number of core dump backups to retain
    backup-count = 10
    # Maximum size limit for core dumps
    size-limit = "64M"

[etcd]
  # Etcd namespace
  namespace = "local"
  # Etcd username
  user = "backend"
  # Etcd password
  password = "PASSWORD"

[etcd.addr]
    # Host address of the service.
    # Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
    # all interfaces.
    host = "127.0.0.1"
    # Port number of the service.
    # Must be between 1 and 65535.
    # Ports below 1024 require root/admin privileges.
    port = 8080

[container-logs]
  # Maximum length of container logs
  max-length = "10M"
  # Chunk size for container logs
  chunk-size = "64K"

[api]
  # Image pull timeout in seconds
  pull-timeout = 7200.0
  # Image push timeout in seconds
  push-timeout = 7200.0

[kernel-lifecycles]
  # Number of init polling attempts
  init-polling-attempt = 10
  # Init polling timeout in seconds
  init-polling-timeout-sec = 60.0
  # Init timeout in seconds
  init-timeout-sec = 60.0
