# Backend.AI Manager Configuration Sample
#
# This is a sample configuration file for the Backend.AI Manager.
# All configuration options are documented with their descriptions,
# default values, and examples.
#
# Generated automatically from the ManagerUnifiedConfig schema.


[db]
# Type of the database system to use.
# Currently, only PostgreSQL is supported as the main database backend.
# Examples: postgresql
type = "postgresql"
# Database name to use.
# This database must exist and be accessible by the configured user.
# Length must be between 2 and 64 characters due to database naming constraints.
# Examples: backend
name = "DB_NAME"
# Username for authenticating with the database.
# This user must have sufficient privileges for all database operations.
# Examples: postgres
user = "DB_USER"
# Password for authenticating with the database.
# Can be a direct password string or an environment variable name.
# For security, using environment variables is recommended in production.
# Examples: develove, DB_PASSWORD
password = ""
# Size of the database connection pool.
# Determines how many concurrent database connections to maintain.
# Should be tuned based on expected load and database server capacity.
# Examples: 1, 8
pool-size = 8
# Maximum lifetime of a connection in seconds before it's recycled.
# Set to -1 to disable connection recycling.
# Useful to handle cases where database connections are closed by the server
# after inactivity.
# Examples: -1, 50
pool-recycle = -1
# Whether to test connections with a lightweight ping before using them.
# Helps detect stale connections before they cause application errors.
# Adds a small overhead but improves reliability.
# Examples: True, False
pool-pre-ping = false
# Maximum number of additional connections to create beyond the pool_size.
# Set to -1 for unlimited overflow connections.
# These connections are created temporarily when pool_size is insufficient.
# Examples: -1, 64
max-overflow = 64
# Timeout in seconds for acquiring a connection from the pool.
# 0 means wait indefinitely.
# If connections cannot be acquired within this time, an exception is raised.
# Examples: 0, 30
lock-conn-timeout = 0


[etcd]
# Namespace prefix for etcd keys used by Backend.AI.
# Allows multiple Backend.AI clusters to share the same etcd cluster.
# All Backend.AI related keys will be stored under this namespace.
# Examples: local, backend
namespace = "ETCD_NAMESPACE"
# Username for authenticating with etcd.
# Optional if etcd doesn't require authentication.
# Should be set along with password for secure deployments.
# Examples: backend, manager
user = ""
# Password for authenticating with etcd.
# Optional if etcd doesn't require authentication.
# Can be a direct password or environment variable reference.
# Examples: develove, ETCD_PASSWORD
password = ""


[manager]
# Base directory path for inter-process communication files.
# Used for Unix domain sockets and other IPC mechanisms.
# This directory must be writable by the manager process.
# In production environments, consider using /var/run/backend.ai/ipc instead.
# Examples: /var/run/backend.ai/ipc
ipc-base-path = "/tmp/backend.ai/ipc"
# Number of worker processes to spawn for the manager.
# Defaults to the number of CPU cores available.
# For optimal performance, set this to match your CPU core count.
# Examples: 1, 4
num-proc = 12
# Unique identifier for this manager instance.
# Used to distinguish between multiple manager instances in a cluster.
# By default, uses the hostname with an 'i-' prefix.
# Must be unique across all managers in the same Backend.AI cluster.
# Examples: i-manager123
id = "i-gimhyeogjin-ui-MacBookPro.local"
# User ID (UID) under which the manager process runs.
# If not specified, defaults to the UID of the server.py file.
# Important for proper file permissions when creating files/sockets.
# Examples: 501
user = ""
# Group ID (GID) under which the manager process runs.
# If not specified, defaults to the GID of the server.py file.
# Important for proper file permissions when creating files/sockets.
# Examples: 20
group = ""
# Path to the keypair file used for RPC authentication.
# This file contains key pairs used for secure communication between manager
# components.
# In production, should be stored in a secure location with restricted access.
# Examples: fixtures/manager/manager.key_secret
rpc-auth-manager-keypair = "fixtures/manager/manager.key_secret"
# Timeout in seconds for agent heartbeat checks.
# If an agent doesn't respond within this time, it's considered offline.
# Should be set higher than the agent's heartbeat interval.
# Examples: 1.0, 40.0
heartbeat-timeout = 40.0
# Secret key for manager authentication and signing.
# Used for securing API tokens and inter-service communication.
# Should be a strong random string in production environments.
# If not provided, one will be generated automatically (not recommended for
# clusters).
# Examples: XXXXXXXXXXXXXX
secret = ""
# Whether to enable SSL/TLS for secure API communication.
# Strongly recommended for production deployments exposed to networks.
# Requires valid certificate and private key when enabled.
# Examples: True, False
ssl-enabled = false
# Path to the SSL certificate file.
# Required if `ssl_enabled` is True.
# Should be a PEM-formatted certificate file, either self-signed or from a CA.
# Examples: fixtures/manager/manager.crt
ssl-cert = ""
# Path to the SSL private key file.
# Required if `ssl_enabled` is True.
# Should be a PEM-formatted private key corresponding to the certificate.
# Examples: fixtures/manager/manager.key
ssl-privkey = ""
event-loop = ""
distributed-lock = ""
# Maximum lifetime in seconds for session scheduling locks.
# If scheduling takes longer than this, locks will be automatically released.
# Prevents deadlocks in case a manager fails during scheduling.
# Examples: 30.0, 60.0
session-schedule-lock-lifetime = 30
# Maximum lifetime in seconds for session precondition check locks.
# Controls how long the manager can hold a lock while checking if a session can
# be created.
# Should be balanced to prevent both deadlocks and race conditions.
# Examples: 30.0, 60.0
session-check-precondition-lock-lifetime = 30
# Maximum lifetime in seconds for session start locks.
# Controls how long the manager can hold a lock while starting a session.
# Longer values are safer but may block other managers longer on failure.
# Examples: 30.0, 60.0
session-start-lock-lifetime = 30
# Path to the file where the manager process ID will be written.
# Useful for service management and monitoring.
# Set to /dev/null by default to disable this feature.
# Examples: /var/run/manager.pid
pid-file = "/dev/null"
# List of explicitly allowed plugins to load.
# If specified, only these plugins will be loaded, even if others are installed.
# Useful for controlling exactly which plugins are active.
# Leave as None to load all available plugins except those in disabled_plugins.
# Examples: ['example.plugin.what.you.want']
allowed-plugins = []
# List of plugins to explicitly disable.
# These plugins won't be loaded even if they're installed.
# Useful for disabling problematic or unwanted plugins without uninstalling
# them.
# Examples: ['example.plugin.what.you.want']
disabled-plugins = []
# Whether to hide detailed agent information in API responses.
# When enabled, agent details are obscured in user-facing APIs.
# Useful for security in multi-tenant environments.
# Examples: True, False
hide-agents = false
# Priority order for resources when selecting agents for compute sessions.
# Determines which resources are considered more important during scheduling.
# Default prioritizes GPU resources (CUDA, ROCm) over CPU and memory.
# Examples: ['cuda', 'rocm', 'tpu', 'cpu', 'mem']
agent-selection-resource-priority = [ "cuda", "rocm", "tpu", "cpu", "mem",]
# Deprecated: Container image used for the importer service.
# The importer handles tasks like installing additional packages.
# Should be compatible with the Backend.AI environment.
# Examples: lablup/importer:manylinux2010
importer-image = "lablup/importer:manylinux2010"
# Maximum WebSocket message size in bytes.
# Controls the largest message that can be sent over WebSocket connections.
# Default is 16 MiB, which should be sufficient for most use cases.
# Increase for applications that need to transfer larger data chunks.
# Examples: 16777216, 33554432
max-wsmsg-size = 16777216
# Deprecated: Port for the aiomonitor terminal UI.
# Use `aiomonitor_termui_port` instead.
# Examples: 38100, 38200
aiomonitor-port = 0
# Port for the aiomonitor terminal UI.
# Allows connecting to a debugging console for the manager.
# Should be a port that's not used by other services.
# Examples: 38100, 38200
aiomonitor-termui-port = 38100
# Port for the aiomonitor web UI.
# Provides a web-based monitoring interface for the manager.
# Should be a port that's not used by other services.
# Examples: 39100, 39200
aiomonitor-webui-port = 39100
# Whether to use the experimental Redis-based event dispatcher.
# May provide better performance for event handling in large clusters.
# Not recommended for production use unless specifically needed.
# Examples: True, False
use-experimental-redis-event-dispatcher = false
# Interval in seconds between status updates.
# Controls how frequently the manager updates its status.
# Smaller values provide more real-time information but increase overhead.
# Examples: 60.0, 120.0
status-update-interval = 0.0
# How long in seconds status information is considered valid.
# Status records older than this will be ignored or refreshed.
# Should be greater than the status_update_interval.
# Examples: 60, 120
status-lifetime = 0
# Port for exposing public metrics (e.g., Prometheus endpoint).
# If specified, metrics will be available at this port.
# Leave as None to disable public metrics exposure.
# Examples: 8080, 9090
public-metrics-port = 0


[docker_registry]
# Deprecated: Whether to verify SSL certificates when connecting to Docker
# registries.
# Disabling this is not recommended except for testing with self-signed
# certificates.
# Examples: True, False
ssl-verify = true


[pyroscope]
# Whether to enable Pyroscope profiling.
# When enabled, performance profiling data will be sent to a Pyroscope server.
# Useful for debugging performance issues, but adds some overhead.
# Examples: True, False
enabled = false
# Application name to use in Pyroscope.
# This name will identify this manager instance in Pyroscope UI.
# Required if Pyroscope is enabled.
# Examples: backendai-half-manager
app-name = ""
# Address of the Pyroscope server.
# Must include the protocol (http or https) and port if non-standard.
# Required if Pyroscope is enabled.
# Examples: http://localhost:4040
server-addr = ""
# Sampling rate for Pyroscope profiling.
# Higher values collect more data but increase overhead.
# Balance based on your performance monitoring needs.
# Examples: 10, 100, 1000
sample-rate = 0


[debug]
# Master switch for debug mode.
# When enabled, activates various debugging features.
# Should be disabled in production for security and performance.
# Examples: True, False
enabled = false
# Whether to enable asyncio debug mode.
# Helps detect problems like coroutines never awaited or excessive event loop
# delays.
# Adds significant overhead, use only during development.
# Examples: True, False
asyncio = false
# Enable enhanced task information in aiomonitor.
# Provides more detailed information about running asyncio tasks.
# Useful for debugging complex async issues, but adds overhead.
# Examples: True, False
enhanced-aiomonitor-task-info = false
# Whether to log all internal events.
# When enabled, all events passing through the system will be logged.
# Very verbose, but useful for debugging event-related issues.
# Examples: True, False
log-events = false
# Whether to log scheduler ticks.
# Provides detailed logs about the scheduler's internal operations.
# Useful for debugging scheduling issues, but generates many log entries.
# Examples: True, False
log-scheduler-ticks = false
# Whether to periodically synchronize and log system statistics.
# When enabled, regularly collects and logs performance metrics.
# Helpful for monitoring system behavior over time.
# Examples: True, False
periodic-sync-stats = false


[reporter]
# SMTP reporter configuration.
# Controls how email notifications are sent.
# Includes settings for SMTP server, authentication, and email templates.
smtp = []
# Action monitors configuration.
# Each reporter can be configured to subscribe to specific actions.
action-monitors = []


[system]


[api]
# CORS allow-origins setting.
# Use '*' to allow all origins, or specify comma-separated domain patterns.
# Important for browser-based clients connecting to the API.
# Examples: *, https://example.com
allow_origins = "*"
# Whether to allow GraphQL schema introspection.
# Useful for development and debugging, but should be disabled in production.
# When disabled, GraphQL tools like GraphiQL won't be able to explore the
# schema.
# Examples: True, False
allow_graphql_schema_introspection = false
# Whether to allow OpenAPI schema introspection.
# Useful for development and debugging, but should be disabled in production.
# When disabled, Swagger UI and similar tools won't work.
# Examples: True, False
allow_openapi_schema_introspection = false
# Maximum depth of GraphQL queries allowed.
# Limits the complexity of queries to prevent abuse.
# Set to None to disable the limit.
# Examples: None, 10, 15
max_gql_query_depth = 0
# Maximum page size for GraphQL connection fields.
# Controls how many items can be retrieved in a single request.
# Set to None to use the default page size.
# Examples: None, 100, 500
max_gql_connection_page_size = 0


[redis]
# List of Redis Sentinel addresses for high availability.
# If provided, the manager will use Redis Sentinel for automatic failover.
# When using Sentinel, the addr field is ignored and service_name is required.
# Examples: None, [{'host': 'redis-sentinel', 'port': 26379}, {'host': 'redis-
# sentinel', 'port': 26380}]
sentinel = []
# Service name for Redis Sentinel.
# Required when using Redis Sentinel for high availability.
# Identifies which service to monitor for failover.
# Examples: None, mymaster, backend-ai
service_name = ""
# Password for authenticating with Redis.
# Set to None if Redis doesn't require authentication.
# Should be kept secret in production environments.
# Examples: None, REDIS_PASSWORD
password = ""


[idle]
# Enabled idle checkers.
# Comma-separated list of checker names.
# Examples: network_timeout, utilization
enabled = ""
# Timeout for app-streaming TCP connections.
# Controls how long the system waits before considering a connection idle.
# Examples: 5m, 10m
app_streaming_packet_timeout = 0


[watcher]
# Authentication token for the watcher service.
# Used to secure communication between manager and watcher.
# Should be a secure random string in production.
# Examples: None, random-secure-token
token = ""
# Timeout in seconds for file I/O operations in watcher.
# Controls how long the watcher waits for file operations to complete.
# Increase for handling large files or slow storage systems.
# Examples: 60.0, 120.0
file_io_timeout = 10


[auth]
max_password_age = 0


[metric]
# Time window for metric collection.
# Controls how often metrics are collected and reported.
# Format is a duration string like "1h" for 1 hour.
# Examples: 1m, 1h
timewindow = "1m"


[volumes]
# Default volume host for new virtual folders.
# Format is "proxy_name:volume_name".
# Used when user doesn't explicitly specify a host.
# Examples: localhost:6021, local:default, nas:main-volume
default_host = ""
# Controls what volume information is exposed to users.
# Options include "percentage" for disk usage percentage.
# Examples: ['percentage'], ['percentage', 'bytes']
exposed_volume_info = "percentage"


[resource_slots]


[otel]
# Whether to enable OpenTelemetry for tracing or logging.
# When enabled, traces or log will be collected and sent to the configured OTLP
# endpoint.
# Examples: True, False
enabled = false
# Log level for OpenTelemetry.
# Controls the verbosity of logs generated by OpenTelemetry.
# Common levels include 'debug', 'info', 'warn', 'error'.
# Examples: DEBUG, INFO, WARN, ERROR
log-level = "INFO"
# OTLP endpoint for sending traces.
# Should include the host and port of the OTLP receiver.
# Examples: localhost:4317, otel-collector:4317
endpoint = "localhost:4317"


[service_discovery]
type = ""


[db.addr]
# Host address of the service.
# Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
# all interfaces.
# Examples: 127.0.0.1
host = ""
# Port number of the service.
# Must be between 1 and 65535.
# Ports below 1024 require root/admin privileges.
# Examples: 8080
port = 0


[etcd.addr]
# Host address of the service.
# Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
# all interfaces.
# Examples: 127.0.0.1
host = ""
# Port number of the service.
# Must be between 1 and 65535.
# Ports below 1024 require root/admin privileges.
# Examples: 8080
port = 0


[manager.service-addr]
# Host address of the service.
# Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
# all interfaces.
# Examples: 127.0.0.1
host = ""
# Port number of the service.
# Must be between 1 and 65535.
# Ports below 1024 require root/admin privileges.
# Examples: 8080
port = 0


[manager.announce-addr]
# Host address of the service.
# Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
# all interfaces.
# Examples: 127.0.0.1
host = ""
# Port number of the service.
# Must be between 1 and 65535.
# Ports below 1024 require root/admin privileges.
# Examples: 8080
port = 0


[manager.announce-internal-addr]
# Host address of the service.
# Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
# all interfaces.
# Examples: 127.0.0.1
host = ""
# Port number of the service.
# Must be between 1 and 65535.
# Ports below 1024 require root/admin privileges.
# Examples: 8080
port = 0


[manager.internal-addr]
# Host address of the service.
# Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
# all interfaces.
# Examples: 127.0.0.1
host = ""
# Port number of the service.
# Must be between 1 and 65535.
# Ports below 1024 require root/admin privileges.
# Examples: 8080
port = 0


[manager.pg-advisory-config]


[manager.filelock-config]


[manager.redlock-config]


[manager.etcdlock-config]


[api.resources]
group_resource_visibility = false


[redis.addr]
host = ""
port = 0


[redis.redis_helper_config]
# Timeout in seconds for Redis socket operations.
# Controls how long operations wait before timing out.
# Increase for slow or congested networks.
# Examples: 5.0, 10.0
socket_timeout = 5.0
# Timeout in seconds for establishing Redis connections.
# Controls how long connection attempts wait before failing.
# Shorter values fail faster but may be too aggressive for some networks.
# Examples: 2.0, 5.0
socket_connect_timeout = 2.0
# Time in seconds to wait between reconnection attempts.
# Controls the polling frequency when trying to reconnect to Redis.
# Lower values reconnect faster but may increase network load.
# Examples: 0.3, 1.0
reconnect_poll_timeout = 0.3


[redis.override-configs]


[idle.checkers]


[docker.image]
auto_pull = ""


[plugins.accelerator]


[plugins.scheduler]


[plugins.agent_selector]


[plugins.network]


[network.inter_container]
# Default network driver for inter-container communication.
# 'overlay' is typically used for multi-host networking.
# Container communication performance depends on this setting.
# Examples: overlay, None
default_driver = ""
# Examples: True, False
enabled = false


[network.subnet]
# IP subnet for agent communications.
# Specifies which subnet is used for agent-to-agent and agent-to-manager
# traffic.
# Use 0.0.0.0/0 to allow all IPv4 addresses.
# Examples: 0.0.0.0/0, 192.168.0.0/24
agent = "0.0.0.0/0"
# IP subnet for containers.
# Specifies which subnet is used for container networks.
# Use 0.0.0.0/0 to allow all IPv4 addresses.
# Examples: 0.0.0.0/0, 172.17.0.0/16
container = "0.0.0.0/0"


[network.rpc]
# Examples: 60.0, 120.0
keepalive_timeout = 60.0


[metric.addr]
# Host address of the service.
# Can be a hostname, IP address, or special addresses like 0.0.0.0 to bind to
# all interfaces.
# Examples: 127.0.0.1
host = ""
# Port number of the service.
# Must be between 1 and 65535.
# Ports below 1024 require root/admin privileges.
# Examples: 8080
port = 0


[volumes.proxies]


[session.hang_tolerance.threshold]
# Maximum time a session can stay in PREPARING state before considered hung.
# Format is a duration string like "10m" for 10 minutes.
# Controls when the system will attempt recovery actions.
# Examples: None, 10m, 30m
PREPARING = ""
# Maximum time a session can stay in TERMINATING state before considered hung.
# Format is a duration string like "10m" for 10 minutes.
# Controls when the system will force-terminate the session.
# Examples: None, 10m, 30m
TERMINATING = ""


[volumes._types.user]


[volumes._types.group]
