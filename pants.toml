[GLOBAL]
pants_version = "2.12.0"
pythonpath = ["%(buildroot)s/tools/pants-plugins"]
local_execution_root_dir="%(buildroot)s/.tmp"
backend_packages = [
    "pants.backend.python",
    "pants.backend.python.lint.flake8",
    "pants.backend.python.lint.isort",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.experimental.python",
    "setupgen",
    "platform_resources",
    "towncrier_tool",
]
pants_ignore = [
    "scripts",
    "plugins",
    "docs",  # TODO: docs build config
]
# use_deprecated_directory_cli_args_semantics = false  # for 2.13 or later

[anonymous-telemetry]
enabled = false

[source]
root_patterns = [
    "/",
    "/src",
    "/stubs",
    "/tests",
    "/tools/pants-plugins",
]

[python]
enable_resolves = true
interpreter_constraints = ["CPython==3.10.5"]
lockfile_generator = "pex"

[python.resolves]
python-default = "python.lock"
python-kernel = "python-kernel.lock"

# [setup-py-generation]
# first_party_depenency_version_scheme = "exact"

# Temporarily reverted due to pantsbuild/pants#15990
[pex-cli]
version = "v2.1.94"
known_versions = [
    "v2.1.94|macos_arm64|775c22b97e057d595a8b334fab89f5a07ac9c552a36912504f62577f53a2d2d2|3802178",
    "v2.1.94|macos_x86_64|775c22b97e057d595a8b334fab89f5a07ac9c552a36912504f62577f53a2d2d2|3802178",
    "v2.1.94|linux_arm64|775c22b97e057d595a8b334fab89f5a07ac9c552a36912504f62577f53a2d2d2|3802178",
    "v2.1.94|linux_x86_64|775c22b97e057d595a8b334fab89f5a07ac9c552a36912504f62577f53a2d2d2|3802178",
]
# When trying a new pex version, you could find out the hash and size-in-bytes as follows:
# $ curl -s -L https://github.com/pantsbuild/pex/releases/download/v2.1.94/pex | tee >(wc -c) >(shasum -a 256) >/dev/null

[flake8]
version = "flake8>=4.0"
extra_requirements.add = [
    "flake8-commas>=2.1",
    "setuptools>=60.0",
]
lockfile = "tools/flake8.lock"

[isort]
lockfile = "tools/isort.lock"

[pytest]
version = "pytest>=7.0"
extra_requirements.add = [
    "pytest-asyncio>=0.18",
    "pytest-aiohttp>=1.0.4",
    "pytest-dependency>=0.5.1",
    "pytest-mock>=3.5.0",
    "aioresponses>=0.7.3",
]
args = ["-v", "-m", "'not integration'"]
lockfile = "tools/pytest.lock"
execution_slot_var = "BACKEND_TEST_EXEC_SLOT"
timeout_default = 300

[mypy]
version = "mypy>=0.950"
extra_requirements.add = [
]
lockfile = "tools/mypy.lock"

[towncrier]
version = "towncrier>=21.9"
extra_requirements.add = [
]
lockfile = "tools/towncrier.lock"
