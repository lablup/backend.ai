[GLOBAL]
pants_version = "2.16.0.dev5"
pythonpath = ["%(buildroot)s/tools/pants-plugins"]
local_execution_root_dir="%(buildroot)s/.tmp"
backend_packages = [
    "pants.backend.python",
    "pants.backend.python.lint.black",
    "pants.backend.python.lint.flake8",
    "pants.backend.python.lint.isort",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.experimental.python",
    "pants.backend.plugin_development",
    "setupgen",
    "platform_resources",
    "towncrier_tool",
]
pants_ignore = [
    "scripts",
    "plugins",
    "docs",  # TODO: docs build config
    "*.log"
]

[anonymous-telemetry]
enabled = false

[source]
root_patterns = [
    "/",
    "/src",
    "/stubs",
    "/tests",
    "/tools/pants-plugins",
]

[python]
enable_resolves = true
# When changing this main Python version:
# * Update and commit:
#   - Regenerate lockfiles
#   - pyproject.toml: [tool.mypy].python_executable
# * Let other developers do:
#   - Run `./pants export` again
#   - Update their local IDE/editor's interpreter path configurations
interpreter_constraints = ["CPython==3.10.9"]
tailor_pex_binary_targets = false
resolves_to_interpreter_constraints = "{'python-kernel': ['==3.10.*'], 'pants-plugins': ['==3.9.*']}"

[python-bootstrap]
search_path = ["<PYENV>"]

[python-repos]
indexes = ["https://dist.backend.ai/pypi/simple/", "https://pypi.org/simple/"]

[python.resolves]
python-default = "python.lock"
python-kernel = "python-kernel.lock"
pants-plugins = "tools/pants-plugins.lock"

# [setup-py-generation]
# first_party_depenency_version_scheme = "exact"

# [pex-cli]
# version = "v2.1.99"
# known_versions = [
#     "v2.1.99|macos_arm64|7e00a1d81a43fb913085182b2eba2f3b61822dd99fe1ddd0931aa824959a759f|3811337",
#     "v2.1.99|macos_x86_64|7e00a1d81a43fb913085182b2eba2f3b61822dd99fe1ddd0931aa824959a759f|3811337",
#     "v2.1.99|linux_arm64|7e00a1d81a43fb913085182b2eba2f3b61822dd99fe1ddd0931aa824959a759f|3811337",
#     "v2.1.99|linux_x86_64|7e00a1d81a43fb913085182b2eba2f3b61822dd99fe1ddd0931aa824959a759f|3811337",
# ]
# When trying a new pex version, you could find out the hash and size-in-bytes as follows:
# $ curl -s -L https://github.com/pantsbuild/pex/releases/download/v2.1.99/pex | tee >(wc -c) >(shasum -a 256) >/dev/null

[black]
version = "black~=22.6"
interpreter_constraints = ["CPython>=3.10,<4"]
lockfile = "tools/black.lock"

[flake8]
version = "flake8>=4.0.1"
extra_requirements.add = [
    "setuptools>=60.0",
]
lockfile = "tools/flake8.lock"

[isort]
lockfile = "tools/isort.lock"
interpreter_constraints = ["CPython>=3.10,<4"]

[pytest]
version = "pytest>=7.1.2"
extra_requirements.add = [
    "pytest-asyncio>=0.19",
    "pytest-aiohttp>=1.0.4",
    "pytest-custom_exit_code>=0.3.0",
    "pytest-dependency>=0.5.1",
    "pytest-mock>=3.8.2",
    "aioresponses>=0.7.3",
]
args = ["-v", "--suppress-no-test-exit-code"]
lockfile = "tools/pytest.lock"
execution_slot_var = "BACKEND_TEST_EXEC_SLOT"

[coverage-py]
version = "coverage[toml]>=6.4,<7.0"
interpreter_constraints = ["CPython>=3.10,<4"]
report = ["xml", "console"]
lockfile = "tools/coverage-py.lock"

[mypy]
version = "mypy==1.0.0"
interpreter_constraints = ["CPython>=3.10,<4"]
extra_requirements.add = [
]
lockfile = "tools/mypy.lock"

[towncrier]
version = "towncrier>=21.9"
extra_requirements.add = [
]
lockfile = "tools/towncrier.lock"
