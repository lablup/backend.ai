[GLOBAL]
pants_version = "2.21.0"
pythonpath = ["%(buildroot)s/tools/pants-plugins"]
backend_packages = [
    "pants.backend.python",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.shell",
    "pants.backend.experimental.python",
    "pants.backend.experimental.python.lint.ruff.check",
    "pants.backend.experimental.python.lint.ruff.format",
    "pants.backend.experimental.visibility",
    "pants.backend.plugin_development",
    "setupgen",
    "platform_resources",
    "scie",
    "towncrier_tool",
]
pants_ignore = [
    ".*/",
    "/dist/",
    "__pycache__",
    "*~",  # vim swap/backup files
    "/scripts/",
    "/plugins/",
    "/docs/",  # TODO: docs build config
    "*.log",
    "/tools/pants-plugins",
]
build_file_prelude_globs = ["tools/build-macros.py"]

[anonymous-telemetry]
enabled = false

[source]
root_patterns = [
    "/",
    "/src",
    "/stubs",
    "/tools/pants-plugins",
]

[test]
extra_env_vars = ["BACKEND_BUILD_ROOT=%(buildroot)s", "HOME"]
attempts_default = 3

[python]
enable_resolves = true
# When changing this main Python version:
# * Update and commit:
#   - Regenerate lockfiles
#   - pyproject.toml: [tool.mypy].python_executable
# * Let other developers do:
#   - Run `pants export` again
#   - Update their local IDE/editor's interpreter path configurations
interpreter_constraints = ["CPython==3.12.4"]
tailor_pex_binary_targets = false
pip_version = "24.1.2"

[python-bootstrap]
search_path = ["<PYENV>"]

[python-infer]
use_rust_parser = true

[python-repos]
indexes = ["https://dist.backend.ai/pypi/simple/", "https://pypi.org/simple/"]
find_links = ["file://%(buildroot)s/wheelhouse"]

[python.resolves]
python-default = "python.lock"
python-kernel = "python-kernel.lock"
pants-plugins = "tools/pants-plugins.lock"
black = "tools/black.lock"
ruff = "tools/ruff.lock"
pytest = "tools/pytest.lock"
coverage-py = "tools/coverage-py.lock"
mypy = "tools/mypy.lock"
towncrier = "tools/towncrier.lock"
setuptools = "tools/setuptools.lock"

# [setup-py-generation]
# first_party_depenency_version_scheme = "exact"

[pex-cli]
# Pants 2.21.0 uses Pex 2.3.1 by default.
version = "v2.10.0"
known_versions = [
    "v2.10.0|macos_arm64|de2e75c6528009051331e81e57cf05d460d0a8a3411fa9cd0b7b0ffb5d3fc23e|4170525",
    "v2.10.0|macos_x86_64|de2e75c6528009051331e81e57cf05d460d0a8a3411fa9cd0b7b0ffb5d3fc23e|4170525",
    "v2.10.0|linux_arm64|de2e75c6528009051331e81e57cf05d460d0a8a3411fa9cd0b7b0ffb5d3fc23e|4170525",
    "v2.10.0|linux_x86_64|de2e75c6528009051331e81e57cf05d460d0a8a3411fa9cd0b7b0ffb5d3fc23e|4170525",
]
# When trying a new pex version, you could find out the hash and size-in-bytes as follows:
# $ curl -s -L https://github.com/pantsbuild/pex/releases/download/v2.1.99/pex | tee >(wc -c) >(shasum -a 256) >/dev/null

[black]
install_from_resolve = "black"

[ruff]
install_from_resolve = "ruff"

[pytest]
install_from_resolve = "pytest"
args = ["-v", "--suppress-no-test-exit-code"]
execution_slot_var = "BACKEND_TEST_EXEC_SLOT"

[coverage-py]
install_from_resolve = "coverage-py"
report = ["xml", "console"]

[mypy]
install_from_resolve = "mypy"

[towncrier]
install_from_resolve = "towncrier"

[setuptools]
install_from_resolve = "setuptools"
