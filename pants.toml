[GLOBAL]
pants_version = "2.27.0"
pythonpath = ["%(buildroot)s/tools/pants-plugins"]
backend_packages = [
    "pants.backend.python",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.shell",
    "pants.backend.experimental.python",
    "pants.backend.experimental.python.lint.ruff.check",
    "pants.backend.experimental.python.lint.ruff.format",
    "pants.backend.experimental.visibility",
    "pants.backend.plugin_development",
    "setupgen",
    "platform_resources",
]
pants_ignore = [
    ".*/",
    "/dist/",
    "__pycache__",
    "*~",  # vim swap/backup files
    "/scripts/",
    "/plugins/",
    "/docs/",  # TODO: docs build config
    "*.log",
    "/tools/pants-plugins",
    "/wheelhouse/*/",
    "/wheelhouse/*.whl",
]
build_file_prelude_globs = ["tools/build-macros.py"]

[anonymous-telemetry]
enabled = false

[source]
root_patterns = [
    "/",
    "/src",
    "/stubs",
    "/tools/pants-plugins",
]

[test]
extra_env_vars = ["BACKEND_BUILD_ROOT=%(buildroot)s", "HOME"]
attempts_default = 3
timeout_default = 180

[python]
enable_resolves = true
# When changing this main Python version:
# * Update and commit:
#   - Regenerate lockfiles
#   - pyproject.toml: [tool.mypy].python_executable
# * Let other developers do:
#   - Run `pants export` again
#   - Update their local IDE/editor's interpreter path configurations
interpreter_constraints = ["CPython==3.13.7"]
tailor_pex_binary_targets = false
pip_version = "25.2"

[python-bootstrap]
search_path = ["<PYENV>"]

[python-infer]
use_rust_parser = true

[python-repos]
indexes = ["https://dist.backend.ai/pypi/simple/", "https://pypi.org/simple/"]
find_links = ["file://%(buildroot)s/wheelhouse"]

[python.resolves]
python-default = "python.lock"
python-kernel = "python-kernel.lock"
pants-plugins = "tools/pants-plugins.lock"
black = "tools/black.lock"
pytest = "tools/pytest.lock"
coverage-py = "tools/coverage-py.lock"
mypy = "tools/mypy.lock"
towncrier = "tools/towncrier.lock"
setuptools = "tools/setuptools.lock"

[export]
bin = [
    "ruff",
]

# [setup-py-generation]
# first_party_depenency_version_scheme = "exact"

[pex-cli]
# Pants 2.27 uses PEX 2.33.2 by default.
# Pin the PEX version to get benefits from a-scie/lift#116.
version = "v2.50.4"
known_versions = [
    "v2.50.4|macos_arm64|7b7be5cee59a6515d15751e6467317d272f671e9a8adcf2125c073e00ff27a84|4774138",
    "v2.50.4|macos_x86_64|7b7be5cee59a6515d15751e6467317d272f671e9a8adcf2125c073e00ff27a84|4774138",
    "v2.50.4|linux_arm64|7b7be5cee59a6515d15751e6467317d272f671e9a8adcf2125c073e00ff27a84|4774138",
    "v2.50.4|linux_x86_64|7b7be5cee59a6515d15751e6467317d272f671e9a8adcf2125c073e00ff27a84|4774138",
]
# When trying a new pex version, you could find out the hash and size-in-bytes as follows:
# $ curl -s -L https://github.com/pantsbuild/pex/releases/download/v2.28.1/pex | tee >(wc -c) >(shasum -a 256) >/dev/null
# As of PEX v2.18, the GitHub release descriptions include the checksum and size for reference.

[black]
install_from_resolve = "black"

[ruff]
version = "0.14.0"
# take tar.gz files and their checksums from the GitHub release (darwin and linux-musl)
known_versions = [
    "0.14.0|macos_arm64|0b7c193d5c45eda02226720eb75239fabeca995d5a0eb3830fd2973caa3030ec|12364514",
    "0.14.0|macos_x86_64|880ae046b435eb306cd557a7481eed6da463b85f283ba1f2c1e2ad7c139ed6c5|13149751",
    "0.14.0|linux_arm64|34a25398f03e7d32a4ec406c5c841c6e183fa0a96fbdd40b7e7eec1f177b360e|12465179",
    "0.14.0|linux_x86_64|ed6d1b8407a1d228dc332fb19057e86e04a6cd3c2beacdb324ad6ff2a3f9071b|13647531",
]

[pytest]
install_from_resolve = "pytest"
args = ["-v", "--suppress-no-test-exit-code"]
execution_slot_var = "BACKEND_TEST_EXEC_SLOT"

[coverage-py]
install_from_resolve = "coverage-py"
report = ["xml", "console"]

[mypy]
install_from_resolve = "mypy"

[setuptools]
install_from_resolve = "setuptools"
