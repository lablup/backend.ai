[GLOBAL]
pants_version = "2.17.0"
pythonpath = ["%(buildroot)s/tools/pants-plugins"]
backend_packages = [
    "pants.backend.python",
    "pants.backend.python.lint.black",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.experimental.python",
    "pants.backend.experimental.python.lint.ruff",
    "pants.backend.experimental.visibility",
    "pants.backend.plugin_development",
    "setupgen",
    "platform_resources",
    "towncrier_tool",
]
pants_ignore = [
    ".*/",
    "/dist/",
    "__pycache__",
    "*~",  # vim swap/backup files
    "/scripts/",
    "/plugins/",
    "/docs/",  # TODO: docs build config
    "*.log",
    "/tools/pants-plugins",
]
build_file_prelude_globs = ["tools/build-macros.py"]

[anonymous-telemetry]
enabled = false

[source]
root_patterns = [
    "/",
    "/src",
    "/stubs",
    "/tests",
    "/tools/pants-plugins",
]

[test]
extra_env_vars = ["BACKEND_BUILD_ROOT=%(buildroot)s"]

[python]
enable_resolves = true
# When changing this main Python version:
# * Update and commit:
#   - Regenerate lockfiles
#   - pyproject.toml: [tool.mypy].python_executable
# * Let other developers do:
#   - Run `./pants export` again
#   - Update their local IDE/editor's interpreter path configurations
interpreter_constraints = ["CPython==3.11.6"]
tailor_pex_binary_targets = false

[python-bootstrap]
search_path = ["<PYENV_LOCAL>", "<ASDF_LOCAL>", "<PYENV>", "<ASDF>"]

[python-infer]
use_rust_parser = true

[python-repos]
indexes = ["https://dist.backend.ai/pypi/simple/", "https://pypi.org/simple/"]

[python.resolves]
python-default = "python.lock"
python-kernel = "python-kernel.lock"
pants-plugins = "tools/pants-plugins.lock"
black = "tools/black.lock"
ruff = "tools/ruff.lock"
pytest = "tools/pytest.lock"
coverage-py = "tools/coverage-py.lock"
mypy = "tools/mypy.lock"
towncrier = "tools/towncrier.lock"

# [setup-py-generation]
# first_party_depenency_version_scheme = "exact"

[pex-cli]
version = "v2.1.148"
known_versions = [
    "v2.1.148|macos_arm64|5b1dee5a89fff25747753e917f96b8707ea62eed404d037d5f8cf8f2e80a13b7|4197604",
    "v2.1.148|macos_x86_64|5b1dee5a89fff25747753e917f96b8707ea62eed404d037d5f8cf8f2e80a13b7|4197604",
    "v2.1.148|linux_arm64|5b1dee5a89fff25747753e917f96b8707ea62eed404d037d5f8cf8f2e80a13b7|4197604",
    "v2.1.148|linux_x86_64|5b1dee5a89fff25747753e917f96b8707ea62eed404d037d5f8cf8f2e80a13b7|4197604",
]
# When trying a new pex version, you could find out the hash and size-in-bytes as follows:
# $ curl -s -L https://github.com/pantsbuild/pex/releases/download/v2.1.99/pex | tee >(wc -c) >(shasum -a 256) >/dev/null

[black]
install_from_resolve = "black"
interpreter_constraints = ["CPython==3.11.6"]  # don't know why this is required... (maybe a Pants bug?)

[ruff]
install_from_resolve = "ruff"

[pytest]
install_from_resolve = "pytest"
args = ["-v", "--suppress-no-test-exit-code"]
execution_slot_var = "BACKEND_TEST_EXEC_SLOT"

[coverage-py]
install_from_resolve = "coverage-py"
report = ["xml", "console"]

[mypy]
install_from_resolve = "mypy"

[towncrier]
install_from_resolve = "towncrier"
