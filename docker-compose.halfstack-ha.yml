version: "2.4"

services:

  backendai-half-db:
    image: postgres:15.1-alpine
    command: postgres -c 'max_connections=256'
    networks:
      - half
    ports:
      - "8100:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-develove}
      - POSTGRES_DB=${POSTGRES_DBNAME:-backend}
    volumes:
      - "./tmp/backend.ai-halfstack-ha/postgres-data:/var/lib/postgresql/data:rw"

  # Initial master is redis-node01.
  backendai-half-redis-node01:
    image: redis:7.0.5-alpine
    hostname: node01
    networks:
    - half
    ports:
    - 0.0.0.0:${REDIS_MASTER_PORT}:${REDIS_MASTER_PORT}
    command: >
      redis-server
      --port ${REDIS_MASTER_PORT}
      --requirepass ${REDIS_PASSWORD:-develove}
      --masterauth ${REDIS_PASSWORD:-develove}
      --replica-announce-ip node01
      --replica-announce-port ${REDIS_MASTER_PORT}
      --min-slaves-to-write 1
      --min-slaves-max-lag 10
    # IMPORTANT: We have INTENTIONALLY OMITTED the healthchecks
    # because it interferes with pause/unpause of container to simulate
    # network partitioning.

  backendai-half-redis-node02:
    image: redis:7.0.5-alpine
    hostname: node02
    networks:
    - half
    ports:
    - 0.0.0.0:${REDIS_SLAVE1_PORT}:${REDIS_SLAVE1_PORT}
    command: >
      redis-server
      --port ${REDIS_SLAVE1_PORT}
      --requirepass ${REDIS_PASSWORD:-develove}
      --masterauth ${REDIS_PASSWORD:-develove}
      --slaveof node01 ${REDIS_MASTER_PORT}
      --replica-announce-ip node02
      --replica-announce-port ${REDIS_SLAVE1_PORT}
      --min-slaves-to-write 1
      --min-slaves-max-lag 10

  backendai-half-redis-node03:
    image: redis:7.0.5-alpine
    hostname: node03
    ports:
    - 0.0.0.0:${REDIS_SLAVE2_PORT}:${REDIS_SLAVE2_PORT}
    networks:
    - half
    command: >
      redis-server
      --port ${REDIS_SLAVE2_PORT}
      --requirepass ${REDIS_PASSWORD:-develove}
      --masterauth ${REDIS_PASSWORD:-develove}
      --slaveof node01 ${REDIS_MASTER_PORT}
      --replica-announce-ip node03
      --replica-announce-port ${REDIS_SLAVE2_PORT}
      --min-slaves-to-write 1
      --min-slaves-max-lag 10

  backendai-half-redis-sentinel01:
    image: redis:7.0.5-alpine
    hostname: sentinel01
    networks:
    - half
    volumes:
    - type: bind
      source: ${COMPOSE_PATH}
      target: /config
    ports:
    - 0.0.0.0:${REDIS_SENTINEL1_PORT}:${REDIS_SENTINEL1_PORT}
    depends_on:
    - backendai-half-redis-node01
    - backendai-half-redis-node02
    - backendai-half-redis-node03
    command: >
      redis-sentinel /config/sentinel01.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-develove}

  backendai-half-redis-sentinel02:
    image: redis:7.0.5-alpine
    hostname: sentinel02
    networks:
    - half
    volumes:
    - type: bind
      source: ${COMPOSE_PATH}
      target: /config
    ports:
    - 0.0.0.0:${REDIS_SENTINEL2_PORT}:${REDIS_SENTINEL2_PORT}
    depends_on:
    - backendai-half-redis-node01
    - backendai-half-redis-node02
    - backendai-half-redis-node03
    command: >
      redis-sentinel /config/sentinel02.conf
    environment:
    - REDIS_PASSWORD=${REDIS_PASSWORD:-develove}

  backendai-half-redis-sentinel03:
    image: redis:7.0.5-alpine
    hostname: sentinel03
    networks:
    - half
    volumes:
    - type: bind
      source: ${COMPOSE_PATH}
      target: /config
    ports:
    - 0.0.0.0:${REDIS_SENTINEL3_PORT}:${REDIS_SENTINEL3_PORT}
    depends_on:
    - backendai-half-redis-node01
    - backendai-half-redis-node02
    - backendai-half-redis-node03
    command: >
      redis-sentinel /config/sentinel03.conf
    environment:
    - REDIS_PASSWORD=${REDIS_PASSWORD:-develove}

  backendai-half-etcd-proxy:
    image: quay.io/coreos/etcd:v3.5.4
    depends_on:
      - "backendai-half-etcd-node01"
      - "backendai-half-etcd-node02"
      - "backendai-half-etcd-node03"
    networks:
      - half
    ports:
      - "8220:2379"
    environment:
      - ENDPOINTS=backendai-half-etcd-node01:2379,backendai-half-etcd-node02:2379,backendai-half-etcd-node03:2379
    command: >
      sh -c
      "/usr/local/bin/etcd grpc-proxy start
      --endpoints=$${ENDPOINTS}
      --listen-addr=0.0.0.0:2379"

  backendai-half-etcd-node01:
    image: quay.io/coreos/etcd:v3.5.4
    volumes:
      - "./tmp/backend.ai-halfstack-ha/etcd01-data:/etcd-data:rw"
    networks:
      - half
    environment:
      - MYSELF=backendai-half-etcd-node01
      - CLUSTER=etcd-node01=http://backendai-half-etcd-node01:2380,etcd-node02=http://backendai-half-etcd-node02:2380,etcd-node03=http://backendai-half-etcd-node03:2380
      - TOKEN=backendai-etcd-token
      - STATE=new
    command: >
      sh -c
      "/usr/local/bin/etcd
      --name etcd-node01
      --data-dir /etcd-data
      --listen-client-urls http://0.0.0.0:2379
      --listen-peer-urls http://0.0.0.0:2380
      --advertise-client-urls http://$${MYSELF}:2379
      --initial-advertise-peer-urls http://$${MYSELF}:2380
      --initial-cluster $${CLUSTER}
      --initial-cluster-token $${TOKEN}
      --initial-cluster-state $${STATE}"

  backendai-half-etcd-node02:
    image: quay.io/coreos/etcd:v3.5.4
    volumes:
      - "./tmp/backend.ai-halfstack-ha/etcd02-data:/etcd-data:rw"
    networks:
      - half
    environment:
      - MYSELF=backendai-half-etcd-node02
      - CLUSTER=etcd-node01=http://backendai-half-etcd-node01:2380,etcd-node02=http://backendai-half-etcd-node02:2380,etcd-node03=http://backendai-half-etcd-node03:2380
      - TOKEN=backendai-etcd-token
      - STATE=new
    command: >
      sh -c
      "/usr/local/bin/etcd
      --name etcd-node02
      --data-dir /etcd-data
      --listen-client-urls http://0.0.0.0:2379
      --listen-peer-urls http://0.0.0.0:2380
      --advertise-client-urls http://$${MYSELF}:2379
      --initial-advertise-peer-urls http://$${MYSELF}:2380
      --initial-cluster $${CLUSTER}
      --initial-cluster-token $${TOKEN}
      --initial-cluster-state $${STATE}"

  backendai-half-etcd-node03:
    image: quay.io/coreos/etcd:v3.5.4
    volumes:
      - "./tmp/backend.ai-halfstack-ha/etcd03-data:/etcd-data:rw"
    networks:
      - half
    environment:
      - MYSELF=backendai-half-etcd-node03
      - CLUSTER=etcd-node01=http://backendai-half-etcd-node01:2380,etcd-node02=http://backendai-half-etcd-node02:2380,etcd-node03=http://backendai-half-etcd-node03:2380
      - TOKEN=backendai-etcd-token
      - STATE=new
    command: >
      sh -c
      "/usr/local/bin/etcd
      --name etcd-node03
      --data-dir /etcd-data
      --listen-client-urls http://0.0.0.0:2379
      --listen-peer-urls http://0.0.0.0:2380
      --advertise-client-urls http://$${MYSELF}:2379
      --initial-advertise-peer-urls http://$${MYSELF}:2380
      --initial-cluster $${CLUSTER}
      --initial-cluster-token $${TOKEN}
      --initial-cluster-state $${STATE}"

networks:
  half:
