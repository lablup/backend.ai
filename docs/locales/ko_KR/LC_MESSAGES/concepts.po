# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, Lablup Inc.
# This file is distributed under the same license as the Backend.AI API
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI API Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-08 23:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../concepts/api-overview.rst:2
msgid "API Overview"
msgstr "API 개괄"

#: ../../concepts/api-overview.rst:4
msgid "Backend.AI API v3 consists of two parts: User APIs and Admin APIs."
msgstr "Backend.AI API v3는 두 가지로 구성 되어있습니다: 사용자 API와 관리자 API."

#: ../../concepts/api-overview.rst:8
msgid ""
"APIv3 breaks backward compatibility a lot, and we will primarily support "
"v3 after June 2017. Please upgrade your clients immediately."
msgstr ""
"API v3는 하위 호환성이 많이 떨어져서 2017년 6월 이후로 주로 보충할 예정입니다."
"클라이언트를 바로 업그레이드 시켜주시기 바랍니다."

#: ../../concepts/api-overview.rst:12
msgid "API KeyPair Registration"
msgstr "API 키페어 생성"

#: ../../concepts/api-overview.rst:14
msgid ""
"For managed, best-experience service, you may register to our cloud "
"version of Backend.AI API service instead of installing it to your own "
"machines. Simply create an account at `cloud.backend.ai "
"<https://cloud.backend.ai>`_ and generate a new API keypair. You may also"
" use social accounts for log-ins such as Twitter, Facebook, and GitHub."
msgstr ""
"클라우드 버전의 Backend.AI API 서비스를 설치하면 개인 장비에 설치하는 것보다 훨씬 더 용이하고 나은 서비스로 이용할 수 있습니다."
"`cloud.backend.ai <https://cloud.backend.ai>`_ 에서 계정을 만들고 새 API 키페어를 생성하세요."
"트위터, 페이스북, 깃허브와 같은 소셜 아이디로도 로그인할 수 있습니다."

#: ../../concepts/api-overview.rst:18
msgid ""
"An API keypair is composed of a 20-characters access key (``AKIA...``) "
"and a 40-characters secret key, in a similar form to AWS access keys."
msgstr ""
"API 키페어는 20 글자의 액세스 키(``AKIA...``)와 AWS액세스 키와 비슷한"
"형태인 40 글자의 시크릿 키로 구성되어 있습니다."

#: ../../concepts/api-overview.rst:20
msgid ""
"Currently, the service is BETA: it is free of charge but each user is "
"limited to have only one keypair and have up to 5 concurrent sessions for"
" a given keypair. Keep you eyes on further announcements for upgraded "
"paid plans."
msgstr ""
"현재 서비스는 베타 버전으로, 무료입니다."
"다만 1인당 1개의 키 쌍을 받고, 최대 5개의 병렬 세션을 만들 수 있습니다."
"정기 이용료에 대한 안내는 추후에 공지할 예정입니다."

#: ../../concepts/api-overview.rst:24
msgid "Accessing Admin APIs"
msgstr "관리자 API 접속하기"

#: ../../concepts/api-overview.rst:26
msgid "The admin APIs require a special keypair with the admin privilege:"
msgstr "관리자 API는 관리자 권한의 특별한 키 쌍을 요구합니다."

#: ../../concepts/api-overview.rst:28
msgid ""
"The public cloud service (``api.backend.ai``): It currently does *not* "
"offer any admin privileges to the end-users, as its functionality is "
"already available via our management console at `cloud.backend.ai "
"<https://cloud.backend.ai>`_."
msgstr ""
"공용 클라우드 서비스 (``api.backend.ai``)는 현재 사용자에게 어떠한 관리자 권한을 제공하지 않습니다."
"이미 `cloud.backend.ai <https://cloud.backend.ai>`_ 에서 매니저 콘솔을 통해 충분히 기능을"
"사용할 수 있기 때문입니다."

#: ../../concepts/api-overview.rst:29
msgid ""
"On-premise installation: You will get an auto-generated admin keypair "
"during installation."
msgstr ""
"온프레미스 설치: 설치 중에 자동 생성된 키 쌍을 받게 됩니다."

#: ../../concepts/faq.rst:2
msgid "FAQ"
msgstr ""

#: ../../concepts/faq.rst:5
msgid "vs. Notebooks"
msgstr ""

#: ../../concepts/faq.rst:9 ../../concepts/faq.rst:26 ../../concepts/faq.rst:47
msgid "Product"
msgstr ""

#: ../../concepts/faq.rst:10 ../../concepts/faq.rst:48
msgid "Role"
msgstr ""

#: ../../concepts/faq.rst:11 ../../concepts/faq.rst:49
msgid "Problem and Solution"
msgstr ""

#: ../../concepts/faq.rst:13
msgid "Apache Zeppelin, Jupyter Notebook"
msgstr "Apache Zeppelin, Jupyter Notebook"

#: ../../concepts/faq.rst:14
msgid "Notebook-style document + code *frontends*"
msgstr ""

#: ../../concepts/faq.rst:15
msgid "Insecure host resource sharing"
msgstr ""

#: ../../concepts/faq.rst:17 ../../concepts/faq.rst:34
#: ../../concepts/faq.rst:59
msgid "**Backend.AI**"
msgstr "**Backend.AI**"

#: ../../concepts/faq.rst:18
msgid "Pluggable *backend* to any frontends"
msgstr ""

#: ../../concepts/faq.rst:19
msgid "Built for multi-tenancy: scalable and better isolation"
msgstr ""

#: ../../concepts/faq.rst:22
msgid "vs. Orchestration Frameworks"
msgstr ""

#: ../../concepts/faq.rst:27
msgid "Target"
msgstr ""

#: ../../concepts/faq.rst:28
msgid "Value"
msgstr ""

#: ../../concepts/faq.rst:30
msgid "Amazon ECS, Kubernetes"
msgstr "Amazon ECS, Kubernetes"

#: ../../concepts/faq.rst:31
msgid "Long-running service daemons"
msgstr ""

#: ../../concepts/faq.rst:32
msgid "Load balancing, fault tolerance, incremental deployment"
msgstr ""

#: ../../concepts/faq.rst:35
msgid "Stateful compute sessions"
msgstr ""

#: ../../concepts/faq.rst:36
msgid "Low-cost high-density computation"
msgstr ""

#: ../../concepts/faq.rst:38
msgid "Amazon Lambda, Azure Functions"
msgstr "Amazon Lambda, Azure Functions"

#: ../../concepts/faq.rst:39
msgid "Stateless, light-weight functions"
msgstr ""

#: ../../concepts/faq.rst:40
msgid "Serverless, zero-management"
msgstr ""

#: ../../concepts/faq.rst:43
msgid "vs. Big-data and AI Frameworks"
msgstr ""

#: ../../concepts/faq.rst:51
msgid "TensorFlow, Apache Spark, Apache Hive"
msgstr "TensorFlow, Apache Spark, Apache Hive"

#: ../../concepts/faq.rst:52
msgid "Computation runtime"
msgstr ""

#: ../../concepts/faq.rst:53
msgid "Difficult to install, configure, and operate"
msgstr ""

#: ../../concepts/faq.rst:55
msgid "Amazon ML, Azure ML, GCP ML"
msgstr "Amazon ML, Azure ML, GCP ML"

#: ../../concepts/faq.rst:56
msgid "Managed MLaaS"
msgstr ""

#: ../../concepts/faq.rst:57
msgid "Still complicated for scientists, too restrictive for engineers"
msgstr ""

#: ../../concepts/faq.rst:60
msgid "Host of computation runtimes"
msgstr ""

#: ../../concepts/faq.rst:61
msgid "Pre-configured, versioned, reproducible, customizable (open-source)"
msgstr ""

#: ../../concepts/faq.rst:64
msgid ""
"(All product names and trade-marks are the properties of their respective"
" owners.)"
msgstr ""

#: ../../concepts/key-concepts.rst:6
msgid "Key Concepts"
msgstr ""

#: ../../concepts/key-concepts.rst:8
msgid ""
"Here we describe the key concepts that are required to understand and "
"follow this documentation."
msgstr ""

#: ../../concepts/key-concepts.rst:13
msgid "The diagram of a typical multi-node Backend.AI server architecture"
msgstr ""

#: ../../concepts/key-concepts.rst:15
msgid ""
":numref:`server-arch-diagram` shows a brief Backend.AI server-side "
"architecture where the components are what you need to install and "
"configure."
msgstr ""

#: ../../concepts/key-concepts.rst:17
msgid ""
"Each border-connected group of components is intended to be run on the "
"same server, but you may split them into multiple servers or merge "
"different groups into a single server as you need. For example, you can "
"run separate servers for the nginx reverse-proxy and the Backend.AI "
"manager or run both on a single server. In the [[development setup]], all"
" these components run on a single PC such as your laptop."
msgstr ""

#: ../../concepts/key-concepts.rst:22
msgid "Manager and Agents"
msgstr ""

#: ../../concepts/key-concepts.rst:23
msgid ""
":raw-html-m2r:`<span style=\"background-color:#fafafa;border:1px solid "
"#ccc;display:inline-"
"block;width:16px;height:16px;margin:0;padding:0;\"></span>`"
msgstr ""

#: ../../concepts/key-concepts.rst:25
msgid ""
"Backend.AI manager is the central governor of the cluster. It accepts "
"user requests, creates/destroys the sessions, and routes code execution "
"requests to appropriate agents and sessions. It also collects the output "
"of sessions and responds the users with them."
msgstr ""

#: ../../concepts/key-concepts.rst:29
msgid ""
"Backend.AI agent is a small daemon installed onto individual worker "
"servers to control them. It manages and monitors the lifecycle of kernel "
"containers, and also mediates the input/output of sessions. Each agent "
"also reports the resource capacity and status of its server, so that the "
"manager can assign new sessions on idle servers to load balance."
msgstr ""

#: ../../concepts/key-concepts.rst:34
msgid "Compute sessions and Kernels"
msgstr ""

#: ../../concepts/key-concepts.rst:35
msgid ""
":raw-html-m2r:`<span style=\"background-color:#c1e4f7;border:1px solid "
"#ccc;display:inline-"
"block;width:16px;height:16px;margin:0;padding:0;\"></span>` :raw-html-"
"m2r:`<span style=\"background-color:#e5f5ff;border:1px solid #ccc;display"
":inline-block;width:16px;height:16px;margin:0;padding:0;\"></span>`"
msgstr ""

#: ../../concepts/key-concepts.rst:38
msgid ""
"Backend.AI spawns compute sessions as the form of containers upon user "
"API requests. Each compute session may have one or more containers "
"(distributed across different nodes), and we call those member containers"
" \"kernels\". Such multi-container sessions are for distributed and "
"parallel computation at large scales. The agent automatically pulls and "
"updates the kernel images if needed."
msgstr ""

#: ../../concepts/key-concepts.rst:44
msgid "Cluster Networking"
msgstr ""

#: ../../concepts/key-concepts.rst:45
msgid ""
":raw-html-m2r:`<span style=\"background-color:#99d5ca;border:1px solid "
"#ccc;display:inline-"
"block;width:16px;height:16px;margin:0;padding:0;\"></span>` :raw-html-"
"m2r:`<span style=\"background-color:#202020;border:1px solid #ccc;display"
":inline-block;width:16px;height:16px;margin:0;padding:0;\"></span>`"
msgstr ""

#: ../../concepts/key-concepts.rst:48
msgid "The primary networking requirements are:"
msgstr ""

#: ../../concepts/key-concepts.rst:50
msgid ""
"The manager server (the HTTPS 443 port) should be exposed to the public "
"Internet or the network that your client can access."
msgstr ""

#: ../../concepts/key-concepts.rst:51
msgid ""
"The manager, agents, and all other database/storage servers should reside"
" at the same local private network where any traffic between them are "
"transparently allowed."
msgstr ""

#: ../../concepts/key-concepts.rst:52
msgid ""
"For high-volume big-data processing, you may want to separate the network"
" for the storage using a secondary network interface on each server, such"
" as Infiniband and RoCE adaptors."
msgstr ""

#: ../../concepts/key-concepts.rst:55
msgid "Databases"
msgstr ""

#: ../../concepts/key-concepts.rst:56
msgid ""
":raw-html-m2r:`<span style=\"background-color:#ffbbb1;border:1px solid "
"#ccc;display:inline-"
"block;width:16px;height:16px;margin:0;padding:0;\"></span>`"
msgstr ""

#: ../../concepts/key-concepts.rst:58
msgid ""
"Redis and PostgreSQL are used to keep track of liveness of agents and "
"compute sessions (which may be composed of one or more kernels). They "
"also store user metadata such as keypairs and resource usage statistics."
msgstr ""

#: ../../concepts/key-concepts.rst:62
msgid "Configuration Management"
msgstr ""

#: ../../concepts/key-concepts.rst:63
msgid ""
":raw-html-m2r:`<span style=\"background-color:#d1bcd2;border:1px solid "
"#ccc;display:inline-"
"block;width:16px;height:16px;margin:0;padding:0;\"></span>`"
msgstr ""

#: ../../concepts/key-concepts.rst:65
msgid ""
"Most cluster-level configurations are stored in an etcd server or "
"cluster. The etcd server is also used for service discovery; when new "
"agents boot up they register themselves to the cluster manager via etcd. "
"For production deployments, we recommend to use an etcd cluster composed "
"of odd (3 or higher) number of nodes to keep high availability."
msgstr ""

#: ../../concepts/key-concepts.rst:70
msgid "Virtual Folders"
msgstr ""

#: ../../concepts/key-concepts.rst:71
msgid ""
":raw-html-m2r:`<span style=\"background-color:#ffdba9;border:1px solid "
"#ccc;display:inline-"
"block;width:16px;height:16px;margin:0;padding:0;\"></span>`"
msgstr ""

#: ../../concepts/key-concepts.rst:76
msgid ""
"A conceptual diagram of virtual folders when using two NFS servers as "
"vfolder hosts"
msgstr ""

#: ../../concepts/key-concepts.rst:78
msgid ""
"As shown in :numref:`vfolder-concept-diagram`, Backend.AI abstracts "
"network storages as \"virtual folder\", which provides a cloud-like "
"private file storage to individual users. The users may create their own "
"(one or more) virtual folders to store data files, libraries, and program"
" codes. Each vfolder (virtual folder) is created under a designated "
"storage mount (called \"vfolder hosts\"). Virtual folders are mounted "
"into compute session containers at ``/home/work/{name}`` so that user "
"programs have access to the virtual folder contents like a local "
"directory. As of Backend.AI v18.12, users may also share their own "
"virtual folders with other users in differentiated permissions such as "
"read-only and read-write."
msgstr ""

#: ../../concepts/key-concepts.rst:84
msgid ""
"A Backend.AI cluster setup may use any filesystem that provides a local "
"mount point at each node (including the manager and agents) given that "
"the filesystem contents are synchronized across all nodes. The only "
"requirement is that the local mount-point must be same across all cluster"
" nodes (e.g., ``/mnt/vfroot/mynfs``). Common setups may use a centralized"
" network storage (served via NFS or SMB), but for more scalability, one "
"might want to use distributed file systems such as CephFS and GlusterFS, "
"or Alluxio that provides fast in-memory cache while backed by another "
"storage server/service such as AWS S3."
msgstr ""

#: ../../concepts/key-concepts.rst:88
msgid "For a single-node setup, you may simply use an empty local directory."
msgstr ""

#~ msgid ""
#~ "Currently, the service is BETA: it "
#~ "is free of charge but each user"
#~ " is limited to have only one "
#~ "keypair and have up to 5 "
#~ "concurrent kernel sessions for a given"
#~ " keypair. Keep you eyes on further"
#~ " announcements for upgraded paid plans."
#~ msgstr ""

#~ msgid ""
#~ "Backend.AI manager is the central "
#~ "governor of the cluster. It accepts "
#~ "user requests, creates/destroys the kernels,"
#~ " and routes code execution requests "
#~ "to appropriate agents and kernels. It"
#~ " also collects the output of kernels"
#~ " and responds the users with them."
#~ msgstr ""

#~ msgid ""
#~ "Backend.AI agent is a small daemon "
#~ "installed onto individual worker servers "
#~ "to control them. It manages and "
#~ "monitors the lifecycle of kernel "
#~ "containers, and also mediates the "
#~ "input/output of kernels. Each agent also"
#~ " reports the resource capacity and "
#~ "status of its server, so that the"
#~ " manager can assign new kernels on"
#~ " idle servers to load balance."
#~ msgstr ""

#~ msgid "Kernels (aka Compute Sessions)"
#~ msgstr ""

