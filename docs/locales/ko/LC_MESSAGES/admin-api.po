# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, Lablup Inc.
# This file is distributed under the same license as the Backend.AI API
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI API Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-14 21:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../admin-api/intro.rst:2
msgid "Introduction"
msgstr "개요"

#: ../../admin-api/intro.rst:4
msgid "Backend.AI's Admin API is for developing in-house management consoles."
msgstr "Backend.AI의 관리자 계정은 내부 관리 콘솔을 개발하는 것이 목적입니다."

#: ../../admin-api/intro.rst:6
msgid "There are two modes of operation:"
msgstr "두 가지 모드의 작업이 있습니다."

#: ../../admin-api/intro.rst:8
msgid ""
"Full admin access: you can query all information of all users. It "
"requires a privileged keypair."
msgstr "전체 관리자 접근 : 모든 사용자에 대한 모든 정보를 쿼리할 수 있습니다. 이 방법은 권한있는 키 쌍을 필요로 합니다."

#: ../../admin-api/intro.rst:10
msgid ""
"Restricted owner access: you can query only your own information. The "
"server processes your request in this mode if you use your own plain "
"keypair."
msgstr "제한된 사용자 계정 : 오직 본인의 정보에 대해서만 질문할 수 있습니다."
"만약 본인의 고유한 키 쌍을 사용한다면, 서버는 이 모드에서의 요청을 처리합니다."

#: ../../admin-api/intro.rst:15
msgid "The Admin API *only* accepts authenticated requests."
msgstr "관리자 API는 *오직* 인증된 요청들만 받아들입니다."

#: ../../admin-api/intro.rst:19
msgid ""
"To test and debug with the Admin API easily, try the proxy mode of `the "
"official Python client <https://pypi.python.org/pypi/backend.ai-"
"client>`_. It provides an insecure (non-SSL, non-authenticated) local "
"HTTP proxy where all the required authorization headers are attached from"
" the client configuration. Using this you do not have to add any custom "
"header configurations to your favorite API development tools."
msgstr "관리자 API를 쉽게 테스트하고 디버그하기 위해서는, 공식 파이썬 클라이언트 "
"<https://pypi.python.org/pypi/backend.ai-client>의 프록시 모드로 시도해보세요. "
"그것은 필요한 모든 권한 헤더가 클라이언트 방식에서 첨부되는 불안정한(SSL이 아닌, 비인증된) "
"로컬 HTTP 프록시를 제공합니다. 이를 사용하면 사용자 정의 헤더 방식을 더이상 당신의 "
"API 개발 툴에 추가할 필요가 없습니다.

#: ../../admin-api/intro.rst:24
msgid "Basics of GraphQL"
msgstr "GraphQL의 기본"

#: ../../admin-api/intro.rst:26
msgid ""
"The Admin API uses a single GraphQL endpoint for both queries and "
"mutations."
msgstr "관리자 API는 단일 GraphQL 엔드포인트를 쿼리와 뮤테이션에 사용합니다."

#: ../../admin-api/intro.rst:32
msgid ""
"For more information about GraphQL concepts and syntax, please visit the "
"following site(s):"
msgstr "GraphQL에 대한 개념과 구문에 대한 더 많은 정보를 위해서는, 다음 사이트를 방문하십시오."

#: ../../admin-api/intro.rst:34
msgid "`GraphQL official website <http://graphql.org/>`_"
msgstr "GraphQL 공식 웹사이트 <http://graphql.org/>"

#: ../../admin-api/intro.rst:38
msgid "HTTP Request Convention"
msgstr "HTTP 요청 규칙"

#: ../../admin-api/intro.rst:40
msgid ""
"A client must use the ``POST`` HTTP method. The server accepts a JSON-"
"encoded body with an object containing two fields: ``query`` and "
"``variables``, pretty much like other GraphQL server implementations."
msgstr "클라이언트는 HTTP 메소드인 POST를 사용해야 합니다. 서버는 다른 GraphQL 서버 구현과 "
"매우 유사한 ``쿼리``와 ``변수`` 두 가지 필드를 포함하는 JSON 인코딩 본문을 허용합니다."

#: ../../admin-api/intro.rst:46
msgid ""
"Currently the API gateway does not support schema discovery which is "
"often used by API development tools such as Insomnia and GraphiQL."
msgstr "현재 API 게이트웨이는 Insomina와 GraphiQL과 같은 API 개발 도구에서 "
"자주 사용되는 스키마 검색을 지원하지 않습니다."

#: ../../admin-api/intro.rst:51
msgid "Field Naming Convention"
msgstr "필드 명명 규칙"

#: ../../admin-api/intro.rst:53
msgid ""
"We do *NOT* automatically camel-case our field names. All field names "
"follow the underscore style, which is common in the Python world as our "
"server-side framework uses Python."
msgstr "필드 네임을 자동으로 대문자로 만들지 않습니다. 서버 측의 프레임 워크가 파이썬을 "
"사용하기 때문에 모든 필드 네임은 파이썬 상에서 일반적인 밑줄 스타일을 따릅니다."

#: ../../admin-api/intro.rst:59
msgid "Pagination Convention"
msgstr "페이지 번호 규칙"

#: ../../admin-api/intro.rst:61
msgid ""
"GraphQL itself does not enforce how to pass pagination information when "
"querying multiple objects of the same type."
msgstr "GraphQL 자체는 동일 유형의 다수 객체들에게 질문할 때, 페이지 번호 정보를"
"전달하는 방법을 강요하지 않습니다."

#: ../../admin-api/intro.rst:64
msgid "We use a de-facto standard pagination convention as described below:"
msgstr "아래에 설명 된대로 실질적인 표준 페이지 번호 규칙을 사용합니다."

#: ../../admin-api/intro.rst:66 ../../admin-api/stats.rst:10
#: ../../admin-api/stats.rst:19
msgid "TODO"
msgstr "할 일"

#: ../../admin-api/intro.rst:69
msgid "Custom Scalar Types"
msgstr "커스텀 스칼라 타입"

#: ../../admin-api/intro.rst:71
msgid ""
"``UUID``: A hexademically formatted (8-4-4-4-12 alphanumeric characters "
"connected via single hyphens) UUID values represented as ``String``"
msgstr "범용 고유 식별자 : ``문자열``로 표시되는 16진수 형식의 범용 고유 식별자 값"
"(단일 하이픈으로 연결된 8-4-4-4-12 영숫자)"

#: ../../admin-api/intro.rst:72
msgid ""
"``DateTime``: An ISO-8601 formatted date-time value represented as "
"``String``"
msgstr "``DateTime`` : ``문자열``로 표시되는 ISO-8601 형식의 날짜-시간 값"

#: ../../admin-api/intro.rst:76
msgid "Authentication"
msgstr "인증"

#: ../../admin-api/intro.rst:78
msgid "The admin API shares the same authentication method of the user API."
msgstr "관리자 API는 사용자 API와 같은 인증 방법을 공유한다."

#: ../../admin-api/intro.rst:82
msgid "Versioning"
msgstr "버전관리"

#: ../../admin-api/intro.rst:84
msgid ""
"As we use GraphQL, there is no explicit versioning. You can use any "
"version prefix in the endpoint URL, from ``v1`` to ``vN`` where ``N`` is "
"the latest major API version."
msgstr "GraphQL을 사용하기 때문에, 분명한 버전은 없습니다. ``v1``에서 ``vN``까지의 "
"엔드포인트 URL 버전 중 어떤 것을 사용해도 괜찮습니다. 여기서 ``N``은 가장 최신 API 버전입니다."

#: ../../admin-api/keypairs.rst:2
msgid "KeyPair Management"
msgstr "키 쌍 관리"

#: ../../admin-api/keypairs.rst:5 ../../admin-api/sessions.rst:5
#: ../../admin-api/stats.rst:5 ../../admin-api/vfolders.rst:5
msgid "Full Admin"
msgstr "전체 관리자"

#: ../../admin-api/keypairs.rst:8 ../../admin-api/keypairs.rst:74
#: ../../admin-api/sessions.rst:8 ../../admin-api/sessions.rst:72
#: ../../admin-api/stats.rst:8 ../../admin-api/stats.rst:17
#: ../../admin-api/vfolders.rst:8 ../../admin-api/vfolders.rst:34
msgid "Query Schema"
msgstr "쿼리 스키마"

#: ../../admin-api/keypairs.rst:35 ../../admin-api/keypairs.rst:88
msgid "Mutation Schema"
msgstr "뮤테이션 스키마"

#: ../../admin-api/keypairs.rst:71 ../../admin-api/sessions.rst:69
#: ../../admin-api/stats.rst:14 ../../admin-api/vfolders.rst:31
msgid "Restricted Owner Access"
msgstr "제한된 소유자 접근"

#: ../../admin-api/keypairs.rst:76
msgid ""
"It shares the same ``KeyPair`` type, but you cannot use ``user_id`` "
"argument in the root query because the client can only query the keypair "
"that is being used to make this API query. Also the returned value is "
"always a single object."
msgstr "클라이언트가 오직 이 API 쿼리를 만드는 데에 사용된 키 쌍만 질문할 수 있기 때문에 "
"같은 ``KeyPair`` 타입을 공유해도, ``user_id`` 인수를 사용할 수는 없습니다."

#: ../../admin-api/keypairs.rst:90
msgid "There is no mutations available."
msgstr "사용 가능한 뮤테이션이 없습니다."

#: ../../admin-api/sessions.rst:2
msgid "Compute Session Monitoring"
msgstr "컴퓨팅 세션 모니터링"

#: ../../admin-api/sessions.rst:74
msgid ""
"It shares the same ``ComputeSession`` and ``ComputeWorker`` type, but "
"with a slightly different root query type:"
msgstr "동일한 ``ComputeSession``과 ``ComputeWorker`` 타입을 공유하지만, "
"루트 쿼리 타입과는 약간 다릅니다."

#: ../../admin-api/stats.rst:2
msgid "Statistics"
msgstr "통계"

#: ../../admin-api/vfolders.rst:2
msgid "Virtual Folder Management"
msgstr "가상 폴더 관리"

#: ../../admin-api/vfolders.rst:36
msgid ""
"It shares the same ``VirtualFolder`` type, but you cannot use "
"``access_key`` argument in the root query."
msgstr "같은 ``가상파일`` 타입을 공유하지만 루트 쿼리에서 "
"``access_key``인수를 사용할 수는 없습니다."

