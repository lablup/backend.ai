# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2022, Lablup Inc.
# This file is distributed under the same license as the Backend.AI
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Documentation 22.06\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-25 14:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../dev/daily-workflows.rst:2 4dc3ad146177489b9da88543a69a522f
msgid "Daily Development Workflows"
msgstr ""

#: ../../dev/daily-workflows.rst:5 895a2fdc5d2c4ca68e54a912508a2b69
msgid "About Pants"
msgstr ""

#: ../../dev/daily-workflows.rst:7 9259067439e94d93bd1777aea8b97b64
msgid ""
"Since 22.09, we have migrated to `Pants <https://pantsbuild.org>`_ as our"
" primary build system and dependency manager for the mono-repository of "
"Python components."
msgstr ""

#: ../../dev/daily-workflows.rst:11 e2500829abf2405494c536b2f75086f2
msgid ""
"Pants is a graph-based async-parallel task executor written in Rust and "
"Python. It is tailored to building programs with explicit and auto-"
"inferred dependency checks and aggressive caching."
msgstr ""

#: ../../dev/daily-workflows.rst:16 48f8a8c1422249b8a4c218e9abc7353b
msgid "Key concepts"
msgstr ""

#: ../../dev/daily-workflows.rst:18 44a3b31768d14034ab11e841bce4cf63
msgid "The command pattern:"
msgstr ""

#: ../../dev/daily-workflows.rst:26 159785b653644829b4ae44a0cf0c46d5
msgid ""
"If your ``scripts/install-dev.sh`` says that you need to use ``./pants-"
"local`` instead of ``./pants``, replace all ``./pants`` in the following "
"command examples with ``./pants-local``."
msgstr ""

#: ../../dev/daily-workflows.rst:30 4b80a71b168347729a4874f7962efe2b
msgid "Goal: an action to execute"
msgstr ""

#: ../../dev/daily-workflows.rst:32 7a0a87b7b1824ca3b11dc429ad939733
msgid "You may think this as the root node of the task graph executed by Pants."
msgstr ""

#: ../../dev/daily-workflows.rst:34 53d0e7e35c8e432799974afed8125cc2
msgid ""
"Target: objectives for the action, usually expressed as "
"``path/to/dir:name``"
msgstr ""

#: ../../dev/daily-workflows.rst:36 1a1de3eb82f44d1380f45c0f2736b31a
msgid "The targets are declared/defined by ``path/to/dir/BUILD`` files."
msgstr ""

#: ../../dev/daily-workflows.rst:38 78a6d0d65aa14323a71087e2d6bf9db4
msgid "The global configuration is at ``pants.toml``."
msgstr ""

#: ../../dev/daily-workflows.rst:40 df3340b8fed94055b25aec9bcf9880ca
msgid "Recommended reading: https://www.pantsbuild.org/docs/concepts"
msgstr ""

#: ../../dev/daily-workflows.rst:43 9a657770b79d4dc5af65c7605d1e1d79
msgid "Inspecting build configurations"
msgstr ""

#: ../../dev/daily-workflows.rst:45 0e184c61f19442dcb5fa82a43099d3b5
msgid "Display all targets"
msgstr ""

#: ../../dev/daily-workflows.rst:51 4ed8a20b66a147d29a6a333e3c2b6f1f
msgid ""
"This list includes the full enumeration of individual targets auto-"
"generated by collective targets (e.g., ``python_sources()`` generates "
"multiple ``python_source()`` targets by globbing the ``sources`` pattern)"
msgstr ""

#: ../../dev/daily-workflows.rst:55 d08fce63b46b4313af88eae42da5d40d
msgid ""
"Display all dependencies of a specific target (i.e., all targets required"
" to build this target)"
msgstr ""

#: ../../dev/daily-workflows.rst:62 420c554729ef44f98641b55d9fdbfe3a
msgid ""
"Display all dependees of a specific target (i.e., all targets affected "
"when this target is changed)"
msgstr ""

#: ../../dev/daily-workflows.rst:71 59a21aa81d6d4e60b08da08113a79abd
msgid ""
"Pants statically analyzes the source files to enumerate all its imports "
"and determine the dependencies automatically.  In most cases this works "
"well, but sometimes you may need to manually declare explicit "
"dependencies in ``BUILD`` files."
msgstr ""

#: ../../dev/daily-workflows.rst:77 b95c4e04ffc549a9907e88f28eaddec4
msgid "Running lint and check"
msgstr ""

#: ../../dev/daily-workflows.rst:79 3089fcd818314a7692d66cf81a938841
msgid "Run lint/check for all targets:"
msgstr ""

#: ../../dev/daily-workflows.rst:86 d59b2a2e59124e71a5bcbd29771ae6d8
msgid "To run lint/check for a specific target or a set of targets:"
msgstr ""

#: ../../dev/daily-workflows.rst:93 b59620606fe74b5380168fd6302b8267
msgid ""
"Currently running mypy with pants is slow because mypy cannot utilize its"
" own cache as pants invokes mypy per file due to its own dependency "
"management scheme. (e.g., Checking all sources takes more than 1 "
"minutes!) This performance issue is being tracked by "
"`pantsbuild/pants#10864 "
"<https://github.com/pantsbuild/pants/issues/10864>`_.  For now, try using"
" a smaller target of files that you work on and `use an option to select "
"the targets only changed <https://www.pantsbuild.org/docs/advanced-"
"target-selection#running-over-changed-files-with---changed-since>`_ "
"(``--changed-since``)."
msgstr ""

#: ../../dev/daily-workflows.rst:102 1742d994dc8c456aac1c96c0a265c605
msgid "Running formatters"
msgstr ""

#: ../../dev/daily-workflows.rst:104 c93e2d88a9ce473088c24d29790a0888
msgid ""
"If you encounter failure from ``isort``, you may run the formatter to "
"automatically fix the import ordering issues."
msgstr ""

#: ../../dev/daily-workflows.rst:112 be1336eb6a444514aaf020ece8fa767f
msgid "Running unit tests"
msgstr ""

#: ../../dev/daily-workflows.rst:114 3dd04cc797ca4f1683046ecec216e44c
msgid "Here are various methods to run tests:"
msgstr ""

#: ../../dev/daily-workflows.rst:126 ade804acbd1f4aa49299fd07766f1773
msgid "You may also try ``--changed-since`` option like ``lint`` and ``check``."
msgstr ""

#: ../../dev/daily-workflows.rst:128 ea7f91ea61b2480da9323345239244fe
msgid ""
"To specify extra environment variables for tests, use the ``--test-extra-"
"env-vars`` option:"
msgstr ""

#: ../../dev/daily-workflows.rst:138 9c5d38bf887b49be907077979292e521
msgid "Running integration tests"
msgstr ""

#: ../../dev/daily-workflows.rst:145 5b8c174c87c842b2a49d99a3bc4fbd6d
msgid "Building wheel packages"
msgstr ""

#: ../../dev/daily-workflows.rst:147 0d85db5d94884c2dba81e5e6c5dad252
msgid "To build a specific package:"
msgstr ""

#: ../../dev/daily-workflows.rst:157 95aa6c26dde7484b83fc154d4a785d22
msgid "If the package content varies by the target platform, use:"
msgstr ""

#: ../../dev/daily-workflows.rst:170 fe19a78081564654bbb9023e025d2535
msgid "Using IDEs and editors"
msgstr ""

#: ../../dev/daily-workflows.rst:172 04dbc590bd3f460dae9d86a3dcdfb20a
msgid ""
"Pants has an ``export`` goal to auto-generate a virtualenv that contains "
"all external dependencies installed in a single place. This is very "
"useful when you work with IDEs and editors."
msgstr ""

#: ../../dev/daily-workflows.rst:176 0399ce307a0f4f0abdc9e8ef4d3d95a1
msgid "To (re-)generate the virtualenv, run:"
msgstr ""

#: ../../dev/daily-workflows.rst:182 3eca63cbcb2a4fa085a209fb1acfd9b3
msgid ""
"Then configure your IDEs/editors to use ``dist/export/python/virtualenvs"
"/python-default/VERSION/bin/python`` as the interpreter for your code, "
"where ``VERSION`` is the interpreter version specified in ``pants.toml``."
msgstr ""

#: ../../dev/daily-workflows.rst:187 28460a42adf14f838710b11862c6ed5b
msgid ""
"As of Pants 2.16, you may also export the virtualenvs by the individual "
"lockfiles using the ``--resolve`` option like:"
msgstr ""

#: ../../dev/daily-workflows.rst:194 4df7d027f3c84e739c66e241a1a9289f
msgid ""
"To make LSP (language server protocol) services like PyLance to detect "
"our source packages correctly, you should also configure ``PYTHONPATH`` "
"to include the repository root's ``src`` directory and ``plugins/*/`` "
"directories if you have added Backend.AI plugin checkouts."
msgstr ""

#: ../../dev/daily-workflows.rst:198 7c40ce501bb54f67a6a3284771c411fb
msgid ""
"For linters and formatters, configure the tool executable paths to "
"indicate "
"``dist/export/python/virtualenvs/tools/TOOLNAME/bin/EXECUTABLE``. For "
"example, flake8's executable path is "
"``dist/export/python/virtualenvs/tools/flake8/bin/flake8``."
msgstr ""

#: ../../dev/daily-workflows.rst:203 815f6a82256643c9ac0e65cdf21198a3
msgid "Currently we have four Python tools to configure in this way:"
msgstr ""

#: ../../dev/daily-workflows.rst:205 e95cf94440484a048b85b56c4eef01ac
msgid "``flake8``: Validates PEP-8 coding style"
msgstr ""

#: ../../dev/daily-workflows.rst:207 45752736120c415dafae0d2b06f11bfc
msgid "``mypy``: Validates the type annotations"
msgstr ""

#: ../../dev/daily-workflows.rst:209 1e4fb600b5f04095b480806ef144348f
msgid ""
"``black``: Validates and reformats all Python codes by reconstructing it "
"from AST, just like ``gofmt``."
msgstr ""

#: ../../dev/daily-workflows.rst:214 1c3f4c111e58418d800e646db11974af
msgid ""
"For a long list of arguments or list/tuple items, you could explicitly "
"add a trailing comma to force Black to insert line-breaks after every "
"item even when the line length does not exceed the limit (100 "
"characters)."
msgstr ""

#: ../../dev/daily-workflows.rst:220 7cc3ea8e6eb94b3d858e611e6e1fb48f
msgid ""
"You may disable auto-formatting on a specific region of code using ``# "
"fmt: off`` and ``# fmt: on`` comments, though this is strongly "
"discouraged except when manual formatting gives better readability, such "
"as numpy matrix declarations."
msgstr ""

#: ../../dev/daily-workflows.rst:224 858b36ae3f814aff9176aaa9819ecc87
msgid ""
"``isort``: Validates and reorders import statements in a fixed order "
"depending on the categories of imported packages (such as bulitins, "
"first-parties, and third-parties), the alphabetical order, and whether it"
" uses ``from`` or not."
msgstr ""

#: ../../dev/daily-workflows.rst:229 c5fb7edef15e4640a411145a9046a38f
msgid "VSCode"
msgstr ""

#: ../../dev/daily-workflows.rst:231 efc77eb3eff44a508be5bced5981df3d
msgid "Set the following keys in the workspace settings:"
msgstr ""

#: ../../dev/daily-workflows.rst:233 caf1ac1d5c844f68aa7e1ed3bbb7683d
msgid "``flake8``: ``python.linting.flake8Path``"
msgstr ""

#: ../../dev/daily-workflows.rst:235 24da8b35cfc74134a798880c44c0eb2c
msgid "``mypy``: ``python.linting.mypyPath``"
msgstr ""

#: ../../dev/daily-workflows.rst:237 77067034445b48fd8afec5363ead45c8
msgid "``black``: ``python.formatting.blackPath``"
msgstr ""

#: ../../dev/daily-workflows.rst:239 f49875e9a9704b64b5bc3c0d5179d8d3
msgid "``isort``: ``python.sortImports.path``"
msgstr ""

#: ../../dev/daily-workflows.rst:243 d9b6f7dcbe8943e193864292e3ac7f70
msgid ""
"When the target Python version has changed when you pull a new "
"version/branch, you need to re-run ``./pants export`` and manually update"
" the Python interpreter path and mypy executable path configurations."
msgstr ""

#: ../../dev/daily-workflows.rst:247 e6c1bb370ce44f5b96b3c42ce5ba4948
msgid "Vim/NeoVim"
msgstr ""

#: ../../dev/daily-workflows.rst:249 2f3fcff5b73f4ca5bf5a1225e2e0cc05
msgid ""
"There are a large variety of plugins and usually heavy Vimmers should "
"know what to do."
msgstr ""

#: ../../dev/daily-workflows.rst:251 cff46ca162d34532845a65ba26b4022c
msgid ""
"We recommend using `ALE <https://github.com/dense-analysis/ale>`_ or `CoC"
" <https://github.com/neoclide/coc.nvim>`_ plugins to have automatic lint "
"highlights, auto-formatting on save, and auto-completion support with "
"code navigation via LSP backends."
msgstr ""

#: ../../dev/daily-workflows.rst:257 4c937834bbfd4dc09db223b13acec907
msgid ""
"Note that it is recommended to enable only one linter/formatter at a time"
" (either ALE or CoC) with proper configurations, to avoid duplicate "
"suggestions and error reports."
msgstr ""

#: ../../dev/daily-workflows.rst:260 aa7e652743a84bf4b5c153da93d20768
msgid ""
"When using ALE, it is recommended to have a directory-local vimrc as "
"follows. First, add ``set exrc`` in your user-level vimrc. Then put the "
"followings in ``.vimrc`` (or ``.nvimrc`` for NeoVim) in the build root "
"directory:"
msgstr ""

#: ../../dev/daily-workflows.rst:274 4f50aeecd1d34ba8a22fb7198db4c2c6
msgid ""
"When using CoC, run ``:CocInstall coc-pyright`` and ``:CocLocalConfig`` "
"after opening a file in the local working copy to initialize PyRight "
"functionalities. In the local configuration file (``.vim/coc-"
"settings.json``), you may put the linter/formatter configurations just "
"like VSCode (see `the official reference <https://www.npmjs.com/package"
"/coc-pyright>`_):"
msgstr ""

#: ../../dev/daily-workflows.rst:297 6bc8ff86d26d4dc9ad742e8752ef7608
msgid "Switching between branches"
msgstr ""

#: ../../dev/daily-workflows.rst:299 04a0126650344016844ae604f100023a
msgid ""
"When each branch has different external package requirements, you should "
"run ``./pants export`` before running codes after ``git switch``-ing "
"between such branches."
msgstr ""

#: ../../dev/daily-workflows.rst:302 e3d3bab5c4324aa6a7a0a5ed955f47c1
msgid ""
"Sometimes, you may experience bogus \"glob\" warning from pants because "
"it sees a stale cache. In that case, run ``pgrep pantsd | xargs kill`` "
"and it will be fine."
msgstr ""

#: ../../dev/daily-workflows.rst:306 6878f16b3aef4a1db1441a7743557571
msgid "Running entrypoints"
msgstr ""

#: ../../dev/daily-workflows.rst:308 ffff5f6715774808a70c0877c1e55d12
msgid ""
"To run a Python program within the unified virtualenv, use the ``./py`` "
"helper script.  It automatically passes additional arguments "
"transparently to the Python executable of the unified virtualenv."
msgstr ""

#: ../../dev/daily-workflows.rst:312 7303d1535ca8460cab78b6572517baf2
msgid "``./backend.ai`` is an alias of ``./py -m ai.backend.cli``."
msgstr ""

#: ../../dev/daily-workflows.rst:314 6e8b2dae9cb6451e83bfa91d2f165f4f
msgid "Examples:"
msgstr ""

#: ../../dev/daily-workflows.rst:323 ddfceed51139473da10ec25abef9c163
msgid "Working with plugins"
msgstr ""

#: ../../dev/daily-workflows.rst:325 429886d75c31457485da36e6285c6189
msgid ""
"To develop Backend.AI plugins together, the repository offers a special "
"location ``./plugins`` where you can clone plugin repositories and a "
"shortcut script ``scripts/install-plugin.sh`` that does this for you."
msgstr ""

#: ../../dev/daily-workflows.rst:333 9465399a6e4342c3b9010cf641acaa1c
msgid "This is equivalent to:"
msgstr ""

#: ../../dev/daily-workflows.rst:341 b506e816325c41e5a2b3b7d6efdf93dd
msgid ""
"These plugins are auto-detected by scanning ``setup.cfg`` of plugin "
"subdirectories by the ``ai.backend.plugin.entrypoint`` module, even "
"without explicit editable installations."
msgstr ""

#: ../../dev/daily-workflows.rst:345 264ed7af8c0f49dba6b21d926905aebd
msgid "Writing test cases"
msgstr ""

#: ../../dev/daily-workflows.rst:347 eb1b63bd69074ca4a98a4cd201d6fdc2
msgid ""
"Mostly it is just same as before: use the standard pytest practices. "
"Though, there are a few key differences:"
msgstr ""

#: ../../dev/daily-workflows.rst:350 036727fb890b43a7b50a4e9b95dd2b83
msgid "Tests are executed **in parallel** in the unit of test modules."
msgstr ""

#: ../../dev/daily-workflows.rst:352 d5fd26a1a3cb479da05e72eb4baafa74
msgid ""
"Therefore, session-level fixtures may be executed *multiple* times during"
" a single run of ``./pants test``."
msgstr ""

#: ../../dev/daily-workflows.rst:357 6da8fe5c1dbb4eb7b5a243e693a74ecc
msgid ""
"If you *interrupt* (Ctrl+C, SIGINT) a run of ``./pants test``, it will "
"immediately kill all pytest processes without fixture cleanup. This may "
"accumulate unused Docker containers in your system, so it is a good "
"practice to run ``docker ps -a`` periodically and clean up dangling "
"containers."
msgstr ""

#: ../../dev/daily-workflows.rst:362 6dee3126be3e4f9196db3dedfb815489
msgid "To interactively run tests, see :ref:`debugging-tests`."
msgstr ""

#: ../../dev/daily-workflows.rst:364 2414347f57e2439783a49f992e3e66be
msgid "Here are considerations for writing Pants-friendly tests:"
msgstr ""

#: ../../dev/daily-workflows.rst:366 7b05a95763a14f878ff8665463c8e67f
msgid ""
"Ensure that it runs in an isolated/mocked environment and minimize "
"external dependency."
msgstr ""

#: ../../dev/daily-workflows.rst:368 b58812603de34d5ba87a0ae695d863d7
msgid ""
"If required, use the environment variable ``BACKEND_TEST_EXEC_SLOT`` (an "
"integer value) to uniquely define TCP port numbers and other resource "
"identifiers to allow parallel execution. `Refer the Pants docs "
"<https://www.pantsbuild.org/docs/reference-pytest#section-execution-slot-"
"var](https://www.pantsbuild.org/docs/reference-pytest#section-execution-"
"slot-var>`_."
msgstr ""

#: ../../dev/daily-workflows.rst:373 5a3fafb6f669436fb300f68116d03047
msgid ""
"Use ``ai.backend.testutils.bootstrap`` to populate a single-node "
"Redis/etcd/Postgres container as fixtures of your test cases. Import the "
"fixture and use it like a plain pytest fixture."
msgstr ""

#: ../../dev/daily-workflows.rst:377 41f932ba37f849599cbaa4de82418e4c
msgid ""
"These fixtures create those containers with **OS-assigned public port "
"numbers** and give you a tuple of container ID and a "
"``ai.backend.common.types.HostPortPair`` for use in test codes. In "
"manager and agent tests, you could just refer ``local_config`` to get a "
"pre-populated local configurations with those port numbers."
msgstr ""

#: ../../dev/daily-workflows.rst:383 ada7bf0c4d194b3c9904deb83a7afc79
msgid ""
"In this case, you may encounter ``flake8`` complaining about unused "
"imports and redefinition. Use ``# noqa: F401`` and ``# noqa: F811`` "
"respectively for now."
msgstr ""

#: ../../dev/daily-workflows.rst:388 49866c3b88bf4844b2670233e15093b5
msgid "**About using /tmp in tests**"
msgstr ""

#: ../../dev/daily-workflows.rst:390 c387a550fb9846399e68f14a1fbcd36c
msgid ""
"If your Docker service is installed using **Snap** (e.g., Ubuntu 20.04 or"
" later), it cannot access the system ``/tmp`` directory because Snap "
"applies a private \"virtualized\" tmp directory to the Docker service."
msgstr ""

#: ../../dev/daily-workflows.rst:394 0d69896fa03544b0839cc7a225634ce5
msgid ""
"You should use other locations under the user's home directory (or "
"preferably ``.tmp`` in the working copy directory) to avoid mount "
"failures for the developers/users in such platforms."
msgstr ""

#: ../../dev/daily-workflows.rst:398 1f9e43d1fde144e9af56e412aa347227
msgid ""
"It is okay to use the system ``/tmp`` directory if they are not mounted "
"inside any containers."
msgstr ""

#: ../../dev/daily-workflows.rst:402 c92c9cda61a8499f902323b7526cf1a0
msgid "Writing documentation"
msgstr ""

#: ../../dev/daily-workflows.rst:404 8317b1a216184726b6eaac158e875c16
msgid "Create a new pyenv virtualenv based on Python 3.10."
msgstr ""

#: ../../dev/daily-workflows.rst:410 d7d6e00021d649b995299f6353499bac
msgid "Activate the virtualenv and run:"
msgstr ""

#: ../../dev/daily-workflows.rst:418 227adaa0b89f4b9c94ac956f5c2a0d97
msgid "You can build the docs as follows:"
msgstr ""

#: ../../dev/daily-workflows.rst:426 3dd45d841b974855b0c6c2592aec700d
msgid "To locally serve the docs:"
msgstr ""

#: ../../dev/daily-workflows.rst:433 edac82d664f84632a7a25855ace2f7d1
msgid ""
"(TODO: Use Pants' own Sphinx support when `pantsbuild/pants#15512 "
"<https://github.com/pantsbuild/pants/pull/15512>`_ is released.)"
msgstr ""

#: ../../dev/daily-workflows.rst:437 7cb50da8d4c44764be856f997dea40ed
msgid "Advanced Topics"
msgstr ""

#: ../../dev/daily-workflows.rst:440 9e43abd5c93f478bb45be920f573d079
msgid "Adding new external dependencies"
msgstr ""

#: ../../dev/daily-workflows.rst:442 af8402e2d08b48849734c083bcceebe2
msgid ""
"Add the package version requirements to the unified requirements file "
"(``./requirements.txt``)."
msgstr ""

#: ../../dev/daily-workflows.rst:444 d0f5b0c9909f422b9ce7d671ba951476
msgid ""
"Update the ``module_mapping`` field in the root build configuration "
"(``./BUILD``) if the package name and its import name differs."
msgstr ""

#: ../../dev/daily-workflows.rst:447 cd3b37b9dc8b4762a49121ee84bfd5cf
msgid ""
"Update the ``type_stubs_module_mapping`` field in the root build "
"configuration if the package provides a type stubs package separately."
msgstr ""

#: ../../dev/daily-workflows.rst:450 ed2b572d1e4e44b988c792c7c17f43b3
msgid "Run:"
msgstr ""

#: ../../dev/daily-workflows.rst:458 2c31228dd6fd4230bffebd5d7fe7e425
msgid "Merging lockfile conflicts"
msgstr ""

#: ../../dev/daily-workflows.rst:460 3056a5f90e9743eca0d436070f34bf21
msgid ""
"When you work on a branch that adds a new external dependency and the "
"main branch has also another external dependency addition, merging the "
"main branch into your branch is likely to make a merge conflict on "
"``python.lock`` file."
msgstr ""

#: ../../dev/daily-workflows.rst:464 9258c86545c245408ab277f311169355
msgid ""
"In this case, you can just do the followings since we can just "
"*regenerate* the lockfile after merging ``requirements.txt`` and "
"``BUILD`` files."
msgstr ""

#: ../../dev/daily-workflows.rst:477 528f9e7b62b240a49db8a08ee8371849
msgid "Resetting Pants"
msgstr ""

#: ../../dev/daily-workflows.rst:479 bed8d4f6cd3d45f2a1f137ffac82a866
msgid ""
"If Pants behaves strangely, you could simply reset all its runtime-"
"generated files by:"
msgstr ""

#: ../../dev/daily-workflows.rst:486 d65e97b2f1cc4e42b088704dd5dbf854
msgid ""
"After this, re-running any Pants command will automatically reinitialize "
"itself and all cached data as necessary."
msgstr ""

#: ../../dev/daily-workflows.rst:491 85c2a8adc48f49b28d3f37d6a98c0bea
msgid ""
"If you have run ``./pants`` or the installation script with ``sudo``, "
"some of the above directories may be owned by root and running "
"``./pants`` as the user privilege would not work. In such cases, remove "
"the directories with ``sudo`` and retry."
msgstr ""

#: ../../dev/daily-workflows.rst:496 ffe23856412a45a0a9f970ee54265a8d
msgid "Changing or updating the Python runtime for Pants"
msgstr ""

#: ../../dev/daily-workflows.rst:498 5e88c98ac269435798dce744c0d42eb9
msgid ""
"When you run ``scripts/install-dev.sh``, it automatically creates "
"``.pants.bootstrap`` to explicitly set a specific pyenv Python version to"
" run Pants."
msgstr ""

#: ../../dev/daily-workflows.rst:501 8eb6096805414da3817e45bd132c02a0
msgid ""
"If you have removed/upgraded this specific Python version from pyenv, you"
" also need to update ``.pants.bootstrap`` accordingly."
msgstr ""

#: ../../dev/daily-workflows.rst:507 1159e3572f6345f68d22c25a04903cf4
msgid "Debugging test cases (or interactively running test cases)"
msgstr ""

#: ../../dev/daily-workflows.rst:509 8112e652b5114a21ab845c89df0e047d
msgid ""
"When your tests *hang*, you can try adding the ``--debug`` flag to the "
"``./pants test`` command:"
msgstr ""

#: ../../dev/daily-workflows.rst:515 5deebbb7a7144ce884b9847b2dc2d2fc
msgid ""
"so that Pants runs the designated test targets **serially and "
"interactively**. This means that you can directly observe the console "
"output and Ctrl+C to gracefully shutdown the tests  with fixture cleanup."
" You can also apply additional pytest options such as ``--fulltrace``, "
"``-s``, etc. by passing them after target arguments and ``--`` when "
"executing ``./pants test`` command."
msgstr ""

#: ../../dev/daily-workflows.rst:522 4cfd4fa7a5f446ffb9875eb291007ea1
msgid ""
"Installing a subset of mono-repo packages in the editable mode for other "
"projects"
msgstr ""

#: ../../dev/daily-workflows.rst:524 5a5c5c86aab4403c860bd734f7d1496b
msgid ""
"Sometimes, you need to editable-install a subset of packages into other "
"project's directories. For instance you could mount the client SDK and "
"its internal dependencies for a Docker container for development."
msgstr ""

#: ../../dev/daily-workflows.rst:527 00271fda3cf34f8ca089613923b50bf4
msgid "In this case, we recommend to do it as follows:"
msgstr ""

#: ../../dev/daily-workflows.rst:529 e8378254eca94893a7333e8d7999377f
msgid ""
"Run the following command to build a wheel from the current mono-repo "
"source:"
msgstr ""

#: ../../dev/daily-workflows.rst:535 6d3a2bba179445bca11ab8d1d85f88d1
msgid "This will generate ``dist/backend.ai_client-{VERSION}-py3-none-any.whl``."
msgstr ""

#: ../../dev/daily-workflows.rst:537 2496d2b93dc24a3c9658c773663a3f16
msgid ""
"Run ``pip install -U {MONOREPO_PATH}/dist/{WHEEL_FILE}`` in the target "
"environment."
msgstr ""

#: ../../dev/daily-workflows.rst:539 1bf9626ffe7d499eafc1b5962ac06b89
msgid ""
"This will populate the package metadata and install its external "
"dependencies. The target environment may be one of a separate virtualenv "
"or a container being built. For container builds, you need to first "
"``COPY`` the wheel file and install it."
msgstr ""

#: ../../dev/daily-workflows.rst:543 b081232c0538442ebd245ba998935ee0
msgid ""
"Check the internal dependency directories to link by running the "
"following command:"
msgstr ""

#: ../../dev/daily-workflows.rst:553 e9f7f3dfe55f42ae85dfa4ed2274191b
msgid "Link these directories in the target environment."
msgstr ""

#: ../../dev/daily-workflows.rst:555 6fb94f862dc64585ba83b34deb8c1731
msgid ""
"For example, if it is a Docker container, you could add ``-v "
"{MONOREPO_PATH}/src/ai/backend/{COMPONENT}:/usr/local/lib/python3.10"
"/site-packages/ai/backend/{COMPONENT}`` to the ``docker create`` or "
"``docker run`` commands for all the component directories found in the "
"previous step."
msgstr ""

#: ../../dev/daily-workflows.rst:560 10fcbf0d7abc4bfc86978306de83a00b
msgid ""
"If it is a local checkout with a pyenv-based virtualenv, you could "
"replace ``$(pyenv prefix)/lib/python3.10/site-"
"packages/ai/backend/{COMPONENT}`` directories with symbolic links to the "
"mono-repo's component source directories."
msgstr ""

#: ../../dev/daily-workflows.rst:565 a239f28471784363ab03368d96c92ff9
msgid "Boosting the performance of Pants commands"
msgstr ""

#: ../../dev/daily-workflows.rst:567 55c77b38553f438183172dbb8d4bc5ea
msgid ""
"Since Pants uses temporary directories for aggressive caching, you could "
"make the ``.tmp`` directory under the working copy root a tmpfs "
"partition:"
msgstr ""

#: ../../dev/daily-workflows.rst:574 5f84d58e0fcf423c8219297f9f5d02f4
msgid ""
"To make this persistent across reboots, add the following line to "
"``/etc/fstab``:"
msgstr ""

#: ../../dev/daily-workflows.rst:580 de152b4f0834404895c77a6408bf23a5
msgid ""
"The size should be more than 3GB. (Running ``./pants test ::`` consumes "
"about 2GB.)"
msgstr ""

#: ../../dev/daily-workflows.rst:583 f3aab21fecc6454ea3655e7c99d3e8a9
msgid ""
"To change the size at runtime, you could simply remount it with a new "
"size option:"
msgstr ""

#: ../../dev/daily-workflows.rst:590 fb1c2fcaa95a419f92d43f5be141e529
msgid "Making a new release"
msgstr ""

#: ../../dev/daily-workflows.rst:592 37ffabd5a8b4448a95733343bacc227d
msgid ""
"Update ``./VERSION`` file to set a new version number. (Remove the ending"
" new line, e.g., using ``set noeol`` in Vim.  This is also configured in "
"``./editorconfig``)"
msgstr ""

#: ../../dev/daily-workflows.rst:596 993e504299e442d3b7343643a9bda701
msgid ""
"Run ``LOCKSET=tools/towncrier ./py -m towncrier`` to auto-generate the "
"changelog."
msgstr ""

#: ../../dev/daily-workflows.rst:598 18526e9876054663be90c105eeeb02ba
msgid ""
"You may append ``--draft`` to see a preview of the changelog update "
"without actually modifying the filesystem."
msgstr ""

#: ../../dev/daily-workflows.rst:601 4adf820cbb49436ca46f5c623f21d618
msgid ""
"(WIP: `lablup/backend.ai#427 "
"<https://github.com/lablup/backend.ai/pull/427>`_)."
msgstr ""

#: ../../dev/daily-workflows.rst:603 0a326a5bd80f40fe8c409c994f0cb089
msgid "Make a new git commit with the commit message: \"release: <version>\"."
msgstr ""

#: ../../dev/daily-workflows.rst:605 3ebf46f7675a474db85a0bd72f3f4763
msgid ""
"Make an annotated tag to the commit with the message: \"Release "
"v<version>\" or \"Pre-release v<version>\" depending on the release "
"version."
msgstr ""

#: ../../dev/daily-workflows.rst:608 b88874d67d8d41f79104e265836d7198
msgid ""
"Push the commit and tag.  The GitHub Actions workflow will build the "
"packages and publish them to PyPI."
msgstr ""

#: ../../dev/daily-workflows.rst:612 cd01a8bc89844b718753e82f0a92ac0a
msgid "Backporting to legacy per-pkg repositories"
msgstr ""

#: ../../dev/daily-workflows.rst:614 38f812f017344e1b8be3cb548763e662
msgid "Use ``git diff`` and ``git apply`` instead of ``git cherry-pick``."
msgstr ""

#: ../../dev/daily-workflows.rst:616 6282efdd39674681abb37cba6fbdcd94
msgid ""
"To perform a three-way merge for conflicts, add ``-3`` option to the "
"``git apply`` command."
msgstr ""

#: ../../dev/daily-workflows.rst:618 cd100c257a694c67844b8cd6bcdba166
msgid ""
"You may need to rewrite some codes as the package structure differs. (The"
" new mono repository has more fine-grained first party packages divided "
"from the ``backend.ai-common`` package.)"
msgstr ""

#: ../../dev/daily-workflows.rst:622 53be2f3ba5814f39a84597b577dba1a7
msgid ""
"When referring the PR/issue numbers in the commit for per-pkg "
"repositories, update them like ``lablup/backend.ai#NNN`` instead of "
"``#NNN``."
msgstr ""

#~ msgid ""
#~ "To activate flake8/mypy checks (in Vim)"
#~ " and get proper intelli-sense support"
#~ " for pytest (in VSCode), just install"
#~ " them in the exported venv as "
#~ "follows. (You need to repeat this "
#~ "when you re-export!)"
#~ msgstr ""

#~ msgid "For Vim, you also need to explicitly activate the exported venv."
#~ msgstr ""

#~ msgid ""
#~ "To develop Backend.AI plugins together, "
#~ "the repository offers a special location"
#~ " ``./plugins`` where you can clone "
#~ "plugin repositories and a shortcut "
#~ "script ``scripts/install-plugin.sh`` to "
#~ "install them inside the exported venv."
#~ msgstr ""

#~ msgid "Manual installation:"
#~ msgstr ""

#~ msgid ""
#~ "Whenever you re-export the venv "
#~ "using ``./pants export``, you must "
#~ "*reinstall* the plugins.  There is also"
#~ " a shrotcut script that does this "
#~ "for you: ``scripts/reinstall-plugins.sh``."
#~ msgstr ""

#~ msgid ""
#~ "Sometimes, you may experience bogus "
#~ "\"glob\" warning from pants because it"
#~ " sees a stale cache. In that "
#~ "case, run ``killall -r pantsd`` "
#~ "(``killall pantsd`` in macOS) and it "
#~ "will be fine."
#~ msgstr ""

