# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2022, Lablup Inc.
# This file is distributed under the same license as the Backend.AI
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Documentation 22.06\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-11 22:50-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../dev/daily-workflows.rst:2 890023bf36b147a49819d0a40e1c2b2c
msgid "Daily Development Workflows"
msgstr ""

#: ../../dev/daily-workflows.rst:5 43a556ea717f40b7ae77a5e6de878d7d
msgid "About Pants"
msgstr ""

#: ../../dev/daily-workflows.rst:7 0cc5b83bb5c741ab822ca12933368c4a
msgid ""
"Since 22.09, we have migrated to `Pants <https://pantsbuild.org>`_ as our"
" primary build system and dependency manager for the mono-repository of "
"Python components."
msgstr ""

#: ../../dev/daily-workflows.rst:11 43bf924d06934a41a78e5cec92fa5f1d
msgid ""
"Pants is a graph-based async-parallel task executor written in Rust and "
"Python. It is tailored to building programs with explicit and auto-"
"inferred dependency checks and aggressive caching."
msgstr ""

#: ../../dev/daily-workflows.rst:16 d3e6b983d23b44b3b19e24651b6d4748
msgid "Key concepts"
msgstr ""

#: ../../dev/daily-workflows.rst:18 10b6c0c0e28b411fa2846821c554abef
msgid "The command pattern:"
msgstr ""

#: ../../dev/daily-workflows.rst:26 923b85f0c01c4b52aa1c2871dac9daf1
msgid ""
"If your ``scripts/install-dev.sh`` says that you need to use ``./pants-"
"local`` instead of ``./pants``, replace all ``./pants`` in the following "
"command examples with ``./pants-local``."
msgstr ""

#: ../../dev/daily-workflows.rst:30 62a2fed72d4246fab8f6fe03c8ef8e1a
msgid "Goal: an action to execute"
msgstr ""

#: ../../dev/daily-workflows.rst:32 29f0248b7ad648a7b9b3feee663951ef
msgid "You may think this as the root node of the task graph executed by Pants."
msgstr ""

#: ../../dev/daily-workflows.rst:34 278ae9edddec49cca0512a925def5849
msgid ""
"Target: objectives for the action, usually expressed as "
"``path/to/dir:name``"
msgstr ""

#: ../../dev/daily-workflows.rst:36 7d80ad7aec8643eda305b90482e27f39
msgid "The targets are declared/defined by ``path/to/dir/BUILD`` files."
msgstr ""

#: ../../dev/daily-workflows.rst:38 96d8529a58124dbaa4a89977169c24c7
msgid "The global configuration is at ``pants.toml``."
msgstr ""

#: ../../dev/daily-workflows.rst:40 2f5a2632c45a423d9f2a11a788c714ed
msgid "Recommended reading: https://www.pantsbuild.org/docs/concepts"
msgstr ""

#: ../../dev/daily-workflows.rst:43 730d3aa0d9014108ae8627fd8c4ded89
msgid "Inspecting build configurations"
msgstr ""

#: ../../dev/daily-workflows.rst:45 5adc82b603bd4239b838047ddff8f234
msgid "Display all targets"
msgstr ""

#: ../../dev/daily-workflows.rst:51 072772948df24725bdcfd98f0649f5cd
msgid ""
"This list includes the full enumeration of individual targets auto-"
"generated by collective targets (e.g., ``python_sources()`` generates "
"multiple ``python_source()`` targets by globbing the ``sources`` pattern)"
msgstr ""

#: ../../dev/daily-workflows.rst:55 3ece8006f76e4a36a580f7434df918fd
msgid ""
"Display all dependencies of a specific target (i.e., all targets required"
" to build this target)"
msgstr ""

#: ../../dev/daily-workflows.rst:62 7290fc47869b40c5b30e645ebd4c4bfb
msgid ""
"Display all dependees of a specific target (i.e., all targets affected "
"when this target is changed)"
msgstr ""

#: ../../dev/daily-workflows.rst:71 4cf5c7fa3d5d42bd84d45e92c29fcde5
msgid ""
"Pants statically analyzes the source files to enumerate all its imports "
"and determine the dependencies automatically.  In most cases this works "
"well, but sometimes you may need to manually declare explicit "
"dependencies in ``BUILD`` files."
msgstr ""

#: ../../dev/daily-workflows.rst:77 80b08eb436bf462985d2b7aac0662c0a
msgid "Running lint and check"
msgstr ""

#: ../../dev/daily-workflows.rst:79 fc9c7976274147aeb9ab0c303301c49b
msgid "Run lint/check for all targets:"
msgstr ""

#: ../../dev/daily-workflows.rst:86 46cd38d498574c26afe512d22c7b2cf8
msgid "To run lint/check for a specific target or a set of targets:"
msgstr ""

#: ../../dev/daily-workflows.rst:93 25a29c01ecd54a7685e15bcef07794a3
msgid ""
"Currently running mypy with pants is slow because mypy cannot utilize its"
" own cache as pants invokes mypy per file due to its own dependency "
"management scheme. (e.g., Checking all sources takes more than 1 "
"minutes!) This performance issue is being tracked by "
"`pantsbuild/pants#10864 "
"<https://github.com/pantsbuild/pants/issues/10864>`_.  For now, try using"
" a smaller target of files that you work on and `use an option to select "
"the targets only changed <https://www.pantsbuild.org/docs/advanced-"
"target-selection#running-over-changed-files-with---changed-since>`_ "
"(``--changed-since``)."
msgstr ""

#: ../../dev/daily-workflows.rst:102 99962bf405104ff3bd5069ae5a911fce
msgid "Running formatters"
msgstr ""

#: ../../dev/daily-workflows.rst:104 8ca6b6fe27404606813cca01f6254742
msgid ""
"If you encounter failure from ``isort``, you may run the formatter to "
"automatically fix the import ordering issues."
msgstr ""

#: ../../dev/daily-workflows.rst:112 ea064e927ec345d0ab4db622c9740fb9
msgid "Running unit tests"
msgstr ""

#: ../../dev/daily-workflows.rst:114 049f8bfe9c0d4469a84d14cc5a9252b1
msgid "Here are various methods to run tests:"
msgstr ""

#: ../../dev/daily-workflows.rst:126 eb4d076989e841748b91eb96f6560b5a
msgid "You may also try ``--changed-since`` option like ``lint`` and ``check``."
msgstr ""

#: ../../dev/daily-workflows.rst:128 68194ed883be4ed895378348db1a57bd
msgid ""
"To specify extra environment variables for tests, use the ``--test-extra-"
"env-vars`` option:"
msgstr ""

#: ../../dev/daily-workflows.rst:138 8ff593267163415eb8cb783b114acefd
msgid "Running integration tests"
msgstr ""

#: ../../dev/daily-workflows.rst:145 4b05a32dec0b4f99a486f50497dfe4af
msgid "Building wheel packages"
msgstr ""

#: ../../dev/daily-workflows.rst:147 2b4525d0e52c4a8a88b28657a9537a6b
msgid "To build a specific package:"
msgstr ""

#: ../../dev/daily-workflows.rst:157 76aab20890b84a94b21306545acca38c
msgid "If the package content varies by the target platform, use:"
msgstr ""

#: ../../dev/daily-workflows.rst:170 3562a0a3205944bcaa7ec37cc9f6551a
msgid "Using IDEs and editors"
msgstr ""

#: ../../dev/daily-workflows.rst:172 af56a5d1424b4726910421be2754ef81
msgid ""
"Pants has an ``export`` goal to auto-generate a virtualenv that contains "
"all external dependencies installed in a single place. This is very "
"useful when you work with IDEs and editors."
msgstr ""

#: ../../dev/daily-workflows.rst:176 2369ee178eb0411baecc522d8fbff3f7
msgid "To (re-)generate the virtualenv, run:"
msgstr ""

#: ../../dev/daily-workflows.rst:182 7762893b2f7c4c7ca035ac7b37231464
msgid ""
"Then configure your IDEs/editors to use ``dist/export/python/virtualenvs"
"/python-default/VERSION/bin/python`` as the interpreter for your code, "
"where ``VERSION`` is the interpreter version specified in ``pants.toml``."
msgstr ""

#: ../../dev/daily-workflows.rst:187 00c6d79b2f01451e98ddef7739b975e6
msgid ""
"To make LSP (language server protocol) services like PyLance to detect "
"our source packages correctly, you should also configure ``PYTHONPATH`` "
"to include the repository root's ``src`` directory and ``plugins/*/`` "
"directories if you have added Backend.AI plugin checkouts."
msgstr ""

#: ../../dev/daily-workflows.rst:191 98a8a7a589c1425b81b90d363064d5b3
msgid ""
"For linters and formatters, configure the tool executable paths to "
"indicate "
"``dist/export/python/virtualenvs/tools/TOOLNAME/bin/EXECUTABLE``. For "
"example, flake8's executable path is "
"``dist/export/python/virtualenvs/tools/flake8/bin/flake8``."
msgstr ""

#: ../../dev/daily-workflows.rst:196 14c7038808d44325b11436a122bb1c1b
msgid "Currently we have four Python tools to configure in this way:"
msgstr ""

#: ../../dev/daily-workflows.rst:198 2bbd5275e14b46f18dea2d7a91c835af
msgid "``flake8``: Validates PEP-8 coding style"
msgstr ""

#: ../../dev/daily-workflows.rst:200 537b842082874fd1be7560486a2437ee
msgid "``mypy``: Validates the type annotations"
msgstr ""

#: ../../dev/daily-workflows.rst:202 b5eea8f833834f14afb9c377f93ec7d7
msgid ""
"``black``: Validates and reformats all Python codes by reconstructing it "
"from AST, just like ``gofmt``."
msgstr ""

#: ../../dev/daily-workflows.rst:207 cdf1b355ee7b491593101fd68706f1f6
msgid ""
"For a long list of arguments or list/tuple items, you could explicitly "
"add a trailing comma to force Black to insert line-breaks after every "
"item even when the line length does not exceed the limit (100 "
"characters)."
msgstr ""

#: ../../dev/daily-workflows.rst:213 209adbf60f6f448db25818f9dd5e3ae8
msgid ""
"You may disable auto-formatting on a specific region of code using ``# "
"fmt: off`` and ``# fmt: on`` comments, though this is strongly "
"discouraged except when manual formatting gives better readability, such "
"as numpy matrix declarations."
msgstr ""

#: ../../dev/daily-workflows.rst:217 f0800ddeb4294e65b6fd1b5f05cded63
msgid ""
"``isort``: Validates and reorders import statements in a fixed order "
"depending on the categories of imported packages (such as bulitins, "
"first-parties, and third-parties), the alphabetical order, and whether it"
" uses ``from`` or not."
msgstr ""

#: ../../dev/daily-workflows.rst:222 22e02b6ec66f4212955dbc1bb4972839
msgid "VSCode"
msgstr ""

#: ../../dev/daily-workflows.rst:224 97f2d6551af04e8088ca897c41bd9b91
msgid "Set the following keys in the workspace settings:"
msgstr ""

#: ../../dev/daily-workflows.rst:226 d182abfadaff411ebb8dcdd4838ac19b
msgid "``flake8``: ``python.linting.flake8Path``"
msgstr ""

#: ../../dev/daily-workflows.rst:228 bce2aaf0aad24d0f8bca0e35b3e6cb5e
msgid "``mypy``: ``python.linting.mypyPath``"
msgstr ""

#: ../../dev/daily-workflows.rst:230 cca17e0af2104b34813e626e8c5e32fb
msgid "``black``: ``python.formatting.blackPath``"
msgstr ""

#: ../../dev/daily-workflows.rst:232 d4f2d229e84745d792b49ef51db8e367
msgid "``isort``: ``python.sortImports.path``"
msgstr ""

#: ../../dev/daily-workflows.rst:236 6bd97410676d49bf9904d8b2df6365c5
msgid ""
"When the target Python version has changed when you pull a new "
"version/branch, you need to re-run ``./pants export ::`` and manually "
"update the Python interpreter path and mypy executable path "
"configurations."
msgstr ""

#: ../../dev/daily-workflows.rst:240 bbc912c2a691442c8e29f967ff3a64f8
msgid "Vim/NeoVim"
msgstr ""

#: ../../dev/daily-workflows.rst:242 f1bcb060701b47b995092595e0329a9b
msgid ""
"There are a large variety of plugins and usually heavy Vimmers should "
"know what to do."
msgstr ""

#: ../../dev/daily-workflows.rst:244 8ce2b45c42fc488aa83420cc5868b88d
msgid ""
"We recommend using `ALE <https://github.com/dense-analysis/ale>`_ or `CoC"
" <https://github.com/neoclide/coc.nvim>`_ plugins to have automatic lint "
"highlights, auto-formatting on save, and auto-completion support with "
"code navigation via LSP backends."
msgstr ""

#: ../../dev/daily-workflows.rst:250 e9f28accb79a4584b2c34c98a07d539f
msgid ""
"Note that it is recommended to enable only one linter/formatter at a time"
" (either ALE or CoC) with proper configurations, to avoid duplicate "
"suggestions and error reports."
msgstr ""

#: ../../dev/daily-workflows.rst:253 fd9adea3126e4a4687ec89b54c406081
msgid ""
"When using ALE, it is recommended to have a directory-local vimrc as "
"follows. First, add ``set exrc`` in your user-level vimrc. Then put the "
"followings in ``.vimrc`` (or ``.nvimrc`` for NeoVim) in the build root "
"directory:"
msgstr ""

#: ../../dev/daily-workflows.rst:267 d5f9211d7c1444f380b47a8c89e3319a
msgid ""
"When using CoC, run ``:CocInstall coc-pyright`` and ``:CocLocalConfig`` "
"after opening a file in the local working copy to initialize PyRight "
"functionalities. In the local configuration file (``.vim/coc-"
"settings.json``), you may put the linter/formatter configurations just "
"like VSCode (see `the official reference <https://www.npmjs.com/package"
"/coc-pyright>`_):"
msgstr ""

#: ../../dev/daily-workflows.rst:290 7f8d23fcfd2f4f688b118867d49348ae
msgid "Switching between branches"
msgstr ""

#: ../../dev/daily-workflows.rst:292 7e7c7974845a482eaa9af3a4c60b61be
msgid ""
"When each branch has different external package requirements, you should "
"run ``./pants export ::`` before running codes after ``git switch``-ing "
"between such branches."
msgstr ""

#: ../../dev/daily-workflows.rst:295 27bf8d076f7c4574b6ecf21ef11d4ccb
msgid ""
"Sometimes, you may experience bogus \"glob\" warning from pants because "
"it sees a stale cache. In that case, run ``pgrep pantsd | xargs kill`` "
"and it will be fine."
msgstr ""

#: ../../dev/daily-workflows.rst:299 3858fdec9cd548a8b64429371a5a74a9
msgid "Running entrypoints"
msgstr ""

#: ../../dev/daily-workflows.rst:301 40c41a33acff40b28b6afc8580b722cc
msgid ""
"To run a Python program within the unified virtualenv, use the ``./py`` "
"helper script.  It automatically passes additional arguments "
"transparently to the Python executable of the unified virtualenv."
msgstr ""

#: ../../dev/daily-workflows.rst:305 197e3509458e4c1594e734d5b66efa8b
msgid "``./backend.ai`` is an alias of ``./py -m ai.backend.cli``."
msgstr ""

#: ../../dev/daily-workflows.rst:307 1edb34c584934f1bb0212589bef23161
msgid "Examples:"
msgstr ""

#: ../../dev/daily-workflows.rst:316 5eaa60b0921f4b4ea0952abb149178f1
msgid "Working with plugins"
msgstr ""

#: ../../dev/daily-workflows.rst:318 f9b91ecf6b254361931eacffaefc37cd
msgid ""
"To develop Backend.AI plugins together, the repository offers a special "
"location ``./plugins`` where you can clone plugin repositories and a "
"shortcut script ``scripts/install-plugin.sh`` that does this for you."
msgstr ""

#: ../../dev/daily-workflows.rst:326 eb50b2e507154789b4afd237e9770e79
msgid "This is equivalent to:"
msgstr ""

#: ../../dev/daily-workflows.rst:334 06d49db2d46e41b798302104135cab28
msgid ""
"These plugins are auto-detected by scanning ``setup.cfg`` of plugin "
"subdirectories by the ``ai.backend.plugin.entrypoint`` module, even "
"without explicit editable installations."
msgstr ""

#: ../../dev/daily-workflows.rst:338 0d7c12e2373e47b48273a840b6959932
msgid "Writing test cases"
msgstr ""

#: ../../dev/daily-workflows.rst:340 458aeebb84974a778a05c9a944148f93
msgid ""
"Mostly it is just same as before: use the standard pytest practices. "
"Though, there are a few key differences:"
msgstr ""

#: ../../dev/daily-workflows.rst:343 db384be52ed84b11970e341d53bb1ff2
msgid "Tests are executed **in parallel** in the unit of test modules."
msgstr ""

#: ../../dev/daily-workflows.rst:345 a665603d06134a3387bf2e37fba696b5
msgid ""
"Therefore, session-level fixtures may be executed *multiple* times during"
" a single run of ``./pants test``."
msgstr ""

#: ../../dev/daily-workflows.rst:350 db5a8ebd096a4c5ea0eeefc1834e598e
msgid ""
"If you *interrupt* (Ctrl+C, SIGINT) a run of ``./pants test``, it will "
"immediately kill all pytest processes without fixture cleanup. This may "
"accumulate unused Docker containers in your system, so it is a good "
"practice to run ``docker ps -a`` periodically and clean up dangling "
"containers."
msgstr ""

#: ../../dev/daily-workflows.rst:355 565c1d07fd4841e3915cef14b52ef469
msgid "To interactively run tests, see :ref:`debugging-tests`."
msgstr ""

#: ../../dev/daily-workflows.rst:357 c5c7ff9d5b934d37be033f0dd4ab72ea
msgid "Here are considerations for writing Pants-friendly tests:"
msgstr ""

#: ../../dev/daily-workflows.rst:359 0ae9e6fb8d194132a8053a372e0165aa
msgid ""
"Ensure that it runs in an isolated/mocked environment and minimize "
"external dependency."
msgstr ""

#: ../../dev/daily-workflows.rst:361 ec79e3cce8a344548e9e5e405379fcde
msgid ""
"If required, use the environment variable ``BACKEND_TEST_EXEC_SLOT`` (an "
"integer value) to uniquely define TCP port numbers and other resource "
"identifiers to allow parallel execution. `Refer the Pants docs "
"<https://www.pantsbuild.org/docs/reference-pytest#section-execution-slot-"
"var](https://www.pantsbuild.org/docs/reference-pytest#section-execution-"
"slot-var>`_."
msgstr ""

#: ../../dev/daily-workflows.rst:366 057d7a4228af4c32bc6581a573f37466
msgid ""
"Use ``ai.backend.testutils.bootstrap`` to populate a single-node "
"Redis/etcd/Postgres container as fixtures of your test cases. Import the "
"fixture and use it like a plain pytest fixture."
msgstr ""

#: ../../dev/daily-workflows.rst:370 f63a0fc3a4dd4186b1cb40ac06103178
msgid ""
"These fixtures create those containers with **OS-assigned public port "
"numbers** and give you a tuple of container ID and a "
"``ai.backend.common.types.HostPortPair`` for use in test codes. In "
"manager and agent tests, you could just refer ``local_config`` to get a "
"pre-populated local configurations with those port numbers."
msgstr ""

#: ../../dev/daily-workflows.rst:376 bed5262a2d984ce7bccae1febec2284f
msgid ""
"In this case, you may encounter ``flake8`` complaining about unused "
"imports and redefinition. Use ``# noqa: F401`` and ``# noqa: F811`` "
"respectively for now."
msgstr ""

#: ../../dev/daily-workflows.rst:381 84276d00515843828336f010fb77b5cd
msgid "**About using /tmp in tests**"
msgstr ""

#: ../../dev/daily-workflows.rst:383 502147daff0448d8847003560cced58c
msgid ""
"If your Docker service is installed using **Snap** (e.g., Ubuntu 20.04 or"
" later), it cannot access the system ``/tmp`` directory because Snap "
"applies a private \"virtualized\" tmp directory to the Docker service."
msgstr ""

#: ../../dev/daily-workflows.rst:387 edbcba3240294a189e1fb0f9554d3097
msgid ""
"You should use other locations under the user's home directory (or "
"preferably ``.tmp`` in the working copy directory) to avoid mount "
"failures for the developers/users in such platforms."
msgstr ""

#: ../../dev/daily-workflows.rst:391 14d60d3874694593aaf826d9724bca0d
msgid ""
"It is okay to use the system ``/tmp`` directory if they are not mounted "
"inside any containers."
msgstr ""

#: ../../dev/daily-workflows.rst:395 043a4e73c94041e7a002043d22354c6e
msgid "Writing documentation"
msgstr ""

#: ../../dev/daily-workflows.rst:397 7f2ea1b4d5d1456d976df1d7c3f34d65
msgid "Create a new pyenv virtualenv based on Python 3.10."
msgstr ""

#: ../../dev/daily-workflows.rst:403 edfb94b4c6ee4701b63642869a7423d4
msgid "Activate the virtualenv and run:"
msgstr ""

#: ../../dev/daily-workflows.rst:411 f14ada81631d4c748305dc82d1fb35c8
msgid "You can build the docs as follows:"
msgstr ""

#: ../../dev/daily-workflows.rst:419 e263e7a1af9145319d87e2cc56ea1a95
msgid "To locally serve the docs:"
msgstr ""

#: ../../dev/daily-workflows.rst:426 51e0afc0b4274e70a8e90f4105b61c38
msgid ""
"(TODO: Use Pants' own Sphinx support when `pantsbuild/pants#15512 "
"<https://github.com/pantsbuild/pants/pull/15512>`_ is released.)"
msgstr ""

#: ../../dev/daily-workflows.rst:430 675bf8e1fccc434699bc6cd5bf252736
msgid "Advanced Topics"
msgstr ""

#: ../../dev/daily-workflows.rst:433 75367ebd8b334462b241f3a298a853c9
msgid "Adding new external dependencies"
msgstr ""

#: ../../dev/daily-workflows.rst:435 ccec59f45dcc4a1fb5d44add0f9ee83e
msgid ""
"Add the package version requirements to the unified requirements file "
"(``./requirements.txt``)."
msgstr ""

#: ../../dev/daily-workflows.rst:437 6b2a47ef8ed54a61a77b1c7905916b1b
msgid ""
"Update the ``module_mapping`` field in the root build configuration "
"(``./BUILD``) if the package name and its import name differs."
msgstr ""

#: ../../dev/daily-workflows.rst:440 249082a9973f4d91a2f25dc8bbe7192f
msgid ""
"Update the ``type_stubs_module_mapping`` field in the root build "
"configuration if the package provides a type stubs package separately."
msgstr ""

#: ../../dev/daily-workflows.rst:443 dbf66b4f7a0e416497a27e1bb25eda71
msgid "Run:"
msgstr ""

#: ../../dev/daily-workflows.rst:451 9adc201c64a641bd916c97b9ce5342d7
msgid "Merging lockfile conflicts"
msgstr ""

#: ../../dev/daily-workflows.rst:453 c0dfffeb9f6149baa8a97b42992ff97c
msgid ""
"When you work on a branch that adds a new external dependency and the "
"main branch has also another external dependency addition, merging the "
"main branch into your branch is likely to make a merge conflict on "
"``python.lock`` file."
msgstr ""

#: ../../dev/daily-workflows.rst:457 7bc37ea54f364f30ac356f9aaf16f6a8
msgid ""
"In this case, you can just do the followings since we can just "
"*regenerate* the lockfile after merging ``requirements.txt`` and "
"``BUILD`` files."
msgstr ""

#: ../../dev/daily-workflows.rst:470 d8608a089f9a4b22a5ec20df7f38bbef
msgid "Resetting Pants"
msgstr ""

#: ../../dev/daily-workflows.rst:472 a39247befb3546b7bbebaa87e08f72dc
msgid ""
"If Pants behaves strangely, you could simply reset all its runtime-"
"generated files by:"
msgstr ""

#: ../../dev/daily-workflows.rst:479 6980db724afa46c4b2559b870ecb3cb6
msgid ""
"After this, re-running any Pants command will automatically reinitialize "
"itself and all cached data as necessary."
msgstr ""

#: ../../dev/daily-workflows.rst:485 c38813730c5147eaad8ed2b4052db014
msgid "Debugging test cases (or interactively running test cases)"
msgstr ""

#: ../../dev/daily-workflows.rst:487 fef0e9368da14bfd883671ca570cb444
msgid ""
"When your tests *hang*, you can try adding the ``--debug`` flag to the "
"``./pants test`` command:"
msgstr ""

#: ../../dev/daily-workflows.rst:493 655338e405ef46eea71df1e405177eb0
msgid ""
"so that Pants runs the designated test targets **serially and "
"interactively**. This means that you can directly observe the console "
"output and Ctrl+C to gracefully shutdown the tests  with fixture cleanup."
" You can also apply additional pytest options such as ``--fulltrace``, "
"``-s``, etc. by passing them after target arguments and ``--`` when "
"executing ``./pants test`` command."
msgstr ""

#: ../../dev/daily-workflows.rst:500 46b5b90628db4cc281823e40208254c7
msgid ""
"Installing a subset of mono-repo packages in the editable mode for other "
"projects"
msgstr ""

#: ../../dev/daily-workflows.rst:502 bc0f0057dcfa48258eba03fec7ca5466
msgid ""
"Sometimes, you need to editable-install a subset of packages into other "
"project's directories. For instance you could mount the client SDK and "
"its internal dependencies for a Docker container for development."
msgstr ""

#: ../../dev/daily-workflows.rst:505 616965300e0d4ffa9e75063a3b1c0237
msgid "In this case, we recommend to do it as follows:"
msgstr ""

#: ../../dev/daily-workflows.rst:507 13608991b2a44c869015adf3ae62a662
msgid ""
"Run the following command to build a wheel from the current mono-repo "
"source:"
msgstr ""

#: ../../dev/daily-workflows.rst:513 598ccb9024bd47eab5af88225b8d0704
msgid "This will generate ``dist/backend.ai_client-{VERSION}-py3-none-any.whl``."
msgstr ""

#: ../../dev/daily-workflows.rst:515 cc99894024bb43849ad78df8f36bb6a8
msgid ""
"Run ``pip install -U {MONOREPO_PATH}/dist/{WHEEL_FILE}`` in the target "
"environment."
msgstr ""

#: ../../dev/daily-workflows.rst:517 0014b1b1fa48474291302437bff61125
msgid ""
"This will populate the package metadata and install its external "
"dependencies. The target environment may be one of a separate virtualenv "
"or a container being built. For container builds, you need to first "
"``COPY`` the wheel file and install it."
msgstr ""

#: ../../dev/daily-workflows.rst:521 c284f7c5ac6c420990069722c8064e80
msgid ""
"Check the internal dependency directories to link by running the "
"following command:"
msgstr ""

#: ../../dev/daily-workflows.rst:531 e7d5112e041b443ab9217236c2cc15e9
msgid "Link these directories in the target environment."
msgstr ""

#: ../../dev/daily-workflows.rst:533 e0d218f6e4af4fb1afacd6e3b457ef5f
msgid ""
"For example, if it is a Docker container, you could add ``-v "
"{MONOREPO_PATH}/src/ai/backend/{COMPONENT}:/usr/local/lib/python3.10"
"/site-packages/ai/backend/{COMPONENT}`` to the ``docker create`` or "
"``docker run`` commands for all the component directories found in the "
"previous step."
msgstr ""

#: ../../dev/daily-workflows.rst:538 25ac7893d79e432e98f34d4a79e8a8c9
msgid ""
"If it is a local checkout with a pyenv-based virtualenv, you could "
"replace ``$(pyenv prefix)/lib/python3.10/site-"
"packages/ai/backend/{COMPONENT}`` directories with symbolic links to the "
"mono-repo's component source directories."
msgstr ""

#: ../../dev/daily-workflows.rst:543 7e4bd2a7e0b649278435225a8fa94671
msgid "Boosting the performance of Pants commands"
msgstr ""

#: ../../dev/daily-workflows.rst:545 c93189379a11478ca975e9f5044c1759
msgid ""
"Since Pants uses temporary directories for aggressive caching, you could "
"make the ``.tmp`` directory under the working copy root a tmpfs "
"partition:"
msgstr ""

#: ../../dev/daily-workflows.rst:552 4f4b653f2d084319b0a42bbde2e8abac
msgid ""
"To make this persistent across reboots, add the following line to "
"``/etc/fstab``:"
msgstr ""

#: ../../dev/daily-workflows.rst:558 df049e8b07304a7eac8b57f1f7f94699
msgid ""
"The size should be more than 3GB. (Running ``./pants test ::`` consumes "
"about 2GB.)"
msgstr ""

#: ../../dev/daily-workflows.rst:561 e6e30520472a4cd79bf6d5c21302b5ec
msgid ""
"To change the size at runtime, you could simply remount it with a new "
"size option:"
msgstr ""

#: ../../dev/daily-workflows.rst:568 f11bc30ae6b240cd877b7f6be6b239b3
msgid "Making a new release"
msgstr ""

#: ../../dev/daily-workflows.rst:570 f138b1b86203488ca36d87d41a960a4f
msgid ""
"Update ``./VERSION`` file to set a new version number. (Remove the ending"
" new line, e.g., using ``set noeol`` in Vim.  This is also configured in "
"``./editorconfig``)"
msgstr ""

#: ../../dev/daily-workflows.rst:574 9d06566946484de4b5780f4d3652a3e5
msgid ""
"Run ``LOCKSET=tools/towncrier ./py -m towncrier`` to auto-generate the "
"changelog."
msgstr ""

#: ../../dev/daily-workflows.rst:576 4cbc0303af454f91a84aadf7cf1ab64b
msgid ""
"You may append ``--draft`` to see a preview of the changelog update "
"without actually modifying the filesytem."
msgstr ""

#: ../../dev/daily-workflows.rst:579 c337102e9763462996c74c7c4ed17793
msgid ""
"(WIP: `lablup/backend.ai#427 "
"<https://github.com/lablup/backend.ai/pull/427>`_)."
msgstr ""

#: ../../dev/daily-workflows.rst:581 5118cc443a6f408181863eb5c25a3906
msgid "Make a new git commit with the commit message: \"release: <version>\"."
msgstr ""

#: ../../dev/daily-workflows.rst:583 29e4dd1ecf414bb79b3fde79485feee8
msgid ""
"Make an annotated tag to the commit with the message: \"Release "
"v<version>\" or \"Pre-release v<version>\" depending on the release "
"version."
msgstr ""

#: ../../dev/daily-workflows.rst:586 8165a65342ae4e4e9764502241410161
msgid ""
"Push the commit and tag.  The GitHub Actions workflow will build the "
"packages and publish them to PyPI."
msgstr ""

#: ../../dev/daily-workflows.rst:590 170bd1b8fcba4c3ba0f68398c7f9512b
msgid "Backporting to legacy per-pkg repositories"
msgstr ""

#: ../../dev/daily-workflows.rst:592 d20b93403bee48d7a0461b7d3ce072ab
msgid "Use ``git diff`` and ``git apply`` instead of ``git cherry-pick``."
msgstr ""

#: ../../dev/daily-workflows.rst:594 a7fa290437734ffaa9e3397fe4555567
msgid ""
"To perform a three-way merge for conflicts, add ``-3`` option to the "
"``git apply`` command."
msgstr ""

#: ../../dev/daily-workflows.rst:596 1484eed9734045d2b087258544b8e976
msgid ""
"You may need to rewrite some codes as the package structure differs. (The"
" new mono repository has more fine-grained first party packages divided "
"from the ``backend.ai-common`` package.)"
msgstr ""

#: ../../dev/daily-workflows.rst:600 842beb276b0e4e5880123802ba001e64
msgid ""
"When referring the PR/issue numbers in the commit for per-pkg "
"repositories, update them like ``lablup/backend.ai#NNN`` instead of "
"``#NNN``."
msgstr ""

#~ msgid ""
#~ "To activate flake8/mypy checks (in Vim)"
#~ " and get proper intelli-sense support"
#~ " for pytest (in VSCode), just install"
#~ " them in the exported venv as "
#~ "follows. (You need to repeat this "
#~ "when you re-export!)"
#~ msgstr ""

#~ msgid "For Vim, you also need to explicitly activate the exported venv."
#~ msgstr ""

#~ msgid ""
#~ "To develop Backend.AI plugins together, "
#~ "the repository offers a special location"
#~ " ``./plugins`` where you can clone "
#~ "plugin repositories and a shortcut "
#~ "script ``scripts/install-plugin.sh`` to "
#~ "install them inside the exported venv."
#~ msgstr ""

#~ msgid "Manual installation:"
#~ msgstr ""

#~ msgid ""
#~ "Whenever you re-export the venv "
#~ "using ``./pants export ::``, you must"
#~ " *reinstall* the plugins.  There is "
#~ "also a shrotcut script that does "
#~ "this for you: ``scripts/reinstall-"
#~ "plugins.sh``."
#~ msgstr ""

#~ msgid ""
#~ "Sometimes, you may experience bogus "
#~ "\"glob\" warning from pants because it"
#~ " sees a stale cache. In that "
#~ "case, run ``killall -r pantsd`` "
#~ "(``killall pantsd`` in macOS) and it "
#~ "will be fine."
#~ msgstr ""

