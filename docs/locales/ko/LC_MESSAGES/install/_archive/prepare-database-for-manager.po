# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2022, Lablup Inc.
# This file is distributed under the same license as the Backend.AI
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Documentation 22.06\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-06 03:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../install/_archive/prepare-database-for-manager.md:1
#: a4416ca5c4f140389cbe0c3a1b4c2f4d
msgid "## Guide variables"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:3
#: 68a156bffb9b4654b8f4a6aab535bcf2
msgid ""
"⚠️ Prepare the values of the following variables before working with this "
"page and replace their occurrences with the values when you follow the guide."
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:5
#: 5b444e1baa0e43cab83977e767f82656
msgid ""
"<table> <tr><td><code>{NS}</code></td><td>The etcd namespace</td></tr> "
"<tr><td><code>{ETCDADDR}</code></td><td>The etcd cluster address "
"(<code>{ETCDHOST}:{ETCDPORT}</code>, <code>localhost:8120</code> for "
"development setup)</td></tr> <tr><td><code>{DBADDR}</code></td><td>The "
"PostgreSQL server address (<code>{DBHOST}:{DBPORT}</code>, "
"<code>localhost:8100</code> for development setup)</td></tr> "
"<tr><td><code>{DBUSER}</code></td><td>The database username (e.g., "
"<code>postgres</code> for development setup)</td></tr> <tr><td><code>{DBPASS}"
"</code></td><td>The database password (e.g., <code>develove</code> for "
"development setup)</td></tr> <tr><td><code>{STRGMOUNT}</code></td><td>The "
"path to a directory that the manager and all agents share together (e.g., a "
"network-shared storage mountpoint). Note that the path must be same across "
"all the nodes that run the manager and agents.<br><br> Development setup: "
"Use an arbitrary empty directory where Docker containers can also mount as "
"volumes — e.g., <a href=\"https://docs.docker.com/docker-for-mac/#file-"
"sharing\">Docker for Mac requires explicit configuration for mountable "
"parent folders.</a></td></tr> </table>"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:15
#: eafb385e7d284a5ca380200730d8d40e
msgid "## Load initial etcd data"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:17
#: 38600004ac1b48ef95057a6f5042f358
msgid ""
"[![asciicast](https://asciinema.org/a/8vM2cEHEHQzCMaOummV4ruDAm.png)]"
"(https://asciinema.org/a/8vM2cEHEHQzCMaOummV4ruDAm)"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:19
#: 64a81abc81404e068c54838c1d3f0fdc
msgid "```console $ cd backend.ai-manager ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:23
#: 727e6fc2cde34f1d86e6362605cf3879
msgid ""
"Copy `sample-configs/image-metadata.yml` and `sample-configs/image-aliases."
"yml` and edit according to your setup."
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:25
#: 5fe3a18726f640a58f98d6f827eec8d1
msgid ""
"```console $ cp sample-configs/image-metadata.yml image-metadata.yml $ cp "
"sample-configs/image-aliases.yml image-aliases.yml ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:30
#: 020d94877c114203a23873aed8f552b3
msgid ""
"By default you can pull the images listed in the sample via `docker pull "
"lablup/kernel-xxxx:tag`(e.g. `docker pull lablup/kernel-python-tensorflow:"
"latest` for the latest tensorflow) as they are hosted on the public Docker "
"registry."
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:32
#: 0e00224216ec47d58f432487433c63f1
msgid "### Load image registry metadata"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:34
#: 3f9f7e99089740e7acc081a47f4908f7
msgid ""
"(Instead of manually specifying environment variables, you may use `scripts/"
"run-with-halfstack.sh` script in a development setup.)"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:36
#: bb4677b39a07446c9c534f7c5198260c
msgid ""
"```console $ BACKEND_NAMESPACE={NS} BACKEND_ETCD_ADDR={ETCDADDR} \\ > python "
"-m ai.backend.manager.cli etcd update-images \\ >        -f image-metadata."
"yml ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:42
#: 7264cd5a4b52476780316183444ac140
msgid "### Load image aliases"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:44
#: 7a073a6ae31d45528920a27f1a5538d6
msgid ""
"```console $ BACKEND_NAMESPACE={NS} BACKEND_ETCD_ADDR={ETCDADDR} \\ > python "
"-m ai.backend.manager.cli etcd update-aliases \\ >        -f image-aliases."
"yml ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:50
#: 16b9f3292be84a1b88df2f5ddd4e6418
msgid "### Set the default storage mount for virtual folders"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:52
#: 45efbdd0cafa4d49b127e532d9b553d7
msgid ""
"```console $ BACKEND_NAMESPACE={NS} BACKEND_ETCD_ADDR={ETCDADDR} \\ > python "
"-m ai.backend.manager.cli etcd put \\ >        volumes/_mount {STRGMOUNT} ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:58
#: 190cd329e0b8485fb7aa5ef74e1299bc
msgid "## Database Setup"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:60
#: c9256c606e324787af35ea8886717fc4
msgid "### Create a new database"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:62
#: 064ff3c3726941d0ace66dd0f148b3e8
msgid "In docker-compose based configurations, you may skip this step."
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:64
#: 474dab7b85cf44bba02973547815dde0
msgid "```console $ psql -h {DBHOST} -p {DBPORT} -U {DBUSER} ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:68
#: d9568aa205da473c8c9916d323eb407a
msgid "``` postgres=# CREATE DATABASE backend; postgres=# \\q ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:73
#: 7ec3e09f337b4abba506cc4bbd1f526f
msgid "### Install database schema"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:75
#: 7ede6ff638f845c689bb07e0c4cfa599
msgid ""
"Backend.AI uses [alembic](http://alembic.zzzcomputing.com/en/latest/) to "
"manage database schema and its migration during version upgrades. First, "
"localize the sample config:"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:78
#: fabf9d7fa2744e47a0e7a0328a7252b2
msgid "```console $ cp alembic.ini.sample alembic.ini ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:82
#: b4c5182392204285b5252c6a4b68c64b
msgid ""
"Modify the line where `sqlalchemy.url` is set. You may use the following "
"shell command: (ensure that special characters in your password are properly "
"escaped)"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:86
#: 95cd0735a0cb479bb20ff3d89edc7a72
msgid ""
"```console $ sed -i'' -e 's!^sqlalchemy.url = .*$!sqlalchemy.url = "
"postgresql+asyncpg://{DBUSER}:{DBPASS}@{DBHOST}:{DBPORT}/backend!' alembic.ini ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:90
#: 1b06bc2143f94ee9b67215fdd4a5d591
msgid "```console $ python -m ai.backend.manager.cli schema oneshot head ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:94
#: 0867a95211de447fb8a5606163b24e40
msgid ""
"example execution result ```console 201x-xx-xx xx:xx:xx INFO alembic.runtime."
"migration [MainProcess] Context impl PostgresqlImpl. 201x-xx-xx xx:xx:xx "
"INFO alembic.runtime.migration [MainProcess] Will assume transactional DDL. "
"201x-xx-xx xx:xx:xx INFO ai.backend.manager.cli.dbschema [MainProcess] "
"Detected a fresh new database. 201x-xx-xx xx:xx:xx INFO ai.backend.manager."
"cli.dbschema [MainProcess] Creating tables... 201x-xx-xx xx:xx:xx INFO ai."
"backend.manager.cli.dbschema [MainProcess] Stamping alembic version to "
"head... INFO  [alembic.runtime.migration] Context impl PostgresqlImpl. INFO  "
"[alembic.runtime.migration] Will assume transactional DDL. INFO  [alembic."
"runtime.migration] Running stamp_revision  -> f9971fbb34d9 ```"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:106
#: 37dfac620303423b98d0e7a54476c87d
msgid ""
"NOTE: All sub-commands under \"schema\" uses alembic.ini to establish "
"database connections."
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:108
#: f4024f13e7b2415d8fdccb76599eb310
msgid "### Load initial fixtures"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:110
#: f60dcbb3dbd249eb999e7ccdff03fd60
msgid ""
"Edit `ai/backend/manager/models/fixtures.py` so that you have a randomized "
"admin keypair."
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:112
#: 1b12289159c243a8ab9ecd122cfcdfe7
msgid "<span style=\"color:red\">**(TODO: automate here!)**</span>"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:114
#: 14182e430d8440599c935fac61493cd4
msgid "Then pour it to the database:"
msgstr ""

#: ../../install/_archive/prepare-database-for-manager.md:116
#: 31b4177ca0a0408187b57d63895c0e2f
msgid ""
"```console $ python -m ai.backend.manager.cli \\ >   --db-addr={DBHOST}:"
"{DBPORT} \\ >   --db-user={DBUSER} \\ >   --db-password={DBPASS} >   --db-"
"name=backend \\ >   fixture populate example_keypair ``` example execution "
"result ```console 201x-xx-xx xx:xx:xx INFO ai.backend.manager.cli.fixture "
"[MainProcess] populating fixture 'example_keypair' ```"
msgstr ""
