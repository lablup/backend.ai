# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, Lablup Inc.
# This file is distributed under the same license as the Backend.AI API
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI API Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-13 15:33+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../install/install-from-source.rst:2 7335b416a63346b3816d11d7d7d39536
msgid "Install from Source"
msgstr ""

#: ../../install/install-from-source.rst:6 b2ce0d0620df458caf6c08200622c4cb
msgid ""
"For production deployments, we recommend to create separate virtualenvs "
"for individual services and install the pre-built wheel distributions."
msgstr ""

#: ../../install/install-from-source.rst:11 431d96a484ab4b70a12683ad8bcbb3c6
msgid "Setting Up Manager and Agent (single node)"
msgstr ""

#: ../../install/install-from-source.rst:13 e00f96f3a8514b9185fc3f919169aa9d
msgid "Check out :doc:`/install/development-setup`."
msgstr ""

#: ../../install/install-from-source.rst:16 bcb4ee6996f4471b961abe97f5f34e4f
msgid "Setting Up Additional Agents (multi-node)"
msgstr ""

#: ../../install/install-from-source.rst:19 205e8570dcd84c7298a37dfada31d723
msgid "Updating manager configuration for multi-nodes"
msgstr ""

#: ../../install/install-from-source.rst:21
#: ../../install/install-from-source.rst:26 480c552df83f41e1aa03b133226385ea
#: 5bb556d1a32443be8fffd88983859127
msgid "(TODO)"
msgstr ""

#: ../../install/install-from-source.rst:24 d8b0404268f04935b2fd8c780d60b430
msgid "Installing additional agents in different nodes"
msgstr ""

#~ msgid ""
#~ "This is the recommended way to "
#~ "install on most setups, for both "
#~ "development and production."
#~ msgstr ""

#~ msgid ""
#~ "For production deployments, we also "
#~ "recommend pinning specific releases when "
#~ "cloning or updating source repositories."
#~ msgstr ""

#~ msgid "Prerequisites"
#~ msgstr "필수 선행 사항"

#~ msgid "For a standard installation:"
#~ msgstr ""

#~ msgid "Ubuntu 16.04+ / CentOS 7.4+ / macOS 10.12+"
#~ msgstr ""

#~ msgid ""
#~ "For Linux: ``sudo`` with access to "
#~ "the package manager (``apt-get`` or "
#~ "``yum``)"
#~ msgstr ""

#~ msgid ""
#~ "For macOS: `homebrew <https://brew.sh>`_ with"
#~ " the latest Xcode Command Line tools."
#~ msgstr ""

#~ msgid "bash"
#~ msgstr ""

#~ msgid "git"
#~ msgstr ""

#~ msgid "To enable CUDA (only supported in Ubuntu or CentOS):"
#~ msgstr ""

#~ msgid "CUDA 8.0 or later (with compatible NVIDIA driver)"
#~ msgstr ""

#~ msgid "nvidia-docker 1.0 or 2.0"
#~ msgstr ""

#~ msgid "Running the Installer"
#~ msgstr ""

#~ msgid ""
#~ "Clone `the meta repository "
#~ "<https://github.com/lablup/backend.ai>`_ first. For "
#~ "the best result, clone the branch "
#~ "of this repo that matches with the"
#~ " target server branch you want to "
#~ "install. Inside the cloned working copy,"
#~ " ``scripts/install-dev.sh`` is the "
#~ "automatic single-node installation script."
#~ msgstr ""

#~ msgid "It provides the following options (check with ``--help``):"
#~ msgstr ""

#~ msgid "``--python-version``: The Python version to install."
#~ msgstr ""

#~ msgid ""
#~ "``--install-path``: The target directory "
#~ "where individual Backend.AI components are "
#~ "installed together as subdirectories."
#~ msgstr ""

#~ msgid ""
#~ "``--server-branch``: The branch/tag used "
#~ "for the manager, agent, and common "
#~ "components."
#~ msgstr ""

#~ msgid "``--client-branch``: The branch/tag used for the client-py component."
#~ msgstr ""

#~ msgid ""
#~ "``--enable-cuda``: If specified, the "
#~ "installer will install the open-source"
#~ " version of CUDA plugin for the "
#~ "agent."
#~ msgstr ""

#~ msgid "``--cuda-branch``: The branch/tag used for the CUDA plugin."
#~ msgstr ""

#~ msgid ""
#~ "With default options, the script will"
#~ " install a source-based single-node"
#~ " Backend.AI cluster as follows:"
#~ msgstr ""

#~ msgid ""
#~ "The installer tries to install pyenv,"
#~ " the designated Python version, docker-"
#~ "compose, and a few libraries (e.g., "
#~ "libsnappy) automatically after checking their"
#~ " availability.  If it encounters an "
#~ "error during installation, it will show"
#~ " manual instructions and stop."
#~ msgstr ""

#~ msgid ""
#~ "It creates a set of Docker "
#~ "containers for Redis 5, PostgreSQL 9.6,"
#~ " and etcd 3.3 via docker-compose, "
#~ "with the default credentials: The Redis"
#~ " and etcd is configured without "
#~ "authentication and PostgreSQL uses "
#~ "``postgres`` / ``develove``. We call "
#~ "these containers as \"halfstack\"."
#~ msgstr ""

#~ msgid ""
#~ "``./backend.ai-dev/{component}`` where components"
#~ " are manager, agent, common, client, "
#~ "and a few others, using separate "
#~ "virtualenvs. They are all installed as"
#~ " \"editable\" so modifying the cloned "
#~ "sources takes effects immediately."
#~ msgstr ""

#~ msgid ""
#~ "For convenience, when ``cd``-ing into "
#~ "individual component directories, pyenv will"
#~ " activate the virtualenv automatically for"
#~ " supported shells. This is configured "
#~ "via ``pyenv local`` command during "
#~ "installation."
#~ msgstr ""

#~ msgid ""
#~ "The default vfolder mount point is "
#~ "``./backend.ai/vfolder`` and the default "
#~ "vfolder host is ``local``."
#~ msgstr ""

#~ msgid ""
#~ "The installer automatically populates the "
#~ "example fixtures (in the ``sample-"
#~ "configs`` directory of `the manager "
#~ "repository <https://github.com/lablup/backend.ai-"
#~ "manager>`_) for during the database "
#~ "initialization."
#~ msgstr ""

#~ msgid ""
#~ "It automatically updates the list of "
#~ "available Backend.AI kernel images from "
#~ "the public Docker Hub. It also "
#~ "pulls a few frequently used images "
#~ "such as the base Python image."
#~ msgstr ""

#~ msgid ""
#~ "The manager and agent are *NOT* "
#~ "daemonized. You must run them by "
#~ "running ``scripts/run-with-halfstack.sh python"
#~ " -m ...`` inside each component's "
#~ "source clones. Those wrapper scripts "
#~ "configure environment variables suitable for"
#~ " the default halfstack containers."
#~ msgstr ""

#~ msgid "Verifying the Installation"
#~ msgstr ""

#~ msgid ""
#~ "Run the manager and agent as "
#~ "follows in their respective component "
#~ "directories:"
#~ msgstr ""

#~ msgid "manager:"
#~ msgstr ""

#~ msgid ""
#~ "By default, it listens on the "
#~ "localhost's 8080 port using the "
#~ "plain-text HTTP."
#~ msgstr ""

#~ msgid "agent:"
#~ msgstr ""

#~ msgid ""
#~ "The manager and agent may be "
#~ "executed without the root privilege on"
#~ " both Linux and macOS. In Linux, "
#~ "the installer sets extra capability bits"
#~ " to the Python executable so that "
#~ "the agent can manage cgroups and "
#~ "access the Docker daemon."
#~ msgstr ""

#~ msgid ""
#~ "If all is well, they will say "
#~ "\"started\" or \"serving at ...\". You"
#~ " can also check their CLI options "
#~ "using ``--help`` option to change "
#~ "service IP and ports or enable the"
#~ " debug mode."
#~ msgstr ""

#~ msgid ""
#~ "To run a \"hello world\" example, "
#~ "you first need to configure the "
#~ "client using the following script:"
#~ msgstr ""

#~ msgid ""
#~ "And then run the following inside "
#~ "the client directory. If you see "
#~ "similar console logs, your installation "
#~ "is now working:"
#~ msgstr ""

#~ msgid "Updating Manager Configuration for Multi-Nodes"
#~ msgstr ""

