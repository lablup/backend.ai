# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, Lablup Inc.
# This file is distributed under the same license as the Backend.AI API
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI API Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-25 14:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../install/install-from-package.rst:43 014568633eef4e35898d1684329cdfb2
msgid "Table of Contents"
msgstr ""

#: ../../install/install-from-package.rst:2 ce6c01c610174d5a8242fe9ba7471399
msgid "Install from Packages"
msgstr ""

#: ../../install/install-from-package.rst:6 9d09de3f2bc249d8a989e169bc8aed41
msgid ""
"This guide covers how to install Backend.AI from the official release "
"packages. You can build a fully-functional Backend.AI cluster with open-"
"source packages."
msgstr ""

#: ../../install/install-from-package.rst:9 71a03d857b0544b7a101e75ea7545788
msgid ""
"Backend.AI consists of a `variety of components "
"<https://github.com/lablup/backend.ai#major-components>`_, including "
"open-source core components, pluggable extensions, and enterprise "
"modules. Some of the major components are:"
msgstr ""

#: ../../install/install-from-package.rst:14 1cc8435eead24542a527ca7643c9ad9f
msgid ""
"Backend.AI Manager : API gateway and resource management. Manager "
"delegates workload requests to Agent and storage/file requests to Storage"
" Proxy."
msgstr ""

#: ../../install/install-from-package.rst:16 340f289f357a468096940af3513839f9
msgid ""
"Backend.AI Agent : Installs on a compute node (usually GPU nodes) to "
"start and manage the workload execution. It sends periodic heartbeat "
"signals to the Manager in order to register itself as a worker node. Even"
" if the connection to the Manager is temporarily lost, the pre-initiated "
"workloads continue to be executed."
msgstr ""

#: ../../install/install-from-package.rst:21 69086d7d23964ba3a7dd9260b117e451
msgid ""
"Backend.AI Storage Proxy : Handles requests relating to storage and "
"files. It offloads the Manager's burden of handling long-running file I/O"
" operations. It embeds a plugin backend structure that provides dedicated"
" features for each storage type."
msgstr ""

#: ../../install/install-from-package.rst:25 daf19b1c39cd4a8ea97ee1587753e0fd
msgid ""
"Backend.AI Webserver : A web server that provides persistent user web "
"sessions. Users can use the Backend.AI features without subsequent "
"authentication upon initial login. It also serves the statically built "
"graphical user interface in an Enterprise environment."
msgstr ""

#: ../../install/install-from-package.rst:29 575b6fd7f2644725877a5d3cf48d5e77
msgid ""
"Backend.AI Web UI : Web application with a graphical user interface. "
"Users can enjoy the easy-to-use interface to launch their secure "
"execution environment and use apps like Jupyter and Terminal. It can be "
"served as statically built JavaScript via Webserver. Or, it also offers "
"desktop applications for many operating systems and architectures."
msgstr ""

#: ../../install/install-from-package.rst:35 e630e39b5ab841538bc56b7bf7e1419a
msgid ""
"Most components can be installed in a single management node except "
"Agent, which is usually installed on dedicated computing nodes (often GPU"
" servers). However, this is not a rule and Agent can also be installed on"
" the management node."
msgstr ""

#: ../../install/install-from-package.rst:40 fe215042de104b95a1d51fbcfb33a46d
msgid ""
"It is also possible to configure a high-availability (HA) setup with "
"three or more management nodes, although this is not the focus of this "
"guide."
msgstr ""

#~ msgid "Install from Package (Enterprise Edition)"
#~ msgstr ""

#~ msgid ""
#~ "This is for enterprise customers who "
#~ "need self-contained prebuilt packages "
#~ "for private clusters."
#~ msgstr ""

#~ msgid "Prerequisites"
#~ msgstr "필수 선행 사항"

#~ msgid "For a standard installation:"
#~ msgstr ""

#~ msgid "Ubuntu 16.04+ / CentOS 7.4+"
#~ msgstr ""

#~ msgid "sudo"
#~ msgstr ""

#~ msgid "bash"
#~ msgstr ""

#~ msgid "git"
#~ msgstr ""

#~ msgid "To enable CUDA:"
#~ msgstr ""

#~ msgid "CUDA 9.0 or later (with compatible NVIDIA driver)"
#~ msgstr ""

#~ msgid "nvidia-docker 1.0 or 2.0"
#~ msgstr ""

#~ msgid "Running the Installer"
#~ msgstr ""

#~ msgid "Verifying the Installation"
#~ msgstr ""

#~ msgid "(TODO)"
#~ msgstr ""

#~ msgid "Setting Up Single Node All-in-one Deployment"
#~ msgstr ""

#~ msgid ""
#~ "`Configure sysctl/ulimit parameters as "
#~ "recommended. "
#~ "<https://github.com/lablup/backend.ai/blob/main/src/ai/backend/manager/README.md"
#~ "#kernelsystem-configuration>`_"
#~ msgstr ""

#~ msgid "Install Docker and Docker Compose v2."
#~ msgstr ""

#~ msgid ""
#~ "Prepare a Python distribution whose "
#~ "version matches with the package "
#~ "requirements. (e.g., Backend.AI 22.03 and "
#~ "22.09 requires Python 3.10) Either:"
#~ msgstr ""

#~ msgid "Use the Linux distribution's official package"
#~ msgstr ""

#~ msgid ""
#~ "`Use a standalone static build of "
#~ "Python <https://github.com/indygreg/python-build-"
#~ "standalone/releases>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Use pyenv to manually build and "
#~ "select a specific Python version "
#~ "<https://github.com/pyenv/pyenv>`_"
#~ msgstr ""

#~ msgid ""
#~ "You also need to make ``pip`` "
#~ "available to the Python installation "
#~ "with the latest ``wheel`` and "
#~ "``setuptools`` packages, so that any "
#~ "non-binary extension packages can be "
#~ "compiled and installed on your system."
#~ msgstr ""

#~ msgid ""
#~ "Create separate virtualenvs for each "
#~ "service daemons (manager, agent, storage-"
#~ "proxy, and webserver)."
#~ msgstr ""

#~ msgid ""
#~ "Install ``backend.ai-SERVICE`` PyPI packages"
#~ " in the respective virtualenvs, where "
#~ "``SERVICE`` is one of: ``manager``, "
#~ "``agent``, ``storage-proxy``, and "
#~ "``webserver``."
#~ msgstr ""

#~ msgid ""
#~ "Refer `the halfstack docker-compose "
#~ "configuration <https://github.com/lablup/backend.ai/blob/main"
#~ "/docker-compose.halfstack-main.yml>`_ (it's a "
#~ "symbolic link so follow the filename "
#~ "in it): copy it and run ``docker"
#~ " compose up -d`` with it.  Adjust "
#~ "the port numbers and volume paths "
#~ "as needed."
#~ msgstr ""

#~ msgid ""
#~ "For details about configuration in the"
#~ " steps 6 to 10, you can just"
#~ " refer `how our development setup "
#~ "script does. "
#~ "<https://github.com/lablup/backend.ai/blob/main/scripts/install-"
#~ "dev.sh>`_"
#~ msgstr ""

#~ msgid ""
#~ "Refer `the configuration examples in our"
#~ " repository "
#~ "<https://github.com/lablup/backend.ai/tree/main/configs>`_: copy"
#~ " them and adjust the values according"
#~ " to the above step. Be aware "
#~ "that the hostnames and port numbers "
#~ "used to refer other services. You "
#~ "must do configuration for all "
#~ "``SERVICE`` components. Place them in "
#~ "either:"
#~ msgstr ""

#~ msgid "The current working directory for each ``SERVICE`` daemon"
#~ msgstr ""

#~ msgid "``~/.config/backend.ai``"
#~ msgstr ""

#~ msgid "``/etc/backend.ai``"
#~ msgstr ""

#~ msgid ""
#~ "The files named as ``sample`` contain"
#~ " detailed descriptions for each "
#~ "configuration option."
#~ msgstr ""

#~ msgid ""
#~ "Populate the initial etcd configuration "
#~ "as follows. etcd serves as a "
#~ "central shared configuration server for "
#~ "all nodes and provides some distributed"
#~ " synchronization primitives. The following "
#~ "procedure configures the Redis address "
#~ "to share with all nodes, our "
#~ "public image registry, and the storage"
#~ " proxy."
#~ msgstr ""

#~ msgid "where ``REDIS_PORT`` is the TCP port number to access the Redis server."
#~ msgstr ""

#~ msgid ""
#~ "To enable the image registry so "
#~ "that agents can pull images from "
#~ "it, after installation, log in to "
#~ "the web UI using the superadmin "
#~ "account and enable the registry by "
#~ "navigating the \"Administration\" (side-bar)"
#~ " |rarr| the \"Environments\" menu |rarr|"
#~ " the \"Registries\" view."
#~ msgstr ""

#~ msgid ""
#~ "Also, populate the storage-proxy "
#~ "configuration to the etcd by copying "
#~ "`configs/manager/sample.etcd.volumes.json "
#~ "<https://github.com/lablup/backend.ai/blob/main/configs/manager/sample.etcd.volumes.json>`_"
#~ " to ``./volumes.json`` and adjust the "
#~ "settings as you need. Note that "
#~ "you must change the secret to a"
#~ " unique random string for secure "
#~ "communication between the manager and "
#~ "storage-proxy."
#~ msgstr ""

#~ msgid ""
#~ "To enable access to the volumes "
#~ "defined by the storage-proxy from "
#~ "the users, you need to update the"
#~ " ``allowed_vfolder_hosts`` column of the "
#~ "``domains`` table to hold the storage"
#~ " volume reference (e.g., \"local:volume1\"). "
#~ "You can do this by issuing SQL "
#~ "statement directly inside the PostgreSQL "
#~ "container: ``docker exec -it "
#~ "{PGSQL_CONTAINER_ID} psql "
#~ "postgres://postgres:{DBPASSWORD}@localhost:5432/backend database"
#~ " -c '...';``"
#~ msgstr ""

#~ msgid ""
#~ "When you install Backend.AI using "
#~ "packages, note that the entry command"
#~ " is changed to ``backend.ai`` instead "
#~ "of ``./backend.ai`` in a development "
#~ "setup using Pants."
#~ msgstr ""

#~ msgid ""
#~ "Populate the database schema and initial"
#~ " fixtures. Copy the example JSON "
#~ "files (`fixtures/manager/example-keypairs.json "
#~ "<https://github.com/lablup/backend.ai/blob/main/fixtures/manager"
#~ "/example-keypairs.json>`_, `fixtures/manager/example-"
#~ "resource-presets.json "
#~ "<https://github.com/lablup/backend.ai/blob/main/fixtures/manager"
#~ "/example-resource-presets.json>`_) as "
#~ "``keypairs.json`` and ``resource-presets.json``. "
#~ "Customize them to have unique keypairs"
#~ " and passwords for your initial "
#~ "superadmin and sample user accounts."
#~ msgstr ""

#~ msgid "Scan the image registry to fetch the image catalog and metadata."
#~ msgstr ""

#~ msgid ""
#~ "Activate each virtualenv and start the"
#~ " services using ``python -m "
#~ "ai.backend.SERVICE.server`` commands, where "
#~ "``SERVICE`` is one of: ``manager``, "
#~ "``agent``, ``storage``, and ``web``."
#~ msgstr ""

#~ msgid ""
#~ "If it works, daemonize the service "
#~ "daemons using systemctl or any other "
#~ "desired service supervisor."
#~ msgstr ""

#~ msgid ""
#~ "Refer the following systemd configuration "
#~ "sample for an agent. As Backend.AI "
#~ "service daemons do not background by "
#~ "themselves, the main process should be"
#~ " kept track of."
#~ msgstr ""

#~ msgid ""
#~ "To activate the virtualenv when run "
#~ "via systemd, write ``run-SERVICE.sh`` "
#~ "files like:"
#~ msgstr ""

#~ msgid "Setting Up Accelerators"
#~ msgstr ""

#~ msgid ""
#~ "Ensure that your accelerator is properly"
#~ " set up using vendor-specific "
#~ "installation methods."
#~ msgstr ""

#~ msgid ""
#~ "Within the virtualenv for ``backend.ai-"
#~ "agent``, additionally install accelerator "
#~ "plugin packages such as ``backend.ai-"
#~ "accelerator-cuda-open``.  Restart the "
#~ "agent."
#~ msgstr ""

#~ msgid ""
#~ "You also need to configure "
#~ "``agent.toml``'s ``[agent].allow-compute-plugins``"
#~ " with the full package path (e.g.,"
#~ " ``ai.backend.accelerator.cuda_open``) to activate "
#~ "them."
#~ msgstr ""

#~ msgid "Setting Up Multiple Nodes Cluster"
#~ msgstr ""

#~ msgid "Please refer :ref:`multi-node-setup`."
#~ msgstr ""

#~ msgid ""
#~ "The only difference is that you "
#~ "won't need to configure Pants, but "
#~ "just follow the above instructions to"
#~ " set up Python virtualenvs and "
#~ "install the agent packages for each "
#~ "agent node."
#~ msgstr ""

#~ msgid "Setting Up Shared Storage"
#~ msgstr ""

#~ msgid ""
#~ "To make vfolders working properly with"
#~ " multiple nodes, you must enable and"
#~ " configure Linux NFS to share a "
#~ "specific directory of the manager node"
#~ " or make a dedicated storage node "
#~ "exposing its volume via NFS "
#~ "(recommended).  You must mount it in "
#~ "the same path in all manager and"
#~ " agent nodes."
#~ msgstr ""

#~ msgid ""
#~ "It is recommended to unify the UID"
#~ " and GID of the storage-proxy "
#~ "service, all of the agent services "
#~ "across nodes, container UID and GID "
#~ "(configurable in ``agent.toml``), and the "
#~ "NFS volume."
#~ msgstr ""

