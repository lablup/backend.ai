# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Client
# SDK for Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Client SDK for Python 18.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-06 03:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

# 60d8afcc0bef4626aaec7035cfd0c5be
#: ../../client/lowlevel/request.rst:2 62e046383c914755b11886b67b0087c1
msgid "Request API"
msgstr "요청 API"

# 60706e4e70a14753a804bcbe9a4ef6d0
#: ../../client/lowlevel/request.rst:7 4229ce6de41c422f92a6bd120645dcd6
msgid ""
"This module provides low-level API request/response interfaces based on "
"aiohttp."
msgstr ""

# 13aaaccd7aa948c19b73e9d9c1a97bac
#: ../../client/lowlevel/request.rst:10 04ba69fedb5d4745b2d65c3363ba9c86
msgid ""
"Depending on the session object where the request is made from, :class:"
"`Request` and :class:`Response` differentiate their behavior: works as plain "
"Python functions or returns awaitables."
msgstr ""

# 6a21204abb9c47a39a54ed313ddc2180
#: ai.backend.client.request.Request:1 b3c1da41f68c48e19f62ae27865cee78 of
msgid "The API request object."
msgstr ""

# bd8c150d880b4a30898f1a380b6bfbde
#: 43e6029069a342aaa55075fb3ef63d92 ai.backend.client.request.Request.fetch:1
#: of
msgid "Sends the request to the server and reads the response."
msgstr ""

# 6e80c744c49f423087dd64f115ffc9ea
#: af06b708ac324db69ba4cf7ce3377973 ai.backend.client.request.Request.fetch:3
#: of
msgid ""
"You may use this method either with plain synchronous Session or "
"AsyncSession.  Both the followings patterns are valid:"
msgstr ""

# fd64193ccc2d4247a2041e44eb95bff1
# 7f1cb99fc38c4c8186c0a4d19ffb1ed2
# 0b95ccaf8f7b4b92bb4f1a5c8a6865bd
#: 487bc4f79894418690429486fc2337f6 4ef47bb969c5473ba6262cb485d99a1c
#: 64a53a6e2e1d430da873f827042c3199 7bdfad5272b94af2bd666438c5082d0b
#: ai.backend.client.request.Request.attach_files
#: ai.backend.client.request.Request.connect_events
#: ai.backend.client.request.Request.connect_websocket
#: ai.backend.client.request.Request.content
#: ai.backend.client.request.Request.fetch
#: ai.backend.client.request.Request.set_content
#: ai.backend.client.request.Request.set_json b2bdcaf630c849809be0b47a3f40b7ac
#: c99970d7899d4c75901f3cdef12433c4 cf5933a0415b4f96b00e2613a8b4df0f of
msgid "Return type"
msgstr ""

# 7b1a9af880144193970ae0b9249a2516
#: 7260fce52187462e8a7e4a74b9264bc5 ai.backend.client.request.Request.fetch:27
#: of
msgid ":py:class:`~ai.backend.client.request.FetchContextManager`"
msgstr ""

# 92a20a9ee3c74842b05bad28c90fefe9
#: af1a17d9de8d4c908d2c8507795022b4
#: ai.backend.client.request.Request.connect_websocket:1 of
msgid "Creates a WebSocket connection."
msgstr ""

# a7ed41c5c2d24be2a8bfaa7d4e6abb7c
#: 245ca6f430054e24acf5ee39fcc36f70 6f619152df8a40ac8e716ac839ee3fb8
#: ai.backend.client.request.Request.connect_events:5
#: ai.backend.client.request.Request.connect_websocket:5 of
msgid ""
"This method only works with :class:`~ai.backend.client.session.AsyncSession`."
msgstr ""

# 92042e41beda4aec8eb76b3ecae6ccc5
#: ai.backend.client.request.Request.connect_websocket:9
#: d50c7861ccfc45e0b1e298cd80ef2c7b of
msgid ":py:class:`~ai.backend.client.request.WebSocketContextManager`"
msgstr ""

# dc39b179a4784f93842b4f48324f6838
#: 9bde2a7206e04a6d9c05a944d7aa0ca0 ai.backend.client.request.Request.content:1
#: of
msgid ""
"Retrieves the content in the original form. Private codes should NOT use "
"this as it incurs duplicate encoding/decoding."
msgstr ""

#: ai.backend.client.request.Request.content:6 e778a55f732e4857a6e6999cd341e8a4
#: of
msgid ""
":py:data:`~typing.Union`\\[:py:class:`bytes`, :py:class:`bytearray`, :py:"
"class:`str`, :py:class:`~aiohttp.streams.StreamReader`, :py:class:`~io."
"IOBase`, :py:obj:`None`]"
msgstr ""

# 72270586008b4370b7c3c28f89ccd104
#: 054771eff82a4c1fb5bc75bb2e9a4cd5
#: ai.backend.client.request.Request.set_content:1 of
msgid "Sets the content of the request."
msgstr ""

#: 5892c42f7b394ca1ae5cd639676a51a9 6b0a3d0aa45d4923ac3e1f0f19ce447a
#: ai.backend.client.request.Request.attach_files:4
#: ai.backend.client.request.Request.set_content:4
#: ai.backend.client.request.Request.set_json:4
#: e655ac5ea37544d5ab23f8a6eae043ae of
msgid ":py:obj:`None`"
msgstr ""

# 01ec424e0d694e32bde532fa66b81904
#: 0cc5cd9451e34c568e4e2578eeef1f06
#: ai.backend.client.request.Request.set_json:1 of
msgid "A shortcut for set_content() with JSON objects."
msgstr ""

# 06cf5bb32cc24b2a841175a713ac4c77
#: 57b2425d1937493d941213c19c450c66
#: ai.backend.client.request.Request.attach_files:1 of
msgid "Attach a list of files represented as AttachedFile."
msgstr ""

#: 014aeecadbfb46cbb012b5d9e60d2ca2
#: ai.backend.client.request.Request.connect_events:1 of
msgid "Creates a Server-Sent Events connection."
msgstr ""

#: 29ff80e716b5430d843ad3090b90368d
#: ai.backend.client.request.Request.connect_events:9 of
msgid ":py:class:`~ai.backend.client.request.SSEContextManager`"
msgstr ""

# 5efeab6225f646b1a74535f7e8bb665f
#: 6f592872f6c246b2bd38169b49c0458d
#: ai.backend.client.request.WebSocketResponse:1 of
msgid "A high-level wrapper of :class:`aiohttp.ClientWebSocketResponse`."
msgstr ""

# 28ebbeb460ef47968a1974de37494acf
#: 7d0b09645fa3404e89222d4a89fb9b60
#: ai.backend.client.request.FetchContextManager:1 of
msgid "The context manager returned by :func:`Request.fetch`."
msgstr ""

#: ace2f08956704a73987bf8c90b65a1db
#: ai.backend.client.request.FetchContextManager:3 of
msgid ""
"It provides both synchronous and asynchronous context manager interfaces."
msgstr ""

# 4af7406c19a740f09e693947d24687d2
#: 3da9bb78613543f086e9535572341972
#: ai.backend.client.request.WebSocketContextManager:1 of
msgid "The context manager returned by :func:`Request.connect_websocket`."
msgstr ""

# db86c6af603945ee95d12ff1ef621268
#: 3ca821276d7a459ba2c737341ed95dd9 ai.backend.client.request.AttachedFile:1 of
msgid "A struct that represents an attached file to the API request."
msgstr ""

# 0dae1dc98789498ca77f71deccf062a5
#: 2fa8702cd4064aecbe56cfc1b803c9fc ai.backend.client.request.AttachedFile of
msgid "Parameters"
msgstr ""

# e1ab627e36f64439be93b95a0b77b6a2
#: 5e3dac1fe8f1470389d35cd0c0374ef2 ai.backend.client.request.AttachedFile:3 of
msgid ""
"The name of file to store. It may include paths and the server will create "
"parent directories if required."
msgstr ""

# db6c7e01650b49069e80a1188c9c2a57
#: 5273eb084036458abbeb45701c53480d ai.backend.client.request.AttachedFile:7 of
msgid "A file-like object that allows stream-reading bytes."
msgstr ""

# 7012cac1a9a0494cb1253a2ccbeb89df
#: 71d8ef2cd77c4bf288bdc902c9c76376 ai.backend.client.request.AttachedFile:9 of
msgid ""
"The content type for the stream.  For arbitrary binary data, use "
"\"application/octet-stream\"."
msgstr ""

#: ../../docstring a248fd3bfb0d4a20b59004f40a11a47b
#: ai.backend.client.request.AttachedFile.content_type:1 of
msgid "Alias for field number 2"
msgstr ""

#: 5ddc96a4100846eb9c15f27c99e09c80
#: ai.backend.client.request.AttachedFile.count:1 of
msgid "Return number of occurrences of value."
msgstr ""

#: ../../docstring 361f5c15144842bf8988cf4bbf57e3f9
#: ai.backend.client.request.AttachedFile.filename:1 of
msgid "Alias for field number 0"
msgstr ""

#: ai.backend.client.request.AttachedFile.index:1
#: efe15ebfe522492587b4855b4a4d9516 of
msgid "Return first index of value."
msgstr ""

#: ai.backend.client.request.AttachedFile.index:3
#: c1526317a37948b1ae397ad4d19188d3 of
msgid "Raises ValueError if the value is not present."
msgstr ""

#: ../../docstring 84d50a446a5e426fbf3e60e92e470d4d
#: ai.backend.client.request.AttachedFile.stream:1 of
msgid "Alias for field number 1"
msgstr ""
