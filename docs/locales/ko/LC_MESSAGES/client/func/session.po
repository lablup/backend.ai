# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2022, Lablup Inc.
# This file is distributed under the same license as the Backend.AI
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Documentation 22.06\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-25 14:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../client/func/session.rst:2 ff55d34ee44b4a36b5d047df58dcd47b
msgid "ComputeSession Functions"
msgstr ""

#: 5fbe48ffd4a54c2dbc29f3f7b5c51ff9
#: ai.backend.client.func.session.ComputeSession:1 of
msgid "Provides various interactions with compute sessions in Backend.AI."
msgstr ""

#: 9bf304f9f45f4db6bb0bfdb6195c0030
#: ai.backend.client.func.session.ComputeSession:3 of
msgid ""
"The term 'kernel' is now deprecated and we prefer 'compute sessions'. "
"However, for historical reasons and to avoid confusion with client "
"sessions, we keep the backward compatibility with the naming of this API "
"function class."
msgstr ""

#: ai.backend.client.func.session.ComputeSession:7
#: ba4046d47e4b44b3b92ae38a2b7fad07 of
msgid ""
"For multi-container sessions, all methods take effects to the master "
"container only, except :func:`~ComputeSession.destroy` and "
":func:`~ComputeSession.restart` methods. So it is the user's "
"responsibility to distribute uploaded files to multiple containers using "
"explicit copies or virtual folders which are commonly mounted to all "
"containers belonging to the same compute session."
msgstr ""

#: 1311af7425a445a490395bd5c965db53
#: ai.backend.client.func.session.ComputeSession.paginated_list:1 of
msgid "Fetches the list of sessions."
msgstr ""

#: 1b7cc7cdae7046febaa8ac4e7f0b7dec 3b98f250adea49a88644e7fddeccd1e4
#: 48db1477b6ae4e57909587fbca79526b 9a33bfa8b2d04e51a01d0315cc06a98e
#: a7573646a8b74cd0b41e65208e3a4148
#: ai.backend.client.func.session.ComputeSession.complete
#: ai.backend.client.func.session.ComputeSession.create_from_template
#: ai.backend.client.func.session.ComputeSession.download
#: ai.backend.client.func.session.ComputeSession.execute
#: ai.backend.client.func.session.ComputeSession.get_or_create
#: ai.backend.client.func.session.ComputeSession.list_files
#: ai.backend.client.func.session.ComputeSession.paginated_list
#: ai.backend.client.func.session.ComputeSession.upload
#: e6d060ea4fb14e10b087b9c2f3b04930 e826c4a95bf242f39042e15e755f4c42
#: ed843846000246ba8aadb0f64853c6d2 of
msgid "Parameters"
msgstr ""

#: add68a71730b4299bc4175c5ec9e6261
#: ai.backend.client.func.session.ComputeSession.paginated_list:4 of
msgid ""
"Fetches sessions in a specific status (PENDING, SCHEDULED, PULLING, "
"PREPARING,  RUNNING, RESTARTING, RUNNING_DEGRADED,  TERMINATING, "
"TERMINATED, ERROR, CANCELLED)"
msgstr ""

#: 0435d36edb8d480b8abc9c1bf2011b75
#: ai.backend.client.func.session.ComputeSession.paginated_list:4 of
msgid ""
"Fetches sessions in a specific status (PENDING, SCHEDULED, PULLING, "
"PREPARING,"
msgstr ""

#: 0d33952fe7344b56bf4cecb9537cd08a
#: ai.backend.client.func.session.ComputeSession.paginated_list:6 of
msgid ""
"RUNNING, RESTARTING, RUNNING_DEGRADED, TERMINATING, TERMINATED, ERROR, "
"CANCELLED)"
msgstr ""

#: 4f6ccccb809b4ddfa7d58b163d45db22
#: ai.backend.client.func.session.ComputeSession.paginated_list:9 of
msgid "Additional per-session query fields to fetch."
msgstr ""

#: 09f9e18bf01f4435a17c9e4d1be3aa5d 4d9d92fffb51463f9eb06cf53e8df58f
#: 669bdaab3ccf4b3991f5d225053a788c 70b9876503a74f3fa5c1439d10bdfe81
#: 74b194a3c9ca43afb3b1af14366c8075 78a6e74a88f542b2ab4f2b22ef285d8f
#: a86f047cfa5543d7b44a42729cca8daf
#: ai.backend.client.func.session.ComputeSession.complete
#: ai.backend.client.func.session.ComputeSession.create_from_template
#: ai.backend.client.func.session.ComputeSession.get_or_create
#: ai.backend.client.func.session.ComputeSession.listen_events
#: ai.backend.client.func.session.ComputeSession.paginated_list
#: ai.backend.client.func.session.ComputeSession.stream_execute
#: ai.backend.client.func.session.ComputeSession.stream_pty
#: dd2f66e5c70f4e349c11ec72aade6a19 of
msgid "Return type"
msgstr ""

#: ai.backend.client.func.session.ComputeSession.paginated_list:12
#: fd7ccb53e6ea40bd8e8e4c874ce0bbc6 of
msgid ":py:class:`~ai.backend.client.output.types.PaginatedResult`\\[:py:class:`dict`]"
msgstr ""

#: 756b2faaadd343b7b9d9934fb0dba9c9
#: ai.backend.client.func.session.ComputeSession.get_or_create:1 of
msgid ""
"Get-or-creates a compute session. If *name* is ``None``, it creates a new"
" compute session as long as the server has enough resources and your API "
"key has remaining quota. If *name* is a valid string and there is an "
"existing compute session with the same token and the same *image*, then "
"it returns the :class:`ComputeSession` instance representing the existing"
" session."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.create_from_template:13
#: ai.backend.client.func.session.ComputeSession.get_or_create:9
#: d9fd287c3b104f85b8f746b885f37985 e48b73c8936e453bbeec4f89e2b43bdc of
msgid ""
"The image name and tag for the compute session. Example: "
"``python:3.6-ubuntu``. Check out the full list of available images in "
"your server using (TODO: new API)."
msgstr ""

#: 5993a04bc9e7415287a7b64b01054769
#: ai.backend.client.func.session.ComputeSession.create_from_template:18
#: ai.backend.client.func.session.ComputeSession.get_or_create:14
#: f2681cdab07e45c1b25757a517a31476 of
msgid ""
"A client-side (user-defined) identifier to distinguish the session among "
"currently running sessions. It may be used to seamlessly reuse the "
"session already created.  .. versionchanged:: 19.12.0     Renamed from "
"``clientSessionToken``."
msgstr ""

#: 7cb287f807524d7facb7ea451a93751c
#: ai.backend.client.func.session.ComputeSession.create_from_template:18
#: ai.backend.client.func.session.ComputeSession.get_or_create:14
#: b660a4e914e4435da69c26342faae379 of
msgid ""
"A client-side (user-defined) identifier to distinguish the session among "
"currently running sessions. It may be used to seamlessly reuse the "
"session already created."
msgstr ""

#: 36eae6b5039b42fb8bad3dd0e1090ec5 6945a9a3bd1f49e796018d24a8964333
#: ai.backend.client.func.session.ComputeSession.create_from_template:24
#: ai.backend.client.func.session.ComputeSession.get_or_create:20 of
msgid "Renamed from ``clientSessionToken``."
msgstr ""

#: 1cceb5da19b9418eb38fc1e6e903f339
#: ai.backend.client.func.session.ComputeSession.create_from_template:25
#: ai.backend.client.func.session.ComputeSession.get_or_create:21
#: f57d2db1d2ad4979b2ebc9e3eb4f9d7f of
msgid ""
"Either ``\"interactive\"`` (default) or ``\"batch\"``.  .. versionadded::"
" 19.09.0"
msgstr ""

#: 6ac914fc00254e9c96ecf66ef2225152 9973b9508e1d4021a8e893a62bb43b87
#: ai.backend.client.func.session.ComputeSession.create_from_template:25
#: ai.backend.client.func.session.ComputeSession.get_or_create:21 of
msgid "Either ``\"interactive\"`` (default) or ``\"batch\"``."
msgstr ""

#: 372f3982f10a44ac8c7fd454017b6fac 9985452ee5b741dc9f58db31844288e7
#: ai.backend.client.func.session.ComputeSession.create_from_template:29
#: ai.backend.client.func.session.ComputeSession.get_or_create:25 of
msgid ""
"Just enqueue the session creation request and return immediately, without"
" waiting for its startup. (default: ``false`` to preserve the legacy "
"behavior)  .. versionadded:: 19.09.0"
msgstr ""

#: 84020c0371ad4d9fa3f55b6d4e2b62a9 901339fc08834b38922826925f8d1c45
#: ai.backend.client.func.session.ComputeSession.create_from_template:29
#: ai.backend.client.func.session.ComputeSession.get_or_create:25 of
msgid ""
"Just enqueue the session creation request and return immediately, without"
" waiting for its startup. (default: ``false`` to preserve the legacy "
"behavior)"
msgstr ""

#: 4954bfa3604341b08934d5a7da07efe1 53f80ad08bc14cbda3333d489592cf29
#: ai.backend.client.func.session.ComputeSession.create_from_template:35
#: ai.backend.client.func.session.ComputeSession.get_or_create:31 of
msgid ""
"The time to wait for session startup. If the cluster resource is being "
"fully utilized, this waiting time can be arbitrarily long due to job "
"queueing.  If the timeout reaches, the returned *status* field becomes "
"``\"TIMEOUT\"``.  Still in this case, the session may start in the "
"future.  .. versionadded:: 19.09.0"
msgstr ""

#: ai.backend.client.func.session.ComputeSession.create_from_template:35
#: ai.backend.client.func.session.ComputeSession.get_or_create:31
#: bfb8f8e002ee40bab2bc99abfb7e5773 e11e61a0373f43fcb287ad0bff51d07a of
msgid ""
"The time to wait for session startup. If the cluster resource is being "
"fully utilized, this waiting time can be arbitrarily long due to job "
"queueing.  If the timeout reaches, the returned *status* field becomes "
"``\"TIMEOUT\"``.  Still in this case, the session may start in the "
"future."
msgstr ""

#: 9940bfcb03fd414bbe28dad33bfd2e08
#: ai.backend.client.func.session.ComputeSession.create_from_template:42
#: ai.backend.client.func.session.ComputeSession.get_or_create:38
#: ed4d5b072a8a41ad9449dbbf82353c94 of
msgid ""
"Raises an explicit error if a session with the same *image* and the same "
"*name* already exists instead of returning the information of it.  .. "
"versionadded:: 19.09.0"
msgstr ""

#: 409a86a8c8364a2b90242002f3a13e00
#: ai.backend.client.func.session.ComputeSession.create_from_template:42
#: ai.backend.client.func.session.ComputeSession.get_or_create:38
#: f741dabebdfa4b13953545dc0146f357 of
msgid ""
"Raises an explicit error if a session with the same *image* and the same "
"*name* already exists instead of returning the information of it."
msgstr ""

#: 94c04c5b72a942e59e71e6f2b8547b2c
#: ai.backend.client.func.session.ComputeSession.create_from_template:48
#: ai.backend.client.func.session.ComputeSession.get_or_create:44
#: bd8b0dde29884226bc5b0402c3b5e5db of
msgid "The list of vfolder names that belongs to the current API access key."
msgstr ""

#: 72341f4d3ea34a50a6416425407b7ad0 9bdfd2fe63a04eafac0f82efd1e52cde
#: ai.backend.client.func.session.ComputeSession.create_from_template:51
#: ai.backend.client.func.session.ComputeSession.get_or_create:47 of
msgid ""
"Mapping which contains custom path to mount vfolder. Key and value of "
"this map should be vfolder name and custom path. Default mounts or "
"relative paths are under /home/work. If you want different paths, names "
"should be absolute paths. The target mount path of vFolders should not "
"overlap with the linux system folders. vFolders which has a dot(.) prefix"
" in its name are not affected."
msgstr ""

#: 2dbdaf8e43534cdabaa448b1cde5899b
#: ai.backend.client.func.session.ComputeSession.create_from_template:58
#: ai.backend.client.func.session.ComputeSession.get_or_create:54
#: c169cf0eb09e41d2b753f67287682b45 of
msgid "The environment variables which always bypasses the jail policy."
msgstr ""

#: 31198b594eba4149bb70304a6a366092 3591b48d7ac34aac8e07366ed7d8af97
#: ai.backend.client.func.session.ComputeSession.create_from_template:60
#: ai.backend.client.func.session.ComputeSession.get_or_create:56 of
msgid "The resource specification. (TODO: details)"
msgstr ""

#: 774629587a7847b5a7d0f1ad7e685381
#: ai.backend.client.func.session.ComputeSession.create_from_template:62
#: ai.backend.client.func.session.ComputeSession.get_or_create:58
#: da269a28928c48029f2603458f380f57 of
msgid ""
"The number of containers in this compute session. Must be at least 1.  .."
" versionadded:: 19.09.0 .. versionchanged:: 20.09.0"
msgstr ""

#: 3a9133550a974eee8dd996d786ef2557
#: ai.backend.client.func.session.ComputeSession.create_from_template:62
#: ai.backend.client.func.session.ComputeSession.get_or_create:58
#: de0bd7bcf1ee4720990bbcdd31d65b51 of
msgid "The number of containers in this compute session. Must be at least 1."
msgstr ""

#: 5d8f170137de429795731da8392e62d9 92fa18b06f2b42c9bab5f5745a8f03f4
#: ai.backend.client.func.session.ComputeSession.create_from_template:68
#: ai.backend.client.func.session.ComputeSession.get_or_create:64 of
msgid ""
"Set the clustering mode whether to use distributed nodes or a single node"
" to spawn multiple containers for the new session.  .. versionadded:: "
"20.09.0"
msgstr ""

#: 5500d13c6c73424e9aa2098d619b06e4
#: ai.backend.client.func.session.ComputeSession.create_from_template:68
#: ai.backend.client.func.session.ComputeSession.get_or_create:64
#: fdfd2761fdbd4feb81bf81d4ffc91582 of
msgid ""
"Set the clustering mode whether to use distributed nodes or a single node"
" to spawn multiple containers for the new session."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.create_from_template:73
#: ai.backend.client.func.session.ComputeSession.get_or_create:69
#: c4cc52a933684854808be88775a3413c d828784bac22443cb2996fba060a3c8b of
msgid "An optional string to annotate extra information."
msgstr ""

#: 0365140ffa2c41a182832458d6f90c00 082eb71a4096406ebe0229f6e2090f71
#: ai.backend.client.func.session.ComputeSession.create_from_template:74
#: ai.backend.client.func.session.ComputeSession.get_or_create:70 of
msgid ""
"An optional access key that owns the created session. (Only available to "
"administrators)"
msgstr ""

#: ai.backend.client.func.session.ComputeSession.create_from_template:77
#: ai.backend.client.func.session.ComputeSession.get_or_create:73
#: e2beaaa3fa564c499776aa19abfb3531 fb24a2fe317c4131bcdc01ee2220226d of
msgid ":py:class:`~ai.backend.client.func.session.ComputeSession`"
msgstr ""

#: 1bb3c58f2ec54a64b1541a4883cd8a31 2188158bacc74c80bd50a56620acdc1d
#: 6cf9f1cc6470402dbb623e6d26709915 84049af0c2b84f25a2bcb98573d38d86
#: 99ba002a05514c099057f8dabd802466
#: ai.backend.client.func.session.ComputeSession.complete
#: ai.backend.client.func.session.ComputeSession.create_from_template
#: ai.backend.client.func.session.ComputeSession.execute
#: ai.backend.client.func.session.ComputeSession.get_or_create
#: ai.backend.client.func.session.ComputeSession.listen_events
#: ai.backend.client.func.session.ComputeSession.stream_pty
#: bd5c9b8b59174e38bc81c75210f2062c fab8c8a8a6b24992991b8284c8f59749 of
msgid "Returns"
msgstr ""

#: 27d32ec6ef204600b63994e868cd436b aa08317a291f45608bebd2d86684e93c
#: ai.backend.client.func.session.ComputeSession.create_from_template:78
#: ai.backend.client.func.session.ComputeSession.get_or_create:74 of
msgid "The :class:`ComputeSession` instance."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.create_from_template:1
#: ebe05b01be244e598575fca1ed636eb8 of
msgid ""
"Get-or-creates a compute session from template. All other parameters "
"provided  will be overwritten to template, including vfolder mounts (not "
"appended!). If *name* is ``None``, it creates a new compute session as "
"long as the server has enough resources and your API key has remaining "
"quota. If *name* is a valid string and there is an existing compute "
"session with the same token and the same *image*, then it returns the "
":class:`ComputeSession` instance representing the existing session."
msgstr ""

#: 05ec99ed525d4d9f9e2f39c5f83a00fd
#: ai.backend.client.func.session.ComputeSession.create_from_template:11 of
msgid "Task template to apply to compute session."
msgstr ""

#: a168221acf2743dd903a43e1359410d1
#: ai.backend.client.func.session.ComputeSession.destroy:1 of
msgid ""
"Destroys the compute session. Since the server literally kills the "
"container(s), all ongoing executions are forcibly interrupted."
msgstr ""

#: 0e556e493152481c95c149aaf4614b1a
#: ai.backend.client.func.session.ComputeSession.restart:1 of
msgid ""
"Restarts the compute session. The server force-destroys the current "
"running container(s), but keeps their temporary scratch directories "
"intact."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.rename:1
#: b5b578f528de46afbe5150fe82c6503a of
msgid "Renames Session ID of running compute session."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.commit:1
#: d4f3ebd501a34c61905c02440c9adc7c of
msgid "Commit a running session to a tar file in the agent host."
msgstr ""

#: 9331a0450782488da16089bc9f0be522
#: ai.backend.client.func.session.ComputeSession.interrupt:1 of
msgid ""
"Tries to interrupt the current ongoing code execution. This may fail "
"without any explicit errors depending on the code being executed."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.complete:1
#: c91be92275034c248f0a3451ec25f252 of
msgid ""
"Gets the auto-completion candidates from the given code string, as if a "
"user has pressed the tab key just after the code in IDEs."
msgstr ""

#: 78e1b948ed1f4fee8ceb58a859eddd9b
#: ai.backend.client.func.session.ComputeSession.complete:5 of
msgid ""
"Depending on the language of the compute session, this feature may not be"
" supported.  Unsupported sessions returns an empty list."
msgstr ""

#: 6b607cca59434a04a08eea1b6f8a4a4c
#: ai.backend.client.func.session.ComputeSession.complete:9 of
msgid "An (incomplete) code text."
msgstr ""

#: 52e74b0bd7344e88acdb23a2061d93ff
#: ai.backend.client.func.session.ComputeSession.complete:11 of
msgid ""
"Additional information about the current cursor position, such as row, "
"col, line and the remainder text."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.complete:14
#: f71aef4a264f4c0ca74b8b80141bbf54 of
msgid ":py:class:`~typing.Iterable`\\[:py:class:`str`]"
msgstr ""

#: 8e68f519bf404459ad28019f6cbdab3c
#: ai.backend.client.func.session.ComputeSession.complete:15 of
msgid "An ordered list of strings."
msgstr ""

#: 6b267bde64914a86946883c0de940cca
#: ai.backend.client.func.session.ComputeSession.get_info:1 of
msgid "Retrieves a brief information about the compute session."
msgstr ""

#: 07d263501303467cb5d975305b282dd5
#: ai.backend.client.func.session.ComputeSession.get_logs:1 of
msgid "Retrieves the console log of the compute session container."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.get_status_history:1
#: d45791bbac9e4b869d05a26c2ff0769c of
msgid "Retrieves the status transition history of the compute session."
msgstr ""

#: 89a33318605644868faf9f494cb454b6
#: ai.backend.client.func.session.ComputeSession.execute:1 of
msgid ""
"Executes a code snippet directly in the compute session or sends a set of"
" build/clean/execute commands to the compute session."
msgstr ""

#: 28bb649cd54d47ff88de8b1d3239d432
#: ai.backend.client.func.session.ComputeSession.execute:4 of
msgid ""
"For more details about using this API, please refer :doc:`the official "
"API documentation <user-api/intro>`."
msgstr ""

#: 3be8a96d190146a0af93209477e0429a
#: ai.backend.client.func.session.ComputeSession.execute:8 of
msgid ""
"A unique identifier for a particular run loop.  In the first call, it may"
" be ``None`` so that the server auto-assigns one. Subsequent calls must "
"use the returned ``runId`` value to request continuation or to send user "
"inputs."
msgstr ""

#: 65118e9567464a6db71fb6357d6a7cd4
#: ai.backend.client.func.session.ComputeSession.execute:13 of
msgid ""
"A code snippet as string.  In the continuation requests, it must be an "
"empty string.  When sending user inputs, this is where the user input "
"string is stored."
msgstr ""

#: 90e70bb49ff546789a73681f67892012
#: ai.backend.client.func.session.ComputeSession.execute:17 of
msgid ""
"A constant string which is one of ``\"query\"``, ``\"batch\"``, "
"``\"continue\"``, and ``\"user-input\"``."
msgstr ""

#: 8b011591524745e2ba724d2d1d75a566
#: ai.backend.client.func.session.ComputeSession.execute:20 of
msgid ""
"A dict for specifying additional options. Mainly used in the batch mode "
"to specify build/clean/execution commands. See :ref:`the API object "
"reference <batch-execution-query-object>` for details."
msgstr ""

#: 0b883158790d4640b05fd27dd797f5b8
#: ai.backend.client.func.session.ComputeSession.execute:25 of
msgid ":ref:`An execution result object <execution-result-object>`"
msgstr ""

#: ai.backend.client.func.session.ComputeSession.upload:1
#: d18b1d5d6b2a4bff93a22ec01612176c of
msgid ""
"Uploads the given list of files to the compute session. You may refer "
"them in the batch-mode execution or from the code executed in the server "
"afterwards."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.upload:6
#: b13c62c2657546038006ef3b8837e27d of
msgid ""
"The list of file paths in the client-side. If the paths include "
"directories, the location of them in the compute session is calculated "
"from the relative path to *basedir* and all intermediate parent "
"directories are automatically created if not exists.  For example, if a "
"file path is ``/home/user/test/data.txt`` (or ``test/data.txt``) where "
"*basedir* is ``/home/user`` (or the current working directory is "
"``/home/user``), the uploaded file is located at "
"``/home/work/test/data.txt`` in the compute session container."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.upload:6
#: f7271935a8d14cb1980bf56828baa7b0 of
msgid ""
"The list of file paths in the client-side. If the paths include "
"directories, the location of them in the compute session is calculated "
"from the relative path to *basedir* and all intermediate parent "
"directories are automatically created if not exists."
msgstr ""

#: 01a2e7c860de4103bc13d7d7364d0623
#: ai.backend.client.func.session.ComputeSession.upload:11 of
msgid ""
"For example, if a file path is ``/home/user/test/data.txt`` (or "
"``test/data.txt``) where *basedir* is ``/home/user`` (or the current "
"working directory is ``/home/user``), the uploaded file is located at "
"``/home/work/test/data.txt`` in the compute session container."
msgstr ""

#: 9043c412306744f981b061cb3530a958
#: ai.backend.client.func.session.ComputeSession.upload:16 of
msgid ""
"The directory prefix where the files reside. The default value is the "
"current working directory."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.upload:19
#: b0a5528fa66247619e6e13337aa85afc of
msgid "Displays a progress bar during uploads."
msgstr ""

#: 07cd1f28fcd44a7697e786917562fde8
#: ai.backend.client.func.session.ComputeSession.download:1 of
msgid "Downloads the given list of files from the compute session."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.download:4
#: bdbb77bfde8d47dd9f1dc390b1c4877d of
msgid ""
"The list of file paths in the compute session. If they are relative "
"paths, the path is calculated from ``/home/work`` in the compute session "
"container."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.download:8
#: bb6795f6dad6490ba945b4547fe0908c of
msgid "The destination directory in the client-side."
msgstr ""

#: 8171bf43e7b34814aa29a591add49341
#: ai.backend.client.func.session.ComputeSession.download:10 of
msgid "Displays a progress bar during downloads."
msgstr ""

#: 3d83b8f7316a45fa9b052fb0fc3d3a69
#: ai.backend.client.func.session.ComputeSession.list_files:1 of
msgid ""
"Gets the list of files in the given path inside the compute session "
"container."
msgstr ""

#: 273bd7c3ea2d40c0a391c7a91567477b
#: ai.backend.client.func.session.ComputeSession.list_files:5 of
msgid "The directory path in the compute session."
msgstr ""

#: 76327696c2a44623adff55930f2650d2
#: ai.backend.client.func.session.ComputeSession.get_abusing_report:1 of
msgid "Retrieves abusing reports of session's sibling kernels."
msgstr ""

#: 0d2b06b5525c424c9bcaf7c096d8012a 154eedd6760e4417a4c833a9b433be3d
#: ai.backend.client.func.session.ComputeSession.listen_events:1 of
msgid ""
"Opens the stream of the kernel lifecycle events. Only the master kernel "
"of each session is monitored."
msgstr ""

#: 2be4ef66db2f43e59d556ae025b700ef 39ee95079a9349cd8bc5305bcf89716a
#: ai.backend.client.func.session.ComputeSession.listen_events:4 of
msgid ":py:class:`~ai.backend.client.request.SSEContextManager`"
msgstr ""

#: 2fd3f492e7164f27bc8658e3bea6c178 71ef38ba723b470392969769cc6db9ef
#: ai.backend.client.func.session.ComputeSession.listen_events:5 of
msgid "a :class:`StreamEvents` object."
msgstr ""

#: 408537d3fcf544a089c608bf0c578f12
#: ai.backend.client.func.session.ComputeSession.stream_pty:1 of
msgid ""
"Opens a pseudo-terminal of the kernel (if supported) streamed via "
"websockets."
msgstr ""

#: 955f030731144a4a88364d72c714e79a
#: ai.backend.client.func.session.ComputeSession.stream_execute:6
#: ai.backend.client.func.session.ComputeSession.stream_pty:4
#: f0e3089ecf4e42b59b3d9072614161bd of
msgid ":py:class:`~ai.backend.client.request.WebSocketContextManager`"
msgstr ""

#: a7ed6ab34ce84e6b96d876a6f550ea9a
#: ai.backend.client.func.session.ComputeSession.stream_pty:5 of
msgid "a :class:`StreamPty` object."
msgstr ""

#: 4b8627044ffd4191a51b712be8f09039
#: ai.backend.client.func.session.ComputeSession.stream_execute:1 of
msgid ""
"Executes a code snippet in the streaming mode. Since the returned "
"websocket represents a run loop, there is no need to specify *run_id* "
"explicitly."
msgstr ""

#: 70cf17485ab0419b804995139d4ef85b ai.backend.client.func.session.StreamPty:1
#: of
msgid ""
"A derivative class of "
":class:`~ai.backend.client.request.WebSocketResponse` which provides "
"additional functions to control the terminal."
msgstr ""

#~ msgid "Provides various interactions with compute sessions in Backend.AI."
#~ msgstr ""

#~ msgid ""
#~ "The term 'kernel' is now deprecated "
#~ "and we prefer 'compute sessions'. "
#~ "However, for historical reasons and to"
#~ " avoid confusion with client sessions, "
#~ "we keep the backward compatibility with"
#~ " the naming of this API function "
#~ "class."
#~ msgstr ""

#~ msgid ""
#~ "For multi-container sessions, all "
#~ "methods take effects to the master "
#~ "container only, except "
#~ ":func:`~ComputeSession.destroy` and "
#~ ":func:`~ComputeSession.restart` methods. So it "
#~ "is the user's responsibility to "
#~ "distribute uploaded files to multiple "
#~ "containers using explicit copies or "
#~ "virtual folders which are commonly "
#~ "mounted to all containers belonging to"
#~ " the same compute session."
#~ msgstr ""

#~ msgid "Fetches the list of users. Domain admins can only get domain users."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "Fetches active or inactive users only if not None."
#~ msgstr ""

#~ msgid "Additional per-user query fields to fetch."
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid ":py:class:`~ai.backend.client.output.types.PaginatedResult`\\[:py:class:`dict`]"
#~ msgstr ""

#~ msgid ""
#~ "Get-or-creates a compute session. "
#~ "If *name* is ``None``, it creates "
#~ "a new compute session as long as"
#~ " the server has enough resources and"
#~ " your API key has remaining quota."
#~ " If *name* is a valid string "
#~ "and there is an existing compute "
#~ "session with the same token and "
#~ "the same *image*, then it returns "
#~ "the :class:`ComputeSession` instance representing"
#~ " the existing session."
#~ msgstr ""

#~ msgid ""
#~ "The image name and tag for the "
#~ "compute session. Example: ``python:3.6-ubuntu``. "
#~ "Check out the full list of "
#~ "available images in your server using"
#~ " (TODO: new API)."
#~ msgstr ""

#~ msgid ""
#~ "A client-side (user-defined) identifier"
#~ " to distinguish the session among "
#~ "currently running sessions. It may be"
#~ " used to seamlessly reuse the session"
#~ " already created.  .. versionchanged:: "
#~ "19.12.0     Renamed from ``clientSessionToken``."
#~ msgstr ""

#~ msgid ""
#~ "A client-side (user-defined) identifier"
#~ " to distinguish the session among "
#~ "currently running sessions. It may be"
#~ " used to seamlessly reuse the session"
#~ " already created."
#~ msgstr ""

#~ msgid "Renamed from ``clientSessionToken``."
#~ msgstr ""

#~ msgid ""
#~ "Either ``\"interactive\"`` (default) or "
#~ "``\"batch\"``.  .. versionadded:: 19.09.0"
#~ msgstr ""

#~ msgid "Either ``\"interactive\"`` (default) or ``\"batch\"``."
#~ msgstr ""

#~ msgid ""
#~ "Just enqueue the session creation "
#~ "request and return immediately, without "
#~ "waiting for its startup. (default: "
#~ "``false`` to preserve the legacy "
#~ "behavior)  .. versionadded:: 19.09.0"
#~ msgstr ""

#~ msgid ""
#~ "Just enqueue the session creation "
#~ "request and return immediately, without "
#~ "waiting for its startup. (default: "
#~ "``false`` to preserve the legacy "
#~ "behavior)"
#~ msgstr ""

#~ msgid ""
#~ "The time to wait for session "
#~ "startup. If the cluster resource is "
#~ "being fully utilized, this waiting time"
#~ " can be arbitrarily long due to "
#~ "job queueing.  If the timeout reaches,"
#~ " the returned *status* field becomes "
#~ "``\"TIMEOUT\"``.  Still in this case, "
#~ "the session may start in the "
#~ "future.  .. versionadded:: 19.09.0"
#~ msgstr ""

#~ msgid ""
#~ "The time to wait for session "
#~ "startup. If the cluster resource is "
#~ "being fully utilized, this waiting time"
#~ " can be arbitrarily long due to "
#~ "job queueing.  If the timeout reaches,"
#~ " the returned *status* field becomes "
#~ "``\"TIMEOUT\"``.  Still in this case, "
#~ "the session may start in the "
#~ "future."
#~ msgstr ""

#~ msgid ""
#~ "Raises an explicit error if a "
#~ "session with the same *image* and "
#~ "the same *name* already exists instead"
#~ " of returning the information of it."
#~ "  .. versionadded:: 19.09.0"
#~ msgstr ""

#~ msgid ""
#~ "Raises an explicit error if a "
#~ "session with the same *image* and "
#~ "the same *name* already exists instead"
#~ " of returning the information of it."
#~ msgstr ""

#~ msgid "The list of vfolder names that belongs to the current API access key."
#~ msgstr ""

#~ msgid ""
#~ "Mapping which contains custom path to"
#~ " mount vfolder. Key and value of "
#~ "this map should be vfolder name "
#~ "and custom path. Default mounts or "
#~ "relative paths are under /home/work. If"
#~ " you want different paths, names "
#~ "should be absolute paths. The target "
#~ "mount path of vFolders should not "
#~ "overlap with the linux system folders."
#~ " vFolders which has a dot(.) prefix"
#~ " in its name are not affected."
#~ msgstr ""

#~ msgid "The environment variables which always bypasses the jail policy."
#~ msgstr ""

#~ msgid "The resource specification. (TODO: details)"
#~ msgstr ""

#~ msgid ""
#~ "The number of containers in this "
#~ "compute session. Must be at least "
#~ "1.  .. versionadded:: 19.09.0 .. "
#~ "versionchanged:: 20.09.0"
#~ msgstr ""

#~ msgid "The number of containers in this compute session. Must be at least 1."
#~ msgstr ""

#~ msgid ""
#~ "Set the clustering mode whether to "
#~ "use distributed nodes or a single "
#~ "node to spawn multiple containers for"
#~ " the new session.  .. versionadded:: "
#~ "20.09.0"
#~ msgstr ""

#~ msgid ""
#~ "Set the clustering mode whether to "
#~ "use distributed nodes or a single "
#~ "node to spawn multiple containers for"
#~ " the new session."
#~ msgstr ""

#~ msgid "An optional string to annotate extra information."
#~ msgstr ""

#~ msgid ""
#~ "An optional access key that owns "
#~ "the created session. (Only available to"
#~ " administrators)"
#~ msgstr ""

#~ msgid ":py:class:`~ai.backend.client.func.session.ComputeSession`"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "The :class:`ComputeSession` instance."
#~ msgstr ""

#~ msgid ""
#~ "Get-or-creates a compute session "
#~ "from template. All other parameters "
#~ "provided  will be overwritten to "
#~ "template, including vfolder mounts (not "
#~ "appended!). If *name* is ``None``, it"
#~ " creates a new compute session as "
#~ "long as the server has enough "
#~ "resources and your API key has "
#~ "remaining quota. If *name* is a "
#~ "valid string and there is an "
#~ "existing compute session with the same"
#~ " token and the same *image*, then "
#~ "it returns the :class:`ComputeSession` "
#~ "instance representing the existing session."
#~ msgstr ""

#~ msgid "Task template to apply to compute session."
#~ msgstr ""

#~ msgid ""
#~ "Destroys the compute session. Since the"
#~ " server literally kills the container(s),"
#~ " all ongoing executions are forcibly "
#~ "interrupted."
#~ msgstr ""

#~ msgid ""
#~ "Restarts the compute session. The server"
#~ " force-destroys the current running "
#~ "container(s), but keeps their temporary "
#~ "scratch directories intact."
#~ msgstr ""

#~ msgid "Renames Session ID of running compute session."
#~ msgstr ""

#~ msgid "Commit a running session to a tar file in the agent host."
#~ msgstr ""

#~ msgid ""
#~ "Tries to interrupt the current ongoing"
#~ " code execution. This may fail "
#~ "without any explicit errors depending on"
#~ " the code being executed."
#~ msgstr ""

#~ msgid ""
#~ "Gets the auto-completion candidates from"
#~ " the given code string, as if a"
#~ " user has pressed the tab key "
#~ "just after the code in IDEs."
#~ msgstr ""

#~ msgid ""
#~ "Depending on the language of the "
#~ "compute session, this feature may not"
#~ " be supported.  Unsupported sessions "
#~ "returns an empty list."
#~ msgstr ""

#~ msgid "An (incomplete) code text."
#~ msgstr ""

#~ msgid ""
#~ "Additional information about the current "
#~ "cursor position, such as row, col, "
#~ "line and the remainder text."
#~ msgstr ""

#~ msgid ":py:class:`~typing.Iterable`\\[:py:class:`str`]"
#~ msgstr ""

#~ msgid "An ordered list of strings."
#~ msgstr ""

#~ msgid "Retrieves a brief information about the compute session."
#~ msgstr ""

#~ msgid "Retrieves the console log of the compute session container."
#~ msgstr ""

#~ msgid "Retrieves the status transition history of the compute session."
#~ msgstr ""

#~ msgid ""
#~ "Executes a code snippet directly in "
#~ "the compute session or sends a set"
#~ " of build/clean/execute commands to the "
#~ "compute session."
#~ msgstr ""

#~ msgid ""
#~ "For more details about using this "
#~ "API, please refer :doc:`the official API"
#~ " documentation <user-api/intro>`."
#~ msgstr ""

#~ msgid ""
#~ "A unique identifier for a particular "
#~ "run loop.  In the first call, it"
#~ " may be ``None`` so that the "
#~ "server auto-assigns one. Subsequent "
#~ "calls must use the returned ``runId``"
#~ " value to request continuation or to"
#~ " send user inputs."
#~ msgstr ""

#~ msgid ""
#~ "A code snippet as string.  In the"
#~ " continuation requests, it must be an"
#~ " empty string.  When sending user "
#~ "inputs, this is where the user "
#~ "input string is stored."
#~ msgstr ""

#~ msgid ""
#~ "A constant string which is one of"
#~ " ``\"query\"``, ``\"batch\"``, ``\"continue\"``, "
#~ "and ``\"user-input\"``."
#~ msgstr ""

#~ msgid ""
#~ "A dict for specifying additional "
#~ "options. Mainly used in the batch "
#~ "mode to specify build/clean/execution "
#~ "commands. See :ref:`the API object "
#~ "reference <batch-execution-query-object>` "
#~ "for details."
#~ msgstr ""

#~ msgid ":ref:`An execution result object <execution-result-object>`"
#~ msgstr ""

#~ msgid ""
#~ "Uploads the given list of files to"
#~ " the compute session. You may refer"
#~ " them in the batch-mode execution "
#~ "or from the code executed in the"
#~ " server afterwards."
#~ msgstr ""

#~ msgid ""
#~ "The list of file paths in the "
#~ "client-side. If the paths include "
#~ "directories, the location of them in "
#~ "the compute session is calculated from"
#~ " the relative path to *basedir* and"
#~ " all intermediate parent directories are"
#~ " automatically created if not exists.  "
#~ "For example, if a file path is "
#~ "``/home/user/test/data.txt`` (or ``test/data.txt``) "
#~ "where *basedir* is ``/home/user`` (or "
#~ "the current working directory is "
#~ "``/home/user``), the uploaded file is "
#~ "located at ``/home/work/test/data.txt`` in the"
#~ " compute session container."
#~ msgstr ""

#~ msgid ""
#~ "The list of file paths in the "
#~ "client-side. If the paths include "
#~ "directories, the location of them in "
#~ "the compute session is calculated from"
#~ " the relative path to *basedir* and"
#~ " all intermediate parent directories are"
#~ " automatically created if not exists."
#~ msgstr ""

#~ msgid ""
#~ "For example, if a file path is "
#~ "``/home/user/test/data.txt`` (or ``test/data.txt``) "
#~ "where *basedir* is ``/home/user`` (or "
#~ "the current working directory is "
#~ "``/home/user``), the uploaded file is "
#~ "located at ``/home/work/test/data.txt`` in the"
#~ " compute session container."
#~ msgstr ""

#~ msgid ""
#~ "The directory prefix where the files "
#~ "reside. The default value is the "
#~ "current working directory."
#~ msgstr ""

#~ msgid "Displays a progress bar during uploads."
#~ msgstr ""

#~ msgid "Downloads the given list of files from the compute session."
#~ msgstr ""

#~ msgid ""
#~ "The list of file paths in the "
#~ "compute session. If they are relative"
#~ " paths, the path is calculated from"
#~ " ``/home/work`` in the compute session "
#~ "container."
#~ msgstr ""

#~ msgid "The destination directory in the client-side."
#~ msgstr ""

#~ msgid "Displays a progress bar during downloads."
#~ msgstr ""

#~ msgid ""
#~ "Gets the list of files in the "
#~ "given path inside the compute session"
#~ " container."
#~ msgstr ""

#~ msgid "The directory path in the compute session."
#~ msgstr ""

#~ msgid ""
#~ "Opens the stream of the kernel "
#~ "lifecycle events. Only the master kernel"
#~ " of each session is monitored."
#~ msgstr ""

#~ msgid ":py:class:`~ai.backend.client.request.SSEContextManager`"
#~ msgstr ""

#~ msgid "a :class:`StreamEvents` object."
#~ msgstr ""

#~ msgid ""
#~ "Opens a pseudo-terminal of the "
#~ "kernel (if supported) streamed via "
#~ "websockets."
#~ msgstr ""

#~ msgid ":py:class:`~ai.backend.client.request.WebSocketContextManager`"
#~ msgstr ""

#~ msgid "a :class:`StreamPty` object."
#~ msgstr ""

#~ msgid ""
#~ "Executes a code snippet in the "
#~ "streaming mode. Since the returned "
#~ "websocket represents a run loop, there"
#~ " is no need to specify *run_id* "
#~ "explicitly."
#~ msgstr ""

#~ msgid ""
#~ "A derivative class of "
#~ ":class:`~ai.backend.client.request.WebSocketResponse` which "
#~ "provides additional functions to control "
#~ "the terminal."
#~ msgstr ""

