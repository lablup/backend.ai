# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2022, Lablup Inc.
# This file is distributed under the same license as the Backend.AI
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Documentation 22.06\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-06 03:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../client/func/session.rst:2 36de2f05510443449762cd06f65486c7
msgid "ComputeSession Functions"
msgstr ""

#: 9c7ea9d2751b42928f7cb571f16bd0b4
#: ai.backend.client.func.session.ComputeSession:1 of
msgid "Provides various interactions with compute sessions in Backend.AI."
msgstr ""

#: ai.backend.client.func.session.ComputeSession:3
#: b42ea2ce841d43a598c36af7ae45d8d6 of
msgid ""
"The term 'kernel' is now deprecated and we prefer 'compute sessions'. "
"However, for historical reasons and to avoid confusion with client sessions, "
"we keep the backward compatibility with the naming of this API function "
"class."
msgstr ""

#: ai.backend.client.func.session.ComputeSession:7
#: bbaa3699a729431f995175bc971c54c5 of
msgid ""
"For multi-container sessions, all methods take effects to the master "
"container only, except :func:`~ComputeSession.destroy` and :func:"
"`~ComputeSession.restart` methods. So it is the user's responsibility to "
"distribute uploaded files to multiple containers using explicit copies or "
"virtual folders which are commonly mounted to all containers belonging to "
"the same compute session."
msgstr ""

#: 1b7b7a1d6da14215be10b25ac1ebb76d
#: ai.backend.client.func.session.ComputeSession.paginated_list:1 of
msgid "Fetches the list of users. Domain admins can only get domain users."
msgstr ""

#: 330baf72e38e4bb0be0c0666bd40701b 55b6fe69a86f4c6c930add8e0400c973
#: 5e67f708baab4b0d8378a4657a8e6c46 800050757e5a43dd84edda8a5321a5dc
#: 996da72c5aff4feeb8931b5ff05c8cd6
#: ai.backend.client.func.session.ComputeSession.complete
#: ai.backend.client.func.session.ComputeSession.create_from_template
#: ai.backend.client.func.session.ComputeSession.download
#: ai.backend.client.func.session.ComputeSession.execute
#: ai.backend.client.func.session.ComputeSession.get_or_create
#: ai.backend.client.func.session.ComputeSession.list_files
#: ai.backend.client.func.session.ComputeSession.paginated_list
#: ai.backend.client.func.session.ComputeSession.upload
#: c0dc7a20cbac4c1baca273497d7b90a4 e78e891ed18a491f8cf681337464c278
#: f915e90318bd4c82a1eb96ad88842f04 of
msgid "Parameters"
msgstr ""

#: 313430cc1290410ea3f9fc0df3da29cb
#: ai.backend.client.func.session.ComputeSession.paginated_list:3 of
msgid "Fetches active or inactive users only if not None."
msgstr ""

#: 404d693cb83c4d4f94dfca43fc68eba8
#: ai.backend.client.func.session.ComputeSession.paginated_list:5 of
msgid "Additional per-user query fields to fetch."
msgstr ""

#: 0427915ea6114e70aadf4cd6e8e588a2 1b15365ea25946718e9477944bc5de57
#: 388dc634903b418192ab852190b1fcbb 566ca1aea71b4e42958a5d25c6f5e6e4
#: 6fd0e5584aef460d9c3c3109c10d56e1
#: ai.backend.client.func.session.ComputeSession.complete
#: ai.backend.client.func.session.ComputeSession.create_from_template
#: ai.backend.client.func.session.ComputeSession.get_or_create
#: ai.backend.client.func.session.ComputeSession.listen_events
#: ai.backend.client.func.session.ComputeSession.paginated_list
#: ai.backend.client.func.session.ComputeSession.stream_execute
#: ai.backend.client.func.session.ComputeSession.stream_pty
#: bd99cdadf9b448a8a574df9940f3ad8a d847d95807c44416b6c60cde7352f74d
#: f83f930edaa2458f8386f6ec7ab13e52 of
msgid "Return type"
msgstr ""

#: ai.backend.client.func.session.ComputeSession.paginated_list:8
#: e196e4e88ac942a5bfacdbb0861a249e of
msgid ""
":py:class:`~ai.backend.client.output.types.PaginatedResult`\\[:py:class:"
"`dict`]"
msgstr ""

#: 459aef3b644a4ede847ac5406cd9ea8a
#: ai.backend.client.func.session.ComputeSession.get_or_create:1 of
msgid ""
"Get-or-creates a compute session. If *name* is ``None``, it creates a new "
"compute session as long as the server has enough resources and your API key "
"has remaining quota. If *name* is a valid string and there is an existing "
"compute session with the same token and the same *image*, then it returns "
"the :class:`ComputeSession` instance representing the existing session."
msgstr ""

#: 4aedf56de82e458e9b901673a47ef1fb 4c56e82f685e4b65b1a700da33c78385
#: ai.backend.client.func.session.ComputeSession.create_from_template:13
#: ai.backend.client.func.session.ComputeSession.get_or_create:9 of
msgid ""
"The image name and tag for the compute session. Example: ``python:3.6-"
"ubuntu``. Check out the full list of available images in your server using "
"(TODO: new API)."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.create_from_template:18
#: ai.backend.client.func.session.ComputeSession.get_or_create:14
#: ba320357d0444bf79edc00a0a4f4ac4f bb0e0a63dfff400589abf94a96d0709b of
msgid ""
"A client-side (user-defined) identifier to distinguish the session among "
"currently running sessions. It may be used to seamlessly reuse the session "
"already created.  .. versionchanged:: 19.12.0     Renamed from "
"``clientSessionToken``."
msgstr ""

#: 02956d96cb75450ba53d3bc0a2f24156 217923ad9e65459f95ea9c71ee4bc3ad
#: ai.backend.client.func.session.ComputeSession.create_from_template:18
#: ai.backend.client.func.session.ComputeSession.get_or_create:14 of
msgid ""
"A client-side (user-defined) identifier to distinguish the session among "
"currently running sessions. It may be used to seamlessly reuse the session "
"already created."
msgstr ""

#: 11475c0ea0c04ad7b7c4475c250e6467 70f24031df6a4b1fb9d3c77d2b9c0b51
#: ai.backend.client.func.session.ComputeSession.create_from_template:24
#: ai.backend.client.func.session.ComputeSession.get_or_create:20 of
msgid "Renamed from ``clientSessionToken``."
msgstr ""

#: 7b4f10f1ff414b26b9a12f3af0761705
#: ai.backend.client.func.session.ComputeSession.create_from_template:25
#: ai.backend.client.func.session.ComputeSession.get_or_create:21
#: d0919c0a516c4066b10a9c5b50541483 of
msgid ""
"Either ``\"interactive\"`` (default) or ``\"batch\"``.  .. versionadded:: "
"19.09.0"
msgstr ""

#: 271fa74a048a4c82b86a7b7623313cbd
#: ai.backend.client.func.session.ComputeSession.create_from_template:25
#: ai.backend.client.func.session.ComputeSession.get_or_create:21
#: c05f2868e3e6465a8b8a9494210246c0 of
msgid "Either ``\"interactive\"`` (default) or ``\"batch\"``."
msgstr ""

#: 36d06e3f80e54646bd274f145bef14c1
#: ai.backend.client.func.session.ComputeSession.create_from_template:29
#: ai.backend.client.func.session.ComputeSession.get_or_create:25
#: db28f711f4514d4eb3b3fe201f1f7119 of
msgid ""
"Just enqueue the session creation request and return immediately, without "
"waiting for its startup. (default: ``false`` to preserve the legacy "
"behavior)  .. versionadded:: 19.09.0"
msgstr ""

#: 15e2e474712e482ab2b4460686c54858
#: ai.backend.client.func.session.ComputeSession.create_from_template:29
#: ai.backend.client.func.session.ComputeSession.get_or_create:25
#: d3ead2e047c9497d9d76d2df4f6dff65 of
msgid ""
"Just enqueue the session creation request and return immediately, without "
"waiting for its startup. (default: ``false`` to preserve the legacy behavior)"
msgstr ""

#: 96413a10f80a4a38b9c87bf52bb21ea1
#: ai.backend.client.func.session.ComputeSession.create_from_template:35
#: ai.backend.client.func.session.ComputeSession.get_or_create:31
#: cff7a0fad4cb408a8b9deeffe6d171dd of
msgid ""
"The time to wait for session startup. If the cluster resource is being fully "
"utilized, this waiting time can be arbitrarily long due to job queueing.  If "
"the timeout reaches, the returned *status* field becomes ``\"TIMEOUT\"``.  "
"Still in this case, the session may start in the future.  .. versionadded:: "
"19.09.0"
msgstr ""

#: 13eb4e22311649d2b8986c532ba09c5f 4f4f032d6388416eb2cf8ba2f57c11e5
#: ai.backend.client.func.session.ComputeSession.create_from_template:35
#: ai.backend.client.func.session.ComputeSession.get_or_create:31 of
msgid ""
"The time to wait for session startup. If the cluster resource is being fully "
"utilized, this waiting time can be arbitrarily long due to job queueing.  If "
"the timeout reaches, the returned *status* field becomes ``\"TIMEOUT\"``.  "
"Still in this case, the session may start in the future."
msgstr ""

#: a9c891e2075248eaaf12f589f13f478b
#: ai.backend.client.func.session.ComputeSession.create_from_template:42
#: ai.backend.client.func.session.ComputeSession.get_or_create:38
#: fba31a856f7e48e3bfd9a3510e93ae78 of
msgid ""
"Raises an explicit error if a session with the same *image* and the same "
"*name* already exists instead of returning the information of it.  .. "
"versionadded:: 19.09.0"
msgstr ""

#: 9f1c0e07892d4a3f877544c283fdaef1
#: ai.backend.client.func.session.ComputeSession.create_from_template:42
#: ai.backend.client.func.session.ComputeSession.get_or_create:38
#: bdbcffea9ca9495088baa64c8b9fbb64 of
msgid ""
"Raises an explicit error if a session with the same *image* and the same "
"*name* already exists instead of returning the information of it."
msgstr ""

#: 09bb1b83e9df4bd58f2efafd72928146
#: ai.backend.client.func.session.ComputeSession.create_from_template:48
#: ai.backend.client.func.session.ComputeSession.get_or_create:44
#: e51e213d0e8641789da6437c2438b866 of
msgid "The list of vfolder names that belongs to the currrent API access key."
msgstr ""

#: 4abbdb4a90fb4650b976a4c84b6f4b78
#: ai.backend.client.func.session.ComputeSession.create_from_template:51
#: ai.backend.client.func.session.ComputeSession.get_or_create:47
#: f78eb2d1d0264601bae6b450efd36881 of
msgid ""
"Mapping which contains custom path to mount vfolder. Key and value of this "
"map should be vfolder name and custom path. Defalut mounts or relative paths "
"are under /home/work. If you want different paths, names should be absolute "
"paths. The target mount path of vFolders should not overlap with the linux "
"system folders. vFolders which has a dot(.) prefix in its name are not "
"affected."
msgstr ""

#: 9b5e7f2b4dc5414bba0cfd98b4de2a46
#: ai.backend.client.func.session.ComputeSession.create_from_template:58
#: ai.backend.client.func.session.ComputeSession.get_or_create:54
#: def857908508489ea381ae655182f93e of
msgid "The environment variables which always bypasses the jail policy."
msgstr ""

#: 41c7098aff094d34ad68065d12a0cfe3 43cf21e7125a4a35b1deb8d5dc5f6d2f
#: ai.backend.client.func.session.ComputeSession.create_from_template:60
#: ai.backend.client.func.session.ComputeSession.get_or_create:56 of
msgid "The resource specification. (TODO: details)"
msgstr ""

#: 41de697403674e01ad18c12dfe27c459 6abaeba912264f62bd8759da4685ad33
#: ai.backend.client.func.session.ComputeSession.create_from_template:62
#: ai.backend.client.func.session.ComputeSession.get_or_create:58 of
msgid ""
"The number of containers in this compute session. Must be at least 1.  .. "
"versionadded:: 19.09.0 .. versionchanged:: 20.09.0"
msgstr ""

#: 7194d485e7ce4ba0980238402fa1ffc6 76f64477429341aead75e98179631202
#: ai.backend.client.func.session.ComputeSession.create_from_template:62
#: ai.backend.client.func.session.ComputeSession.get_or_create:58 of
msgid "The number of containers in this compute session. Must be at least 1."
msgstr ""

#: 4d18772446c141dd9caaaa7ed11cfa83 a629a35641084495818d2459ea6cc639
#: ai.backend.client.func.session.ComputeSession.create_from_template:68
#: ai.backend.client.func.session.ComputeSession.get_or_create:64 of
msgid ""
"Set the clustering mode whether to use distributed nodes or a single node to "
"spawn multiple containers for the new session.  .. versionadded:: 20.09.0"
msgstr ""

#: 77ff9ba24dc34218a4c080f9e562c184 9b5f6fc81e7a4ea08a3c9709dc921d60
#: ai.backend.client.func.session.ComputeSession.create_from_template:68
#: ai.backend.client.func.session.ComputeSession.get_or_create:64 of
msgid ""
"Set the clustering mode whether to use distributed nodes or a single node to "
"spawn multiple containers for the new session."
msgstr ""

#: 0043128896284ffe858752df230dc572 2535a42ccfb24249bcce00fc7a42dbf0
#: ai.backend.client.func.session.ComputeSession.create_from_template:73
#: ai.backend.client.func.session.ComputeSession.get_or_create:69 of
msgid "An optional string to annotate extra information."
msgstr ""

#: 0369cf96a39543c98f1e1cf840b7ace3 5da298ca4d834ee4945272b779dbf64e
#: ai.backend.client.func.session.ComputeSession.create_from_template:74
#: ai.backend.client.func.session.ComputeSession.get_or_create:70 of
msgid ""
"An optional access key that owns the created session. (Only available to "
"administrators)"
msgstr ""

#: 7bb5bf12cfb94034a884273d13d03bba
#: ai.backend.client.func.session.ComputeSession.create_from_template:77
#: ai.backend.client.func.session.ComputeSession.get_or_create:73
#: b9ecffe53e364e39bd1659e95c56019f of
msgid ":py:class:`~ai.backend.client.func.session.ComputeSession`"
msgstr ""

#: 05b8ec44a4a94396b8bb5affd4e1ab72 090a8ed799924c969304b6c204322ae1
#: 53cbc6d3a714468a888c3680283940d7 6d9ec0cbb7fa450682237f9deb48e09f
#: 7f92ff68b8de4c85a2492c71b4c25f60 810eb43b7e34405bbee70d627cba3c1e
#: ai.backend.client.func.session.ComputeSession.complete
#: ai.backend.client.func.session.ComputeSession.create_from_template
#: ai.backend.client.func.session.ComputeSession.execute
#: ai.backend.client.func.session.ComputeSession.get_or_create
#: ai.backend.client.func.session.ComputeSession.listen_events
#: ai.backend.client.func.session.ComputeSession.stream_pty
#: ef23bb16609747e4b09320d0ae88f882 of
msgid "Returns"
msgstr ""

#: 0e76b16dd5ee4ea696a0032f3a374072 2961290734d04d7b840fdfaa683cbbbf
#: ai.backend.client.func.session.ComputeSession.create_from_template:78
#: ai.backend.client.func.session.ComputeSession.get_or_create:74 of
msgid "The :class:`ComputeSession` instance."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.create_from_template:1
#: dbb2f3fd59ab4a42b3bb24b05bd95ab8 of
msgid ""
"Get-or-creates a compute session from template. All other parameters "
"provided  will be overwritten to template, including vfolder mounts (not "
"appended!). If *name* is ``None``, it creates a new compute session as long "
"as the server has enough resources and your API key has remaining quota. If "
"*name* is a valid string and there is an existing compute session with the "
"same token and the same *image*, then it returns the :class:`ComputeSession` "
"instance representing the existing session."
msgstr ""

#: 6aac0dbb515140f0a17e793ad47ef2fd
#: ai.backend.client.func.session.ComputeSession.create_from_template:11 of
msgid "Task template to apply to compute session."
msgstr ""

#: 6fcb5d4b84114890aa868fef1d7738d4
#: ai.backend.client.func.session.ComputeSession.destroy:1 of
msgid ""
"Destroys the compute session. Since the server literally kills the "
"container(s), all ongoing executions are forcibly interrupted."
msgstr ""

#: 02273acae4064abfb645996323dd7306
#: ai.backend.client.func.session.ComputeSession.restart:1 of
msgid ""
"Restarts the compute session. The server force-destroys the current running "
"container(s), but keeps their temporary scratch directories intact."
msgstr ""

#: a46c4b43568842d6a5dedda3cc6af8b5
#: ai.backend.client.func.session.ComputeSession.rename:1 of
msgid "Renames Session ID of running compute session."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.interrupt:1
#: e063b4dff9444eb8ad87e7c61b3fe44b of
msgid ""
"Tries to interrupt the current ongoing code execution. This may fail without "
"any explicit errors depending on the code being executed."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.complete:1
#: d6f3333cc1944b1d81e8a8094fdb5749 of
msgid ""
"Gets the auto-completion candidates from the given code string, as if a user "
"has pressed the tab key just after the code in IDEs."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.complete:5
#: e09c0da04dcf4b5abf4934482be23a90 of
msgid ""
"Depending on the language of the compute session, this feature may not be "
"supported.  Unsupported sessions returns an empty list."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.complete:9
#: c30419c0a293419282af59db2d2d6be8 of
msgid "An (incomplete) code text."
msgstr ""

#: 5c6003c839f34a83b39ea0952d186b4d
#: ai.backend.client.func.session.ComputeSession.complete:11 of
msgid ""
"Additional information about the current cursor position, such as row, col, "
"line and the remainder text."
msgstr ""

#: 2110d2a806404950beb599152f6d4b23
#: ai.backend.client.func.session.ComputeSession.complete:14 of
msgid ":py:class:`~typing.Iterable`\\[:py:class:`str`]"
msgstr ""

#: 40828c5117bb4477afbefa7d4b526c79
#: ai.backend.client.func.session.ComputeSession.complete:15 of
msgid "An ordered list of strings."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.get_info:1
#: f0c5d7fd3a974ab382dbae32b87ffec9 of
msgid "Retrieves a brief information about the compute session."
msgstr ""

#: 394041e2d707428ca5ec1840a5e1396b
#: ai.backend.client.func.session.ComputeSession.get_logs:1 of
msgid "Retrieves the console log of the compute session container."
msgstr ""

#: 82efa928282f4ebb9d2fb774d78e74bb
#: ai.backend.client.func.session.ComputeSession.execute:1 of
msgid ""
"Executes a code snippet directly in the compute session or sends a set of "
"build/clean/execute commands to the compute session."
msgstr ""

#: 290d3bd85a334c48ae4623592fc8655b
#: ai.backend.client.func.session.ComputeSession.execute:4 of
msgid ""
"For more details about using this API, please refer :doc:`the official API "
"documentation <user-api/intro>`."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.execute:8
#: e408355d1f89408786079295a1d9edce of
msgid ""
"A unique identifier for a particular run loop.  In the first call, it may be "
"``None`` so that the server auto-assigns one. Subsequent calls must use the "
"returned ``runId`` value to request continuation or to send user inputs."
msgstr ""

#: 68656568e5b743759ff579ccc9666068
#: ai.backend.client.func.session.ComputeSession.execute:13 of
msgid ""
"A code snippet as string.  In the continuation requests, it must be an empty "
"string.  When sending user inputs, this is where the user input string is "
"stored."
msgstr ""

#: 58768ecce0884b3fa9affdb36cf0e8e8
#: ai.backend.client.func.session.ComputeSession.execute:17 of
msgid ""
"A constant string which is one of ``\"query\"``, ``\"batch\"``, ``\"continue"
"\"``, and ``\"user-input\"``."
msgstr ""

#: 2f4310551ea548bea7eba8046d62abb7
#: ai.backend.client.func.session.ComputeSession.execute:20 of
msgid ""
"A dict for specifying additional options. Mainly used in the batch mode to "
"specify build/clean/execution commands. See :ref:`the API object reference "
"<batch-execution-query-object>` for details."
msgstr ""

#: 591a350fd24a4760957571e75578fe69
#: ai.backend.client.func.session.ComputeSession.execute:25 of
msgid ":ref:`An execution result object <execution-result-object>`"
msgstr ""

#: ai.backend.client.func.session.ComputeSession.upload:1
#: df7e422bc5304567a8b2c94d79d13e23 of
msgid ""
"Uploads the given list of files to the compute session. You may refer them "
"in the batch-mode execution or from the code executed in the server "
"afterwards."
msgstr ""

#: 7bc286691aa849be9bbc6ae7d35f7ee4
#: ai.backend.client.func.session.ComputeSession.upload:6 of
msgid ""
"The list of file paths in the client-side. If the paths include directories, "
"the location of them in the compute session is calculated from the relative "
"path to *basedir* and all intermediate parent directories are automatically "
"created if not exists.  For example, if a file path is ``/home/user/test/"
"data.txt`` (or ``test/data.txt``) where *basedir* is ``/home/user`` (or the "
"current working directory is ``/home/user``), the uploaded file is located "
"at ``/home/work/test/data.txt`` in the compute session container."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.upload:6
#: e05138cfc7dc4100a826ca6f0adcedaf of
msgid ""
"The list of file paths in the client-side. If the paths include directories, "
"the location of them in the compute session is calculated from the relative "
"path to *basedir* and all intermediate parent directories are automatically "
"created if not exists."
msgstr ""

#: 62dade77b3d948e6a22956df3fa03d69
#: ai.backend.client.func.session.ComputeSession.upload:11 of
msgid ""
"For example, if a file path is ``/home/user/test/data.txt`` (or ``test/data."
"txt``) where *basedir* is ``/home/user`` (or the current working directory "
"is ``/home/user``), the uploaded file is located at ``/home/work/test/data."
"txt`` in the compute session container."
msgstr ""

#: 6f0b1207d53f41708bcd93769a7ff7ec
#: ai.backend.client.func.session.ComputeSession.upload:16 of
msgid ""
"The directory prefix where the files reside. The default value is the "
"current working directory."
msgstr ""

#: 2312e90069ad4d8187e663f3f34ac6c9
#: ai.backend.client.func.session.ComputeSession.upload:19 of
msgid "Displays a progress bar during uploads."
msgstr ""

#: 062afda2c7124f86a45a4f2a2d3c7d14
#: ai.backend.client.func.session.ComputeSession.download:1 of
msgid "Downloads the given list of files from the compute session."
msgstr ""

#: 67d07c0c5c6248d793e11c125a797c3f
#: ai.backend.client.func.session.ComputeSession.download:4 of
msgid ""
"The list of file paths in the compute session. If they are relative paths, "
"the path is calculated from ``/home/work`` in the compute session container."
msgstr ""

#: 9cb56326dc974d8d8cccae48575bda47
#: ai.backend.client.func.session.ComputeSession.download:8 of
msgid "The destination directory in the client-side."
msgstr ""

#: 8b7b454e491a45e9a6a71b2bba0e6321
#: ai.backend.client.func.session.ComputeSession.download:10 of
msgid "Displays a progress bar during downloads."
msgstr ""

#: 0993826224684379876a408c261ead13
#: ai.backend.client.func.session.ComputeSession.list_files:1 of
msgid ""
"Gets the list of files in the given path inside the compute session "
"container."
msgstr ""

#: ai.backend.client.func.session.ComputeSession.list_files:5
#: e9c500b14a0744ccad954a2b9a93248b of
msgid "The directory path in the compute session."
msgstr ""

#: 108cc1d5e3394de6b8b2da09ffa45238
#: ai.backend.client.func.session.ComputeSession.listen_events:1
#: fcc83633a8d04d97b7dc9a0573717bb8 of
msgid ""
"Opens the stream of the kernel lifecycle events. Only the master kernel of "
"each session is monitored."
msgstr ""

#: 46e0167ade3e4d319675fd91d56b0d2a
#: ai.backend.client.func.session.ComputeSession.listen_events:4
#: baf3e8df5e1c408fab6cb17fb86706da of
msgid ":py:class:`~ai.backend.client.request.SSEContextManager`"
msgstr ""

#: 4976c021df4e4d679c8b625a783dd83f 75f86e2f4d58413b9e8ac2b7896d3706
#: ai.backend.client.func.session.ComputeSession.listen_events:5 of
msgid "a :class:`StreamEvents` object."
msgstr ""

#: 26f677a44c5f4401a9be6883c7c2d14c
#: ai.backend.client.func.session.ComputeSession.stream_pty:1 of
msgid ""
"Opens a pseudo-terminal of the kernel (if supported) streamed via websockets."
msgstr ""

#: 2d8148d02d5a49aeb355daa600db9a9a 40a893e5c0c94fb4a0ecc141d53ac7d6
#: ai.backend.client.func.session.ComputeSession.stream_execute:6
#: ai.backend.client.func.session.ComputeSession.stream_pty:4 of
msgid ":py:class:`~ai.backend.client.request.WebSocketContextManager`"
msgstr ""

#: ai.backend.client.func.session.ComputeSession.stream_pty:5
#: becaa9ea9d8145f4b14a91afba5623dd of
msgid "a :class:`StreamPty` object."
msgstr ""

#: 5e28da3ec60d42a98664911f1726c4d8
#: ai.backend.client.func.session.ComputeSession.stream_execute:1 of
msgid ""
"Executes a code snippet in the streaming mode. Since the returned websocket "
"represents a run loop, there is no need to specify *run_id* explicitly."
msgstr ""

#: ai.backend.client.func.session.StreamPty:1 f701a6ae17fa4ac787ff9ab7f8e8a534
#: of
msgid ""
"A derivative class of :class:`~ai.backend.client.request.WebSocketResponse` "
"which provides additional functions to control the terminal."
msgstr ""
