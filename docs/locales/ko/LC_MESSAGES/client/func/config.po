# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2022, Lablup Inc.
# This file is distributed under the same license as the Backend.AI
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Documentation 22.06\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-13 16:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../client/func/config.rst:2 ff22029178734604a3be9e87d83d492c
msgid "Configuration"
msgstr ""

#: 41f02bee86684498859bff7ebaa7c6d7 ai.backend.client.config.get_env:1 of
msgid ""
"Retrieves a configuration value from the environment variables. The given"
" *key* is uppercased and prefixed by ``\"BACKEND_\"`` and then "
"``\"SORNA_\"`` if the former does not exist."
msgstr ""

#: 34c1a15852a54d23ae6b68e4028e13a7 a5db726c6c4b4966b391698b42bc363c
#: ai.backend.client.config.APIConfig ai.backend.client.config.get_env of
msgid "Parameters"
msgstr ""

#: 6fe5fa58e9c4415eba62ff26ee602d1e ai.backend.client.config.get_env:6 of
msgid "The key name."
msgstr ""

#: 828f56dcc29f449e88a11bc5685b9661 ai.backend.client.config.get_env:8 of
msgid ""
"The default value returned when there is no corresponding environment "
"variable."
msgstr ""

#: 53e48837a35a4616a436319666e640f7 ai.backend.client.config.get_env:11 of
msgid ""
"A single-argument function that is applied to the result of lookup (in "
"both successes and the default value for failures). The default is "
"returning the value as-is."
msgstr ""

#: 0b479a4ec453406db6cb3467286837e3 1d10178aef1746049676cedc3b5a7fab
#: 3052b2e0c77f40648ef9d56b39828f59 3d6cb38124434f8d96f4673a1528404e
#: 3dcbd7cced5e447992e2a96950471d4a 5161b40afdc446f098795d56765b6d76
#: 51d124d9188c428c894504a6a89d61a1 67c108b247d347cc91b4a463636638ee
#: 6b55391ac34e4074ac09e2d0ed378bc2 867dbf83f844485fb0391ea13e154fe2
#: 8e0492c394c64d6cbdea6d35a108bd8a 90350f7b2ddb4d12b6b35122f626c26c
#: 9a1577cf43c042b5803919828de858cd 9ec23c3c208f4361af28fb672c679197
#: ai.backend.client.config.APIConfig.access_key
#: ai.backend.client.config.APIConfig.announcement_handler
#: ai.backend.client.config.APIConfig.connection_timeout
#: ai.backend.client.config.APIConfig.domain
#: ai.backend.client.config.APIConfig.endpoint
#: ai.backend.client.config.APIConfig.endpoint_type
#: ai.backend.client.config.APIConfig.endpoints
#: ai.backend.client.config.APIConfig.group
#: ai.backend.client.config.APIConfig.hash_type
#: ai.backend.client.config.APIConfig.read_timeout
#: ai.backend.client.config.APIConfig.secret_key
#: ai.backend.client.config.APIConfig.skip_sslcert_validation
#: ai.backend.client.config.APIConfig.storage_proxy_address_map
#: ai.backend.client.config.APIConfig.user_agent
#: ai.backend.client.config.APIConfig.version
#: ai.backend.client.config.APIConfig.vfolder_mounts
#: ai.backend.client.config.get_env e4e3597ddd2749e7a919932f9bfde84f
#: f169605bf51849c3babd150bb24148b0 f271f5a868214de1b62ca1dea8c6fcb8 of
msgid "Return type"
msgstr ""

#: 991c437703c840a7948d4a87490836ab ai.backend.client.config.get_env of
msgid "Returns"
msgstr ""

#: ai.backend.client.config.get_env:16 c8c8b0a29abf4de09bd4c5cf8af62202 of
msgid "The value processed by the *clean* function."
msgstr ""

#: 42336f84bfc34917aed4bf637b9746e6 ai.backend.client.config.get_config:1 of
msgid ""
"Returns the configuration for the current process. If there is no "
"explicitly set :class:`APIConfig` instance, it will generate a new one "
"from the current environment variables and defaults."
msgstr ""

#: 04b4c6f44f4b44c4b573617e8e490710 ai.backend.client.config.set_config:1 of
msgid "Sets the configuration used throughout the current process."
msgstr ""

#: 988b75b8c58e477ba1983500fc5ca678 ai.backend.client.config.APIConfig:1 of
msgid ""
"Represents a set of API client configurations. The access key and secret "
"key are mandatory -- they must be set in either environment variables or "
"as the explicit arguments."
msgstr ""

#: ai.backend.client.config.APIConfig:6 d4c5274e6cf84888afeb096aeff4cefe of
msgid ""
"The URL prefix to make API requests via HTTP/HTTPS. If this is given as "
"``str`` and contains multiple URLs separated by comma, the underlying "
"HTTP request-response facility will perform client-side load balancing "
"and automatic fail-over using them, assuming that all those URLs "
"indicates a single, same cluster. The users of the API and CLI will get "
"network connection errors only when all of the given endpoints fail -- "
"intermittent failures of a subset of endpoints will be hidden with a "
"little increased latency."
msgstr ""

#: 15daf2e2563747f089b6cbbfe59120b6 ai.backend.client.config.APIConfig:15 of
msgid ""
"Either ``\"api\"`` or ``\"session\"``. If the endpoint type is "
"``\"api\"`` (the default if unspecified), it uses the access key and "
"secret key in the configuration to access the manager API server "
"directly. If the endpoint type is ``\"session\"``, it assumes the "
"endpoint is a Backend.AI console server which provides cookie-based "
"authentication with username and password. In the latter, users need to "
"use ``backend.ai login`` and ``backend.ai logout`` to manage their sign-"
"in status, or the API equivalent in "
":meth:`~ai.backend.client.auth.Auth.login` and "
":meth:`~ai.backend.client.auth.Auth.logout` methods."
msgstr ""

#: 49d1aafcb5064325b9ce2eb2d317549a ai.backend.client.config.APIConfig:25 of
msgid "The API protocol version."
msgstr ""

#: ai.backend.client.config.APIConfig:27 f573c69fe77b49379cc1dfe9df7c023e of
msgid ""
"A custom user-agent string which is sent to the API server as a ``User-"
"Agent`` HTTP header."
msgstr ""

#: a483215d0d3048a48fc79d71f4e313e8 ai.backend.client.config.APIConfig:30 of
msgid ""
"The API access key.  If deliberately set to an empty string, the API "
"requests will be made without signatures (anonymously)."
msgstr ""

#: 8bfc2027fb2b41c2bc980ff97eb899e9 ai.backend.client.config.APIConfig:33 of
msgid "The API secret key."
msgstr ""

#: 72862567accf43dd9f46b31fdba6a26e ai.backend.client.config.APIConfig:35 of
msgid "The hash type to generate per-request authentication signatures."
msgstr ""

#: 49bc84ae00034cdfa89c12a358f000a7 ai.backend.client.config.APIConfig:38 of
msgid ""
"A list of vfolder names (that must belong to the given access key) to be "
"automatically mounted upon any :func:`Kernel.get_or_create() "
"<ai.backend.client.kernel.Kernel.get_or_create>` calls."
msgstr ""

#: ../../docstring 54a3de9ea20c4a41bd42e64b450b0327
#: ai.backend.client.config.APIConfig.DEFAULTS:1 of
msgid ""
"The default values for config parameterse settable via environment "
"variables xcept the access and secret keys."
msgstr ""

#: 2c9bad5afbf5404483fbbb30dccb7a3f
#: ai.backend.client.config.APIConfig.endpoint:1 of
msgid ""
"The currently active endpoint URL. This may change if there are multiple "
"configured endpoints and the current one is not accessible."
msgstr ""

#: 2a2914bb5f5545f6a7d51eb9d4b722bc
#: ai.backend.client.config.APIConfig.endpoint:6 of
msgid ":py:class:`~yarl.URL`"
msgstr ""

#: ai.backend.client.config.APIConfig.endpoints:1
#: efed837708bd428c914b0e874d911212 of
msgid "All configured endpoint URLs."
msgstr ""

#: ai.backend.client.config.APIConfig.endpoints:4
#: d78589f151e64e5e8e4365ec56b87bc8 of
msgid ":py:class:`~typing.Sequence`\\[:py:class:`~yarl.URL`]"
msgstr ""

#: a9321043cd814744920ae853efe6961a
#: ai.backend.client.config.APIConfig.endpoint_type:1 of
msgid "The configured endpoint type."
msgstr ""

#: 1c85da7ca4f1498194eb1381d1979b21 6c5c125756cb4def8d831de0dde56459
#: 72a810b5cea943aaa14998640a277ab9
#: ai.backend.client.config.APIConfig.access_key:4
#: ai.backend.client.config.APIConfig.domain:4
#: ai.backend.client.config.APIConfig.endpoint_type:4
#: ai.backend.client.config.APIConfig.group:4
#: ai.backend.client.config.APIConfig.hash_type:4
#: ai.backend.client.config.APIConfig.secret_key:4
#: ai.backend.client.config.APIConfig.user_agent:4
#: ai.backend.client.config.APIConfig.version:4
#: b5741f7def5e4995a5ed5d261d3c9165 c035cb96801a41b391186f0a90566dbb
#: cd27974db3ef47f38bf90fd0fa349008 d7db0a3600144dca815ba01b29c8b3c8
#: ee564ee24e4e499f849ffd959cbe4654 of
msgid ":py:class:`str`"
msgstr ""

#: ai.backend.client.config.APIConfig.domain:1 e3d28bfcc5ca4982a2a376655bde455f
#: of
msgid "The configured domain."
msgstr ""

#: 2c72cde7715247648c1268569b6b4111 ai.backend.client.config.APIConfig.group:1
#: of
msgid "The configured group."
msgstr ""

#: 724b4b9705a84d7f8898b61d7b43831c
#: ai.backend.client.config.APIConfig.storage_proxy_address_map:1 of
msgid "The storage proxy address map for overriding."
msgstr ""

#: 1febd5b6c523455aa65ed89327d76afe
#: ai.backend.client.config.APIConfig.storage_proxy_address_map:4 of
msgid ":py:class:`~typing.Mapping`\\[:py:class:`str`, :py:class:`str`]"
msgstr ""

#: 3d3ab6bf1f864c7d86e6162eed289f4b
#: ai.backend.client.config.APIConfig.user_agent:1 of
msgid "The configured user agent string."
msgstr ""

#: ai.backend.client.config.APIConfig.access_key:1
#: d712605f9c5e470bbb05f379b2a74562 of
msgid "The configured API access key."
msgstr ""

#: a34505cc03094847bf101918ea608c0b
#: ai.backend.client.config.APIConfig.secret_key:1 of
msgid "The configured API secret key."
msgstr ""

#: ai.backend.client.config.APIConfig.version:1
#: fba5826fbfc846cc8aee69934651c2e1 of
msgid "The configured API protocol version."
msgstr ""

#: 3906dce1c50f444d936210708396c959
#: ai.backend.client.config.APIConfig.hash_type:1 of
msgid "The configured hash algorithm for API authentication signatures."
msgstr ""

#: 79c1ee718da24b75bb96d49aacbeddba
#: ai.backend.client.config.APIConfig.vfolder_mounts:1 of
msgid "The configured auto-mounted vfolder list."
msgstr ""

#: 8fbb4b0c8662468e82ed6c06f7a085d6
#: ai.backend.client.config.APIConfig.vfolder_mounts:4 of
msgid ":py:class:`~typing.Sequence`\\[:py:class:`str`]"
msgstr ""

#: ae65733e341f4252ae549d941079d2ee
#: ai.backend.client.config.APIConfig.skip_sslcert_validation:1 of
msgid "Whether to skip SSL certificate validation for the API gateway."
msgstr ""

#: ai.backend.client.config.APIConfig.skip_sslcert_validation:4
#: d062217914934baa87f3e71cb12b68f2 of
msgid ":py:class:`bool`"
msgstr ""

#: 4455e89dc7b94672af871a4fa696e725
#: ai.backend.client.config.APIConfig.connection_timeout:1 of
msgid "The maximum allowed duration for making TCP connections to the server."
msgstr ""

#: ai.backend.client.config.APIConfig.connection_timeout:4
#: ai.backend.client.config.APIConfig.read_timeout:4
#: e5862b3064134f1a955a253b8b1d30dc f81fa3daa11e43be9633b427b00821e8 of
msgid ":py:class:`float`"
msgstr ""

#: ai.backend.client.config.APIConfig.read_timeout:1
#: e1f721bb00a74c0c844dbaacadfcc963 of
msgid ""
"The maximum allowed waiting time for the first byte of the response from "
"the server."
msgstr ""

#: 24947b483f8b4f20bbda686b8065b529
#: ai.backend.client.config.APIConfig.announcement_handler:1 of
msgid "The announcement handler to display server-set announcements."
msgstr ""

#: ai.backend.client.config.APIConfig.announcement_handler:4
#: cde1dfe3fc9e4aedbb955e8db9391cdc of
msgid ""
":py:data:`~typing.Optional`\\[:py:data:`~typing.Callable`\\[\\[:py:class:`str`],"
" :py:obj:`None`], :py:obj:`None`]"
msgstr ""

#~ msgid ""
#~ "Retrieves a configuration value from the"
#~ " environment variables. The given *key* "
#~ "is uppercased and prefixed by "
#~ "``\"BACKEND_\"`` and then ``\"SORNA_\"`` if"
#~ " the former does not exist."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "The key name."
#~ msgstr ""

#~ msgid ""
#~ "The default value returned when there"
#~ " is no corresponding environment variable."
#~ msgstr ""

#~ msgid ""
#~ "A single-argument function that is "
#~ "applied to the result of lookup "
#~ "(in both successes and the default "
#~ "value for failures). The default is "
#~ "returning the value as-is."
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "The value processed by the *clean* function."
#~ msgstr ""

#~ msgid ""
#~ "Returns the configuration for the "
#~ "current process. If there is no "
#~ "explicitly set :class:`APIConfig` instance, it"
#~ " will generate a new one from "
#~ "the current environment variables and "
#~ "defaults."
#~ msgstr ""

#~ msgid "Sets the configuration used throughout the current process."
#~ msgstr ""

#~ msgid ""
#~ "Represents a set of API client "
#~ "configurations. The access key and "
#~ "secret key are mandatory -- they "
#~ "must be set in either environment "
#~ "variables or as the explicit arguments."
#~ msgstr ""

#~ msgid ""
#~ "The URL prefix to make API "
#~ "requests via HTTP/HTTPS. If this is "
#~ "given as ``str`` and contains multiple"
#~ " URLs separated by comma, the "
#~ "underlying HTTP request-response facility "
#~ "will perform client-side load balancing"
#~ " and automatic fail-over using them,"
#~ " assuming that all those URLs "
#~ "indicates a single, same cluster. The"
#~ " users of the API and CLI will"
#~ " get network connection errors only "
#~ "when all of the given endpoints "
#~ "fail -- intermittent failures of a "
#~ "subset of endpoints will be hidden "
#~ "with a little increased latency."
#~ msgstr ""

#~ msgid ""
#~ "Either ``\"api\"`` or ``\"session\"``. If "
#~ "the endpoint type is ``\"api\"`` (the"
#~ " default if unspecified), it uses the"
#~ " access key and secret key in "
#~ "the configuration to access the manager"
#~ " API server directly. If the endpoint"
#~ " type is ``\"session\"``, it assumes "
#~ "the endpoint is a Backend.AI console "
#~ "server which provides cookie-based "
#~ "authentication with username and password. "
#~ "In the latter, users need to use"
#~ " ``backend.ai login`` and ``backend.ai "
#~ "logout`` to manage their sign-in "
#~ "status, or the API equivalent in "
#~ ":meth:`~ai.backend.client.auth.Auth.login` and "
#~ ":meth:`~ai.backend.client.auth.Auth.logout` methods."
#~ msgstr ""

#~ msgid "The API protocol version."
#~ msgstr ""

#~ msgid ""
#~ "A custom user-agent string which "
#~ "is sent to the API server as "
#~ "a ``User-Agent`` HTTP header."
#~ msgstr ""

#~ msgid ""
#~ "The API access key.  If deliberately "
#~ "set to an empty string, the API"
#~ " requests will be made without "
#~ "signatures (anonymously)."
#~ msgstr ""

#~ msgid "The API secret key."
#~ msgstr ""

#~ msgid "The hash type to generate per-request authentication signatures."
#~ msgstr ""

#~ msgid ""
#~ "A list of vfolder names (that must"
#~ " belong to the given access key) "
#~ "to be automatically mounted upon any "
#~ ":func:`Kernel.get_or_create() "
#~ "<ai.backend.client.kernel.Kernel.get_or_create>` calls."
#~ msgstr ""

#~ msgid ""
#~ "The default values for config "
#~ "parameterse settable via environment variables"
#~ " xcept the access and secret keys."
#~ msgstr ""

#~ msgid ""
#~ "The currently active endpoint URL. This"
#~ " may change if there are multiple "
#~ "configured endpoints and the current one"
#~ " is not accessible."
#~ msgstr ""

#~ msgid ":py:class:`~yarl.URL`"
#~ msgstr ""

#~ msgid "All configured endpoint URLs."
#~ msgstr ""

#~ msgid ":py:class:`~typing.Sequence`\\[:py:class:`~yarl.URL`]"
#~ msgstr ""

#~ msgid "The configured endpoint type."
#~ msgstr ""

#~ msgid ":py:class:`str`"
#~ msgstr ""

#~ msgid "The configured domain."
#~ msgstr ""

#~ msgid "The configured group."
#~ msgstr ""

#~ msgid "The storage proxy address map for overriding."
#~ msgstr ""

#~ msgid ":py:class:`~typing.Mapping`\\[:py:class:`str`, :py:class:`str`]"
#~ msgstr ""

#~ msgid "The configured user agent string."
#~ msgstr ""

#~ msgid "The configured API access key."
#~ msgstr ""

#~ msgid "The configured API secret key."
#~ msgstr ""

#~ msgid "The configured API protocol version."
#~ msgstr ""

#~ msgid "The configured hash algorithm for API authentication signatures."
#~ msgstr ""

#~ msgid "The configured auto-mounted vfolder list."
#~ msgstr ""

#~ msgid ":py:class:`~typing.Sequence`\\[:py:class:`str`]"
#~ msgstr ""

#~ msgid "Whether to skip SSL certificate validation for the API gateway."
#~ msgstr ""

#~ msgid ":py:class:`bool`"
#~ msgstr ""

#~ msgid "The maximum allowed duration for making TCP connections to the server."
#~ msgstr ""

#~ msgid ":py:class:`float`"
#~ msgstr ""

#~ msgid ""
#~ "The maximum allowed waiting time for "
#~ "the first byte of the response "
#~ "from the server."
#~ msgstr ""

#~ msgid "The announcement handler to display server-set announcements."
#~ msgstr ""

#~ msgid ""
#~ ":py:data:`~typing.Optional`\\[:py:data:`~typing.Callable`\\[\\[:py:class:`str`],"
#~ " :py:obj:`None`], :py:obj:`None`]"
#~ msgstr ""

