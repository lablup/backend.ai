schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.4", for: EXECUTION)
{
  query: Query
  mutation: Mutation
  subscription: Subscription
}

directive @join__directive(graphs: [join__Graph!], name: String!, args: join__DirectiveArguments) repeatable on SCHEMA | OBJECT | INTERFACE | FIELD_DEFINITION

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean, overrideLabel: String) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

type AccessToken implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!

  """Added in 25.13.0: The access token."""
  token: String!

  """Added in 25.13.0: The creation timestamp of the access token."""
  createdAt: DateTime!

  """Added in 25.13.0: The expiration timestamp of the access token."""
  validUntil: DateTime!
}

"""Added in 25.13.0"""
type AccessTokenConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [AccessTokenEdge!]!
  count: Int!
}

"""An edge in a connection."""
type AccessTokenEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: AccessToken!
}

"""
Added in 25.13.0. This enum represents the activeness status of a replica, indicating whether the deployment is currently active and able to serve requests.
"""
enum ActivenessStatus
  @join__type(graph: STRAWBERRY)
{
  ACTIVE @join__enumValue(graph: STRAWBERRY)
  INACTIVE @join__enumValue(graph: STRAWBERRY)
}

"""Added in 25.13.0"""
input ActivenessStatusFilter
  @join__type(graph: STRAWBERRY)
{
  in: [ActivenessStatus!] = null
  equals: ActivenessStatus = null
}

"""Added in 25.13.0"""
input AddModelRevisionInput
  @join__type(graph: STRAWBERRY)
{
  name: String = null
  deploymentId: ID!
  clusterConfig: ClusterConfigInput!
  resourceConfig: ResourceConfigInput!
  image: ImageInput!
  modelRuntimeConfig: ModelRuntimeConfigInput!
  modelMountConfig: ModelMountConfigInput!
  extraMounts: [ExtraVFolderMountInput!]
}

"""Added in 25.13.0"""
type AddModelRevisionPayload
  @join__type(graph: STRAWBERRY)
{
  revision: ModelRevision!
}

type Agent implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  status: String
  status_changed: DateTime
  region: String
  scaling_group: String
  schedulable: Boolean
  available_slots: JSONString
  occupied_slots: JSONString
  addr: String
  architecture: String
  first_contact: DateTime
  lost_at: DateTime
  live_stat: JSONString
  version: String
  compute_plugins: JSONString
  hardware_metadata: JSONString
  auto_terminate_abusing_kernel: Boolean
  local_config: JSONString
  container_count: Int

  """Added in 25.4.0."""
  gpu_alloc_map: UUIDFloatMap
  mem_slots: Int
  cpu_slots: Float
  gpu_slots: Float
  tpu_slots: Float
  used_mem_slots: Int
  used_cpu_slots: Float
  used_gpu_slots: Float
  used_tpu_slots: Float
  cpu_cur_pct: Float
  mem_cur_bytes: Float
  compute_containers(status: String): [ComputeContainer]
}

"""Added in 24.12.0."""
type AgentConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [AgentEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 24.12.0. A Relay edge containing a `Agent` and its cursor."""
type AgentEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: AgentNode

  """A cursor for use in pagination"""
  cursor: String!
}

type AgentList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [Agent]!
  total_count: Int!
}

"""Added in 24.12.0."""
type AgentNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!
  row_id: String
  status: String
  status_changed: DateTime
  region: String
  scaling_group: String
  schedulable: Boolean
  available_slots: JSONString
  occupied_slots: JSONString

  """Agent's address with port. (bind/advertised host:port)"""
  addr: String
  architecture: String
  first_contact: DateTime
  lost_at: DateTime
  live_stat: JSONString
  version: String
  compute_plugins: JSONString
  hardware_metadata: JSONString
  auto_terminate_abusing_kernel: Boolean
  local_config: JSONString
  container_count: Int

  """Added in 25.4.0."""
  gpu_alloc_map: UUIDFloatMap
  kernel_nodes(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): KernelConnection

  """
  Added in 24.12.0. One of ['read_attribute', 'update_attribute', 'create_compute_session', 'create_service'].
  """
  permissions: [AgentPermissionField]
}

"""
Added in 24.12.0. One of ['read_attribute', 'update_attribute', 'create_compute_session', 'create_service'].
"""
scalar AgentPermissionField
  @join__type(graph: GRAPHENE)

"""Added in 25.15.0"""
type AgentResource
  @join__type(graph: STRAWBERRY)
{
  free: JSON!
  used: JSON!
  capacity: JSON!
}

"""Added in 25.15.0"""
type AgentStats
  @join__type(graph: STRAWBERRY)
{
  """Added in 25.15.0"""
  totalResource: AgentResource!
}

"""A schema for normal users."""
type AgentSummary implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  status: String
  scaling_group: String
  schedulable: Boolean
  available_slots: JSONString
  occupied_slots: JSONString
  architecture: String
}

type AgentSummaryList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [AgentSummary]!
  total_count: Int!
}

type AliasImage
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.3.0."""
input AllowedGroups
  @join__type(graph: GRAPHENE)
{
  """List of group_ids to add associations. Added in 25.3.0."""
  add: [String] = []

  """List of group_ids to remove associations. Added in 25.3.0."""
  remove: [String] = []
}

"""
Added in 25.14.0.

Input for approving an artifact revision.

Admin-only operation to approve artifact revisions for general use.
"""
input ApproveArtifactInput
  @join__type(graph: STRAWBERRY)
{
  artifactRevisionId: ID!
}

"""
Added in 25.14.0.

Response payload for artifact revision approval operations.

Contains the approved artifact revision. Admin-only operation.
"""
type ApproveArtifactPayload
  @join__type(graph: STRAWBERRY)
{
  artifactRevision: ArtifactRevision!
}

"""
Added in 25.14.0.

An artifact represents AI models, packages, images, or other resources that can be
stored, managed, and used within Backend.AI.

Artifacts are discovered through scanning external registries and,
can have multiple revisions.

Each artifact contains metadata and references to its source registry.

Key concepts:
- Type: MODEL, PACKAGE, or IMAGE
- Availability: ALIVE (available), DELETED (soft-deleted)
- Source: Original external registry where it was discovered
"""
type Artifact implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  type: ArtifactType!
  description: String
  registry: SourceInfo!
  source: SourceInfo!
  readonly: Boolean!
  scannedAt: DateTime!
  updatedAt: DateTime!
  availability: ArtifactAvailability!
  revisions(filter: ArtifactRevisionFilter = null, orderBy: [ArtifactRevisionOrderBy!] = null, before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): ArtifactRevisionConnection!
}

enum ArtifactAvailability
  @join__type(graph: STRAWBERRY)
{
  ALIVE @join__enumValue(graph: STRAWBERRY)
  DELETED @join__enumValue(graph: STRAWBERRY)
}

"""
Added in 25.14.0.

Paginated connection for artifacts with total count information.

Used for relay-style pagination with cursor-based navigation.
"""
type ArtifactConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ArtifactEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ArtifactEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: Artifact!
}

"""
Added in 25.14.0.

Filter options for artifacts based on various criteria such as type, name, registry,
source, and availability status.

Supports logical operations (AND, OR, NOT) for complex filtering scenarios.
"""
input ArtifactFilter
  @join__type(graph: STRAWBERRY)
{
  type: [ArtifactType!] = null
  name: StringFilter = null
  registry: StringFilter = null
  source: StringFilter = null
  availability: [ArtifactAvailability!] = null
  AND: [ArtifactFilter!] = null
  OR: [ArtifactFilter!] = null
  NOT: [ArtifactFilter!] = null
}

"""
Added in 25.14.0.

Payload for artifact import progress subscription events.

Provides real-time updates during the artifact import process,
including progress percentage and current status.
"""
type ArtifactImportProgressUpdatedPayload
  @join__type(graph: STRAWBERRY)
{
  artifactId: ID!
  progress: Float!
  status: ArtifactStatus!
}

"""
Added in 25.14.0.

Specifies the field and direction for ordering artifacts in queries.
"""
input ArtifactOrderBy
  @join__type(graph: STRAWBERRY)
{
  field: ArtifactOrderField!
  direction: OrderDirection! = ASC
}

enum ArtifactOrderField
  @join__type(graph: STRAWBERRY)
{
  NAME @join__enumValue(graph: STRAWBERRY)
  TYPE @join__enumValue(graph: STRAWBERRY)
  SIZE @join__enumValue(graph: STRAWBERRY)
  SCANNED_AT @join__enumValue(graph: STRAWBERRY)
  UPDATED_AT @join__enumValue(graph: STRAWBERRY)
}

"""Added in 25.14.0"""
type ArtifactRegistry
  @join__type(graph: STRAWBERRY)
{
  """Name of the default artifact registry."""
  name: String!

  """Type of the default artifact registry."""
  type: ArtifactRegistryType!
}

"""
Added in 25.15.0.

Represents common metadata for an artifact registry.
All artifact registry nodes expose that information regardless of type.
"""
type ArtifactRegistryMeta implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  registryId: ID!
  type: ArtifactRegistryType!
  url: String!
}

"""Added in 25.15.0"""
type ArtifactRegistryMetaConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ArtifactRegistryMetaEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ArtifactRegistryMetaEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: ArtifactRegistryMeta!
}

enum ArtifactRegistryType
  @join__type(graph: STRAWBERRY)
{
  HUGGINGFACE @join__enumValue(graph: STRAWBERRY)
  RESERVOIR @join__enumValue(graph: STRAWBERRY)
}

enum ArtifactRemoteStatus
  @join__type(graph: STRAWBERRY)
{
  SCANNED @join__enumValue(graph: STRAWBERRY)
  AVAILABLE @join__enumValue(graph: STRAWBERRY)
  FAILED @join__enumValue(graph: STRAWBERRY)
}

"""
Added in 25.14.0.

A specific version/revision of an artifact containing the actual file data.

Artifact revisions progress through different statuses:
- SCANNED: Discovered in external registry, metadata only
- PULLING: Currently downloading from external source
- PULLED: Downloaded to temporary storage
- AVAILABLE: Ready for use by users

Contains version information, file size, README content, and timestamps.
Most HuggingFace models only have a 'main' revision.
"""
type ArtifactRevision implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  status: ArtifactStatus!

  """Added in 25.15.0"""
  remoteStatus: ArtifactRemoteStatus
  version: String!
  readme: String
  size: ByteSize
  createdAt: DateTime
  updatedAt: DateTime
  artifact: Artifact!
}

"""
Added in 25.14.0.

Paginated connection for artifact revisions with total count information.

Used for relay-style pagination with cursor-based navigation.
"""
type ArtifactRevisionConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ArtifactRevisionEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ArtifactRevisionEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: ArtifactRevision!
}

"""
Added in 25.14.0.

Filter options for artifact revisions based on status, version, artifact ID, and file size.

Supports logical operations (AND, OR, NOT) for complex filtering scenarios.
"""
input ArtifactRevisionFilter
  @join__type(graph: STRAWBERRY)
{
  status: ArtifactRevisionStatusFilter = null

  """Added in 25.16.0"""
  remoteStatus: ArtifactRevisionRemoteStatusFilter = null
  version: StringFilter = null
  artifactId: ID = null
  size: IntFilter = null
  AND: [ArtifactRevisionFilter!] = null
  OR: [ArtifactRevisionFilter!] = null
  NOT: [ArtifactRevisionFilter!] = null
}

"""
Added in 25.14.0.

Represents a background task for importing an artifact revision.

Contains the task ID for monitoring progress and the associated artifact revision
being imported from external registries.
"""
type ArtifactRevisionImportTask
  @join__type(graph: STRAWBERRY)
{
  taskId: ID!
  artifactRevision: ArtifactRevision!
}

"""
Added in 25.14.0.

Specifies the field and direction for ordering artifact revisions in queries.
"""
input ArtifactRevisionOrderBy
  @join__type(graph: STRAWBERRY)
{
  field: ArtifactRevisionOrderField!
  direction: OrderDirection! = ASC
}

enum ArtifactRevisionOrderField
  @join__type(graph: STRAWBERRY)
{
  VERSION @join__enumValue(graph: STRAWBERRY)
  SIZE @join__enumValue(graph: STRAWBERRY)
  CREATED_AT @join__enumValue(graph: STRAWBERRY)
  UPDATED_AT @join__enumValue(graph: STRAWBERRY)
  STATUS @join__enumValue(graph: STRAWBERRY)
}

"""Added in 25.16.0"""
input ArtifactRevisionRemoteStatusFilter
  @join__type(graph: STRAWBERRY)
{
  in: [ArtifactRemoteStatus!] = null
  equals: ArtifactRemoteStatus = null
}

"""
Added in 25.14.0.

Filter for artifact revision status. Supports exact match or inclusion in a list of statuses.
"""
input ArtifactRevisionStatusFilter
  @join__type(graph: STRAWBERRY)
{
  in: [ArtifactStatus!] = null
  equals: ArtifactStatus = null
}

enum ArtifactStatus
  @join__type(graph: STRAWBERRY)
{
  SCANNED @join__enumValue(graph: STRAWBERRY)
  PULLING @join__enumValue(graph: STRAWBERRY)
  PULLED @join__enumValue(graph: STRAWBERRY)
  VERIFYING @join__enumValue(graph: STRAWBERRY)
  NEEDS_APPROVAL @join__enumValue(graph: STRAWBERRY)
  AVAILABLE @join__enumValue(graph: STRAWBERRY)
  FAILED @join__enumValue(graph: STRAWBERRY)
  REJECTED @join__enumValue(graph: STRAWBERRY)
}

"""
Added in 25.14.0.

Input for subscribing to artifact status change notifications.

Used with artifact_status_changed subscription to receive real-time updates
when artifact revision statuses change.
"""
input ArtifactStatusChangedInput
  @join__type(graph: STRAWBERRY)
{
  artifactRevisionIds: [ID!]!
}

"""
Added in 25.14.0.

Payload for artifact status change subscription events.

Provides real-time notifications when artifact revision statuses change
during import, cleanup, or other operations.
"""
type ArtifactStatusChangedPayload
  @join__type(graph: STRAWBERRY)
{
  artifactRevision: ArtifactRevision!
}

enum ArtifactType
  @join__type(graph: STRAWBERRY)
{
  MODEL @join__enumValue(graph: STRAWBERRY)
  PACKAGE @join__enumValue(graph: STRAWBERRY)
  IMAGE @join__enumValue(graph: STRAWBERRY)
}

"""Added in 24.03.9."""
type AssociateScalingGroupsWithDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 24.03.9."""
type AssociateScalingGroupsWithKeyPair
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 24.03.9."""
type AssociateScalingGroupsWithUserGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type AssociateScalingGroupWithDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type AssociateScalingGroupWithKeyPair
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type AssociateScalingGroupWithUserGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.6.0."""
type AuditLogConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [AuditLogEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 25.6.0. A Relay edge containing a `AuditLog` and its cursor."""
type AuditLogEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: AuditLogNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Added in 25.6.0."""
type AuditLogNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!

  """UUID of the AuditLog row"""
  row_id: UUID!

  """Added in 25.6.0. UUID of the action"""
  action_id: UUID!

  """Entity type of the AuditLog"""
  entity_type: String!

  """Operation type of the AuditLog"""
  operation: String!

  """Entity ID of the AuditLog"""
  entity_id: String

  """The time the AuditLog was reported"""
  created_at: DateTime!

  """Request ID of the AuditLog"""
  request_id: String

  """Added in 25.12.0, User ID that triggered the action"""
  triggered_by: String

  """Description of the AuditLog"""
  description: String!

  """Duration taken to perform the operation"""
  duration: String

  """Status of the AuditLog"""
  status: String!
}

"""
A schema that contains metadata related to the AuditLogNode.
It provides a list of values, such as entity_type and status, that can be used in the AuditLog, allowing clients to retrieve them.

Added in 25.6.0.
"""
type AuditLogSchema
  @join__type(graph: GRAPHENE)
{
  """
  Possible values of "AuditLogNode.entity_type"
  """
  entity_type_variants: [String]

  """
  Possible values of "AuditLogNode.status"
  """
  status_variants: [String]
}

"""
The comparator used to compare the metric value with the threshold. Added in 25.1.0.
"""
enum AutoScalingMetricComparator
  @join__type(graph: GRAPHENE)
{
  LESS_THAN @join__enumValue(graph: GRAPHENE)
  LESS_THAN_OR_EQUAL @join__enumValue(graph: GRAPHENE)
  GREATER_THAN @join__enumValue(graph: GRAPHENE)
  GREATER_THAN_OR_EQUAL @join__enumValue(graph: GRAPHENE)
}

"""The source type to fetch metrics. Added in 25.1.0."""
enum AutoScalingMetricSource
  @join__type(graph: GRAPHENE)
  @join__type(graph: STRAWBERRY)
{
  KERNEL @join__enumValue(graph: GRAPHENE) @join__enumValue(graph: STRAWBERRY)
  INFERENCE_FRAMEWORK @join__enumValue(graph: GRAPHENE) @join__enumValue(graph: STRAWBERRY)
}

type AutoScalingRule implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!

  """Added in 25.13.0 (e.g. KERNEL, INFERENCE_FRAMEWORK)"""
  metricSource: AutoScalingMetricSource!
  metricName: String!

  """Added in 25.13.0: The minimum threshold for scaling (e.g. 0.5)"""
  minThreshold: Decimal

  """Added in 25.13.0: The maximum threshold for scaling (e.g. 21.0)"""
  maxThreshold: Decimal

  """Added in 25.13.0: The step size for scaling (e.g. 1)."""
  stepSize: Int!

  """Added in 25.13.0: The time window (seconds) for scaling (e.g. 60)."""
  timeWindow: Int!

  """Added in 25.13.0: The minimum number of replicas (e.g. 1)."""
  minReplicas: Int

  """Added in 25.13.0: The maximum number of replicas (e.g. 10)."""
  maxReplicas: Int
  createdAt: DateTime!
  lastTriggeredAt: DateTime!
}

"""Added in 25.8.0."""
type AvailableServiceConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [AvailableServiceEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""
Added in 25.8.0. A Relay edge containing a `AvailableService` and its cursor.
"""
type AvailableServiceEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: AvailableServiceNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Available services for configuration. Added in 25.8.0."""
type AvailableServiceNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!

  """Possible values of "Config.service". Added in 25.8.0."""
  service_variants: [String]!
}

"""Background task event payload"""
type BackgroundTaskEventPayload
  @join__type(graph: STRAWBERRY)
{
  taskId: ID!
  eventType: BgtaskEventType!
  message: String!
  currentProgress: Float
  totalProgress: Float
}

"""Type of background task event"""
enum BgtaskEventType
  @join__type(graph: STRAWBERRY)
{
  UPDATED @join__enumValue(graph: STRAWBERRY)
  DONE @join__enumValue(graph: STRAWBERRY)
  CANCELLED @join__enumValue(graph: STRAWBERRY)
  FAILED @join__enumValue(graph: STRAWBERRY)
}

"""
BigInt is an extension of the regular graphene.Int scalar type
to support integers outside the range of a signed 32-bit integer.
"""
scalar BigInt
  @join__type(graph: GRAPHENE)

"""Added in 24.09.1."""
scalar Bytes
  @join__type(graph: GRAPHENE)

scalar ByteSize
  @join__type(graph: STRAWBERRY)

"""
Added in 25.14.0.

Input for canceling an in-progress artifact import operation.

Stops the download process and reverts the artifact revision status back to SCANNED.
"""
input CancelArtifactInput
  @join__type(graph: STRAWBERRY)
{
  artifactRevisionId: ID!
}

"""
Added in 25.14.0.

Response payload for canceling artifact import operations.

Contains the artifact revision whose import was canceled,
reverting its status back to SCANNED.
"""
type CancelImportArtifactPayload
  @join__type(graph: STRAWBERRY)
{
  artifactRevision: ArtifactRevision!
}

"""Added in 24.12.0"""
type CheckAndTransitStatus
  @join__type(graph: GRAPHENE)
{
  item: [ComputeSessionNode]
  client_mutation_id: String
}

"""Added in 24.12.0."""
input CheckAndTransitStatusInput
  @join__type(graph: GRAPHENE)
{
  ids: [GlobalIDField]!
  client_mutation_id: String
}

"""
Added in 25.14.0.

Input for cleaning up stored artifact revision data.

Removes downloaded files from storage and transitions the artifact revision
back to SCANNED status, freeing up storage space.
"""
input CleanupArtifactRevisionsInput
  @join__type(graph: STRAWBERRY)
{
  artifactRevisionIds: [ID!]!
}

"""
Added in 25.14.0.

Response payload for artifact revision cleanup operations.

Contains the cleaned artifact revisions that have had their stored data removed,
transitioning them back to SCANNED status to free storage space.
"""
type CleanupArtifactRevisionsPayload
  @join__type(graph: STRAWBERRY)
{
  artifactRevisions: ArtifactRevisionConnection!
}

"""Added in 25.6.0."""
input ClearImageCustomResourceLimitKey
  @join__type(graph: GRAPHENE)
{
  image_canonical: String!
  architecture: String! = "aarch64"
}

"""Added in 25.6.0."""
type ClearImageCustomResourceLimitPayload
  @join__type(graph: GRAPHENE)
{
  image_node: ImageNode
}

type ClearImages
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.13.0"""
type ClusterConfig
  @join__type(graph: STRAWBERRY)
{
  mode: ClusterMode!
  size: Int!
}

"""Added in 25.13.0"""
input ClusterConfigInput
  @join__type(graph: STRAWBERRY)
{
  mode: ClusterMode!
  size: Int!
}

"""Added in 25.13.0"""
enum ClusterMode
  @join__type(graph: STRAWBERRY)
{
  SINGLE_NODE @join__enumValue(graph: STRAWBERRY)
  MULTI_NODE @join__enumValue(graph: STRAWBERRY)
}

type ComputeContainer implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  idx: Int
  role: String
  hostname: String

  """Added in 24.03.1."""
  kernel_id: UUID
  cluster_idx: Int
  local_rank: Int
  cluster_role: String
  cluster_hostname: String
  session_id: UUID

  """Deprecated since 24.03.0; use image_object.name"""
  image: String

  """Added in 24.03.0."""
  image_object: ImageNode
  architecture: String
  registry: String
  status: String
  status_changed: DateTime
  status_info: String
  status_data: JSONString
  created_at: DateTime
  terminated_at: DateTime
  starts_at: DateTime
  scheduled_at: DateTime
  abusing_report: JSONString
  agent: String
  agent_addr: String
  container_id: String
  resource_opts: JSONString
  occupied_slots: JSONString
  live_stat: JSONString
  last_stat: JSONString
  preopen_ports: [Int]
}

type ComputeContainerList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [ComputeContainer]!
  total_count: Int!
}

type ComputeSession implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  session_id: UUID
  main_kernel_id: UUID
  tag: String
  name: String
  type: String
  main_kernel_role: String

  """Added in 24.09.0."""
  priority: Int
  image: String
  architecture: String
  registry: String
  cluster_template: String
  cluster_mode: String
  cluster_size: Int
  domain_name: String
  group_name: String
  group_id: UUID
  user_email: String
  full_name: String
  user_id: UUID
  access_key: String
  created_user_email: String
  created_user_id: UUID
  status: String
  status_changed: DateTime
  status_info: String
  status_data: JSONString
  status_history: JSONString
  created_at: DateTime
  terminated_at: DateTime
  starts_at: DateTime
  scheduled_at: DateTime
  startup_command: String
  result: String
  commit_status: String
  abusing_reports: [JSONString]
  idle_checks: JSONString
  agent_ids: [String]
  agents: [String]
  resource_opts: JSONString
  scaling_group: String
  service_ports: JSONString
  mounts: [String]
  vfolder_mounts: [String]
  occupying_slots: JSONString
  occupied_slots: JSONString

  """Added in 24.03.0."""
  requested_slots: JSONString
  num_queries: BigInt
  containers: [ComputeContainer]
  dependencies: [ComputeSession]
  inference_metrics: JSONString
}

"""Added in 24.09.0."""
type ComputeSessionConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [ComputeSessionEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""
Added in 24.09.0. A Relay edge containing a `ComputeSession` and its cursor.
"""
type ComputeSessionEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: ComputeSessionNode

  """A cursor for use in pagination"""
  cursor: String!
}

type ComputeSessionList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [ComputeSession]!
  total_count: Int!
}

"""Added in 24.09.0."""
type ComputeSessionNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE, key: "id")
  @join__type(graph: STRAWBERRY, key: "id", extension: true)
{
  """The ID of the object"""
  id: ID!

  """ID of session."""
  row_id: UUID @join__field(graph: GRAPHENE)
  tag: String @join__field(graph: GRAPHENE)
  name: String @join__field(graph: GRAPHENE)
  type: String @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  priority: Int @join__field(graph: GRAPHENE)
  cluster_template: String @join__field(graph: GRAPHENE)
  cluster_mode: String @join__field(graph: GRAPHENE)
  cluster_size: Int @join__field(graph: GRAPHENE)
  domain_name: String @join__field(graph: GRAPHENE)
  project_id: UUID @join__field(graph: GRAPHENE)
  user_id: UUID @join__field(graph: GRAPHENE)

  """Added in 25.13.0."""
  owner: UserNode @join__field(graph: GRAPHENE)
  access_key: String @join__field(graph: GRAPHENE)

  """
  One of ['read_attribute', 'update_attribute', 'delete_session', 'start_app', 'execute', 'convert_to_image'].
  """
  permissions: [SessionPermissionValueField] @join__field(graph: GRAPHENE)
  status: String @join__field(graph: GRAPHENE)
  status_info: String @join__field(graph: GRAPHENE)
  status_data: JSONString @join__field(graph: GRAPHENE)
  status_history: JSONString @join__field(graph: GRAPHENE)
  created_at: DateTime @join__field(graph: GRAPHENE)
  terminated_at: DateTime @join__field(graph: GRAPHENE)
  starts_at: DateTime @join__field(graph: GRAPHENE)
  scheduled_at: DateTime @join__field(graph: GRAPHENE)

  """Added in 25.13.0."""
  queue_position: Int @join__field(graph: GRAPHENE)
  startup_command: String @join__field(graph: GRAPHENE)
  result: String @join__field(graph: GRAPHENE)
  commit_status: String @join__field(graph: GRAPHENE)
  abusing_reports: [JSONString] @join__field(graph: GRAPHENE)
  idle_checks: JSONString @join__field(graph: GRAPHENE)
  agent_ids: [String] @join__field(graph: GRAPHENE)
  resource_opts: JSONString @join__field(graph: GRAPHENE)
  scaling_group: String @join__field(graph: GRAPHENE)
  service_ports: JSONString @join__field(graph: GRAPHENE)
  vfolder_mounts: [String] @join__field(graph: GRAPHENE)
  occupied_slots: JSONString @join__field(graph: GRAPHENE)
  requested_slots: JSONString @join__field(graph: GRAPHENE)

  """Added in 25.4.0."""
  image_references: [String] @join__field(graph: GRAPHENE)

  """Added in 25.4.0."""
  vfolder_nodes(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): VirtualFolderConnection @join__field(graph: GRAPHENE)
  num_queries: BigInt @join__field(graph: GRAPHENE)
  inference_metrics: JSONString @join__field(graph: GRAPHENE)
  kernel_nodes(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): KernelConnection @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  dependents(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): ComputeSessionConnection @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  dependees(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): ComputeSessionConnection @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  graph(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): ComputeSessionConnection @join__field(graph: GRAPHENE)
}

"""Deprecated since 24.09.0. use `ContainerRegistryNode` instead"""
type ContainerRegistry implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!
  hostname: String
  config: ContainerRegistryConfig
}

"""Deprecated since 24.09.0."""
type ContainerRegistryConfig
  @join__type(graph: GRAPHENE)
{
  url: String!
  type: String!
  project: [String]
  username: String
  password: String
  ssl_verify: Boolean

  """Added in 24.09.0."""
  is_global: Boolean
}

"""Added in 24.09.0."""
type ContainerRegistryConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [ContainerRegistryEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""
Added in 24.09.0. A Relay edge containing a `ContainerRegistry` and its cursor.
"""
type ContainerRegistryEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: ContainerRegistryNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Added in 24.09.0."""
type ContainerRegistryNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!

  """Added in 24.09.0. The UUID type id of DB container_registries row."""
  row_id: UUID
  name: String

  """Added in 24.09.0."""
  url: String!

  """Added in 24.09.0."""
  type: ContainerRegistryTypeField!

  """Added in 24.09.0."""
  registry_name: String!

  """Added in 24.09.0."""
  is_global: Boolean

  """Added in 24.09.0."""
  project: String

  """Added in 24.09.0."""
  username: String

  """Added in 24.09.0."""
  password: String

  """Added in 24.09.0."""
  ssl_verify: Boolean

  """Added in 24.09.3."""
  extra: JSONString

  """Added in 25.3.0."""
  allowed_groups(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): GroupConnection
}

"""Added in 25.3.0."""
scalar ContainerRegistryScopeField
  @join__type(graph: GRAPHENE)

"""Added in 24.09.0."""
scalar ContainerRegistryTypeField
  @join__type(graph: GRAPHENE)

"""Added in 25.6.0."""
type ContainerUtilizationMetric
  @join__type(graph: GRAPHENE)
{
  metric_name: String

  """One of 'current', 'capacity'."""
  value_type: String
  values: [MetricResultValue]

  """The maximum value of the metric in given time range. null if no data."""
  max_value: String

  """The average value of the metric in given time range. null if no data."""
  avg_value: String
}

"""Added in 25.6.0."""
type ContainerUtilizationMetricMetadata
  @join__type(graph: GRAPHENE)
{
  metric_names: [String]
}

input CreateAccessTokenInput
  @join__type(graph: STRAWBERRY)
{
  """
  Added in 25.13.0: The ID of the model deployment for which the access token is created.
  """
  modelDeploymentId: ID!

  """Added in 25.13.0: The expiration timestamp of the access token."""
  validUntil: DateTime!
}

type CreateAccessTokenPayload
  @join__type(graph: STRAWBERRY)
{
  accessToken: AccessToken!
}

input CreateAutoScalingRuleInput
  @join__type(graph: STRAWBERRY)
{
  modelDeploymentId: ID!
  metricSource: AutoScalingMetricSource!
  metricName: String!
  minThreshold: Decimal
  maxThreshold: Decimal
  stepSize: Int!
  timeWindow: Int!
  minReplicas: Int
  maxReplicas: Int
}

type CreateAutoScalingRulePayload
  @join__type(graph: STRAWBERRY)
{
  autoScalingRule: AutoScalingRule!
}

"""Deprecated since 24.09.0. use `CreateContainerRegistryNode` instead"""
type CreateContainerRegistry
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistry
}

"""Deprecated since 24.09.0."""
input CreateContainerRegistryInput
  @join__type(graph: GRAPHENE)
{
  url: String!
  type: String!
  project: [String]
  username: String
  password: String
  ssl_verify: Boolean

  """Added in 24.09.0."""
  is_global: Boolean
}

"""Added in 24.09.0."""
type CreateContainerRegistryNode
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistryNode
}

"""Added in 25.3.0."""
input CreateContainerRegistryNodeInputV2
  @join__type(graph: GRAPHENE)
{
  """Added in 25.3.0."""
  url: String!

  """Added in 25.3.0."""
  type: ContainerRegistryTypeField!

  """Added in 25.3.0."""
  registry_name: String!

  """Added in 25.3.0."""
  is_global: Boolean

  """Added in 25.3.0."""
  project: String

  """Added in 25.3.0."""
  username: String

  """Added in 25.3.0."""
  password: String

  """Added in 25.3.0."""
  ssl_verify: Boolean

  """Added in 25.3.0."""
  extra: JSONString

  """Added in 25.3.0."""
  allowed_groups: AllowedGroups
}

"""Added in 25.3.0."""
type CreateContainerRegistryNodeV2
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistryNode
}

"""Added in 25.3.0."""
type CreateContainerRegistryQuota
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type CreateDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  domain: Domain
}

"""Added in 24.12.0."""
type CreateDomainNode
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  item: DomainNode
}

"""Added in 24.12.0."""
input CreateDomainNodeInput
  @join__type(graph: GRAPHENE)
{
  name: String!
  description: String
  is_active: Boolean = true
  total_resource_slots: JSONString = "{}"
  allowed_vfolder_hosts: JSONString = "{}"
  allowed_docker_registries: [String] = []
  integration_id: String = null
  dotfiles: Bytes = "90"
  scaling_groups: [String]
}

"""Added in 25.1.0."""
type CreateEndpointAutoScalingRuleNode
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  rule: EndpointAutoScalingRuleNode
}

type CreateGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  group: Group
}

"""Added in 25.14.0"""
input CreateHuggingFaceRegistryInput
  @join__type(graph: STRAWBERRY)
{
  url: String!
  name: String!
  token: String = null
}

"""Added in 25.14.0"""
type CreateHuggingFaceRegistryPayload
  @join__type(graph: STRAWBERRY)
{
  huggingfaceRegistry: HuggingFaceRegistry!
}

type CreateKeyPair
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  keypair: KeyPair
}

type CreateKeyPairResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  resource_policy: KeyPairResourcePolicy
}

input CreateKeyPairResourcePolicyInput
  @join__type(graph: GRAPHENE)
{
  default_for_unspecified: String!
  total_resource_slots: JSONString = "{}"
  max_session_lifetime: Int = 0
  max_concurrent_sessions: Int!
  max_concurrent_sftp_sessions: Int = 1
  max_containers_per_session: Int!
  idle_timeout: BigInt!
  allowed_vfolder_hosts: JSONString
  max_vfolder_count: Int @deprecated(reason: "Deprecated since 23.09.4.")
  max_vfolder_size: BigInt @deprecated(reason: "Deprecated since 23.09.4.")
  max_quota_scope_size: BigInt @deprecated(reason: "Deprecated since 23.09.6.")

  """Added in 24.03.4."""
  max_pending_session_count: Int

  """Added in 24.03.4."""
  max_pending_session_resource_slots: JSONString
}

"""Added in 25.13.0"""
input CreateModelDeploymentInput
  @join__type(graph: STRAWBERRY)
{
  metadata: ModelDeploymentMetadataInput!
  networkAccess: ModelDeploymentNetworkAccessInput!
  defaultDeploymentStrategy: DeploymentStrategyInput!
  desiredReplicaCount: Int!
  initialRevision: CreateModelRevisionInput!
}

"""Added in 25.13.0"""
type CreateModelDeploymentPayload
  @join__type(graph: STRAWBERRY)
{
  deployment: ModelDeployment!
}

"""Added in 25.13.0"""
input CreateModelRevisionInput
  @join__type(graph: STRAWBERRY)
{
  name: String = null
  clusterConfig: ClusterConfigInput!
  resourceConfig: ResourceConfigInput!
  image: ImageInput!
  modelRuntimeConfig: ModelRuntimeConfigInput!
  modelMountConfig: ModelMountConfigInput!
  extraMounts: [ExtraVFolderMountInput!]
}

"""Added in 25.13.0"""
type CreateModelRevisionPayload
  @join__type(graph: STRAWBERRY)
{
  revision: ModelRevision!
}

"""Added in 24.12.0."""
type CreateNetwork
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  network: NetworkNode
}

"""Added in 25.14.0"""
input CreateObjectStorageInput
  @join__type(graph: STRAWBERRY)
{
  name: String!
  host: String!
  accessKey: String!
  secretKey: String!
  endpoint: String!
  region: String!
}

"""Added in 25.14.0"""
type CreateObjectStoragePayload
  @join__type(graph: STRAWBERRY)
{
  objectStorage: ObjectStorage!
}

type CreateProjectResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  resource_policy: ProjectResourcePolicy
}

input CreateProjectResourcePolicyInput
  @join__type(graph: GRAPHENE)
{
  """
  Added in 24.03.1 and 23.09.6. Limitation of the number of project vfolders.
  """
  max_vfolder_count: Int

  """
  Added in 24.03.1 and 23.09.2. Limitation of the quota size of project vfolders.
  """
  max_quota_scope_size: BigInt
  max_vfolder_size: BigInt @deprecated(reason: "Deprecated since 23.09.2.")

  """
  Added in 24.12.0. Limitation of the number of networks created on behalf of project. Set as -1 to allow creating unlimited networks.
  """
  max_network_count: Int
}

"""Added in 25.14.0"""
input CreateReservoirRegistryInput
  @join__type(graph: STRAWBERRY)
{
  name: String!
  endpoint: String!
  accessKey: String!
  secretKey: String!
  apiVersion: String!
}

"""Added in 25.14.0"""
type CreateReservoirRegistryPayload
  @join__type(graph: STRAWBERRY)
{
  reservoir: ReservoirRegistry!
}

type CreateResourcePreset
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  resource_preset: ResourcePreset
}

input CreateResourcePresetInput
  @join__type(graph: GRAPHENE)
{
  resource_slots: JSONString!
  shared_memory: String

  """
  Added in 25.4.0. A name of scaling group(=resource group) of the resource preset associated with.
  """
  scaling_group_name: String
}

type CreateScalingGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  scaling_group: ScalingGroup
}

input CreateScalingGroupInput
  @join__type(graph: GRAPHENE)
{
  description: String = ""
  is_active: Boolean = true
  is_public: Boolean = true
  wsproxy_addr: String = null
  wsproxy_api_token: String = null
  driver: String!
  driver_opts: JSONString = "{}"
  scheduler: String!
  scheduler_opts: JSONString = "{}"
  use_host_network: Boolean = false
}

type CreateUser
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  user: User

  """Added in 25.15.0."""
  keypair: KeyPair
}

type CreateUserResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  resource_policy: UserResourcePolicy
}

input CreateUserResourcePolicyInput
  @join__type(graph: GRAPHENE)
{
  """
  Added in 24.03.1 and 23.09.6. Limitation of the number of user vfolders.
  """
  max_vfolder_count: Int

  """
  Added in 24.03.1 and 23.09.2. Limitation of the quota size of user vfolders.
  """
  max_quota_scope_size: BigInt

  """
  Added in 24.03.1 and 23.09.10. Maximum available number of sessions per single model service which the user is in charge of.
  """
  max_session_count_per_model_session: Int
  max_vfolder_size: BigInt @deprecated(reason: "Deprecated since 23.09.2.")

  """
  Added in 24.03.0. Maximum available number of customized images one can publish to.
  """
  max_customized_image_count: Int
}

"""Added in 25.16.0. Input for creating VFS storage"""
input CreateVFSStorageInput
  @join__type(graph: STRAWBERRY)
{
  name: String!
  host: String!
  basePath: String!
}

"""Added in 25.16.0. Payload for creating VFS storage"""
type CreateVFSStoragePayload
  @join__type(graph: STRAWBERRY)
{
  vfsStorage: VFSStorage!
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime
  @join__type(graph: GRAPHENE)
  @join__type(graph: STRAWBERRY)

type DealiasImage
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Decimal (fixed-point)"""
scalar Decimal
  @join__type(graph: STRAWBERRY)

<<<<<<< HEAD
"""Added in 25.15.0"""
input DelegateeTarget
  @join__type(graph: STRAWBERRY)
{
  delegateeReservoirId: ID!
  targetRegistryId: ID!
}

"""
Added in 25.15.0.

Input type for delegated import of artifact revisions from a reservoir registry's remote registry.
Used to specify which artifact revisions should be imported from the remote registry source
into the local reservoir registry storage.
"""
input DelegateImportArtifactsInput
  @join__type(graph: STRAWBERRY)
{
  """List of artifact revision IDs of delegatee artifact registry"""
  artifactRevisionIds: [ID!]!

  """ID of the reservoir registry to delegate the import request to"""
  delegatorReservoirId: ID = null
  artifactType: ArtifactType = null
  delegateeTarget: DelegateeTarget = null
}

"""
Added in 25.15.0.

Response payload for delegated artifact import operation.
Contains the imported artifact revisions and associated background tasks.
The tasks can be monitored to track the progress of the import operation.
"""
type DelegateImportArtifactsPayload
  @join__type(graph: STRAWBERRY)
{
  """
  Connection of artifact revisions that were imported from the reservoir registry's remote registry
  """
  artifactRevisions: ArtifactRevisionConnection!

  """List of background tasks created for importing the artifact revisions"""
  tasks: [ArtifactRevisionImportTask!]!
}

"""
Added in 25.15.0.

Input type for delegated scanning of artifacts from a delegatee reservoir registry's remote registry.
"""
input DelegateScanArtifactsInput
  @join__type(graph: STRAWBERRY)
{
  """ID of the reservoir registry to delegate the scan request to"""
  delegatorReservoirId: ID = null

  """Target delegatee reservoir registry and its remote registry to scan"""
  delegateeTarget: DelegateeTarget = null

  """Maximum number of artifacts to scan (max: 500)"""
  limit: Int!

  """Filter artifacts by type (e.g., model, image, package)"""
  artifactType: ArtifactType = null

  """Search term to filter artifacts by name or description"""
  search: String = null
}

"""
Added in 25.15.0.

Response payload for delegated artifact scanning operation.
Contains the list of artifacts discovered during the scan of a reservoir registry's remote registry.
These artifacts are now available for import or direct use.
"""
type DelegateScanArtifactsPayload
  @join__type(graph: STRAWBERRY)
{
  """
  List of artifacts discovered during the delegated scan from the reservoir registry's remote registry
  """
  artifacts: [Artifact!]!
}

"""
Added in 25.15.0.

Input for soft-deleting artifacts from the system.

Marks artifacts as deleted without permanently removing them.
Deleted artifacts can be restored using restore_artifacts.
"""
input DeleteArtifactsInput
  @join__type(graph: STRAWBERRY)
{
  artifactIds: [ID!]!
}

"""
Added in 25.15.0.

Response payload for artifact deletion operations.

Contains the artifacts that were soft-deleted. These can be restored later.
"""
type DeleteArtifactsPayload
  @join__type(graph: STRAWBERRY)
{
  artifacts: [Artifact!]!
}

=======
>>>>>>> 27805ea3c (feat: Add compute session node ref in model replica node)
input DeleteAutoScalingRuleInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

type DeleteAutoScalingRulePayload
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

"""Deprecated since 24.09.0. use `DeleteContainerRegistryNode` instead"""
type DeleteContainerRegistry
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistry
}

"""Added in 24.09.0."""
type DeleteContainerRegistryNode
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistryNode
}

"""Added in 25.3.0."""
type DeleteContainerRegistryNodeV2
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistryNode
}

"""Added in 25.3.0."""
type DeleteContainerRegistryQuota
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Instead of deleting the domain, just mark it as inactive."""
type DeleteDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.1.0."""
type DeleteEndpointAutoScalingRuleNode
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Instead of deleting the group, just mark it as inactive."""
type DeleteGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.14.0"""
input DeleteHuggingFaceRegistryInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

"""Added in 25.14.0"""
type DeleteHuggingFaceRegistryPayload
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

type DeleteKeyPair
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type DeleteKeyPairResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.13.0"""
input DeleteModelDeploymentInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

"""Added in 25.13.0"""
type DeleteModelDeploymentPayload
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

"""Added in 24.12.0."""
type DeleteNetwork
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.14.0"""
input DeleteObjectStorageInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

"""Added in 25.14.0"""
type DeleteObjectStoragePayload
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

type DeleteProjectResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.14.0"""
input DeleteReservoirRegistryInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

"""Added in 25.14.0"""
type DeleteReservoirRegistryPayload
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

type DeleteResourcePreset
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type DeleteScalingGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""
Instead of really deleting user, just mark the account as deleted status.

All related keypairs will also be inactivated.
"""
type DeleteUser
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type DeleteUserResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

<<<<<<< HEAD
"""Added in 25.16.0. Input for deleting VFS storage"""
input DeleteVFSStorageInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

"""Added in 25.16.0. Payload for deleting VFS storage"""
type DeleteVFSStoragePayload
  @join__type(graph: STRAWBERRY)
{
  id: ID!
}

=======
"""Added in 25.13.0"""
>>>>>>> 16addb3b5 (feat: Modify gql schemas)
input DeploymentFilter
  @join__type(graph: STRAWBERRY)
{
  name: StringFilter = null
  status: DeploymentStatusFilter = null
  openToPublic: Boolean = null
  tags: StringFilter = null
  endpointUrl: StringFilter = null
  AND: [DeploymentFilter!] = null
  OR: [DeploymentFilter!] = null
  NOT: [DeploymentFilter!] = null
  DISTINCT: Boolean = null
}

"""Added in 25.13.0"""
input DeploymentOrderBy
  @join__type(graph: STRAWBERRY)
{
  field: DeploymentOrderField!
  direction: OrderDirection! = DESC
}

"""Added in 25.13.0"""
enum DeploymentOrderField
  @join__type(graph: STRAWBERRY)
{
  CREATED_AT @join__enumValue(graph: STRAWBERRY)
  UPDATED_AT @join__enumValue(graph: STRAWBERRY)
  NAME @join__enumValue(graph: STRAWBERRY)
}

"""
Added in 25.13.0. This enum represents the deployment status of a model deployment, indicating its current state.
"""
enum DeploymentStatus
  @join__type(graph: STRAWBERRY)
{
  PENDING @join__enumValue(graph: STRAWBERRY)
  SCALING @join__enumValue(graph: STRAWBERRY)
  DEPLOYING @join__enumValue(graph: STRAWBERRY)
  READY @join__enumValue(graph: STRAWBERRY)
  STOPPING @join__enumValue(graph: STRAWBERRY)
  STOPPED @join__enumValue(graph: STRAWBERRY)
}

"""Added in 25.13.0"""
type DeploymentStatusChangedPayload
  @join__type(graph: STRAWBERRY)
{
  deployment: ModelDeployment!
}

"""Added in 25.13.0"""
input DeploymentStatusFilter
  @join__type(graph: STRAWBERRY)
{
  in: [DeploymentStatus!] = null
  equals: DeploymentStatus = null
}

"""Added in 25.13.0"""
type DeploymentStrategy
  @join__type(graph: STRAWBERRY)
{
  type: DeploymentStrategyType!
}

"""Added in 25.13.0"""
input DeploymentStrategyInput
  @join__type(graph: STRAWBERRY)
{
  type: DeploymentStrategyType!
}

"""
Added in 25.13.0. This enum represents the deployment strategy type of a model deployment, indicating the strategy used for deployment.
"""
enum DeploymentStrategyType
  @join__type(graph: STRAWBERRY)
{
  ROLLING @join__enumValue(graph: STRAWBERRY)
  BLUE_GREEN @join__enumValue(graph: STRAWBERRY)
}

type DisassociateAllScalingGroupsWithDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type DisassociateAllScalingGroupsWithGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 24.03.9."""
type DisassociateScalingGroupsWithDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 24.03.9."""
type DisassociateScalingGroupsWithKeyPair
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 24.03.9."""
type DisassociateScalingGroupsWithUserGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type DisassociateScalingGroupWithDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type DisassociateScalingGroupWithKeyPair
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type DisassociateScalingGroupWithUserGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

type Domain
  @join__type(graph: GRAPHENE)
{
  name: String
  description: String
  is_active: Boolean
  created_at: DateTime
  modified_at: DateTime
  total_resource_slots: JSONString
  allowed_vfolder_hosts: JSONString
  allowed_docker_registries: [String]
  integration_id: String
  scaling_groups: [String]
}

"""Added in 24.12.0"""
type DomainConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [DomainEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 24.12.0 A Relay edge containing a `Domain` and its cursor."""
type DomainEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: DomainNode

  """A cursor for use in pagination"""
  cursor: String!
}

input DomainInput
  @join__type(graph: GRAPHENE)
{
  description: String = ""
  is_active: Boolean = true
  total_resource_slots: JSONString = "{}"
  allowed_vfolder_hosts: JSONString = "{}"
  allowed_docker_registries: [String] = []
  integration_id: String = null
}

"""Added in 24.12.0."""
type DomainNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE, key: "id")
  @join__type(graph: STRAWBERRY, key: "id", extension: true)
{
  """The ID of the object"""
  id: ID!
  name: String @join__field(graph: GRAPHENE)
  description: String @join__field(graph: GRAPHENE)
  is_active: Boolean @join__field(graph: GRAPHENE)
  created_at: DateTime @join__field(graph: GRAPHENE)
  modified_at: DateTime @join__field(graph: GRAPHENE)
  total_resource_slots: JSONString @join__field(graph: GRAPHENE)
  allowed_vfolder_hosts: JSONString @join__field(graph: GRAPHENE)
  allowed_docker_registries: [String] @join__field(graph: GRAPHENE)
  dotfiles: Bytes @join__field(graph: GRAPHENE)
  integration_id: String @join__field(graph: GRAPHENE)
  scaling_groups(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): ScalinGroupConnection @join__field(graph: GRAPHENE)
}

"""
Added in 24.12.0. One of ['read_attribute', 'read_sensitive_attribute', 'update_attribute', 'create_user', 'create_project'].
"""
scalar DomainPermissionValueField
  @join__type(graph: GRAPHENE)

type Endpoint implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  endpoint_id: UUID
  image: String @deprecated(reason: "Deprecated since 23.09.9. use `image_object`")

  """Added in 23.09.9."""
  image_object: ImageNode
  domain: String
  project: String
  resource_group: String
  resource_slots: JSONString
  url: String
  model: UUID

  """Added in 24.03.4."""
  model_definition_path: String
  model_mount_destiation: String @deprecated(reason: "Deprecated since 24.03.4; use `model_mount_destination` instead")

  """Added in 24.03.4."""
  model_mount_destination: String

  """Added in 24.03.4."""
  extra_mounts: [VirtualFolderNode]
  created_user: UUID @deprecated(reason: "Deprecated since 23.09.8. use `created_user_id`")

  """Added in 23.09.8."""
  created_user_email: String

  """Added in 23.09.8."""
  created_user_id: UUID
  session_owner: UUID @deprecated(reason: "Deprecated since 23.09.8. use `session_owner_id`")

  """Added in 23.09.8."""
  session_owner_email: String

  """Added in 23.09.8."""
  session_owner_id: UUID
  tag: String
  startup_command: String
  bootstrap_script: String
  callback_url: String
  environ: JSONString
  name: String
  resource_opts: JSONString

  """Added in 24.12.0. Replaces `desired_session_count`."""
  replicas: Int
  desired_session_count: Int @deprecated(reason: "Deprecated since 24.12.0. Use `replicas` instead.")
  cluster_mode: String
  cluster_size: Int
  open_to_public: Boolean

  """Added in 24.03.5."""
  runtime_variant: RuntimeVariantInfo
  created_at: DateTime!
  destroyed_at: DateTime
  routings: [Routing]
  retries: Int
  status: String
  lifecycle_stage: String
  errors: [InferenceSessionError!]!

  """Added in 24.12.0."""
  live_stat: JSONString
}

"""Added in 25.1.0."""
type EndpointAutoScalingRuleConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [EndpointAutoScalingRuleEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""
Added in 25.1.0. A Relay edge containing a `EndpointAutoScalingRule` and its cursor.
"""
type EndpointAutoScalingRuleEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: EndpointAutoScalingRuleNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Added in 25.1.0."""
input EndpointAutoScalingRuleInput
  @join__type(graph: GRAPHENE)
{
  metric_source: AutoScalingMetricSource!
  metric_name: String!
  threshold: String!
  comparator: AutoScalingMetricComparator!
  step_size: Int!
  cooldown_seconds: Int!
  min_replicas: Int
  max_replicas: Int
}

"""Added in 25.1.0."""
type EndpointAutoScalingRuleNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE, key: "id")
{
  """The ID of the object"""
  id: ID!
  row_id: UUID!
  metric_source: AutoScalingMetricSource!
  metric_name: String!
  threshold: String!
  comparator: AutoScalingMetricComparator!
  step_size: Int!
  cooldown_seconds: Int!
  min_replicas: Int
  max_replicas: Int
  created_at: DateTime!
  last_triggered_at: DateTime
  endpoint: UUID!
}

type EndpointList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [Endpoint]!
  total_count: Int!
}

type EndpointToken implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE, key: "token")
{
  id: ID
  token: String!
  endpoint_id: UUID!
  domain: String!
  project: String!
  session_owner: UUID!
  created_at: DateTime!
  valid_until: DateTime
}

type EndpointTokenList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [EndpointToken]!
  total_count: Int!
}

"""Added in 24.03.4."""
input ExtraMountInput
  @join__type(graph: GRAPHENE)
{
  vfolder_id: String
  mount_destination: String

  """
  Added in 24.03.4. Set bind type of this mount. Shoud be one of (volume,bind,tmpfs,k8s-generic,k8s-hostpath). Default is 'bind'.
  """
  type: String

  """
  Added in 24.03.4. Set permission of this mount. Should be one of (ro,rw,wd). Default is null
  """
  permission: String
}

type ExtraVFolderMount implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  mountDestination: String!
  vfolder: VirtualFolderNode!
}

"""Added in 25.13.0"""
type ExtraVFolderMountConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ExtraVFolderMountEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ExtraVFolderMountEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: ExtraVFolderMount!
}

"""Added in 25.13.0"""
input ExtraVFolderMountInput
  @join__type(graph: STRAWBERRY)
{
  vfolderId: ID!
  mountDestination: String
}

"""
A string-serialized scalar represents a set of fields that's passed to a federated directive, such as @key, @requires, or @provides
"""
scalar FieldSet
  @join__type(graph: GRAPHENE)

"""Deprecated since 25.4.0. Use `forget_image_by_id` instead."""
type ForgetImage
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String

  """Added since 24.03.1."""
  image: ImageNode
}

"""Added in 24.03.0."""
type ForgetImageById
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String

  """Added since 24.03.1."""
  image: ImageNode
}

"""Added in 25.14.0"""
input GetPresignedDownloadURLInput
  @join__type(graph: STRAWBERRY)
{
  artifactRevisionId: ID!
  key: String!
  expiration: Int = null
}

"""Added in 25.14.0"""
type GetPresignedDownloadURLPayload
  @join__type(graph: STRAWBERRY)
{
  presignedUrl: String!
}

"""Added in 25.14.0"""
input GetPresignedUploadURLInput
  @join__type(graph: STRAWBERRY)
{
  artifactRevisionId: ID!
  key: String!
}

"""Added in 25.14.0"""
type GetPresignedUploadURLPayload
  @join__type(graph: STRAWBERRY)
{
  presignedUrl: String!
  fields: String!
}

"""
Added in 24.09.0. Global ID of GQL relay spec. Base64 encoded version of "<node type name>:<node id>". UUID or string type values are also allowed.
"""
scalar GlobalIDField
  @join__type(graph: GRAPHENE)

type Group
  @join__type(graph: GRAPHENE)
{
  id: UUID
  name: String
  description: String
  is_active: Boolean
  created_at: DateTime
  modified_at: DateTime
  domain_name: String
  total_resource_slots: JSONString
  allowed_vfolder_hosts: JSONString
  integration_id: String
  resource_policy: String

  """Added in 24.03.0."""
  type: String

  """Added in 24.03.0."""
  container_registry: JSONString
  scaling_groups: [String]
}

"""Added in 24.03.0"""
type GroupConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [GroupEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 24.03.0 A Relay edge containing a `Group` and its cursor."""
type GroupEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: GroupNode

  """A cursor for use in pagination"""
  cursor: String!
}

input GroupInput
  @join__type(graph: GRAPHENE)
{
  """Added in 24.03.0. Available values: GENERAL, MODEL_STORE"""
  type: String = "GENERAL"
  description: String = ""
  is_active: Boolean = true
  domain_name: String!
  total_resource_slots: JSONString = "{}"
  allowed_vfolder_hosts: JSONString = "{}"
  integration_id: String = ""
  resource_policy: String = "default"

  """Added in 24.03.0"""
  container_registry: JSONString = "{}"
}

type GroupNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE, key: "id")
  @join__type(graph: STRAWBERRY, key: "id", extension: true)
{
  """The ID of the object"""
  id: ID!

  """Added in 24.03.7. The undecoded id value stored in DB."""
  row_id: UUID @join__field(graph: GRAPHENE)
  name: String @join__field(graph: GRAPHENE)
  description: String @join__field(graph: GRAPHENE)
  is_active: Boolean @join__field(graph: GRAPHENE)
  created_at: DateTime @join__field(graph: GRAPHENE)
  modified_at: DateTime @join__field(graph: GRAPHENE)
  domain_name: String @join__field(graph: GRAPHENE)
  total_resource_slots: JSONString @join__field(graph: GRAPHENE)
  allowed_vfolder_hosts: JSONString @join__field(graph: GRAPHENE)
  integration_id: String @join__field(graph: GRAPHENE)
  resource_policy: String @join__field(graph: GRAPHENE)

  """Added in 24.03.7. One of ['GENERAL', 'MODEL_STORE']."""
  type: String @join__field(graph: GRAPHENE)

  """Added in 24.03.7."""
  container_registry: JSONString @join__field(graph: GRAPHENE)
  scaling_groups: [String] @join__field(graph: GRAPHENE)

  """Added in 25.3.0."""
  registry_quota: BigInt @join__field(graph: GRAPHENE)
  user_nodes(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): UserConnection @join__field(graph: GRAPHENE)
}

"""
Added in 25.3.0. One of ['read_attribute', 'read_sensitive_attribute', 'update_attribute', 'delete_project', 'associate_with_user'].
"""
scalar GroupPermissionField
  @join__type(graph: GRAPHENE)

"""Added in 25.14.0"""
type HuggingFaceRegistry implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  url: String!
  name: String!
  token: String
}

"""Added in 25.14.0"""
type HuggingFaceRegistryConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [HuggingFaceRegistryEdge!]!
  count: Int!
}

"""An edge in a connection."""
type HuggingFaceRegistryEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: HuggingFaceRegistry!
}

type Image
  @join__type(graph: GRAPHENE)
{
  id: UUID
  name: String @deprecated(reason: "Deprecated since 24.12.0. use `namespace` instead")

  """Added in 24.12.0."""
  namespace: String

  """Added in 24.12.0."""
  base_image_name: String

  """Added in 24.03.10."""
  project: String
  humanized_name: String
  tag: String

  """Added in 24.12.0."""
  tags: [KVPair]

  """Added in 24.12.0."""
  version: String
  registry: String
  architecture: String
  is_local: Boolean
  digest: String
  labels: [KVPair]
  aliases: [String]
  size_bytes: BigInt

  """Added in 25.4.0."""
  status: String
  resource_limits: [ResourceLimit]
  supported_accelerators: [String]
  installed: Boolean
  installed_agents: [String]
  hash: String
}

"""Added in 25.3.0."""
type ImageConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [ImageEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 25.3.0. A Relay edge containing a `Image` and its cursor."""
type ImageEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: ImageNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Added in 25.13.0"""
input ImageInput
  @join__type(graph: STRAWBERRY)
{
  name: String!
  architecture: String!
}

type ImageNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE, key: "id")
  @join__type(graph: STRAWBERRY, key: "id", extension: true)
{
  """The ID of the object"""
  id: ID!

  """Added in 24.03.4. The undecoded id value stored in DB."""
  row_id: UUID @join__field(graph: GRAPHENE)
  name: String @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 24.12.0. use `namespace` instead")

  """Added in 24.12.0."""
  namespace: String @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  base_image_name: String @join__field(graph: GRAPHENE)

  """Added in 24.03.10."""
  project: String @join__field(graph: GRAPHENE)
  humanized_name: String @join__field(graph: GRAPHENE)
  tag: String @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  tags: [KVPair] @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  version: String @join__field(graph: GRAPHENE)
  registry: String @join__field(graph: GRAPHENE)
  architecture: String @join__field(graph: GRAPHENE)
  is_local: Boolean @join__field(graph: GRAPHENE)
  digest: String @join__field(graph: GRAPHENE)
  labels: [KVPair] @join__field(graph: GRAPHENE)
  size_bytes: BigInt @join__field(graph: GRAPHENE)

  """Added in 25.4.0."""
  status: String @join__field(graph: GRAPHENE)
  resource_limits: [ResourceLimit] @join__field(graph: GRAPHENE)
  supported_accelerators: [String] @join__field(graph: GRAPHENE)

  """Added in 24.03.4. The array of image aliases."""
  aliases: [String] @join__field(graph: GRAPHENE)

  """
  Added in 25.3.0. One of ['read_attribute', 'update_attribute', 'create_container', 'forget_image'].
  """
  permissions: [ImagePermissionValueField] @join__field(graph: GRAPHENE)

  """Added in 25.11.0. Indicates if the image is installed on any Agent."""
  installed: Boolean @join__field(graph: GRAPHENE)

  """Added in 25.12.0."""
  type: ImageType @join__field(graph: GRAPHENE)
}

"""
Added in 25.3.0. One of ['read_attribute', 'update_attribute', 'create_container', 'forget_image'].
"""
scalar ImagePermissionValueField
  @join__type(graph: GRAPHENE)

input ImageRefType
  @join__type(graph: GRAPHENE)
{
  name: String!
  registry: String
  architecture: String
}

"""Added in 25.4.0."""
enum ImageStatus
  @join__type(graph: GRAPHENE)
{
  ALIVE @join__enumValue(graph: GRAPHENE)
  DELETED @join__enumValue(graph: GRAPHENE)
}

"""Added in 25.12.0."""
enum ImageType
  @join__type(graph: GRAPHENE)
{
  COMPUTE @join__enumValue(graph: GRAPHENE)
  SYSTEM @join__enumValue(graph: GRAPHENE)
  SERVICE @join__enumValue(graph: GRAPHENE)
}

"""
Added in 25.14.0.

Input for importing scanned artifact revisions from external registries.

Downloads artifact files from the external source and transitions them through:
SCANNED → PULLING → PULLED → AVAILABLE status progression.
"""
input ImportArtifactsInput
  @join__type(graph: STRAWBERRY)
{
  artifactRevisionIds: [ID!]!
}

"""
Added in 25.14.0.

Response payload for artifact import operations.

Contains the imported artifact revisions and their associated background tasks.
Tasks can be monitored to track the import progress from SCANNED to AVAILABLE status.
"""
type ImportArtifactsPayload
  @join__type(graph: STRAWBERRY)
{
  artifactRevisions: ArtifactRevisionConnection!
  tasks: [ArtifactRevisionImportTask!]!
}

type InferenceSessionError
  @join__type(graph: GRAPHENE)
{
  session_id: UUID
  errors: [InferenceSessionErrorInfo!]!
}

type InferenceSessionErrorInfo
  @join__type(graph: GRAPHENE)
{
  src: String!
  name: String!
  repr: String!
}

input IntFilter
  @join__type(graph: STRAWBERRY)
{
  equals: Int = null
  notEquals: Int = null
  greaterThan: Int = null
  greaterThanOrEqual: Int = null
  lessThan: Int = null
  lessThanOrEqual: Int = null
}

interface Item
  @join__type(graph: GRAPHENE)
{
  id: ID
}

scalar join__DirectiveArguments

scalar join__FieldSet

enum join__Graph {
  GRAPHENE @join__graph(name: "graphene", url: "http://host.docker.internal:8091/admin/gql")
  STRAWBERRY @join__graph(name: "strawberry", url: "http://host.docker.internal:8091/admin/gql/strawberry")
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf).
"""
scalar JSON
  @join__type(graph: STRAWBERRY)
  @specifiedBy(url: "https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf")

"""
Allows use of a JSON String for input / output from the GraphQL schema.

Use of this type is *not recommended* as you lose the benefits of having a defined, static
schema (one of the key benefits of GraphQL).
"""
scalar JSONString
  @join__type(graph: GRAPHENE)
  @join__type(graph: STRAWBERRY)

"""Added in 24.09.0."""
type KernelConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [KernelEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 24.09.0. A Relay edge containing a `Kernel` and its cursor."""
type KernelEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: KernelNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Added in 24.09.0."""
type KernelNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!

  """ID of kernel."""
  row_id: UUID
  cluster_idx: Int
  local_rank: Int
  cluster_role: String
  cluster_hostname: String
  session_id: UUID
  image: ImageNode

  """Added in 25.4.0."""
  image_reference: String

  """
  Added in 25.4.0. The architecture that the image of this kernel requires
  """
  architecture: String
  status: String
  status_changed: DateTime
  status_info: String
  status_data: JSONString
  created_at: DateTime
  terminated_at: DateTime
  starts_at: DateTime
  scheduled_at: DateTime
  agent_id: String
  agent_addr: String
  container_id: String
  resource_opts: JSONString
  occupied_slots: JSONString
  live_stat: JSONString
  abusing_report: JSONString
  preopen_ports: [Int]
}

type KeyPair implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  user_id: String
  full_name: String
  access_key: String
  secret_key: String
  is_active: Boolean
  is_admin: Boolean
  resource_policy: String
  created_at: DateTime
  last_used: DateTime
  rate_limit: Int
  num_queries: Int

  """Added in 24.09.0."""
  rolling_count: Int
  user: UUID
  projects: [String]
  ssh_public_key: String
  vfolders: [VirtualFolder]
  compute_sessions(status: String): [ComputeSession]
  concurrency_used: Int
  user_info: UserInfo
  concurrency_limit: Int @deprecated(reason: "Moved to KeyPairResourcePolicy object as the max_concurrent_sessions field.")
}

input KeyPairInput
  @join__type(graph: GRAPHENE)
{
  is_active: Boolean = true
  is_admin: Boolean = false
  resource_policy: String!
  concurrency_limit: Int
  rate_limit: Int!
}

type KeyPairList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [KeyPair]!
  total_count: Int!
}

type KeyPairResourcePolicy
  @join__type(graph: GRAPHENE)
{
  name: String
  created_at: DateTime
  default_for_unspecified: String
  total_resource_slots: JSONString
  max_session_lifetime: Int
  max_concurrent_sessions: Int
  max_containers_per_session: Int
  idle_timeout: BigInt
  allowed_vfolder_hosts: JSONString
  max_vfolder_count: Int @deprecated(reason: "Deprecated since 23.09.4.")
  max_vfolder_size: BigInt @deprecated(reason: "Deprecated since 23.09.4.")
  max_quota_scope_size: BigInt @deprecated(reason: "Deprecated since 23.09.6.")

  """Added in 23.03.3."""
  max_concurrent_sftp_sessions: Int

  """Added in 24.03.4."""
  max_pending_session_count: Int

  """Added in 24.03.4."""
  max_pending_session_resource_slots: JSONString
}

type KVPair
  @join__type(graph: GRAPHENE)
{
  key: String
  value: String
}

input KVPairInput
  @join__type(graph: GRAPHENE)
{
  key: String
  value: String
}

"""Represents a main session."""
type LegacyComputeSession implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  tag: String
  sess_id: String
  sess_type: String
  session_name: String
  session_type: String
  role: String
  image: String
  architecture: String
  registry: String
  domain_name: String
  group_name: String
  group_id: UUID
  scaling_group: String
  user_uuid: UUID
  access_key: String
  status: String
  status_changed: DateTime
  status_info: String
  created_at: DateTime
  terminated_at: DateTime
  startup_command: String
  result: String
  agent: String
  container_id: String
  service_ports: JSONString
  occupied_slots: JSONString
  occupied_shares: JSONString
  mounts: [[String]]
  resource_opts: JSONString
  num_queries: BigInt
  live_stat: JSONString
  last_stat: JSONString
  user_email: String
  lang: String
  mem_slot: Int
  cpu_slot: Float
  gpu_slot: Float
  tpu_slot: Float
  cpu_used: BigInt
  cpu_using: Float
  mem_max_bytes: BigInt
  mem_cur_bytes: BigInt
  net_rx_bytes: BigInt
  net_tx_bytes: BigInt
  io_read_bytes: BigInt
  io_write_bytes: BigInt
  io_max_scratch_size: BigInt
  io_cur_scratch_size: BigInt
}

type LegacyComputeSessionList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [LegacyComputeSession]!
  total_count: Int!
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

"""
Added in 25.13.0. This enum represents the liveness status of a replica, indicating whether the deployment is currently running and able to serve requests.
"""
enum LivenessStatus
  @join__type(graph: STRAWBERRY)
{
  NOT_CHECKED @join__enumValue(graph: STRAWBERRY)
  HEALTHY @join__enumValue(graph: STRAWBERRY)
  UNHEALTHY @join__enumValue(graph: STRAWBERRY)
  DEGRADED @join__enumValue(graph: STRAWBERRY)
}

"""Added in 25.13.0"""
input LivenessStatusFilter
  @join__type(graph: STRAWBERRY)
{
  in: [LivenessStatus!] = null
  equals: LivenessStatus = null
}

"""Added in 25.6.0. A pair of timestamp and value."""
type MetricResultValue
  @join__type(graph: GRAPHENE)
{
  timestamp: Float
  value: String
}

type ModelCard implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!
  name: String

  """Added in 24.03.8. ID of VFolder."""
  row_id: UUID
  vfolder: VirtualFolder

  """Added in 24.09.0."""
  vfolder_node: VirtualFolderNode
  author: String

  """Human readable name of the model."""
  title: String
  version: String

  """The time the model was created."""
  created_at: DateTime

  """The last time the model was modified."""
  modified_at: DateTime
  description: String
  task: String
  category: String
  architecture: String
  framework: [String]
  label: [String]
  license: String
  min_resource: JSONString
  readme: String

  """
  Type (mostly extension of the filename) of the README file. e.g. md, rst, txt, ...
  """
  readme_filetype: String

  """Added in 24.03.8."""
  error_msg: String
}

"""Added in 24.03.4"""
type ModelCardConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [ModelCardEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 24.03.4 A Relay edge containing a `ModelCard` and its cursor."""
type ModelCardEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: ModelCard

  """A cursor for use in pagination"""
  cursor: String!
}

"""Added in 25.13.0"""
type ModelDeployment implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  metadata: ModelDeploymentMetadata!
  networkAccess: ModelDeploymentNetworkAccess!
  revision: ModelRevision
  revisionHistory: ModelRevisionConnection!
  scalingRule: ScalingRule!
  replicaState: ReplicaState!
  defaultDeploymentStrategy: DeploymentStrategy!
  createdUser: UserNode!
}

"""Added in 25.13.0"""
type ModelDeploymentConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ModelDeploymentEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ModelDeploymentEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: ModelDeployment!
}

"""Added in 25.13.0"""
type ModelDeploymentMetadata
  @join__type(graph: STRAWBERRY)
{
  name: String!
  status: DeploymentStatus!
  tags: [String!]!
  project: GroupNode!
  domain: DomainNode!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Added in 25.13.0"""
input ModelDeploymentMetadataInput
  @join__type(graph: STRAWBERRY)
{
  projectId: ID!
  domainName: String!
  name: String = null
  tags: [String!] = null
}

"""Added in 25.13.0"""
type ModelDeploymentNetworkAccess
  @join__type(graph: STRAWBERRY)
{
  endpointUrl: String
  preferredDomainName: String
  openToPublic: Boolean!
  accessTokens: AccessTokenConnection!
}

"""Added in 25.13.0"""
input ModelDeploymentNetworkAccessInput
  @join__type(graph: STRAWBERRY)
{
  preferredDomainName: String = null
  openToPublic: Boolean! = false
}

"""Added in 25.13.0"""
type ModelMountConfig
  @join__type(graph: STRAWBERRY)
{
  vfolder: VirtualFolderNode!
  mountDestination: String!
  definitionPath: String!
}

"""Added in 25.13.0"""
input ModelMountConfigInput
  @join__type(graph: STRAWBERRY)
{
  vfolderId: ID!
  mountDestination: String!
  definitionPath: String!
}

"""Added in 25.13.0"""
type ModelReplica implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  revision: ModelRevision!

  """
  This represents whether the replica has been checked and its health state.
  """
  readinessStatus: ReadinessStatus!

  """
  This represents whether the replica is currently running and able to serve requests.
  """
  livenessStatus: LivenessStatus!

  """
  This represents whether the replica is currently active and able to serve requests.
  """
  activenessStatus: ActivenessStatus!
  weight: Int!

  """
  Detailed information about the routing node. It can include both error messages and success messages.
  """
  detail: JSONString!
  createdAt: DateTime!

  """
  live statistics of the routing node. e.g. "live_stat": "{\"cpu_util\": {\"current\": \"7.472\", \"capacity\": \"1000\", \"pct\": \"0.75\", \"unit_hint\": \"percent\"}}"
  """
  liveStat: JSONString!

  """
  The session ID associated with the replica. This can be null right after replica creation.
  """
  session: ComputeSessionNode!
}

"""Added in 25.13.0"""
type ModelReplicaConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ModelReplicaEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ModelReplicaEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: ModelReplica!
}

"""Added in 25.13.0"""
type ModelRevision implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  clusterConfig: ClusterConfig!
  resourceConfig: ResourceConfig!
  modelRuntimeConfig: ModelRuntimeConfig!
  modelMountConfig: ModelMountConfig!
  extraMounts: ExtraVFolderMountConnection!
  image: ImageNode!
  createdAt: DateTime!
}

"""Added in 25.13.0"""
type ModelRevisionConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ModelRevisionEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ModelRevisionEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: ModelRevision!
}

"""Added in 25.13.0"""
input ModelRevisionFilter
  @join__type(graph: STRAWBERRY)
{
  name: StringFilter = null
  deploymentId: ID = null
  AND: [ModelRevisionFilter!] = null
  OR: [ModelRevisionFilter!] = null
  NOT: [ModelRevisionFilter!] = null
  DISTINCT: Boolean = null
}

"""Added in 25.13.0"""
input ModelRevisionOrderBy
  @join__type(graph: STRAWBERRY)
{
  field: ModelRevisionOrderField!
  direction: OrderDirection! = DESC
}

"""Added in 25.13.0"""
enum ModelRevisionOrderField
  @join__type(graph: STRAWBERRY)
{
  CREATED_AT @join__enumValue(graph: STRAWBERRY)
  NAME @join__enumValue(graph: STRAWBERRY)
}

"""Added in 25.13.0"""
type ModelRuntimeConfig
  @join__type(graph: STRAWBERRY)
{
  runtimeVariant: String!
  inferenceRuntimeConfig: JSON

  """
  Environment variables for the service, e.g. {"CUDA_VISIBLE_DEVICES": "0"}
  """
  environ: JSONString
}

"""Added in 25.13.0"""
input ModelRuntimeConfigInput
  @join__type(graph: STRAWBERRY)
{
  runtimeVariant: String!
  inferenceRuntimeConfig: JSON = null

  """
  Environment variables for the service, e.g. {"CUDA_VISIBLE_DEVICES": "0"}
  """
  environ: JSONString = null
}

"""
Added in 25.14.0.

Specifies a target model for scanning operations.

Used to identify specific models in external registries for detailed scanning.
If revision is not specified, defaults to 'main' revision.
"""
input ModelTarget
  @join__type(graph: STRAWBERRY)
{
  modelId: String!
  revision: String = null
}

type ModifyAgent
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input ModifyAgentInput
  @join__type(graph: GRAPHENE)
{
  schedulable: Boolean
  scaling_group: String
}

input ModifyComputeSessionInput
  @join__type(graph: GRAPHENE)
{
  id: GlobalIDField!
  name: String
  priority: Int
  clientMutationId: String
}

"""Added in 24.09.0."""
type ModifyComputeSessionPayload
  @join__type(graph: GRAPHENE)
{
  item: ComputeSessionNode
  clientMutationId: String
}

"""Deprecated since 24.09.0. use `ModifyContainerRegistryNode` instead"""
type ModifyContainerRegistry
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistry
}

"""Deprecated since 24.09.0."""
input ModifyContainerRegistryInput
  @join__type(graph: GRAPHENE)
{
  url: String
  type: String
  project: [String]
  username: String
  password: String
  ssl_verify: Boolean

  """Added in 24.09.0."""
  is_global: Boolean
}

"""Added in 24.09.0."""
type ModifyContainerRegistryNode
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistryNode
}

"""Added in 25.3.0."""
input ModifyContainerRegistryNodeInputV2
  @join__type(graph: GRAPHENE)
{
  """Added in 25.3.0."""
  url: String

  """Added in 25.3.0."""
  type: ContainerRegistryTypeField

  """Added in 25.3.0."""
  registry_name: String

  """Added in 25.3.0."""
  is_global: Boolean

  """Added in 25.3.0."""
  project: String

  """Added in 25.3.0."""
  username: String

  """Added in 25.3.0."""
  password: String

  """Added in 25.3.0."""
  ssl_verify: Boolean

  """Added in 25.3.0."""
  extra: JSONString

  """Added in 25.3.0."""
  allowed_groups: AllowedGroups
}

"""Added in 25.3.0."""
type ModifyContainerRegistryNodeV2
  @join__type(graph: GRAPHENE)
{
  container_registry: ContainerRegistryNode
}

type ModifyDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  domain: Domain
}

input ModifyDomainInput
  @join__type(graph: GRAPHENE)
{
  name: String
  description: String
  is_active: Boolean
  total_resource_slots: JSONString
  allowed_vfolder_hosts: JSONString
  allowed_docker_registries: [String]
  integration_id: String
}

"""Added in 24.12.0."""
type ModifyDomainNode
  @join__type(graph: GRAPHENE)
{
  item: DomainNode
  client_mutation_id: String
}

"""Added in 24.12.0."""
input ModifyDomainNodeInput
  @join__type(graph: GRAPHENE)
{
  id: GlobalIDField!
  description: String
  is_active: Boolean
  total_resource_slots: JSONString
  allowed_vfolder_hosts: JSONString
  allowed_docker_registries: [String]
  integration_id: String
  dotfiles: Bytes
  sgroups_to_add: [String]
  sgroups_to_remove: [String]
  client_mutation_id: String
}

type ModifyEndpoint
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String

  """Added in 23.09.8."""
  endpoint: Endpoint
}

"""Added in 25.1.0."""
input ModifyEndpointAutoScalingRuleInput
  @join__type(graph: GRAPHENE)
{
  metric_source: AutoScalingMetricSource
  metric_name: String
  threshold: String
  comparator: AutoScalingMetricComparator
  step_size: Int
  cooldown_seconds: Int
  min_replicas: Int
  max_replicas: Int
}

"""Added in 25.1.0."""
type ModifyEndpointAutoScalingRuleNode
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  rule: EndpointAutoScalingRuleNode
}

input ModifyEndpointInput
  @join__type(graph: GRAPHENE)
{
  resource_slots: JSONString
  resource_opts: JSONString
  cluster_mode: String
  cluster_size: Int

  """Added in 24.12.0. Replaces `desired_session_count`."""
  replicas: Int
  desired_session_count: Int @deprecated(reason: "Deprecated since 24.12.0. Use `replicas` instead.")
  image: ImageRefType
  name: String
  resource_group: String

  """
  Added in 24.03.4. Must be set to `/models` when choosing `runtime_variant` other than `CUSTOM` or `CMD`.
  """
  model_definition_path: String
  open_to_public: Boolean

  """
  Added in 24.03.4. MODEL type VFolders are not allowed to be attached to model service session with this option.
  """
  extra_mounts: [ExtraMountInput]

  """Added in 24.03.5."""
  environ: JSONString

  """Added in 24.03.5."""
  runtime_variant: String
}

type ModifyGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  group: Group
}

input ModifyGroupInput
  @join__type(graph: GRAPHENE)
{
  name: String
  description: String
  is_active: Boolean
  domain_name: String
  total_resource_slots: JSONString
  user_update_mode: String
  user_uuids: [String]
  allowed_vfolder_hosts: JSONString
  integration_id: String
  resource_policy: String

  """Added in 24.03.0"""
  container_registry: JSONString = "{}"
}

type ModifyImage
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input ModifyImageInput
  @join__type(graph: GRAPHENE)
{
  name: String
  registry: String
  image: String
  tag: String
  architecture: String
  is_local: Boolean
  size_bytes: Int
  type: String
  digest: String
  labels: [KVPairInput]
  supported_accelerators: [String]
  resource_limits: [ResourceLimitInput]
}

type ModifyKeyPair
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input ModifyKeyPairInput
  @join__type(graph: GRAPHENE)
{
  is_active: Boolean
  is_admin: Boolean
  resource_policy: String
  concurrency_limit: Int
  rate_limit: Int
}

type ModifyKeyPairResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input ModifyKeyPairResourcePolicyInput
  @join__type(graph: GRAPHENE)
{
  default_for_unspecified: String
  total_resource_slots: JSONString
  max_session_lifetime: Int
  max_concurrent_sessions: Int
  max_concurrent_sftp_sessions: Int
  max_containers_per_session: Int
  idle_timeout: BigInt
  allowed_vfolder_hosts: JSONString
  max_vfolder_count: Int @deprecated(reason: "Deprecated since 23.09.4.")
  max_vfolder_size: BigInt @deprecated(reason: "Deprecated since 23.09.4.")
  max_quota_scope_size: BigInt @deprecated(reason: "Deprecated since 23.09.6.")

  """Added in 24.03.4."""
  max_pending_session_count: Int

  """Added in 24.03.4."""
  max_pending_session_resource_slots: JSONString
}

"""Added in 24.12.0."""
type ModifyNetwork
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  network: NetworkNode
}

"""Added in 24.12.0."""
input ModifyNetworkInput
  @join__type(graph: GRAPHENE)
{
  name: String!
}

type ModifyProjectResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input ModifyProjectResourcePolicyInput
  @join__type(graph: GRAPHENE)
{
  """
  Added in 24.03.1 and 23.09.6. Limitation of the number of project vfolders.
  """
  max_vfolder_count: Int

  """
  Added in 24.03.1 and 23.09.2. Limitation of the quota size of project vfolders.
  """
  max_quota_scope_size: BigInt
  max_vfolder_size: BigInt @deprecated(reason: "Deprecated since 23.09.2.")

  """
  Added in 24.12.0. Limitation of the number of networks created on behalf of project. Set as -1 to allow creating unlimited networks.
  """
  max_network_count: Int
}

type ModifyResourcePreset
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input ModifyResourcePresetInput
  @join__type(graph: GRAPHENE)
{
  """Added in 25.4.0. A name of resource preset."""
  name: String
  resource_slots: JSONString
  shared_memory: String

  """
  Added in 25.4.0. A name of scaling group(=resource group) of the resource preset associated with.
  """
  scaling_group_name: String
}

type ModifyScalingGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input ModifyScalingGroupInput
  @join__type(graph: GRAPHENE)
{
  description: String
  is_active: Boolean
  is_public: Boolean
  wsproxy_addr: String
  wsproxy_api_token: String
  driver: String
  driver_opts: JSONString
  scheduler: String
  scheduler_opts: JSONString
  use_host_network: Boolean
}

"""
Input data for modifying configuration.
Added in 25.8.0.
"""
input ModifyServiceConfigNodeInput
  @join__type(graph: GRAPHENE)
{
  """
  Service name. See AvailableService.service_variants for possible values. Added in 25.8.0.
  """
  service: String!

  """Service configuration data to mutate. Added in 25.8.0."""
  configuration: JSONString!
}

"""
Payload for the ModifyServiceConfigNode mutation.
Added in 25.8.0.
"""
type ModifyServiceConfigNodePayload
  @join__type(graph: GRAPHENE)
{
  """ServiceConfiguration Node. Added in 25.8.0."""
  service_config: ServiceConfigNode!
}

type ModifyUser
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  user: User
}

input ModifyUserInput
  @join__type(graph: GRAPHENE)
{
  username: String
  password: String
  need_password_change: Boolean
  full_name: String
  description: String
  is_active: Boolean
  status: String
  domain_name: String
  role: String
  group_ids: [String]
  allowed_client_ip: [String]
  totp_activated: Boolean
  resource_policy: String
  sudo_session_enabled: Boolean
  main_access_key: String

  """
  Added in 25.2.0. The user ID (UID) assigned to processes running inside the container.
  """
  container_uid: Int

  """
  Added in 25.2.0. The primary group ID (GID) assigned to processes running inside the container.
  """
  container_main_gid: Int

  """
  Added in 25.2.0. Supplementary group IDs assigned to processes running inside the container.
  """
  container_gids: [Int]
}

type ModifyUserResourcePolicy
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input ModifyUserResourcePolicyInput
  @join__type(graph: GRAPHENE)
{
  """
  Added in 24.03.1 and 23.09.6. Limitation of the number of user vfolders.
  """
  max_vfolder_count: Int

  """
  Added in 24.03.1 and 23.09.2. Limitation of the quota size of user vfolders.
  """
  max_quota_scope_size: BigInt

  """
  Added in 24.03.1 and 23.09.10. Maximum available number of sessions per single model service which the user is in charge of.
  """
  max_session_count_per_model_session: Int

  """
  Added in 24.03.0. Maximum available number of customized images one can publish to.
  """
  max_customized_image_count: Int
}

"""
All available GraphQL mutations.
Type name changed from 'Mutations' to 'Mutation' in 25.13.0
"""
type Mutation
  @join__type(graph: GRAPHENE)
  @join__type(graph: STRAWBERRY)
{
  modify_agent(id: String!, props: ModifyAgentInput!): ModifyAgent @join__field(graph: GRAPHENE)
  create_domain(name: String!, props: DomainInput!): CreateDomain @join__field(graph: GRAPHENE)
  modify_domain(name: String!, props: ModifyDomainInput!): ModifyDomain @join__field(graph: GRAPHENE)

  """Instead of deleting the domain, just mark it as inactive."""
  delete_domain(name: String!): DeleteDomain @join__field(graph: GRAPHENE)

  """
  Completely delete domain from DB.
  
  Domain-bound kernels will also be all deleted.
  To purge domain, there should be no users and groups in the target domain.
  """
  purge_domain(name: String!): PurgeDomain @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  create_domain_node(input: CreateDomainNodeInput!): CreateDomainNode @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  modify_domain_node(input: ModifyDomainNodeInput!): ModifyDomainNode @join__field(graph: GRAPHENE)
  create_group(name: String!, props: GroupInput!): CreateGroup @join__field(graph: GRAPHENE)
  modify_group(gid: UUID!, props: ModifyGroupInput!): ModifyGroup @join__field(graph: GRAPHENE)

  """Instead of deleting the group, just mark it as inactive."""
  delete_group(gid: UUID!): DeleteGroup @join__field(graph: GRAPHENE)

  """
  Completely deletes a group from DB.
  
  Group's vfolders and their data will also be lost
  as well as the kernels run from the group.
  There is no migration of the ownership for group folders.
  """
  purge_group(gid: UUID!): PurgeGroup @join__field(graph: GRAPHENE)
  create_user(email: String!, props: UserInput!): CreateUser @join__field(graph: GRAPHENE)
  modify_user(email: String!, props: ModifyUserInput!): ModifyUser @join__field(graph: GRAPHENE)

  """
  Instead of really deleting user, just mark the account as deleted status.
  
  All related keypairs will also be inactivated.
  """
  delete_user(email: String!): DeleteUser @join__field(graph: GRAPHENE)

  """
  Delete user as well as all user-related DB informations such as keypairs, kernels, etc.
  
  If target user has virtual folders, they can be purged together or migrated to the superadmin.
  
  vFolder treatment policy:
    User-type:
    - vfolder is not shared: delete
    - vfolder is shared:
      + if purge_shared_vfolder is True: delete
      + else: change vfolder's owner to requested admin
  
  This action cannot be undone.
  """
  purge_user(email: String!, props: PurgeUserInput!): PurgeUser @join__field(graph: GRAPHENE)

  """Added in 25.4.0."""
  rescan_gpu_alloc_maps(
    """Agent ID to rescan GPU alloc map"""
    agent_id: String!
  ): RescanGPUAllocMaps @join__field(graph: GRAPHENE)
  create_keypair(props: KeyPairInput!, user_id: String!): CreateKeyPair @join__field(graph: GRAPHENE)
  modify_keypair(access_key: String!, props: ModifyKeyPairInput!): ModifyKeyPair @join__field(graph: GRAPHENE)
  delete_keypair(access_key: String!): DeleteKeyPair @join__field(graph: GRAPHENE)
  rescan_images(
    """Added in 25.1.0."""
    project: String
    registry: String
  ): RescanImages @join__field(graph: GRAPHENE)
  preload_image(references: [String]!, target_agents: [String]!): PreloadImage @join__field(graph: GRAPHENE)
  unload_image(references: [String]!, target_agents: [String]!): UnloadImage @join__field(graph: GRAPHENE)
  modify_image(architecture: String = "aarch64", props: ModifyImageInput!, target: String!): ModifyImage @join__field(graph: GRAPHENE)

  """Added in 25.6.0"""
  clear_image_custom_resource_limit(key: ClearImageCustomResourceLimitKey!): ClearImageCustomResourceLimitPayload @join__field(graph: GRAPHENE)

  """Added in 24.03.0"""
  forget_image_by_id(image_id: String!): ForgetImageById @join__field(graph: GRAPHENE)

  """Deprecated since 25.4.0. Use `forget_image_by_id` instead."""
  forget_image(architecture: String = "aarch64", reference: String!): ForgetImage @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 25.4.0. Use `forget_image_by_id` instead.")

  """Added in 25.4.0"""
  purge_image_by_id(
    image_id: String!

    """Added in 25.10.0."""
    options: PurgeImageOptions = {remove_from_registry: false}
  ): PurgeImageById @join__field(graph: GRAPHENE)

  """Added in 24.03.1"""
  untag_image_from_registry(image_id: String!): UntagImageFromRegistry @join__field(graph: GRAPHENE)
  alias_image(alias: String!, architecture: String = "aarch64", target: String!): AliasImage @join__field(graph: GRAPHENE)
  dealias_image(alias: String!): DealiasImage @join__field(graph: GRAPHENE)
  clear_images(registry: String): ClearImages @join__field(graph: GRAPHENE)

  """Added in 25.4.0"""
  purge_images(keys: [PurgeImagesKey]!, options: PurgeImagesOptions = {force: false, noprune: false}): PurgeImagesPayload @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  modify_compute_session(input: ModifyComputeSessionInput!): ModifyComputeSessionPayload @join__field(graph: GRAPHENE)
  create_keypair_resource_policy(name: String!, props: CreateKeyPairResourcePolicyInput!): CreateKeyPairResourcePolicy @join__field(graph: GRAPHENE)
  modify_keypair_resource_policy(name: String!, props: ModifyKeyPairResourcePolicyInput!): ModifyKeyPairResourcePolicy @join__field(graph: GRAPHENE)
  delete_keypair_resource_policy(name: String!): DeleteKeyPairResourcePolicy @join__field(graph: GRAPHENE)
  create_user_resource_policy(name: String!, props: CreateUserResourcePolicyInput!): CreateUserResourcePolicy @join__field(graph: GRAPHENE)
  modify_user_resource_policy(name: String!, props: ModifyUserResourcePolicyInput!): ModifyUserResourcePolicy @join__field(graph: GRAPHENE)
  delete_user_resource_policy(name: String!): DeleteUserResourcePolicy @join__field(graph: GRAPHENE)
  create_project_resource_policy(name: String!, props: CreateProjectResourcePolicyInput!): CreateProjectResourcePolicy @join__field(graph: GRAPHENE)
  modify_project_resource_policy(name: String!, props: ModifyProjectResourcePolicyInput!): ModifyProjectResourcePolicy @join__field(graph: GRAPHENE)
  delete_project_resource_policy(name: String!): DeleteProjectResourcePolicy @join__field(graph: GRAPHENE)
  create_resource_preset(name: String!, props: CreateResourcePresetInput!): CreateResourcePreset @join__field(graph: GRAPHENE)
  modify_resource_preset(
    """Added in 25.4.0. ID of the resource preset."""
    id: UUID = null
    name: String = null @deprecated(reason: "Deprecated since 25.4.0.")
    props: ModifyResourcePresetInput!
  ): ModifyResourcePreset @join__field(graph: GRAPHENE)
  delete_resource_preset(
    """Added in 25.4.0. ID of the resource preset."""
    id: UUID = null
    name: String = null @deprecated(reason: "Deprecated since 25.4.0.")
  ): DeleteResourcePreset @join__field(graph: GRAPHENE)

  """Updates configuration for a given service. Added in 25.8.0."""
  modify_service_config(
    """Added in 25.8.0."""
    input: ModifyServiceConfigNodeInput!
  ): ModifyServiceConfigNodePayload @join__field(graph: GRAPHENE)
  create_scaling_group(name: String!, props: CreateScalingGroupInput!): CreateScalingGroup @join__field(graph: GRAPHENE)
  modify_scaling_group(name: String!, props: ModifyScalingGroupInput!): ModifyScalingGroup @join__field(graph: GRAPHENE)
  delete_scaling_group(name: String!): DeleteScalingGroup @join__field(graph: GRAPHENE)
  associate_scaling_group_with_domain(domain: String!, scaling_group: String!): AssociateScalingGroupWithDomain @join__field(graph: GRAPHENE)

  """Added in 24.03.9"""
  associate_scaling_groups_with_domain(domain: String!, scaling_groups: [String]!): AssociateScalingGroupsWithDomain @join__field(graph: GRAPHENE)
  associate_scaling_group_with_user_group(scaling_group: String!, user_group: UUID!): AssociateScalingGroupWithUserGroup @join__field(graph: GRAPHENE)

  """Added in 24.03.9"""
  associate_scaling_groups_with_user_group(scaling_groups: [String]!, user_group: UUID!): AssociateScalingGroupsWithUserGroup @join__field(graph: GRAPHENE)
  associate_scaling_group_with_keypair(access_key: String!, scaling_group: String!): AssociateScalingGroupWithKeyPair @join__field(graph: GRAPHENE)

  """Added in 24.03.9"""
  associate_scaling_groups_with_keypair(access_key: String!, scaling_groups: [String]!): AssociateScalingGroupsWithKeyPair @join__field(graph: GRAPHENE)
  disassociate_scaling_group_with_domain(domain: String!, scaling_group: String!): DisassociateScalingGroupWithDomain @join__field(graph: GRAPHENE)

  """Added in 24.03.9"""
  disassociate_scaling_groups_with_domain(domain: String!, scaling_groups: [String]!): DisassociateScalingGroupsWithDomain @join__field(graph: GRAPHENE)
  disassociate_scaling_group_with_user_group(scaling_group: String!, user_group: UUID!): DisassociateScalingGroupWithUserGroup @join__field(graph: GRAPHENE)

  """Added in 24.03.9"""
  disassociate_scaling_groups_with_user_group(scaling_groups: [String]!, user_group: UUID!): DisassociateScalingGroupsWithUserGroup @join__field(graph: GRAPHENE)
  disassociate_scaling_group_with_keypair(access_key: String!, scaling_group: String!): DisassociateScalingGroupWithKeyPair @join__field(graph: GRAPHENE)

  """Added in 24.03.9"""
  disassociate_scaling_groups_with_keypair(access_key: String!, scaling_groups: [String]!): DisassociateScalingGroupsWithKeyPair @join__field(graph: GRAPHENE)
  disassociate_all_scaling_groups_with_domain(domain: String!): DisassociateAllScalingGroupsWithDomain @join__field(graph: GRAPHENE)
  disassociate_all_scaling_groups_with_group(user_group: UUID!): DisassociateAllScalingGroupsWithGroup @join__field(graph: GRAPHENE)
  set_quota_scope(props: QuotaScopeInput!, quota_scope_id: String!, storage_host_name: String!): SetQuotaScope @join__field(graph: GRAPHENE)
  unset_quota_scope(quota_scope_id: String!, storage_host_name: String!): UnsetQuotaScope @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  create_container_registry_node(
    """Added in 24.09.3."""
    extra: JSONString

    """Added in 24.09.0."""
    is_global: Boolean

    """Added in 24.09.0."""
    password: String

    """Added in 24.09.0."""
    project: String

    """Added in 24.09.0."""
    registry_name: String!

    """Added in 24.09.0."""
    ssl_verify: Boolean

    """
    Added in 24.09.0. Registry type. One of ('docker', 'harbor', 'harbor2', 'github', 'gitlab', 'ecr', 'ecr-public', 'local').
    """
    type: ContainerRegistryTypeField!

    """Added in 24.09.0."""
    url: String!

    """Added in 24.09.0."""
    username: String
  ): CreateContainerRegistryNode @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 25.3.0. use `create_container_registry_node_v2` instead.")

  """Added in 24.09.0."""
  modify_container_registry_node(
    """Added in 24.09.3."""
    extra: JSONString

    """Object id. Can be either global id or object id. Added in 24.09.0."""
    id: String!

    """Added in 24.09.0."""
    is_global: Boolean

    """Added in 24.09.0."""
    password: String

    """Added in 24.09.0."""
    project: String

    """Added in 24.09.0."""
    registry_name: String

    """Added in 24.09.0."""
    ssl_verify: Boolean

    """
    Registry type. One of ('docker', 'harbor', 'harbor2', 'github', 'gitlab', 'ecr', 'ecr-public', 'local'). Added in 24.09.0.
    """
    type: ContainerRegistryTypeField

    """Added in 24.09.0."""
    url: String

    """Added in 24.09.0."""
    username: String
  ): ModifyContainerRegistryNode @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 25.3.0. use `modify_container_registry_node_v2` instead.")

  """Added in 24.09.0."""
  delete_container_registry_node(
    """Object id. Can be either global id or object id. Added in 24.09.0."""
    id: String!
  ): DeleteContainerRegistryNode @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 25.3.0. use `delete_container_registry_node_v2` instead.")

  """Added in 25.3.0."""
  create_container_registry_node_v2(
    """Added in 25.3.0."""
    props: CreateContainerRegistryNodeInputV2!
  ): CreateContainerRegistryNodeV2 @join__field(graph: GRAPHENE)

  """Added in 25.3.0."""
  modify_container_registry_node_v2(
    """Object id. Can be either global id or object id. Added in 25.3.0."""
    id: String!

    """Added in 25.3.0."""
    props: ModifyContainerRegistryNodeInputV2!
  ): ModifyContainerRegistryNodeV2 @join__field(graph: GRAPHENE)

  """Added in 25.3.0."""
  delete_container_registry_node_v2(
    """Object id. Can be either global id or object id. Added in 25.3.0."""
    id: String!
  ): DeleteContainerRegistryNodeV2 @join__field(graph: GRAPHENE)

  """Added in 25.1.0."""
  create_endpoint_auto_scaling_rule_node(endpoint: String!, props: EndpointAutoScalingRuleInput!): CreateEndpointAutoScalingRuleNode @join__field(graph: GRAPHENE)

  """Added in 25.1.0."""
  modify_endpoint_auto_scaling_rule_node(id: String!, props: ModifyEndpointAutoScalingRuleInput!): ModifyEndpointAutoScalingRuleNode @join__field(graph: GRAPHENE)

  """Added in 25.1.0."""
  delete_endpoint_auto_scaling_rule_node(id: String!): DeleteEndpointAutoScalingRuleNode @join__field(graph: GRAPHENE)

  """Added in 25.3.0."""
  create_container_registry_quota(quota: BigInt!, scope_id: ScopeField!): CreateContainerRegistryQuota @join__field(graph: GRAPHENE)

  """Added in 25.3.0."""
  update_container_registry_quota(quota: BigInt!, scope_id: ScopeField!): UpdateContainerRegistryQuota @join__field(graph: GRAPHENE)

  """Added in 25.3.0."""
  delete_container_registry_quota(scope_id: ScopeField!): DeleteContainerRegistryQuota @join__field(graph: GRAPHENE)

  """Deprecated since 24.09.0. use `CreateContainerRegistryNode` instead"""
  create_container_registry(hostname: String!, props: CreateContainerRegistryInput!): CreateContainerRegistry @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 24.09.0. use `create_container_registry_node_v2` instead.")

  """Deprecated since 24.09.0. use `ModifyContainerRegistryNode` instead"""
  modify_container_registry(hostname: String!, props: ModifyContainerRegistryInput!): ModifyContainerRegistry @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 24.09.0. use `modify_container_registry_node_v2` instead.")

  """Deprecated since 24.09.0. use `DeleteContainerRegistryNode` instead"""
  delete_container_registry(hostname: String!): DeleteContainerRegistry @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 24.09.0. use `delete_container_registry_node_v2` instead.")
  modify_endpoint(endpoint_id: UUID!, props: ModifyEndpointInput!): ModifyEndpoint @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  check_and_transit_session_status(input: CheckAndTransitStatusInput!): CheckAndTransitStatus @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  create_network(driver: String, name: String!, project_id: UUID!): CreateNetwork @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  modify_network(network: String!, props: ModifyNetworkInput!): ModifyNetwork @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  delete_network(network: String!): DeleteNetwork @join__field(graph: GRAPHENE)

  """
  Added in 25.14.0.
  
  Scan external registries to discover available artifacts.
  
  Searches HuggingFace or Reservoir registries for artifacts matching the specified
  criteria and registers them in the system with SCANNED status. The artifacts
  become available for import but are not downloaded until explicitly imported.
  
  This is the first step in the artifact workflow: Scan → Import → Use.
  """
  scanArtifacts(input: ScanArtifactsInput!): ScanArtifactsPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Perform detailed scanning of specific models.
  
  Unlike the general scan_artifacts operation, this performs immediate detailed
  scanning of specified models including README content and file sizes.
  Returns artifact revisions with complete metadata ready for use.
  """
  scanArtifactModels(input: ScanArtifactModelsInput!): ScanArtifactModelsPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Import scanned artifact revisions from external registries.
  
  Downloads the actual files for the specified artifact revisions, transitioning
  them from SCANNED → PULLING → PULLED → AVAILABLE status.
  
  Returns background tasks that can be monitored for import progress.
  Once AVAILABLE, artifacts can be used by users in their sessions.
  """
  importArtifacts(input: ImportArtifactsInput!): ImportArtifactsPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.15.0.
  
  Triggers artifact scanning on a remote reservoir registry.
  
  This mutation instructs a reservoir-type registry to initiate a scan of artifacts
  from its associated remote reservoir registry source. The scan process will discover and
  catalog artifacts available in the remote reservoir, making them accessible
  through the local reservoir registry.
  
  Requirements:
  - The delegator registry must be of type 'reservoir'
  - The delegator reservoir registry must have a valid remote registry configuration
  """
  delegateScanArtifacts(input: DelegateScanArtifactsInput!): DelegateScanArtifactsPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.15.0.
  
  Trigger import of artifact revisions from a remote reservoir registry.
  
  This mutation instructs a reservoir-type registry to import specific artifact revisions
  that were previously discovered during a scan from its remote registry.
  Note that this operation does not import the artifacts directly into the local registry, but only into the delegator reservoir's storage.
  
  Requirements:
  - The delegator registry must be of type 'reservoir'
  - The delegator registry must have a valid remote registry configuration
  """
  delegateImportArtifacts(input: DelegateImportArtifactsInput!): DelegateImportArtifactsPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Update artifact metadata properties.
  
  Modifies artifact metadata such as readonly status and description.
  This operation does not affect the actual artifact files or revisions.
  """
  updateArtifact(input: UpdateArtifactInput!): UpdateArtifactPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.15.0.
  
  Soft-delete artifacts from the system.
  
  Marks artifacts as deleted without permanently removing them.
  Deleted artifacts can be restored using the restore_artifacts mutation.
  """
  deleteArtifacts(input: DeleteArtifactsInput!): DeleteArtifactsPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.15.0.
  
  Restore previously deleted artifacts.
  
  Reverses the soft-delete operation, making the artifacts available again
  for use in the system.
  """
  restoreArtifacts(input: RestoreArtifactsInput!): RestoreArtifactsPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Clean up stored artifact revision data to free storage space.
  
  Removes the downloaded files for the specified artifact revisions and
  transitions them back to SCANNED status. The metadata remains, allowing
  the artifacts to be re-imported later if needed.
  
  Use this operation to manage storage usage by removing unused artifacts.
  """
  cleanupArtifactRevisions(input: CleanupArtifactRevisionsInput!): CleanupArtifactRevisionsPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Cancel an in-progress artifact import operation.
  
  Stops the download process for the specified artifact revision and
  reverts its status back to SCANNED. The partially downloaded data is cleaned up.
  """
  cancelImportArtifact(input: CancelArtifactInput!): CancelImportArtifactPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  createModelDeployment(input: CreateModelDeploymentInput!): CreateModelDeploymentPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  updateModelDeployment(input: UpdateModelDeploymentInput!): UpdateModelDeploymentPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  deleteModelDeployment(input: DeleteModelDeploymentInput!): DeleteModelDeploymentPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.13.0. Force syncs up-to-date replica information. In normal situations this will be automatically handled by Backend.AI schedulers
  """
  syncReplicas(input: SyncReplicaInput!): SyncReplicaPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  addModelRevision(input: AddModelRevisionInput!): AddModelRevisionPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  createModelRevision(input: CreateModelRevisionInput!): CreateModelRevisionPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  createObjectStorage(input: CreateObjectStorageInput!): CreateObjectStoragePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  updateObjectStorage(input: UpdateObjectStorageInput!): UpdateObjectStoragePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  createAutoScalingRule(input: CreateAutoScalingRuleInput!): CreateAutoScalingRulePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  updateAutoScalingRule(input: UpdateAutoScalingRuleInput!): UpdateAutoScalingRulePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  deleteAutoScalingRule(input: DeleteAutoScalingRuleInput!): DeleteAutoScalingRulePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  deleteObjectStorage(input: DeleteObjectStorageInput!): DeleteObjectStoragePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.16.0. Create a new VFS storage"""
  createVFSStorage(input: CreateVFSStorageInput!): CreateVFSStoragePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.16.0. Update an existing VFS storage"""
  updateVFSStorage(input: UpdateVFSStorageInput!): UpdateVFSStoragePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.16.0. Delete a VFS storage"""
  deleteVFSStorage(input: DeleteVFSStorageInput!): DeleteVFSStoragePayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.15.0.
  
  Registers a new namespace within a storage.
  """
  registerStorageNamespace(input: RegisterStorageNamespaceInput!): RegisterStorageNamespacePayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.15.0.
  
  Unregisters an existing namespace from a storage.
  """
  unregisterStorageNamespace(input: UnregisterStorageNamespaceInput!): UnregisterStorageNamespacePayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  createHuggingfaceRegistry(input: CreateHuggingFaceRegistryInput!): CreateHuggingFaceRegistryPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  updateHuggingfaceRegistry(input: UpdateHuggingFaceRegistryInput!): UpdateHuggingFaceRegistryPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  deleteHuggingfaceRegistry(input: DeleteHuggingFaceRegistryInput!): DeleteHuggingFaceRegistryPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  createReservoirRegistry(input: CreateReservoirRegistryInput!): CreateReservoirRegistryPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  updateReservoirRegistry(input: UpdateReservoirRegistryInput!): UpdateReservoirRegistryPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  deleteReservoirRegistry(input: DeleteReservoirRegistryInput!): DeleteReservoirRegistryPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  getPresignedDownloadUrl(input: GetPresignedDownloadURLInput!): GetPresignedDownloadURLPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  getPresignedUploadUrl(input: GetPresignedUploadURLInput!): GetPresignedUploadURLPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Approve an artifact revision for general use.
  
  Admin-only operation to approve artifact revisions, typically used
  in environments with approval workflows for artifact deployment.
  """
  approveArtifactRevision(input: ApproveArtifactInput!): ApproveArtifactPayload! @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Reject an artifact revision, preventing its use.
  
  Admin-only operation to reject artifact revisions, typically used
  in environments with approval workflows for artifact deployment.
  """
  rejectArtifactRevision(input: RejectArtifactInput!): RejectArtifactPayload! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  createAccessToken(input: CreateAccessTokenInput!): CreateAccessTokenPayload! @join__field(graph: STRAWBERRY)
}

"""Added in 24.12.0."""
type NetworkConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [NetworkEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 24.12.0. A Relay edge containing a `Network` and its cursor."""
type NetworkEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: NetworkNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Added in 24.12.0."""
type NetworkNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!
  row_id: UUID
  name: String
  ref_name: String
  driver: String
  project: UUID
  domain_name: String
  options: JSONString
  created_at: DateTime
  updated_at: DateTime
}

"""
This GraphQL Relay Node extension is for running asynchronous resolvers and fine-grained handling of global id.
Refer to: https://github.com/graphql-python/graphene/blob/master/graphene/relay/node.py
"""
interface Node
  @join__type(graph: GRAPHENE)
  @join__type(graph: STRAWBERRY)
{
  """The ID of the object"""
  id: ID!
}

"""Added in 25.14.0"""
type ObjectStorage implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  host: String!
  accessKey: String!
  secretKey: String!
  endpoint: String!
  region: String!
  namespaces(before: String, after: String, first: Int, last: Int, limit: Int, offset: Int): StorageNamespaceConnection!
}

"""Added in 25.14.0"""
type ObjectStorageConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ObjectStorageEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ObjectStorageEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: ObjectStorage!
}

enum OrderDirection
  @join__type(graph: STRAWBERRY)
{
  ASC @join__enumValue(graph: STRAWBERRY)
  DESC @join__enumValue(graph: STRAWBERRY)
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo
  @join__type(graph: GRAPHENE)
  @join__type(graph: STRAWBERRY)
{
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

interface PaginatedList
  @join__type(graph: GRAPHENE)
{
  items: [Item]!
  total_count: Int!
}

type PredefinedAtomicPermission
  @join__type(graph: GRAPHENE)
{
  vfolder_host_permission_list: [String]
}

type PreloadImage
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  task_id: String
}

type ProjectResourcePolicy
  @join__type(graph: GRAPHENE)
{
  id: ID!
  name: String!
  created_at: DateTime!

  """
  Added in 24.03.1 and 23.09.6. Limitation of the number of project vfolders.
  """
  max_vfolder_count: Int

  """
  Added in 24.03.1 and 23.09.2. Limitation of the quota size of project vfolders.
  """
  max_quota_scope_size: BigInt
  max_vfolder_size: BigInt @deprecated(reason: "Deprecated since 23.09.2.")

  """
  Added in 24.12.0. Limitation of the number of networks created on behalf of project.
  """
  max_network_count: Int
}

"""
Completely delete domain from DB.

Domain-bound kernels will also be all deleted.
To purge domain, there should be no users and groups in the target domain.
"""
type PurgeDomain
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""
Completely deletes a group from DB.

Group's vfolders and their data will also be lost
as well as the kernels run from the group.
There is no migration of the ownership for group folders.
"""
type PurgeGroup
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.4.0."""
type PurgeImageById
  @join__type(graph: GRAPHENE)
{
  image: ImageNode
}

"""Added in 25.10.0."""
input PurgeImageOptions
  @join__type(graph: GRAPHENE)
{
  """
  Untag the deleted image from the registry. Only available in the HarborV2 registry.
  """
  remove_from_registry: Boolean = false
}

"""Added in 25.6.0."""
input PurgeImagesKey
  @join__type(graph: GRAPHENE)
{
  agent_id: String!
  images: [ImageRefType]!
}

"""Added in 25.6.0."""
input PurgeImagesOptions
  @join__type(graph: GRAPHENE)
{
  """
  Remove the images even if it is being used by stopped containers or has other tags, Added in 25.6.0.
  """
  force: Boolean = false

  """Don't delete untagged parent images, Added in 25.6.0."""
  noprune: Boolean = false
}

"""Added in 25.6.0."""
type PurgeImagesPayload
  @join__type(graph: GRAPHENE)
{
  task_id: String
}

"""
Delete user as well as all user-related DB informations such as keypairs, kernels, etc.

If target user has virtual folders, they can be purged together or migrated to the superadmin.

vFolder treatment policy:
  User-type:
  - vfolder is not shared: delete
  - vfolder is shared:
    + if purge_shared_vfolder is True: delete
    + else: change vfolder's owner to requested admin

This action cannot be undone.
"""
type PurgeUser
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

input PurgeUserInput
  @join__type(graph: GRAPHENE)
{
  purge_shared_vfolders: Boolean

  """
  Added in 25.4.0. The default value is `false`. Indicates whether the user's existing endpoints are delegated to the requester.
  """
  delegate_endpoint_ownership: Boolean
}

type Query
  @join__type(graph: GRAPHENE)
  @join__type(graph: STRAWBERRY)
{
  node(
    """The ID of the object"""
    id: ID!
  ): Node @join__field(graph: GRAPHENE)

  """Added in 25.6.0."""
  audit_log_schema: AuditLogSchema @join__field(graph: GRAPHENE)

  """Added in 25.6.0."""
  audit_log_nodes(
    """
    Specifies the criteria used to narrow down the query results based on certain conditions.
    """
    filter: String

    """Specifies the sorting order of the query result."""
    order: String

    """Specifies how many items to skip before beginning to return result."""
    offset: Int

    """If this value is provided, the query will be limited to that value."""
    before: String

    """Queries the `last` number of results from the query result from last."""
    after: String

    """
    Queries the `first` number of results from the query result from first.
    """
    first: Int

    """If the given value is provided, the query will start from that value."""
    last: Int
  ): AuditLogConnection @join__field(graph: GRAPHENE)
  agent(agent_id: String!): Agent @join__field(graph: GRAPHENE)
  agent_list(limit: Int!, offset: Int!, filter: String, order: String, scaling_group: String, status: String): AgentList @join__field(graph: GRAPHENE)
  agents(scaling_group: String, status: String): [Agent] @join__field(graph: GRAPHENE)
  agent_summary(agent_id: String!): AgentSummary @join__field(graph: GRAPHENE)
  agent_summary_list(limit: Int!, offset: Int!, filter: String, order: String, scaling_group: String, status: String): AgentSummaryList @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  domain_node(id: GlobalIDField!, permission: DomainPermissionValueField = "read_attribute"): DomainNode @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  domain_nodes(filter: String, order: String, permission: DomainPermissionValueField = "read_attribute", offset: Int, before: String, after: String, first: Int, last: Int): DomainConnection @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  agent_nodes(
    """Added in 24.12.0. Default is `system`."""
    scope: ScopeField

    """Added in 24.12.0. Default is create_compute_session."""
    permission: AgentPermissionField = "create_compute_session"
    filter: String
    order: String
    offset: Int
    before: String
    after: String
    first: Int
    last: Int
  ): AgentConnection @join__field(graph: GRAPHENE)
  domain(name: String): Domain @join__field(graph: GRAPHENE)
  domains(is_active: Boolean): [Domain] @join__field(graph: GRAPHENE)

  """Added in 24.03.0."""
  group_node(id: String!): GroupNode @join__field(graph: GRAPHENE)

  """Added in 24.03.0."""
  group_nodes(
    """Added in 24.09.0."""
    filter: String

    """Added in 24.09.0."""
    order: String

    """Added in 25.3.0. Default is `system`."""
    scope: ScopeField

    """Added in 25.3.0."""
    container_registry_scope: ContainerRegistryScopeField

    """Added in 25.3.0. Default is read_attribute."""
    permission: GroupPermissionField = "read_attribute"
    offset: Int
    before: String
    after: String
    first: Int
    last: Int
  ): GroupConnection @join__field(graph: GRAPHENE)
  group(
    id: UUID!
    domain_name: String

    """Added in 24.03.0."""
    type: [String] = ["GENERAL"]
  ): Group @join__field(graph: GRAPHENE)
  groups_by_name(name: String!, domain_name: String): [Group] @join__field(graph: GRAPHENE)
  groups(
    domain_name: String
    is_active: Boolean

    """Added in 24.03.0. Available values: GENERAL, MODEL_STORE"""
    type: [String] = ["GENERAL"]
  ): [Group] @join__field(graph: GRAPHENE)
  image(
    """Added in 24.03.1"""
    id: String
    reference: String
    architecture: String = "aarch64"
  ): Image @join__field(graph: GRAPHENE)
  images(
    """
    Added in 19.09.0. If it is specified, fetch images installed on at least one agent.
    """
    is_installed: Boolean
    is_operation: Boolean @deprecated(reason: "Deprecated since 24.03.4. This field is ignored if `load_filters` is specified and is not null.")

    """Added in 25.4.0."""
    filter_by_statuses: [ImageStatus] = [ALIVE]

    """
    Added in 24.03.8. Allowed values are: [general, operational, customized]. When superuser queries with `customized` option set the resolver will return every customized images (including those not owned by callee). To resolve images owned by user only call `customized_images`.
    """
    load_filters: [String] = null

    """
    Added in 24.03.4. Allowed values are: [general, operational, customized]. When superuser queries with `customized` option set the resolver will return every customized images (including those not owned by caller). To list the owned images only call `customized_images`.
    """
    image_filters: [String] = null @deprecated(reason: "Deprecated since 24.03.8. Use `load_filters` instead.")
  ): [Image] @join__field(graph: GRAPHENE)

  """Added in 24.03.1"""
  customized_images: [ImageNode] @join__field(graph: GRAPHENE)

  """Added in 25.3.0."""
  image_node(
    id: GlobalIDField!
    scope_id: ScopeField

    """Default is read_attribute."""
    permission: ImagePermissionValueField = "read_attribute"
  ): ImageNode @join__field(graph: GRAPHENE)

  """Added in 25.3.0."""
  image_nodes(
    scope_id: ScopeField!

    """Default is read_attribute."""
    permission: ImagePermissionValueField = "read_attribute"

    """Added in 25.4.0."""
    filter_by_statuses: [ImageStatus] = [ALIVE]
    filter: String
    order: String
    offset: Int
    before: String
    after: String
    first: Int
    last: Int
  ): ImageConnection @join__field(graph: GRAPHENE)

  """Added in 25.14.2. Returns information about the current user."""
  viewer: Viewer @join__field(graph: GRAPHENE)
  user(domain_name: String, email: String): User @join__field(graph: GRAPHENE)
  user_from_uuid(domain_name: String, user_id: ID): User @join__field(graph: GRAPHENE)
  users(domain_name: String, group_id: UUID, is_active: Boolean, status: String): [User] @join__field(graph: GRAPHENE)
  user_list(limit: Int!, offset: Int!, filter: String, order: String, domain_name: String, group_id: UUID, is_active: Boolean, status: String): UserList @join__field(graph: GRAPHENE)

  """Added in 24.03.0."""
  user_node(id: String!): UserNode @join__field(graph: GRAPHENE)

  """Added in 24.03.0."""
  user_nodes(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): UserConnection @join__field(graph: GRAPHENE)
  keypair(domain_name: String, access_key: String): KeyPair @join__field(graph: GRAPHENE)
  keypairs(domain_name: String, email: String, is_active: Boolean): [KeyPair] @join__field(graph: GRAPHENE)
  keypair_list(limit: Int!, offset: Int!, filter: String, order: String, domain_name: String, email: String, is_active: Boolean): KeyPairList @join__field(graph: GRAPHENE)
  keypair_resource_policy(name: String): KeyPairResourcePolicy @join__field(graph: GRAPHENE)
  user_resource_policy(name: String): UserResourcePolicy @join__field(graph: GRAPHENE)
  project_resource_policy(name: String!): ProjectResourcePolicy @join__field(graph: GRAPHENE)
  keypair_resource_policies: [KeyPairResourcePolicy] @join__field(graph: GRAPHENE)
  user_resource_policies: [UserResourcePolicy] @join__field(graph: GRAPHENE)
  project_resource_policies: [ProjectResourcePolicy] @join__field(graph: GRAPHENE)
  resource_preset(name: String): ResourcePreset @join__field(graph: GRAPHENE)

  """Added in 25.4.0."""
  resource_preset_by_id(id: UUID): ResourcePreset @join__field(graph: GRAPHENE)
  resource_presets(
    """Added in 25.4.0."""
    filter: String

    """Added in 25.4.0."""
    order: String
  ): [ResourcePreset] @join__field(graph: GRAPHENE)
  scaling_group(name: String): ScalingGroup @join__field(graph: GRAPHENE)
  scaling_groups(name: String, is_active: Boolean): [ScalingGroup] @join__field(graph: GRAPHENE)

  """
  Added in 25.5.0. This query is available for all users. It returns the resource groups(=scaling groups) that the user has access to. Only name, is_active, own_session_occupied_resource_slots and accelerator_quantum_size fields are returned.
  """
  accessible_scaling_groups(project_id: UUID!): [ScalingGroup] @join__field(graph: GRAPHENE)
  scaling_groups_for_domain(domain: String!, is_active: Boolean): [ScalingGroup] @join__field(graph: GRAPHENE)
  scaling_groups_for_user_group(user_group: String!, is_active: Boolean): [ScalingGroup] @join__field(graph: GRAPHENE)
  scaling_groups_for_keypair(access_key: String!, is_active: Boolean): [ScalingGroup] @join__field(graph: GRAPHENE)
  storage_volume(id: String): StorageVolume @join__field(graph: GRAPHENE)
  storage_volume_list(limit: Int!, offset: Int!, filter: String, order: String): StorageVolumeList @join__field(graph: GRAPHENE)
  vfolder(id: String): VirtualFolder @join__field(graph: GRAPHENE)

  """Added in 24.03.4."""
  vfolder_node(id: String!): VirtualFolderNode @join__field(graph: GRAPHENE)

  """Added in 24.03.4."""
  vfolder_nodes(
    """Added in 24.12.0."""
    scope_id: ScopeField

    """Added in 24.09.0."""
    project_id: UUID @deprecated(reason: "Deprecated since 24.12.0. use `scope_id` instead.")

    """Added in 24.09.0."""
    permission: VFolderPermissionValueField
    filter: String
    order: String
    offset: Int
    before: String
    after: String
    first: Int
    last: Int
  ): VirtualFolderConnection @join__field(graph: GRAPHENE)
  vfolder_list(limit: Int!, offset: Int!, filter: String, order: String, domain_name: String, group_id: UUID, access_key: String): VirtualFolderList @join__field(graph: GRAPHENE)
  vfolder_permission_list(limit: Int!, offset: Int!, filter: String, order: String): VirtualFolderPermissionList @join__field(graph: GRAPHENE)
  vfolder_own_list(limit: Int!, offset: Int!, filter: String, order: String, domain_name: String, access_key: String): VirtualFolderList @join__field(graph: GRAPHENE)
  vfolder_invited_list(limit: Int!, offset: Int!, filter: String, order: String, domain_name: String, access_key: String): VirtualFolderList @join__field(graph: GRAPHENE)
  vfolder_project_list(limit: Int!, offset: Int!, filter: String, order: String, domain_name: String, access_key: String): VirtualFolderList @join__field(graph: GRAPHENE)
  vfolders(domain_name: String, group_id: String, access_key: String): [VirtualFolder] @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  compute_session_node(
    id: GlobalIDField!

    """Added in 24.12.0."""
    scope_id: ScopeField

    """Added in 24.09.0."""
    project_id: UUID @deprecated(reason: "Deprecated since 24.12.0. use `scope_id` instead.")

    """Added in 24.09.0. Default is read_attribute."""
    permission: SessionPermissionValueField = "read_attribute"
  ): ComputeSessionNode @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  compute_session_nodes(
    """Added in 24.12.0."""
    scope_id: ScopeField

    """Added in 24.09.0."""
    project_id: UUID @deprecated(reason: "Deprecated since 24.12.0. use `scope_id` instead.")

    """Added in 24.09.0. Default is read_attribute."""
    permission: SessionPermissionValueField = "read_attribute"
    filter: String
    order: String
    offset: Int
    before: String
    after: String
    first: Int
    last: Int
  ): ComputeSessionConnection @join__field(graph: GRAPHENE)

  """Added in 25.13.0."""
  session_pending_queue(
    resource_group_id: String!

    """Specifies how many items to skip before beginning to return result."""
    offset: Int

    """If this value is provided, the query will be limited to that value."""
    before: String

    """Queries the `last` number of results from the query result from last."""
    after: String

    """
    Queries the `first` number of results from the query result from first.
    """
    first: Int

    """If the given value is provided, the query will start from that value."""
    last: Int
  ): SessionPendingQueueConnection @join__field(graph: GRAPHENE)
  compute_session(id: UUID!): ComputeSession @join__field(graph: GRAPHENE)
  compute_container(id: UUID!): ComputeContainer @join__field(graph: GRAPHENE)
  compute_session_list(limit: Int!, offset: Int!, filter: String, order: String, domain_name: String, group_id: String, access_key: String, status: String): ComputeSessionList @join__field(graph: GRAPHENE)
  compute_container_list(limit: Int!, offset: Int!, filter: String, order: String, session_id: ID!, role: String): ComputeContainerList @join__field(graph: GRAPHENE)
  legacy_compute_session_list(limit: Int!, offset: Int!, order_key: String, order_asc: Boolean, domain_name: String, group_id: String, access_key: String, status: String): LegacyComputeSessionList @join__field(graph: GRAPHENE)
  legacy_compute_session(sess_id: String!, domain_name: String, access_key: String): LegacyComputeSession @join__field(graph: GRAPHENE)

  """Added in 25.5.0."""
  total_resource_slot(
    """
    `statuses` argument is an array of session statuses. Only sessions with the specified statuses will be queried to calculate the sum of total resource slots. The argument should be an array of the following valid status values: ['PENDING', 'SCHEDULED', 'PREPARING', 'PULLING', 'PREPARED', 'CREATING', 'RUNNING', 'RESTARTING', 'RUNNING_DEGRADED', 'TERMINATING', 'TERMINATED', 'ERROR', 'CANCELLED'].
    Default value is null.
    """
    statuses: [String] = null

    """
    `filter` argument is a string that is parsed into query conditions. It works in the same way as the `filter` argument in the `compute_session` query schema, meaning the values are parsed into an identical SQL query expression.
    Default value is `null`.
    """
    filter: String
    domain_name: String
    resource_group_name: String
  ): TotalResourceSlot @join__field(graph: GRAPHENE)
  vfolder_host_permissions: PredefinedAtomicPermission @join__field(graph: GRAPHENE)
  endpoint(endpoint_id: UUID!): Endpoint @join__field(graph: GRAPHENE)
  endpoint_list(limit: Int!, offset: Int!, filter: String, order: String, domain_name: String, group_id: String, user_uuid: String, project: UUID): EndpointList @join__field(graph: GRAPHENE)
  routing(routing_id: UUID!): Routing @join__field(graph: GRAPHENE)
  routing_list(limit: Int!, offset: Int!, filter: String, order: String, endpoint_id: UUID): RoutingList @join__field(graph: GRAPHENE)
  endpoint_token(token: String!): EndpointToken @join__field(graph: GRAPHENE)
  endpoint_token_list(limit: Int!, offset: Int!, filter: String, order: String, endpoint_id: UUID): EndpointTokenList @join__field(graph: GRAPHENE)
  quota_scope(storage_host_name: String!, quota_scope_id: String!): QuotaScope @join__field(graph: GRAPHENE)
  container_registry(hostname: String!): ContainerRegistry @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 24.9.0. use `container_registry_node` instead.")
  container_registries: [ContainerRegistry] @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 24.9.0. use `container_registry_nodes_v2` instead.")

  """Added in 24.09.0."""
  container_registry_node(id: String!): ContainerRegistryNode @join__field(graph: GRAPHENE)

  """Added in 24.09.0."""
  container_registry_nodes(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): ContainerRegistryConnection @join__field(graph: GRAPHENE)

  """Added in 24.03.0."""
  model_card(id: String!): ModelCard @join__field(graph: GRAPHENE)

  """Added in 24.03.0."""
  model_cards(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): ModelCardConnection @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  network(id: String!): NetworkNode @join__field(graph: GRAPHENE)

  """Added in 24.12.0."""
  networks(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): NetworkConnection @join__field(graph: GRAPHENE)

  """Added in 25.1.0."""
  endpoint_auto_scaling_rule_node(id: String!): EndpointAutoScalingRuleNode @join__field(graph: GRAPHENE)

  """Added in 25.1.0."""
  endpoint_auto_scaling_rule_nodes(endpoint: String!, filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): EndpointAutoScalingRuleConnection @join__field(graph: GRAPHENE)

  """Added in 25.6.0."""
  user_utilization_metric(user_id: UUID!, props: UserUtilizationMetricQueryInput!): UserUtilizationMetric @join__field(graph: GRAPHENE)

  """Added in 25.6.0."""
  container_utilization_metric_metadata: ContainerUtilizationMetricMetadata @join__field(graph: GRAPHENE)

  """Added in 25.8.0."""
  available_service: AvailableServiceNode @join__field(graph: GRAPHENE)

  """Added in 25.8.0."""
  available_services(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): AvailableServiceConnection @join__field(graph: GRAPHENE)

  """Added in 25.8.0."""
  service_config(service: String!): ServiceConfigNode @join__field(graph: GRAPHENE)

  """Added in 25.8.0."""
  service_configs(services: [String]!, filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): ServiceConfigConnection @join__field(graph: GRAPHENE)

  """
  Added in 25.14.0.
  
  Retrieve a specific artifact by its ID.
  
  Returns detailed information about the artifact including its metadata,
  registry information, and availability status.
  """
  artifact(id: ID!): Artifact @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Query artifacts with optional filtering, ordering, and pagination.
  
  Returns artifacts that are available in the system, discovered through scanning
  external registries like HuggingFace or Reservoir. By default, only shows
  ALIVE (non-deleted) artifacts.
  
  Use filters to narrow down results by type, name, registry, or availability.
  Supports cursor-based pagination for efficient browsing of large datasets.
  """
  artifacts(filter: ArtifactFilter = {type: null, name: null, registry: null, source: null, availability: [ALIVE], AND: null, OR: null, NOT: null}, orderBy: [ArtifactOrderBy!] = null, before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): ArtifactConnection! @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Retrieve a specific artifact revision by its ID.
  
  Returns detailed information about the revision including its status,
  version, file size, and README content.
  """
  artifactRevision(id: ID!): ArtifactRevision @join__field(graph: STRAWBERRY)

  """
  Added in 25.14.0.
  
  Query artifact revisions with optional filtering, ordering, and pagination.
  
  Returns specific versions/revisions of artifacts. Each revision represents
  a specific version of an artifact with its own status, file data, and metadata.
  
  Use filters to find revisions by status, version, or artifact ID.
  Supports cursor-based pagination for efficient browsing.
  """
  artifactRevisions(filter: ArtifactRevisionFilter = null, orderBy: [ArtifactRevisionOrderBy!] = null, before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): ArtifactRevisionConnection! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  deployments(filter: DeploymentFilter = null, orderBy: [DeploymentOrderBy!] = null, before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): ModelDeploymentConnection! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  deployment(id: ID!): ModelDeployment @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  revisions(filter: ModelRevisionFilter = null, orderBy: [ModelRevisionOrderBy!] = null, before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): ModelRevisionConnection! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  revision(id: ID!): ModelRevision @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  replicas(filter: ReplicaFilter = null, orderBy: [ReplicaOrderBy!] = null, before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): ModelReplicaConnection! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0"""
  replica(id: ID!): ModelReplica @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  objectStorage(id: ID!): ObjectStorage @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  objectStorages(before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): ObjectStorageConnection! @join__field(graph: STRAWBERRY)

  """Added in 25.16.0. Get a VFS storage by ID"""
  vfsStorage(id: ID!): VFSStorage @join__field(graph: STRAWBERRY)

  """Added in 25.16.0. List all VFS storages"""
  vfsStorages(before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): VFSStorageConnection! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  huggingfaceRegistry(id: ID!): HuggingFaceRegistry @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  huggingfaceRegistries(before: String = null, after: String = null, first: Int = null, last: Int = null, offset: Int = null, limit: Int = null): HuggingFaceRegistryConnection! @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  reservoirRegistry(id: ID!): ReservoirRegistry @join__field(graph: STRAWBERRY)

  """Added in 25.14.0"""
  reservoirRegistries(before: String = null, after: String = null, first: Int = null, last: Int = null, offset: Int = null, limit: Int = null): ReservoirRegistryConnection! @join__field(graph: STRAWBERRY)
<<<<<<< HEAD

  """Added in 25.14.0"""
  defaultArtifactRegistry(artifactType: ArtifactType!): ArtifactRegistry @join__field(graph: STRAWBERRY)

<<<<<<< HEAD
<<<<<<< HEAD
  """Added in 25.15.0"""
  agentStats: AgentStats! @join__field(graph: STRAWBERRY)
=======
=======
=======
<<<<<<< HEAD
<<<<<<< HEAD

  """Added in 25.14.0"""
  defaultArtifactRegistry(artifactType: ArtifactType!): ArtifactRegistry @join__field(graph: STRAWBERRY)
=======
=======
=======

>>>>>>> 37dfcaedc (feat: Add compute session node ref in model replica node)
>>>>>>> 27805ea3c (feat: Add compute session node ref in model replica node)
>>>>>>> 9adb5c928 (feat: Add compute session node ref in model replica node)
  """
  Added in 25.13.0 Get configuration JSON Schemas for all inference runtimes
  """
  inferenceRuntimeConfigs: JSON! @join__field(graph: STRAWBERRY)

  """Added in 25.13.0. Get JSON Schema for inference runtime configuration"""
  inferenceRuntimeConfig(name: String!): JSON! @join__field(graph: STRAWBERRY)
<<<<<<< HEAD
>>>>>>> 16addb3b5 (feat: Modify gql schemas)
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> Stashed changes
>>>>>>> 59a2a2f4d (feat: Modify gql schemas)
=======
>>>>>>> 37dfcaedc (feat: Add compute session node ref in model replica node)
>>>>>>> 27805ea3c (feat: Add compute session node ref in model replica node)
>>>>>>> 9adb5c928 (feat: Add compute session node ref in model replica node)
}

type QuotaDetails
  @join__type(graph: GRAPHENE)
{
  usage_bytes: BigInt
  usage_count: BigInt
  hard_limit_bytes: BigInt
}

type QuotaScope implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID!
  quota_scope_id: String!
  storage_host_name: String!
  details: QuotaDetails!
}

input QuotaScopeInput
  @join__type(graph: GRAPHENE)
{
  hard_limit_bytes: BigInt
}

"""
Added in 25.13.0. This enum represents the readiness status of a replica, indicating whether the deployment has been checked and its health state.
"""
enum ReadinessStatus
  @join__type(graph: STRAWBERRY)
{
  NOT_CHECKED @join__enumValue(graph: STRAWBERRY)
  HEALTHY @join__enumValue(graph: STRAWBERRY)
  UNHEALTHY @join__enumValue(graph: STRAWBERRY)
}

"""Added in 25.13.0"""
input ReadinessStatusFilter
  @join__type(graph: STRAWBERRY)
{
  in: [ReadinessStatus!] = null
  equals: ReadinessStatus = null
}

"""
Added in 25.15.0.

Input type for registering a storage namespace.
"""
input RegisterStorageNamespaceInput
  @join__type(graph: STRAWBERRY)
{
  storageId: UUID!
  namespace: String!
}

"""
Added in 25.15.0.

Payload returned after storage namespace registration.
"""
type RegisterStorageNamespacePayload
  @join__type(graph: STRAWBERRY)
{
  id: UUID!
}

"""
Added in 25.14.0.

Input for rejecting an artifact revision.

Admin-only operation to reject artifact revisions, preventing their use.
"""
input RejectArtifactInput
  @join__type(graph: STRAWBERRY)
{
  artifactRevisionId: ID!
}

"""
Added in 25.14.0.

Response payload for artifact revision rejection operations.

Contains the rejected artifact revision. Admin-only operation.
"""
type RejectArtifactPayload
  @join__type(graph: STRAWBERRY)
{
  artifactRevision: ArtifactRevision!
}

"""Added in 25.13.0"""
input ReplicaFilter
  @join__type(graph: STRAWBERRY)
{
  readinessStatus: ReadinessStatusFilter = null
  livenessStatus: LivenessStatusFilter = null
  activenessStatus: ActivenessStatusFilter = null
  AND: [ReplicaFilter!] = null
  OR: [ReplicaFilter!] = null
  NOT: [ReplicaFilter!] = null
  DISTINCT: Boolean = null
}

"""Added in 25.13.0"""
input ReplicaOrderBy
  @join__type(graph: STRAWBERRY)
{
  field: ReplicaOrderField!
  direction: OrderDirection! = DESC
}

"""Added in 25.13.0"""
enum ReplicaOrderField
  @join__type(graph: STRAWBERRY)
{
  CREATED_AT @join__enumValue(graph: STRAWBERRY)
}

"""Added in 25.13.0"""
type ReplicaState
  @join__type(graph: STRAWBERRY)
{
  desiredReplicaCount: Int!
  replicas(filter: ReplicaFilter = null, orderBy: [ReplicaOrderBy!] = null, before: String = null, after: String = null, first: Int = null, last: Int = null, limit: Int = null, offset: Int = null): ModelReplicaConnection!
}

"""Added in 25.13.0"""
type ReplicaStatusChangedPayload
  @join__type(graph: STRAWBERRY)
{
  replica: ModelReplica!
}

"""Added in 25.4.0."""
type RescanGPUAllocMaps
  @join__type(graph: GRAPHENE)
{
  task_id: UUID
}

type RescanImages
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  task_id: UUID
}

"""Added in 25.14.0"""
type ReservoirRegistry implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  endpoint: String!
  accessKey: String!
  secretKey: String!
  apiVersion: String!
  remoteArtifactRegistries: ArtifactRegistryMetaConnection!
}

"""Added in 25.14.0"""
type ReservoirRegistryConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [ReservoirRegistryEdge!]!
  count: Int!
}

"""An edge in a connection."""
type ReservoirRegistryEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: ReservoirRegistry!
}

"""Added in 25.13.0"""
type ResourceConfig
  @join__type(graph: STRAWBERRY)
{
  resourceGroup: ScalingGroupNode!

  """
  Resource Slots are a JSON string that describes the resources allocated for the deployment. Example: "resourceSlots": "{\"cpu\": \"1\", \"mem\": \"1073741824\", \"cuda.device\": \"0\"}"
  """
  resourceSlots: JSONString!

  """
  Resource Options are a JSON string that describes additional options for the resources. This is especially used for shared memory configurations. Example: "resourceOpts": "{\"shmem\": \"64m\"}"
  """
  resourceOpts: JSONString
}

"""Added in 25.13.0"""
input ResourceConfigInput
  @join__type(graph: STRAWBERRY)
{
  resourceGroup: ResourceGroupInput!

  """
  Resources allocated for the deployment. Example: "resourceSlots": "{\"cpu\": \"1\", \"mem\": \"1073741824\", \"cuda.device\": \"0\"}"
  """
  resourceSlots: JSONString!

  """
  Additional options for the resources. This is especially used for shared memory configurations. Example: "resourceOpts": "{\"shmem\": \"64m\"}"
  """
  resourceOpts: JSONString = null
}

"""Added in 25.13.0"""
input ResourceGroupInput
  @join__type(graph: STRAWBERRY)
{
  name: String!
}

type ResourceLimit
  @join__type(graph: GRAPHENE)
{
  key: String
  min: String
  max: String @deprecated(reason: "Deprecated since 25.14.0. The max slot limit validation has been removed as it was deemed obsolete.")
}

input ResourceLimitInput
  @join__type(graph: GRAPHENE)
{
  key: String
  min: String
  max: String @deprecated(reason: "Deprecated since 25.14.0. The max slot limit validation has been removed as it was deemed obsolete.")
}

type ResourcePreset
  @join__type(graph: GRAPHENE)
{
  """Added in 25.4.0. ID of the resource preset."""
  id: UUID
  name: String
  resource_slots: JSONString
  shared_memory: BigInt

  """
  Added in 25.4.0. A name of scaling group(=resource group) of the resource preset associated with.
  """
  scaling_group_name: String
}

"""
Added in 25.15.0.

Input for restoring previously deleted artifacts.

Reverses the soft-delete operation, making the artifacts available again.
"""
input RestoreArtifactsInput
  @join__type(graph: STRAWBERRY)
{
  artifactIds: [ID!]!
}

"""
Added in 25.15.0.

Response payload for artifact restoration operations.

Contains the artifacts that were restored from soft-deleted state.
"""
type RestoreArtifactsPayload
  @join__type(graph: STRAWBERRY)
{
  artifacts: [Artifact!]!
}

type Routing implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  routing_id: UUID
  endpoint: String
  session: UUID
  status: String
  traffic_ratio: Float
  created_at: DateTime
  error_data: JSONString

  """Added in 24.12.0."""
  live_stat: JSONString
}

type RoutingList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [Routing]!
  total_count: Int!
}

"""Added in 24.03.5."""
type RuntimeVariantInfo
  @join__type(graph: GRAPHENE)
{
  name: String
  human_readable_name: String
}

type ScalingGroup
  @join__type(graph: GRAPHENE)
{
  name: String
  description: String
  is_active: Boolean
  is_public: Boolean
  created_at: DateTime
  wsproxy_addr: String
  wsproxy_api_token: String
  driver: String
  driver_opts: JSONString
  scheduler: String
  scheduler_opts: JSONString
  use_host_network: Boolean

  """Added in 25.5.0."""
  accelerator_quantum_size: Float

  """Added in 24.03.7."""
  agent_count_by_status(
    """
    Possible states of an agent. Should be one of ['ALIVE', 'LOST', 'RESTARTING', 'TERMINATED']. Default is 'ALIVE'.
    """
    status: String = "ALIVE"
  ): Int

  """Added in 24.03.7."""
  agent_total_resource_slots_by_status(
    """
    Possible states of an agent. Should be one of ['ALIVE', 'LOST', 'RESTARTING', 'TERMINATED']. Default is 'ALIVE'.
    """
    status: String = "ALIVE"
  ): JSONString

  """
  Added in 25.6.0. The limit of computing resources that can be allocated to each compute session created within this resource group.
  """
  resource_allocation_limit_for_sessions: JSONString

  """
  Added in 25.4.0. The sum of occupied slots across compute sessions that occupying agent's resources. Only includes sessions owned by the user.
  """
  own_session_occupied_resource_slots: JSONString
}

"""Added in 24.12.0."""
type ScalingGroupNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE, key: "id")
  @join__type(graph: STRAWBERRY, key: "id", extension: true)
{
  """The ID of the object"""
  id: ID!
  name: String @join__field(graph: GRAPHENE)
  description: String @join__field(graph: GRAPHENE)
  is_active: Boolean @join__field(graph: GRAPHENE)
  is_public: Boolean @join__field(graph: GRAPHENE)
  created_at: DateTime @join__field(graph: GRAPHENE)
  wsproxy_addr: String @join__field(graph: GRAPHENE)
  wsproxy_api_token: String @join__field(graph: GRAPHENE)
  driver: String @join__field(graph: GRAPHENE)
  driver_opts: JSONString @join__field(graph: GRAPHENE)
  scheduler: String @join__field(graph: GRAPHENE)
  scheduler_opts: JSONString @join__field(graph: GRAPHENE)
  use_host_network: Boolean @join__field(graph: GRAPHENE)
}

"""Added in 24.12.0."""
type ScalinGroupConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [ScalinGroupEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""
Added in 24.12.0. A Relay edge containing a `ScalinGroup` and its cursor.
"""
type ScalinGroupEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: ScalingGroupNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Added in 25.13.0"""
type ScalingRule
  @join__type(graph: STRAWBERRY)
{
  autoScalingRules: [AutoScalingRule!]!
}

"""
Added in 25.14.0.

Input for batch scanning of specific models from external registries.

Scans multiple specified models and retrieves detailed information including
README content and file sizes. This operation performs immediate detailed scanning
unlike the general scan_artifacts which only retrieves basic metadata.
"""
input ScanArtifactModelsInput
  @join__type(graph: STRAWBERRY)
{
  models: [ModelTarget!]!
  registryId: UUID = null
}

"""
Added in 25.14.0.

Response payload for batch model scanning operations.

Contains the artifact revisions discovered during detailed scanning of specific models,
including README content and file size information.
"""
type ScanArtifactModelsPayload
  @join__type(graph: STRAWBERRY)
{
  artifactRevision: ArtifactRevisionConnection!
}

"""
Added in 25.14.0.

Input for scanning artifacts from external registries (HuggingFace, Reservoir).

Discovers available artifacts and registers their metadata in the system.
Artifacts remain in SCANNED status until explicitly imported via import_artifacts.
"""
input ScanArtifactsInput
  @join__type(graph: STRAWBERRY)
{
  registryId: ID = null

  """Maximum number of artifacts to scan (max: 500)"""
  limit: Int!
  artifactType: ArtifactType = null
  search: String = null
}

"""
Added in 25.14.0.

Response payload for artifact scanning operations.

Contains the list of artifacts discovered during scanning of external registries.
These artifacts are registered with SCANNED status and can be imported for actual use.
"""
type ScanArtifactsPayload
  @join__type(graph: STRAWBERRY)
{
  artifacts: [Artifact!]!
}

"""Added in 25.15.0. Scheduling event broadcast payload"""
type SchedulingBroadcastEventPayload
  @join__type(graph: STRAWBERRY)
{
  sessionId: ID!
  creationId: String!
  statusTransition: SchedulingStatus!
  reason: String!
}

"""Status of session scheduling transitions"""
enum SchedulingStatus
  @join__type(graph: STRAWBERRY)
{
  PENDING @join__enumValue(graph: STRAWBERRY)
  SCHEDULED @join__enumValue(graph: STRAWBERRY)
  PREPARING @join__enumValue(graph: STRAWBERRY)
  PULLING @join__enumValue(graph: STRAWBERRY)
  PREPARED @join__enumValue(graph: STRAWBERRY)
  CREATING @join__enumValue(graph: STRAWBERRY)
  RUNNING @join__enumValue(graph: STRAWBERRY)
  TERMINATING @join__enumValue(graph: STRAWBERRY)
  TERMINATED @join__enumValue(graph: STRAWBERRY)
  CANCELLED @join__enumValue(graph: STRAWBERRY)
  ERROR @join__enumValue(graph: STRAWBERRY)
}

"""
Added in 24.12.0. A string value in the format '<SCOPE_TYPE>:<SCOPE_ID>'. <SCOPE_TYPE> should be one of [system, domain, project, user]. <SCOPE_ID> should be the ID value of the scope. e.g. `domain:default`, `user:123e4567-e89b-12d3-a456-426614174000`.
"""
scalar ScopeField
  @join__type(graph: GRAPHENE)

"""Added in 25.8.0."""
type ServiceConfigConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [ServiceConfigEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""
Added in 25.8.0. A Relay edge containing a `ServiceConfig` and its cursor.
"""
type ServiceConfigEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: ServiceConfigNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""Configuration data for a specific service. Added in 25.8.0."""
type ServiceConfigNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE)
{
  """The ID of the object"""
  id: ID!

  """
  Service name. See AvailableService.service_variants for possible values. Added in 25.8.0.
  """
  service: String!

  """Configuration data. Added in 25.8.0."""
  configuration: JSONString!

  """JSON schema of the configuration. Added in 25.8.0."""
  schema: JSONString!
}

"""Added in 25.13.0."""
type SessionPendingQueueConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [SessionPendingQueueEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""
Added in 25.13.0. A Relay edge containing a `SessionPendingQueue` and its cursor.
"""
type SessionPendingQueueEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: ComputeSessionNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""
Added in 24.09.0. One of ['read_attribute', 'update_attribute', 'delete_session', 'start_app', 'execute', 'convert_to_image'].
"""
scalar SessionPermissionValueField
  @join__type(graph: GRAPHENE)

type SetQuotaScope
  @join__type(graph: GRAPHENE)
{
  quota_scope: QuotaScope
}

"""
Added in 25.14.0.

Information about the source or registry of an artifact.

Contains the name and URL of the registry where the artifact is stored or originates from.
"""
type SourceInfo
  @join__type(graph: STRAWBERRY)
{
  name: String
  url: String
}

"""
Added in 25.15.0.

Storage namespace provides logical separation of data within a single storage system
to organize and isolate domain-specific concerns.

Implementation varies by storage type:
- Object Storage (S3, MinIO): Uses bucket-based namespace separation
- File System (VFS): Uses directory path prefix for namespace distinction
"""
type StorageNamespace implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  storageId: ID!
  namespace: String!
}

"""
Added in 25.15.0.

Storage namespace connection for pagination.
"""
type StorageNamespaceConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [StorageNamespaceEdge!]!
  count: Int!
}

"""An edge in a connection."""
type StorageNamespaceEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: StorageNamespace!
}

type StorageVolume implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  backend: String
  fsprefix: String
  path: String
  capabilities: [String]
  hardware_metadata: JSONString
  performance_metric: JSONString
  usage: JSONString

  """Added in 24.03.0. Name of the proxy which this volume belongs to."""
  proxy: String

  """Added in 24.03.0. Name of the storage."""
  name: String
}

type StorageVolumeList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [StorageVolume]!
  total_count: Int!
}

input StringFilter
  @join__type(graph: STRAWBERRY)
{
  contains: String = null
  startsWith: String = null
  endsWith: String = null
  equals: String = null
  notEquals: String = null
  iContains: String = null
  iStartsWith: String = null
  iEndsWith: String = null
  iEquals: String = null
  iNotEquals: String = null
}

type Subscription
  @join__type(graph: STRAWBERRY)
{
  """
  Added in 25.14.0.
  
  Subscribe to real-time artifact status change notifications.
  
  Receives updates when artifact revision statuses change during import,
  cleanup, or other operations. Useful for building reactive UIs that
  show live progress of artifact operations.
  """
  artifactStatusChanged(input: ArtifactStatusChangedInput!): ArtifactStatusChangedPayload!

  """
  Added in 25.14.0.
  
  Subscribe to real-time artifact import progress updates.
  
  Receives progress notifications during artifact import operations,
  including percentage completed and current status. Useful for displaying
  progress bars and real-time import status to users.
  """
  artifactImportProgressUpdated(artifactRevisionId: ID!): ArtifactImportProgressUpdatedPayload!

  """Added in 25.13.0"""
  deploymentStatusChanged(deploymentId: ID!): DeploymentStatusChangedPayload!

  """Added in 25.13.0"""
  replicaStatusChanged(revisionId: ID!): ReplicaStatusChangedPayload!

  """
  Subscribe to real-time scheduling events for a specific session. Streams status transition events during the session lifecycle (PENDING → SCHEDULED → PREPARING → RUNNING → TERMINATED). Added in 25.15.0.
  """
  schedulingEventsBySession(sessionId: ID!): SchedulingBroadcastEventPayload!

  """
  Subscribe to real-time events for a specific background task. Streams progress updates and completion events (done/cancelled/failed) for the task lifecycle.
  """
  backgroundTaskEvents(taskId: ID!): BackgroundTaskEventPayload!
}

"""Added in 25.13.0"""
input SyncReplicaInput
  @join__type(graph: STRAWBERRY)
{
  modelDeploymentId: ID!
}

"""Added in 25.13.0"""
type SyncReplicaPayload
  @join__type(graph: STRAWBERRY)
{
  success: Boolean!
}

"""Added in 25.5.0."""
type TotalResourceSlot implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  occupied_slots: JSONString
  requested_slots: JSONString
}

type UnloadImage
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
  task_id: String
}

"""
Added in 25.15.0.

Input type for unregistering a storage namespace.
"""
input UnregisterStorageNamespaceInput
  @join__type(graph: STRAWBERRY)
{
  storageId: UUID!
  namespace: String!
}

"""
Added in 25.15.0.

Payload returned after storage namespace unregistration.
"""
type UnregisterStorageNamespacePayload
  @join__type(graph: STRAWBERRY)
{
  id: UUID!
}

type UnsetQuotaScope
  @join__type(graph: GRAPHENE)
{
  quota_scope: QuotaScope
}

"""
Deprecated since 25.10.0. Use `purge_image_by_id` with `remove_from_registry` option instead.
"""
type UntagImageFromRegistry
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String

  """Added since 24.03.1."""
  image: ImageNode
}

"""
Added in 25.14.0.

Input for updating artifact metadata properties.

Modifies artifact metadata such as readonly status and description.
This operation does not affect the actual artifact files or revisions.
"""
input UpdateArtifactInput
  @join__type(graph: STRAWBERRY)
{
  artifactId: ID!
  readonly: Boolean
  description: String
}

"""
Added in 25.14.0.

Response payload for artifact update operations.

Returns the updated artifact with modified metadata properties.
"""
type UpdateArtifactPayload
  @join__type(graph: STRAWBERRY)
{
  artifact: Artifact!
}

input UpdateAutoScalingRuleInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
  metricSource: AutoScalingMetricSource
  metricName: String
  minThreshold: Decimal
  maxThreshold: Decimal
  stepSize: Int
  timeWindow: Int
  minReplicas: Int
  maxReplicas: Int
}

type UpdateAutoScalingRulePayload
  @join__type(graph: STRAWBERRY)
{
  autoScalingRule: AutoScalingRule!
}

"""Added in 25.3.0."""
type UpdateContainerRegistryQuota
  @join__type(graph: GRAPHENE)
{
  ok: Boolean
  msg: String
}

"""Added in 25.14.0"""
input UpdateHuggingFaceRegistryInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
  url: String
  name: String
  token: String
}

"""Added in 25.14.0"""
type UpdateHuggingFaceRegistryPayload
  @join__type(graph: STRAWBERRY)
{
  huggingfaceRegistry: HuggingFaceRegistry!
}

"""Added in 25.13.0"""
input UpdateModelDeploymentInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
  openToPublic: Boolean = null
  tags: [String!] = null
  defaultDeploymentStrategy: DeploymentStrategyInput = null
  activeRevisionId: ID = null
  desiredReplicaCount: Int = null
  name: String = null
  preferredDomainName: String = null
}

"""Added in 25.13.0"""
type UpdateModelDeploymentPayload
  @join__type(graph: STRAWBERRY)
{
  deployment: ModelDeployment!
}

"""Added in 25.14.0"""
input UpdateObjectStorageInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
  name: String
  host: String
  accessKey: String
  secretKey: String
  endpoint: String
  region: String
}

"""Added in 25.14.0"""
type UpdateObjectStoragePayload
  @join__type(graph: STRAWBERRY)
{
  objectStorage: ObjectStorage!
}

"""Added in 25.14.0"""
input UpdateReservoirRegistryInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
  name: String
  endpoint: String
  accessKey: String
  secretKey: String
  apiVersion: String
}

"""Added in 25.14.0"""
type UpdateReservoirRegistryPayload
  @join__type(graph: STRAWBERRY)
{
  reservoir: ReservoirRegistry!
}

"""Added in 25.16.0. Input for updating VFS storage"""
input UpdateVFSStorageInput
  @join__type(graph: STRAWBERRY)
{
  id: ID!
  name: String
  host: String
  basePath: String
}

"""Added in 25.16.0. Payload for updating VFS storage"""
type UpdateVFSStoragePayload
  @join__type(graph: STRAWBERRY)
{
  vfsStorage: VFSStorage!
}

type User implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  uuid: UUID
  username: String
  email: String
  need_password_change: Boolean
  full_name: String
  description: String
  is_active: Boolean
  status: String
  status_info: String
  created_at: DateTime
  modified_at: DateTime
  domain_name: String
  role: String
  resource_policy: String
  allowed_client_ip: [String]
  totp_activated: Boolean
  totp_activated_at: DateTime
  sudo_session_enabled: Boolean

  """
  Added in 24.03.0. Used as the default authentication credential for password-based logins and sets the user's total resource usage limit. User's main_access_key cannot be deleted, and only super-admin can replace main_access_key.
  """
  main_access_key: String

  """
  Added in 25.2.0. The user ID (UID) assigned to processes running inside the container.
  """
  container_uid: Int

  """
  Added in 25.2.0. The primary group ID (GID) assigned to processes running inside the container.
  """
  container_main_gid: Int

  """
  Added in 25.2.0. Supplementary group IDs assigned to processes running inside the container.
  """
  container_gids: [Int]
  groups: [UserGroup]
}

"""Added in 24.03.0"""
type UserConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [UserEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""Added in 24.03.0 A Relay edge containing a `User` and its cursor."""
type UserEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: UserNode

  """A cursor for use in pagination"""
  cursor: String!
}

type UserGroup
  @join__type(graph: GRAPHENE)
{
  id: UUID
  name: String
}

type UserInfo
  @join__type(graph: GRAPHENE)
{
  email: String
  full_name: String
}

input UserInput
  @join__type(graph: GRAPHENE)
{
  username: String!
  password: String!
  need_password_change: Boolean!
  full_name: String = ""
  description: String = ""
  is_active: Boolean = true
  status: String = "active"
  domain_name: String! = "default"
  role: String = "user"
  group_ids: [String]
  allowed_client_ip: [String] = null
  totp_activated: Boolean = false
  resource_policy: String = "default"
  sudo_session_enabled: Boolean = false

  """
  Added in 25.2.0. The user ID (UID) assigned to processes running inside the container.
  """
  container_uid: Int

  """
  Added in 25.2.0. The primary group ID (GID) assigned to processes running inside the container.
  """
  container_main_gid: Int

  """
  Added in 25.2.0. Supplementary group IDs assigned to processes running inside the container.
  """
  container_gids: [Int]
}

type UserList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [User]!
  total_count: Int!
}

type UserNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE, key: "id")
  @join__type(graph: STRAWBERRY, key: "id", extension: true)
{
  """The ID of the object"""
  id: ID!

  """Unique username of the user."""
  username: String @join__field(graph: GRAPHENE)

  """Unique email of the user."""
  email: String @join__field(graph: GRAPHENE)
  need_password_change: Boolean @join__field(graph: GRAPHENE)
  full_name: String @join__field(graph: GRAPHENE)
  description: String @join__field(graph: GRAPHENE)
  is_active: Boolean @join__field(graph: GRAPHENE) @deprecated(reason: "Deprecated since 24.03.0. Recommend to use `status` field.")

  """
  The status is one of `active`, `inactive`, `deleted` or `before-verification`.
  """
  status: String @join__field(graph: GRAPHENE)

  """Additional information of user status."""
  status_info: String @join__field(graph: GRAPHENE)
  created_at: DateTime @join__field(graph: GRAPHENE)
  modified_at: DateTime @join__field(graph: GRAPHENE)
  domain_name: String @join__field(graph: GRAPHENE)

  """The role is one of `user`, `admin`, `superadmin` or `monitor`."""
  role: String @join__field(graph: GRAPHENE)
  resource_policy: String @join__field(graph: GRAPHENE)
  allowed_client_ip: [String] @join__field(graph: GRAPHENE)
  totp_activated: Boolean @join__field(graph: GRAPHENE)
  totp_activated_at: DateTime @join__field(graph: GRAPHENE)
  sudo_session_enabled: Boolean @join__field(graph: GRAPHENE)

  """
  Added in 25.2.0. The user ID (UID) assigned to processes running inside the container.
  """
  container_uid: Int @join__field(graph: GRAPHENE)

  """
  Added in 25.2.0. The primary group ID (GID) assigned to processes running inside the container.
  """
  container_main_gid: Int @join__field(graph: GRAPHENE)

  """
  Added in 25.2.0. Supplementary group IDs assigned to processes running inside the container.
  """
  container_gids: [Int] @join__field(graph: GRAPHENE)

  """Added in 25.5.0."""
  project_nodes(filter: String, order: String, offset: Int, before: String, after: String, first: Int, last: Int): GroupConnection @join__field(graph: GRAPHENE)
}

type UserResourcePolicy
  @join__type(graph: GRAPHENE)
{
  id: ID!
  name: String!
  created_at: DateTime!

  """
  Added in 24.03.1 and 23.09.6. Limitation of the number of user vfolders.
  """
  max_vfolder_count: Int

  """
  Added in 24.03.1 and 23.09.2. Limitation of the quota size of user vfolders.
  """
  max_quota_scope_size: BigInt
  max_vfolder_size: BigInt @deprecated(reason: "Deprecated since 23.09.2.")

  """
  Added in 24.03.1 and 23.09.10. Maximum available number of sessions per single model service which the user is in charge of.
  """
  max_session_count_per_model_session: Int

  """
  Added in 24.03.0. Maximum available number of customized images one can publish to.
  """
  max_customized_image_count: Int
}

"""Added in 25.6.0."""
type UserUtilizationMetric
  @join__type(graph: GRAPHENE)
{
  user_id: UUID
  metrics: [ContainerUtilizationMetric]
}

"""Added in 25.6.0."""
input UserUtilizationMetricQueryInput
  @join__type(graph: GRAPHENE)
{
  """One of 'current', 'capacity'. Default value is 'current'."""
  value_type: String = "current"

  """metric name of container utilization. For example, 'cpu_util', 'mem'."""
  metric_name: String!

  """rfc3339 or unix_timestamp."""
  start: String!

  """rfc3339 or unix_timestamp."""
  end: String!

  """
  Query resolution step width in duration format or float number of seconds. For example, '1m', '1h', '1d', '1w'
  """
  step: String!
}

"""
Leverages the internal Python implementation of UUID (uuid.UUID) to provide native UUID objects
in fields, resolvers and input.
"""
scalar UUID
  @join__type(graph: GRAPHENE)
  @join__type(graph: STRAWBERRY)

"""
Added in 25.4.0.
Verifies that the key is a UUID (represented as a string) and the value is a float.
"""
scalar UUIDFloatMap
  @join__type(graph: GRAPHENE)

"""
Added in 24.09.0. One of ['clone', 'assign_permission_to_others', 'read_attribute', 'update_attribute', 'delete_vfolder', 'read_content', 'write_content', 'delete_content', 'mount_ro', 'mount_rw', 'mount_wd'].
"""
scalar VFolderPermissionValueField
  @join__type(graph: GRAPHENE)

"""Added in 25.16.0. VFS Storage configuration"""
type VFSStorage implements Node
  @join__implements(graph: STRAWBERRY, interface: "Node")
  @join__type(graph: STRAWBERRY)
{
  """The Globally Unique ID of this object"""
  id: ID!
  name: String!
  host: String!
  basePath: String!
}

"""Added in 25.16.0. VFS Storage connection"""
type VFSStorageConnection
  @join__type(graph: STRAWBERRY)
{
  """Pagination data for this connection"""
  pageInfo: PageInfo!

  """Contains the nodes in this connection"""
  edges: [VFSStorageEdge!]!
  count: Int!
}

"""An edge in a connection."""
type VFSStorageEdge
  @join__type(graph: STRAWBERRY)
{
  """A cursor for use in pagination"""
  cursor: String!

  """The item at the end of the edge"""
  node: VFSStorage!
}

"""Added in 25.14.2."""
type Viewer
  @join__type(graph: GRAPHENE)
{
  user: UserNode
  user_id: UUID
  encoded_user_role: String
}

type VirtualFolder implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  host: String
  quota_scope_id: String
  name: String
  user: UUID
  user_email: String
  group: UUID
  group_name: String
  creator: String

  """Added in 24.09.0."""
  domain_name: String
  unmanaged_path: String
  usage_mode: String
  permission: String
  ownership_type: String
  max_files: Int
  max_size: BigInt
  created_at: DateTime
  last_used: DateTime
  num_files: Int
  cur_size: BigInt
  cloneable: Boolean
  status: String
}

"""Added in 24.03.4"""
type VirtualFolderConnection
  @join__type(graph: GRAPHENE)
{
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [VirtualFolderEdge]!

  """Total count of the GQL nodes of the query."""
  count: Int
}

"""
Added in 24.03.4 A Relay edge containing a `VirtualFolder` and its cursor.
"""
type VirtualFolderEdge
  @join__type(graph: GRAPHENE)
{
  """The item at the end of the edge"""
  node: VirtualFolderNode

  """A cursor for use in pagination"""
  cursor: String!
}

type VirtualFolderList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [VirtualFolder]!
  total_count: Int!
}

"""Added in 24.03.4"""
type VirtualFolderNode implements Node
  @join__implements(graph: GRAPHENE, interface: "Node")
  @join__type(graph: GRAPHENE, key: "id")
  @join__type(graph: STRAWBERRY, key: "id", extension: true)
{
  """The ID of the object"""
  id: ID!

  """Added in 24.03.4. ID of VFolder."""
  row_id: UUID @join__field(graph: GRAPHENE)
  host: String @join__field(graph: GRAPHENE)
  quota_scope_id: String @join__field(graph: GRAPHENE)
  name: String @join__field(graph: GRAPHENE)
  user: UUID @join__field(graph: GRAPHENE)
  user_email: String @join__field(graph: GRAPHENE)
  group: UUID @join__field(graph: GRAPHENE)
  group_name: String @join__field(graph: GRAPHENE)
  creator: String @join__field(graph: GRAPHENE)
  unmanaged_path: String @join__field(graph: GRAPHENE)
  usage_mode: String @join__field(graph: GRAPHENE)
  permission: String @join__field(graph: GRAPHENE)
  ownership_type: String @join__field(graph: GRAPHENE)
  max_files: Int @join__field(graph: GRAPHENE)
  max_size: BigInt @join__field(graph: GRAPHENE)
  created_at: DateTime @join__field(graph: GRAPHENE)
  last_used: DateTime @join__field(graph: GRAPHENE)
  num_files: Int @join__field(graph: GRAPHENE)
  cur_size: BigInt @join__field(graph: GRAPHENE)
  cloneable: Boolean @join__field(graph: GRAPHENE)
  status: String @join__field(graph: GRAPHENE)

  """
  Added in 24.09.0. One of ['clone', 'assign_permission_to_others', 'read_attribute', 'update_attribute', 'delete_vfolder', 'read_content', 'write_content', 'delete_content', 'mount_ro', 'mount_rw', 'mount_wd'].
  """
  permissions: [VFolderPermissionValueField] @join__field(graph: GRAPHENE)
}

type VirtualFolderPermission implements Item
  @join__implements(graph: GRAPHENE, interface: "Item")
  @join__type(graph: GRAPHENE)
{
  id: ID
  permission: String
  vfolder: UUID
  vfolder_name: String
  user: UUID
  user_email: String
}

type VirtualFolderPermissionList implements PaginatedList
  @join__implements(graph: GRAPHENE, interface: "PaginatedList")
  @join__type(graph: GRAPHENE)
{
  items: [VirtualFolderPermission]!
  total_count: Int!
}
