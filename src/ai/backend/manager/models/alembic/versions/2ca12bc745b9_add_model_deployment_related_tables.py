"""Add Model Deployment related tables

Revision ID: 2ca12bc745b9
Revises: de1032a11cca
Create Date: 2025-10-20 11:12:56.253787

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

from ai.backend.common.data.model_deployment.types import (
    ActivenessStatus,
    DeploymentStrategy,
    LivenessStatus,
    ModelDeploymentStatus,
    ReadinessStatus,
)
from ai.backend.common.types import RuntimeVariant, VFolderMount
from ai.backend.manager.models.base import (
    GUID,
    DecimalType,
    ResourceSlotColumn,
    StrEnumType,
    StructuredJSONObjectListColumn,
)

# revision identifiers, used by Alembic.
revision = "2ca12bc745b9"
down_revision = "de1032a11cca"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "deployment_routes",
        sa.Column("id", GUID(), server_default=sa.text("uuid_generate_v4()"), nullable=False),
        sa.Column("deployment_id", GUID(), nullable=False),
        sa.Column("session_id", GUID(), nullable=False),
        sa.Column("revision_id", GUID(), nullable=False),
        sa.Column("weight", sa.Integer(), nullable=False),
        sa.Column("readiness_status", StrEnumType(ReadinessStatus, length=64), nullable=False),
        sa.Column("liveness_status", StrEnumType(LivenessStatus, length=64), nullable=False),
        sa.Column("activeness_status", StrEnumType(ActivenessStatus, length=64), nullable=False),
        sa.Column("detail", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_deployment_routes")),
    )
    op.create_table(
        "deployment_states",
        sa.Column("id", GUID(), server_default=sa.text("uuid_generate_v4()"), nullable=False),
        sa.Column("deployment_id", GUID(), nullable=False),
        sa.Column("prev_revision_id", GUID(), nullable=False),
        sa.Column("next_revision_id", GUID(), nullable=True),
        sa.Column("strategy", StrEnumType(DeploymentStrategy, length=64), nullable=False),
        sa.Column("status", StrEnumType(ModelDeploymentStatus, length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_deployment_states")),
    )
    op.create_table(
        "model_deployment_auto_scaling_rules",
        sa.Column("id", GUID(), server_default=sa.text("uuid_generate_v4()"), nullable=False),
        sa.Column("model_deployment_id", GUID(), nullable=False),
        sa.Column("metric_source", sa.String(), nullable=False),
        sa.Column("metric_name", sa.String(), nullable=False),
        sa.Column("min_threshold", DecimalType(), nullable=True),
        sa.Column("max_threshold", DecimalType(), nullable=True),
        sa.Column("step_size", sa.Integer(), nullable=False),
        sa.Column("time_window", sa.Integer(), nullable=False),
        sa.Column("min_replicas", sa.Integer(), nullable=True),
        sa.Column("max_replicas", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("last_triggered_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_model_deployment_auto_scaling_rules")),
    )
    op.create_table(
        "model_deployment_tokens",
        sa.Column("id", GUID(), server_default=sa.text("uuid_generate_v4()"), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("model_deployment_id", GUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_model_deployment_tokens")),
    )
    op.create_table(
        "model_deployments",
        sa.Column("id", GUID(), server_default=sa.text("uuid_generate_v4()"), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("status", StrEnumType(ModelDeploymentStatus, length=64), nullable=False),
        sa.Column("tags", sa.String(), nullable=False),
        sa.Column("endpoint_url", sa.String(), nullable=True),
        sa.Column("preferred_domain_name", sa.String(), nullable=True),
        sa.Column("open_to_public", sa.Boolean(), nullable=False),
        sa.Column("desired_replica_count", sa.Integer(), nullable=False),
        sa.Column("created_user_id", GUID(), nullable=False),
        sa.Column("current_revision_id", GUID(), nullable=False),
        sa.Column(
            "default_deployment_strategy_type",
            StrEnumType(DeploymentStrategy, length=64),
            nullable=False,
        ),
        sa.Column("deployment_state_id", GUID(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_model_deployments")),
    )
    op.create_index(
        op.f("ix_model_deployments_created_user_id"),
        "model_deployments",
        ["created_user_id"],
        unique=False,
    )
    op.create_index(op.f("ix_model_deployments_name"), "model_deployments", ["name"], unique=False)
    op.create_table(
        "model_revisions",
        sa.Column("id", GUID(), server_default=sa.text("uuid_generate_v4()"), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("model_deployment_id", GUID(), nullable=False),
        sa.Column("tags", sa.TEXT(), nullable=False),
        sa.Column("runtime_variant", StrEnumType(RuntimeVariant, length=64), nullable=False),
        sa.Column(
            "inference_runtime_config", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("environment_variables", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("model_vfolder_id", GUID(), nullable=False),
        sa.Column("model_mount_destination", sa.String(), server_default="/models", nullable=False),
        sa.Column("model_definition_path", sa.String(), nullable=False),
        sa.Column("image_id", GUID(), nullable=False),
        sa.Column("cluster_mode", sa.String(), server_default="single-node", nullable=False),
        sa.Column("cluster_size", sa.Integer(), server_default="1", nullable=False),
        sa.Column("resource_group", sa.String(), nullable=False),
        sa.Column("resource_slots", ResourceSlotColumn(), nullable=False),
        sa.Column("resource_opts", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "extra_mount",
            StructuredJSONObjectListColumn(VFolderMount),
            server_default="[]",
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_model_revisions")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("model_revisions")
    op.drop_index(op.f("ix_model_deployments_name"), table_name="model_deployments")
    op.drop_index(op.f("ix_model_deployments_created_user_id"), table_name="model_deployments")
    op.drop_table("model_deployments")
    op.drop_table("model_deployment_tokens")
    op.drop_table("model_deployment_auto_scaling_rules")
    op.drop_table("deployment_states")
    op.drop_table("deployment_routes")
    # ### end Alembic commands ###
