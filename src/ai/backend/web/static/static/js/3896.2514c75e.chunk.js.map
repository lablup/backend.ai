{"version":3,"file":"static/js/3896.2514c75e.chunk.js","mappings":"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","sources":["components/FlexActivityIndicator.tsx","components/UsageProgress.tsx","components/StorageStatusPanel.tsx","components/__generated__/StorageStatusPanelKeypairQuery.graphql.ts","components/__generated__/StorageStatusPanelQuery.graphql.ts","components/__generated__/UsageProgressFragment_usageFrgmt.graphql.ts"],"sourcesContent":["import Flex, { FlexProps } from './Flex';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin, SpinProps } from 'antd';\nimport React from 'react';\n\ninterface FlexActivityIndicatorProps extends FlexProps {\n  spinSize?: SpinProps['size'];\n}\n\nconst FlexActivityIndicator: React.FC<FlexActivityIndicatorProps> = ({\n  style,\n  children,\n  spinSize = 'default',\n}) => {\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"center\"\n      align=\"center\"\n      style={{ width: '100%', height: '100%', ...style }}\n    >\n      <Spin indicator={<LoadingOutlined spin />} size={spinSize} />\n      {children}\n    </Flex>\n  );\n};\n\nexport default FlexActivityIndicator;\n","import { bytesToGB, usageIndicatorColor } from '../helper';\nimport Flex from './Flex';\nimport { UsageProgressFragment_usageFrgmt$key } from './__generated__/UsageProgressFragment_usageFrgmt.graphql';\nimport { Progress, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst UsageProgress: React.FC<{\n  usageProgressFrgmt: UsageProgressFragment_usageFrgmt$key | null;\n}> = ({ usageProgressFrgmt: usageFrgmt }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const usage = useFragment(\n    graphql`\n      fragment UsageProgressFragment_usageFrgmt on QuotaScope {\n        details {\n          usage_bytes\n          hard_limit_bytes\n        }\n      }\n    `,\n    usageFrgmt,\n  );\n\n  const usageBytes = parseFloat(usage?.details?.usage_bytes) || 0;\n  const hardLimitBytes = parseFloat(usage?.details?.hard_limit_bytes) || 0;\n  const percent = (\n    hardLimitBytes > 0 ? ((usageBytes / hardLimitBytes) * 100)?.toFixed(2) : 0\n  ) as number;\n\n  return (\n    <Flex direction=\"column\">\n      <Progress\n        size={[180, 15]}\n        percent={percent}\n        strokeColor={usageIndicatorColor(percent)}\n        status={percent >= 100 ? 'exception' : 'normal'}\n      />\n      <Flex direction=\"row\" gap={token.marginXXS} style={{ fontSize: 12 }}>\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n          {t('data.Used')}:\n        </Typography.Text>\n        {bytesToGB(usage?.details?.usage_bytes)} GB\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n          {' / '}\n        </Typography.Text>\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n          {t('data.Limit')}:\n        </Typography.Text>\n        {bytesToGB(usage?.details?.hard_limit_bytes)} GB\n        {/* <Typography.Text type=\"secondary\">({percent} %)</Typography.Text> */}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default UsageProgress;\n","import { addQuotaScopeTypePrefix, usageIndicatorColor } from '../helper';\nimport { useCurrentDomainValue, useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserRole } from '../hooks/backendai';\nimport { useSuspenseTanQuery } from '../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport Flex from './Flex';\nimport FlexActivityIndicator from './FlexActivityIndicator';\nimport StorageSelect, { VolumeInfo } from './StorageSelect';\nimport UsageProgress from './UsageProgress';\nimport { StorageStatusPanelKeypairQuery } from './__generated__/StorageStatusPanelKeypairQuery.graphql';\nimport { StorageStatusPanelQuery } from './__generated__/StorageStatusPanelQuery.graphql';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport {\n  Progress,\n  Card,\n  Descriptions,\n  DescriptionsProps,\n  Typography,\n  Empty,\n  Divider,\n  Skeleton,\n  theme,\n  Tooltip,\n  Button,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst StorageStatusPanel: React.FC<{\n  fetchKey: string;\n}> = ({ fetchKey }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const currentProject = useCurrentProjectValue();\n  const currentUserRole = useCurrentUserRole();\n\n  const [selectedVolumeInfo, setSelectedVolumeInfo] = useState<VolumeInfo>();\n  const deferredSelectedVolumeInfo = useDeferredValue(selectedVolumeInfo);\n  const deferredFetchKey = useDeferredValue(fetchKey);\n\n  const columnSetting: DescriptionsProps['column'] = {\n    xxl: 2,\n    xl: 2,\n    lg: 2,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  const isExcludedCount = (status: string) => {\n    return _.includes(\n      ['delete-ongoing', 'delete-complete', 'delete-error'],\n      status,\n    );\n  };\n\n  const { data: vfolders } = useSuspenseTanQuery({\n    queryKey: ['vfolders', { deferredFetchKey }],\n    queryFn: () => {\n      return baiClient.vfolder.list(currentProject?.id);\n    },\n  });\n  const createdCount = vfolders?.filter(\n    (item: any) =>\n      item.is_owner &&\n      item.ownership_type === 'user' &&\n      !isExcludedCount(item.status),\n  ).length;\n  const projectFolderCount = vfolders?.filter(\n    (item: any) =>\n      item.ownership_type === 'group' && !isExcludedCount(item.status),\n  ).length;\n  const invitedCount = vfolders?.filter(\n    (item: any) =>\n      !item.is_owner &&\n      item.ownership_type === 'user' &&\n      !isExcludedCount(item.status),\n  ).length;\n\n  // TODO: Add resolver to enable subquery and modify to call useLazyLoadQuery only once.\n  const {\n    keypair,\n    user,\n    // currentProjectDetail\n  } = useLazyLoadQuery<StorageStatusPanelKeypairQuery>(\n    graphql`\n      query StorageStatusPanelKeypairQuery(\n        $domain_name: String\n        # $project_id: UUID!\n        $email: String\n        $access_key: String\n      ) {\n        keypair(domain_name: $domain_name, access_key: $access_key) {\n          resource_policy\n        }\n        # currentProjectDetail: group(domain_name: $domain_name, id: $project_id){\n        #   id\n        #   resource_policy @since(version: \"23.09.0\")\n        # }\n        user(domain_name: $domain_name, email: $email) {\n          id\n          # https://github.com/lablup/backend.ai/pull/1354\n          resource_policy @since(version: \"23.09.0\")\n        }\n      }\n    `,\n    {\n      domain_name: useCurrentDomainValue(),\n      email: baiClient?.email,\n      access_key: baiClient?._config.accessKey,\n      // project_id: currentProject.id,\n    },\n  );\n\n  const {\n    user_resource_policy,\n    project_resource_policy,\n    keypair_resource_policy,\n    project_quota_scope,\n    user_quota_scope,\n  } = useLazyLoadQuery<StorageStatusPanelQuery>(\n    graphql`\n      query StorageStatusPanelQuery(\n        $user_RP_name: String\n        $project_RP_name: String!\n        $keypair_resource_policy_name: String\n        $project_quota_scope_id: String!\n        $user_quota_scope_id: String!\n        $storage_host_name: String!\n        $skipQuotaScope: Boolean!\n      ) {\n        user_resource_policy(name: $user_RP_name) @since(version: \"23.09.6\") {\n          max_vfolder_count\n        }\n        project_resource_policy(name: $project_RP_name)\n          @since(version: \"23.09.1\") {\n          max_vfolder_count\n        }\n        keypair_resource_policy(name: $keypair_resource_policy_name)\n          # use max_vfolder_count in keypair_resource_policy before adding max_vfolder_count in user_resource_policy\n          @deprecatedSince(version: \"23.09.4\") {\n          max_vfolder_count\n        }\n        project_quota_scope: quota_scope(\n          quota_scope_id: $project_quota_scope_id\n          storage_host_name: $storage_host_name\n        ) @skip(if: $skipQuotaScope) {\n          ...UsageProgressFragment_usageFrgmt\n        }\n        user_quota_scope: quota_scope(\n          quota_scope_id: $user_quota_scope_id\n          storage_host_name: $storage_host_name\n        ) @skip(if: $skipQuotaScope) {\n          ...UsageProgressFragment_usageFrgmt\n        }\n      }\n    `,\n    {\n      user_RP_name: user?.resource_policy,\n      project_RP_name: currentProject?.name ?? '',\n      keypair_resource_policy_name: keypair?.resource_policy,\n      project_quota_scope_id: addQuotaScopeTypePrefix(\n        'project',\n        currentProject?.id,\n      ),\n      user_quota_scope_id: addQuotaScopeTypePrefix('user', user?.id || ''),\n      storage_host_name: deferredSelectedVolumeInfo?.id || '',\n      skipQuotaScope:\n        currentProject?.id === undefined ||\n        user?.id === undefined ||\n        !deferredSelectedVolumeInfo?.id,\n    },\n  );\n  // Support version:\n  // keypair resource policy < 23.09.4\n  // user resource policy, project resource policy >= 23.09.6\n  let maxVfolderCount;\n  if (\n    // manager version >= 23.09.6\n    baiClient?.supports('max-vfolder-count-in-user-and-project-resource-policy')\n  ) {\n    maxVfolderCount = user_resource_policy?.max_vfolder_count || 0;\n  } else {\n    maxVfolderCount = keypair_resource_policy?.max_vfolder_count || 0;\n  }\n\n  const numberOfFolderPercent =\n    maxVfolderCount || maxVfolderCount === 0\n      ? ((maxVfolderCount > 0\n          ? ((createdCount / maxVfolderCount) * 100)?.toFixed(2)\n          : 0) as number)\n      : null;\n  const descriptionItems: DescriptionsProps['items'] = [\n    {\n      key: 'totalFolders',\n      label: t('data.NumberOfFolders'),\n      children: (\n        <>\n          {numberOfFolderPercent || numberOfFolderPercent === 0 ? (\n            <Progress\n              size={[200, 15]}\n              percent={numberOfFolderPercent}\n              strokeColor={usageIndicatorColor(numberOfFolderPercent)}\n              style={{ width: '95%' }}\n              status={numberOfFolderPercent >= 100 ? 'exception' : 'normal'}\n            />\n          ) : null}\n          <Flex direction=\"row\" gap={token.marginXXS} wrap=\"wrap\">\n            <Typography.Text type=\"secondary\">\n              {t('data.Created')}:\n            </Typography.Text>\n            {createdCount}\n            {maxVfolderCount || maxVfolderCount === 0 ? (\n              <>\n                <Typography.Text type=\"secondary\">{' / '}</Typography.Text>\n                <Typography.Text type=\"secondary\">\n                  {t('data.Limit')}:\n                </Typography.Text>\n                {maxVfolderCount === 0 ? '∞' : maxVfolderCount}\n              </>\n            ) : null}\n          </Flex>\n          <Divider style={{ margin: '12px auto' }} />\n          <Flex direction=\"row\" wrap=\"wrap\" justify=\"between\">\n            <Flex gap={token.marginXXS}>\n              <Typography.Text type=\"secondary\">\n                {t('data.ProjectFolder')}:\n              </Typography.Text>\n              {projectFolderCount}\n              {(currentUserRole === 'admin' ||\n                currentUserRole === 'superadmin') &&\n              (project_resource_policy?.max_vfolder_count ?? -1) >= 0 ? (\n                <>\n                  <Typography.Text type=\"secondary\">{' / '}</Typography.Text>\n                  <Typography.Text type=\"secondary\">\n                    {t('data.Limit')}:\n                  </Typography.Text>\n                  {project_resource_policy?.max_vfolder_count === 0\n                    ? '∞'\n                    : project_resource_policy?.max_vfolder_count}\n                </>\n              ) : null}\n            </Flex>\n            <Flex gap={token.marginXXS} style={{ marginRight: 30 }}>\n              <Typography.Text type=\"secondary\">\n                {t('data.Invited')}:\n              </Typography.Text>\n              {invitedCount}\n            </Flex>\n          </Flex>\n        </>\n      ),\n    },\n    {\n      key: 'quotaPerStorageVolume',\n      label: (\n        <div>\n          {t('data.QuotaPerStorageVolume')}\n          <Tooltip title={t('data.HostDetails')}>\n            <Button type=\"link\" icon={<InfoCircleOutlined />} />\n          </Tooltip>\n        </div>\n      ),\n      children: (\n        <>\n          <Flex\n            wrap=\"wrap\"\n            justify=\"between\"\n            direction=\"row\"\n            style={{ minWidth: '25vw' }}\n          >\n            <Typography.Text type=\"secondary\">{t('data.Host')}</Typography.Text>\n            <StorageSelect\n              value={selectedVolumeInfo?.id}\n              onChange={(__, vInfo) => {\n                setSelectedVolumeInfo(vInfo);\n              }}\n              autoSelectType=\"usage\"\n              showUsageStatus\n              showSearch\n              allowClear\n            />\n          </Flex>\n          {selectedVolumeInfo !== deferredSelectedVolumeInfo ? (\n            <FlexActivityIndicator style={{ minHeight: 120 }} />\n          ) : selectedVolumeInfo?.capabilities?.includes('quota') ? (\n            <>\n              <Flex\n                style={{ margin: '15px auto' }}\n                justify=\"between\"\n                wrap=\"wrap\"\n              >\n                <Typography.Text\n                  type=\"secondary\"\n                  style={{\n                    wordBreak: 'keep-all',\n                    wordWrap: 'break-word',\n                  }}\n                >\n                  {t('data.Project')}\n                  <br />({currentProject?.name})\n                </Typography.Text>\n                <UsageProgress\n                  usageProgressFrgmt={project_quota_scope || null}\n                />\n              </Flex>\n              <Flex justify=\"between\" wrap=\"wrap\">\n                <Typography.Text\n                  type=\"secondary\"\n                  style={{\n                    wordBreak: 'keep-all',\n                    wordWrap: 'break-word',\n                  }}\n                >\n                  {t('data.User')}\n                  <br />({baiClient?.email})\n                </Typography.Text>\n                <UsageProgress usageProgressFrgmt={user_quota_scope || null} />\n              </Flex>\n            </>\n          ) : (\n            <Empty\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n              description={t('storageHost.QuotaDoesNotSupported')}\n              style={{ margin: '25px auto' }}\n            />\n          )}\n        </>\n      ),\n    },\n    {\n      key: 'userQuotaScopeId',\n      label: t('data.UserQuotaScopeId'),\n      children: (\n        <Typography.Text copyable>\n          {addQuotaScopeTypePrefix('user', user?.id || '')}\n        </Typography.Text>\n      ),\n    },\n  ];\n\n  return (\n    <Card size=\"small\" title={t('data.StorageStatus')}>\n      <Descriptions\n        bordered\n        column={columnSetting}\n        size=\"small\"\n        items={descriptionItems}\n      />\n    </Card>\n  );\n};\n\nexport const StorageStatusPanelFallback = () => {\n  const { t } = useTranslation();\n  return (\n    <Card size=\"small\" title={t('data.StorageStatus')}>\n      <Skeleton active />\n    </Card>\n  );\n};\n\nexport default StorageStatusPanel;\n","/**\n * @generated SignedSource<<7da20262234990265ac8911761049018>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type StorageStatusPanelKeypairQuery$variables = {\n  access_key?: string | null | undefined;\n  domain_name?: string | null | undefined;\n  email?: string | null | undefined;\n};\nexport type StorageStatusPanelKeypairQuery$data = {\n  readonly keypair: {\n    readonly resource_policy: string | null | undefined;\n  } | null | undefined;\n  readonly user: {\n    readonly id: string | null | undefined;\n    readonly resource_policy: string | null | undefined;\n  } | null | undefined;\n};\nexport type StorageStatusPanelKeypairQuery = {\n  response: StorageStatusPanelKeypairQuery$data;\n  variables: StorageStatusPanelKeypairQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"access_key\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"domain_name\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"domain_name\",\n  \"variableName\": \"domain_name\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"access_key\",\n    \"variableName\": \"access_key\"\n  },\n  (v3/*: any*/)\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": [\n    (v3/*: any*/),\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"email\",\n      \"variableName\": \"email\"\n    }\n  ],\n  \"concreteType\": \"User\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"user\",\n  \"plural\": false,\n  \"selections\": [\n    (v6/*: any*/),\n    (v5/*: any*/)\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageStatusPanelKeypairQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"KeyPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      (v7/*: any*/)\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageStatusPanelKeypairQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"KeyPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      (v7/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"95e9a2aff9ba76edfc0781be14e9263f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageStatusPanelKeypairQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageStatusPanelKeypairQuery(\\n  $domain_name: String\\n  $email: String\\n  $access_key: String\\n) {\\n  keypair(domain_name: $domain_name, access_key: $access_key) {\\n    resource_policy\\n    id\\n  }\\n  user(domain_name: $domain_name, email: $email) {\\n    id\\n    resource_policy @since(version: \\\"23.09.0\\\")\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"356fec51b64103fba9f667dba1713774\";\n\nexport default node;\n","/**\n * @generated SignedSource<<06581765f1c5abc0075b381a91abecce>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageStatusPanelQuery$variables = {\n  keypair_resource_policy_name?: string | null | undefined;\n  project_RP_name: string;\n  project_quota_scope_id: string;\n  skipQuotaScope: boolean;\n  storage_host_name: string;\n  user_RP_name?: string | null | undefined;\n  user_quota_scope_id: string;\n};\nexport type StorageStatusPanelQuery$data = {\n  readonly keypair_resource_policy: {\n    readonly max_vfolder_count: number | null | undefined;\n  } | null | undefined;\n  readonly project_quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"UsageProgressFragment_usageFrgmt\">;\n  } | null | undefined;\n  readonly project_resource_policy: {\n    readonly max_vfolder_count: number | null | undefined;\n  } | null | undefined;\n  readonly user_quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"UsageProgressFragment_usageFrgmt\">;\n  } | null | undefined;\n  readonly user_resource_policy: {\n    readonly max_vfolder_count: number | null | undefined;\n  } | null | undefined;\n};\nexport type StorageStatusPanelQuery = {\n  response: StorageStatusPanelQuery$data;\n  variables: StorageStatusPanelQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"keypair_resource_policy_name\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_RP_name\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_quota_scope_id\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipQuotaScope\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"user_RP_name\"\n},\nv6 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"user_quota_scope_id\"\n},\nv7 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"user_RP_name\"\n  }\n],\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_vfolder_count\",\n  \"storageKey\": null\n},\nv9 = [\n  (v8/*: any*/)\n],\nv10 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"project_RP_name\"\n  }\n],\nv11 = {\n  \"alias\": null,\n  \"args\": [\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"name\",\n      \"variableName\": \"keypair_resource_policy_name\"\n    }\n  ],\n  \"concreteType\": \"KeyPairResourcePolicy\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"keypair_resource_policy\",\n  \"plural\": false,\n  \"selections\": (v9/*: any*/),\n  \"storageKey\": null\n},\nv12 = {\n  \"kind\": \"Variable\",\n  \"name\": \"storage_host_name\",\n  \"variableName\": \"storage_host_name\"\n},\nv13 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"project_quota_scope_id\"\n  },\n  (v12/*: any*/)\n],\nv14 = [\n  {\n    \"args\": null,\n    \"kind\": \"FragmentSpread\",\n    \"name\": \"UsageProgressFragment_usageFrgmt\"\n  }\n],\nv15 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"user_quota_scope_id\"\n  },\n  (v12/*: any*/)\n],\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv17 = [\n  (v8/*: any*/),\n  (v16/*: any*/)\n],\nv18 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"QuotaDetails\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"details\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"usage_bytes\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"hard_limit_bytes\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  },\n  (v16/*: any*/)\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/),\n      (v6/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageStatusPanelQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policy\",\n        \"plural\": false,\n        \"selections\": (v9/*: any*/),\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v10/*: any*/),\n        \"concreteType\": \"ProjectResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"project_resource_policy\",\n        \"plural\": false,\n        \"selections\": (v9/*: any*/),\n        \"storageKey\": null\n      },\n      (v11/*: any*/),\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": \"project_quota_scope\",\n            \"args\": (v13/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": (v14/*: any*/),\n            \"storageKey\": null\n          },\n          {\n            \"alias\": \"user_quota_scope\",\n            \"args\": (v15/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": (v14/*: any*/),\n            \"storageKey\": null\n          }\n        ]\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v5/*: any*/),\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v6/*: any*/),\n      (v4/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageStatusPanelQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policy\",\n        \"plural\": false,\n        \"selections\": (v17/*: any*/),\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v10/*: any*/),\n        \"concreteType\": \"ProjectResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"project_resource_policy\",\n        \"plural\": false,\n        \"selections\": (v17/*: any*/),\n        \"storageKey\": null\n      },\n      (v11/*: any*/),\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": \"project_quota_scope\",\n            \"args\": (v13/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": (v18/*: any*/),\n            \"storageKey\": null\n          },\n          {\n            \"alias\": \"user_quota_scope\",\n            \"args\": (v15/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": (v18/*: any*/),\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"2c62e20fea60ae39e607be391ca36756\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageStatusPanelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageStatusPanelQuery(\\n  $user_RP_name: String\\n  $project_RP_name: String!\\n  $keypair_resource_policy_name: String\\n  $project_quota_scope_id: String!\\n  $user_quota_scope_id: String!\\n  $storage_host_name: String!\\n  $skipQuotaScope: Boolean!\\n) {\\n  user_resource_policy(name: $user_RP_name) @since(version: \\\"23.09.6\\\") {\\n    max_vfolder_count\\n    id\\n  }\\n  project_resource_policy(name: $project_RP_name) @since(version: \\\"23.09.1\\\") {\\n    max_vfolder_count\\n    id\\n  }\\n  keypair_resource_policy(name: $keypair_resource_policy_name) @deprecatedSince(version: \\\"23.09.4\\\") {\\n    max_vfolder_count\\n  }\\n  project_quota_scope: quota_scope(quota_scope_id: $project_quota_scope_id, storage_host_name: $storage_host_name) @skip(if: $skipQuotaScope) {\\n    ...UsageProgressFragment_usageFrgmt\\n    id\\n  }\\n  user_quota_scope: quota_scope(quota_scope_id: $user_quota_scope_id, storage_host_name: $storage_host_name) @skip(if: $skipQuotaScope) {\\n    ...UsageProgressFragment_usageFrgmt\\n    id\\n  }\\n}\\n\\nfragment UsageProgressFragment_usageFrgmt on QuotaScope {\\n  details {\\n    usage_bytes\\n    hard_limit_bytes\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0bad5a3f57d0dad70587152931566e8c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<64b946c238575abbfb5abd0712cd1432>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UsageProgressFragment_usageFrgmt$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null | undefined;\n    readonly usage_bytes: any | null | undefined;\n  };\n  readonly \" $fragmentType\": \"UsageProgressFragment_usageFrgmt\";\n};\nexport type UsageProgressFragment_usageFrgmt$key = {\n  readonly \" $data\"?: UsageProgressFragment_usageFrgmt$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"UsageProgressFragment_usageFrgmt\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"UsageProgressFragment_usageFrgmt\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"usage_bytes\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1ba87b250f2a0161ecee7ba88d54c85c\";\n\nexport default node;\n"],"names":["_ref","style","children","spinSize","_jsxs","Flex","direction","justify","align","width","height","_jsx","Spin","indicator","LoadingOutlined","spin","size","_usage$details","_usage$details2","_ref2","_usage$details3","_usage$details4","usageProgressFrgmt","usageFrgmt","t","useTranslation","token","theme","useToken","usage","useFragment","_UsageProgressFragment_usageFrgmt","require","usageBytes","parseFloat","details","usage_bytes","hardLimitBytes","hard_limit_bytes","percent","toFixed","Progress","strokeColor","usageIndicatorColor","status","gap","marginXXS","fontSize","Typography","Text","type","bytesToGB","StorageStatusPanelFallback","Card","title","Skeleton","active","_currentProject$name","_project_resource_pol","_selectedVolumeInfo$c","fetchKey","baiClient","useSuspendedBackendaiClient","currentProject","useCurrentProjectValue","currentUserRole","useCurrentUserRole","selectedVolumeInfo","setSelectedVolumeInfo","useState","deferredSelectedVolumeInfo","useDeferredValue","deferredFetchKey","isExcludedCount","_","data","vfolders","useSuspenseTanQuery","queryKey","queryFn","vfolder","list","id","createdCount","filter","item","is_owner","ownership_type","length","projectFolderCount","invitedCount","keypair","user","useLazyLoadQuery","_StorageStatusPanelKeypairQuery","domain_name","useCurrentDomainValue","email","access_key","_config","accessKey","user_resource_policy","project_resource_policy","keypair_resource_policy","project_quota_scope","user_quota_scope","_StorageStatusPanelQuery","user_RP_name","resource_policy","project_RP_name","name","keypair_resource_policy_name","project_quota_scope_id","addQuotaScopeTypePrefix","user_quota_scope_id","storage_host_name","skipQuotaScope","undefined","maxVfolderCount","supports","max_vfolder_count","numberOfFolderPercent","descriptionItems","key","label","_Fragment","wrap","Divider","margin","marginRight","Tooltip","Button","icon","InfoCircleOutlined","minWidth","StorageSelect","value","onChange","__","vInfo","autoSelectType","showUsageStatus","showSearch","allowClear","FlexActivityIndicator","minHeight","capabilities","includes","wordBreak","wordWrap","UsageProgress","Empty","image","PRESENTED_IMAGE_SIMPLE","description","copyable","Descriptions","bordered","column","xxl","xl","lg","md","sm","xs","items","node","v0","v1","v2","v3","v4","v5","v6","v7","hash","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18"],"sourceRoot":""}