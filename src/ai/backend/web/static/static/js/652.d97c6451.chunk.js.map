{"version":3,"file":"static/js/652.d97c6451.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","../node_modules/@ant-design/icons/es/icons/RedoOutlined.js","components/ErrorLogList.tsx","components/TableColumnsSettingModal.tsx","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js"],"sourcesContent":["// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(RedoOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'RedoOutlined';\n}\nexport default RefIcon;","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport BAIModal from './BAIModal';\nimport Flex from './Flex';\nimport TableColumnsSettingModal from './TableColumnsSettingModal';\nimport TextHighlighter from './TextHighlighter';\nimport {\n  RedoOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n  SettingOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\nimport { useLocalStorageState } from 'ahooks';\nimport { Button, Typography, Table, Alert, Checkbox, Input, theme } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport React, { useState, useMemo, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype LogType = {\n  isError: boolean;\n  statusCode: any;\n  statusText: any;\n  title: any;\n  message: string;\n  requestMethod: string;\n  timestamp: string;\n  type: string;\n  requestUrl: string;\n  requestParameters?: string;\n  formattedTimestamp?: string; // for display only\n};\nconst ErrorLogList: React.FC<{\n  onChangeSearch?: (value: string) => void;\n}> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [isOpenClearLogsModal, setIsOpenClearLogsModal] = useState(false);\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [checkedShowOnlyError, setCheckedShowOnlyError] = useState(false);\n  const [logSearch, setLogSearch] = useState('');\n  const [key, checkUpdate] = useUpdatableState('first');\n  const [isPendingRefreshTransition, startRefreshTransition] = useTransition();\n  const [isPendingSearchTransition, startSearchTransition] = useTransition();\n  useSuspendedBackendaiClient(); // TODO: remove this after react routing is stable. This is for remove flickering when browser reload\n  const columns: ColumnsType<LogType> = [\n    {\n      title: t('logs.TimeStamp'),\n      dataIndex: 'formattedTimeStamp',\n      key: 'timeStamp',\n      render: (value) => (\n        <div style={{ minWidth: 50 }}>\n          {_.isUndefined(value) ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n      fixed: 'left',\n    },\n    {\n      title: t('logs.Status'),\n      dataIndex: 'statusCode',\n      key: 'status',\n      render: (value, record) => (\n        <div style={{ minWidth: 50 }}>\n          {_.isUndefined(value) ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>\n              {value + ' ' + record.statusText}\n            </TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorTitle'),\n      dataIndex: 'title',\n      key: 'errorTitle',\n      render: (value) => (\n        <div style={{ minWidth: 50 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>\n              {_.toString(value)}\n              {/* set toString because sometime value type is object */}\n            </TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorMessage'),\n      dataIndex: 'message',\n      key: 'errorMessage',\n      render: (value) => (\n        <div style={{ minWidth: 70 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorType'),\n      dataIndex: 'type',\n      key: 'errorType',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.Method'),\n      dataIndex: 'requestMethod',\n      key: 'method',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.RequestUrl'),\n      dataIndex: 'requestUrl',\n      key: 'requestUrl',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.Parameters'),\n      dataIndex: 'requestParameters',\n      key: 'requestParameter',\n      render: (value) => (\n        <div style={{ minWidth: 100 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.ErrorLogList.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  const storageLogData = useMemo(() => {\n    const raw: LogType[] = JSON.parse(\n      localStorage.getItem('backendaiwebui.logs') || '[]',\n    );\n    return _.map(raw, (log) => {\n      return {\n        ...log,\n        formattedTimeStamp: dayjs(log.timestamp).format('ll LTS'),\n      };\n    });\n    // Add blow comment because eslint dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key]);\n\n  const filteredLogData = useMemo(() => {\n    const regExp = new RegExp(`${_.escapeRegExp(logSearch)}`, 'i');\n    return _.filter(storageLogData, (log) => {\n      if (!logSearch) return true;\n      return !!_.find(log, (value, key) => {\n        if (key === 'timestamp') {\n          // timestamp is not display in table, use formattedTimestamp instead\n          return false;\n        }\n        return _.toString(value).match(regExp);\n      });\n    });\n  }, [logSearch, storageLogData]);\n\n  const handleOk = () => {\n    localStorage.removeItem('backendaiwebui.logs');\n    checkUpdate();\n    setIsOpenClearLogsModal(false);\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        wrap=\"wrap\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex direction=\"column\" align=\"start\">\n          <Typography.Title level={4} style={{ margin: 0, padding: 0 }}>\n            {t('logs.LogMessages')}\n          </Typography.Title>\n          <Typography.Text type=\"secondary\">\n            {t('logs.UpTo3000Logs')}\n          </Typography.Text>\n        </Flex>\n        <Flex direction=\"row\" gap={'xs'} wrap=\"wrap\" style={{ flexShrink: 1 }}>\n          <Flex gap={'xs'}>\n            <Input\n              allowClear\n              prefix={<SearchOutlined />}\n              placeholder={t('logs.SearchLogs')}\n              onChange={(e) => {\n                startSearchTransition(() => setLogSearch(e.target.value));\n              }}\n              style={{\n                width: 200,\n              }}\n            />\n            <Checkbox\n              onChange={(e) => setCheckedShowOnlyError(e.target.checked)}\n            >\n              {t('logs.ShowOnlyError')}\n            </Checkbox>\n          </Flex>\n          <Flex gap={'xs'}>\n            <Button\n              icon={<RedoOutlined />}\n              loading={isPendingRefreshTransition}\n              onClick={() => {\n                startRefreshTransition(() => checkUpdate());\n              }}\n            >\n              {t('button.Refresh')}\n            </Button>\n            <Button\n              danger\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setIsOpenClearLogsModal(true);\n              }}\n            >\n              {t('button.ClearLogs')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Table\n        pagination={{\n          showSizeChanger: false,\n          style: {\n            marginBottom: 0,\n          },\n        }}\n        loading={\n          isPendingSearchTransition\n            ? {\n                indicator: <LoadingOutlined />,\n              }\n            : false\n        }\n        scroll={{ x: 'max-content', y: 'calc(100vh - 400px)' }}\n        dataSource={\n          checkedShowOnlyError\n            ? _.filter(filteredLogData, (log) => {\n                return log.isError;\n              })\n            : (filteredLogData as LogType[])\n        }\n        columns={columns.filter((column) =>\n          displayedColumnKeys?.includes(_.toString(column.key)),\n        )}\n        onRow={(record) => {\n          return {\n            style: { color: record.isError ? token.colorError : '' },\n          };\n        }}\n      />\n      <Flex\n        justify=\"end\"\n        style={{\n          paddingRight: token.paddingXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            setIsOpenColumnsSetting(true);\n          }}\n        />\n      </Flex>\n      <BAIModal\n        open={isOpenClearLogsModal}\n        title={t('dialog.warning.LogDeletion')}\n        okText={t('button.Delete')}\n        okButtonProps={{ danger: true }}\n        onOk={handleOk}\n        cancelText={t('button.Cancel')}\n        onCancel={() => setIsOpenClearLogsModal(false)}\n      >\n        <Alert message={t('dialog.warning.CannotBeUndone')} type=\"warning\" />\n      </BAIModal>\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(false);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </Flex>\n  );\n};\n\nexport default ErrorLogList;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(DeleteOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'DeleteOutlined';\n}\nexport default RefIcon;"],"names":["RedoOutlined","props","ref","React","AntdIcon","_extends","icon","RedoOutlinedSvg","ErrorLogList","t","useTranslation","token","theme","useToken","isOpenClearLogsModal","setIsOpenClearLogsModal","useState","isOpenColumnsSetting","setIsOpenColumnsSetting","checkedShowOnlyError","setCheckedShowOnlyError","logSearch","setLogSearch","key","checkUpdate","useUpdatableState","isPendingRefreshTransition","startRefreshTransition","useTransition","isPendingSearchTransition","startSearchTransition","useSuspendedBackendaiClient","columns","title","dataIndex","render","value","_jsx","style","minWidth","children","_","TextHighlighter","keyword","fixed","record","statusText","displayedColumnKeys","setDisplayedColumnKeys","useLocalStorageState","defaultValue","map","column","storageLogData","useMemo","raw","JSON","parse","localStorage","getItem","log","formattedTimeStamp","dayjs","timestamp","format","filteredLogData","regExp","RegExp","concat","match","_jsxs","Flex","direction","align","justify","wrap","gap","padding","paddingContentVertical","paddingLeft","paddingContentHorizontalSM","paddingRight","Typography","Title","level","margin","Text","type","flexShrink","Input","allowClear","prefix","SearchOutlined","placeholder","onChange","e","target","width","Checkbox","checked","Button","loading","onClick","danger","DeleteOutlined","Table","pagination","showSizeChanger","marginBottom","indicator","LoadingOutlined","scroll","x","y","dataSource","isError","filter","includes","onRow","color","colorError","paddingXS","SettingOutlined","BAIModal","open","okText","okButtonProps","onOk","handleOk","removeItem","cancelText","onCancel","Alert","message","TableColumnsSettingModal","onRequestClose","values","selectedColumnKeys","_ref","modalProps","formRef","useRef","columnOptions","label","element","child","undefined","destroyOnClose","centered","_formRef$current","current","validateFields","then","catch","Form","preserve","initialValues","columnOption","layout","Item","name","marginSM","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","display","height","overflowY","Group","options","flexDirection","DeleteOutlinedSvg"],"sourceRoot":""}