{"version":3,"file":"static/js/620.09a8fa3a.chunk.js","mappings":"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","sources":["helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/Flex.tsx","components/__generated__/ProjectResourcePolicySettingModalCreateMutation.graphql.ts","components/__generated__/ProjectResourcePolicySettingModalFragment.graphql.ts","components/__generated__/ProjectResourcePolicySettingModalModifyMutation.graphql.ts","components/__generated__/ProjectSelectorQuery.graphql.ts","components/__generated__/QuotaScopeCardFragment.graphql.ts","components/__generated__/QuotaScopeCardUnsetMutation.graphql.ts","components/__generated__/QuotaSettingModalFragment.graphql.ts","components/__generated__/QuotaSettingModalSetMutation.graphql.ts","components/__generated__/ResourcePolicyCardModifyProjectMutation.graphql.ts","components/__generated__/ResourcePolicyCardModifyUserMutation.graphql.ts","components/__generated__/ResourcePolicyCard_project_resource_policy.graphql.ts","components/__generated__/ResourcePolicyCard_user_resource_policy.graphql.ts","components/__generated__/StorageHostResourcePanelFragment.graphql.ts","components/__generated__/StorageHostSettingsPanelQuery.graphql.ts","components/__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql.ts","components/__generated__/UserResourcePolicySettingModalCreateMutation.graphql.ts","components/__generated__/UserResourcePolicySettingModalFragment.graphql.ts","components/__generated__/UserResourcePolicySettingModalModifyMutation.graphql.ts","components/__generated__/UserSelectorQuery.graphql.ts","helper/index.tsx","hooks/index.ts","components/StorageHostResourcePanel.tsx","components/ProjectSelector.tsx","components/UserSelector.tsx","components/ProjectResourcePolicySettingModal.tsx","components/UserResourcePolicySettingModal.tsx","components/ResourcePolicyCard.tsx","components/QuotaScopeCard.tsx","components/QuotaSettingModal.tsx","components/StorageHostSettingsPanel.tsx","pages/StorageHostSettingPage.tsx","pages/__generated__/StorageHostSettingPageQuery.graphql.ts"],"sourcesContent":["function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  }\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === \"skipOnClient\" &&\n      directive.argumentName === \"if\"\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === \"true\")\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, \"\");\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            \"\"\n          )\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith(\"$\") &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, \"g\");\n        query = query.replace(pattern, \"\");\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from \"relay-runtime\";\n// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from \"./helper/graphql-transformer\";\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || \"\",\n    variables\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    \"POST\",\n    \"/admin/gql\",\n    reqBody\n  );\n\n  //@ts-ignore\n  const result = await globalThis.backendaiclient?._wrapWithPromise(\n    reqInfo,\n    false,\n    null,\n    10000,\n    0\n  );\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import React, { Suspense, useEffect, useMemo, useState } from \"react\";\nimport { RelayEnvironmentProvider } from \"react-relay\";\nimport { StyleProvider, createCache } from \"@ant-design/cssinjs\";\nimport { ConfigProvider } from \"antd\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactWebComponentProps } from \"../helper/react-to-webcomponent\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\n\nimport en_US from \"antd/locale/en_US\";\nimport ko_KR from \"antd/locale/ko_KR\";\nimport { RelayEnvironment } from \"../RelayEnvironment\";\nimport { useCustomThemeConfig } from \"../helper/customThemeConfig\";\n\n// @ts-ignore\nimport rawFixAntCss from \"../fix_antd.css?raw\";\nimport { BrowserRouter } from \"react-router-dom\";\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps[\"value\"];\n  dispatchEvent: ReactWebComponentProps[\"dispatchEvent\"];\n  moveTo: (path: string) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: \"/resources/i18n/{{lng}}.json\",\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get(\"current_language\") || \"en\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get(\"current_language\")\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || \"en\";\n      i18n?.changeLanguage(lang);\n    };\n    window.addEventListener(\"langChanged\", handler);\n    return () => window.removeEventListener(\"langChanged\", handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path: string) => {\n        dispatchEvent(\"moveTo\", { path });\n      },\n    };\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      if (triggerNode?.parentNode) {\n                        return triggerNode.parentNode;\n                      }\n                      return shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={\"ko\" === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <StyleProvider container={shadowRoot} cache={cache}>\n                      <Suspense fallback=\"\">\n                        <BrowserRouter>{children}</BrowserRouter>\n                      </Suspense>\n                      {/* {children} */}\n                    </StyleProvider>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nexport default DefaultProviders;\n","import { theme } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\n\ninterface FlexProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"dir\">,\n    PropsWithChildren {\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  justify?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  // | \"evenly\";\n  align?: \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n  gap?: number | \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nconst Flex: React.FC<FlexProps> = ({\n  direction = \"row\",\n  wrap = \"nowrap\",\n  justify = \"flex-start\",\n  align = \"center\",\n  gap = 0,\n  style,\n  children,\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferConst = [justify, align];\n  const transferConstStyle = transferConst?.map((el) => {\n    let tempTxt;\n    switch (el) {\n      case \"start\":\n        tempTxt = \"flex-start\";\n        break;\n      case \"end\":\n        tempTxt = \"flex-end\";\n        break;\n      case \"between\":\n        tempTxt = \"space-between\";\n        break;\n      case \"around\":\n        tempTxt = \"space-around\";\n        break;\n      default:\n        tempTxt = el;\n        break;\n    }\n\n    return tempTxt;\n  });\n  const flexStyle: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: direction,\n    flexWrap: wrap,\n    justifyContent: transferConstStyle[0],\n    alignItems: transferConstStyle[1],\n    ...style,\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"stretch\",\n        backgroundColor: \"transparent\",\n        border: \"0 solid black\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexBasis: \"auto\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        listStyle: \"none\",\n        margin: 0,\n        minHeight: 0,\n        minWidth: 0,\n        padding: 0,\n        position: \"relative\",\n        textDecoration: \"none\",\n        gap:\n          // @ts-ignore\n          typeof gap === \"string\" ? token[\"padding\" + gap.toUpperCase()] : gap,\n        ...flexStyle,\n      }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","/**\n * @generated SignedSource<<90a08136e2f6f03bc56b86c6d6aa367f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type CreateProjectResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type ProjectResourcePolicySettingModalCreateMutation$variables = {\n  name: string;\n  props: CreateProjectResourcePolicyInput;\n};\nexport type ProjectResourcePolicySettingModalCreateMutation$data = {\n  readonly create_project_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n    readonly resource_policy: {\n      readonly max_vfolder_size: any | null;\n    } | null;\n  } | null;\n};\nexport type ProjectResourcePolicySettingModalCreateMutation = {\n  response: ProjectResourcePolicySettingModalCreateMutation$data;\n  variables: ProjectResourcePolicySettingModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"CreateProjectResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"create_project_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ProjectResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"resource_policy\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_vfolder_size\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"3a411e9a4782713efe26879d8c4c81dd\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectResourcePolicySettingModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ProjectResourcePolicySettingModalCreateMutation(\\n  $name: String!\\n  $props: CreateProjectResourcePolicyInput!\\n) {\\n  create_project_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n    resource_policy {\\n      max_vfolder_size\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b4aeb3a2a387d9722c44a8bde5e6c7cf\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7ee3849db1e701d63ac5f808e819d5ab>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ProjectResourcePolicySettingModalFragment$data = {\n  readonly created_at: any;\n  readonly id: any;\n  readonly max_vfolder_size: any | null;\n  readonly name: string;\n  readonly \" $fragmentType\": \"ProjectResourcePolicySettingModalFragment\";\n};\nexport type ProjectResourcePolicySettingModalFragment$key = {\n  readonly \" $data\"?: ProjectResourcePolicySettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ProjectResourcePolicySettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ProjectResourcePolicySettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_size\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ProjectResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a11454523af2ce0351cf9b2bfe041744\";\n\nexport default node;\n","/**\n * @generated SignedSource<<f9e5d45347ebf894c60d01bcad657bd1>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyProjectResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation$variables = {\n  name: string;\n  props: ModifyProjectResourcePolicyInput;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation$data = {\n  readonly modify_project_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation = {\n  response: ProjectResourcePolicySettingModalModifyMutation$data;\n  variables: ProjectResourcePolicySettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyProjectResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_project_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"aedc4eab77206f7ab189ccd3f2d938b3\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ProjectResourcePolicySettingModalModifyMutation(\\n  $name: String!\\n  $props: ModifyProjectResourcePolicyInput!\\n) {\\n  modify_project_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"3cd62195489eba58dd9693f1fc9df8ff\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7501221e296c4d009f39d135d79c2589>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ProjectSelectorQuery$variables = {\n  domain_name?: string | null;\n};\nexport type ProjectSelectorQuery$data = {\n  readonly projects: ReadonlyArray<{\n    readonly id: any | null;\n    readonly is_active: boolean | null;\n    readonly name: string | null;\n    readonly resource_policy: string | null;\n  } | null> | null;\n};\nexport type ProjectSelectorQuery = {\n  response: ProjectSelectorQuery$data;\n  variables: ProjectSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domain_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": \"projects\",\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"domain_name\",\n        \"variableName\": \"domain_name\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Group\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"groups\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"is_active\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"resource_policy\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"eecad68ff1a08d753ce22ff2c5136c26\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectSelectorQuery(\\n  $domain_name: String\\n) {\\n  projects: groups(domain_name: $domain_name, is_active: true) {\\n    id\\n    is_active\\n    name\\n    resource_policy\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"2845b31197571f750613f64207ded239\";\n\nexport default node;\n","/**\n * @generated SignedSource<<e0e76ced91358993c74a43fd95d2db3c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaScopeCardFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n  };\n  readonly id: any;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n  readonly \" $fragmentType\": \"QuotaScopeCardFragment\";\n};\nexport type QuotaScopeCardFragment$key = {\n  readonly \" $data\"?: QuotaScopeCardFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaScopeCardFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"QuotaSettingModalFragment\"\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a676a5c2cd9f97cceb59361b769c88e8\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5de6b6644c875a46e1660d9c295d8203>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeCardUnsetMutation$variables = {\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaScopeCardUnsetMutation$data = {\n  readonly unset_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: any;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaScopeCardUnsetMutation = {\n  response: QuotaScopeCardUnsetMutation$data;\n  variables: QuotaScopeCardUnsetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"quota_scope_id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"storage_host_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"UnsetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"unset_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"338836966362b14e823520f40fa56a73\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaScopeCardUnsetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n) {\\n  unset_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"272001cc642518fb66015dcc367b9f65\";\n\nexport default node;\n","/**\n * @generated SignedSource<<07a7ef0c65467384653ab0c129416850>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaSettingModalFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n  };\n  readonly id: any;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentType\": \"QuotaSettingModalFragment\";\n};\nexport type QuotaSettingModalFragment$key = {\n  readonly \" $data\"?: QuotaSettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaSettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1c5ad8315a2d78cb376e7436dc6a8627\";\n\nexport default node;\n","/**\n * @generated SignedSource<<3559859233c669e5b8f3f3760f46c7f8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeInput = {\n  hard_limit_bytes?: any | null;\n};\nexport type QuotaSettingModalSetMutation$variables = {\n  props: QuotaScopeInput;\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaSettingModalSetMutation$data = {\n  readonly set_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: any;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaSettingModalSetMutation = {\n  response: QuotaSettingModalSetMutation$data;\n  variables: QuotaSettingModalSetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"SetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"set_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"d337cab9be9523bfde2bfb7d6bed595b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaSettingModalSetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $props: QuotaScopeInput!\\n) {\\n  set_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name, props: $props) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e8509b3174920c1dd917ece91d41161\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b263bb8feadf06719a2f9fba3160a16b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyProjectResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type ResourcePolicyCardModifyProjectMutation$variables = {\n  name: string;\n  props: ModifyProjectResourcePolicyInput;\n};\nexport type ResourcePolicyCardModifyProjectMutation$data = {\n  readonly modify_project_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type ResourcePolicyCardModifyProjectMutation = {\n  response: ResourcePolicyCardModifyProjectMutation$data;\n  variables: ResourcePolicyCardModifyProjectMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyProjectResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_project_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ResourcePolicyCardModifyProjectMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ResourcePolicyCardModifyProjectMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"187f01c6b4def3afeb9b1890160738ff\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ResourcePolicyCardModifyProjectMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ResourcePolicyCardModifyProjectMutation(\\n  $name: String!\\n  $props: ModifyProjectResourcePolicyInput!\\n) {\\n  modify_project_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0aa47dc55b37b27a5c880470a2e98ceb\";\n\nexport default node;\n","/**\n * @generated SignedSource<<eec1dbdd0e31e9927bc6e4e12958eaca>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyUserResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type ResourcePolicyCardModifyUserMutation$variables = {\n  name: string;\n  props: ModifyUserResourcePolicyInput;\n};\nexport type ResourcePolicyCardModifyUserMutation$data = {\n  readonly modify_user_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type ResourcePolicyCardModifyUserMutation = {\n  response: ResourcePolicyCardModifyUserMutation$data;\n  variables: ResourcePolicyCardModifyUserMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyUserResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_user_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ResourcePolicyCardModifyUserMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ResourcePolicyCardModifyUserMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"9359c1f4ce56dfae06cb5dce603bd527\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ResourcePolicyCardModifyUserMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ResourcePolicyCardModifyUserMutation(\\n  $name: String!\\n  $props: ModifyUserResourcePolicyInput!\\n) {\\n  modify_user_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0ec87fb70626f0880b7db7124a879bbd\";\n\nexport default node;\n","/**\n * @generated SignedSource<<6abab33e1c0b3540b8034dcd9ad1f6ac>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ResourcePolicyCard_project_resource_policy$data = {\n  readonly id: any;\n  readonly max_vfolder_size: any | null;\n  readonly name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ProjectResourcePolicySettingModalFragment\">;\n  readonly \" $fragmentType\": \"ResourcePolicyCard_project_resource_policy\";\n};\nexport type ResourcePolicyCard_project_resource_policy$key = {\n  readonly \" $data\"?: ResourcePolicyCard_project_resource_policy$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ResourcePolicyCard_project_resource_policy\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ResourcePolicyCard_project_resource_policy\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_size\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"ProjectResourcePolicySettingModalFragment\"\n    }\n  ],\n  \"type\": \"ProjectResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"fff3d1eace997c19028ac10821a659a8\";\n\nexport default node;\n","/**\n * @generated SignedSource<<a4f093f133e9ec6249f4da931391b0ae>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ResourcePolicyCard_user_resource_policy$data = {\n  readonly id: any;\n  readonly max_vfolder_size: any | null;\n  readonly name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"UserResourcePolicySettingModalFragment\">;\n  readonly \" $fragmentType\": \"ResourcePolicyCard_user_resource_policy\";\n};\nexport type ResourcePolicyCard_user_resource_policy$key = {\n  readonly \" $data\"?: ResourcePolicyCard_user_resource_policy$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ResourcePolicyCard_user_resource_policy\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ResourcePolicyCard_user_resource_policy\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_size\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"UserResourcePolicySettingModalFragment\"\n    }\n  ],\n  \"type\": \"UserResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"449af16bb5d0d4ad3854575394e69e40\";\n\nexport default node;\n","/**\n * @generated SignedSource<<43d4063d6d35b79d500b74f0832dea56>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostResourcePanelFragment$data = {\n  readonly backend: string | null;\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly path: string | null;\n  readonly usage: any | null;\n  readonly \" $fragmentType\": \"StorageHostResourcePanelFragment\";\n};\nexport type StorageHostResourcePanelFragment$key = {\n  readonly \" $data\"?: StorageHostResourcePanelFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostResourcePanelFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"backend\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"path\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"30a1b4101eeb2fae45385780dbc0ddcc\";\n\nexport default node;\n","/**\n * @generated SignedSource<<e42ed3dc0d35068f8b882d1a99fca166>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanelQuery$variables = {\n  project_resource_policy_name: string;\n  quota_scope_id: string;\n  skipProjectResourcePolicy: boolean;\n  skipQuotaScope: boolean;\n  skipUserResourcePolicy: boolean;\n  storage_host_name: string;\n  user_resource_policy_name?: string | null;\n};\nexport type StorageHostSettingsPanelQuery$data = {\n  readonly project_resource_policy?: {\n    readonly max_vfolder_size: any | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ResourcePolicyCard_project_resource_policy\">;\n  } | null;\n  readonly quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\" | \"QuotaSettingModalFragment\">;\n  } | null;\n  readonly user_resource_policy?: {\n    readonly max_vfolder_size: any | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ResourcePolicyCard_user_resource_policy\">;\n  } | null;\n};\nexport type StorageHostSettingsPanelQuery = {\n  response: StorageHostSettingsPanelQuery$data;\n  variables: StorageHostSettingsPanelQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_resource_policy_name\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipProjectResourcePolicy\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipQuotaScope\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipUserResourcePolicy\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv6 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"user_resource_policy_name\"\n},\nv7 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"project_resource_policy_name\"\n  }\n],\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_vfolder_size\",\n  \"storageKey\": null\n},\nv9 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"user_resource_policy_name\"\n  }\n],\nv10 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"quota_scope_id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"storage_host_name\",\n    \"variableName\": \"storage_host_name\"\n  }\n],\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv12 = [\n  (v8/*: any*/),\n  (v11/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"name\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"created_at\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/),\n      (v6/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipProjectResourcePolicy\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v7/*: any*/),\n            \"concreteType\": \"ProjectResourcePolicy\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"project_resource_policy\",\n            \"plural\": false,\n            \"selections\": [\n              (v8/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ResourcePolicyCard_project_resource_policy\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"condition\": \"skipUserResourcePolicy\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v9/*: any*/),\n            \"concreteType\": \"UserResourcePolicy\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user_resource_policy\",\n            \"plural\": false,\n            \"selections\": [\n              (v8/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ResourcePolicyCard_user_resource_policy\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v10/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaSettingModalFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaScopeCardFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v6/*: any*/),\n      (v4/*: any*/),\n      (v1/*: any*/),\n      (v5/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipProjectResourcePolicy\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v7/*: any*/),\n            \"concreteType\": \"ProjectResourcePolicy\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"project_resource_policy\",\n            \"plural\": false,\n            \"selections\": (v12/*: any*/),\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"condition\": \"skipUserResourcePolicy\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v9/*: any*/),\n            \"concreteType\": \"UserResourcePolicy\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user_resource_policy\",\n            \"plural\": false,\n            \"selections\": (v12/*: any*/),\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v10/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              (v11/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"quota_scope_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"storage_host_name\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"QuotaDetails\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"details\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hard_limit_bytes\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"aa1f27fc178c88b21219a7c716dd1d6e\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingsPanelQuery(\\n  $project_resource_policy_name: String!\\n  $skipProjectResourcePolicy: Boolean!\\n  $user_resource_policy_name: String\\n  $skipUserResourcePolicy: Boolean!\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $skipQuotaScope: Boolean!\\n) {\\n  project_resource_policy(name: $project_resource_policy_name) @skip(if: $skipProjectResourcePolicy) {\\n    max_vfolder_size\\n    ...ResourcePolicyCard_project_resource_policy\\n  }\\n  user_resource_policy(name: $user_resource_policy_name) @skip(if: $skipUserResourcePolicy) {\\n    max_vfolder_size\\n    ...ResourcePolicyCard_user_resource_policy\\n  }\\n  quota_scope(storage_host_name: $storage_host_name, quota_scope_id: $quota_scope_id) @skip(if: $skipQuotaScope) {\\n    ...QuotaSettingModalFragment\\n    ...QuotaScopeCardFragment\\n  }\\n}\\n\\nfragment ProjectResourcePolicySettingModalFragment on ProjectResourcePolicy {\\n  id\\n  name\\n  created_at\\n  max_vfolder_size\\n}\\n\\nfragment QuotaScopeCardFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n  }\\n  ...QuotaSettingModalFragment\\n}\\n\\nfragment QuotaSettingModalFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n  }\\n}\\n\\nfragment ResourcePolicyCard_project_resource_policy on ProjectResourcePolicy {\\n  id\\n  name\\n  max_vfolder_size\\n  ...ProjectResourcePolicySettingModalFragment\\n}\\n\\nfragment ResourcePolicyCard_user_resource_policy on UserResourcePolicy {\\n  id\\n  name\\n  max_vfolder_size\\n  ...UserResourcePolicySettingModalFragment\\n}\\n\\nfragment UserResourcePolicySettingModalFragment on UserResourcePolicy {\\n  id\\n  name\\n  created_at\\n  max_vfolder_size\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"48491998ccff178a7d2b714b05f49115\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7acd4325686b832afcb8cccb2a539ff6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$data = {\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly \" $fragmentType\": \"StorageHostSettingsPanel_storageVolumeFrgmt\";\n};\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$key = {\n  readonly \" $data\"?: StorageHostSettingsPanel_storageVolumeFrgmt$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"2f9e5e6060806e6f9265e5cbbd325afe\";\n\nexport default node;\n","/**\n * @generated SignedSource<<bea84757b131fab45e7ddab986f56800>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type CreateUserResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type UserResourcePolicySettingModalCreateMutation$variables = {\n  name: string;\n  props: CreateUserResourcePolicyInput;\n};\nexport type UserResourcePolicySettingModalCreateMutation$data = {\n  readonly create_user_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n    readonly resource_policy: {\n      readonly max_vfolder_size: any | null;\n    } | null;\n  } | null;\n};\nexport type UserResourcePolicySettingModalCreateMutation = {\n  response: UserResourcePolicySettingModalCreateMutation$data;\n  variables: UserResourcePolicySettingModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"CreateUserResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"create_user_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"resource_policy\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_vfolder_size\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"4a3be550849e48eea509656b8e21cefd\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicySettingModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserResourcePolicySettingModalCreateMutation(\\n  $name: String!\\n  $props: CreateUserResourcePolicyInput!\\n) {\\n  create_user_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n    resource_policy {\\n      max_vfolder_size\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"72d37eb1ea7d8204010443f404c627eb\";\n\nexport default node;\n","/**\n * @generated SignedSource<<a0948a0f2e44a51e2103e95eae83b900>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserResourcePolicySettingModalFragment$data = {\n  readonly created_at: any;\n  readonly id: any;\n  readonly max_vfolder_size: any | null;\n  readonly name: string;\n  readonly \" $fragmentType\": \"UserResourcePolicySettingModalFragment\";\n};\nexport type UserResourcePolicySettingModalFragment$key = {\n  readonly \" $data\"?: UserResourcePolicySettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"UserResourcePolicySettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"UserResourcePolicySettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_size\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"UserResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"00ce66ded6bf021a4faadaa78814ccf4\";\n\nexport default node;\n","/**\n * @generated SignedSource<<d5225ea9e7e68609387b203df5c90d3c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyUserResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type UserResourcePolicySettingModalModifyMutation$variables = {\n  name: string;\n  props: ModifyUserResourcePolicyInput;\n};\nexport type UserResourcePolicySettingModalModifyMutation$data = {\n  readonly modify_user_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type UserResourcePolicySettingModalModifyMutation = {\n  response: UserResourcePolicySettingModalModifyMutation$data;\n  variables: UserResourcePolicySettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyUserResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_user_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f33ed379f4871e357183803b340a938a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserResourcePolicySettingModalModifyMutation(\\n  $name: String!\\n  $props: ModifyUserResourcePolicyInput!\\n) {\\n  modify_user_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d50cbcfb63bfd30da81fea8968bb6436\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2d16a06beb2bd16bb0eb53daff4dc169>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserSelectorQuery$variables = {\n  filter?: string | null;\n  limit: number;\n  offset: number;\n};\nexport type UserSelectorQuery$data = {\n  readonly user_list: {\n    readonly items: ReadonlyArray<{\n      readonly id: string | null;\n      readonly is_active: boolean | null;\n      readonly resource_policy: string | null;\n      readonly username: string | null;\n    } | null>;\n  } | null;\n};\nexport type UserSelectorQuery = {\n  response: UserSelectorQuery$data;\n  variables: UserSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"filter\",\n        \"variableName\": \"filter\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"limit\",\n        \"variableName\": \"limit\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"offset\",\n        \"variableName\": \"offset\"\n      }\n    ],\n    \"concreteType\": \"UserList\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_list\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"items\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"is_active\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"username\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"resource_policy\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"09dbd9bf5dab92b023be3c3c1401a57e\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSelectorQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $filter: String\\n) {\\n  user_list(limit: $limit, offset: $offset, filter: $filter, is_active: true) {\\n    items {\\n      id\\n      is_active\\n      username\\n      resource_policy\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"ba16f5707f025478e8739eed645dc2f9\";\n\nexport default node;\n","export const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client?.newSignedRequest(method, url, body, null);\n  return client?._wrapWithPromise(request);\n};\n\n/**\n * Convert file size with binary unit to human readable unit and value\n *\n * @param {number} bytes\n * @param {number} decimalPoint decimal point set to 2 as a default\n * @return {string} converted file size to human readable value\n */\nexport const _humanReadableDecimalSize = (bytes = 0, decimalPoint = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = Math.pow(10, 3);\n  decimalPoint = decimalPoint < 0 ? 0 : decimalPoint;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  let i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) + ' ' + sizes[i];\n};\n\nexport const _humanReadableBinarySize = (bytes = 0, decimalPoint = 2, compact = false) => {\n  if (!bytes) return 0;\n  if (typeof bytes === 'string') bytes = parseInt(bytes);\n  const k = Math.pow(2, 10);\n  let i;\n  let unitList;\n  decimalPoint = decimalPoint < 0 || compact ? 0 : decimalPoint;\n  i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  if (compact) {\n    unitList = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei'];\n  } else {\n    unitList = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB'];\n  }\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) + ' ' + unitList[i];\n}\n\nexport const GBToBytes = (value = 0) => {\n  const gigabyte = Math.pow(10, 9);\n  return Math.round(gigabyte * value);\n}\n\nexport const bytesToGB = (bytes: number, decimalPoint = 2) => {\n  if (bytes === null || bytes === undefined) return \"Unlimited\";\n  if (!bytes) return bytes;\n  return (bytes / 10 ** 9).toFixed(decimalPoint);\n}\n\nexport type QuotaScopeType = \"project\" | \"user\";\nexport const addQuotaScopeTypePrefix = (type: QuotaScopeType, str: string) => {\n  if (str === \"\" || str === undefined) return \"\";\n  if (str.startsWith(`${type}:`)) return str;\n  return `${type}:${str}`;\n}","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = useDateISOState;\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener(\"backend-ai-group-changed\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-group-changed\", listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: \"backendai-metadata-for-suspense\",\n    queryFn: () => {\n      return fetch(\"resources/image_metadata.json\")\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          }\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    console.log(imageName);\n    const specs = imageName.split(\"/\");\n\n    const [key, tag] = (specs[2] || specs[1]).split(\":\");\n    const tags = tag.split(\"-\");\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = \"resources/icons/\") => {\n        if (!imageName) return \"default.png\";\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key].icon !== undefined\n            ? metadata?.imageInfo[key].icon\n            : \"default.png\")\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n    },\n  ] as const;\n};\n","import { useFragment } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { StorageHostResourcePanelFragment$key } from \"./__generated__/StorageHostResourcePanelFragment.graphql\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport { theme, Progress, Card, Descriptions } from \"antd\";\n\nimport { _humanReadableDecimalSize } from \"../helper/index\";\nimport Flex from \"./Flex\";\nimport { useWebComponentInfo } from \"./DefaultProviders\";\n\nconst { Meta } = Card;\n\nconst usageIndicatorColor = (percentage: number) => {\n  return percentage < 70\n    ? \"rgba(58, 178, 97, 1)\"\n    : percentage < 90\n    ? \"rgb(223, 179, 23)\"\n    : \"#ef5350\";\n};\n\nconst StorageHostResourcePanel: React.FC<{\n  storageVolumeFrgmt: StorageHostResourcePanelFragment$key | null;\n}> = ({ storageVolumeFrgmt: resourceFrgmt }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const { moveTo } = useWebComponentInfo();\n\n  const resource = useFragment(\n    graphql`\n      fragment StorageHostResourcePanelFragment on StorageVolume {\n        id\n        backend\n        capabilities\n        path\n        usage\n      }\n    `,\n    resourceFrgmt\n  );\n\n  const parsedUsage = JSON.parse(resource?.usage || \"{}\");\n  const usedBytes = parsedUsage?.used_bytes;\n  const capacityBytes = parsedUsage?.capacity_bytes;\n  const usageRatio = capacityBytes > 0 ? usedBytes / capacityBytes : 0;\n  const storageUsage = {\n    used_bytes: usedBytes,\n    capacity_bytes: capacityBytes,\n    percent: Number((usageRatio * 100).toFixed(1)),\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Card title={t(\"storageHost.Resource\")}>\n        <Flex>\n          <Card bordered={false}>\n            <Meta title={t(\"storageHost.Usage\")}></Meta>\n            <Flex style={{ margin: token.marginSM, gap: token.margin }}>\n              {storageUsage.percent < 100 ? (\n                <Progress\n                  type=\"circle\"\n                  size={120}\n                  strokeWidth={15}\n                  percent={storageUsage?.percent}\n                  strokeColor={usageIndicatorColor(storageUsage?.percent)}\n                ></Progress>\n              ) : (\n                <Progress\n                  type=\"circle\"\n                  size={120}\n                  strokeWidth={15}\n                  percent={storageUsage?.percent}\n                  status=\"exception\"\n                ></Progress>\n              )}\n              <Descriptions column={1} style={{ marginLeft: 20 }}>\n                <Descriptions.Item label={t(\"storageHost.Total\")}>\n                  {_humanReadableDecimalSize(storageUsage?.used_bytes)}\n                </Descriptions.Item>\n                <Descriptions.Item label={t(\"storageHost.Used\")}>\n                  {_humanReadableDecimalSize(storageUsage?.capacity_bytes)}\n                </Descriptions.Item>\n              </Descriptions>\n            </Flex>\n          </Card>\n          <Card bordered={false}>\n            <Meta title={t(\"storageHost.Detail\")}></Meta>\n            <Descriptions column={1} style={{ marginTop: 20 }}>\n              <Descriptions.Item label={t(\"agent.Endpoint\")}>\n                {resource?.path}\n              </Descriptions.Item>\n              <Descriptions.Item label={t(\"agent.BackendType\")}>\n                {resource?.backend}\n              </Descriptions.Item>\n              <Descriptions.Item label={t(\"agent.Capabilities\")}>\n                {resource?.capabilities?.join(\",\")}\n              </Descriptions.Item>\n            </Descriptions>\n          </Card>\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n\nexport default StorageHostResourcePanel;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { ProjectSelectorQuery } from \"./__generated__/ProjectSelectorQuery.graphql\";\n\nimport _ from \"lodash\";\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCurrentProjectValue } from \"../hooks\";\n\ninterface Props extends SelectProps {\n  onSelectProject?: (project: any) => void;\n}\n\nconst ProjectSelector: React.FC<Props> = ({\n  onSelectProject,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n  const curProject = useCurrentProjectValue();\n\n  const { projects } = useLazyLoadQuery<ProjectSelectorQuery>(\n    graphql`\n      query ProjectSelectorQuery($domain_name: String) {\n        projects: groups(domain_name: $domain_name, is_active: true) {\n          id\n          is_active\n          name\n          resource_policy\n        }\n      }\n    `,\n    {\n      domain_name: curProject?.name,\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectProject?.(option);\n      }}\n      placeholder={t(\"storageHost.quotaSettings.SelectProject\")}\n      {...selectProps}\n    >\n      {_.map(projects, (project) => {\n        return (\n          <Select.Option\n            key={project?.id}\n            projectId={project?.id}\n            projectResourcePolicy={project?.resource_policy}\n          >\n            {project?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default ProjectSelector;\n","import React, { startTransition, useState } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { UserSelectorQuery } from \"./__generated__/UserSelectorQuery.graphql\";\n\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\n\ninterface Props extends SelectProps {\n  onSelectUser?: (user: any) => void;\n  limit?: number;\n  currentPage?: number;\n  pageSize?: number;\n}\n\nconst UserSelector: React.FC<Props> = ({\n  onSelectUser,\n  limit = 50,\n  currentPage = 1,\n  pageSize = 50,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n  const [search, setSearch] = useState<string>(\"\");\n\n  const { user_list } = useLazyLoadQuery<UserSelectorQuery>(\n    graphql`\n      query UserSelectorQuery($limit: Int!, $offset: Int!, $filter: String) {\n        user_list(\n          limit: $limit\n          offset: $offset\n          filter: $filter\n          is_active: true\n        ) {\n          items {\n            id\n            is_active\n            username\n            resource_policy\n          }\n        }\n      }\n    `,\n    {\n      limit: pageSize,\n      offset: (currentPage - 1) * pageSize,\n      filter: search?.length === 0 ? null : 'username ilike \"%' + search + '%\"',\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      filterOption={false}\n      onSearch={(value) => {\n        startTransition(() => {\n          setSearch(value);\n        });\n      }}\n      onChange={(value, option) => {\n        onSelectUser?.(option);\n      }}\n      showSearch\n      placeholder={t(\"storageHost.quotaSettings.SelectUser\")}\n      {...selectProps}\n    >\n      {_.map(user_list?.items, (user) => {\n        return (\n          <Select.Option\n            key={user?.id}\n            userId={user?.id}\n            userResourcePolicy={user?.resource_policy}\n          >\n            {user?.username}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default UserSelector;\n","import React from \"react\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { ProjectResourcePolicySettingModalFragment$key } from \"./__generated__/ProjectResourcePolicySettingModalFragment.graphql\";\nimport { ProjectResourcePolicySettingModalCreateMutation } from \"./__generated__/ProjectResourcePolicySettingModalCreateMutation.graphql\";\nimport { ProjectResourcePolicySettingModalModifyMutation } from \"./__generated__/ProjectResourcePolicySettingModalModifyMutation.graphql\";\n\nimport { Modal, ModalProps, Form, Input, message, Alert } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { GBToBytes, bytesToGB } from \"../helper\";\n\ninterface Props extends ModalProps {\n  projectResourcePolicyFrgmt: ProjectResourcePolicySettingModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst ProjectResourcePolicySettingModal: React.FC<Props> = ({\n  projectResourcePolicyFrgmt: resourcePolicyFrgmt,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const projectResourcePolicyInfo = useFragment(\n    graphql`\n      fragment ProjectResourcePolicySettingModalFragment on ProjectResourcePolicy {\n        id\n        name\n        created_at\n        max_vfolder_size\n      }\n    `,\n    resourcePolicyFrgmt\n  );\n\n  const [\n    commitCreateProjectResourcePolicy,\n    isInFlightCommitCreateProjectResourcePolicy,\n  ] = useMutation<ProjectResourcePolicySettingModalCreateMutation>(graphql`\n    mutation ProjectResourcePolicySettingModalCreateMutation(\n      $name: String!\n      $props: CreateProjectResourcePolicyInput!\n    ) {\n      create_project_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n        resource_policy {\n          max_vfolder_size\n        }\n      }\n    }\n  `);\n\n  const [\n    commitModifyProjectResourcePolicy,\n    isInFlightCommitModifyProjectResourcePolicy,\n  ] = useMutation<ProjectResourcePolicySettingModalModifyMutation>(graphql`\n    mutation ProjectResourcePolicySettingModalModifyMutation(\n      $name: String!\n      $props: ModifyProjectResourcePolicyInput!\n    ) {\n      modify_project_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      if (\n        projectResourcePolicyInfo?.name &&\n        projectResourcePolicyInfo?.max_vfolder_size\n      ) {\n        commitModifyProjectResourcePolicy({\n          variables: {\n            name: projectResourcePolicyInfo?.name,\n            props: {\n              max_vfolder_size: GBToBytes(values?.max_vfolder_size),\n            },\n          },\n          onCompleted(response) {\n            if (response?.modify_project_resource_policy?.ok) {\n              message.success(\n                t(\"storageHost.ResourcePolicySuccessfullyUpdated\")\n              );\n            } else {\n              message.error(response?.modify_project_resource_policy?.msg);\n            }\n            onRequestClose();\n          },\n          onError(error) {\n            console.log(error);\n            message.error(error.message);\n          },\n        });\n      } else {\n        //   commitCreateProjectResourcePolicy({\n        //     variables: {\n        //       // TODO: Apply multiple resource policy\n        //       // Create a project resource policy with the same name as the project name\n        //       name: projectResourcePolicy || \"\",\n        //       props: {\n        //         max_vfolder_size: GBToBytes(values?.max_vfolder_size),\n        //       },\n        //     },\n        //     onCompleted(response) {\n        //       if (response?.create_project_resource_policy?.ok) {\n        //         message.success(\n        //           t(\"storageHost.ResourcePolicySuccessfullyCreated\")\n        //         );\n        //       } else {\n        //         message.error(response?.create_project_resource_policy?.msg);\n        //       }\n        //       onRequestClose();\n        //     },\n        //     onError(error) {\n        //       console.log(error);\n        //       message.error(error.message);\n        //     },\n        //   });\n      }\n    });\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      title={t(\"storageHost.ResourcePolicySettings\")}\n      onOk={_onOk}\n    >\n      <Alert\n        message={t(\"storageHost.BeCarefulToSetProjectResourcePolicy\")}\n        type=\"warning\"\n        showIcon\n        style={{ marginTop: 20, marginBottom: 25 }}\n      />\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        initialValues={{\n          id: projectResourcePolicyInfo?.id,\n          name: projectResourcePolicyInfo?.name,\n          created_at: projectResourcePolicyInfo?.created_at,\n          max_vfolder_size:\n            projectResourcePolicyInfo?.max_vfolder_size === -1\n              ? null\n              : bytesToGB(projectResourcePolicyInfo?.max_vfolder_size),\n        }}\n      >\n        <Form.Item\n          name=\"max_vfolder_size\"\n          label={t(\"storageHost.MaxFolderSize\")}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t(\"storageHost.quotaSettings.AllowNumberAndDot\") ||\n                \"Allows numbers and .(dot) only\",\n            },\n          ]}\n        >\n          <Input addonAfter=\"GB\" type=\"number\" step={0.25} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ProjectResourcePolicySettingModal;\n","import React from \"react\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { UserResourcePolicySettingModalFragment$key } from \"./__generated__/UserResourcePolicySettingModalFragment.graphql\";\nimport { UserResourcePolicySettingModalCreateMutation } from \"./__generated__/UserResourcePolicySettingModalCreateMutation.graphql\";\nimport { UserResourcePolicySettingModalModifyMutation } from \"./__generated__/UserResourcePolicySettingModalModifyMutation.graphql\";\n\nimport { Modal, ModalProps, Form, Input, message, Alert } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { GBToBytes, bytesToGB } from \"../helper\";\n\ninterface Props extends ModalProps {\n  // userResourcePolicy: string;\n  userResourcePolicyFrgmt: UserResourcePolicySettingModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst UserResourcePolicySettingModal: React.FC<Props> = ({\n  userResourcePolicyFrgmt: resourcePolicyFrgmt,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const userResourcePolicyInfo = useFragment(\n    graphql`\n      fragment UserResourcePolicySettingModalFragment on UserResourcePolicy {\n        id\n        name\n        created_at\n        max_vfolder_size\n      }\n    `,\n    resourcePolicyFrgmt\n  );\n\n  const [\n    commitCreateUserResourcePolicy,\n    isInFlightCommitCreateUserResourcePolicy,\n  ] = useMutation<UserResourcePolicySettingModalCreateMutation>(graphql`\n    mutation UserResourcePolicySettingModalCreateMutation(\n      $name: String!\n      $props: CreateUserResourcePolicyInput!\n    ) {\n      create_user_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n        resource_policy {\n          max_vfolder_size\n        }\n      }\n    }\n  `);\n\n  const [\n    commitModifyUserResourcePolicy,\n    isInFlightCommitModifyUserResourcePolicy,\n  ] = useMutation<UserResourcePolicySettingModalModifyMutation>(graphql`\n    mutation UserResourcePolicySettingModalModifyMutation(\n      $name: String!\n      $props: ModifyUserResourcePolicyInput!\n    ) {\n      modify_user_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      if (userResourcePolicyInfo?.name) {\n        commitModifyUserResourcePolicy({\n          variables: {\n            name: userResourcePolicyInfo?.name,\n            props: {\n              max_vfolder_size: GBToBytes(values?.max_vfolder_size),\n            },\n          },\n          onCompleted(response) {\n            if (response.modify_user_resource_policy?.ok) {\n              message.success(\n                t(\"storageHost.ResourcePolicySuccessfullyUpdated\")\n              );\n            } else {\n              message.error(response?.modify_user_resource_policy?.msg);\n            }\n            onRequestClose();\n          },\n          onError(error) {\n            console.log(error);\n            message.error(error?.message);\n          },\n        });\n      } else {\n        // commitCreateUserResourcePolicy({\n        //   variables: {\n        //     // TODO: Apply multiple resource policy\n        //     // Create a user resource policy with the same name as the user name\n        //     name: userResourcePolicy || \"\",\n        //     props: {\n        //       max_vfolder_size: GBToBytes(values?.max_vfolder_size),\n        //     },\n        //   },\n        //   onCompleted(response) {\n        //     if (response?.create_user_resource_policy?.ok) {\n        //       message.success(\n        //         t(\"storageHost.ResourcePolicySuccessfullyCreated\")\n        //       );\n        //     } else {\n        //       message.error(response?.create_user_resource_policy?.msg);\n        //     }\n        //     onRequestClose();\n        //   },\n        //   onError(error) {\n        //     console.log(error);\n        //     message.error(error?.message);\n        //   },\n        // });\n      }\n    });\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      title={t(\"storageHost.ResourcePolicySettings\")}\n      onOk={_onOk}\n    >\n      <Alert\n        message={t(\"storageHost.BeCarefulToSetUserResourcePolicy\")}\n        type=\"warning\"\n        showIcon\n        style={{ marginTop: 20, marginBottom: 25 }}\n      />\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        initialValues={{\n          id: userResourcePolicyInfo?.id,\n          name: userResourcePolicyInfo?.name,\n          created_at: userResourcePolicyInfo?.created_at,\n          max_vfolder_size:\n            userResourcePolicyInfo?.max_vfolder_size === -1\n              ? null\n              : bytesToGB(userResourcePolicyInfo?.max_vfolder_size),\n        }}\n      >\n        <Form.Item\n          name=\"max_vfolder_size\"\n          label={t(\"storageHost.MaxFolderSize\")}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t(\"storageHost.quotaSettings.AllowNumberAndDot\") ||\n                \"Allows numbers and .(dot) only\",\n            },\n          ]}\n        >\n          <Input addonAfter=\"GB\" type=\"number\" step={0.25} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UserResourcePolicySettingModal;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { ResourcePolicyCardModifyProjectMutation } from \"./__generated__/ResourcePolicyCardModifyProjectMutation.graphql\";\nimport { ResourcePolicyCardModifyUserMutation } from \"./__generated__/ResourcePolicyCardModifyUserMutation.graphql\";\n\nimport {\n  Card,\n  CardProps,\n  Descriptions,\n  Dropdown,\n  Empty,\n  Modal,\n  message,\n} from \"antd\";\nimport {\n  EditFilled,\n  EllipsisOutlined,\n  UndoOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport ProjectResourcePolicySettingModal from \"./ProjectResourcePolicySettingModal\";\nimport UserResourcePolicySettingModal from \"./UserResourcePolicySettingModal\";\n\nimport { _humanReadableDecimalSize } from \"../helper/index\";\nimport { useTranslation } from \"react-i18next\";\nimport { useToggle } from \"ahooks\";\nimport { ResourcePolicyCard_project_resource_policy$key } from \"./__generated__/ResourcePolicyCard_project_resource_policy.graphql\";\nimport { ResourcePolicyCard_user_resource_policy$key } from \"./__generated__/ResourcePolicyCard_user_resource_policy.graphql\";\n\ninterface Props extends CardProps {\n  projectResourcePolicyFrgmt: ResourcePolicyCard_project_resource_policy$key | null;\n  userResourcePolicyFrgmt: ResourcePolicyCard_user_resource_policy$key | null;\n  onChangePolicy: () => void;\n}\nconst ResourcePolicyCard: React.FC<Props> = ({\n  projectResourcePolicyFrgmt,\n  userResourcePolicyFrgmt,\n  onChangePolicy,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [\n    visibleProjectResourcePolicySettingModal,\n    { toggle: toggleProjectResourcePolicySettingModal },\n  ] = useToggle(false);\n  const [\n    visibleUserResourcePolicySettingModal,\n    { toggle: toggleUserResourcePolicySettingModal },\n  ] = useToggle(false);\n\n  const project_resource_policy = useFragment(\n    graphql`\n      fragment ResourcePolicyCard_project_resource_policy on ProjectResourcePolicy {\n        id\n        name\n        max_vfolder_size\n        ...ProjectResourcePolicySettingModalFragment\n      }\n    `,\n    projectResourcePolicyFrgmt\n  );\n  const user_resource_policy = useFragment(\n    graphql`\n      fragment ResourcePolicyCard_user_resource_policy on UserResourcePolicy {\n        id\n        name\n        max_vfolder_size\n        ...UserResourcePolicySettingModalFragment\n      }\n    `,\n    userResourcePolicyFrgmt\n  );\n\n  const [\n    commitModifyProjectResourcePolicy,\n    // isInFlightCommitModifyProjectResourcePolicy,\n  ] = useMutation<ResourcePolicyCardModifyProjectMutation>(graphql`\n    mutation ResourcePolicyCardModifyProjectMutation(\n      $name: String!\n      $props: ModifyProjectResourcePolicyInput!\n    ) {\n      modify_project_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const [\n    commitModifyUserResourcePolicy,\n    // isInFlightCommitModifyUserResourcePolicy,\n  ] = useMutation<ResourcePolicyCardModifyUserMutation>(graphql`\n    mutation ResourcePolicyCardModifyUserMutation(\n      $name: String!\n      $props: ModifyUserResourcePolicyInput!\n    ) {\n      modify_user_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const confirmUnsetResourcePolicy = () => {\n    Modal.confirm({\n      title: t(\"storageHost.UnsetResourcePolicy\"),\n      content: t(\"storageHost.DoYouWantToUseDefaultValue\"),\n      icon: <ExclamationCircleOutlined />,\n      okText: t(\"button.Confirm\"),\n      onOk() {\n        if (project_resource_policy) {\n          commitModifyProjectResourcePolicy({\n            variables: {\n              name: project_resource_policy.name,\n              props: {\n                max_vfolder_size: -1,\n              },\n            },\n            onCompleted(response) {\n              if (!response?.modify_project_resource_policy?.ok) {\n                message.error(response?.modify_project_resource_policy?.msg);\n              } else {\n                onChangePolicy();\n                message.success(\n                  t(\"storageHost.ResourcePolicySuccessfullyUpdated\")\n                );\n              }\n            },\n            onError(error) {\n              message.error(error?.message);\n            },\n          });\n        } else if (user_resource_policy) {\n          commitModifyUserResourcePolicy({\n            variables: {\n              name: user_resource_policy.name,\n              props: {\n                max_vfolder_size: -1,\n              },\n            },\n            onCompleted(response) {\n              if (!response?.modify_user_resource_policy?.ok) {\n                message.error(response?.modify_user_resource_policy?.msg);\n              } else {\n                onChangePolicy();\n                message.success(\n                  t(\"storageHost.ResourcePolicySuccessfullyUpdated\")\n                );\n              }\n            },\n            onError(error) {\n              message.error(error?.message);\n            },\n          });\n        } else {\n          message.error(t(\"storageHost.SelectProjectOrUserFirst\"));\n        }\n      },\n    });\n  };\n\n  return (\n    <>\n      <Card\n        extra={\n          project_resource_policy || user_resource_policy ? (\n            <Dropdown\n              placement=\"bottomRight\"\n              menu={{\n                items: [\n                  {\n                    key: \"edit\",\n                    label: t(\"button.Edit\"),\n                    icon: <EditFilled />,\n                    onClick: () => {\n                      project_resource_policy\n                        ? toggleProjectResourcePolicySettingModal()\n                        : toggleUserResourcePolicySettingModal();\n                    },\n                  },\n                  // {\n                  //   key: \"delete\",\n                  //   label: t(\"button.Delete\"),\n                  //   icon: <DeleteFilled />,\n                  //   danger: true,\n                  //   onClick: () => confirmDeleteResourcePolicy(),\n                  // },\n                  {\n                    key: \"unset\",\n                    label: t(\"button.Unset\"),\n                    icon: <UndoOutlined />,\n                    danger: true,\n                    onClick: () => confirmUnsetResourcePolicy(),\n                  },\n                ],\n              }}\n            >\n              <EllipsisOutlined />\n            </Dropdown>\n          ) : null\n        }\n        title={t(\"storageHost.ResourcePolicy\")}\n        bordered={false}\n        headStyle={{ borderBottom: \"none\" }}\n        style={{ marginBottom: 10 }}\n      >\n        <Descriptions>\n          {project_resource_policy || user_resource_policy ? (\n            <Descriptions.Item label={t(\"storageHost.MaxFolderSize\")}>\n              {project_resource_policy\n                ? project_resource_policy &&\n                  project_resource_policy?.max_vfolder_size !== -1\n                  ? _humanReadableDecimalSize(\n                      project_resource_policy?.max_vfolder_size\n                    )\n                  : t(\"resourcePolicy.Unlimited\")\n                : user_resource_policy &&\n                  user_resource_policy?.max_vfolder_size !== -1\n                ? _humanReadableDecimalSize(\n                    user_resource_policy?.max_vfolder_size\n                  )\n                : t(\"resourcePolicy.Unlimited\")}\n            </Descriptions.Item>\n          ) : (\n            <Descriptions.Item>\n              <Empty\n                style={{ width: \"100%\" }}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={\n                  <div>{t(\"storageHost.quotaSettings.SelectFirst\")}</div>\n                }\n              />\n            </Descriptions.Item>\n          )}\n        </Descriptions>\n      </Card>\n      <ProjectResourcePolicySettingModal\n        open={visibleProjectResourcePolicySettingModal}\n        destroyOnClose={true}\n        onCancel={toggleProjectResourcePolicySettingModal}\n        onOk={toggleProjectResourcePolicySettingModal}\n        onRequestClose={() => {\n          onChangePolicy();\n          toggleProjectResourcePolicySettingModal();\n        }}\n        projectResourcePolicyFrgmt={project_resource_policy || null}\n      />\n      <UserResourcePolicySettingModal\n        open={visibleUserResourcePolicySettingModal}\n        destroyOnClose={true}\n        onCancel={toggleUserResourcePolicySettingModal}\n        onOk={toggleUserResourcePolicySettingModal}\n        userResourcePolicyFrgmt={user_resource_policy || null}\n        onRequestClose={() => {\n          onChangePolicy();\n          toggleUserResourcePolicySettingModal();\n        }}\n      />\n    </>\n  );\n};\n\nexport default ResourcePolicyCard;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { QuotaScopeCardUnsetMutation } from \"./__generated__/QuotaScopeCardUnsetMutation.graphql\";\n\nimport {\n  Card,\n  CardProps,\n  Table,\n  Button,\n  Popconfirm,\n  message,\n  Empty,\n} from \"antd\";\nimport { EditFilled, DeleteFilled, PlusOutlined } from \"@ant-design/icons\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { bytesToGB } from \"../helper/index\";\nimport { QuotaScopeCardFragment$key } from \"./__generated__/QuotaScopeCardFragment.graphql\";\n\ninterface Props extends CardProps {\n  quotaScopeFrgmt: QuotaScopeCardFragment$key | null;\n  showAddButtonWhenEmpty: boolean;\n  onClickEdit: () => void;\n}\nconst QuotaScopeCard: React.FC<Props> = ({\n  quotaScopeFrgmt,\n  showAddButtonWhenEmpty,\n  onClickEdit,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const quota_scope = useFragment(\n    graphql`\n      fragment QuotaScopeCardFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n        }\n        ...QuotaSettingModalFragment\n      }\n    `,\n    quotaScopeFrgmt\n  );\n\n  const [commitUnsetQuotaScope, isInFlightCommitUnsetQuotaScope] =\n    useMutation<QuotaScopeCardUnsetMutation>(\n      graphql`\n        mutation QuotaScopeCardUnsetMutation(\n          $quota_scope_id: String!\n          $storage_host_name: String!\n        ) {\n          unset_quota_scope(\n            quota_scope_id: $quota_scope_id\n            storage_host_name: $storage_host_name\n          ) {\n            quota_scope {\n              id\n              quota_scope_id\n              storage_host_name\n              details {\n                hard_limit_bytes\n              }\n            }\n          }\n        }\n      `\n    );\n\n  const selectProjectOrUserFirst = (\n    <Empty\n      style={{ width: \"100%\" }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={<div>{t(\"storageHost.quotaSettings.SelectFirst\")}</div>}\n    />\n  );\n\n  const addQuotaConfigsWhenEmpty = (\n    <Empty\n      style={{ width: \"100%\" }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={\n        <>\n          <div style={{ margin: 10 }}>\n            {t(\"storageHost.quotaSettings.ClickSettingButton\")}\n          </div>\n          <Button\n            icon={<PlusOutlined />}\n            onClick={() => onClickEdit && onClickEdit()}\n          >\n            {t(\"storageHost.quotaSettings.AddQuotaConfigs\")}\n          </Button>\n        </>\n      }\n    />\n  );\n\n  return (\n    <>\n      <Card bordered={false}>\n        <Table\n          columns={[\n            {\n              title: \"ID\",\n              dataIndex: \"quota_scope_id\",\n              key: \"quota_scope_id\",\n              render: (value) => <code>{value}</code>,\n            },\n            {\n              title: t(\"storageHost.HardLimit\") + \" (GB)\",\n              dataIndex: [\"details\", \"hard_limit_bytes\"],\n              key: \"hard_limit_bytes\",\n              render: (value) => <>{bytesToGB(value)}</>,\n            },\n            {\n              title: t(\"general.Control\"),\n              key: \"control\",\n              render: () => (\n                <>\n                  <Button\n                    type=\"text\"\n                    icon={<EditFilled />}\n                    onClick={() => onClickEdit && onClickEdit()}\n                  >\n                    {t(\"button.Edit\")}\n                  </Button>\n                  <Popconfirm\n                    title={t(\"storageHost.quotaSettings.UnsetCustomSettings\")}\n                    description={t(\n                      \"storageHost.quotaSettings.ConfirmUnsetCustomQuota\"\n                    )}\n                    placement=\"bottom\"\n                    onConfirm={() => {\n                      if (quota_scope) {\n                        commitUnsetQuotaScope({\n                          variables: {\n                            quota_scope_id: quota_scope.quota_scope_id,\n                            storage_host_name: quota_scope.storage_host_name,\n                          },\n                          onCompleted() {\n                            message.success(\n                              t(\n                                \"storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated\"\n                              )\n                            );\n                          },\n                          onError(error) {\n                            message.error(error?.message);\n                          },\n                        });\n                      }\n                    }}\n                  >\n                    <Button\n                      loading={isInFlightCommitUnsetQuotaScope}\n                      danger\n                      icon={<DeleteFilled />}\n                    >\n                      {t(\"button.Unset\")}\n                    </Button>\n                  </Popconfirm>\n                </>\n              ),\n            },\n          ]}\n          dataSource={quota_scope ? [quota_scope] : []}\n          locale={{\n            emptyText: showAddButtonWhenEmpty\n              ? addQuotaConfigsWhenEmpty\n              : selectProjectOrUserFirst,\n          }}\n          pagination={false}\n        />\n      </Card>\n    </>\n  );\n};\n\nexport default QuotaScopeCard;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { QuotaSettingModalFragment$key } from \"./__generated__/QuotaSettingModalFragment.graphql\";\nimport { QuotaSettingModalSetMutation } from \"./__generated__/QuotaSettingModalSetMutation.graphql\";\n\nimport { Modal, ModalProps, Form, Input, message } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { GBToBytes, bytesToGB } from \"../helper\";\n\ninterface Props extends ModalProps {\n  quotaScopeFrgmt?: QuotaSettingModalFragment$key | null;\n  onRequestClose: () => void;\n  resourcePolicyMaxVFolderSize?: number;\n}\n\nconst QuotaSettingModal: React.FC<Props> = ({\n  quotaScopeFrgmt = null,\n  resourcePolicyMaxVFolderSize,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const quotaScope = useFragment(\n    graphql`\n      fragment QuotaSettingModalFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n        }\n      }\n    `,\n    quotaScopeFrgmt\n  );\n\n  const [commitSetQuotaScope, isInFlightCommitSetQuotaScope] =\n    useMutation<QuotaSettingModalSetMutation>(graphql`\n      mutation QuotaSettingModalSetMutation(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $props: QuotaScopeInput!\n      ) {\n        set_quota_scope(\n          quota_scope_id: $quota_scope_id\n          storage_host_name: $storage_host_name\n          props: $props\n        ) {\n          quota_scope {\n            id\n            quota_scope_id\n            storage_host_name\n            details {\n              hard_limit_bytes\n            }\n          }\n        }\n      }\n    `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      commitSetQuotaScope({\n        variables: {\n          quota_scope_id: quotaScope?.quota_scope_id || \"\",\n          storage_host_name: quotaScope?.storage_host_name || \"\",\n          props: {\n            hard_limit_bytes: GBToBytes(values?.hard_limit_bytes),\n          },\n        },\n        onCompleted(response) {\n          if (response?.set_quota_scope?.quota_scope?.id) {\n            message.success(\n              t(\"storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated\")\n            );\n          } else {\n            message.error(t(\"dialog.ErrorOccurred\"));\n          }\n          onRequestClose();\n        },\n        onError(error) {\n          console.log(error);\n          message.error(error?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitSetQuotaScope}\n      onCancel={onRequestClose}\n      title={t(\"storageHost.quotaSettings.QuotaSettings\")}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        style={{ marginBottom: 40, marginTop: 20 }}\n      >\n        <Form.Item\n          name=\"hard_limit_bytes\"\n          label={t(\"storageHost.HardLimit\")}\n          initialValue={bytesToGB(quotaScope?.details?.hard_limit_bytes)}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t(\"storageHost.quotaSettings.AllowNumberAndDot\") ||\n                \"Allows numbers and .(dot) only\",\n            },\n          ]}\n        >\n          <Input\n            addonAfter=\"GB\"\n            type=\"number\"\n            step={0.25}\n            style={{ width: \"70%\" }}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default QuotaSettingModal;\n","import React, { useState, useTransition } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { QuotaScopeType, addQuotaScopeTypePrefix } from \"../helper/index\";\n\nimport { Card, Empty, Spin, theme } from \"antd\";\n\nimport Flex from \"./Flex\";\nimport ProjectSelector from \"./ProjectSelector\";\nimport UserSelector from \"./UserSelector\";\nimport ResourcePolicyCard from \"./ResourcePolicyCard\";\nimport QuotaScopeCard from \"./QuotaScopeCard\";\nimport { useFragment, useLazyLoadQuery } from \"react-relay\";\n\nimport graphql from \"babel-plugin-relay/macro\";\nimport { StorageHostSettingsPanel_storageVolumeFrgmt$key } from \"./__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql\";\nimport { StorageHostSettingsPanelQuery } from \"./__generated__/StorageHostSettingsPanelQuery.graphql\";\nimport QuotaSettingModal from \"./QuotaSettingModal\";\nimport { useToggle } from \"ahooks\";\nimport { useUpdatableState } from \"../hooks\";\n\ninterface StorageHostSettingsPanelProps {\n  extraFetchKey?: string;\n  storageVolumeFrgmt: StorageHostSettingsPanel_storageVolumeFrgmt$key | null;\n}\nconst StorageHostSettingsPanel: React.FC<StorageHostSettingsPanelProps> = ({\n  storageVolumeFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const storageVolume = useFragment(\n    graphql`\n      fragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\n        id\n        capabilities\n      }\n    `,\n    storageVolumeFrgmt\n  );\n\n  const isQuotaSupported =\n    storageVolume?.capabilities?.includes(\"quota\") ?? false;\n\n  const [isPending, startTransition] = useTransition();\n  const [currentSettingType, setCurrentSettingType] =\n    useState<QuotaScopeType>(\"user\");\n\n  const [selectedProjectId, setSelectedProjectId] = useState<string>();\n  const [selectedProjectResourcePolicy, setSelectedProjectResourcePolicy] =\n    useState<string>();\n  const [selectedUserId, setSelectedUserId] = useState<string>();\n  const [selectedUserResourcePolicy, setSelectedUserResourcePolicy] =\n    useState<string>();\n\n  const quotaScopeId = addQuotaScopeTypePrefix(\n    currentSettingType,\n    (currentSettingType === \"project\" ? selectedProjectId : selectedUserId) ||\n      \"\"\n  );\n\n  const [isOpenQuotaSettingModal, { toggle: toggleQuotaSettingModal }] =\n    useToggle(false);\n  const [fetchKey, updateFetchKey] = useUpdatableState(\"default\");\n\n  const { project_resource_policy, user_resource_policy, quota_scope } =\n    useLazyLoadQuery<StorageHostSettingsPanelQuery>(\n      graphql`\n        query StorageHostSettingsPanelQuery(\n          $project_resource_policy_name: String!\n          $skipProjectResourcePolicy: Boolean!\n          $user_resource_policy_name: String\n          $skipUserResourcePolicy: Boolean!\n          $quota_scope_id: String!\n          $storage_host_name: String!\n          $skipQuotaScope: Boolean!\n        ) {\n          project_resource_policy(name: $project_resource_policy_name)\n            @skip(if: $skipProjectResourcePolicy) {\n            max_vfolder_size\n            ...ResourcePolicyCard_project_resource_policy\n          }\n\n          user_resource_policy(name: $user_resource_policy_name)\n            @skip(if: $skipUserResourcePolicy) {\n            max_vfolder_size\n            ...ResourcePolicyCard_user_resource_policy\n          }\n\n          quota_scope(\n            storage_host_name: $storage_host_name\n            quota_scope_id: $quota_scope_id\n          ) @skip(if: $skipQuotaScope) {\n            ...QuotaSettingModalFragment\n            ...QuotaScopeCardFragment\n          }\n        }\n      `,\n      {\n        // project policy\n        project_resource_policy_name: selectedProjectResourcePolicy || \"\",\n        skipProjectResourcePolicy:\n          selectedProjectResourcePolicy === \"\" ||\n          selectedProjectResourcePolicy === undefined,\n\n        // user policy\n        user_resource_policy_name: selectedUserResourcePolicy || \"\",\n        skipUserResourcePolicy:\n          selectedUserResourcePolicy === \"\" ||\n          selectedUserResourcePolicy === undefined,\n\n        // quota scope\n        quota_scope_id: quotaScopeId,\n        skipQuotaScope: quotaScopeId === undefined || quotaScopeId === \"\",\n        storage_host_name: storageVolume?.id || \"\",\n      },\n      {\n        fetchPolicy: \"network-only\",\n        fetchKey: fetchKey,\n      }\n    );\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Card\n        title={t(\"storageHost.QuotaSettings\")}\n        tabList={[\n          {\n            key: \"user\",\n            tab: t(\"storageHost.ForUser\"),\n          },\n          {\n            key: \"project\",\n            tab: t(\"storageHost.ForProject\"),\n          },\n        ]}\n        activeTabKey={currentSettingType}\n        // eslint-disable-next-line\n        //@ts-ignore\n        onTabChange={(v) => {\n          startTransition(() => {\n            setCurrentSettingType(v as QuotaScopeType);\n          });\n        }}\n      >\n        {isQuotaSupported ? (\n          <>\n            <Flex justify=\"between\">\n              {currentSettingType === \"project\" ? (\n                <ProjectSelector\n                  style={{ width: \"30vw\", marginBottom: 10 }}\n                  value={selectedProjectId}\n                  onSelectProject={(project: any) => {\n                    startTransition(() => {\n                      setSelectedProjectId(project?.projectId);\n                      setSelectedProjectResourcePolicy(\n                        project?.projectResourcePolicy\n                      );\n                    });\n                  }}\n                />\n              ) : (\n                <UserSelector\n                  style={{ width: \"30vw\", marginBottom: 10 }}\n                  value={selectedUserId}\n                  onSelectUser={(user: any) => {\n                    startTransition(() => {\n                      setSelectedUserId(user?.userId);\n                      setSelectedUserResourcePolicy(user?.userResourcePolicy);\n                    });\n                  }}\n                />\n              )}\n            </Flex>\n            <Spin spinning={isPending}>\n              <ResourcePolicyCard\n                projectResourcePolicyFrgmt={\n                  currentSettingType === \"project\"\n                    ? project_resource_policy || null\n                    : null\n                }\n                userResourcePolicyFrgmt={\n                  currentSettingType === \"user\"\n                    ? user_resource_policy || null\n                    : null\n                }\n                onChangePolicy={() => {\n                  startTransition(() => {\n                    updateFetchKey();\n                  });\n                }}\n              />\n              <QuotaScopeCard\n                quotaScopeFrgmt={quota_scope || null}\n                onClickEdit={() => {\n                  toggleQuotaSettingModal();\n                }}\n                showAddButtonWhenEmpty={\n                  (currentSettingType === \"project\" && !!selectedProjectId) ||\n                  (currentSettingType === \"user\" && !!selectedUserId)\n                }\n              />\n            </Spin>\n            <QuotaSettingModal\n              open={isOpenQuotaSettingModal}\n              quotaScopeFrgmt={quota_scope || null}\n              resourcePolicyMaxVFolderSize={\n                currentSettingType === \"project\"\n                  ? project_resource_policy?.max_vfolder_size\n                  : user_resource_policy?.max_vfolder_size\n              }\n              onRequestClose={() => {\n                toggleQuotaSettingModal();\n              }}\n            />\n          </>\n        ) : (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description={t(\"storageHost.QuotaDoesNotSupported\")}\n          />\n        )}\n      </Card>\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingsPanel;\n","import React, { Suspense } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { StorageHostSettingPageQuery } from \"./__generated__/StorageHostSettingPageQuery.graphql\";\n\nimport { Breadcrumb, Typography, theme } from \"antd\";\nimport Flex from \"../components/Flex\";\nimport StorageHostResourcePanel from \"../components/StorageHostResourcePanel\";\nimport StorageHostSettingsPanel from \"../components/StorageHostSettingsPanel\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport { useWebComponentInfo } from \"../components/DefaultProviders\";\n\ninterface StorageHostSettingPageProps {\n  storageHostId: string;\n}\nconst StorageHostSettingPage: React.FC<StorageHostSettingPageProps> = ({\n  storageHostId,\n}) => {\n  const { token } = theme.useToken();\n  useSuspendedBackendaiClient();\n  const { moveTo } = useWebComponentInfo();\n  const { storage_volume } = useLazyLoadQuery<StorageHostSettingPageQuery>(\n    graphql`\n      query StorageHostSettingPageQuery($id: String) {\n        storage_volume(id: $id) {\n          id\n          capabilities\n          ...StorageHostResourcePanelFragment\n          ...StorageHostSettingsPanel_storageVolumeFrgmt\n        }\n      }\n    `,\n    {\n      id: storageHostId || \"\",\n    }\n  );\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM, gap: token.margin }}\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: \"Resources\",\n            onClick: (e) => {\n              e.preventDefault();\n              moveTo(\"/agent\");\n            },\n            href: \"/agent\",\n          },\n          {\n            title: \"Storage setting\",\n          },\n        ]}\n      ></Breadcrumb>\n      <Typography.Title level={3} style={{ margin: 0 }}>\n        {storageHostId || \"\"}\n      </Typography.Title>\n      <StorageHostResourcePanel storageVolumeFrgmt={storage_volume || null} />\n      <Suspense fallback={<div>loading...</div>}>\n        <StorageHostSettingsPanel storageVolumeFrgmt={storage_volume || null} />\n      </Suspense>\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingPage;\n","/**\n * @generated SignedSource<<283a752f4675b1e3d4fe6f0da7198984>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingPageQuery$variables = {\n  id?: string | null;\n};\nexport type StorageHostSettingPageQuery$data = {\n  readonly storage_volume: {\n    readonly capabilities: ReadonlyArray<string | null> | null;\n    readonly id: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\" | \"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n  } | null;\n};\nexport type StorageHostSettingPageQuery = {\n  response: StorageHostSettingPageQuery$data;\n  variables: StorageHostSettingPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"capabilities\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostResourcePanelFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"backend\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"path\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"821175f86743d9d81be2a55aca371919\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingPageQuery(\\n  $id: String\\n) {\\n  storage_volume(id: $id) {\\n    id\\n    capabilities\\n    ...StorageHostResourcePanelFragment\\n    ...StorageHostSettingsPanel_storageVolumeFrgmt\\n  }\\n}\\n\\nfragment StorageHostResourcePanelFragment on StorageVolume {\\n  id\\n  backend\\n  capabilities\\n  path\\n  usage\\n}\\n\\nfragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\\n  id\\n  capabilities\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"f6e77057e83b0449ef99e8918e794b24\";\n\nexport default node;\n"],"names":["removeSkipOnClientDirective","query","variables","filteredVariables","_objectSpread","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","fetchFn","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","text","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","subscribeFn","store","Store","RecordSource","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","children","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","e","_e$detail","_e$detail2","detail","window","addEventListener","removeEventListener","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","_jsx","_Fragment","RelayEnvironmentProvider","environment","_jsxs","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","StyleProvider","container","Suspense","fallback","BrowserRouter","_ref$direction","direction","_ref$wrap","_ref$justify","justify","_ref$align","align","_ref$gap","gap","style","restProps","_objectWithoutProperties","_excluded","token","transferConst","transferConstStyle","map","el","tempTxt","flexStyle","display","flexDirection","flexWrap","justifyContent","alignItems","backgroundColor","border","boxSizing","flexBasis","flexShrink","listStyle","margin","minHeight","minWidth","padding","position","textDecoration","toUpperCase","node","v0","v1","hash","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","newLineToBrElement","separatorRegExp","undefined","line","index","match","baiSignedRequestWithPromise","method","url","_ref$body","body","_humanReadableDecimalSize","bytes","decimalPoint","k","Math","pow","i","floor","log","round","parseFloat","toFixed","GBToBytes","gigabyte","bytesToGB","addQuotaScopeTypePrefix","type","useUpdatableState","initialValue","_useState3","Date","toISOString","_useState4","setValue","newValue","useCurrentProjectValue","baiClient","useSuspendedBackendaiClient","_useState5","name","current_group","id","groupIds","_useState6","project","_setProject","listener","newProjectName","document","useAnonymousBackendaiClient","api_endpoint","clientConfig","BackendAIClientConfig","BackendAIClient","useQuery","queryKey","queryFn","Promise","resolve","ready","data","Meta","Card","_resource$capabilitie","percentage","resourceFrgmt","storageVolumeFrgmt","t","resource","useFragment","_StorageHostResourcePanelFragment","require","parsedUsage","JSON","parse","usage","usedBytes","used_bytes","capacityBytes","capacity_bytes","storageUsage","percent","Number","Flex","title","bordered","marginSM","Progress","size","strokeWidth","strokeColor","status","Descriptions","column","marginLeft","label","marginTop","capabilities","join","onSelectProject","selectProps","curProject","projects","useLazyLoadQuery","_ProjectSelectorQuery","domain_name","fetchPolicy","Select","onChange","option","placeholder","_","projectId","projectResourcePolicy","resource_policy","onSelectUser","_ref$currentPage","limit","currentPage","_ref$pageSize","pageSize","search","setSearch","user_list","_UserSelectorQuery","offset","filter","filterOption","onSearch","startTransition","showSearch","items","user","userId","userResourcePolicy","username","resourcePolicyFrgmt","projectResourcePolicyFrgmt","onRequestClose","props","_Form$useForm","Form","form","projectResourcePolicyInfo","_ProjectResourcePolicySettingModalFragment","_useMutation","useMutation","_ProjectResourcePolicySettingModalCreateMutation","_useMutation2","_useMutation3","_ProjectResourcePolicySettingModalModifyMutation","_useMutation4","commitModifyProjectResourcePolicy","Modal","zIndex","destroyOnClose","onOk","validateFields","then","values","max_vfolder_size","onCompleted","response","_response$modify_proj","_response$modify_proj2","modify_project_resource_policy","ok","message","msg","onError","error","console","Alert","showIcon","marginBottom","preserve","labelCol","span","wrapperCol","validateTrigger","initialValues","created_at","rules","Input","addonAfter","step","userResourcePolicyFrgmt","userResourcePolicyInfo","_UserResourcePolicySettingModalFragment","_UserResourcePolicySettingModalCreateMutation","_UserResourcePolicySettingModalModifyMutation","commitModifyUserResourcePolicy","_response$modify_user","_response$modify_user2","modify_user_resource_policy","onChangePolicy","_useToggle","useToggle","_useToggle2","visibleProjectResourcePolicySettingModal","toggleProjectResourcePolicySettingModal","toggle","_useToggle3","_useToggle4","visibleUserResourcePolicySettingModal","toggleUserResourcePolicySettingModal","project_resource_policy","_ResourcePolicyCard_project_resource_policy","user_resource_policy","_ResourcePolicyCard_user_resource_policy","_ResourcePolicyCardModifyProjectMutation","_ResourcePolicyCardModifyUserMutation","extra","Dropdown","placement","menu","key","icon","EditFilled","onClick","UndoOutlined","danger","content","ExclamationCircleOutlined","okText","EllipsisOutlined","headStyle","borderBottom","Empty","width","image","description","ProjectResourcePolicySettingModal","open","onCancel","UserResourcePolicySettingModal","quotaScopeFrgmt","showAddButtonWhenEmpty","onClickEdit","quota_scope","_QuotaScopeCardFragment","_QuotaScopeCardUnsetMutation","commitUnsetQuotaScope","isInFlightCommitUnsetQuotaScope","selectProjectOrUserFirst","addQuotaConfigsWhenEmpty","Button","PlusOutlined","Table","columns","dataIndex","render","Popconfirm","onConfirm","quota_scope_id","storage_host_name","loading","DeleteFilled","dataSource","emptyText","pagination","_quotaScope$details","_ref$quotaScopeFrgmt","resourcePolicyMaxVFolderSize","quotaScope","_QuotaSettingModalFragment","_QuotaSettingModalSetMutation","commitSetQuotaScope","isInFlightCommitSetQuotaScope","hard_limit_bytes","_response$set_quota_s","_response$set_quota_s2","set_quota_scope","confirmLoading","details","_storageVolume$capabi","_storageVolume$capabi2","storageVolume","_StorageHostSettingsPanel_storageVolumeFrgmt","isQuotaSupported","includes","_useTransition","useTransition","_useTransition2","isPending","currentSettingType","setCurrentSettingType","selectedProjectId","setSelectedProjectId","selectedProjectResourcePolicy","setSelectedProjectResourcePolicy","_useState7","_useState8","selectedUserId","setSelectedUserId","_useState9","_useState10","selectedUserResourcePolicy","setSelectedUserResourcePolicy","quotaScopeId","isOpenQuotaSettingModal","toggleQuotaSettingModal","_useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","_useLazyLoadQuery","_StorageHostSettingsPanelQuery","project_resource_policy_name","skipProjectResourcePolicy","user_resource_policy_name","skipUserResourcePolicy","skipQuotaScope","tabList","tab","activeTabKey","onTabChange","v","ProjectSelector","UserSelector","Spin","spinning","ResourcePolicyCard","QuotaScopeCard","QuotaSettingModal","storageHostId","storage_volume","_StorageHostSettingPageQuery","Breadcrumb","preventDefault","href","Typography","level","StorageHostResourcePanel","StorageHostSettingsPanel"],"sourceRoot":""}