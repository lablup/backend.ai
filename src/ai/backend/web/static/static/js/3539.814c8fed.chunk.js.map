{"version":3,"file":"static/js/3539.814c8fed.chunk.js","mappings":"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","sources":["components/BAICodeEditor.tsx","components/SettingItem.tsx","components/SettingList.tsx","components/TableColumnsSettingModal.tsx","components/__generated__/MyKeypairInfoModalQuery.graphql.ts","hooks/useHiddenColumnKeysSetting.tsx","components/ErrorLogList.tsx","components/MyKeypairInfoModal.tsx","components/SSHKeypairGenerationModal.tsx","components/SSHKeypairManualFormModal.tsx","components/SSHKeypairManagementModal.tsx","components/ShellScriptEditModal.tsx","pages/UserSettingsPage.tsx"],"sourcesContent":["import useControllableState from '../hooks/useControllableState';\nimport { loadLanguage, LanguageName } from '@uiw/codemirror-extensions-langs';\nimport CodeMirror, { ReactCodeMirrorProps } from '@uiw/react-codemirror';\nimport { EditorView } from '@uiw/react-codemirror';\n\ninterface BAICodeEditorProps extends Omit<ReactCodeMirrorProps, 'language'> {\n  value?: string;\n  onChange?: (value: string) => void;\n  language: LanguageName;\n  editable?: boolean;\n  showLineNumbers?: boolean;\n  lineWrapping?: boolean;\n}\n\nconst BAICodeEditor: React.FC<BAICodeEditorProps> = ({\n  value,\n  onChange,\n  language = 'shell',\n  editable = false,\n  showLineNumbers = true,\n  lineWrapping = false,\n  ...CodeMirrorProps\n}) => {\n  const [script, setScript] = useControllableState<string>({\n    defaultValue: '',\n    value,\n    onChange,\n  });\n  const extensions = [loadLanguage(language)!];\n\n  return (\n    <CodeMirror\n      theme={'dark'}\n      extensions={\n        lineWrapping ? [EditorView.lineWrapping, ...extensions] : extensions\n      }\n      editable={editable}\n      readOnly={!editable}\n      basicSetup={{\n        lineNumbers: showLineNumbers,\n      }}\n      value={script}\n      onChange={(value, viewUpdate) => setScript(value)}\n      {...CodeMirrorProps}\n    />\n  );\n};\n\nexport default BAICodeEditor;\n","import Flex from './Flex';\nimport { Badge, Checkbox, Select, SelectProps, Typography, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport _ from 'lodash';\nimport React, { ReactElement, ReactNode } from 'react';\n\nexport interface SettingItemProps {\n  type: 'custom' | 'checkbox' | 'select';\n  title: string;\n  description?: string | ReactElement;\n  children?: ReactNode;\n  defaultValue?: any;\n  value?: any;\n  setValue?: (value: any) => void;\n  selectProps?: Omit<SelectProps, 'value' | 'onChange' | 'defaultValue'>;\n  onChange?: (value: any) => void;\n  disabled?: boolean;\n}\n\nconst useStyles = createStyles(({ css }) => ({\n  baiSettingItemCheckbox: css`\n    .ant-checkbox {\n      align-self: flex-start;\n      margin-top: 0.2rem;\n    }\n  `,\n}));\n\nconst SettingItem: React.FC<SettingItemProps> = ({\n  type,\n  title,\n  description,\n  children,\n  defaultValue,\n  value,\n  selectProps,\n  onChange,\n  disabled,\n}) => {\n  const { token } = theme.useToken();\n  const { styles } = useStyles();\n\n  return (\n    <Flex direction=\"column\" align=\"start\" gap={'xxs'}>\n      <Flex direction=\"row\" gap={'xxs'}>\n        <Typography.Text\n          strong\n          style={{\n            fontSize: token.fontSize,\n          }}\n        >\n          {title}\n        </Typography.Text>\n        {!disabled &&\n          value !== undefined &&\n          value !== null &&\n          defaultValue !== value && <Badge dot status=\"warning\" />}\n      </Flex>\n      {type === 'custom' && (\n        <>\n          {description}\n          <div style={{ marginTop: token.marginXS }}>{children}</div>\n        </>\n      )}\n      {type === 'checkbox' && (\n        <Checkbox\n          checked={value}\n          onChange={onChange}\n          disabled={disabled}\n          className={styles.baiSettingItemCheckbox}\n        >\n          <Typography.Text type={disabled ? 'secondary' : undefined}>\n            {description}\n          </Typography.Text>\n        </Checkbox>\n      )}\n      {type === 'select' && (\n        <>\n          {description}\n          <Select\n            value={value}\n            popupMatchSelectWidth={false}\n            onChange={onChange}\n            disabled={disabled}\n            style={{\n              marginTop: token.marginXS,\n              ...selectProps?.style,\n            }}\n            {..._.omit(selectProps, ['style'])}\n          ></Select>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default SettingItem;\n","import BAIModal from './BAIModal';\nimport Flex from './Flex';\nimport SettingItem from './SettingItem';\nimport { SettingItemProps } from './SettingItem';\nimport { RedoOutlined, SearchOutlined } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport {\n  Alert,\n  Button,\n  Checkbox,\n  Divider,\n  Empty,\n  Input,\n  Tabs,\n  Typography,\n  theme,\n} from 'antd';\nimport { createStyles } from 'antd-style';\nimport _ from 'lodash';\nimport { useState, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = createStyles(({ css, token }) => ({\n  TabStyles: css`\n    .ant-tabs-tab-active {\n      font-weight: var(--token-fontWeightSuperStrong, 700);\n    }\n    .ant-typography-secondary {\n      font-weight: normal !important;\n    }\n  `,\n}));\n\nexport type SettingGroup = {\n  title: string;\n  description?: ReactNode;\n  settingItems: SettingItemProps[];\n};\n\ninterface SettingPageProps {\n  settingGroups: Array<SettingGroup>;\n  tabDirection?: 'top' | 'left';\n  showChangedOptionFilter?: boolean;\n  showResetButton?: boolean;\n  showSearchBar?: boolean;\n}\n\nconst TabTitle: React.FC<{\n  title: string;\n  count: number;\n}> = ({ title, count }) => {\n  return (\n    <>\n      <Typography.Text>{title}</Typography.Text>\n      <Typography.Text type=\"secondary\">{` (${count})`}</Typography.Text>\n    </>\n  );\n};\n\nconst GroupSettingItems: React.FC<{\n  group: SettingGroup;\n  hideEmpty?: boolean;\n}> = ({ group, hideEmpty }) => {\n  const { token } = theme.useToken();\n  if (hideEmpty && group.settingItems.length === 0) return false;\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{\n        marginBottom: token.marginMD,\n      }}\n    >\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{\n          zIndex: 1,\n          marginBottom: token.marginMD,\n          background: token.colorBgContainer,\n        }}\n      >\n        <Typography.Title\n          level={5}\n          style={{\n            marginTop: 0,\n          }}\n        >\n          {group.title}\n        </Typography.Title>\n        <Divider style={{ marginTop: 0, marginBottom: 0 }} />\n        {group.description && (\n          <Typography.Text\n            type=\"secondary\"\n            style={{ marginTop: token.marginSM }}\n          >\n            {group.description}\n          </Typography.Text>\n        )}\n      </Flex>\n      <Flex direction=\"column\" align=\"start\" gap={'lg'}>\n        {group.settingItems.map((item, idx) => (\n          <SettingItem key={item.title + idx} {...item} />\n        ))}\n      </Flex>\n    </Flex>\n  );\n};\n\nconst SettingList: React.FC<SettingPageProps> = ({\n  settingGroups,\n  tabDirection = 'left',\n  showChangedOptionFilter,\n  showResetButton,\n  showSearchBar,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { styles } = useStyles();\n  const [searchValue, setSearchValue] = useState('');\n  const [changedOptionFilter, setChangedOptionFilter] = useState(false);\n  const [isOpenResetChangesModal, { toggle: setIsOpenResetChangesModal }] =\n    useToggle(false);\n  const [activeTabKey, setActiveTabKey] = useState('all');\n\n  const searchedItemFilter = (item: SettingItemProps) => {\n    return (\n      item.title.toLowerCase().includes(searchValue.toLowerCase()) ||\n      (typeof item.description === 'string' &&\n        item.description.toLowerCase().includes(searchValue.toLowerCase()))\n    );\n  };\n\n  const changedItemValidator = (item: SettingItemProps) => {\n    if (item.value === null || item.value === undefined || !!item.disabled) {\n      return false;\n    }\n    return item.value !== item.defaultValue;\n  };\n\n  const filteredSettingGroups = _.map(settingGroups, (group) => {\n    return {\n      ...group,\n      settingItems: _.filter(\n        group.settingItems,\n        (item) =>\n          (!changedOptionFilter || changedItemValidator(item)) &&\n          searchedItemFilter(item),\n      ),\n    };\n  });\n\n  return (\n    <>\n      <Flex\n        direction=\"column\"\n        gap={'md'}\n        align=\"stretch\"\n        style={{\n          padding: token.paddingContentHorizontal,\n          maxWidth: token.screenLG,\n        }}\n      >\n        <Flex justify=\"start\" gap={'xs'}>\n          {!!showSearchBar && (\n            <Input\n              prefix={<SearchOutlined />}\n              placeholder={t('settings.SearchPlaceholder')}\n              onChange={(e) => setSearchValue(e.target.value)}\n              value={searchValue}\n            />\n          )}\n          {!!showChangedOptionFilter && (\n            <Checkbox\n              onChange={(e) => setChangedOptionFilter(e.target.checked)}\n              style={{ whiteSpace: 'nowrap' }}\n            >\n              {t('settings.ShowOnlyChanged')}\n            </Checkbox>\n          )}\n          {!!showResetButton && (\n            <Button\n              icon={<RedoOutlined />}\n              onClick={() => setIsOpenResetChangesModal()}\n            >\n              {t('button.Reset')}\n            </Button>\n          )}\n        </Flex>\n        <Tabs\n          activeKey={activeTabKey}\n          onChange={setActiveTabKey}\n          className={styles.TabStyles}\n          tabPosition={tabDirection ? 'left' : 'top'}\n          tabBarStyle={{ minWidth: 200 }}\n          items={[\n            {\n              key: 'all',\n              label: (\n                <TabTitle\n                  title={t('general.All')}\n                  count={_.sumBy(\n                    filteredSettingGroups,\n                    (group) => group.settingItems.length,\n                  )}\n                />\n              ),\n              children: (\n                <Flex direction=\"column\" align=\"stretch\" gap={'xl'}>\n                  {_.sumBy(\n                    filteredSettingGroups,\n                    (group) => group.settingItems.length,\n                  ) > 0 ? (\n                    _.map(filteredSettingGroups, (group) => (\n                      <GroupSettingItems\n                        key={group.title}\n                        group={group}\n                        hideEmpty\n                      />\n                    ))\n                  ) : (\n                    <Empty\n                      image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      description={t('settings.NoChangesToDisplay')}\n                    />\n                  )}\n                </Flex>\n              ),\n            },\n            ..._.map(filteredSettingGroups, (group, idx) => ({\n              key: `index${idx}`,\n              label: (\n                <TabTitle\n                  title={group.title}\n                  count={group.settingItems.length}\n                />\n              ),\n              children:\n                group.settingItems.length > 0 ? (\n                  <GroupSettingItems group={group} hideEmpty />\n                ) : (\n                  <Empty\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                    description={t('settings.NoChangesToDisplay')}\n                  />\n                ),\n            })),\n          ]}\n        />\n      </Flex>\n      <BAIModal\n        open={isOpenResetChangesModal}\n        title={t('dialog.ask.DoYouWantToResetChanges')}\n        okText={t('button.Reset')}\n        okButtonProps={{ danger: true }}\n        onOk={() => {\n          _.flatMap(settingGroups, (item) => item.settingItems).forEach(\n            (option) => {\n              !option.disabled &&\n                option?.setValue &&\n                option.setValue(option.defaultValue);\n            },\n          );\n          setIsOpenResetChangesModal();\n        }}\n        cancelText={t('button.Cancel')}\n        onCancel={() => setIsOpenResetChangesModal()}\n      >\n        <Alert\n          showIcon\n          message={t('dialog.warning.CannotBeUndone')}\n          type=\"warning\"\n        />\n      </BAIModal>\n    </>\n  );\n};\n\nexport default SettingList;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: Array<string>;\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  hiddenColumnKeys?: Array<string>;\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  hiddenColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = _.map(columns, (column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys: _.map(columnOptions, 'value')?.filter(\n            (columnKey) => !_.includes(hiddenColumnKeys, columnKey),\n          ),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = _.map(columnOptions, (columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","/**\n * @generated SignedSource<<2e9ca576c175cda20ab30e60e78cc8ea>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type MyKeypairInfoModalQuery$variables = {\n  email?: string | null | undefined;\n};\nexport type MyKeypairInfoModalQuery$data = {\n  readonly user: {\n    readonly email: string | null | undefined;\n    readonly main_access_key: string | null | undefined;\n  } | null | undefined;\n};\nexport type MyKeypairInfoModalQuery = {\n  response: MyKeypairInfoModalQuery$data;\n  variables: MyKeypairInfoModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"main_access_key\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"MyKeypairInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"MyKeypairInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"f761ef63ec2ae42985aab29dd90cc78b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"MyKeypairInfoModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query MyKeypairInfoModalQuery(\\n  $email: String\\n) {\\n  user(email: $email) {\\n    email\\n    main_access_key @since(version: \\\"23.09.7\\\")\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"4d6d0135199b7cc95c03a9d90cd46f83\";\n\nexport default node;\n","import { useBAISettingUserState } from './useBAISetting';\n\ntype KnownSettingName =\n  | 'AgentList'\n  | 'AgentSummaryList'\n  | 'ContainerRegistryList'\n  | 'CustomizedImageList'\n  | 'ErrorLogList'\n  | 'ImageList'\n  | 'KeypairResourcePolicyList'\n  | 'ProjectResourcePolicyList'\n  | 'UserResourcePolicyList'\n  | 'EndpointListPage';\n\nexport const useHiddenColumnKeysSetting = (listName: KnownSettingName) => {\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useBAISettingUserState(\n    `hiddenColumnKeys.${listName}`,\n  );\n\n  return [hiddenColumnKeys, setHiddenColumnKeys] as const;\n};\n","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useHiddenColumnKeysSetting } from '../hooks/useHiddenColumnKeysSetting';\nimport BAIModal from './BAIModal';\nimport Flex from './Flex';\nimport TableColumnsSettingModal from './TableColumnsSettingModal';\nimport TextHighlighter from './TextHighlighter';\nimport {\n  DeleteOutlined,\n  SearchOutlined,\n  SettingOutlined,\n  LoadingOutlined,\n  ReloadOutlined,\n} from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { Button, Typography, Table, Alert, Checkbox, Input, theme } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport React, { useState, useMemo, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype LogType = {\n  isError: boolean;\n  statusCode: any;\n  statusText: any;\n  title: any;\n  message: string;\n  requestMethod: string;\n  timestamp: string;\n  type: string;\n  requestUrl: string;\n  requestParameters?: string;\n  formattedTimestamp?: string; // for display only\n};\nconst ErrorLogList: React.FC<{\n  onChangeSearch?: (value: string) => void;\n}> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [isOpenClearLogsModal, setIsOpenClearLogsModal] = useState(false);\n  const [visibleColumnSettingModal, { toggle: toggleColumnSettingModal }] =\n    useToggle();\n  const [checkedShowOnlyError, setCheckedShowOnlyError] = useState(false);\n  const [logSearch, setLogSearch] = useState('');\n  const [updateKey, checkUpdateKey] = useUpdatableState('first');\n  const [isPendingRefreshTransition, startRefreshTransition] = useTransition();\n  const [isPendingSearchTransition, startSearchTransition] = useTransition();\n  const [isPendingReset, startResetTransition] = useTransition();\n\n  useSuspendedBackendaiClient(); // TODO: remove this after react routing is stable. This is for remove flickering when browser reload\n  const columns: ColumnsType<LogType> = [\n    {\n      title: t('logs.TimeStamp'),\n      dataIndex: 'formattedTimeStamp',\n      key: 'timeStamp',\n      render: (value) => (\n        <div style={{ minWidth: 50 }}>\n          {_.isUndefined(value) ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n      fixed: 'left',\n    },\n    {\n      title: t('logs.Status'),\n      dataIndex: 'statusCode',\n      key: 'status',\n      render: (value, record) => (\n        <div style={{ minWidth: 50 }}>\n          {_.isUndefined(value) ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>\n              {value + ' ' + record.statusText}\n            </TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorTitle'),\n      dataIndex: 'title',\n      key: 'errorTitle',\n      render: (value) => (\n        <div style={{ minWidth: 50 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>\n              {_.toString(value)}\n              {/* set toString because sometime value type is object */}\n            </TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorMessage'),\n      dataIndex: 'message',\n      key: 'errorMessage',\n      render: (value) => (\n        <div style={{ minWidth: 70 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorType'),\n      dataIndex: 'type',\n      key: 'errorType',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.Method'),\n      dataIndex: 'requestMethod',\n      key: 'method',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.RequestUrl'),\n      dataIndex: 'requestUrl',\n      key: 'requestUrl',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.Parameters'),\n      dataIndex: 'requestParameters',\n      key: 'requestParameter',\n      render: (value) => (\n        <div style={{ minWidth: 100 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  const [hiddenColumnKeys, setHiddenColumnKeys] =\n    useHiddenColumnKeysSetting('ErrorLogList');\n\n  const storageLogData = useMemo(() => {\n    const raw: LogType[] = JSON.parse(\n      localStorage.getItem('backendaiwebui.logs') || '[]',\n    );\n    return _.map(raw, (log, index) => {\n      return {\n        ...log,\n        key: index,\n        formattedTimeStamp: dayjs(log.timestamp).format('ll LTS'),\n      };\n    });\n    // Only update when updateKey is changed\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [updateKey]);\n\n  const filteredLogData = useMemo(() => {\n    if (_.isEmpty(logSearch)) return storageLogData;\n    const regExp = new RegExp(`${_.escapeRegExp(logSearch)}`, 'i');\n    return _.filter(storageLogData, (log) => {\n      return _.some(log, (value, key) => {\n        if (key === 'timestamp') {\n          // timestamp is not display in table, use formattedTimestamp instead\n          return false;\n        }\n        return regExp.test(_.toString(value));\n      });\n    });\n  }, [logSearch, storageLogData]);\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        wrap=\"wrap\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex direction=\"column\" align=\"start\">\n          <Typography.Title level={4} style={{ margin: 0, padding: 0 }}>\n            {t('logs.LogMessages')}\n          </Typography.Title>\n          <Typography.Text type=\"secondary\">\n            {t('logs.UpTo3000Logs')}\n          </Typography.Text>\n        </Flex>\n        <Flex direction=\"row\" gap={'xs'} wrap=\"wrap\" style={{ flexShrink: 1 }}>\n          <Flex gap={'xs'}>\n            <Input\n              allowClear\n              prefix={<SearchOutlined />}\n              placeholder={t('logs.SearchLogs')}\n              onChange={(e) => {\n                startSearchTransition(() => setLogSearch(e.target.value));\n              }}\n              style={{\n                width: 200,\n              }}\n            />\n            <Checkbox\n              onChange={(e) => setCheckedShowOnlyError(e.target.checked)}\n            >\n              {t('logs.ShowOnlyError')}\n            </Checkbox>\n          </Flex>\n          <Flex gap={'xs'}>\n            <Button\n              icon={<ReloadOutlined />}\n              loading={isPendingRefreshTransition}\n              onClick={() => {\n                startRefreshTransition(() => checkUpdateKey());\n              }}\n            >\n              {t('button.Refresh')}\n            </Button>\n            <Button\n              danger\n              icon={<DeleteOutlined />}\n              onClick={() => {\n                setIsOpenClearLogsModal(true);\n              }}\n            >\n              {t('button.ClearLogs')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Table\n        pagination={{\n          showSizeChanger: false,\n          style: {\n            marginBottom: 0,\n          },\n        }}\n        loading={\n          isPendingSearchTransition\n            ? {\n                indicator: <LoadingOutlined />,\n              }\n            : false\n        }\n        scroll={{\n          x: 'max-content',\n          y:\n            _.filter(filteredLogData, (log) => log.isError).length === 0\n              ? undefined\n              : 'calc(100vh - 400px)',\n        }}\n        dataSource={\n          checkedShowOnlyError\n            ? _.filter(filteredLogData, (log) => {\n                return log.isError;\n              })\n            : (filteredLogData as LogType[])\n        }\n        columns={_.filter(\n          columns,\n          (column) => !_.includes(hiddenColumnKeys, _.toString(column?.key)),\n        )}\n        onRow={(record) => {\n          return {\n            style: { color: record.isError ? token.colorError : '' },\n          };\n        }}\n      />\n      <Flex\n        justify=\"end\"\n        style={{\n          paddingRight: token.paddingXS,\n          paddingBottom: token.paddingXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            toggleColumnSettingModal();\n          }}\n        />\n      </Flex>\n      <BAIModal\n        open={isOpenClearLogsModal}\n        title={t('dialog.warning.LogDeletion')}\n        okText={t('button.Delete')}\n        okButtonProps={{ danger: true }}\n        confirmLoading={isPendingReset}\n        onOk={() => {\n          startResetTransition(() => {\n            localStorage.removeItem('backendaiwebui.logs');\n            checkUpdateKey();\n            setIsOpenClearLogsModal(false);\n          });\n        }}\n        cancelText={t('button.Cancel')}\n        onCancel={() => setIsOpenClearLogsModal(false)}\n      >\n        <Alert message={t('dialog.warning.CannotBeUndone')} type=\"warning\" />\n      </BAIModal>\n      <TableColumnsSettingModal\n        open={visibleColumnSettingModal}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setHiddenColumnKeys(\n              _.difference(\n                columns.map((column) => _.toString(column.key)),\n                values?.selectedColumnKeys,\n              ),\n            );\n          toggleColumnSettingModal();\n        }}\n        columns={columns}\n        hiddenColumnKeys={hiddenColumnKeys}\n      />\n    </Flex>\n  );\n};\n\nexport default ErrorLogList;\n","/**\n @license\n Copyright (c) 2015-2025 Lablup Inc. All rights reserved.\n */\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { MyKeypairInfoModalQuery } from './__generated__/MyKeypairInfoModalQuery.graphql';\nimport { Button, Table, Typography, Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface MyKeypairInfoModalProps extends BAIModalProps {\n  onRequestClose: () => void;\n}\n\nconst MyKeypairInfoModal: React.FC<MyKeypairInfoModalProps> = ({\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const [userInfo] = useCurrentUserInfo();\n  const baiClient = useSuspendedBackendaiClient();\n  const { data: keypairs } = useTanQuery({\n    queryKey: ['baiClient.keypair.list', baiModalProps.open], // refetch on open state\n    queryFn: () => {\n      return baiModalProps.open\n        ? baiClient.keypair\n            .list(\n              userInfo.email,\n              ['access_key', 'secret_key', 'is_active'],\n              true,\n            )\n            .then((res: any) => res.keypairs)\n        : null;\n    },\n    staleTime: 0,\n  });\n\n  const supportMainAccessKey = baiClient?.supports('main-access-key');\n\n  const { user } = useLazyLoadQuery<MyKeypairInfoModalQuery>(\n    graphql`\n      query MyKeypairInfoModalQuery($email: String) {\n        user(email: $email) {\n          email\n          main_access_key @since(version: \"23.09.7\")\n        }\n      }\n    `,\n    {\n      email: userInfo.email,\n    },\n  );\n\n  return (\n    <BAIModal\n      {...baiModalProps}\n      title={t('userSettings.MyKeypairInfo')}\n      centered\n      onCancel={onRequestClose}\n      destroyOnClose\n      width={'auto'}\n      footer={[\n        <Button\n          key=\"keypairInfoClose\"\n          onClick={() => {\n            onRequestClose();\n          }}\n        >\n          {t('button.Close')}\n        </Button>,\n      ]}\n    >\n      <Table\n        scroll={{ x: 'max-content' }}\n        rowKey={'access_key'}\n        dataSource={keypairs}\n        columns={[\n          {\n            title: t('general.AccessKey'),\n            key: 'accessKey',\n            dataIndex: 'access_key',\n            fixed: 'left',\n            render: (value) => (\n              <Flex direction=\"column\" align=\"start\">\n                <Typography.Text ellipsis copyable>\n                  {value}\n                </Typography.Text>\n                {supportMainAccessKey && value === user?.main_access_key && (\n                  <Tag color={'red'}>{t('credential.MainAccessKey')}</Tag>\n                )}\n              </Flex>\n            ),\n          },\n          {\n            title: t('general.SecretKey'),\n            key: 'secretKey',\n            dataIndex: 'secret_key',\n            fixed: 'left',\n            render: (value) => (\n              <Typography.Text ellipsis copyable>\n                {value}\n              </Typography.Text>\n            ),\n          },\n        ]}\n      />\n    </BAIModal>\n  );\n};\n\nexport default MyKeypairInfoModal;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Button, Popconfirm, Spin, Typography, theme } from 'antd';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface SSHKeypairGenerationModalProps extends BAIModalProps {\n  onRequestClose: () => void;\n  isRefreshModalPending?: boolean;\n}\n\nconst SSHKeypairGenerationModal: React.FC<SSHKeypairGenerationModalProps> = ({\n  onRequestClose,\n  isRefreshModalPending,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const { data } = useTanQuery<{\n    ssh_public_key: string;\n    ssh_private_key: string;\n  }>({\n    queryKey: ['refreshSSHKeypair', baiModalProps.open],\n    queryFn: () => {\n      return baiModalProps.open ? baiClient.refreshSSHKeypair() : null;\n    },\n  });\n\n  return (\n    <BAIModal\n      title={t('userSettings.SSHKeypairGeneration')}\n      closeIcon={false}\n      footer={[\n        <Popconfirm\n          key=\"close\"\n          title={t('button.Confirm')}\n          description={t('userSettings.ClearSSHKeypairInput')}\n          onConfirm={onRequestClose}\n        >\n          <Button>{t('button.Close')}</Button>\n        </Popconfirm>,\n      ]}\n      {...baiModalProps}\n    >\n      <Spin spinning={isRefreshModalPending} indicator={<LoadingOutlined />}>\n        <Typography.Text strong>{t('userSettings.PublicKey')}</Typography.Text>\n        <Flex direction=\"row\" align=\"start\" justify=\"between\">\n          <Typography.Paragraph>\n            <pre\n              style={{\n                width: 430,\n                maxHeight: 100,\n                overflowY: 'scroll',\n                scrollbarWidth: 'none', // Firefox\n              }}\n            >\n              {data?.ssh_public_key}\n            </pre>\n          </Typography.Paragraph>\n          <Typography.Text\n            copyable={{ text: data?.ssh_public_key }}\n            style={{ marginTop: token.margin }}\n          />\n        </Flex>\n        <Typography.Text strong>{t('userSettings.PrivateKey')}</Typography.Text>\n        <Flex direction=\"row\" align=\"start\" justify=\"between\">\n          <Typography.Paragraph>\n            <pre\n              style={{\n                width: 430,\n                maxHeight: 100,\n                overflowY: 'scroll',\n                scrollbarWidth: 'none', // Firefox\n              }}\n            >\n              {data?.ssh_private_key}\n            </pre>\n            <Typography.Text type=\"danger\">\n              {t('userSettings.SSHKeypairGenerationWarning')}\n            </Typography.Text>\n          </Typography.Paragraph>\n          <Typography.Text\n            copyable={{ text: data?.ssh_private_key }}\n            style={{ marginTop: token.margin }}\n          />\n        </Flex>\n      </Spin>\n    </BAIModal>\n  );\n};\n\nexport default SSHKeypairGenerationModal;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { Form, FormInstance, Input, Typography } from 'antd';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface SSHKeypairManualFormModalProps extends BAIModalProps {\n  onRequestClose: () => void;\n  onRequestRefresh: () => void;\n}\n\nconst SSHKeypairManualFormModal: React.FC<SSHKeypairManualFormModalProps> = ({\n  onRequestClose,\n  onRequestRefresh,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const formRef = useRef<FormInstance>(null);\n\n  const mutationToPostSSHKeypair = useTanMutation({\n    mutationFn: (values: { pubkey: string; privkey: string }) => {\n      return baiClient.postSSHKeypair(values);\n    },\n  });\n\n  return (\n    <BAIModal\n      title={t('userSettings.SSHKeypairEnterManually')}\n      okText={t('button.Save')}\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            mutationToPostSSHKeypair.mutate(values, {\n              onSuccess: () => {\n                onRequestRefresh();\n              },\n            });\n            onRequestClose();\n          })\n          .catch(() => {});\n      }}\n      destroyOnClose={true}\n      {...baiModalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        layout=\"vertical\"\n        requiredMark=\"optional\"\n      >\n        <Form.Item\n          name=\"pubkey\"\n          label={\n            <Typography.Text strong>\n              {t('userSettings.PublicKey')}\n            </Typography.Text>\n          }\n          rules={[{ required: true, message: t('settings.InputRequired') }]}\n        >\n          <Input.TextArea\n            rows={5}\n            // color of \"ant-typography pre\" class\n            style={{ backgroundColor: 'rgba(150, 150, 150, 0.1)' }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"privkey\"\n          label={\n            <Typography.Text strong>\n              {t('userSettings.PrivateKey')}\n            </Typography.Text>\n          }\n          rules={[{ required: true, message: t('settings.InputRequired') }]}\n        >\n          <Input.TextArea\n            rows={5}\n            // color of \"ant-typography pre\" class\n            style={{ backgroundColor: 'rgba(150, 150, 150, 0.1)' }}\n          />\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default SSHKeypairManualFormModal;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport SSHKeypairGenerationModal from './SSHKeypairGenerationModal';\nimport SSHKeypairManualFormModal from './SSHKeypairManualFormModal';\nimport { useToggle } from 'ahooks';\nimport { Button, Typography, theme } from 'antd';\nimport React, { useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface SSHKeypairManagementModalProps extends BAIModalProps {\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst SSHKeypairManagementModal: React.FC<SSHKeypairManagementModalProps> = ({\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [isPendingRefreshModal, startRefreshModalTransition] = useTransition();\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const [\n    isOpenSSHKeypairGenerationModal,\n    { toggle: toggleSSHKeypairGenerationModal },\n  ] = useToggle(false);\n  const [\n    isOpenSSHKeypairManualFormModal,\n    { toggle: toggleSSHKeypairManualFormModal },\n  ] = useToggle(false);\n\n  const baiClient = useSuspendedBackendaiClient();\n  const { data } = useTanQuery<{\n    ssh_public_key: string;\n  }>({\n    queryKey: ['fetchSSHKeypair', fetchKey],\n    queryFn: () => {\n      return baiClient.fetchSSHKeypair();\n    },\n  });\n\n  return (\n    <>\n      <BAIModal\n        title={t('userSettings.SSHKeypairGeneration')}\n        onCancel={() => onRequestClose()}\n        footer={[\n          <Button key=\"back\" onClick={() => onRequestClose()}>\n            {t('button.Close')}\n          </Button>,\n          <Button\n            key=\"generate\"\n            type=\"primary\"\n            onClick={toggleSSHKeypairGenerationModal}\n          >\n            {t('button.Generate')}\n          </Button>,\n          <Button\n            key=\"enterManually\"\n            type=\"primary\"\n            onClick={toggleSSHKeypairManualFormModal}\n          >\n            {t('button.EnterManually')}\n          </Button>,\n        ]}\n        {...modalProps}\n      >\n        <Typography.Text strong>\n          {t('userSettings.CurrentSSHPublicKey')}\n        </Typography.Text>\n        {data?.ssh_public_key ? (\n          <Flex direction=\"row\" align=\"start\" justify=\"between\">\n            <Typography.Paragraph>\n              <pre style={{ width: 430, height: 270 }}>\n                {data?.ssh_public_key}\n              </pre>\n            </Typography.Paragraph>\n            <Typography.Text\n              copyable={{ text: data?.ssh_public_key }}\n              style={{ marginTop: token.margin }}\n            />\n          </Flex>\n        ) : (\n          <Typography.Paragraph>\n            <pre style={{ height: 270 }}>\n              {t('userSettings.NoExistingSSHKeypair')}\n            </pre>\n          </Typography.Paragraph>\n        )}\n      </BAIModal>\n      <SSHKeypairGenerationModal\n        open={isOpenSSHKeypairGenerationModal}\n        isRefreshModalPending={isPendingRefreshModal}\n        onRequestClose={() => {\n          toggleSSHKeypairGenerationModal();\n          startRefreshModalTransition(() => {\n            updateFetchKey();\n          });\n        }}\n      />\n      <SSHKeypairManualFormModal\n        open={isOpenSSHKeypairManualFormModal}\n        onCancel={toggleSSHKeypairManualFormModal}\n        onRequestClose={() => {\n          toggleSSHKeypairManualFormModal();\n        }}\n        onRequestRefresh={() => {\n          startRefreshModalTransition(() => {\n            updateFetchKey();\n          });\n        }}\n      />\n    </>\n  );\n};\n\nexport default SSHKeypairManagementModal;\n","import { useBaiSignedRequestWithPromise } from '../helper';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { ShellScriptType } from '../pages/UserSettingsPage';\nimport BAICodeEditor from './BAICodeEditor';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { App, Button, Dropdown, Form, Select, Typography } from 'antd';\nimport _ from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype UserConfigScript = {\n  path: string;\n  permission: string;\n  data: string;\n};\n\ninterface BootstrapScriptEditModalProps extends BAIModalProps {\n  onRequestClose: (success?: boolean) => void;\n  shellInfo: ShellScriptType;\n}\n\nconst ShellScriptEditModal: React.FC<BootstrapScriptEditModalProps> = ({\n  onRequestClose,\n  shellInfo,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const app = App.useApp();\n  const [rcfileNames, setRcfileNames] = useState<string>('.bashrc');\n  const [script, setScript] = useState<string>('');\n  const [userConfigScript, setUserConfigScript] = useState<\n    Array<UserConfigScript>\n  >([]);\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const updateBootStrapScriptMutation = useTanMutation({\n    mutationFn: (script: string) => {\n      return baiRequestWithPromise({\n        method: 'POST',\n        url: '/user-config/bootstrap-script',\n        body: { script },\n      });\n    },\n  });\n  const updateUserConfigScriptMutation = useTanMutation({\n    mutationFn: (script: string) => {\n      return baiRequestWithPromise({\n        method: 'PATCH',\n        url: '/user-config/dotfiles',\n        body: {\n          data: script,\n          path: rcfileNames,\n          permission: '644',\n        },\n      });\n    },\n  });\n  const createUserConfigScriptMutation = useTanMutation({\n    mutationFn: (script: string) => {\n      return baiRequestWithPromise({\n        method: 'POST',\n        url: '/user-config/dotfiles',\n        body: {\n          path: rcfileNames,\n          data: script,\n          permission: '644',\n        },\n      });\n    },\n  });\n  const deleteUserConfigScriptMutation = useTanMutation({\n    mutationFn: () => {\n      return baiRequestWithPromise({\n        method: 'DELETE',\n        url: '/user-config/dotfiles',\n        body: {\n          path: rcfileNames,\n        },\n      });\n    },\n  });\n\n  const fetchScript = () => {\n    if (shellInfo === 'bootstrap') {\n      (\n        baiRequestWithPromise({\n          method: 'GET',\n          url: '/user-config/bootstrap-script',\n        }) as Promise<string>\n      ).then((response: string) => {\n        setScript(response);\n      });\n    }\n    if (shellInfo === 'userconfig') {\n      (\n        baiRequestWithPromise({\n          method: 'GET',\n          url: '/user-config/dotfiles',\n        }) as Promise<Array<UserConfigScript>>\n      ).then((response) => {\n        const defaultScript = _.find(response, { path: rcfileNames });\n        setScript(defaultScript?.data || '');\n        setUserConfigScript(response);\n      });\n    }\n  };\n\n  useMemo(() => {\n    fetchScript();\n    //eslint-disable-next-line\n  }, [shellInfo]);\n\n  const saveScript = ({ closeAfter = true } = {}) => {\n    if (shellInfo === 'bootstrap') {\n      if (!script) {\n        app.message.error(t('userSettings.BootstrapScriptEmpty'));\n        return;\n      }\n      updateBootStrapScriptMutation.mutate(script, {\n        onSuccess: (result) => {\n          app.message.success(t('userSettings.BootstrapScriptUpdated'));\n          closeAfter && onRequestClose();\n        },\n        onError: (error: any) => {\n          app.message.error(error.message);\n          console.error(error);\n        },\n      });\n    }\n\n    if (shellInfo === 'userconfig') {\n      const existValidator = _.find(userConfigScript, { path: rcfileNames });\n      if (existValidator) {\n        updateUserConfigScriptMutation.mutate(script, {\n          onSuccess: (result) => {\n            app.message.success(t('userSettings.DescScriptUpdated'));\n            if (closeAfter) {\n              onRequestClose();\n            } else {\n              fetchScript();\n            }\n          },\n          onError: (error: any) => {\n            app.message.error(t('userSettings.DescNewUserConfigFileCreated'));\n            console.error(error);\n          },\n        });\n      } else {\n        createUserConfigScriptMutation.mutate(script, {\n          onSuccess: (result) => {\n            app.message.success(t('userSettings.DescScriptCreated'));\n            if (closeAfter) {\n              onRequestClose();\n            } else {\n              fetchScript();\n            }\n          },\n          onError: (error: any) => {\n            app.message.error(t('userSettings.DescNewUserConfigFileCreated'));\n            console.error(error);\n          },\n        });\n      }\n    }\n  };\n\n  const deleteScript = () => {\n    if (shellInfo === 'bootstrap') {\n      updateBootStrapScriptMutation.mutate('', {\n        onSuccess: (result) => {\n          app.message.success(t('userSettings.BootstrapScriptDeleted'));\n          onRequestClose();\n        },\n        onError: (error: any) => {\n          app.message.error(error.message);\n          console.error(error);\n        },\n      });\n    }\n    if (shellInfo === 'userconfig') {\n      deleteUserConfigScriptMutation.mutate(undefined, {\n        onSuccess: (result) => {\n          app.message.success(\n            `${t('userSettings.DescScriptDeleted')}${rcfileNames}`,\n          );\n          onRequestClose();\n        },\n        onError: (error: any) => {\n          app.message.error(error.message);\n          console.error(error);\n        },\n      });\n    }\n  };\n\n  return (\n    <BAIModal\n      width={800}\n      title={\n        shellInfo === 'bootstrap'\n          ? t('userSettings.EditBootstrapScript')\n          : t('userSettings.EditUserConfigScript')\n      }\n      onCancel={() => onRequestClose()}\n      okText={t('button.Save')}\n      footer={\n        <Flex justify=\"between\" style={{ width: '100%' }}>\n          <Flex>\n            <Dropdown.Button\n              type=\"default\"\n              danger\n              style={{ width: 'fit-content' }}\n              menu={{\n                items: [\n                  {\n                    key: 'reset',\n                    label: t('button.Reset'),\n                    onClick: () => {\n                      app.modal.confirm({\n                        title: t('dialog.title.LetsDouble-Check'),\n                        content: t('dialog.ask.DoYouWantToResetChanges'),\n                        onOk: () => {\n                          if (shellInfo === 'bootstrap') {\n                            setScript('');\n                          }\n                          if (shellInfo === 'userconfig') {\n                            setScript('');\n                          }\n                        },\n                      });\n                    },\n                    danger: true,\n                  },\n                ],\n              }}\n              onClick={() => {\n                app.modal.confirm({\n                  title: t('dialog.title.LetsDouble-Check'),\n                  content: t('dialog.ask.DoYouWantToDeleteSomething', {\n                    name:\n                      shellInfo === 'bootstrap'\n                        ? 'Bootstrap script'\n                        : `${rcfileNames}`,\n                  }),\n                  onOk: deleteScript,\n                });\n              }}\n            >\n              <DeleteOutlined />\n            </Dropdown.Button>\n          </Flex>\n          <Flex gap={'sm'}>\n            <Button\n              key=\"cancel\"\n              onClick={() => onRequestClose()}\n              style={{ width: 'fit-content' }}\n            >\n              {t('button.Cancel')}\n            </Button>\n            <Dropdown.Button\n              key=\"submit\"\n              type=\"primary\"\n              onClick={() => {\n                saveScript();\n              }}\n              style={{ width: 'fit-content' }}\n              menu={{\n                items: [\n                  {\n                    key: 'save',\n                    label: t('button.SaveWithoutClose'),\n                    onClick: () => saveScript({ closeAfter: false }),\n                  },\n                ],\n              }}\n            >\n              {t('button.SaveAndClose')}\n            </Dropdown.Button>\n          </Flex>\n        </Flex>\n      }\n      destroyOnClose\n      {...modalProps}\n    >\n      <Flex direction=\"column\" align=\"stretch\" gap={'sm'}>\n        {shellInfo === 'bootstrap' && (\n          <Typography.Text>\n            {t('userSettings.BootstrapScriptDescription')}\n          </Typography.Text>\n        )}\n        {shellInfo === 'userconfig' && (\n          <Form.Item\n            style={{\n              marginBottom: 0,\n            }}\n            label={t('userSettings.UserConfigScript')}\n          >\n            <Select\n              defaultValue={'.bashrc'}\n              onChange={(value) => {\n                const selectedScript = _.find(userConfigScript, {\n                  path: value,\n                });\n                setScript(selectedScript?.data || '');\n                setRcfileNames(value);\n              }}\n              options={[\n                { value: '.bashrc' },\n                { value: '.zshrc' },\n                { value: '.tmux.conf.local' },\n                { value: '.vimrc' },\n                { value: '.Renviron' },\n              ]}\n              style={{ width: '200px' }}\n            />\n          </Form.Item>\n        )}\n        <BAICodeEditor\n          onChange={(value) => setScript(value)}\n          language=\"shell\"\n          editable\n          value={script}\n        />\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ShellScriptEditModal;\n","import ErrorLogList from '../components/ErrorLogList';\nimport MyKeypairInfoModal from '../components/MyKeypairInfoModal';\nimport SSHKeypairManagementModal from '../components/SSHKeypairManagementModal';\nimport SettingList, { SettingGroup } from '../components/SettingList';\nimport ShellScriptEditModal from '../components/ShellScriptEditModal';\nimport {\n  useBAISettingGeneralState,\n  useBAISettingUserState,\n} from '../hooks/useBAISetting';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { Button, Typography } from 'antd';\nimport Card from 'antd/es/card/Card';\nimport _ from 'lodash';\nimport { useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { StringParam, useQueryParam, withDefault } from 'use-query-params';\n\ntype TabKey = 'general' | 'logs';\nexport type ShellScriptType = 'bootstrap' | 'userconfig' | undefined;\n\nconst tabParam = withDefault(StringParam, 'general');\n\nconst UserPreferencesPage = () => {\n  const { t } = useTranslation();\n  const [curTabKey, setCurTabKey] = useQueryParam('tab', tabParam);\n\n  const [desktopNotification, setDesktopNotification] = useBAISettingUserState(\n    'desktop_notification',\n  );\n  const [isClassicSessionLauncher, setIsClassicSessionLauncher] =\n    useBAISettingUserState('classic_session_launcher');\n  const [compactSidebar, setCompactSidebar] =\n    useBAISettingUserState('compact_sidebar');\n  const [selectedLanguage, setSelectedLanguage] =\n    useBAISettingUserState('selected_language');\n  const [, setLanguage] = useBAISettingGeneralState('language');\n  const [autoAutomaticUpdateCheck, setAutoAutomaticUpdateCheck] =\n    useBAISettingUserState('automatic_update_check');\n  const [autoLogout, setAutoLogout] = useBAISettingUserState('auto_logout');\n  const [isOpenSSHKeypairInfoModal, { toggle: toggleSSHKeypairInfoModal }] =\n    useToggle(false);\n  const [\n    isOpenSSHKeypairManagementModal,\n    { toggle: toggleSSHKeypairManagementModal },\n  ] = useToggle(false);\n  const [preserveLogin, setPreserveLogin] =\n    useBAISettingUserState('preserve_login');\n  const [experimentalNeoSessionList, setExperimentalNeoSessionList] =\n    useBAISettingUserState('experimental_neo_session_list');\n  const [experimentalAIAgents, setExperimentalAIAgents] =\n    useBAISettingUserState('experimental_ai_agents');\n  const [experimentalDashboard, setExperimentalDashboard] =\n    useBAISettingUserState('experimental_dashboard');\n  const [shellInfo, setShellInfo] = useState<ShellScriptType>('bootstrap');\n  const [isOpenShellScriptEditModal, { toggle: toggleShellScriptEditModal }] =\n    useToggle(false);\n\n  const languageOptions = [\n    { label: t('language.English'), value: 'en' },\n    { label: t('language.Korean'), value: 'ko' },\n    { label: t('language.Brazilian'), value: 'pt-BR' },\n    { label: t('language.Chinese'), value: 'zh-CN' },\n    {\n      label: t('language.Chinese (Simplified)'),\n      value: 'zh-TW',\n    },\n    { label: t('language.French'), value: 'fr' },\n    { label: t('language.Finnish'), value: 'fi' },\n    { label: t('language.German'), value: 'de' },\n    { label: t('language.Greek'), value: 'el' },\n    { label: t('language.Indonesian'), value: 'id' },\n    { label: t('language.Italian'), value: 'it' },\n    { label: t('language.Japanese'), value: 'ja' },\n    { label: t('language.Mongolian'), value: 'mn' },\n    { label: t('language.Polish'), value: 'pl' },\n    { label: t('language.Portuguese'), value: 'pt' },\n    { label: t('language.Russian'), value: 'ru' },\n    { label: t('language.Spanish'), value: 'es' },\n    { label: t('language.Thai'), value: 'th' },\n    { label: t('language.Turkish'), value: 'tr' },\n    { label: t('language.Vietnamese'), value: 'vi' },\n  ];\n  let defaultLanguage = globalThis.navigator.language;\n  defaultLanguage = _.includes(['zh-CN', 'zh-TW', 'pt-BR'], defaultLanguage)\n    ? defaultLanguage\n    : defaultLanguage.split('-')[0];\n  defaultLanguage =\n    languageOptions.find((item) => item.value === defaultLanguage)?.value ??\n    'en';\n\n  const settingGroups: Array<SettingGroup> = [\n    {\n      title: t('userSettings.Preferences'),\n      settingItems: [\n        {\n          type: 'checkbox',\n          title: t('userSettings.DesktopNotification'),\n          description: <Trans i18nKey=\"userSettings.DescDesktopNotification\" />,\n          defaultValue: false,\n          value: desktopNotification,\n          setValue: setDesktopNotification,\n          onChange: (e) => {\n            setDesktopNotification(e.target.checked);\n          },\n        },\n        {\n          type: 'checkbox',\n          title: t('userSettings.UseCompactSidebar'),\n          description: <Trans i18nKey=\"userSettings.DescUseCompactSidebar\" />,\n          defaultValue: false,\n          value: compactSidebar,\n          setValue: setCompactSidebar,\n          onChange: (e) => {\n            setCompactSidebar(e.target.checked);\n          },\n        },\n        {\n          type: 'select',\n          title: t('userSettings.Language'),\n          description: t('userSettings.DescLanguage'),\n          selectProps: {\n            options: languageOptions.map((item) =>\n              item.value === defaultLanguage\n                ? {\n                    ...item,\n                    label: (\n                      <>\n                        {item.label}&nbsp;\n                        <Typography.Text type=\"secondary\">\n                          ({t('userSettings.Default')})\n                        </Typography.Text>\n                      </>\n                    ),\n                  }\n                : item,\n            ),\n            showSearch: true,\n          },\n          defaultValue: defaultLanguage,\n          value: selectedLanguage || defaultLanguage,\n          setValue: setSelectedLanguage,\n          onChange: (value) => {\n            setSelectedLanguage(value);\n            const event = new CustomEvent('language-changed', {\n              detail: {\n                language: value,\n              },\n            });\n            setLanguage(value);\n            document.dispatchEvent(event);\n            //@ts-ignore\n            console.log(globalThis.backendaioptions.get('selected_language'));\n          },\n        },\n        ...[\n          //@ts-ignore\n          globalThis.isElectron && {\n            type: 'checkbox',\n            title: t('userSettings.KeepLoginSessionInformation'),\n            description: (\n              <Trans i18nKey=\"userSettings.DescKeepLoginSessionInformation\" />\n            ),\n            defaultValue: false,\n            //@ts-ignore\n            value: preserveLogin,\n            onChange: (e: any) => {\n              setPreserveLogin(e.target.checked);\n            },\n          },\n        ].filter(Boolean),\n        {\n          type: 'checkbox',\n          title: t('userSettings.AutomaticUpdateCheck'),\n          description: (\n            <Trans i18nKey=\"userSettings.DescAutomaticUpdateCheck\" />\n          ),\n          defaultValue: false,\n          value: autoAutomaticUpdateCheck,\n          setValue: setAutoAutomaticUpdateCheck,\n          onChange: (e) => {\n            setAutoAutomaticUpdateCheck(e.target.checked);\n          },\n        },\n        {\n          type: 'checkbox',\n          title: t('userSettings.AutoLogout'),\n          description: t('userSettings.DescAutoLogout'),\n          defaultValue: false,\n          value: autoLogout,\n          setValue: setAutoLogout,\n          onChange: (e) => {\n            setAutoLogout(e.target.checked);\n          },\n        },\n        {\n          type: 'custom',\n          title: t('userSettings.MyKeypairInfo'),\n          description: t('userSettings.DescMyKeypairInfo'),\n          children: (\n            <Button\n              icon={<SettingOutlined />}\n              onClick={() => toggleSSHKeypairInfoModal()}\n            >\n              {t('button.Config')}\n            </Button>\n          ),\n        },\n        {\n          type: 'custom',\n          title: t('userSettings.SSHKeypairManagement'),\n          description: t('userSettings.DescSSHKeypairManagement'),\n          children: (\n            <Button\n              icon={<SettingOutlined />}\n              onClick={() => toggleSSHKeypairManagementModal()}\n            >\n              {t('button.Config')}\n            </Button>\n          ),\n        },\n        {\n          type: 'checkbox',\n          title: t('userSettings.ClassicSessionLauncher'),\n          description: t('userSettings.DescClassicSessionLauncher'),\n          defaultValue: false,\n          value: isClassicSessionLauncher,\n          onChange: (e) => {\n            setIsClassicSessionLauncher(e.target.checked);\n          },\n        },\n      ],\n    },\n    {\n      title: t('userSettings.ShellEnvironments'),\n      settingItems: [\n        {\n          type: 'custom',\n          title: t('userSettings.EditBootstrapScript'),\n          children: (\n            <Button\n              icon={<SettingOutlined />}\n              onClick={() => {\n                setShellInfo('bootstrap');\n                toggleShellScriptEditModal();\n              }}\n            >\n              {t('button.Config')}\n            </Button>\n          ),\n        },\n        {\n          type: 'custom',\n          title: t('userSettings.EditUserConfigScript'),\n          children: (\n            <Button\n              icon={<SettingOutlined />}\n              onClick={() => {\n                setShellInfo('userconfig');\n                toggleShellScriptEditModal();\n              }}\n            >\n              {t('button.Config')}\n            </Button>\n          ),\n        },\n      ],\n    },\n    {\n      title: t('userSettings.ExperimentalFeatures'),\n      description: t('userSettings.ExperimentalFeaturesDesc'),\n      settingItems: [\n        {\n          type: 'checkbox',\n          title: t('userSettings.NEOSessionList'),\n          description: t('general.Enabled'),\n          defaultValue: false,\n          value: experimentalNeoSessionList,\n          setValue: setExperimentalNeoSessionList,\n          onChange: (e) => {\n            setExperimentalNeoSessionList(e.target.checked);\n          },\n        },\n        {\n          type: 'checkbox',\n          title: t('userSettings.AIAgents'),\n          description: t('general.Enabled'),\n          defaultValue: false,\n          value: experimentalAIAgents,\n          setValue: setExperimentalAIAgents,\n          onChange: (e) => {\n            setExperimentalAIAgents(e.target.checked);\n          },\n        },\n        {\n          type: 'checkbox',\n          title: t('webui.menu.Dashboard'),\n          description: t('userSettings.DescExperimentalDashboard'),\n          defaultValue: false,\n          value: experimentalDashboard,\n          setValue: setExperimentalDashboard,\n          onChange: (e) => {\n            setExperimentalDashboard(e.target.checked);\n          },\n        },\n      ],\n    },\n  ];\n\n  return (\n    <>\n      <Card\n        activeTabKey={curTabKey}\n        onTabChange={(key) => setCurTabKey(key as TabKey)}\n        tabList={[\n          {\n            key: 'general',\n            label: t('userSettings.General'),\n          },\n          {\n            key: 'logs',\n            label: t('userSettings.Logs'),\n          },\n        ]}\n        bodyStyle={{\n          padding: 0,\n        }}\n      >\n        {curTabKey === 'general' && (\n          <SettingList\n            settingGroups={settingGroups}\n            showChangedOptionFilter\n            showResetButton\n            showSearchBar\n          />\n        )}\n        {curTabKey === 'logs' && <ErrorLogList />}\n      </Card>\n      <MyKeypairInfoModal\n        open={isOpenSSHKeypairInfoModal}\n        onRequestClose={toggleSSHKeypairInfoModal}\n      />\n      <SSHKeypairManagementModal\n        open={isOpenSSHKeypairManagementModal}\n        onRequestClose={toggleSSHKeypairManagementModal}\n      />\n      {shellInfo && (\n        <ShellScriptEditModal\n          open={isOpenShellScriptEditModal}\n          shellInfo={shellInfo}\n          onRequestClose={() => {\n            toggleShellScriptEditModal();\n          }}\n          afterClose={() => {\n            setShellInfo(undefined);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default UserPreferencesPage;\n"],"names":["_ref","value","onChange","language","editable","showLineNumbers","lineWrapping","CodeMirrorProps","script","setScript","useControllableState","defaultValue","extensions","loadLanguage","_jsx","CodeMirror","theme","EditorView","readOnly","basicSetup","lineNumbers","viewUpdate","useStyles","createStyles","css","baiSettingItemCheckbox","_ref2","type","title","description","children","selectProps","disabled","token","useToken","styles","_jsxs","Flex","direction","align","gap","Typography","Text","strong","style","fontSize","undefined","Badge","dot","status","_Fragment","marginTop","marginXS","Checkbox","checked","className","Select","popupMatchSelectWidth","_","TabStyles","TabTitle","count","GroupSettingItems","_ref3","group","hideEmpty","settingItems","length","marginBottom","marginMD","zIndex","background","colorBgContainer","Title","level","Divider","marginSM","map","item","idx","SettingItem","_ref4","settingGroups","tabDirection","showChangedOptionFilter","showResetButton","showSearchBar","t","useTranslation","searchValue","setSearchValue","useState","changedOptionFilter","setChangedOptionFilter","isOpenResetChangesModal","toggle","setIsOpenResetChangesModal","useToggle","activeTabKey","setActiveTabKey","filteredSettingGroups","changedItemValidator","toLowerCase","includes","searchedItemFilter","padding","paddingContentHorizontal","maxWidth","screenLG","justify","Input","prefix","SearchOutlined","placeholder","e","target","whiteSpace","Button","icon","RedoOutlined","onClick","Tabs","activeKey","tabPosition","tabBarStyle","minWidth","items","key","label","Empty","image","PRESENTED_IMAGE_SIMPLE","BAIModal","open","okText","okButtonProps","danger","onOk","forEach","option","setValue","cancelText","onCancel","Alert","showIcon","message","_$map","onRequestClose","columns","hiddenColumnKeys","modalProps","formRef","useRef","columnOptions","column","element","React","props","child","destroyOnClose","centered","_formRef$current","current","validateFields","then","values","catch","Form","ref","preserve","initialValues","selectedColumnKeys","filter","columnKey","layout","Item","name","noStyle","shouldUpdate","prev","cur","searchInput","getFieldValue","searchKeyword","filteredColumns","columnOption","display","height","overflowY","Group","options","flexDirection","node","v0","v1","v2","v3","hash","useHiddenColumnKeysSetting","listName","setHiddenColumnKeys","useBAISettingUserState","ErrorLogList","isOpenClearLogsModal","setIsOpenClearLogsModal","visibleColumnSettingModal","toggleColumnSettingModal","checkedShowOnlyError","setCheckedShowOnlyError","logSearch","setLogSearch","updateKey","checkUpdateKey","useUpdatableState","isPendingRefreshTransition","startRefreshTransition","useTransition","isPendingSearchTransition","startSearchTransition","isPendingReset","startResetTransition","useSuspendedBackendaiClient","dataIndex","render","TextHighlighter","keyword","fixed","record","statusText","storageLogData","useMemo","raw","JSON","parse","localStorage","getItem","log","index","formattedTimeStamp","dayjs","timestamp","format","filteredLogData","regExp","RegExp","test","wrap","paddingContentVertical","paddingLeft","paddingContentHorizontalSM","paddingRight","margin","flexShrink","allowClear","width","ReloadOutlined","loading","DeleteOutlined","Table","pagination","showSizeChanger","indicator","LoadingOutlined","scroll","x","y","isError","dataSource","onRow","color","colorError","paddingXS","paddingBottom","SettingOutlined","confirmLoading","removeItem","TableColumnsSettingModal","baiModalProps","userInfo","useCurrentUserInfo","baiClient","data","keypairs","useTanQuery","queryKey","queryFn","keypair","list","email","res","staleTime","supportMainAccessKey","supports","user","useLazyLoadQuery","_MyKeypairInfoModalQuery","require","footer","rowKey","ellipsis","copyable","main_access_key","Tag","isRefreshModalPending","refreshSSHKeypair","closeIcon","Popconfirm","onConfirm","Spin","spinning","Paragraph","maxHeight","scrollbarWidth","ssh_public_key","text","ssh_private_key","onRequestRefresh","mutationToPostSSHKeypair","useTanMutation","mutationFn","postSSHKeypair","mutate","onSuccess","requiredMark","rules","required","TextArea","rows","backgroundColor","isPendingRefreshModal","startRefreshModalTransition","fetchKey","updateFetchKey","isOpenSSHKeypairGenerationModal","toggleSSHKeypairGenerationModal","isOpenSSHKeypairManualFormModal","toggleSSHKeypairManualFormModal","fetchSSHKeypair","SSHKeypairGenerationModal","SSHKeypairManualFormModal","shellInfo","app","App","useApp","rcfileNames","setRcfileNames","userConfigScript","setUserConfigScript","baiRequestWithPromise","useBaiSignedRequestWithPromise","updateBootStrapScriptMutation","method","url","body","updateUserConfigScriptMutation","path","permission","createUserConfigScriptMutation","deleteUserConfigScriptMutation","fetchScript","response","defaultScript","saveScript","closeAfter","arguments","error","result","success","onError","console","deleteScript","Dropdown","menu","modal","confirm","content","selectedScript","BAICodeEditor","tabParam","withDefault","StringParam","UserPreferencesPage","_languageOptions$find","_languageOptions$find2","curTabKey","setCurTabKey","useQueryParam","desktopNotification","setDesktopNotification","isClassicSessionLauncher","setIsClassicSessionLauncher","compactSidebar","setCompactSidebar","selectedLanguage","setSelectedLanguage","setLanguage","useBAISettingGeneralState","autoAutomaticUpdateCheck","setAutoAutomaticUpdateCheck","autoLogout","setAutoLogout","isOpenSSHKeypairInfoModal","toggleSSHKeypairInfoModal","isOpenSSHKeypairManagementModal","toggleSSHKeypairManagementModal","preserveLogin","setPreserveLogin","experimentalNeoSessionList","setExperimentalNeoSessionList","experimentalAIAgents","setExperimentalAIAgents","experimentalDashboard","setExperimentalDashboard","setShellInfo","isOpenShellScriptEditModal","toggleShellScriptEditModal","languageOptions","defaultLanguage","globalThis","navigator","split","find","Trans","i18nKey","showSearch","event","CustomEvent","detail","document","dispatchEvent","backendaioptions","get","isElectron","Boolean","Card","onTabChange","tabList","bodyStyle","SettingList","MyKeypairInfoModal","SSHKeypairManagementModal","ShellScriptEditModal","afterClose"],"sourceRoot":""}