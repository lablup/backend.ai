{"version":3,"file":"static/js/2962.73d9808e.chunk.js","mappings":"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","sources":["components/BAIProgressWithLabel.tsx","components/BAITable.tsx","components/ComputeSessionNodeItems/SessionReservation.tsx","components/ComputeSessionNodeItems/SessionStatusTag.tsx","usePromiseTracker.ts","components/ComputeSessionNodeItems/TerminateSessionModal.tsx","components/ComputeSessionNodeItems/__generated__/SessionReservationFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionStatusTagFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/TerminateSessionModalFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/TerminateSessionModalRefetchQuery.graphql.ts","components/SessionUsageMonitor.tsx","components/__generated__/SessionUsageMonitorFragment.graphql.ts","hooks/usePainKiller.tsx"],"sourcesContent":["import Flex from './Flex';\nimport { ProgressProps, Typography, theme } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\nexport interface BAIProgressWithLabelProps\n  extends Omit<ProgressProps, 'width' | 'size'> {\n  title?: React.ReactNode;\n  valueLabel?: React.ReactNode;\n  percent?: number;\n  width?: React.CSSProperties['width'];\n  strokeColor?: string;\n  labelStyle?: React.CSSProperties;\n  progressStyle?: React.CSSProperties;\n  size?: 'small' | 'middle' | 'large';\n}\nconst BAIProgressWithLabel: React.FC<BAIProgressWithLabelProps> = ({\n  title,\n  valueLabel,\n  percent,\n  width,\n  strokeColor,\n  labelStyle,\n  progressStyle,\n  size = 'small',\n}) => {\n  const { token } = theme.useToken();\n\n  const fontSize =\n    size === 'small'\n      ? token.fontSizeSM\n      : size === 'middle'\n        ? token.fontSize\n        : token.fontSizeLG;\n  return (\n    <Flex\n      style={{\n        padding: 1,\n        border: `1px solid ${token.colorBorder}`,\n        borderRadius: 3,\n        backgroundColor: token.colorBgContainerDisabled,\n        ...(_.isNumber(width) || _.isString(width)\n          ? { width: width }\n          : { flex: 1 }),\n        ...progressStyle,\n      }}\n      direction=\"column\"\n      align=\"stretch\"\n    >\n      <Flex\n        style={{\n          height: '100%',\n          width: `${!percent || _.isNaN(percent) ? 0 : _.min([percent, 100])}%`,\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          backgroundColor: strokeColor ?? token.colorSuccess,\n          opacity: 0.7,\n          zIndex: 0,\n          overflow: 'hidden',\n        }}\n      ></Flex>\n      <Flex direction=\"row\" justify=\"between\">\n        <Typography.Text style={{ fontSize, ...labelStyle }}>\n          {title}\n        </Typography.Text>\n        <Typography.Text\n          style={{\n            fontSize,\n            color:\n              _.isNaN(percent) || _.isUndefined(percent)\n                ? token.colorTextDisabled\n                : undefined,\n            ...labelStyle,\n          }}\n        >\n          {valueLabel}\n        </Typography.Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default BAIProgressWithLabel;\n","import { useThemeMode } from '../hooks/useThemeMode';\nimport { useDebounce } from 'ahooks';\nimport { ConfigProvider, GetProps, Table, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport { ColumnsType, ColumnType } from 'antd/es/table';\nimport { TableProps } from 'antd/lib';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { Resizable, ResizeCallbackData } from 'react-resizable';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  resizableTable: css`\n    .react-resizable-handle {\n      position: absolute;\n      inset-inline-end: 0px;\n      bottom: 0;\n      z-index: 1;\n      width: 10px;\n      height: 100%;\n      cursor: col-resize;\n    }\n    .ant-table-cell {\n      overflow: hidden;\n      whitespace: 'pre';\n      wordwrap: 'break-word';\n    }\n  `,\n  neoHeader: css`\n    thead.ant-table-thead > tr > th.ant-table-cell {\n      font-weight: 500;\n      color: ${token.colorTextTertiary};\n    }\n  `,\n}));\n\nconst ResizableTitle = (\n  props: React.HTMLAttributes<any> & {\n    onResize: (\n      e: React.SyntheticEvent<Element> | undefined,\n      data: ResizeCallbackData,\n    ) => void;\n    width: number;\n  },\n) => {\n  const { onResize, width, onClick, ...restProps } = props;\n  const wrapRef = useRef<HTMLTableCellElement>(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const debouncedIsResizing = useDebounce(isResizing, { wait: 100 });\n\n  // This is a workaround for the initial width of resizable columns if the width is not specified\n  useEffect(() => {\n    if (wrapRef.current && _.isUndefined(width)) {\n      onResize?.(undefined, {\n        size: {\n          width: wrapRef.current.offsetWidth,\n          height: wrapRef.current.offsetHeight,\n        },\n        node: wrapRef.current,\n        handle: 'e',\n      });\n    }\n  });\n\n  return _.isUndefined(width) ? (\n    <th ref={wrapRef} {...restProps} />\n  ) : (\n    <Resizable\n      width={width}\n      height={0}\n      handle={\n        <span\n          className=\"react-resizable-handle\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        />\n      }\n      onResize={onResize}\n      onResizeStart={() => {\n        setIsResizing(true);\n      }}\n      onResizeStop={() => {\n        setIsResizing(false);\n      }}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th\n        onClick={(e) => {\n          if (debouncedIsResizing) {\n            e.preventDefault();\n          } else {\n            onClick?.(e);\n          }\n        }}\n        {...restProps}\n      />\n    </Resizable>\n  );\n};\n\ninterface BAITableProps<RecordType extends object = any>\n  extends TableProps<RecordType> {\n  resizable?: boolean;\n  neoStyle?: boolean;\n}\n\nconst columnKeyOrIndexKey = (column: any, index: number) =>\n  column.key || `index_${index}`;\nconst generateResizedColumnWidths = (columns?: ColumnsType<any>) => {\n  const widths: Record<string, number> = {};\n  _.each(columns, (column, index) => {\n    widths[columnKeyOrIndexKey(column, index)] = column.width as number;\n  });\n  return widths;\n};\n\nconst BAITable = <RecordType extends object = any>({\n  resizable = false,\n  columns,\n  components,\n  neoStyle,\n  loading,\n  ...tableProps\n}: BAITableProps<RecordType>) => {\n  const { styles } = useStyles();\n  const { token } = theme.useToken();\n  const { isDarkMode } = useThemeMode();\n  const [resizedColumnWidths, setResizedColumnWidths] = useState<\n    Record<string, number>\n  >(generateResizedColumnWidths(columns));\n\n  const mergedColumns = useMemo(() => {\n    return !resizable\n      ? columns\n      : _.map(\n          columns,\n          (column, index) =>\n            ({\n              ...column,\n              width:\n                resizedColumnWidths[columnKeyOrIndexKey(column, index)] ||\n                column.width,\n              onHeaderCell: (column: ColumnType<RecordType>) => {\n                return {\n                  width: column.width,\n                  onResize: (e, { size }) => {\n                    setResizedColumnWidths((prev) => ({\n                      ...prev,\n                      [columnKeyOrIndexKey(column, index)]: size.width,\n                    }));\n                  },\n                } as GetProps<typeof ResizableTitle>;\n              },\n            }) as ColumnType<RecordType>,\n        );\n  }, [resizable, columns, resizedColumnWidths]);\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Table:\n            !isDarkMode && neoStyle\n              ? {\n                  headerBg: '#E3E3E3',\n                  headerSplitColor: token.colorTextQuaternary,\n                  // headerSplitColor: token.colorTextQuaternary\n                }\n              : undefined,\n        },\n      }}\n    >\n      <Table\n        sortDirections={['descend', 'ascend', 'descend']}\n        showSorterTooltip={false}\n        className={classNames(\n          resizable && styles.resizableTable,\n          neoStyle && styles.neoHeader,\n        )}\n        style={{\n          opacity: loading ? 0.7 : 1,\n          transition: 'opacity 0.3s ease',\n        }}\n        components={\n          resizable\n            ? _.merge(components || {}, {\n                header: {\n                  cell: ResizableTitle,\n                },\n              })\n            : components\n        }\n        columns={mergedColumns}\n        {...tableProps}\n      />\n    </ConfigProvider>\n  );\n};\n\nexport default BAITable;\n","import { formatDurationAsDays } from '../../helper';\nimport BAIIntervalView from '../BAIIntervalView';\nimport DoubleTag from '../DoubleTag';\nimport { SessionReservationFragment$key } from './__generated__/SessionReservationFragment.graphql';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst SessionReservation: React.FC<{\n  sessionFrgmt: SessionReservationFragment$key;\n  mode?: 'simple-elapsed' | 'detail';\n}> = ({ sessionFrgmt, mode = 'detail' }) => {\n  const { t } = useTranslation();\n  const session = useFragment(\n    graphql`\n      fragment SessionReservationFragment on ComputeSessionNode {\n        id\n        created_at\n        starts_at\n        terminated_at\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  return (\n    <>\n      {mode !== 'simple-elapsed' && dayjs(session.created_at).format('lll')}\n      <BAIIntervalView\n        key={session.id}\n        callback={() => {\n          const begin = session?.starts_at || session?.created_at;\n          return begin && dayjs(begin).isBefore()\n            ? formatDurationAsDays(begin, session?.terminated_at)\n            : '-';\n        }}\n        delay={1000}\n        render={(intervalValue) =>\n          mode === 'simple-elapsed' ? (\n            intervalValue\n          ) : (\n            <DoubleTag\n              values={[\n                { label: t('session.ElapsedTime') },\n                { label: intervalValue },\n              ]}\n            />\n          )\n        }\n      />\n    </>\n  );\n};\n\nexport default SessionReservation;\n","import Flex from '../Flex';\nimport {\n  SessionStatusTagFragment$data,\n  SessionStatusTagFragment$key,\n} from './__generated__/SessionStatusTagFragment.graphql';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Tag, theme, Tooltip } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface SessionStatusTagProps {\n  sessionFrgmt?: SessionStatusTagFragment$key | null;\n  showInfo?: boolean;\n}\nconst statusTagColor = {\n  //prepare\n  RESTARTING: 'blue',\n  PREPARING: 'blue',\n  PREPARED: 'blue',\n  CREATING: 'blue',\n  PULLING: 'blue',\n  //running\n  RUNNING: 'green',\n  PENDING: 'green',\n  SCHEDULED: 'green',\n  //error\n  ERROR: 'red',\n  //finished return undefined\n};\n\nconst isTransitional = (session: SessionStatusTagFragment$data) => {\n  return [\n    'RESTARTING',\n    'TERMINATING',\n    'PENDING',\n    `PREPARING`,\n    'CREATING',\n    'PULLING',\n  ].includes(session?.status || '');\n};\n\nconst statusInfoTagColor = {\n  // 'idle-timeout': undefined,\n  // 'user-requested': undefined,\n  // scheduled: undefined,\n  // 'self-terminated': undefined,\n  'no-available-instances': 'red',\n  'failed-to-start': 'red',\n  'creation-failed': 'red',\n};\nconst SessionStatusTag: React.FC<SessionStatusTagProps> = ({\n  sessionFrgmt,\n  showInfo,\n}) => {\n  const session = useFragment(\n    graphql`\n      fragment SessionStatusTagFragment on ComputeSessionNode {\n        id\n        name\n        status\n        status_info\n      }\n    `,\n    sessionFrgmt,\n  );\n  const { token } = theme.useToken();\n\n  return session ? (\n    _.isEmpty(session.status_info) || !showInfo ? (\n      <Tooltip title={session.status_info}>\n        <Tag\n          color={\n            session.status ? _.get(statusTagColor, session.status) : undefined\n          }\n          icon={isTransitional(session) ? <LoadingOutlined spin /> : undefined}\n          // Comment out to match the legacy tag style temporarily\n          style={{\n            borderRadius: 11,\n            paddingLeft: token.paddingSM,\n            paddingRight: token.paddingSM,\n          }}\n        >\n          {session.status || ' '}\n        </Tag>\n      </Tooltip>\n    ) : (\n      <Flex>\n        <Tag\n          style={{\n            margin: 0,\n            zIndex: 1,\n            paddingLeft: token.paddingSM,\n            borderTopLeftRadius: 11,\n            borderBottomLeftRadius: 11,\n          }}\n          color={\n            session.status ? _.get(statusTagColor, session.status) : undefined\n          }\n        >\n          {session.status}\n        </Tag>\n        <Tag\n          style={{\n            margin: 0,\n            marginLeft: -1,\n            borderStyle: 'dashed',\n            paddingRight: token.paddingSM,\n            borderTopRightRadius: 11,\n            borderBottomRightRadius: 11,\n            color:\n              session.status_info &&\n              _.get(statusInfoTagColor, session.status_info)\n                ? undefined\n                : token.colorTextSecondary,\n          }}\n          color={\n            session.status_info\n              ? _.get(statusInfoTagColor, session.status_info)\n              : undefined\n          }\n        >\n          {session.status_info}\n        </Tag>\n      </Flex>\n    )\n  ) : null;\n};\n\nexport default SessionStatusTag;\n","import { useCallback, useState } from 'react';\n\ninterface PromiseStatus<TData, TError> {\n  pending: number;\n  resolved: number;\n  rejected: number;\n  results: {\n    resolved: TData[];\n    rejected: TError[];\n  };\n}\n\nconst initialStatus = {\n  pending: 0,\n  resolved: 0,\n  rejected: 0,\n  results: {\n    resolved: [],\n    rejected: [],\n  },\n};\n\nexport function usePromiseTracker<TData = any, TError = Error>() {\n  const [status, setStatus] =\n    useState<PromiseStatus<TData, TError>>(initialStatus);\n\n  const reset = useCallback(() => {\n    setStatus(initialStatus);\n  }, []);\n\n  const trackPromise = useCallback(\n    <T extends TData>(promise: Promise<T>): Promise<T> => {\n      setStatus((prev) => ({\n        ...prev,\n        pending: prev.pending + 1,\n      }));\n\n      return promise\n        .then((result) => {\n          setStatus((prev) => ({\n            ...prev,\n            pending: prev.pending - 1,\n            resolved: prev.resolved + 1,\n            results: {\n              ...prev.results,\n              resolved: [...prev.results.resolved, result],\n            },\n          }));\n          return result;\n        })\n        .catch((error: TError) => {\n          setStatus((prev) => ({\n            ...prev,\n            pending: prev.pending - 1,\n            rejected: prev.rejected + 1,\n            results: {\n              ...prev.results,\n              rejected: [...prev.results.rejected, error],\n            },\n          }));\n          throw error;\n        });\n    },\n    [],\n  );\n\n  return {\n    pendingCount: status.pending,\n    resolvedCount: status.resolved,\n    rejectedCount: status.rejected,\n    results: status.results,\n    trackPromise,\n    reset,\n  };\n}\n","import { filterEmptyItem } from '../../helper';\nimport { BackendAIClient, useSuspendedBackendaiClient } from '../../hooks';\nimport { useCurrentUserRole } from '../../hooks/backendai';\nimport { useSetBAINotification } from '../../hooks/useBAINotification';\nimport { useCurrentProjectValue } from '../../hooks/useCurrentProject';\nimport { usePainKiller } from '../../hooks/usePainKiller';\nimport { usePromiseTracker } from '../../usePromiseTracker';\nimport BAIModal from '../BAIModal';\nimport Flex from '../Flex';\nimport {\n  TerminateSessionModalFragment$data,\n  TerminateSessionModalFragment$key,\n} from './__generated__/TerminateSessionModalFragment.graphql';\nimport { TerminateSessionModalRefetchQuery } from './__generated__/TerminateSessionModalRefetchQuery.graphql';\nimport { Card, Checkbox, ModalProps, Typography } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { fetchQuery, useFragment, useRelayEnvironment } from 'react-relay';\n\ninterface TerminateSessionModalProps\n  extends Omit<ModalProps, 'onOk' | 'onCancel'> {\n  sessionFrgmts?: TerminateSessionModalFragment$key;\n  onRequestClose: (success: boolean) => void;\n}\n\n// Cannot destroy sessions in scheduled/preparing/pulling/prepared/creating/terminating/error status\n\nconst useStyle = createStyles(({ css, token }) => {\n  return {\n    custom: css`\n      ul {\n        list-style-type: circle;\n        padding-left: ${token.paddingMD}px;\n      }\n    `,\n  };\n});\n\ntype KernelType = NonNullableNodeOnEdges<\n  NonNullable<TerminateSessionModalFragment$data[number]>['kernel_nodes']\n>;\n\ntype SessionForTerminateModal = NonNullable<\n  TerminateSessionModalFragment$data[number]\n>;\n\nconst sendRequest = async (\n  rqst: {\n    uri: string;\n  } & RequestInit,\n) => {\n  let resp;\n  let body;\n  try {\n    if (rqst.method === 'GET') {\n      rqst.body = undefined;\n    }\n    resp = await fetch(rqst.uri, rqst);\n    const contentType = resp.headers.get('Content-Type');\n    if (contentType === null) {\n      body = resp.ok;\n      if (!resp.ok) {\n        // @ts-ignore\n        throw new Error(resp);\n      }\n    } else if (\n      contentType.startsWith('application/json') ||\n      contentType.startsWith('application/problem+json')\n    ) {\n      body = await resp.json();\n    } else if (contentType.startsWith('text/')) {\n      body = await resp.text();\n    } else {\n      body = await resp.blob();\n    }\n    if (!resp.ok) {\n      throw body;\n    }\n  } catch (e) {\n    return resp;\n  }\n  return body;\n};\n\nconst getWSProxyVersion = async (\n  resourceGroupIdOfSession: string,\n  projectId: string,\n  baiClient: BackendAIClient,\n) => {\n  // TODO: remove globalThis.appLauncher(backend-ai-app-launcher) dependency after migration to React\n  if (baiClient.debug === true) {\n    // @ts-ignore\n    if (globalThis.appLauncher?.forceUseV1Proxy?.checked) return 'v1';\n    // @ts-ignore\n    else if (globalThis.appLauncher?.forceUseV2Proxy?.checked) return 'v2';\n  }\n\n  // @ts-ignore\n  if (globalThis.isElectron) {\n    return 'v1';\n  }\n  return baiClient.scalingGroup\n    .getWsproxyVersion(resourceGroupIdOfSession, projectId)\n    .then((result: { wsproxy_version: string }) => {\n      return result.wsproxy_version;\n    });\n};\n\nconst getProxyURL = async (\n  resourceGroupIdOfSession: string,\n  projectId: string,\n  baiClient: BackendAIClient,\n) => {\n  let url = 'http://127.0.0.1:5050/';\n  if (\n    // @ts-ignore\n    globalThis.__local_proxy !== undefined &&\n    // @ts-ignore\n    globalThis.__local_proxy.url !== undefined\n  ) {\n    // @ts-ignore\n    url = globalThis.__local_proxy.url;\n  } else if (baiClient._config.proxyURL !== undefined) {\n    url = baiClient._config.proxyURL;\n  }\n  if (resourceGroupIdOfSession !== undefined && projectId !== undefined) {\n    const wsproxyVersion = await getWSProxyVersion(\n      resourceGroupIdOfSession,\n      projectId,\n      baiClient,\n    );\n    if (wsproxyVersion !== 'v1') {\n      url = new URL(`${wsproxyVersion}/`, url).href;\n    }\n  }\n  return url;\n};\n\nconst terminateApp = async (\n  session: SessionForTerminateModal,\n  accessKey: string,\n  currentProjectId: string,\n  baiClient: BackendAIClient,\n) => {\n  const proxyURL = await getProxyURL(\n    session.scaling_group,\n    currentProjectId,\n    baiClient,\n  );\n\n  const rqst = {\n    method: 'GET',\n    uri: new URL(`proxy/${accessKey}/${session.row_id}`, proxyURL).href,\n  };\n\n  return sendRequest(rqst).then((response) => {\n    let uri = new URL(`proxy/${accessKey}/${session.row_id}/delete`, proxyURL);\n    if (localStorage.getItem('backendaiwebui.appproxy-permit-key')) {\n      uri.searchParams.set(\n        'permit_key',\n        localStorage.getItem('backendaiwebui.appproxy-permit-key') || '',\n      );\n      uri = new URL(uri.href);\n    }\n    if (response !== undefined && response.code !== 404) {\n      return sendRequest({\n        method: 'GET',\n        uri: uri.href,\n        credentials: 'include',\n        mode: 'cors',\n      });\n    }\n    return true;\n  });\n};\n\nconst TerminateSessionModal: React.FC<TerminateSessionModalProps> = ({\n  sessionFrgmts,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const openTerminateModal = false;\n  const { t } = useTranslation();\n  const { styles } = useStyle();\n  const sessions = useFragment(\n    graphql`\n      fragment TerminateSessionModalFragment on ComputeSessionNode\n      @relay(plural: true) {\n        id @required(action: THROW)\n        row_id\n        name\n        scaling_group @required(action: NONE)\n        kernel_nodes {\n          edges {\n            node {\n              container_id\n              agent_id\n            }\n          }\n        }\n      }\n    `,\n    sessionFrgmts,\n  );\n\n  const [isForce, setIsForce] = useState(false);\n  const userRole = useCurrentUserRole();\n\n  const baiClient = useSuspendedBackendaiClient();\n\n  const currentProject = useCurrentProjectValue();\n\n  const { pendingCount, trackPromise } = usePromiseTracker();\n\n  const terminiateSession = (session: SessionForTerminateModal) => {\n    return terminateApp(\n      session,\n      baiClient._config.accessKey,\n      currentProject.id,\n      baiClient,\n    )\n      .catch((e) => {\n        return {\n          error: e,\n        };\n      })\n      .then((result) => {\n        const err = result?.error;\n        if (\n          err === undefined || //no error\n          (err && // Even if wsproxy address is invalid, session must be deleted.\n            err.message &&\n            (err.statusCode === 404 || err.statusCode === 500))\n        ) {\n          // BAI client destroy try to request 3times as default\n          return baiClient.destroy(\n            session.row_id,\n            baiClient._config.accessKey,\n            isForce,\n          );\n        } else {\n          throw err;\n        }\n      });\n  };\n\n  const relayEvn = useRelayEnvironment();\n  const painKiller = usePainKiller();\n  const { upsertNotification } = useSetBAINotification();\n\n  return (\n    <BAIModal\n      centered\n      title={t('session.TerminateSession')}\n      open={openTerminateModal}\n      confirmLoading={pendingCount > 0}\n      onOk={() => {\n        const promises = _.map(\n          filterEmptyItem(_.castArray(sessions)),\n          (session) => {\n            return terminiateSession(session)\n              .catch((err) => {\n                upsertNotification({\n                  message: painKiller.relieve(err?.title),\n                  description: err?.description,\n                  open: true,\n                });\n              })\n              .finally(() => {\n                // refetch session node\n                return fetchQuery<TerminateSessionModalRefetchQuery>(\n                  relayEvn,\n                  graphql`\n                    query TerminateSessionModalRefetchQuery(\n                      $id: GlobalIDField!\n                      $project_id: UUID!\n                    ) {\n                      compute_session_node(id: $id, project_id: $project_id) {\n                        id\n                        status\n                      }\n                    }\n                  `,\n                  {\n                    id: session.id,\n                    project_id: currentProject.id,\n                  },\n                ).toPromise();\n              });\n          },\n        );\n        promises.map(trackPromise);\n        Promise.allSettled(promises).then((results) => {\n          setIsForce(false);\n          onRequestClose(true);\n          // TODO: remove below code after session list migration to React\n          const event = new CustomEvent('backend-ai-session-list-refreshed', {\n            detail: 'running',\n          });\n          document.dispatchEvent(event);\n        });\n      }}\n      okText={isForce ? t('button.ForceTerminate') : t('session.Terminate')}\n      okType=\"danger\"\n      okButtonProps={{\n        type: isForce ? 'primary' : 'default',\n      }}\n      onCancel={() => {\n        setIsForce(false);\n        onRequestClose(false);\n      }}\n      {...modalProps}\n    >\n      <Flex\n        className={styles.custom}\n        direction=\"column\"\n        align=\"stretch\"\n        gap={'xs'}\n      >\n        <Typography.Text>\n          {t('userSettings.SessionTerminationDialog')}\n        </Typography.Text>\n        <Typography.Text mark>\n          {sessions?.length === 1\n            ? sessions?.[0]?.name\n            : `${sessions?.length} sessions`}\n        </Typography.Text>\n        <Checkbox\n          checked={isForce}\n          onChange={(e) => {\n            setIsForce(e.target.checked);\n          }}\n        >\n          {t('button.ForceTerminate')}\n        </Checkbox>\n        {isForce && (\n          <Card>\n            <Typography.Paragraph type=\"danger\">\n              {t('session.ForceTerminateWarningMsg')}\n            </Typography.Paragraph>\n            <ul>\n              <li>{t('session.ForceTerminateWarningMsg2')}</li>\n              <li>{t('session.ForceTerminateWarningMsg3')}</li>\n            </ul>\n            {userRole === 'superadmin' && (\n              <>\n                <Card type=\"inner\" title={t('session.ContainerToCleanUp')}>\n                  {_.chain(sessions)\n                    .map((s) => s?.kernel_nodes?.edges)\n                    .map((edges) => edges?.map((e) => e?.node))\n                    .flatten()\n                    .groupBy('agent_id')\n                    .map((kernels: Array<KernelType>, agentId: string) => {\n                      return (\n                        <>\n                          {agentId}\n                          <ul key={agentId}>\n                            {kernels.map((k) => (\n                              <li key={k.container_id}>\n                                <Typography.Text copyable>\n                                  {k.container_id}\n                                </Typography.Text>\n                              </li>\n                            ))}\n                          </ul>\n                        </>\n                      );\n                    })\n                    .value()}\n                </Card>\n              </>\n            )}\n          </Card>\n        )}\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default TerminateSessionModal;\n","/**\n * @generated SignedSource<<e78291f46be71fea16e1b5ca0a5beb89>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionReservationFragment$data = {\n  readonly created_at: string | null | undefined;\n  readonly id: string;\n  readonly starts_at: string | null | undefined;\n  readonly terminated_at: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionReservationFragment\";\n};\nexport type SessionReservationFragment$key = {\n  readonly \" $data\"?: SessionReservationFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionReservationFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionReservationFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"starts_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"terminated_at\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"c0801fe0feb37a1bce71461255d0998f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b4f4d1ab8957ce220ae8b55938b0f742>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionStatusTagFragment$data = {\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly status_info: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionStatusTagFragment\";\n};\nexport type SessionStatusTagFragment$key = {\n  readonly \" $data\"?: SessionStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status_info\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"28d44a009b8d8ecc51f60af3fc9ef8c8\";\n\nexport default node;\n","/**\n * @generated SignedSource<<f9f776f5c9fc5cb8f8b10d8b5eadc8d2>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type TerminateSessionModalFragment$data = ReadonlyArray<{\n  readonly id: string;\n  readonly kernel_nodes: {\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly agent_id: string | null | undefined;\n        readonly container_id: string | null | undefined;\n      } | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n  readonly name: string | null | undefined;\n  readonly row_id: string | null | undefined;\n  readonly scaling_group: string;\n  readonly \" $fragmentType\": \"TerminateSessionModalFragment\";\n} | null | undefined>;\nexport type TerminateSessionModalFragment$key = ReadonlyArray<{\n  readonly \" $data\"?: TerminateSessionModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"TerminateSessionModalFragment\">;\n}>;\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": {\n    \"plural\": true\n  },\n  \"name\": \"TerminateSessionModalFragment\",\n  \"selections\": [\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      \"action\": \"THROW\",\n      \"path\": \"id\"\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"row_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"scaling_group\",\n        \"storageKey\": null\n      },\n      \"action\": \"NONE\",\n      \"path\": \"scaling_group\"\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KernelConnection\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"kernel_nodes\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"KernelEdge\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"edges\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"KernelNode\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"node\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"container_id\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"agent_id\",\n                  \"storageKey\": null\n                }\n              ],\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"547d4e3bad0a9d011f71f51bc2fb5bb3\";\n\nexport default node;\n","/**\n * @generated SignedSource<<816f3eecae241f4dab00312761810670>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type TerminateSessionModalRefetchQuery$variables = {\n  id: any;\n  project_id: string;\n};\nexport type TerminateSessionModalRefetchQuery$data = {\n  readonly compute_session_node: {\n    readonly id: string;\n    readonly status: string | null | undefined;\n  } | null | undefined;\n};\nexport type TerminateSessionModalRefetchQuery = {\n  response: TerminateSessionModalRefetchQuery$data;\n  variables: TerminateSessionModalRefetchQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"project_id\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"id\",\n        \"variableName\": \"id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"project_id\",\n        \"variableName\": \"project_id\"\n      }\n    ],\n    \"concreteType\": \"ComputeSessionNode\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"compute_session_node\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"status\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"TerminateSessionModalRefetchQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"TerminateSessionModalRefetchQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"42872ac8084736aaf26675f9531456db\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"TerminateSessionModalRefetchQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query TerminateSessionModalRefetchQuery(\\n  $id: GlobalIDField!\\n  $project_id: UUID!\\n) {\\n  compute_session_node(id: $id, project_id: $project_id) {\\n    id\\n    status\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"6c928af0802a6732e5237c3f6c46db99\";\n\nexport default node;\n","import {\n  convertBinarySizeUnit,\n  convertDecimalSizeUnit,\n  filterEmptyItem,\n  toFixedFloorWithoutTrailingZeros,\n} from '../helper';\nimport { useResourceSlotsDetails } from '../hooks/backendai';\nimport BAIProgressWithLabel from './BAIProgressWithLabel';\nimport Flex from './Flex';\nimport { SessionUsageMonitorFragment$key } from './__generated__/SessionUsageMonitorFragment.graphql';\nimport { ProgressProps, Tooltip, Typography, theme, Row, Col } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useMemo } from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface SessionUsageMonitorProps extends ProgressProps {\n  sessionFrgmt: SessionUsageMonitorFragment$key | null;\n  size?: 'small' | 'default';\n}\n\ninterface SessionUtilItemProps {\n  size: 'small' | 'default';\n  title: React.ReactNode;\n  percent: string;\n  tooltipTitle?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nconst SessionUtilItem: React.FC<SessionUtilItemProps> = ({\n  size,\n  title,\n  percent,\n  tooltipTitle,\n  description,\n}) => {\n  const { token } = theme.useToken();\n\n  const formattedPercent = toFixedFloorWithoutTrailingZeros(percent || 0, 1);\n  const percentLabel = formattedPercent + '%';\n\n  if (size === 'default') {\n    return (\n      <>\n        <Flex justify=\"between\">\n          <Typography.Text>{title}</Typography.Text>\n          {description && (\n            <Typography.Text\n              type=\"secondary\"\n              style={{ fontSize: token.fontSizeSM }}\n            >\n              {description}\n            </Typography.Text>\n          )}\n        </Flex>\n        <BAIProgressWithLabel\n          percent={_.toNumber(percent)}\n          valueLabel={percentLabel}\n          strokeColor=\"#BFBFBF\"\n          progressStyle={{ border: 'none' }}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tooltip title={tooltipTitle || title} placement=\"left\">\n      <Flex direction=\"row\" gap={'xxs'}>\n        <Flex\n          style={{\n            // Max width is 140px (even if over 100%), min width is 3px\n            width: _.min([\n              _.max([Math.round(_.toNumber(percent) * 1.4), 3]),\n              140,\n            ]),\n            height: 12,\n            backgroundColor: '#BFBFBF',\n          }}\n        ></Flex>\n        <Typography.Text\n          style={{\n            fontSize: token.fontSizeSM,\n            lineHeight: `${token.fontSizeSM}px`,\n          }}\n        >\n          {_.toNumber(percent).toFixed(0) + '%'}\n        </Typography.Text>\n      </Flex>\n    </Tooltip>\n  );\n};\n\nconst SessionUsageMonitor: React.FC<SessionUsageMonitorProps> = ({\n  sessionFrgmt,\n  size = 'default',\n}) => {\n  const { mergedResourceSlots } = useResourceSlotsDetails();\n\n  const sessionNode = useFragment(\n    graphql`\n      fragment SessionUsageMonitorFragment on ComputeSessionNode {\n        kernel_nodes {\n          edges {\n            node {\n              live_stat\n              occupied_slots\n            }\n          }\n        }\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  const firstKernelNode = _.get(sessionNode, 'kernel_nodes.edges[0].node');\n  const occupiedSlots = useMemo(\n    () => JSON.parse(firstKernelNode?.occupied_slots ?? '{}'),\n    [firstKernelNode?.occupied_slots],\n  );\n  const resourceSlotNames = _.keysIn(occupiedSlots);\n  const liveStat = JSON.parse(\n    _.get(sessionNode, 'kernel_nodes.edges[0].node.live_stat') ?? '{}',\n  );\n\n  // to display util first, mem second\n  const sortedLiveStat = useMemo(\n    () =>\n      Object.keys(liveStat)\n        .sort((a, b) => {\n          const aUtil = a.includes('_util');\n          const bUtil = b.includes('_util');\n          const aMem = a.includes('_mem');\n          const bMem = b.includes('_mem');\n\n          if (aUtil && !bUtil) return -1;\n          if (!aUtil && bUtil) return 1;\n          if (aMem && !bMem) return -1;\n          if (!aMem && bMem) return 1;\n\n          return 0;\n        })\n        .reduce((acc: { [key: string]: any }, key) => {\n          acc[key] = liveStat[key];\n          return acc;\n        }, {}),\n    [liveStat],\n  );\n\n  const displayMemoryUsage = (\n    current: string,\n    capacity: string,\n    decimalSize: number = 2,\n  ) => {\n    return `${convertBinarySizeUnit(current, 'g', decimalSize)?.numberFixed ?? '-'} / ${\n      convertBinarySizeUnit(capacity, 'g', decimalSize)?.numberFixed ?? '-'\n    } GiB`;\n  };\n\n  const utilItems = filterEmptyItem([\n    sortedLiveStat?.cpu_util && (\n      <SessionUtilItem\n        key={'cpu'}\n        size={size}\n        title={mergedResourceSlots?.['cpu']?.human_readable_name}\n        percent={sortedLiveStat?.cpu_util?.pct || 0}\n      />\n    ),\n    sortedLiveStat?.mem && (\n      <SessionUtilItem\n        key={'mem'}\n        size={size}\n        title={mergedResourceSlots?.['mem']?.human_readable_name}\n        percent={sortedLiveStat?.mem?.pct || 0}\n        description={displayMemoryUsage(\n          sortedLiveStat?.mem?.current,\n          occupiedSlots?.mem,\n        )}\n        tooltipTitle={\n          <Flex direction=\"column\" align=\"stretch\">\n            {mergedResourceSlots?.['mem']?.human_readable_name}\n            <br />\n            {displayMemoryUsage(\n              sortedLiveStat?.mem?.current,\n              occupiedSlots?.mem,\n            )}\n          </Flex>\n        }\n      />\n    ),\n    ..._.map(\n      _.omit(sortedLiveStat, 'cpu_util', 'cpu_used', 'mem'),\n      (value, key) => {\n        const deviceName = _.split(key, '_')[0];\n        let deviceKey = _.find(resourceSlotNames, (name) =>\n          _.includes(name, deviceName),\n        );\n\n        if (size === 'small' && !key?.endsWith('mem')) {\n          deviceKey = undefined;\n        }\n\n        return deviceKey ? (\n          <SessionUtilItem\n            key={key}\n            size={size}\n            title={\n              <>\n                {mergedResourceSlots?.[deviceKey]?.human_readable_name}\n                <Typography.Text type=\"secondary\">\n                  {_.includes(key, 'util') && ' (util)'}\n                  {_.includes(key, 'mem') && ' (mem)'}\n                </Typography.Text>\n              </>\n            }\n            percent={value.pct || 0}\n            description={\n              _.includes(key, 'mem')\n                ? displayMemoryUsage(value?.current, value?.capacity)\n                : undefined\n            }\n            tooltipTitle={\n              <Flex direction=\"column\" align=\"stretch\">\n                {mergedResourceSlots?.[deviceKey]?.human_readable_name}\n                {_.includes(key, 'mem') && (\n                  <>\n                    (mem)\n                    <br />\n                    {displayMemoryUsage(value?.current, value?.capacity)}\n                  </>\n                )}\n              </Flex>\n            }\n          />\n        ) : null;\n      },\n    ),\n  ]);\n\n  return (\n    <Row gutter={[16, 16]}>\n      {size === 'default' ? (\n        _.map(utilItems, (item, index) => (\n          <Col xs={24} sm={12} key={index}>\n            <Flex direction=\"column\" align=\"stretch\">\n              {item}\n            </Flex>\n          </Col>\n        ))\n      ) : (\n        <Flex direction=\"column\" align=\"stretch\" gap={3}>\n          {utilItems}\n        </Flex>\n      )}\n      {size === 'default' && (\n        <Col span={24}>\n          <Flex justify=\"end\">\n            <Typography.Text>\n              {`I/O Read: ${convertDecimalSizeUnit(sortedLiveStat?.io_read?.current, 'm')?.numberUnit ?? '-'}B / Write: ${convertDecimalSizeUnit(sortedLiveStat?.io_write?.current, 'm')?.numberUnit ?? '-'}B`}\n            </Typography.Text>\n          </Flex>\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nexport default SessionUsageMonitor;\n","/**\n * @generated SignedSource<<b2e03ee4c0f214048203611ced0c343d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionUsageMonitorFragment$data = {\n  readonly kernel_nodes: {\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly live_stat: string | null | undefined;\n        readonly occupied_slots: string | null | undefined;\n      } | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n  readonly \" $fragmentType\": \"SessionUsageMonitorFragment\";\n};\nexport type SessionUsageMonitorFragment$key = {\n  readonly \" $data\"?: SessionUsageMonitorFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionUsageMonitorFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionUsageMonitorFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KernelConnection\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"kernel_nodes\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"KernelEdge\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"edges\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"KernelNode\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"node\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"live_stat\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"occupied_slots\",\n                  \"storageKey\": null\n                }\n              ],\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"62951e4aee90e7e894e7f47a02b84dab\";\n\nexport default node;\n","import { useTranslation } from 'react-i18next';\n\nconst errorMessageTable: {\n  [key: string]: string;\n} = {\n  \"Cannot read property 'map' of null\": 'error.APINotSupported',\n  'TypeError: NetworkError when attempting to fetch resource.':\n    'error.NetworkConnectionFailed', //_t('error.NetworkConnectionFailed')\n  // Login\n  'Login failed. Check login information.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'User credential mismatch.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'Authentication failed. Check information and manager status.':\n    'error.AuthenticationFailed', //_t('error.AuthenticationFailed')\n  'Too many failed login attempts': 'error.TooManyLoginFailures', //_t('error.TooManyLoginFailures')\n  // virtual folders\n  'server responded failure: 400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  '400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - One of your accessible vfolders already has the name you requested.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - You cannot create more vfolders.':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (You cannot create more vfolders.)':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Cannot change the options of a vfolder that is not owned by myself.':\n    'error.CannotChangeVirtualFolderOption', //_t('error.CannotChangeVirtualFolderOption')\n  'server responded failure: 403 Forbidden - Cannot share private dot-prefixed vfolders.':\n    'error.CannotSharePrivateAutomountFolder', //_t('error.CannotSharePrivateAutomountFolder')\n  'server responded failure: 404 Not Found - No such vfolder invitation.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  'server responded failure: 404 Not Found - No such user.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  // Resource\n  'server responded failure: 412 Precondition Failed - You have reached your resource limit.':\n    'error.ReachedResourceLimit', //_t('error.ReachedResourceLimit')\n  // User\n  \"Cannot read property 'split' of undefined\": 'error.UserHasNoGroup', //_t('error.UserHasNoGroup')\n};\nconst regexTable: {\n  [key: string]: string;\n} = {\n  '\\\\w*not found matched token with email\\\\w*': 'error.InvalidSignupToken', //_t('error.InvalidSignupToken')\n  '\\\\w*Access key not found\\\\w*': 'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  '\\\\w*401 Unauthorized - Credential/signature mismatch\\\\w*':\n    'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  'integrity error: duplicate key value violates unique constraint \"pk_resource_presets\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ResourcePolicyAlreadyExist', //_t('error.ResourcePolicyAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"pk_scaling_groups\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ScalingGroupAlreadyExist', //_t('error.ScalingGroupAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"uq_users_username\"[\\\\n]DETAIL:  Key \\\\(username\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.UserNameAlreadyExist', //_t('error.UserNameAlreadyExist')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (Your resource quota is exceeded. (cpu=24 mem=512g cuda.shares=80))':\n    'error.ResourceLimitExceed', //_t('error.ResourceLimitExceed')\n  '\\\\w*Key \\\\(name\\\\)=\\\\(.+\\\\) is still referenced from table \"keypairs\"\\\\.\\\\w*':\n    'error.ResourcePolicyStillReferenced', //_t('error.ResourcePolicyStillReferenced')\n  'Your resource request is smaller than the minimum required by the image. (\\\\w*)':\n    'error.SmallerResourceThenImageRequires', //_t('error.SmallerResourceThenImageRequires')\n};\n\nexport const usePainKiller = () => {\n  const { t } = useTranslation();\n  const relieve = (msg: string) => {\n    if (typeof msg === 'undefined') {\n      if (\n        // @ts-ignore\n        globalThis.backendaiclient === undefined ||\n        // @ts-ignore\n        globalThis.backendaiclient === null\n      ) {\n        return '_DISCONNECTED';\n      } else {\n        return 'Problem occurred.';\n      }\n    }\n    // @ts-ignore\n    if (globalThis.backendaiwebui.debug === true) {\n      return msg;\n    }\n    if ({}.hasOwnProperty.call(errorMessageTable, msg)) {\n      return t(errorMessageTable[msg]);\n    } else {\n      for (const regex of Object.keys(regexTable)) {\n        if (RegExp(regex).test(msg)) {\n          return t(regexTable[regex]);\n        }\n      }\n      return msg; // Bypass message. It will log on log panel\n    }\n  };\n  return { relieve };\n};\n"],"names":["_ref","title","valueLabel","percent","width","strokeColor","labelStyle","progressStyle","size","token","theme","useToken","fontSize","fontSizeSM","fontSizeLG","_jsxs","Flex","style","padding","border","colorBorder","borderRadius","backgroundColor","colorBgContainerDisabled","_","flex","direction","align","children","_jsx","height","position","left","top","colorSuccess","opacity","zIndex","overflow","justify","Typography","Text","color","colorTextDisabled","undefined","useStyles","createStyles","css","resizableTable","neoHeader","colorTextTertiary","ResizableTitle","props","onResize","onClick","restProps","wrapRef","useRef","isResizing","setIsResizing","useState","debouncedIsResizing","useDebounce","wait","useEffect","current","offsetWidth","offsetHeight","node","handle","ref","Resizable","className","e","stopPropagation","onResizeStart","onResizeStop","draggableOpts","enableUserSelectHack","preventDefault","columnKeyOrIndexKey","column","index","key","_ref2","resizable","columns","components","neoStyle","loading","tableProps","styles","isDarkMode","useThemeMode","resizedColumnWidths","setResizedColumnWidths","widths","generateResizedColumnWidths","mergedColumns","useMemo","onHeaderCell","_ref3","prev","ConfigProvider","Table","headerBg","headerSplitColor","colorTextQuaternary","sortDirections","showSorterTooltip","classNames","transition","header","cell","sessionFrgmt","mode","t","useTranslation","session","useFragment","_SessionReservationFragment","require","_Fragment","dayjs","created_at","format","BAIIntervalView","callback","begin","starts_at","isBefore","formatDurationAsDays","terminated_at","delay","render","intervalValue","DoubleTag","values","label","id","statusTagColor","RESTARTING","PREPARING","PREPARED","CREATING","PULLING","RUNNING","PENDING","SCHEDULED","ERROR","isTransitional","includes","status","statusInfoTagColor","showInfo","_SessionStatusTagFragment","status_info","Tooltip","Tag","icon","LoadingOutlined","spin","paddingLeft","paddingSM","paddingRight","margin","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","borderStyle","borderTopRightRadius","borderBottomRightRadius","colorTextSecondary","initialStatus","pending","resolved","rejected","results","useStyle","custom","paddingMD","sendRequest","async","resp","body","rqst","method","fetch","uri","contentType","headers","get","ok","Error","startsWith","json","text","blob","getProxyURL","resourceGroupIdOfSession","projectId","baiClient","url","globalThis","__local_proxy","_config","proxyURL","wsproxyVersion","debug","_globalThis$appLaunch","_globalThis$appLaunch2","_globalThis$appLaunch3","_globalThis$appLaunch4","appLauncher","forceUseV1Proxy","checked","forceUseV2Proxy","isElectron","scalingGroup","getWsproxyVersion","then","result","wsproxy_version","getWSProxyVersion","URL","href","_sessions$","sessionFrgmts","onRequestClose","modalProps","sessions","_TerminateSessionModalFragment","isForce","setIsForce","userRole","useCurrentUserRole","useSuspendedBackendaiClient","currentProject","useCurrentProjectValue","pendingCount","trackPromise","setStatus","reset","useCallback","promise","catch","error","resolvedCount","rejectedCount","usePromiseTracker","terminiateSession","accessKey","currentProjectId","scaling_group","row_id","response","localStorage","getItem","searchParams","set","code","credentials","terminateApp","err","message","statusCode","destroy","relayEvn","useRelayEnvironment","painKiller","usePainKiller","upsertNotification","useSetBAINotification","BAIModal","centered","open","confirmLoading","onOk","promises","filterEmptyItem","relieve","description","finally","fetchQuery","_TerminateSessionModalRefetchQuery","project_id","toPromise","map","Promise","allSettled","event","CustomEvent","detail","document","dispatchEvent","okText","okType","okButtonProps","type","onCancel","gap","mark","length","name","Checkbox","onChange","target","Card","Paragraph","s","_s$kernel_nodes","kernel_nodes","edges","flatten","groupBy","kernels","agentId","k","copyable","container_id","value","v0","v1","hash","SessionUtilItem","tooltipTitle","percentLabel","toFixedFloorWithoutTrailingZeros","BAIProgressWithLabel","placement","Math","round","lineHeight","toFixed","_$get","_mergedResourceSlots$","_sortedLiveStat$cpu_u","_mergedResourceSlots$2","_sortedLiveStat$mem","_sortedLiveStat$mem2","_mergedResourceSlots$3","_sortedLiveStat$mem3","_convertDecimalSizeUn","_convertDecimalSizeUn2","_sortedLiveStat$io_re","_convertDecimalSizeUn3","_convertDecimalSizeUn4","_sortedLiveStat$io_wr","mergedResourceSlots","useResourceSlotsDetails","sessionNode","_SessionUsageMonitorFragment","firstKernelNode","occupiedSlots","_firstKernelNode$occu","JSON","parse","occupied_slots","resourceSlotNames","liveStat","sortedLiveStat","Object","keys","sort","a","b","aUtil","bUtil","aMem","bMem","reduce","acc","displayMemoryUsage","capacity","_convertBinarySizeUni","_convertBinarySizeUni2","_convertBinarySizeUni3","_convertBinarySizeUni4","decimalSize","arguments","convertBinarySizeUnit","numberFixed","utilItems","cpu_util","human_readable_name","pct","mem","_mergedResourceSlots$4","_mergedResourceSlots$5","deviceName","deviceKey","endsWith","Row","gutter","item","Col","xs","sm","span","convertDecimalSizeUnit","io_read","numberUnit","io_write","errorMessageTable","regexTable","msg","backendaiclient","backendaiwebui","hasOwnProperty","call","regex","RegExp","test"],"sourceRoot":""}