{"version":3,"file":"static/js/392.27045adb.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","components/CopyableCodeText.tsx","components/EndpointStatusTag.tsx","components/ImageMetaIcon.tsx","components/ModelServiceSettingModal.tsx","components/__generated__/EndpointStatusTagFragment.graphql.ts","components/__generated__/ModelServiceSettingModal_endpoint.graphql.ts","components/__generated__/ServingRouteErrorModalFragment.graphql.ts","helper/index.tsx","hooks/index.ts","hooks/reactQueryAlias.tsx","components/EndpointTokenGenerationModal.tsx","components/ResourcesNumbers.tsx","components/ServingRouteErrorModal.tsx","pages/RoutingListPage.tsx","pages/__generated__/RoutingListPageQuery.graphql.ts"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","import { Typography } from 'antd';\nimport React, { PropsWithChildren } from 'react';\n\ninterface Props extends PropsWithChildren {\n  text?: string;\n}\n\nconst CopyableCodeText: React.FC<Props> = ({ text, children }) => {\n  return (\n    <Typography.Text copyable code>\n      {text || children}\n    </Typography.Text>\n  );\n};\n\nexport default CopyableCodeText;\n","import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import { useBackendaiImageMetaData } from '../hooks';\nimport React from 'react';\n\nconst ImageMetaIcon: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n  alt?: string | null;\n}> = ({ image, style = {} }, bordered, alt = '') => {\n  const [, { getImageIcon }] = useBackendaiImageMetaData();\n\n  return (\n    <img\n      src={getImageIcon(image)}\n      style={{\n        width: '1.5em',\n        height: '1.5em',\n        ...style,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nexport default React.memo(ImageMetaIcon);\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { ModelServiceSettingModal_endpoint$key } from './__generated__/ModelServiceSettingModal_endpoint.graphql';\nimport { Form, InputNumber, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  endpointFrgmt: ModelServiceSettingModal_endpoint$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface ServiceSettingFormInput {\n  desired_session_count: number;\n}\n\nconst ModelServiceSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  endpointFrgmt,\n  ...baiModalProps\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment ModelServiceSettingModal_endpoint on Endpoint {\n        endpoint_id\n        desired_session_count\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const mutationToUpdateService = useTanMutation({\n    mutationFn: (values: ServiceSettingFormInput) => {\n      const body = {\n        to: values.desired_session_count,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint?.endpoint_id}/scale`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToUpdateService.mutate(values, {\n          onSuccess: () => {\n            console.log('service updated');\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            console.log(error);\n            // TODO: show error message\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{\n        loading: mutationToUpdateService.isLoading,\n      }}\n      title={t('modelService.EditModelService')}\n      {...baiModalProps}\n    >\n      <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n        <Form\n          form={form}\n          preserve={false}\n          validateTrigger={['onChange', 'onBlur']}\n          initialValues={{\n            desired_session_count: endpoint?.desired_session_count,\n          }}\n          style={{ marginBottom: token.marginLG, marginTop: token.margin }}\n        >\n          <Form.Item\n            name=\"desired_session_count\"\n            label={t('modelService.DesiredSessionCount')}\n            rules={[\n              {\n                pattern: /^[0-9]+$/,\n                message: t('modelService.OnlyAllowsNonNegativeIntegers'),\n              },\n            ]}\n          >\n            <InputNumber type=\"number\" min={0} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelServiceSettingModal;\n","/**\n * @generated SignedSource<<8a960e7428e05bcb25f322a53888680e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null;\n  readonly status: string | null;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b2872924ef54e9c1706ca51d19289a4f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelServiceSettingModal_endpoint$data = {\n  readonly desired_session_count: number | null;\n  readonly endpoint_id: any | null;\n  readonly \" $fragmentType\": \"ModelServiceSettingModal_endpoint\";\n};\nexport type ModelServiceSettingModal_endpoint$key = {\n  readonly \" $data\"?: ModelServiceSettingModal_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelServiceSettingModal_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"desired_session_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"881f18324b27eba6ff0fcfb83ae241d2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<22d692b42fd93a1f67c1061a41bf4fb0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingRouteErrorModalFragment$data = {\n  readonly errors: ReadonlyArray<{\n    readonly repr: string;\n  }>;\n  readonly session_id: any;\n  readonly \" $fragmentType\": \"ServingRouteErrorModalFragment\";\n};\nexport type ServingRouteErrorModalFragment$key = {\n  readonly \" $data\"?: ServingRouteErrorModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ServingRouteErrorModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ServingRouteErrorModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"InferenceSessionErrorInfo\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"errors\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"repr\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"InferenceSessionError\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a1003e0f75387e665f4407909eea5ff6\";\n\nexport default node;\n","import { useSuspendedBackendaiClient } from '../hooks';\n\nexport const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/,\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client?.newSignedRequest(method, url, body, null);\n  return client?._wrapWithPromise(request);\n};\n\nexport const useBaiSignedRequestWithPromise = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return ({\n    method,\n    url,\n    body = null,\n  }: {\n    method: string;\n    url: string;\n    body?: any;\n  }) =>\n    baiSignedRequestWithPromise({\n      method,\n      url,\n      body,\n      client: baiClient,\n    });\n};\n\n/**\n * Convert file size with binary unit to human readable unit and value\n *\n * @param {number} bytes\n * @param {number} decimalPoint decimal point set to 2 as a default\n * @return {string} converted file size to human readable value\n */\nexport const humanReadableDecimalSize = (bytes = 0, decimalPoint = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = Math.pow(10, 3);\n  decimalPoint = decimalPoint < 0 ? 0 : decimalPoint;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  let i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) + ' ' + sizes[i]\n  );\n};\n\nexport const humanReadableBinarySize = (\n  bytes = 0,\n  decimalPoint = 2,\n  compact = false,\n) => {\n  if (!bytes) return 0;\n  if (typeof bytes === 'string') bytes = parseInt(bytes);\n  const k = Math.pow(2, 10);\n  let i;\n  let unitList;\n  decimalPoint = decimalPoint < 0 || compact ? 0 : decimalPoint;\n  i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  if (compact) {\n    unitList = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei'];\n  } else {\n    unitList = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB'];\n  }\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) +\n    ' ' +\n    unitList[i]\n  );\n};\n\nexport function bytesToBinarySize(\n  bytes: number,\n  targetUnit?: 'Bytes' | 'KiB' | 'MiB' | 'GiB' | 'TiB' | 'PiB' | 'EiB',\n): {\n  number: number;\n  unit: string;\n} {\n  const sizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB'];\n  if (bytes === 0)\n    return {\n      number: 0,\n      unit: 'Bytes',\n    };\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return {\n    number: parseFloat((bytes / Math.pow(1024, i)).toFixed(2)),\n    unit: sizes[i],\n  };\n}\n\n/**\n * Change date of any type to human readable date time.\n *\n * @param {Date} d   - string or DateTime object to convert\n * @return {Date}   - Formatted date / time to be human-readable text.\n */\nexport const _humanReadableTime = (date: string) => {\n  return new Date(date).toUTCString();\n};\n\nexport const GBToBytes = (value = 0) => {\n  const gigabyte = Math.pow(10, 9);\n  return Math.round(gigabyte * value);\n};\n\nexport const bytesToGB = (\n  bytes: number,\n  decimalPoint = 2,\n  nullStr: string = '-',\n) => {\n  if (bytes === null || bytes === undefined) return nullStr;\n  if (!bytes) return bytes;\n  return (bytes / 10 ** 9).toFixed(decimalPoint);\n};\n\nexport function iSizeToSize(\n  size: string,\n  targetSizeUnit?: string,\n  fixed: number = 2,\n): {\n  number: number;\n  numberFixed: string;\n  unit: string;\n  numberUnit: string;\n} {\n  const sizes = ['B', 'K', 'M', 'G', 'T', 'P', 'E'];\n  const sizeUnit = size.slice(-1).toUpperCase();\n  const sizeValue = parseFloat(size.slice(0, -1));\n  const sizeIndex = sizes.indexOf(sizeUnit);\n  if (sizeIndex === -1 || isNaN(sizeValue)) {\n    throw new Error('Invalid size format');\n  }\n  const bytes = sizeValue * Math.pow(1024, sizeIndex);\n  const targetIndex = targetSizeUnit\n    ? sizes.indexOf(targetSizeUnit.toUpperCase())\n    : sizeIndex;\n  const targetBytes = bytes / Math.pow(1024, targetIndex);\n  const numberFixed = targetBytes.toFixed(fixed);\n  return {\n    number: targetBytes,\n    numberFixed,\n    unit: sizes[targetIndex],\n    numberUnit: `${numberFixed}${sizes[targetIndex]}`,\n  };\n}\n\nexport type QuotaScopeType = 'project' | 'user';\nexport const addQuotaScopeTypePrefix = (type: QuotaScopeType, str: string) => {\n  if (str === '' || str === undefined) return '';\n  if (str.startsWith(`${type}:`)) return str;\n  return `${type}:${str}`;\n};\n\nexport const usageIndicatorColor = (percentage: number) => {\n  return percentage < 70\n    ? 'rgba(58, 178, 97, 1)'\n    : percentage < 90\n    ? 'rgb(223, 179, 23)'\n    : '#ef5350';\n};\n\nexport const maskString = (\n  value = '',\n  maskChar = '*',\n  startFrom = 0,\n  maskLength = 0,\n) => {\n  // clamp mask length\n  maskLength =\n    startFrom + maskLength > value.length ? value.length : maskLength;\n  return (\n    value.substring(0, startFrom) +\n    maskChar.repeat(maskLength) +\n    value.substring(startFrom + maskLength, value.length)\n  );\n};\n\nexport const offset_to_cursor = (offset: number): string => {\n  return window.btoa(`arrayconnection:${offset}`);\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { useQuery } from 'react-query';\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener('backend-ai-connected', listener);\n    return () => {\n      document.removeEventListener('backend-ai-connected', listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener('backend-ai-group-changed', listener);\n    return () => {\n      document.removeEventListener('backend-ai-group-changed', listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      '',\n      '',\n      api_endpoint,\n      'SESSION',\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, 'Backend.AI Console.');\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: 'backendai-client-for-suspense',\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === 'undefined' ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener('backend-ai-connected', listener);\n          };\n          document.addEventListener('backend-ai-connected', listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: 'backendai-metadata-for-suspense',\n    queryFn: () => {\n      return fetch('resources/image_metadata.json')\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          },\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: '',\n        tags: [],\n      };\n    }\n    const specs = imageName.split('/');\n\n    const [key, tag] = (specs[2] || specs[1]).split(':');\n    const tags = tag.split('-');\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = 'resources/icons/') => {\n        if (!imageName) return 'default.png';\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key]?.icon !== undefined\n            ? metadata?.imageInfo[key]?.icon\n            : 'default.png')\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n","import { useQuery, useMutation } from 'react-query';\n\nexport const useTanQuery = useQuery;\nexport const useTanMutation = useMutation;\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { Alert, DatePicker, Form, message } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// import { graphql, useFragment } from \"react-relay\";\n\ninterface EndpointTokenGenerationModalProps\n  extends Omit<BAIModalProps, 'onOK' | 'onClose'> {\n  endpoint_id: string;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface EndpointTokenGenerationInput {\n  valid_until?: number; // Unix epoch time\n}\n\nconst EndpointTokenGenerationModal: React.FC<\n  EndpointTokenGenerationModalProps\n> = ({ onRequestClose, onCancel, endpoint_id, ...baiModalProps }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const [form] = Form.useForm();\n\n  const mutationToGenerateToken = useTanMutation<\n    unknown,\n    {\n      message?: string;\n    },\n    EndpointTokenGenerationInput\n  >({\n    mutationFn: (values) => {\n      const body = {\n        valid_until: values.valid_until,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint_id}/token`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      const validUntil = Math.floor(\n        dayjs(values.datetime.format('YYYY-MM-DD HH:mm:ss')).valueOf() / 1000,\n      );\n      mutationToGenerateToken.mutate(\n        {\n          valid_until: validUntil,\n        },\n        {\n          onSuccess: () => {\n            message.success(t('modelService.TokenGenerated'));\n            onRequestClose(true);\n          },\n          onError: (err) => {\n            if (err?.message?.includes('valid_until is older than now')) {\n              message.error(t('modelService.TokenExpiredDateError'));\n              return;\n            } else {\n              message.error(t('modelService.TokenGenerationFailed'));\n              console.log(err);\n            }\n          },\n        },\n      );\n    });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      {...baiModalProps}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okText={t('modelService.Generate')}\n      confirmLoading={mutationToGenerateToken.isLoading}\n      centered\n      title={t('modelService.GenerateNewToken')}\n    >\n      <Form\n        preserve={false}\n        labelCol={{ span: 10 }}\n        initialValues={{\n          datetime: dayjs().add(24, 'hour'),\n        }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ maxWidth: 500 }}\n        form={form}\n      >\n        <Flex direction=\"column\" gap=\"sm\" align=\"stretch\">\n          <Alert\n            type=\"info\"\n            showIcon\n            message={t('modelService.TokenExpiredDateHelp')}\n          />\n          <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n            <Form.Item\n              name=\"datetime\"\n              label={t('modelService.ExpiredDate')}\n              rules={[\n                {\n                  type: 'object' as const,\n                  required: true,\n                  message: t('modelService.PleaseSelectTime'),\n                },\n                () => ({\n                  validator(_, value) {\n                    if (value.isAfter(dayjs())) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(t('modelService.TokenExpiredDateError')),\n                    );\n                  },\n                }),\n              ]}\n            >\n              <DatePicker\n                showTime\n                format=\"YYYY-MM-DD HH:mm:ss\"\n                style={{ width: 200 }}\n              />\n            </Form.Item>\n          </Flex>\n        </Flex>\n        {/* <Flex direction=\"row\" align=\"stretch\" justify=\"end\">\n          <Tag style={{height: 30}}>{t('modelService.CurrentTime')}</Tag>\n          <TimeContainer></TimeContainer>\n        </Flex> */}\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default EndpointTokenGenerationModal;\n","import { humanReadableBinarySize } from '../helper';\nimport { Typography } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\ninterface Props {\n  cpu: number | string;\n  mem: number | string;\n  gpu: number | string;\n}\nconst ResourcesNumbers: React.FC<Props> = ({ cpu, mem, gpu }) => {\n  return (\n    <>\n      {!_.isUndefined(cpu) && <Typography.Text>CPU: {cpu}</Typography.Text>}\n      {!_.isUndefined(mem) && (\n        <Typography.Text>\n          Mem: {humanReadableBinarySize(parseInt(mem + ''))}\n        </Typography.Text>\n      )}\n      {!_.isUndefined(gpu) && <Typography.Text>GPU: {gpu}</Typography.Text>}\n    </>\n  );\n};\n\nexport default ResourcesNumbers;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport CopyableCodeText from './CopyableCodeText';\nimport { ServingRouteErrorModalFragment$key } from './__generated__/ServingRouteErrorModalFragment.graphql';\nimport { Descriptions, DescriptionsProps, Button } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends Omit<BAIModalProps, 'onOk' | 'onClose'> {\n  inferenceSessionErrorFrgmt: ServingRouteErrorModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst ServingRouteErrorModal: React.FC<Props> = ({\n  onRequestClose,\n  onCancel,\n  inferenceSessionErrorFrgmt,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n\n  const iSessionError = useFragment(\n    graphql`\n      fragment ServingRouteErrorModalFragment on InferenceSessionError {\n        session_id\n        errors {\n          repr\n        }\n      }\n    `,\n    inferenceSessionErrorFrgmt,\n  );\n\n  // const { errors } = endpoint\n  // const targetSession = errors.filter(({ session_id }) => session === session_id)\n  // if (targetSession.length > 0) {\n  //   // setErrorJSONModalSessionID(session)\n  //   // setErrorJSONModalError(targetSession[0].errors[0].repr)\n  //   // setShowErrorJSONModal(true)\n  // }\n\n  const columnSetting: DescriptionsProps['column'] = {\n    xxl: 1,\n    xl: 1,\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <BAIModal\n      centered\n      title={t('modelService.ServingRouteErrorModalTitle')}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      footer={[\n        <Button\n          onClick={() => {\n            onRequestClose();\n          }}\n        >\n          {t('button.Close')}\n        </Button>,\n      ]}\n      {...baiModalProps}\n    >\n      <Descriptions\n        bordered\n        column={columnSetting}\n        labelStyle={{ minWidth: 100 }}\n        style={{ marginTop: 20 }}\n      >\n        <Descriptions.Item label={t('modelService.SessionId')}>\n          <CopyableCodeText>{iSessionError?.session_id}</CopyableCodeText>\n        </Descriptions.Item>\n        <Descriptions.Item label={t('dialog.error.Error')}>\n          {iSessionError?.errors[0].repr}\n        </Descriptions.Item>\n      </Descriptions>\n    </BAIModal>\n  );\n};\n\nexport default ServingRouteErrorModal;\n","import CopyableCodeText from '../components/CopyableCodeText';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport EndpointTokenGenerationModal from '../components/EndpointTokenGenerationModal';\nimport Flex from '../components/Flex';\nimport ImageMetaIcon from '../components/ImageMetaIcon';\nimport ModelServiceSettingModal from '../components/ModelServiceSettingModal';\nimport ResourcesNumbers from '../components/ResourcesNumbers';\nimport ServingRouteErrorModal from '../components/ServingRouteErrorModal';\nimport { ServingRouteErrorModalFragment$key } from '../components/__generated__/ServingRouteErrorModalFragment.graphql';\nimport { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport {\n  RoutingListPageQuery,\n  RoutingListPageQuery$data,\n} from './__generated__/RoutingListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  PlusOutlined,\n  QuestionCircleOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n  WarningOutlined,\n} from '@ant-design/icons';\nimport {\n  Breadcrumb,\n  Button,\n  Card,\n  Descriptions,\n  Popover,\n  Table,\n  Tag,\n  Tooltip,\n  Typography,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { useNavigate, useParams } from 'react-router-dom';\n\ninterface RoutingInfo {\n  route_id: string;\n  session_id: string;\n  traffic_ratio: number;\n}\nexport interface ModelServiceInfo {\n  endpoint_id: string;\n  name: string;\n  desired_session_count: number;\n  active_routes: RoutingInfo[];\n  service_endpoint: string;\n  is_public: boolean;\n}\n\n// TODO: display all of routings when API/GQL supports\n// type RoutingStatus = \"HEALTHY\" | \"PROVISIONING\" | \"UNHEALTHY\";\n\ninterface RoutingListPageProps {}\n\ntype EndPoint = NonNullable<RoutingListPageQuery$data['endpoint']>;\ntype Routing = NonNullable<NonNullable<EndPoint['routings']>[0]>;\n\nconst dayDiff = (a: any, b: any) => {\n  const date1 = dayjs(a.created_at);\n  const date2 = dayjs(b.created_at);\n  return date1.diff(date2);\n};\n\nconst isExpired = (date: any) => {\n  const timeFromNow = dayjs();\n  const expiredDate = dayjs(date);\n  return timeFromNow.diff(expiredDate) > 0;\n};\n\nconst RoutingListPage: React.FC<RoutingListPageProps> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const navigate = useNavigate();\n  const { serviceId } = useParams<{\n    serviceId: string;\n  }>();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const [isPendingRefetch, startRefetchTransition] = useTransition();\n  const [isPendingClearError, startClearErrorTransition] = useTransition();\n  const [selectedSessionErrorForModal, setSelectedSessionErrorForModal] =\n    useState<ServingRouteErrorModalFragment$key | null>(null);\n  const [isOpenModelServiceSettingModal, setIsOpenModelServiceSettingModal] =\n    useState(false);\n  const [isOpenTokenGenerationModal, setIsOpenTokenGenerationModal] =\n    useState(false);\n  // const curProject = useCurrentProjectValue();\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n  const { endpoint, endpoint_token_list } =\n    useLazyLoadQuery<RoutingListPageQuery>(\n      graphql`\n        query RoutingListPageQuery(\n          $endpointId: UUID!\n          $tokenListOffset: Int!\n          $tokenListLimit: Int!\n        ) {\n          endpoint(endpoint_id: $endpointId) {\n            name\n            endpoint_id\n            image\n            desired_session_count\n            url\n            open_to_public\n            errors {\n              session_id\n              ...ServingRouteErrorModalFragment\n            }\n            retries\n            resource_group\n            resource_slots\n            routings {\n              routing_id\n              session\n              traffic_ratio\n              endpoint\n              status\n            }\n            ...EndpointStatusTagFragment\n            ...ModelServiceSettingModal_endpoint\n          }\n          endpoint_token_list(\n            offset: $tokenListOffset\n            limit: $tokenListLimit\n            endpoint_id: $endpointId\n          ) {\n            total_count\n            items {\n              id\n              token\n              endpoint_id\n              domain\n              project\n              session_owner\n              created_at\n              valid_until\n            }\n          }\n        }\n      `,\n      {\n        tokenListOffset:\n          (paginationState.current - 1) * paginationState.pageSize,\n        tokenListLimit: paginationState.pageSize,\n        endpointId: serviceId,\n      },\n      {\n        fetchPolicy:\n          fetchKey === 'initial-fetch' ? 'store-and-network' : 'network-only',\n        fetchKey,\n      },\n    );\n\n  const mutationToClearError = useTanMutation(() => {\n    if (!endpoint) return;\n    return baiSignedRequestWithPromise({\n      method: 'POST',\n      url: `/services/${endpoint.endpoint_id}/errors/clear`,\n      client: baiClient,\n    });\n  });\n  const openSessionErrorModal = (session: string) => {\n    if (endpoint === null) return;\n    const { errors } = endpoint;\n    const firstMatchedSessionError = errors.find(\n      ({ session_id }) => session === session_id,\n    );\n    setSelectedSessionErrorForModal(firstMatchedSessionError || null);\n  };\n  // const { t } = useTranslation();\n\n  // return color of tag by status\n  const applyStatusColor = (status: string = '') => {\n    let color = 'default';\n    switch (status.toUpperCase()) {\n      case 'HEALTHY':\n        color = 'success';\n        break;\n      case 'PROVISIONING':\n        color = 'processing';\n        break;\n      case 'UNHEALTHY':\n        color = 'warning';\n        break;\n    }\n    return color;\n  };\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM }}\n      gap=\"sm\"\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: t('modelService.Services'),\n            onClick: (e) => {\n              e.preventDefault();\n              navigate('/serving');\n            },\n            href: '/serving',\n          },\n          {\n            title: t('modelService.RoutingInfo'),\n          },\n        ]}\n      />\n      <Flex direction=\"row\" justify=\"between\">\n        <Typography.Title level={3} style={{ margin: 0 }}>\n          {endpoint?.name || ''}\n        </Typography.Title>\n        <Flex gap={'xxs'}>\n          {(endpoint?.retries || 0) > 0 ? (\n            <Tooltip title={t('modelService.ClearErrors')}>\n              <Button\n                loading={isPendingClearError}\n                icon={<WarningOutlined />}\n                onClick={() => {\n                  startClearErrorTransition(() => {\n                    mutationToClearError.mutate(undefined, {\n                      onSuccess: () =>\n                        startRefetchTransition(() => {\n                          updateFetchKey();\n                        }),\n                    });\n                  });\n                }}\n              />\n            </Tooltip>\n          ) : (\n            <></>\n          )}\n          <Button\n            loading={isPendingRefetch}\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startRefetchTransition(() => {\n                updateFetchKey();\n              });\n            }}\n          >\n            {t('button.Refresh')}\n          </Button>\n        </Flex>\n      </Flex>\n      <Card\n        title={t('modelService.ServiceInfo')}\n        extra={\n          <Button\n            type=\"primary\"\n            icon={<SettingOutlined />}\n            disabled={(endpoint?.desired_session_count || 0) < 0}\n            onClick={() => {\n              setIsOpenModelServiceSettingModal(true);\n            }}\n          >\n            {t('button.Edit')}\n          </Button>\n        }\n      >\n        <Descriptions\n          bordered\n          column={{ xxl: 3, xl: 3, lg: 2, md: 1, sm: 1, xs: 1 }}\n          style={{\n            backgroundColor: token.colorBgBase,\n          }}\n        >\n          <Descriptions.Item label={t('modelService.EndpointName')}>\n            <Typography.Text copyable>{endpoint?.name}</Typography.Text>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.Status')}>\n            <EndpointStatusTag endpointFrgmt={endpoint} />\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.EndpointId')}>\n            {endpoint?.endpoint_id}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.SessionOwner')}>\n            {baiClient.email || ''}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.DesiredSessionCount')}>\n            {endpoint?.desired_session_count}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.ServiceEndpoint')}>\n            {endpoint?.url ? (\n              <Typography.Text copyable>{endpoint?.url}</Typography.Text>\n            ) : (\n              <Tag>{t('modelService.NoServiceEndpoint')}</Tag>\n            )}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.OpenToPublic')}>\n            {endpoint?.open_to_public ? <CheckOutlined /> : <CloseOutlined />}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.resources')} span={2}>\n            <Flex direction=\"row\" gap={'sm'}>\n              {endpoint?.resource_group}\n              <ResourcesNumbers\n                {...JSON.parse(endpoint?.resource_slots || '{}')}\n              />\n            </Flex>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Image\">\n            {endpoint?.image && (\n              <Flex direction=\"row\" gap={'xs'}>\n                <ImageMetaIcon image={endpoint.image} />\n                <CopyableCodeText>{endpoint.image}</CopyableCodeText>\n              </Flex>\n            )}\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n      <Card\n        title={t('modelService.GeneratedTokens')}\n        extra={\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              setIsOpenTokenGenerationModal(true);\n            }}\n          >\n            {t('modelService.GenerateToken')}\n          </Button>\n        }\n      >\n        <Table\n          scroll={{ x: 'max-content' }}\n          rowKey={'endpoint_id'}\n          columns={[\n            {\n              title: '#',\n              fixed: 'left',\n              render: (id, record, index) => {\n                ++index;\n                return index;\n              },\n              showSorterTooltip: false,\n            },\n            {\n              title: 'Token',\n              dataIndex: 'token',\n              fixed: 'left',\n              render: (text, row) => (\n                <Typography.Text ellipsis copyable style={{ width: 150 }}>\n                  {row.token}\n                </Typography.Text>\n              ),\n            },\n            {\n              title: 'Status',\n              render: (text, row) => (\n                <Tag color={isExpired(row.valid_until) ? 'red' : 'green'}>\n                  {isExpired(row.valid_until) ? 'Expired' : 'Valid'}\n                </Tag>\n              ),\n            },\n            {\n              title: 'Valid Until',\n              dataIndex: 'valid_until',\n              render: (text, row) => (\n                <span>\n                  {\n                    // FIXME: temporally add GMT (timezone need to be added in serverside)\n                    row.valid_until\n                      ? dayjs(\n                          (row.valid_until as string) +\n                            (row.created_at as string).split(/(?=\\+)/g)[1],\n                        ).format('YYYY/MM/DD ddd HH:mm:ss')\n                      : '-'\n                  }\n                </span>\n              ),\n              defaultSortOrder: 'descend',\n              sortDirections: ['descend', 'ascend', 'descend'],\n              sorter: dayDiff,\n            },\n            {\n              title: 'Created at',\n              dataIndex: 'created_at',\n              render: (text, row) => (\n                <span>\n                  {dayjs(row.created_at).format('YYYY/MM/DD ddd HH:mm:ss')}\n                </span>\n              ),\n              defaultSortOrder: 'descend',\n              sortDirections: ['descend', 'ascend', 'descend'],\n              sorter: dayDiff,\n            },\n          ]}\n          pagination={false}\n          dataSource={endpoint_token_list?.items}\n          bordered\n        ></Table>\n      </Card>\n      <Card title={t('modelService.RoutesInfo')}>\n        <Table\n          scroll={{ x: 'max-content' }}\n          columns={[\n            {\n              title: t('modelService.RouteId'),\n              dataIndex: 'routing_id',\n              fixed: 'left',\n            },\n            {\n              title: t('modelService.SessionId'),\n              dataIndex: 'session',\n            },\n            {\n              title: t('modelService.Status'),\n              render: (_, { session, status }) =>\n                status && (\n                  <>\n                    <Tag\n                      color={applyStatusColor(status)}\n                      key={status}\n                      style={{ marginRight: 0 }}\n                    >\n                      {status.toUpperCase()}\n                    </Tag>\n                    {status === 'FAILED_TO_START' && (\n                      <Popover>\n                        <Button\n                          size=\"small\"\n                          type=\"text\"\n                          icon={<QuestionCircleOutlined />}\n                          style={{ color: token.colorTextSecondary }}\n                          onClick={() => openSessionErrorModal(session)}\n                        />\n                      </Popover>\n                    )}\n                  </>\n                ),\n            },\n            {\n              title: t('modelService.TrafficRatio'),\n              dataIndex: 'traffic_ratio',\n            },\n          ]}\n          pagination={false}\n          dataSource={endpoint?.routings as Routing[]}\n          rowKey={'routing_id'}\n          bordered\n        />\n      </Card>\n      <ServingRouteErrorModal\n        open={!!selectedSessionErrorForModal}\n        inferenceSessionErrorFrgmt={selectedSessionErrorForModal}\n        onRequestClose={() => setSelectedSessionErrorForModal(null)}\n      />\n      <ModelServiceSettingModal\n        open={isOpenModelServiceSettingModal}\n        onRequestClose={(success) => {\n          setIsOpenModelServiceSettingModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateFetchKey();\n            });\n          }\n        }}\n        endpointFrgmt={endpoint}\n      />\n      <EndpointTokenGenerationModal\n        open={isOpenTokenGenerationModal}\n        onRequestClose={(success) => {\n          setIsOpenTokenGenerationModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateFetchKey();\n            });\n          }\n        }}\n        endpoint_id={endpoint?.endpoint_id || ''}\n      ></EndpointTokenGenerationModal>\n    </Flex>\n  );\n};\n\nexport default RoutingListPage;\n","/**\n * @generated SignedSource<<3c86ac299e7261e9c796a390c156c593>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type RoutingListPageQuery$variables = {\n  endpointId: any;\n  tokenListLimit: number;\n  tokenListOffset: number;\n};\nexport type RoutingListPageQuery$data = {\n  readonly endpoint: {\n    readonly desired_session_count: number | null;\n    readonly endpoint_id: any | null;\n    readonly errors: ReadonlyArray<{\n      readonly session_id: any;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"ServingRouteErrorModalFragment\">;\n    }>;\n    readonly image: string | null;\n    readonly name: string | null;\n    readonly open_to_public: boolean | null;\n    readonly resource_group: string | null;\n    readonly resource_slots: any | null;\n    readonly retries: number | null;\n    readonly routings: ReadonlyArray<{\n      readonly endpoint: string | null;\n      readonly routing_id: any | null;\n      readonly session: any | null;\n      readonly status: string | null;\n      readonly traffic_ratio: number | null;\n    } | null> | null;\n    readonly url: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\" | \"ModelServiceSettingModal_endpoint\">;\n  } | null;\n  readonly endpoint_token_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: any;\n      readonly domain: string;\n      readonly endpoint_id: any;\n      readonly id: string | null;\n      readonly project: string;\n      readonly session_owner: any;\n      readonly token: string;\n      readonly valid_until: any | null;\n    } | null>;\n    readonly total_count: number;\n  } | null;\n};\nexport type RoutingListPageQuery = {\n  response: RoutingListPageQuery$data;\n  variables: RoutingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpointId\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"tokenListLimit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"tokenListOffset\"\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"endpoint_id\",\n  \"variableName\": \"endpointId\"\n},\nv4 = [\n  (v3/*: any*/)\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session_id\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"retries\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": [\n    (v3/*: any*/),\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"limit\",\n      \"variableName\": \"tokenListLimit\"\n    },\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"offset\",\n      \"variableName\": \"tokenListOffset\"\n    }\n  ],\n  \"concreteType\": \"EndpointTokenList\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"endpoint_token_list\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"total_count\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"EndpointToken\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"items\",\n      \"plural\": true,\n      \"selections\": [\n        (v20/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"token\",\n          \"storageKey\": null\n        },\n        (v6/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"domain\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"project\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"session_owner\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"created_at\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"valid_until\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RoutingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"InferenceSessionError\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"errors\",\n            \"plural\": true,\n            \"selections\": [\n              (v11/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ServingRouteErrorModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Routing\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"routings\",\n            \"plural\": true,\n            \"selections\": [\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"EndpointStatusTagFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ModelServiceSettingModal_endpoint\"\n          }\n        ],\n        \"storageKey\": null\n      },\n      (v21/*: any*/)\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"RoutingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"InferenceSessionError\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"errors\",\n            \"plural\": true,\n            \"selections\": [\n              (v11/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"InferenceSessionErrorInfo\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"errors\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"repr\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Routing\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"routings\",\n            \"plural\": true,\n            \"selections\": [\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v20/*: any*/),\n          (v19/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      (v21/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"61f46544837d4dc1852727ee8b62926e\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RoutingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RoutingListPageQuery(\\n  $endpointId: UUID!\\n  $tokenListOffset: Int!\\n  $tokenListLimit: Int!\\n) {\\n  endpoint(endpoint_id: $endpointId) {\\n    name\\n    endpoint_id\\n    image\\n    desired_session_count\\n    url\\n    open_to_public\\n    errors {\\n      session_id\\n      ...ServingRouteErrorModalFragment\\n    }\\n    retries\\n    resource_group\\n    resource_slots\\n    routings {\\n      routing_id\\n      session\\n      traffic_ratio\\n      endpoint\\n      status\\n      id\\n    }\\n    ...EndpointStatusTagFragment\\n    ...ModelServiceSettingModal_endpoint\\n    id\\n  }\\n  endpoint_token_list(offset: $tokenListOffset, limit: $tokenListLimit, endpoint_id: $endpointId) {\\n    total_count\\n    items {\\n      id\\n      token\\n      endpoint_id\\n      domain\\n      project\\n      session_owner\\n      created_at\\n      valid_until\\n    }\\n  }\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\\nfragment ModelServiceSettingModal_endpoint on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n}\\n\\nfragment ServingRouteErrorModalFragment on InferenceSessionError {\\n  session_id\\n  errors {\\n    repr\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"7da96e4b274733fe0916e71096fb0c9a\";\n\nexport default node;\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","text","Typography","Text","copyable","code","_endpoint$status","endpointFrgmt","endpoint","useFragment","_EndpointStatusTagFragment","require","color","status","toUpperCase","Tag","ImageMetaIcon","bordered","image","_ref$style","style","alt","arguments","length","undefined","_useBackendaiImageMet","useBackendaiImageMetaData","getImageIcon","_slicedToArray","src","width","height","React","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","token","theme","useToken","baiClient","useSuspendedBackendaiClient","t","useTranslation","_Form$useForm","Form","useForm","form","_ModelServiceSettingModal_endpoint","mutationToUpdateService","useTanMutation","mutationFn","values","body","to","desired_session_count","baiSignedRequestWithPromise","method","url","concat","endpoint_id","client","BAIModal","zIndex","destroyOnClose","onOk","e","validateFields","then","mutate","onSuccess","console","log","onError","error","catch","err","onCancel","okButtonProps","loading","isLoading","title","Flex","direction","align","justify","preserve","validateTrigger","initialValues","marginBottom","marginLG","marginTop","margin","Item","name","label","rules","pattern","message","InputNumber","type","min","node","newLineToBrElement","separatorRegExp","split","map","line","index","match","_ref$body","request","newSignedRequest","_wrapWithPromise","useBaiSignedRequestWithPromise","_ref2","_ref2$body","humanReadableDecimalSize","bytes","decimalPoint","k","Math","pow","i","floor","round","parseFloat","toFixed","humanReadableBinarySize","compact","parseInt","unitList","GBToBytes","value","gigabyte","bytesToGB","iSizeToSize","size","targetSizeUnit","fixed","sizes","sizeUnit","slice","sizeValue","sizeIndex","indexOf","isNaN","Error","targetIndex","targetBytes","numberFixed","number","unit","numberUnit","addQuotaScopeTypePrefix","str","startsWith","usageIndicatorColor","percentage","maskString","maskChar","startFrom","maskLength","substring","repeat","useUpdatableState","initialValue","_useState3","useState","Date","toISOString","_useState4","setValue","newValue","useDateISOState","useCurrentDomainValue","_config","domainName","useCurrentProjectValue","_useState5","current_group","id","groupIds","_useState6","project","_setProject","useEffect","listener","newProjectName","detail","document","addEventListener","removeEventListener","useAnonymousBackendaiClient","api_endpoint","useMemo","clientConfig","globalThis","BackendAIClientConfig","BackendAIClient","useQuery","queryKey","queryFn","Promise","resolve","backendaiclient","ready","retry","suspense","data","metadata","fetch","response","json","getImageMeta","imageName","key","tags","specs","_split","_split2","getImageAliasName","imageInfo","_metadata$imageInfo$k","_metadata$imageInfo$k2","path","icon","getImageTags","getBaseVersion","getBaseImage","useTanQuery","useMutation","mutationToGenerateToken","valid_until","validUntil","dayjs","datetime","format","valueOf","success","_err$message","includes","okText","confirmLoading","labelCol","span","add","maxWidth","gap","Alert","showIcon","required","validator","_","isAfter","reject","DatePicker","showTime","cpu","mem","gpu","inferenceSessionErrorFrgmt","iSessionError","_ServingRouteErrorModalFragment","footer","Button","onClick","Descriptions","column","xxl","xl","lg","md","sm","xs","labelStyle","minWidth","CopyableCodeText","session_id","errors","repr","dayDiff","a","b","date1","created_at","date2","diff","isExpired","date","timeFromNow","expiredDate","navigate","useNavigate","serviceId","useParams","_useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","_useTransition","useTransition","_useTransition2","isPendingRefetch","startRefetchTransition","_useTransition3","_useTransition4","isPendingClearError","startClearErrorTransition","_useState","_useState2","selectedSessionErrorForModal","setSelectedSessionErrorForModal","isOpenModelServiceSettingModal","setIsOpenModelServiceSettingModal","isOpenTokenGenerationModal","setIsOpenTokenGenerationModal","_useState7","current","pageSize","paginationState","_useLazyLoadQuery","useLazyLoadQuery","_RoutingListPageQuery","tokenListOffset","tokenListLimit","endpointId","fetchPolicy","endpoint_token_list","mutationToClearError","applyStatusColor","marginSM","Breadcrumb","items","preventDefault","href","Title","level","retries","Tooltip","WarningOutlined","ReloadOutlined","Card","extra","SettingOutlined","disabled","backgroundColor","colorBgBase","EndpointStatusTag","email","open_to_public","CheckOutlined","CloseOutlined","resource_group","ResourcesNumbers","JSON","parse","resource_slots","PlusOutlined","Table","scroll","x","rowKey","columns","render","record","showSorterTooltip","dataIndex","row","ellipsis","defaultSortOrder","sortDirections","sorter","pagination","dataSource","session","marginRight","Popover","QuestionCircleOutlined","colorTextSecondary","firstMatchedSessionError","find","openSessionErrorModal","routings","ServingRouteErrorModal","open","ModelServiceSettingModal","EndpointTokenGenerationModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","hash"],"sourceRoot":""}