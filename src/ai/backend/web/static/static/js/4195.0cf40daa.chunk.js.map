{"version":3,"file":"static/js/4195.0cf40daa.chunk.js","mappings":"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","sources":["components/TableColumnsSettingModal.tsx","components/__generated__/KeypairResourcePolicyListMutation.graphql.ts","components/__generated__/KeypairResourcePolicyListQuery.graphql.ts","components/__generated__/KeypairResourcePolicySettingModalCreateMutation.graphql.ts","components/__generated__/KeypairResourcePolicySettingModalFragment.graphql.ts","components/__generated__/KeypairResourcePolicySettingModalModifyMutation.graphql.ts","components/__generated__/ProjectResourcePolicyListMutation.graphql.ts","components/__generated__/ProjectResourcePolicyListQuery.graphql.ts","components/__generated__/ProjectResourcePolicySettingModalCreateMutation.graphql.ts","components/__generated__/ProjectResourcePolicySettingModalFragment.graphql.ts","components/__generated__/ProjectResourcePolicySettingModalModifyMutation.graphql.ts","components/__generated__/UserResourcePolicyListMutation.graphql.ts","components/__generated__/UserResourcePolicyListQuery.graphql.ts","components/__generated__/UserResourcePolicySettingModalCreateMutation.graphql.ts","components/__generated__/UserResourcePolicySettingModalFragment.graphql.ts","components/__generated__/UserResourcePolicySettingModalModifyMutation.graphql.ts","helper/csv-util.ts","hooks/useHiddenColumnKeysSetting.tsx","components/AllowedHostNamesSelect.tsx","components/FormItemWithUnlimited.tsx","components/KeypairResourcePolicySettingModal.tsx","components/KeypairResourcePolicyList.tsx","components/ProjectResourcePolicySettingModal.tsx","components/ProjectResourcePolicyList.tsx","components/UserResourcePolicySettingModal.tsx","components/UserResourcePolicyList.tsx","pages/ResourcePolicyPage.tsx"],"sourcesContent":["import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: Array<string>;\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  hiddenColumnKeys?: Array<string>;\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  hiddenColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = _.map(columns, (column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys: _.map(columnOptions, 'value')?.filter(\n            (columnKey) => !_.includes(hiddenColumnKeys, columnKey),\n          ),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = _.map(columnOptions, (columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","/**\n * @generated SignedSource<<36a169846f198dfd4300c043e2912536>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type KeypairResourcePolicyListMutation$variables = {\n  name: string;\n};\nexport type KeypairResourcePolicyListMutation$data = {\n  readonly delete_keypair_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type KeypairResourcePolicyListMutation = {\n  response: KeypairResourcePolicyListMutation$data;\n  variables: KeypairResourcePolicyListMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      }\n    ],\n    \"concreteType\": \"DeleteKeyPairResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"delete_keypair_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairResourcePolicyListMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairResourcePolicyListMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"fe182323e364c317f26c7193239af22b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairResourcePolicyListMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation KeypairResourcePolicyListMutation(\\n  $name: String!\\n) {\\n  delete_keypair_resource_policy(name: $name) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"5771729a12a204d27a9cdf5ad31e707f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<94d9a62235e99bd88469df6b60a8ddf3>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type KeypairResourcePolicyListQuery$variables = Record<PropertyKey, never>;\nexport type KeypairResourcePolicyListQuery$data = {\n  readonly keypair_resource_policies: ReadonlyArray<{\n    readonly allowed_vfolder_hosts: string | null | undefined;\n    readonly idle_timeout: any | null | undefined;\n    readonly max_concurrent_sessions: number | null | undefined;\n    readonly max_concurrent_sftp_sessions: number | null | undefined;\n    readonly max_containers_per_session: number | null | undefined;\n    readonly max_pending_session_count: number | null | undefined;\n    readonly max_session_lifetime: number | null | undefined;\n    readonly name: string | null | undefined;\n    readonly total_resource_slots: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"KeypairResourcePolicySettingModalFragment\">;\n  } | null | undefined> | null | undefined;\n};\nexport type KeypairResourcePolicyListQuery = {\n  response: KeypairResourcePolicyListQuery$data;\n  variables: KeypairResourcePolicyListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_resource_slots\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_session_lifetime\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_concurrent_sessions\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_containers_per_session\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"idle_timeout\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"allowed_vfolder_hosts\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_pending_session_count\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_concurrent_sftp_sessions\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairResourcePolicyListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"KeyPairResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"KeypairResourcePolicySettingModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairResourcePolicyListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"KeyPairResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"default_for_unspecified\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_vfolder_count\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"1581b7316a56c496c8c5f5e6d2f7e7fc\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairResourcePolicyListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query KeypairResourcePolicyListQuery {\\n  keypair_resource_policies {\\n    name\\n    total_resource_slots\\n    max_session_lifetime\\n    max_concurrent_sessions\\n    max_containers_per_session\\n    idle_timeout\\n    allowed_vfolder_hosts\\n    max_pending_session_count @since(version: \\\"24.03.4\\\")\\n    max_concurrent_sftp_sessions @since(version: \\\"24.03.4\\\")\\n    ...KeypairResourcePolicySettingModalFragment\\n  }\\n}\\n\\nfragment KeypairResourcePolicySettingModalFragment on KeyPairResourcePolicy {\\n  name\\n  default_for_unspecified\\n  total_resource_slots\\n  max_session_lifetime\\n  max_concurrent_sessions\\n  max_containers_per_session\\n  idle_timeout\\n  allowed_vfolder_hosts\\n  max_vfolder_count @deprecatedSince(version: \\\"23.09.4\\\")\\n  max_pending_session_count @since(version: \\\"24.03.4\\\")\\n  max_concurrent_sftp_sessions @since(version: \\\"24.03.4\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b373b40176617564bca5bfca8091dbcb\";\n\nexport default node;\n","/**\n * @generated SignedSource<<700fb7c58c18963583dfb29cdbbbc0b6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type CreateKeyPairResourcePolicyInput = {\n  allowed_vfolder_hosts?: string | null | undefined;\n  default_for_unspecified: string;\n  idle_timeout: any;\n  max_concurrent_sessions: number;\n  max_concurrent_sftp_sessions?: number | null | undefined;\n  max_containers_per_session: number;\n  max_pending_session_count?: number | null | undefined;\n  max_pending_session_resource_slots?: string | null | undefined;\n  max_quota_scope_size?: any | null | undefined;\n  max_session_lifetime?: number | null | undefined;\n  max_vfolder_count?: number | null | undefined;\n  max_vfolder_size?: any | null | undefined;\n  total_resource_slots?: string | null | undefined;\n};\nexport type KeypairResourcePolicySettingModalCreateMutation$variables = {\n  name: string;\n  props: CreateKeyPairResourcePolicyInput;\n};\nexport type KeypairResourcePolicySettingModalCreateMutation$data = {\n  readonly create_keypair_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type KeypairResourcePolicySettingModalCreateMutation = {\n  response: KeypairResourcePolicySettingModalCreateMutation$data;\n  variables: KeypairResourcePolicySettingModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"CreateKeyPairResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"create_keypair_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"b52e3e869ccfabb393fb45a48074767e\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairResourcePolicySettingModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation KeypairResourcePolicySettingModalCreateMutation(\\n  $name: String!\\n  $props: CreateKeyPairResourcePolicyInput!\\n) {\\n  create_keypair_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"7c4c5be505f02fa76e7b4db73a1f4b14\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7fa6b0b183cfe228382c009e56540842>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type KeypairResourcePolicySettingModalFragment$data = {\n  readonly allowed_vfolder_hosts: string | null | undefined;\n  readonly default_for_unspecified: string | null | undefined;\n  readonly idle_timeout: any | null | undefined;\n  readonly max_concurrent_sessions: number | null | undefined;\n  readonly max_concurrent_sftp_sessions: number | null | undefined;\n  readonly max_containers_per_session: number | null | undefined;\n  readonly max_pending_session_count: number | null | undefined;\n  readonly max_session_lifetime: number | null | undefined;\n  readonly max_vfolder_count: number | null | undefined;\n  readonly name: string | null | undefined;\n  readonly total_resource_slots: string | null | undefined;\n  readonly \" $fragmentType\": \"KeypairResourcePolicySettingModalFragment\";\n};\nexport type KeypairResourcePolicySettingModalFragment$key = {\n  readonly \" $data\"?: KeypairResourcePolicySettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"KeypairResourcePolicySettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"KeypairResourcePolicySettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"default_for_unspecified\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"total_resource_slots\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_session_lifetime\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_concurrent_sessions\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_containers_per_session\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"idle_timeout\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"allowed_vfolder_hosts\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_count\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_pending_session_count\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_concurrent_sftp_sessions\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"KeyPairResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a69e5217597269e6b0c96d2410d9f85b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<4478ce85c871b3403a69db19c5d1cdd8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ModifyKeyPairResourcePolicyInput = {\n  allowed_vfolder_hosts?: string | null | undefined;\n  default_for_unspecified?: string | null | undefined;\n  idle_timeout?: any | null | undefined;\n  max_concurrent_sessions?: number | null | undefined;\n  max_concurrent_sftp_sessions?: number | null | undefined;\n  max_containers_per_session?: number | null | undefined;\n  max_pending_session_count?: number | null | undefined;\n  max_pending_session_resource_slots?: string | null | undefined;\n  max_quota_scope_size?: any | null | undefined;\n  max_session_lifetime?: number | null | undefined;\n  max_vfolder_count?: number | null | undefined;\n  max_vfolder_size?: any | null | undefined;\n  total_resource_slots?: string | null | undefined;\n};\nexport type KeypairResourcePolicySettingModalModifyMutation$variables = {\n  name: string;\n  props: ModifyKeyPairResourcePolicyInput;\n};\nexport type KeypairResourcePolicySettingModalModifyMutation$data = {\n  readonly modify_keypair_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type KeypairResourcePolicySettingModalModifyMutation = {\n  response: KeypairResourcePolicySettingModalModifyMutation$data;\n  variables: KeypairResourcePolicySettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyKeyPairResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_keypair_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"72be648e07857dd6923d7c81f3f19948\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairResourcePolicySettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation KeypairResourcePolicySettingModalModifyMutation(\\n  $name: String!\\n  $props: ModifyKeyPairResourcePolicyInput!\\n) {\\n  modify_keypair_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"8c99c8be8781f93fed817a67c86ea966\";\n\nexport default node;\n","/**\n * @generated SignedSource<<9367f1a4d5678bcee1fa0bff9c3ff910>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ProjectResourcePolicyListMutation$variables = {\n  name: string;\n};\nexport type ProjectResourcePolicyListMutation$data = {\n  readonly delete_project_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type ProjectResourcePolicyListMutation = {\n  response: ProjectResourcePolicyListMutation$data;\n  variables: ProjectResourcePolicyListMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      }\n    ],\n    \"concreteType\": \"DeleteProjectResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"delete_project_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectResourcePolicyListMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectResourcePolicyListMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"9f1218faa2207eff18f5a145f12f87ac\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectResourcePolicyListMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ProjectResourcePolicyListMutation(\\n  $name: String!\\n) {\\n  delete_project_resource_policy(name: $name) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"2c5a20c6c463174bbfc726a27cdfdcac\";\n\nexport default node;\n","/**\n * @generated SignedSource<<1438a57789774512a2237a31b9fb9b24>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ProjectResourcePolicyListQuery$variables = Record<PropertyKey, never>;\nexport type ProjectResourcePolicyListQuery$data = {\n  readonly project_resource_policies: ReadonlyArray<{\n    readonly created_at: string;\n    readonly id: string;\n    readonly max_network_count: number | null | undefined;\n    readonly max_quota_scope_size: any | null | undefined;\n    readonly max_vfolder_count: number | null | undefined;\n    readonly name: string;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ProjectResourcePolicySettingModalFragment\">;\n  } | null | undefined> | null | undefined;\n};\nexport type ProjectResourcePolicyListQuery = {\n  response: ProjectResourcePolicyListQuery$data;\n  variables: ProjectResourcePolicyListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_vfolder_count\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_quota_scope_size\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_network_count\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectResourcePolicyListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ProjectResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"project_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ProjectResourcePolicySettingModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectResourcePolicyListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ProjectResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"project_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"6aea9773e50cdfa81562c7a8322c8faa\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectResourcePolicyListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectResourcePolicyListQuery {\\n  project_resource_policies {\\n    id\\n    name\\n    created_at\\n    max_vfolder_count @since(version: \\\"23.09.6\\\")\\n    max_quota_scope_size @since(version: \\\"23.09.2\\\")\\n    max_network_count @since(version: \\\"24.12.0\\\")\\n    ...ProjectResourcePolicySettingModalFragment\\n  }\\n}\\n\\nfragment ProjectResourcePolicySettingModalFragment on ProjectResourcePolicy {\\n  id\\n  name\\n  created_at\\n  max_vfolder_count @since(version: \\\"23.09.6\\\")\\n  max_quota_scope_size @since(version: \\\"23.09.2\\\")\\n  max_network_count @since(version: \\\"24.12.0\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"4c7451b05822ee2f8c5e2c8d35ed57db\";\n\nexport default node;\n","/**\n * @generated SignedSource<<6631b6ca4d30a4626220b35e74f79902>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type CreateProjectResourcePolicyInput = {\n  max_network_count?: number | null | undefined;\n  max_quota_scope_size?: any | null | undefined;\n  max_vfolder_count?: number | null | undefined;\n  max_vfolder_size?: any | null | undefined;\n};\nexport type ProjectResourcePolicySettingModalCreateMutation$variables = {\n  name: string;\n  props: CreateProjectResourcePolicyInput;\n};\nexport type ProjectResourcePolicySettingModalCreateMutation$data = {\n  readonly create_project_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type ProjectResourcePolicySettingModalCreateMutation = {\n  response: ProjectResourcePolicySettingModalCreateMutation$data;\n  variables: ProjectResourcePolicySettingModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"CreateProjectResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"create_project_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"b94d7a4b8e8341df4e396784abba4203\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectResourcePolicySettingModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ProjectResourcePolicySettingModalCreateMutation(\\n  $name: String!\\n  $props: CreateProjectResourcePolicyInput!\\n) {\\n  create_project_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c0683608e8a527146563ba5bd9fcad33\";\n\nexport default node;\n","/**\n * @generated SignedSource<<eaf1fd7bc1d92c56bc2d65772dfe7a31>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ProjectResourcePolicySettingModalFragment$data = {\n  readonly created_at: string;\n  readonly id: string;\n  readonly max_network_count: number | null | undefined;\n  readonly max_quota_scope_size: any | null | undefined;\n  readonly max_vfolder_count: number | null | undefined;\n  readonly name: string;\n  readonly \" $fragmentType\": \"ProjectResourcePolicySettingModalFragment\";\n};\nexport type ProjectResourcePolicySettingModalFragment$key = {\n  readonly \" $data\"?: ProjectResourcePolicySettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ProjectResourcePolicySettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ProjectResourcePolicySettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_count\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_quota_scope_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_network_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ProjectResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"949f6a93198024700bf15197f3b613f0\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0f59fd4c3df6c6f76f25ca85f48c74cc>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ModifyProjectResourcePolicyInput = {\n  max_network_count?: number | null | undefined;\n  max_quota_scope_size?: any | null | undefined;\n  max_vfolder_count?: number | null | undefined;\n  max_vfolder_size?: any | null | undefined;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation$variables = {\n  name: string;\n  props: ModifyProjectResourcePolicyInput;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation$data = {\n  readonly modify_project_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation = {\n  response: ProjectResourcePolicySettingModalModifyMutation$data;\n  variables: ProjectResourcePolicySettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyProjectResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_project_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"aedc4eab77206f7ab189ccd3f2d938b3\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ProjectResourcePolicySettingModalModifyMutation(\\n  $name: String!\\n  $props: ModifyProjectResourcePolicyInput!\\n) {\\n  modify_project_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"3cd62195489eba58dd9693f1fc9df8ff\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7102102122ddd88c6f4ae22b4b235d2a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type UserResourcePolicyListMutation$variables = {\n  name: string;\n};\nexport type UserResourcePolicyListMutation$data = {\n  readonly delete_user_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type UserResourcePolicyListMutation = {\n  response: UserResourcePolicyListMutation$data;\n  variables: UserResourcePolicyListMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      }\n    ],\n    \"concreteType\": \"DeleteUserResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"delete_user_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicyListMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicyListMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"7be7fa4bc2e6ce7666489318e415d769\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicyListMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserResourcePolicyListMutation(\\n  $name: String!\\n) {\\n  delete_user_resource_policy(name: $name) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"5b565e4db37c96850ac85a92cd4e0290\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0ae51697521e63e495177b3686ab72b0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserResourcePolicyListQuery$variables = Record<PropertyKey, never>;\nexport type UserResourcePolicyListQuery$data = {\n  readonly user_resource_policies: ReadonlyArray<{\n    readonly created_at: string;\n    readonly id: string;\n    readonly max_customized_image_count: number | null | undefined;\n    readonly max_quota_scope_size: any | null | undefined;\n    readonly max_session_count_per_model_session: number | null | undefined;\n    readonly max_vfolder_count: number | null | undefined;\n    readonly name: string;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"UserResourcePolicySettingModalFragment\">;\n  } | null | undefined> | null | undefined;\n};\nexport type UserResourcePolicyListQuery = {\n  response: UserResourcePolicyListQuery$data;\n  variables: UserResourcePolicyListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_vfolder_count\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_session_count_per_model_session\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_quota_scope_size\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_customized_image_count\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicyListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"UserResourcePolicySettingModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicyListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"00b0583474f74c417b06d53115787d3b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicyListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserResourcePolicyListQuery {\\n  user_resource_policies {\\n    id\\n    name\\n    created_at\\n    max_vfolder_count @since(version: \\\"23.09.6\\\")\\n    max_session_count_per_model_session @since(version: \\\"23.09.10\\\")\\n    max_quota_scope_size @since(version: \\\"23.09.2\\\")\\n    max_customized_image_count @since(version: \\\"24.03.0\\\")\\n    ...UserResourcePolicySettingModalFragment\\n  }\\n}\\n\\nfragment UserResourcePolicySettingModalFragment on UserResourcePolicy {\\n  id\\n  name\\n  max_vfolder_count @since(version: \\\"23.09.6\\\")\\n  max_session_count_per_model_session @since(version: \\\"23.09.10\\\")\\n  max_quota_scope_size @since(version: \\\"23.09.2\\\")\\n  max_customized_image_count @since(version: \\\"24.03.0\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"be57da0a1c15efb970cb1e828500e6dc\";\n\nexport default node;\n","/**\n * @generated SignedSource<<243852fac18ec25ce97d84af1217352c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type CreateUserResourcePolicyInput = {\n  max_customized_image_count?: number | null | undefined;\n  max_quota_scope_size?: any | null | undefined;\n  max_session_count_per_model_session?: number | null | undefined;\n  max_vfolder_count?: number | null | undefined;\n  max_vfolder_size?: any | null | undefined;\n};\nexport type UserResourcePolicySettingModalCreateMutation$variables = {\n  name: string;\n  props: CreateUserResourcePolicyInput;\n};\nexport type UserResourcePolicySettingModalCreateMutation$data = {\n  readonly create_user_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type UserResourcePolicySettingModalCreateMutation = {\n  response: UserResourcePolicySettingModalCreateMutation$data;\n  variables: UserResourcePolicySettingModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"CreateUserResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"create_user_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicySettingModalCreateMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"129c4a570d8ae1a075d9aa9261094c48\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicySettingModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserResourcePolicySettingModalCreateMutation(\\n  $name: String!\\n  $props: CreateUserResourcePolicyInput!\\n) {\\n  create_user_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"9c00928ca86d4779838243df247257aa\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c174f2aae0611f9833328ac9b877be73>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserResourcePolicySettingModalFragment$data = {\n  readonly id: string;\n  readonly max_customized_image_count: number | null | undefined;\n  readonly max_quota_scope_size: any | null | undefined;\n  readonly max_session_count_per_model_session: number | null | undefined;\n  readonly max_vfolder_count: number | null | undefined;\n  readonly name: string;\n  readonly \" $fragmentType\": \"UserResourcePolicySettingModalFragment\";\n};\nexport type UserResourcePolicySettingModalFragment$key = {\n  readonly \" $data\"?: UserResourcePolicySettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"UserResourcePolicySettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"UserResourcePolicySettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_count\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_session_count_per_model_session\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_quota_scope_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_customized_image_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"UserResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"d93790c2b9fef92baa6999ce770cd9da\";\n\nexport default node;\n","/**\n * @generated SignedSource<<ada4a497fc52604f93ca9e7af985a9f9>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ModifyUserResourcePolicyInput = {\n  max_customized_image_count?: number | null | undefined;\n  max_quota_scope_size?: any | null | undefined;\n  max_session_count_per_model_session?: number | null | undefined;\n  max_vfolder_count?: number | null | undefined;\n};\nexport type UserResourcePolicySettingModalModifyMutation$variables = {\n  name: string;\n  props: ModifyUserResourcePolicyInput;\n};\nexport type UserResourcePolicySettingModalModifyMutation$data = {\n  readonly modify_user_resource_policy: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type UserResourcePolicySettingModalModifyMutation = {\n  response: UserResourcePolicySettingModalModifyMutation$data;\n  variables: UserResourcePolicySettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyUserResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_user_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f33ed379f4871e357183803b340a938a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserResourcePolicySettingModalModifyMutation(\\n  $name: String!\\n  $props: ModifyUserResourcePolicyInput!\\n) {\\n  modify_user_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d50cbcfb63bfd30da81fea8968bb6436\";\n\nexport default node;\n","import _ from 'lodash';\n\n/**\n * Escapes a value for CSV formatting.\n *\n * @param value - The value to escape.\n * @returns The escaped value.\n */\nfunction escapeCsvValue(value: any) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  if (typeof value === 'number' || typeof value === 'boolean') {\n    return String(value);\n  }\n\n  // Convert non-string values to string using JSON.stringify\n  value = _.isString(value) ? value : JSON.stringify(value);\n\n  // Replace double quotes within the value with two double quotes\n  return `\"${value.replace(/\"/g, '\"\"')}\"`;\n}\n\n/**\n * Converts an array of JSON objects to a CSV string.\n *\n * @param data - The array of JSON objects to convert.\n * @param format_rules - The formatting rules for each property in the JSON objects.\n * @returns The CSV string representation of the JSON objects.\n */\nexport const JSONToCSVBody = <T>(\n  data: T[],\n  format_rules?: {\n    [key in keyof T]?: (value: any) => any;\n  },\n) => {\n  const displayedData = _.map(data, (row) => {\n    return _.omit(row as object, '__fragments', '__fragmentOwner', '__id');\n  });\n\n  const CSVTitle = _.keys(displayedData[0]);\n  const CSVData = _.map(displayedData, (row) => {\n    return _.map(row, (value, key) => {\n      if (format_rules?.[key as keyof T]) {\n        return format_rules[key as keyof T]?.(value) || value;\n      }\n      return value;\n    });\n  });\n\n  const csvContent = CSVData.map((row) =>\n    row.map(escapeCsvValue).join(','),\n  ).join('\\n');\n  const csvBody = [CSVTitle.map(escapeCsvValue).join(','), csvContent].join(\n    '\\n',\n  );\n\n  return csvBody;\n};\n\n/**\n * Download a file from the given blob.\n * @param {Blob} blob - The file content.\n * @param {string} filename - The name of the file.\n */\n\nexport const downloadBlob = (blob: Blob, filename: string) => {\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.click();\n  URL.revokeObjectURL(url);\n};\n\nexport const exportCSVWithFormattingRules = <T>(\n  data: T[],\n  filename: string,\n  format_rules?: {\n    [key in keyof T]?: (value: any) => any;\n  },\n) => {\n  const bodyStr = JSONToCSVBody(data, format_rules);\n  const blob = new Blob([bodyStr], { type: 'text/csv' });\n  downloadBlob(blob, `${filename}.csv`);\n};\n","import { useBAISettingUserState } from './useBAISetting';\n\ntype KnownSettingName =\n  | 'AgentList'\n  | 'AgentSummaryList'\n  | 'ContainerRegistryList'\n  | 'CustomizedImageList'\n  | 'ErrorLogList'\n  | 'ImageList'\n  | 'KeypairResourcePolicyList'\n  | 'ProjectResourcePolicyList'\n  | 'UserResourcePolicyList'\n  | 'EndpointListPage';\n\nexport const useHiddenColumnKeysSetting = (listName: KnownSettingName) => {\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useBAISettingUserState(\n    `hiddenColumnKeys.${listName}`,\n  );\n\n  return [hiddenColumnKeys, setHiddenColumnKeys] as const;\n};\n","import { useAllowedHostNames } from '../hooks/backendai';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\ninterface AllowedHostNamesSelectProps extends SelectProps {}\n\nconst AllowedHostNamesSelect: React.FC<AllowedHostNamesSelectProps> = ({\n  ...selectProps\n}) => {\n  const allowedHostNames = useAllowedHostNames();\n\n  return (\n    <Select {...selectProps}>\n      {_.map(allowedHostNames, (hostName) => (\n        <Select.Option key={hostName} value={hostName}>\n          {hostName}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nexport default AllowedHostNamesSelect;\n","import Flex from './Flex';\nimport { Form, Checkbox, FormItemProps } from 'antd';\nimport { CheckboxChangeEvent } from 'antd/es/checkbox';\nimport React, {\n  Attributes,\n  cloneElement,\n  isValidElement,\n  useEffect,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormItemWithUnlimitedProps extends FormItemProps {\n  unlimitedValue?: number | string | null;\n  disableUnlimited?: boolean;\n}\n\nconst FormItemWithUnlimited: React.FC<FormItemWithUnlimitedProps> = ({\n  name,\n  unlimitedValue,\n  disableUnlimited,\n  children,\n  ...formItemPropsWithoutNameAndChildren\n}) => {\n  const { t } = useTranslation();\n  const [isUnlimited, setIsUnlimited] = useState<boolean>(false);\n  const form = Form.useFormInstance();\n\n  // Detect changes in form value to update the isUnlimited state.\n  useEffect(() => {\n    const fieldValue = form.getFieldValue(name);\n    setIsUnlimited(fieldValue === unlimitedValue);\n  }, [form, name, unlimitedValue]);\n\n  // Disable children when isUnlimited is true.\n  const childrenWithProps = isValidElement(children)\n    ? cloneElement(children, {\n        disabled: isUnlimited,\n      } as Attributes & { disabled?: boolean })\n    : children;\n\n  const childrenWithUndefinedValue =\n    isUnlimited && isValidElement(children)\n      ? cloneElement(children, {\n          value: undefined,\n          disabled: isUnlimited,\n        } as Attributes & { value?: any })\n      : undefined;\n\n  return (\n    <Flex direction=\"column\" align=\"start\">\n      <Form.Item\n        style={{ margin: 0 }}\n        name={name}\n        hidden={isUnlimited}\n        {...formItemPropsWithoutNameAndChildren}\n      >\n        {childrenWithProps}\n      </Form.Item>\n      {isUnlimited ? (\n        <Form.Item\n          style={{ margin: 0 }}\n          {...formItemPropsWithoutNameAndChildren}\n        >\n          {childrenWithUndefinedValue}\n        </Form.Item>\n      ) : null}\n      <Checkbox\n        checked={isUnlimited}\n        disabled={disableUnlimited}\n        onChange={(e: CheckboxChangeEvent) => {\n          const checked = e.target.checked;\n          setIsUnlimited(checked);\n          if (checked) {\n            form.setFieldValue(name, unlimitedValue);\n          } else {\n            form.resetFields([name]);\n          }\n        }}\n      >\n        {t('resourcePolicy.Unlimited')}\n      </Checkbox>\n    </Flex>\n  );\n};\n\nexport default FormItemWithUnlimited;\n","import { convertBinarySizeUnit } from '../helper';\nimport { MAX_CPU_QUOTA, SIGNED_32BIT_MAX_INT } from '../helper/const-vars';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useResourceSlots, useResourceSlotsDetails } from '../hooks/backendai';\nimport AllowedHostNamesSelect from './AllowedHostNamesSelect';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport DynamicUnitInputNumber from './DynamicUnitInputNumber';\nimport Flex from './Flex';\nimport FormItemWithUnlimited from './FormItemWithUnlimited';\nimport {\n  CreateKeyPairResourcePolicyInput,\n  KeypairResourcePolicySettingModalCreateMutation,\n} from './__generated__/KeypairResourcePolicySettingModalCreateMutation.graphql';\nimport { KeypairResourcePolicySettingModalFragment$key } from './__generated__/KeypairResourcePolicySettingModalFragment.graphql';\nimport {\n  KeypairResourcePolicySettingModalModifyMutation,\n  ModifyKeyPairResourcePolicyInput,\n} from './__generated__/KeypairResourcePolicySettingModalModifyMutation.graphql';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// import { KeypairResourcePolicySettingModalQuery } from './__generated__/KeypairResourcePolicySettingModalQuery.graphql';\nimport {\n  App,\n  Card,\n  Col,\n  Form,\n  FormInstance,\n  Input,\n  InputNumber,\n  Row,\n  Select,\n  theme,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useMemo, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useFragment, // useLazyLoadQuery,\n  useMutation,\n} from 'react-relay';\n\ninterface KeypairResourcePolicySettingModalProps extends BAIModalProps {\n  existingPolicyNames?: string[];\n  keypairResourcePolicyFrgmt?: KeypairResourcePolicySettingModalFragment$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst KeypairResourcePolicySettingModal: React.FC<\n  KeypairResourcePolicySettingModalProps\n> = ({\n  existingPolicyNames,\n  keypairResourcePolicyFrgmt = null,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { message } = App.useApp();\n  const { token } = theme.useToken();\n  const formRef = useRef<FormInstance>(null);\n  const [resourceSlots] = useResourceSlots();\n  const { mergedResourceSlots } = useResourceSlotsDetails();\n  const baiClient = useSuspendedBackendaiClient();\n  const isDeprecatedMaxVfolderCountInKeypairResourcePolicy =\n    baiClient?.supports(\n      'deprecated-max-vfolder-count-in-keypair-resource-policy',\n    );\n\n  const keypairResourcePolicy = useFragment(\n    graphql`\n      fragment KeypairResourcePolicySettingModalFragment on KeyPairResourcePolicy {\n        name\n        default_for_unspecified\n        total_resource_slots\n        max_session_lifetime\n        max_concurrent_sessions\n        max_containers_per_session\n        idle_timeout\n        allowed_vfolder_hosts\n        max_vfolder_count @deprecatedSince(version: \"23.09.4\")\n        max_pending_session_count @since(version: \"24.03.4\")\n        max_concurrent_sftp_sessions @since(version: \"24.03.4\")\n      }\n    `,\n    keypairResourcePolicyFrgmt,\n  );\n\n  // const { vfolder_host_permissions } =\n  //   useLazyLoadQuery<KeypairResourcePolicySettingModalQuery>(\n  //     graphql`\n  //       query KeypairResourcePolicySettingModalQuery {\n  //         vfolder_host_permissions {\n  //           vfolder_host_permission_list\n  //         }\n  //       }\n  //     `,\n  //     {},\n  //   );\n\n  const [commitCreateKeypairResourcePolicy, isInFlightCommitCreateUserSetting] =\n    useMutation<KeypairResourcePolicySettingModalCreateMutation>(graphql`\n      mutation KeypairResourcePolicySettingModalCreateMutation(\n        $name: String!\n        $props: CreateKeyPairResourcePolicyInput!\n      ) {\n        create_keypair_resource_policy(name: $name, props: $props) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const [commitModifyKeypairResourcePolicy, isInFlightCommitModifyUserSetting] =\n    useMutation<KeypairResourcePolicySettingModalModifyMutation>(graphql`\n      mutation KeypairResourcePolicySettingModalModifyMutation(\n        $name: String!\n        $props: ModifyKeyPairResourcePolicyInput!\n      ) {\n        modify_keypair_resource_policy(name: $name, props: $props) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const initialValues = useMemo(() => {\n    const parsedVfolderHosts = JSON.parse(\n      keypairResourcePolicy?.allowed_vfolder_hosts ?? '{}',\n    );\n    const parsedTotalResourceSlots = JSON.parse(\n      keypairResourcePolicy?.total_resource_slots ?? '{}',\n    );\n    if (parsedTotalResourceSlots?.mem) {\n      let autoUniResult = convertBinarySizeUnit(\n        parsedTotalResourceSlots?.mem + 'b',\n        'auto',\n        2,\n        true,\n      );\n\n      if (autoUniResult?.unit === 'B' || autoUniResult?.unit === 'K') {\n        autoUniResult = convertBinarySizeUnit(\n          parsedTotalResourceSlots?.mem + 'b',\n          'M',\n          3,\n          true,\n        );\n      }\n      parsedTotalResourceSlots.mem = autoUniResult?.numberUnit || '0G';\n    }\n\n    return {\n      name: keypairResourcePolicy?.name ?? '',\n      default_for_unspecified:\n        keypairResourcePolicy?.default_for_unspecified || 'UNLIMITED',\n      total_resource_slots: parsedTotalResourceSlots ?? {},\n      max_session_lifetime: keypairResourcePolicy?.max_session_lifetime ?? 0,\n      max_concurrent_sessions:\n        keypairResourcePolicy?.max_concurrent_sessions ?? 0,\n      max_containers_per_session:\n        keypairResourcePolicy?.max_containers_per_session ?? 1,\n      idle_timeout: keypairResourcePolicy?.idle_timeout ?? 0,\n      allowed_vfolder_hosts: _.keys(parsedVfolderHosts) ?? [],\n      max_pending_session_count:\n        keypairResourcePolicy?.max_pending_session_count ?? null,\n      max_concurrent_sftp_sessions:\n        keypairResourcePolicy?.max_concurrent_sftp_sessions ?? 0,\n    };\n  }, [keypairResourcePolicy]);\n\n  const handleOk = () => {\n    return formRef?.current\n      ?.validateFields()\n      .then((values) => {\n        const total_resource_slots = _.mapValues(\n          _.pickBy(\n            values.total_resource_slots,\n            (value) => !_.isUndefined(value),\n          ),\n          (value, key) => {\n            if (_.includes(key, 'mem')) {\n              return convertBinarySizeUnit(value, 'b', 0)?.numberFixed;\n            }\n            return value;\n          },\n        );\n\n        const allowed_vfolder_hosts: Record<string, string[] | undefined> =\n          _.fromPairs(\n            _.map(values.allowed_vfolder_hosts, (hostName) => {\n              if (initialValues?.allowed_vfolder_hosts?.includes(hostName)) {\n                const initialPermissions = JSON.parse(\n                  keypairResourcePolicy?.allowed_vfolder_hosts || '{}',\n                );\n                return [hostName, initialPermissions[hostName]];\n              }\n              const defaultPermissions = _.get(\n                values,\n                hostName,\n                [\n                  'create-vfolder',\n                  'modify-vfolder',\n                  'delete-vfolder',\n                  'mount-in-session',\n                  'upload-file',\n                  'download-file',\n                  'invite-others',\n                  'set-user-specific-permission',\n                ], // Default permissions\n              );\n              return [hostName, defaultPermissions];\n            }),\n          );\n\n        const { name, ...restValues } = values;\n        const props:\n          | CreateKeyPairResourcePolicyInput\n          | ModifyKeyPairResourcePolicyInput = {\n          ..._.omit(restValues, 'parsedTotalResourceSlots'),\n          total_resource_slots: JSON.stringify(total_resource_slots),\n          allowed_vfolder_hosts: JSON.stringify(allowed_vfolder_hosts),\n        };\n        if (!isDeprecatedMaxVfolderCountInKeypairResourcePolicy) {\n          props.max_vfolder_count = values?.max_vfolder_count;\n        }\n        if (!baiClient.supports('max-pending-session-count')) {\n          delete props?.max_pending_session_count;\n        }\n        if (!baiClient.supports('max-concurrent-sftp-sessions')) {\n          delete props?.max_concurrent_sftp_sessions;\n        }\n\n        if (keypairResourcePolicy === null) {\n          commitCreateKeypairResourcePolicy({\n            variables: {\n              name: values?.name,\n              props: props as CreateKeyPairResourcePolicyInput,\n            },\n            onCompleted: (res, errors) => {\n              if (\n                !res?.create_keypair_resource_policy?.ok &&\n                res.create_keypair_resource_policy?.msg\n              ) {\n                message.error(res.create_keypair_resource_policy.msg);\n                onRequestClose(false);\n                return;\n              }\n              if (\n                !res?.create_keypair_resource_policy?.ok &&\n                res.create_keypair_resource_policy?.msg\n              ) {\n                message.error(res.create_keypair_resource_policy.msg);\n                onRequestClose(false);\n                return;\n              }\n              message.success(t('resourcePolicy.SuccessfullyCreated'));\n              onRequestClose(true);\n            },\n            onError(err) {\n              message.error(\n                err?.message || t('resourcePolicy.CannotCreateResourcePolicy'),\n              );\n            },\n          });\n        } else {\n          commitModifyKeypairResourcePolicy({\n            variables: {\n              name: values?.name,\n              props: props as ModifyKeyPairResourcePolicyInput,\n            },\n            onCompleted: (res, errors) => {\n              if (\n                !res?.modify_keypair_resource_policy?.ok &&\n                res.modify_keypair_resource_policy?.msg\n              ) {\n                message.error(res.modify_keypair_resource_policy.msg);\n                onRequestClose(false);\n                return;\n              }\n              if (errors && errors.length > 0) {\n                errors.forEach((error) => message.error(error.message));\n                onRequestClose(false);\n                return;\n              }\n\n              message.success(t('resourcePolicy.SuccessfullyUpdated'));\n              onRequestClose(true);\n            },\n            onError(err) {\n              message.error(\n                err?.message || t('resourcePolicy.CannotUpdateResourcePolicy'),\n              );\n            },\n          });\n        }\n      })\n      .catch(() => {});\n  };\n\n  return (\n    <BAIModal\n      width={800}\n      title={\n        keypairResourcePolicy === null\n          ? t('resourcePolicy.CreateResourcePolicy')\n          : t('resourcePolicy.UpdateResourcePolicy')\n      }\n      onOk={handleOk}\n      onCancel={() => onRequestClose()}\n      destroyOnClose\n      confirmLoading={\n        isInFlightCommitCreateUserSetting || isInFlightCommitModifyUserSetting\n      }\n      {...props}\n    >\n      <Form\n        // Remove the required mark for the label because it has too many optional fields\n        requiredMark={false}\n        ref={formRef}\n        layout=\"vertical\"\n        // requiredMark=\"optional\"\n        initialValues={initialValues}\n        preserve={false}\n      >\n        <Form.Item\n          label={t('resourcePolicy.Name')}\n          name=\"name\"\n          required\n          rules={[\n            {\n              required: true,\n              message: t('data.explorer.ValueRequired'),\n            },\n            {\n              max: 64,\n            },\n            {\n              validator: (_, value) => {\n                if (\n                  !keypairResourcePolicy &&\n                  existingPolicyNames?.includes(value)\n                ) {\n                  return Promise.reject(\n                    t('resourcePolicy.ResourcePolicyNameAlreadyExists'),\n                  );\n                }\n                return Promise.resolve();\n              },\n            },\n          ]}\n        >\n          <Input disabled={!!keypairResourcePolicy} />\n        </Form.Item>\n        <Form.Item\n          label={\n            <Flex gap=\"xxs\">\n              <Typography.Text>\n                {t('resourcePolicy.DefaultForUnspecified')}\n              </Typography.Text>\n              <Tooltip\n                title={\n                  <>\n                    {t('resourcePolicy.DefaultForUnspecifiedTooltipDesc1')}\n                    <br />\n                    <br />\n                    {t('resourcePolicy.DefaultForUnspecifiedTooltipDesc2')}\n                  </>\n                }\n                placement=\"right\"\n              >\n                <QuestionCircleOutlined\n                  style={{ color: token.colorTextSecondary, cursor: 'pointer' }}\n                />\n              </Tooltip>\n            </Flex>\n          }\n          name=\"default_for_unspecified\"\n        >\n          <Select\n            options={[\n              {\n                key: 'unlimited',\n                label: 'UNLIMITED',\n                value: 'UNLIMITED',\n              },\n              {\n                key: 'limited',\n                label: 'LIMITED',\n                value: 'LIMITED',\n              },\n            ]}\n          />\n        </Form.Item>\n        <Form.Item label={t('resourcePolicy.ResourcePolicy')} required>\n          <Card>\n            {_.chain(resourceSlots)\n              .keys()\n              .chunk(3)\n              .map((resourceSlotKeys, index) => (\n                <Row gutter={[24, 16]} key={index}>\n                  {_.map(resourceSlotKeys, (resourceSlotKey) => (\n                    <Col\n                      xs={{ span: 12 }}\n                      md={{ span: 8 }}\n                      key={resourceSlotKey}\n                      style={{\n                        alignSelf: 'end',\n                        marginBottom: token.marginLG,\n                      }}\n                    >\n                      <FormItemWithUnlimited\n                        unlimitedValue={undefined}\n                        label={\n                          _.get(mergedResourceSlots, resourceSlotKey)\n                            ?.description || resourceSlotKey\n                        }\n                        name={['total_resource_slots', resourceSlotKey]}\n                        rules={[\n                          {\n                            validator(__, value) {\n                              if (\n                                _.includes(resourceSlotKey, 'mem') &&\n                                value &&\n                                // @ts-ignore\n                                convertBinarySizeUnit(value, 'p').number >\n                                  // @ts-ignore\n                                  convertBinarySizeUnit('300p', 'p').number\n                              ) {\n                                return Promise.reject(\n                                  new Error(\n                                    t('resourcePolicy.MemorySizeExceedsLimit'),\n                                  ),\n                                );\n                              }\n                              return Promise.resolve();\n                            },\n                          },\n                        ]}\n                        style={{ margin: 0, width: '100%' }}\n                      >\n                        {_.includes(resourceSlotKey, 'mem') ? (\n                          <DynamicUnitInputNumber style={{ width: '100%' }} />\n                        ) : (\n                          <InputNumber\n                            min={0}\n                            max={MAX_CPU_QUOTA}\n                            step={\n                              _.includes(resourceSlotKey, '.shares') ? 0.1 : 1\n                            }\n                            addonAfter={\n                              _.get(mergedResourceSlots, resourceSlotKey)\n                                ?.display_unit\n                            }\n                            style={{ width: '100%' }}\n                          />\n                        )}\n                      </FormItemWithUnlimited>\n                    </Col>\n                  ))}\n                </Row>\n              ))\n              .value()}\n          </Card>\n        </Form.Item>\n        <Form.Item label={t('resourcePolicy.Sessions')} required>\n          <Card>\n            <Row gutter={[24, 16]} style={{ alignSelf: 'end' }}>\n              <Col\n                xs={{ span: 12 }}\n                md={{ span: 8 }}\n                style={{ alignSelf: 'end' }}\n              >\n                <FormItemWithUnlimited\n                  label={t('resourcePolicy.ClusterSize')}\n                  name=\"max_containers_per_session\"\n                  style={{ margin: 0, width: '100%' }}\n                  disableUnlimited\n                >\n                  <InputNumber\n                    min={0}\n                    max={SIGNED_32BIT_MAX_INT}\n                    style={{ width: '100%' }}\n                  />\n                </FormItemWithUnlimited>\n              </Col>\n              <Col\n                xs={{ span: 12 }}\n                md={{ span: 8 }}\n                style={{ alignSelf: 'end' }}\n              >\n                <FormItemWithUnlimited\n                  name={'max_session_lifetime'}\n                  unlimitedValue={0}\n                  label={t('resourcePolicy.MaxSessionLifetime')}\n                  style={{ margin: 0, width: '100%' }}\n                >\n                  <InputNumber min={0} max={100} style={{ width: '100%' }} />\n                </FormItemWithUnlimited>\n              </Col>\n              {baiClient.supports('max-pending-session-count') ? (\n                <Col\n                  xs={{ span: 12 }}\n                  md={{ span: 8 }}\n                  style={{ alignSelf: 'end' }}\n                >\n                  <FormItemWithUnlimited\n                    name={'max_pending_session_count'}\n                    unlimitedValue={null}\n                    label={t('resourcePolicy.MaxPendingSessionCount')}\n                    style={{ margin: 0, width: '100%' }}\n                  >\n                    <InputNumber\n                      min={0}\n                      max={SIGNED_32BIT_MAX_INT}\n                      style={{ width: '100%' }}\n                    />\n                  </FormItemWithUnlimited>\n                </Col>\n              ) : null}\n              <Col\n                xs={{ span: 12 }}\n                md={{ span: 8 }}\n                style={{ alignSelf: 'end' }}\n              >\n                <FormItemWithUnlimited\n                  name={'max_concurrent_sessions'}\n                  label={t('resourcePolicy.ConcurrentJobs')}\n                  unlimitedValue={0}\n                  style={{ margin: 0, width: '100%' }}\n                >\n                  <InputNumber\n                    min={0}\n                    max={SIGNED_32BIT_MAX_INT}\n                    style={{ width: '100%' }}\n                  />\n                </FormItemWithUnlimited>\n              </Col>\n              <Col\n                xs={{ span: 12 }}\n                md={{ span: 8 }}\n                style={{ alignSelf: 'end' }}\n              >\n                <FormItemWithUnlimited\n                  name={'idle_timeout'}\n                  unlimitedValue={0}\n                  label={t('resourcePolicy.IdleTimeoutSec')}\n                  style={{ margin: 0, width: '100%' }}\n                >\n                  <InputNumber\n                    min={0}\n                    max={Number.MAX_SAFE_INTEGER}\n                    style={{ width: '100%' }}\n                  />\n                </FormItemWithUnlimited>\n              </Col>\n              {baiClient.supports('max-concurrent-sftp-sessions') ? (\n                <Col\n                  xs={{ span: 12 }}\n                  md={{ span: 8 }}\n                  style={{ alignSelf: 'end' }}\n                >\n                  <FormItemWithUnlimited\n                    name={'max_concurrent_sftp_sessions'}\n                    unlimitedValue={0}\n                    label={t('resourcePolicy.MaxConcurrentSFTPSessions')}\n                    style={{ margin: 0, width: '100%' }}\n                  >\n                    <InputNumber\n                      min={0}\n                      max={SIGNED_32BIT_MAX_INT}\n                      style={{ width: '100%' }}\n                    />\n                  </FormItemWithUnlimited>\n                </Col>\n              ) : null}\n            </Row>\n          </Card>\n        </Form.Item>\n        <Form.Item label={t('resourcePolicy.Folders')} required>\n          <Card>\n            <Form.Item\n              label={t('resourcePolicy.AllowedHosts')}\n              name=\"allowed_vfolder_hosts\"\n            >\n              <AllowedHostNamesSelect mode=\"multiple\" />\n            </Form.Item>\n            {isDeprecatedMaxVfolderCountInKeypairResourcePolicy ? undefined : (\n              <Form.Item label={t('credential.Max#')} name=\"max_vfolder_count\">\n                <InputNumber min={0} max={50} />\n              </Form.Item>\n            )}\n          </Card>\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default KeypairResourcePolicySettingModal;\n","import {\n  localeCompare,\n  numberSorterWithInfinityValue,\n  filterEmptyItem,\n} from '../helper';\nimport { SIGNED_32BIT_MAX_INT } from '../helper/const-vars';\nimport { exportCSVWithFormattingRules } from '../helper/csv-util';\nimport { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useHiddenColumnKeysSetting } from '../hooks/useHiddenColumnKeysSetting';\nimport Flex from './Flex';\nimport KeypairResourcePolicySettingModal from './KeypairResourcePolicySettingModal';\nimport ResourceNumber from './ResourceNumber';\nimport TableColumnsSettingModal from './TableColumnsSettingModal';\nimport { KeypairResourcePolicyListMutation } from './__generated__/KeypairResourcePolicyListMutation.graphql';\nimport {\n  KeypairResourcePolicyListQuery,\n  KeypairResourcePolicyListQuery$data,\n} from './__generated__/KeypairResourcePolicyListQuery.graphql';\nimport { KeypairResourcePolicySettingModalFragment$key } from './__generated__/KeypairResourcePolicySettingModalFragment.graphql';\nimport {\n  DeleteOutlined,\n  DownOutlined,\n  PlusOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport {\n  App,\n  Button,\n  Dropdown,\n  Space,\n  Table,\n  Tag,\n  theme,\n  Typography,\n} from 'antd';\nimport { AnyObject } from 'antd/es/_util/type';\nimport { ColumnsType, ColumnType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { Suspense, useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery, useMutation } from 'react-relay';\n\ntype KeypairResourcePolicies = NonNullable<\n  KeypairResourcePolicyListQuery$data['keypair_resource_policies']\n>[number];\n\ninterface KeypairResourcePolicyListProps {}\n\nconst KeypairResourcePolicyList: React.FC<KeypairResourcePolicyListProps> = (\n  props,\n) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const { message, modal } = App.useApp();\n\n  const [keypairResourcePolicyFetchKey, updateKeypairResourcePolicyFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [visibleColumnSettingModal, { toggle: toggleColumnSettingModal }] =\n    useToggle();\n  const [isCreatingPolicySetting, setIsCreatingPolicySetting] = useState(false);\n  const [inFlightResourcePolicyName, setInFlightResourcePolicyName] =\n    useState<string>();\n  const [editingKeypairResourcePolicy, setEditingKeypairResourcePolicy] =\n    useState<KeypairResourcePolicySettingModalFragment$key | null>();\n\n  const baiClient = useSuspendedBackendaiClient();\n\n  const { keypair_resource_policies } =\n    useLazyLoadQuery<KeypairResourcePolicyListQuery>(\n      graphql`\n        query KeypairResourcePolicyListQuery {\n          keypair_resource_policies {\n            name\n            total_resource_slots\n            max_session_lifetime\n            max_concurrent_sessions\n            max_containers_per_session\n            idle_timeout\n            allowed_vfolder_hosts\n            max_pending_session_count @since(version: \"24.03.4\")\n            max_concurrent_sftp_sessions @since(version: \"24.03.4\")\n            ...KeypairResourcePolicySettingModalFragment\n          }\n        }\n      `,\n      {},\n      {\n        fetchPolicy:\n          keypairResourcePolicyFetchKey === 'initial-fetch'\n            ? 'store-and-network'\n            : 'network-only',\n        fetchKey: keypairResourcePolicyFetchKey,\n      },\n    );\n\n  const [commitDelete, isInflightDelete] =\n    useMutation<KeypairResourcePolicyListMutation>(graphql`\n      mutation KeypairResourcePolicyListMutation($name: String!) {\n        delete_keypair_resource_policy(name: $name) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const columns: ColumnsType<KeypairResourcePolicies> = filterEmptyItem([\n    {\n      title: t('resourcePolicy.Name'),\n      dataIndex: 'name',\n      key: 'name',\n      fixed: 'left',\n      sorter: (a, b) => localeCompare(a?.name, b?.name),\n    },\n    {\n      title: t('resourcePolicy.Resources'),\n      dataIndex: 'total_resource_slots',\n      key: 'total_resource_slots',\n      render: (text, row) => (\n        <Flex gap={'xxs'}>\n          {!_.isEmpty(JSON.parse(row?.total_resource_slots || '{}'))\n            ? _.map(\n                JSON.parse(row?.total_resource_slots || '{}'),\n                (value, type) => {\n                  return (\n                    <ResourceNumber\n                      key={type}\n                      // @ts-ignore\n                      type={type}\n                      value={_.toString(value)}\n                    />\n                  );\n                },\n              )\n            : '-'}\n        </Flex>\n      ),\n    },\n    {\n      title: t('resourcePolicy.Concurrency'),\n      dataIndex: 'max_concurrent_sessions',\n      key: 'max_concurrent_sessions',\n      sorter: (a, b) =>\n        a?.max_concurrent_sessions && b?.max_concurrent_sessions\n          ? a.max_concurrent_sessions - b.max_concurrent_sessions\n          : 1,\n      render: (text) => (text ? text : '∞'),\n    },\n    {\n      title: t('resourcePolicy.ClusterSize'),\n      dataIndex: 'max_containers_per_session',\n      key: 'max_containers_per_session',\n      sorter: (a, b) =>\n        a?.max_containers_per_session && b?.max_containers_per_session\n          ? a.max_containers_per_session - b.max_containers_per_session\n          : 1,\n      render: (text) => (text === SIGNED_32BIT_MAX_INT ? '∞' : text),\n    },\n    {\n      title: t('resourcePolicy.IdleTimeout'),\n      dataIndex: 'idle_timeout',\n      key: 'idle_timeout',\n      sorter: (a, b) =>\n        a?.idle_timeout && b?.idle_timeout\n          ? a.idle_timeout - b.idle_timeout\n          : 1,\n      render: (text) => (text ? text : '∞'),\n    },\n    {\n      title: t('session.MaxSessionLifetime'),\n      dataIndex: 'max_session_lifetime',\n      key: 'max_session_lifetime',\n      sorter: (a, b) =>\n        numberSorterWithInfinityValue(\n          a?.max_session_lifetime,\n          b?.max_session_lifetime,\n          0,\n        ),\n      render: (text) => (text ? text : '∞'),\n    },\n    {\n      title: t('resourcePolicy.StorageNodes'),\n      dataIndex: 'allowed_vfolder_hosts',\n      key: 'allowed_vfolder_hosts',\n      render: (text, row) => {\n        const allowedVFolderHosts = baiClient?.supports(\n          'fine-grained-storage-permissions',\n        )\n          ? _.keys(JSON.parse(row?.allowed_vfolder_hosts || '{}'))\n          : JSON.parse(row?.allowed_vfolder_hosts || '{}');\n        return (\n          <>\n            {_.map(allowedVFolderHosts, (host) => (\n              <Tag key={host}>{host}</Tag>\n            ))}\n          </>\n        );\n      },\n    },\n    baiClient?.supports('max-pending-session-count') && {\n      title: t('resourcePolicy.MaxPendingSessionCount'),\n      dataIndex: 'max_pending_session_count',\n      key: 'max_pending_session_count',\n      sorter: (a, b) =>\n        numberSorterWithInfinityValue(\n          a?.max_pending_session_count,\n          b?.max_pending_session_count,\n          0,\n        ),\n      render: (text) => (text ? text : '∞'),\n    },\n    baiClient?.supports('max-concurrent-sftp-sessions') && {\n      title: t('resourcePolicy.MaxConcurrentSFTPSessions'),\n      dataIndex: 'max_concurrent_sftp_sessions',\n      key: 'max_concurrent_sftp_sessions',\n      sorter: (a, b) =>\n        numberSorterWithInfinityValue(\n          a?.max_concurrent_sftp_sessions,\n          b?.max_concurrent_sftp_sessions,\n          0,\n        ),\n      render: (text) => (text ? text : '∞'),\n    },\n    {\n      title: t('general.Control'),\n      key: 'control',\n      fixed: 'right',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            size=\"large\"\n            icon={<SettingOutlined />}\n            style={{\n              color: token.colorInfo,\n            }}\n            onClick={() => {\n              setEditingKeypairResourcePolicy(row);\n            }}\n          />\n          <Button\n            type=\"text\"\n            size=\"large\"\n            icon={\n              <DeleteOutlined\n                style={{\n                  color: token.colorError,\n                }}\n              />\n            }\n            loading={\n              isInflightDelete &&\n              inFlightResourcePolicyName ===\n                row?.name + keypairResourcePolicyFetchKey\n            }\n            disabled={\n              isInflightDelete &&\n              inFlightResourcePolicyName !==\n                row?.name + keypairResourcePolicyFetchKey\n            }\n            onClick={() => {\n              modal.confirm({\n                title: t('resourcePolicy.DeletePolicy'),\n                content: (\n                  <Flex direction=\"column\" align=\"stretch\">\n                    <Flex gap={'xxs'}>\n                      <Typography.Text>\n                        {t('resourcePolicy.DeletePolicyDescription')}\n                      </Typography.Text>\n                      <Typography.Text strong>{row?.name}</Typography.Text>\n                    </Flex>\n                    <br />\n                    <Typography.Text type=\"danger\">\n                      {t('dialog.warning.CannotBeUndone')}\n                    </Typography.Text>\n                  </Flex>\n                ),\n                okButtonProps: {\n                  danger: true,\n                },\n                okText: t('button.Delete'),\n                onOk: () => {\n                  if (row?.name) {\n                    setInFlightResourcePolicyName(\n                      row.name + keypairResourcePolicyFetchKey,\n                    );\n                    commitDelete({\n                      variables: {\n                        name: row.name,\n                      },\n                      onCompleted: (res, errors) => {\n                        if (!res?.delete_keypair_resource_policy?.ok) {\n                          message.error(\n                            res?.delete_keypair_resource_policy?.msg,\n                          );\n                          return;\n                        }\n                        if (errors && errors?.length > 0) {\n                          const errorMsgList = _.map(\n                            errors,\n                            (error) => error.message,\n                          );\n                          for (const error of errorMsgList) {\n                            message.error(error);\n                          }\n                        } else {\n                          startRefetchTransition(() =>\n                            updateKeypairResourcePolicyFetchKey(),\n                          );\n                          message.success(\n                            t('resourcePolicy.SuccessfullyDeleted'),\n                          );\n                        }\n                      },\n                      onError(err) {\n                        message.error(err?.message);\n                      },\n                    });\n                  }\n                },\n              });\n            }}\n          />\n        </Flex>\n      ),\n    },\n  ]);\n\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useHiddenColumnKeysSetting(\n    'KeypairResourcePolicyList',\n  );\n\n  const handleExportCSV = () => {\n    if (!keypair_resource_policies) {\n      message.error(t('resourcePolicy.NoDataToExport'));\n      return;\n    }\n\n    const columnKeys = _.without(\n      _.map(columns, (column) => _.toString(column.key)),\n      'control',\n    );\n    const responseData = _.map(keypair_resource_policies, (policy) => {\n      return _.pick(\n        policy,\n        columnKeys.map((key) => key as keyof KeypairResourcePolicies),\n      );\n    });\n\n    exportCSVWithFormattingRules(\n      responseData as KeypairResourcePolicies[],\n      'keypair_resource_policies',\n      {\n        total_resource_slots: (text) =>\n          _.isEmpty(text) ? '-' : JSON.stringify(text),\n        max_concurrent_sessions: (text) => (text ? text : '-'),\n        max_containers_per_session: (text) =>\n          text === SIGNED_32BIT_MAX_INT ? '∞' : text,\n        idle_timeout: (text) => (text ? text : '-'),\n        max_session_lifetime: (text) => (text ? text : '-'),\n        allowed_vfolder_hosts: (text) =>\n          _.isEmpty(text) ? '-' : _.keys(JSON.parse(text)).join(', '),\n      },\n    );\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\" {...props}>\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        wrap=\"wrap\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex direction=\"column\" align=\"start\">\n          <Dropdown\n            menu={{\n              items: [\n                {\n                  key: 'exportCSV',\n                  label: t('resourcePolicy.ExportCSV'),\n                  onClick: () => {\n                    handleExportCSV();\n                  },\n                },\n              ],\n            }}\n          >\n            <Button\n              type=\"link\"\n              style={{ padding: 0 }}\n              onClick={(e) => e.preventDefault()}\n            >\n              <Space style={{ color: token.colorLinkHover }}>\n                {t('resourcePolicy.Tools')}\n                <DownOutlined />\n              </Space>\n            </Button>\n          </Dropdown>\n        </Flex>\n        <Flex direction=\"row\" gap={'xs'} wrap=\"wrap\" style={{ flexShrink: 1 }}>\n          <Flex gap={'xs'}>\n            <Button\n              icon={<ReloadOutlined />}\n              loading={isRefetchPending}\n              onClick={() => {\n                startRefetchTransition(() =>\n                  updateKeypairResourcePolicyFetchKey(),\n                );\n              }}\n            />\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                setIsCreatingPolicySetting(true);\n              }}\n            >\n              {t('button.Create')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Table\n        columns={\n          _.filter(\n            columns,\n            (column) => !_.includes(hiddenColumnKeys, _.toString(column?.key)),\n          ) as ColumnType<AnyObject>[]\n        }\n        dataSource={\n          keypair_resource_policies as readonly AnyObject[] | undefined\n        }\n        rowKey=\"name\"\n        scroll={{ x: 'max-content' }}\n        pagination={false}\n        showSorterTooltip={false}\n      />\n      <Flex\n        justify=\"end\"\n        style={{\n          padding: token.paddingXXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            toggleColumnSettingModal();\n          }}\n        />\n      </Flex>\n      <TableColumnsSettingModal\n        open={visibleColumnSettingModal}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setHiddenColumnKeys(\n              _.difference(\n                columns.map((column) => _.toString(column.key)),\n                values?.selectedColumnKeys,\n              ),\n            );\n          toggleColumnSettingModal();\n        }}\n        columns={columns}\n        hiddenColumnKeys={hiddenColumnKeys}\n      />\n      <Suspense>\n        <KeypairResourcePolicySettingModal\n          existingPolicyNames={_.map(\n            keypair_resource_policies,\n            (policy) => policy?.name || '',\n          )}\n          open={!!editingKeypairResourcePolicy || isCreatingPolicySetting}\n          keypairResourcePolicyFrgmt={editingKeypairResourcePolicy || null}\n          onRequestClose={(success) => {\n            setEditingKeypairResourcePolicy(null);\n            setIsCreatingPolicySetting(false);\n            if (success) {\n              startRefetchTransition(() => {\n                updateKeypairResourcePolicyFetchKey();\n              });\n            }\n          }}\n        />\n      </Suspense>\n    </Flex>\n  );\n};\n\nexport default KeypairResourcePolicyList;\n","import { GBToBytes, bytesToGB } from '../helper';\nimport { SIGNED_32BIT_MAX_INT } from '../helper/const-vars';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport FormItemWithUnlimited from './FormItemWithUnlimited';\nimport {\n  CreateProjectResourcePolicyInput,\n  ProjectResourcePolicySettingModalCreateMutation,\n} from './__generated__/ProjectResourcePolicySettingModalCreateMutation.graphql';\nimport { ProjectResourcePolicySettingModalFragment$key } from './__generated__/ProjectResourcePolicySettingModalFragment.graphql';\nimport {\n  ModifyProjectResourcePolicyInput,\n  ProjectResourcePolicySettingModalModifyMutation,\n} from './__generated__/ProjectResourcePolicySettingModalModifyMutation.graphql';\nimport {\n  Form,\n  Input,\n  Alert,\n  App,\n  theme,\n  InputNumber,\n  FormInstance,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useMemo, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  existingPolicyNames?: string[];\n  projectResourcePolicyFrgmt: ProjectResourcePolicySettingModalFragment$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst ProjectResourcePolicySettingModal: React.FC<Props> = ({\n  existingPolicyNames,\n  projectResourcePolicyFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n  const formRef = useRef<FormInstance>(null);\n\n  const baiClient = useSuspendedBackendaiClient();\n  const supportMaxVfolderCount = baiClient?.supports(\n    'max-vfolder-count-in-user-and-project-resource-policy',\n  );\n  const supportMaxQuotaScopeSize = baiClient?.supports('max-quota-scope-size');\n  const supportMaxNetworkCount = baiClient?.supports('max_network_count');\n\n  const projectResourcePolicy = useFragment(\n    graphql`\n      fragment ProjectResourcePolicySettingModalFragment on ProjectResourcePolicy {\n        id\n        name\n        created_at\n        # follows version of https://github.com/lablup/backend.ai/pull/1993\n        # --------------- START --------------------\n        max_vfolder_count @since(version: \"23.09.6\")\n        max_quota_scope_size @since(version: \"23.09.2\")\n        # ---------------- END ---------------------\n        max_network_count @since(version: \"24.12.0\")\n      }\n    `,\n    projectResourcePolicyFrgmt,\n  );\n\n  const [\n    commitCreateProjectResourcePolicy,\n    isInFlightCommitCreateProjectResourcePolicy,\n  ] = useMutation<ProjectResourcePolicySettingModalCreateMutation>(graphql`\n    mutation ProjectResourcePolicySettingModalCreateMutation(\n      $name: String!\n      $props: CreateProjectResourcePolicyInput!\n    ) {\n      create_project_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const [\n    commitModifyProjectResourcePolicy,\n    isInFlightCommitModifyProjectResourcePolicy,\n  ] = useMutation<ProjectResourcePolicySettingModalModifyMutation>(graphql`\n    mutation ProjectResourcePolicySettingModalModifyMutation(\n      $name: String!\n      $props: ModifyProjectResourcePolicyInput!\n    ) {\n      modify_project_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const initialValues = useMemo(() => {\n    let unlimitedValues = {};\n    if (projectResourcePolicy === null) {\n      unlimitedValues = {\n        // Initialize unlimited values as a default when creating a new policy.\\\n        max_vfolder_count: 0,\n        max_quota_scope_size: -1,\n        max_network_count: -1,\n      };\n    }\n    let maxQuotaScopeSize = projectResourcePolicy?.max_quota_scope_size;\n    maxQuotaScopeSize =\n      _.isUndefined(maxQuotaScopeSize) || maxQuotaScopeSize === -1\n        ? -1\n        : bytesToGB(maxQuotaScopeSize);\n    return {\n      ...unlimitedValues,\n      ...projectResourcePolicy,\n      max_quota_scope_size: maxQuotaScopeSize,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    projectResourcePolicy,\n    projectResourcePolicy?.max_vfolder_count,\n    projectResourcePolicy?.max_quota_scope_size,\n  ]);\n\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    return formRef?.current\n      ?.validateFields()\n      .then((values) => {\n        const props:\n          | CreateProjectResourcePolicyInput\n          | ModifyProjectResourcePolicyInput = {\n          max_vfolder_count: values?.max_vfolder_count || 0,\n          max_quota_scope_size:\n            values?.max_quota_scope_size === -1\n              ? -1\n              : GBToBytes(values?.max_quota_scope_size),\n          max_network_count: values?.max_network_count || -1,\n        };\n        if (!supportMaxVfolderCount) {\n          delete props.max_vfolder_count;\n        }\n        if (!supportMaxQuotaScopeSize) {\n          delete props.max_quota_scope_size;\n        }\n        if (!supportMaxNetworkCount) {\n          delete props.max_network_count;\n        }\n        if (projectResourcePolicy === null) {\n          commitCreateProjectResourcePolicy({\n            variables: {\n              name: values?.name,\n              props: props as CreateProjectResourcePolicyInput,\n            },\n            onCompleted(res, errors) {\n              if (!res?.create_project_resource_policy?.ok || errors) {\n                message.error(\n                  res?.create_project_resource_policy?.msg ||\n                    t('resourcePolicy.CannotCreateResourcePolicy'),\n                );\n                onRequestClose();\n              } else {\n                message.success(\n                  t('storageHost.ResourcePolicySuccessfullyUpdated'),\n                );\n                onRequestClose(true);\n              }\n            },\n            onError(error) {\n              message.error(\n                error?.message ||\n                  t('resourcePolicy.CannotCreateResourcePolicy'),\n              );\n            },\n          });\n        } else {\n          commitModifyProjectResourcePolicy({\n            variables: {\n              name: values?.name,\n              props: props as ModifyProjectResourcePolicyInput,\n            },\n            onCompleted(res, errors) {\n              if (!res?.modify_project_resource_policy?.ok || errors) {\n                message.error(\n                  res?.modify_project_resource_policy?.msg ||\n                    t('resourcePolicy.CannotUpdateResourcePolicy'),\n                );\n                onRequestClose();\n              } else {\n                message.success(\n                  t('storageHost.ResourcePolicySuccessfullyUpdated'),\n                );\n                onRequestClose(true);\n              }\n            },\n            onError(error) {\n              message.error(\n                error?.message ||\n                  t('resourcePolicy.CannotUpdateResourcePolicy'),\n              );\n            },\n          });\n        }\n      })\n      .catch(() => {});\n  };\n\n  return (\n    <BAIModal\n      title={\n        projectResourcePolicy === null\n          ? t('resourcePolicy.CreateResourcePolicy')\n          : t('resourcePolicy.UpdateResourcePolicy')\n      }\n      onOk={handleOk}\n      onCancel={() => onRequestClose()}\n      destroyOnClose\n      confirmLoading={\n        isInFlightCommitCreateProjectResourcePolicy ||\n        isInFlightCommitModifyProjectResourcePolicy\n      }\n      {...baiModalProps}\n    >\n      <Alert\n        message={t('storageHost.BeCarefulToSetProjectResourcePolicy')}\n        type=\"warning\"\n        showIcon\n        style={{ marginBottom: token.marginMD }}\n      />\n      <Form\n        ref={formRef}\n        layout=\"vertical\"\n        requiredMark=\"optional\"\n        initialValues={initialValues}\n        preserve={false}\n      >\n        <Form.Item\n          label={t('resourcePolicy.Name')}\n          name=\"name\"\n          required\n          rules={[\n            {\n              required: true,\n              message: t('data.explorer.ValueRequired'),\n            },\n            {\n              max: 255,\n            },\n            {\n              validator: (_, value) => {\n                if (\n                  !projectResourcePolicy &&\n                  existingPolicyNames?.includes(value)\n                ) {\n                  return Promise.reject(\n                    t('resourcePolicy.ResourcePolicyNameAlreadyExists'),\n                  );\n                }\n                return Promise.resolve();\n              },\n            },\n          ]}\n        >\n          <Input disabled={!!projectResourcePolicy} />\n        </Form.Item>\n        <Flex\n          direction=\"column\"\n          align=\"stretch\"\n          gap={'md'}\n          style={{ marginBottom: token.marginMD }}\n        >\n          {supportMaxVfolderCount ? (\n            <FormItemWithUnlimited\n              name={'max_vfolder_count'}\n              unlimitedValue={0}\n              label={t('resourcePolicy.MaxFolderCount')}\n              style={{ width: '100%', margin: 0 }}\n            >\n              <InputNumber\n                min={0}\n                max={SIGNED_32BIT_MAX_INT}\n                style={{ width: '100%' }}\n              />\n            </FormItemWithUnlimited>\n          ) : null}\n          {supportMaxQuotaScopeSize ? (\n            <FormItemWithUnlimited\n              name={'max_quota_scope_size'}\n              unlimitedValue={-1}\n              label={t('storageHost.MaxFolderSize')}\n              style={{ width: '100%', margin: 0 }}\n            >\n              <InputNumber\n                min={0}\n                // Maximum safe integer divided by 10^9 to prevent overflow when converting GB to bytes\n                max={Math.floor(Number.MAX_SAFE_INTEGER / Math.pow(10, 9))}\n                addonAfter=\"GB\"\n                style={{ width: '100%' }}\n              />\n            </FormItemWithUnlimited>\n          ) : null}\n          {supportMaxNetworkCount ? (\n            <FormItemWithUnlimited\n              name={'max_network_count'}\n              unlimitedValue={-1}\n              label={t('resourcePolicy.MaxNetworkCount')}\n              style={{ width: '100%', margin: 0 }}\n            >\n              <InputNumber\n                min={0}\n                max={SIGNED_32BIT_MAX_INT}\n                style={{ width: '100%' }}\n              />\n            </FormItemWithUnlimited>\n          ) : null}\n        </Flex>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default ProjectResourcePolicySettingModal;\n","import {\n  bytesToGB,\n  filterEmptyItem,\n  filterNonNullItems,\n  localeCompare,\n  numberSorterWithInfinityValue,\n} from '../helper';\nimport { exportCSVWithFormattingRules } from '../helper/csv-util';\nimport { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useHiddenColumnKeysSetting } from '../hooks/useHiddenColumnKeysSetting';\nimport Flex from './Flex';\nimport ProjectResourcePolicySettingModal from './ProjectResourcePolicySettingModal';\nimport TableColumnsSettingModal from './TableColumnsSettingModal';\nimport { ProjectResourcePolicyListMutation } from './__generated__/ProjectResourcePolicyListMutation.graphql';\nimport {\n  ProjectResourcePolicyListQuery,\n  ProjectResourcePolicyListQuery$data,\n} from './__generated__/ProjectResourcePolicyListQuery.graphql';\nimport { ProjectResourcePolicySettingModalFragment$key } from './__generated__/ProjectResourcePolicySettingModalFragment.graphql';\nimport {\n  DeleteOutlined,\n  DownOutlined,\n  PlusOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport {\n  Button,\n  Dropdown,\n  message,\n  Popconfirm,\n  Space,\n  Table,\n  theme,\n} from 'antd';\nimport { ColumnType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery, useMutation } from 'react-relay';\n\ntype ProjectResourcePolicies = NonNullable<\n  ProjectResourcePolicyListQuery$data['project_resource_policies']\n>[number];\n\ninterface ProjectResourcePolicyListProps {}\n\nconst ProjectResourcePolicyList: React.FC<\n  ProjectResourcePolicyListProps\n> = () => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [projectResourcePolicyFetchKey, updateProjectResourcePolicyFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [isCreatingPolicySetting, setIsCreatingPolicySetting] = useState(false);\n  const [visibleColumnSettingModal, { toggle: toggleColumnSettingModal }] =\n    useToggle();\n  const [inFlightResourcePolicyName, setInFlightResourcePolicyName] =\n    useState<string>();\n  const [editingProjectResourcePolicy, setEditingProjectResourcePolicy] =\n    useState<ProjectResourcePolicySettingModalFragment$key | null>();\n\n  const baiClient = useSuspendedBackendaiClient();\n  const supportMaxVfolderCount = baiClient?.supports(\n    'max-vfolder-count-in-user-and-project-resource-policy',\n  );\n  const supportMaxQuotaScopeSize = baiClient?.supports('max-quota-scope-size');\n  const supportMaxNetworkCount = baiClient?.supports('max_network_count');\n\n  const { project_resource_policies } =\n    useLazyLoadQuery<ProjectResourcePolicyListQuery>(\n      graphql`\n        query ProjectResourcePolicyListQuery {\n          project_resource_policies {\n            id\n            name\n            created_at\n            # follows version of https://github.com/lablup/backend.ai/pull/1993\n            # --------------- START --------------------\n            max_vfolder_count @since(version: \"23.09.6\")\n            max_quota_scope_size @since(version: \"23.09.2\")\n            # ---------------- END ---------------------\n            max_network_count @since(version: \"24.12.0\")\n            ...ProjectResourcePolicySettingModalFragment\n          }\n        }\n      `,\n      {},\n      {\n        fetchPolicy:\n          projectResourcePolicyFetchKey === 'initial-fetch'\n            ? 'store-and-network'\n            : 'network-only',\n        fetchKey: projectResourcePolicyFetchKey,\n      },\n    );\n\n  const [commitDelete, isInflightDelete] =\n    useMutation<ProjectResourcePolicyListMutation>(graphql`\n      mutation ProjectResourcePolicyListMutation($name: String!) {\n        delete_project_resource_policy(name: $name) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const columns = filterEmptyItem<ColumnType<ProjectResourcePolicies>>([\n    {\n      title: t('resourcePolicy.Name'),\n      dataIndex: 'name',\n      key: 'name',\n      fixed: 'left',\n      sorter: (a, b) => localeCompare(a?.name, b?.name),\n    },\n    supportMaxVfolderCount\n      ? {\n          title: t('resourcePolicy.MaxVFolderCount'),\n          dataIndex: 'max_vfolder_count',\n          key: 'max_vfolder_count',\n          render: (text: ProjectResourcePolicies) =>\n            _.toNumber(text) === 0 ? '∞' : text,\n          sorter: (a, b) =>\n            numberSorterWithInfinityValue(\n              a?.max_vfolder_count,\n              b?.max_vfolder_count,\n              0,\n            ),\n        }\n      : {},\n    supportMaxQuotaScopeSize\n      ? {\n          title: t('resourcePolicy.MaxQuotaScopeSize'),\n          dataIndex: 'max_quota_scope_size',\n          key: 'max_quota_scope_size',\n          render: (text) => (text === -1 ? '∞' : bytesToGB(text)),\n          sorter: (a, b) =>\n            numberSorterWithInfinityValue(\n              a?.max_quota_scope_size,\n              b?.max_quota_scope_size,\n              -1,\n            ),\n        }\n      : {},\n    supportMaxNetworkCount\n      ? {\n          title: t('resourcePolicy.MaxNetworkCount'),\n          dataIndex: 'max_network_count',\n          key: 'max_network_count',\n          render: (text) => (text === -1 ? '∞' : text),\n          sorter: (a, b) => true,\n        }\n      : {},\n    {\n      title: 'ID',\n      dataIndex: 'id',\n      key: 'id',\n      sorter: (a, b) => localeCompare(a?.id, b?.id),\n    },\n    {\n      title: t('resourcePolicy.CreatedAt'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (text) => dayjs(text).format('lll'),\n      sorter: (a, b) => localeCompare(a?.created_at, b?.created_at),\n    },\n    {\n      title: t('general.Control'),\n      fixed: 'right',\n      key: 'control',\n      render: (text: any, row: ProjectResourcePolicies) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            style={{\n              color: token.colorInfo,\n            }}\n            onClick={() => {\n              setEditingProjectResourcePolicy(row);\n            }}\n          />\n          <Popconfirm\n            title={t('dialog.ask.DoYouWantToProceed')}\n            description={t('dialog.warning.CannotBeUndone')}\n            okType=\"danger\"\n            okText={t('button.Delete')}\n            onConfirm={() => {\n              if (row?.name) {\n                setInFlightResourcePolicyName(\n                  row.name + projectResourcePolicyFetchKey,\n                );\n                commitDelete({\n                  variables: {\n                    name: row.name,\n                  },\n                  onCompleted: (res, errors) => {\n                    if (!res?.delete_project_resource_policy?.ok) {\n                      message.error(res?.delete_project_resource_policy?.msg);\n                      return;\n                    }\n                    if (errors && errors?.length > 0) {\n                      const errorMsgList = _.map(\n                        errors,\n                        (error) => error.message,\n                      );\n                      for (const error of errorMsgList) {\n                        message.error(error);\n                      }\n                    } else {\n                      startRefetchTransition(() =>\n                        updateProjectResourcePolicyFetchKey(),\n                      );\n                      message.success(t('resourcePolicy.SuccessfullyDeleted'));\n                    }\n                  },\n                  onError(err) {\n                    message.error(err?.message);\n                  },\n                });\n              }\n            }}\n          >\n            <Button\n              type=\"text\"\n              icon={\n                <DeleteOutlined\n                  style={{\n                    color: token.colorError,\n                  }}\n                />\n              }\n              loading={\n                isInflightDelete &&\n                inFlightResourcePolicyName ===\n                  row?.name + projectResourcePolicyFetchKey\n              }\n              disabled={\n                isInflightDelete &&\n                inFlightResourcePolicyName !==\n                  row?.name + projectResourcePolicyFetchKey\n              }\n            />\n          </Popconfirm>\n        </Flex>\n      ),\n    },\n  ]);\n\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useHiddenColumnKeysSetting(\n    'ProjectResourcePolicyList',\n  );\n\n  const handleExportCSV = () => {\n    if (!project_resource_policies) {\n      message.error(t('resourcePolicy.NoDataToExport'));\n      return;\n    }\n\n    const columnkeys = _.without(\n      _.map(columns, (column) => _.toString(column.key)),\n      'control',\n    );\n    const responseData = _.map(project_resource_policies, (policy) => {\n      return _.pick(\n        policy,\n        columnkeys.map((key) => key as keyof ProjectResourcePolicies),\n      );\n    });\n    exportCSVWithFormattingRules(\n      responseData as ProjectResourcePolicies[],\n      'project_resource_polices',\n      {\n        max_vfolder_count: (text: ProjectResourcePolicies) =>\n          _.toNumber(text) === 0 ? '-' : text,\n        max_quota_scope_size: (text) => (text === -1 ? '-' : bytesToGB(text)),\n      },\n    );\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        wrap=\"wrap\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex direction=\"column\" align=\"start\">\n          <Dropdown\n            menu={{\n              items: [\n                {\n                  key: 'exportCSV',\n                  label: t('resourcePolicy.ExportCSV'),\n                  onClick: () => {\n                    handleExportCSV();\n                  },\n                },\n              ],\n            }}\n          >\n            <Button\n              type=\"link\"\n              style={{ padding: 0 }}\n              onClick={(e) => e.preventDefault()}\n            >\n              <Space style={{ color: token.colorLinkHover }}>\n                {t('resourcePolicy.Tools')}\n                <DownOutlined />\n              </Space>\n            </Button>\n          </Dropdown>\n        </Flex>\n        <Flex direction=\"row\" gap={'xs'} wrap=\"wrap\" style={{ flexShrink: 1 }}>\n          <Flex gap={'xs'}>\n            <Button\n              icon={<ReloadOutlined />}\n              loading={isRefetchPending}\n              onClick={() => {\n                startRefetchTransition(() =>\n                  updateProjectResourcePolicyFetchKey(),\n                );\n              }}\n            />\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                setIsCreatingPolicySetting(true);\n              }}\n            >\n              {t('button.Create')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Table\n        rowKey=\"id\"\n        showSorterTooltip={false}\n        columns={_.filter(\n          columns,\n          (column) => !_.includes(hiddenColumnKeys, _.toString(column?.key)),\n        )}\n        dataSource={filterNonNullItems(project_resource_policies)}\n        scroll={{ x: 'max-content' }}\n        pagination={false}\n      />\n      <Flex\n        justify=\"end\"\n        style={{\n          padding: token.paddingXXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            toggleColumnSettingModal();\n          }}\n        />\n      </Flex>\n      <TableColumnsSettingModal\n        open={visibleColumnSettingModal}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setHiddenColumnKeys(\n              _.difference(\n                columns.map((column) => _.toString(column.key)),\n                values?.selectedColumnKeys,\n              ),\n            );\n          toggleColumnSettingModal();\n        }}\n        columns={columns}\n        hiddenColumnKeys={hiddenColumnKeys}\n      />\n      <ProjectResourcePolicySettingModal\n        existingPolicyNames={_.map(project_resource_policies, 'name')}\n        open={!!editingProjectResourcePolicy || isCreatingPolicySetting}\n        projectResourcePolicyFrgmt={editingProjectResourcePolicy || null}\n        onRequestClose={(success) => {\n          if (success) {\n            startRefetchTransition(() => updateProjectResourcePolicyFetchKey());\n          }\n          setEditingProjectResourcePolicy(null);\n          setIsCreatingPolicySetting(false);\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default ProjectResourcePolicyList;\n","import { GBToBytes, bytesToGB } from '../helper';\nimport { SIGNED_32BIT_MAX_INT } from '../helper/const-vars';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport FormItemWithUnlimited from './FormItemWithUnlimited';\nimport {\n  CreateUserResourcePolicyInput,\n  UserResourcePolicySettingModalCreateMutation,\n} from './__generated__/UserResourcePolicySettingModalCreateMutation.graphql';\nimport { UserResourcePolicySettingModalFragment$key } from './__generated__/UserResourcePolicySettingModalFragment.graphql';\nimport {\n  ModifyUserResourcePolicyInput,\n  UserResourcePolicySettingModalModifyMutation,\n} from './__generated__/UserResourcePolicySettingModalModifyMutation.graphql';\nimport {\n  Form,\n  Input,\n  Alert,\n  App,\n  InputNumber,\n  theme,\n  FormInstance,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useMemo, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  existingPolicyNames?: string[];\n  userResourcePolicyFrgmt: UserResourcePolicySettingModalFragment$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst UserResourcePolicySettingModal: React.FC<Props> = ({\n  existingPolicyNames,\n  userResourcePolicyFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n\n  const formRef = useRef<FormInstance>(null);\n\n  const baiClient = useSuspendedBackendaiClient();\n  const supportMaxVfolderCount = baiClient?.supports(\n    'max-vfolder-count-in-user-and-project-resource-policy',\n  );\n  const supportMaxQuotaScopeSize = baiClient?.supports('max-quota-scope-size');\n  const supportMaxSessionCountPerModelSession = baiClient?.supports(\n    'max-session-count-per-model-session',\n  );\n  const supportMaxCustomizedImageCount = baiClient?.supports(\n    'max-customized-image-count',\n  );\n\n  const userResourcePolicy = useFragment(\n    graphql`\n      fragment UserResourcePolicySettingModalFragment on UserResourcePolicy {\n        id\n        name\n        # follows version of https://github.com/lablup/backend.ai/pull/1993\n        # --------------- START --------------------\n        max_vfolder_count @since(version: \"23.09.6\")\n        max_session_count_per_model_session @since(version: \"23.09.10\")\n        max_quota_scope_size @since(version: \"23.09.2\")\n        # ---------------- END ---------------------\n        max_customized_image_count @since(version: \"24.03.0\")\n      }\n    `,\n    userResourcePolicyFrgmt,\n  );\n\n  const [\n    commitCreateUserResourcePolicy,\n    isInFlightCommitCreateUserResourcePolicy,\n  ] = useMutation<UserResourcePolicySettingModalCreateMutation>(graphql`\n    mutation UserResourcePolicySettingModalCreateMutation(\n      $name: String!\n      $props: CreateUserResourcePolicyInput!\n    ) {\n      create_user_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const [\n    commitModifyUserResourcePolicy,\n    isInFlightCommitModifyUserResourcePolicy,\n  ] = useMutation<UserResourcePolicySettingModalModifyMutation>(graphql`\n    mutation UserResourcePolicySettingModalModifyMutation(\n      $name: String!\n      $props: ModifyUserResourcePolicyInput!\n    ) {\n      modify_user_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const initialValues = useMemo(() => {\n    let unlimitedValues = {};\n    if (userResourcePolicy === null) {\n      // Initialize unlimited values as a default when creating a new policy.\n      unlimitedValues = {\n        max_vfolder_count: 0,\n        max_quota_scope_size: -1,\n      };\n    }\n    let maxQuotaScopeSize = userResourcePolicy?.max_quota_scope_size;\n    maxQuotaScopeSize =\n      _.isUndefined(maxQuotaScopeSize) || maxQuotaScopeSize === -1\n        ? -1\n        : bytesToGB(maxQuotaScopeSize);\n    return {\n      ...unlimitedValues,\n      ...userResourcePolicy,\n      max_quota_scope_size: maxQuotaScopeSize,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    userResourcePolicy,\n    userResourcePolicy?.max_vfolder_count,\n    userResourcePolicy?.max_quota_scope_size,\n  ]);\n\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    return formRef?.current\n      ?.validateFields()\n      .then((values) => {\n        const props:\n          | CreateUserResourcePolicyInput\n          | ModifyUserResourcePolicyInput = {\n          max_vfolder_count: values?.max_vfolder_count || 0,\n          max_quota_scope_size:\n            values?.max_quota_scope_size === -1\n              ? -1\n              : GBToBytes(values?.max_quota_scope_size),\n          max_session_count_per_model_session:\n            values?.max_session_count_per_model_session,\n          max_customized_image_count: values?.max_customized_image_count,\n        };\n        if (!supportMaxVfolderCount) {\n          delete props.max_vfolder_count;\n        }\n        if (!supportMaxQuotaScopeSize) {\n          delete props.max_quota_scope_size;\n        }\n        if (!supportMaxSessionCountPerModelSession) {\n          delete props.max_session_count_per_model_session;\n        }\n        if (!supportMaxCustomizedImageCount) {\n          delete props.max_customized_image_count;\n        }\n        if (userResourcePolicy === null) {\n          commitCreateUserResourcePolicy({\n            variables: {\n              name: values?.name,\n              props: props as CreateUserResourcePolicyInput,\n            },\n            onCompleted(res, errors) {\n              if (!res?.create_user_resource_policy?.ok || errors) {\n                message.error(\n                  res?.create_user_resource_policy?.msg ||\n                    t('resourcePolicy.CannotCreateResourcePolicy'),\n                );\n                onRequestClose();\n              } else {\n                message.success(\n                  t('storageHost.ResourcePolicySuccessfullyUpdated'),\n                );\n                onRequestClose(true);\n              }\n            },\n            onError(error) {\n              message.error(\n                error?.message ||\n                  t('resourcePolicy.CannotCreateResourcePolicy'),\n              );\n            },\n          });\n        } else {\n          commitModifyUserResourcePolicy({\n            variables: {\n              name: values?.name,\n              props: props as ModifyUserResourcePolicyInput,\n            },\n            onCompleted(res, errors) {\n              if (!res?.modify_user_resource_policy?.ok || errors) {\n                message.error(\n                  res?.modify_user_resource_policy?.msg ||\n                    t('resourcePolicy.CannotUpdateResourcePolicy'),\n                );\n                onRequestClose();\n              } else {\n                message.success(\n                  t('storageHost.ResourcePolicySuccessfullyUpdated'),\n                );\n                onRequestClose(true);\n              }\n            },\n            onError(error) {\n              message.error(\n                error?.message ||\n                  t('resourcePolicy.CannotUpdateResourcePolicy'),\n              );\n            },\n          });\n        }\n      })\n      .catch(() => {});\n  };\n\n  return (\n    <BAIModal\n      title={\n        userResourcePolicy === null\n          ? t('resourcePolicy.CreateResourcePolicy')\n          : t('resourcePolicy.UpdateResourcePolicy')\n      }\n      onOk={handleOk}\n      onCancel={() => onRequestClose()}\n      destroyOnClose\n      confirmLoading={\n        isInFlightCommitCreateUserResourcePolicy ||\n        isInFlightCommitModifyUserResourcePolicy\n      }\n      {...baiModalProps}\n    >\n      <Alert\n        message={t('storageHost.BeCarefulToSetUserResourcePolicy')}\n        type=\"warning\"\n        showIcon\n        style={{ marginBottom: token.marginMD }}\n      />\n      <Form\n        ref={formRef}\n        layout=\"vertical\"\n        requiredMark=\"optional\"\n        initialValues={initialValues}\n        preserve={false}\n      >\n        <Form.Item\n          label={t('resourcePolicy.Name')}\n          name=\"name\"\n          required\n          rules={[\n            {\n              required: true,\n              message: t('data.explorer.ValueRequired'),\n            },\n            {\n              max: 255,\n            },\n            {\n              validator: (_, value) => {\n                if (\n                  !userResourcePolicy &&\n                  existingPolicyNames?.includes(value)\n                ) {\n                  return Promise.reject(\n                    t('resourcePolicy.ResourcePolicyNameAlreadyExists'),\n                  );\n                }\n                return Promise.resolve();\n              },\n            },\n          ]}\n        >\n          <Input disabled={!!userResourcePolicy} />\n        </Form.Item>\n        <Flex\n          direction=\"column\"\n          align=\"stretch\"\n          gap={'md'}\n          style={{ marginBottom: token.marginMD }}\n        >\n          {supportMaxVfolderCount ? (\n            <FormItemWithUnlimited\n              name={'max_vfolder_count'}\n              unlimitedValue={0}\n              label={t('resourcePolicy.MaxFolderCount')}\n              style={{ width: '100%', margin: 0 }}\n            >\n              <InputNumber\n                min={0}\n                max={SIGNED_32BIT_MAX_INT}\n                style={{ width: '100%' }}\n              />\n            </FormItemWithUnlimited>\n          ) : null}\n          {supportMaxQuotaScopeSize ? (\n            <FormItemWithUnlimited\n              name={'max_quota_scope_size'}\n              unlimitedValue={-1}\n              label={t('storageHost.MaxFolderSize')}\n              style={{ width: '100%', margin: 0 }}\n            >\n              <InputNumber\n                min={0}\n                // Maximum safe integer divided by 10^9 to prevent overflow when converting GB to bytes\n                max={Math.floor(Number.MAX_SAFE_INTEGER / Math.pow(10, 9))}\n                addonAfter=\"GB\"\n                style={{ width: '100%' }}\n              />\n            </FormItemWithUnlimited>\n          ) : null}\n        </Flex>\n        {supportMaxSessionCountPerModelSession ? (\n          <Form.Item\n            name={'max_session_count_per_model_session'}\n            label={t('resourcePolicy.MaxSessionCountPerModelSession')}\n            rules={[\n              { required: true, message: t('data.explorer.ValueRequired') },\n            ]}\n          >\n            <InputNumber\n              min={0}\n              max={SIGNED_32BIT_MAX_INT}\n              style={{ width: '100%' }}\n            />\n          </Form.Item>\n        ) : null}\n        {supportMaxCustomizedImageCount ? (\n          <Form.Item\n            name={'max_customized_image_count'}\n            label={t('resourcePolicy.MaxCustomizedImageCount')}\n            rules={[\n              { required: true, message: t('data.explorer.ValueRequired') },\n            ]}\n          >\n            <InputNumber\n              min={0}\n              max={SIGNED_32BIT_MAX_INT}\n              style={{ width: '100%' }}\n            />\n          </Form.Item>\n        ) : null}\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default UserResourcePolicySettingModal;\n","import {\n  bytesToGB,\n  filterEmptyItem,\n  filterNonNullItems,\n  localeCompare,\n  numberSorterWithInfinityValue,\n} from '../helper';\nimport { exportCSVWithFormattingRules } from '../helper/csv-util';\nimport { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useHiddenColumnKeysSetting } from '../hooks/useHiddenColumnKeysSetting';\nimport Flex from './Flex';\nimport TableColumnsSettingModal from './TableColumnsSettingModal';\nimport UserResourcePolicySettingModal from './UserResourcePolicySettingModal';\nimport { UserResourcePolicyListMutation } from './__generated__/UserResourcePolicyListMutation.graphql';\nimport {\n  UserResourcePolicyListQuery,\n  UserResourcePolicyListQuery$data,\n} from './__generated__/UserResourcePolicyListQuery.graphql';\nimport { UserResourcePolicySettingModalFragment$key } from './__generated__/UserResourcePolicySettingModalFragment.graphql';\nimport {\n  DeleteOutlined,\n  DownOutlined,\n  PlusOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { App, Button, Dropdown, Popconfirm, Space, Table, theme } from 'antd';\nimport { ColumnType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery, useMutation } from 'react-relay';\n\ntype UserResourcePolicies = NonNullable<\n  UserResourcePolicyListQuery$data['user_resource_policies']\n>[number];\n\ninterface UserResourcePolicyListProps {}\n\nconst UserResourcePolicyList: React.FC<UserResourcePolicyListProps> = () => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const { message } = App.useApp();\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [userResourcePolicyFetchKey, updateUserResourcePolicyFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [isCreatingPolicySetting, setIsCreatingPolicySetting] = useState(false);\n  const [visibleColumnSettingModal, { toggle: toggleColumnSettingModal }] =\n    useToggle();\n  const [inFlightResourcePolicyName, setInFlightResourcePolicyName] =\n    useState<string>();\n  const [editingUserResourcePolicy, setEditingUserResourcePolicy] =\n    useState<UserResourcePolicySettingModalFragment$key | null>();\n\n  const baiClient = useSuspendedBackendaiClient();\n  const supportMaxVfolderCount = baiClient?.supports(\n    'max-vfolder-count-in-user-and-project-resource-policy',\n  );\n  const supportMaxQuotaScopeSize = baiClient?.supports('max-quota-scope-size');\n  const supportMaxSessionCountPerModelSession = baiClient?.supports(\n    'max-session-count-per-model-session',\n  );\n  const supportMaxCustomizedImageCount = baiClient?.supports(\n    'max-customized-image-count',\n  );\n\n  const { user_resource_policies } =\n    useLazyLoadQuery<UserResourcePolicyListQuery>(\n      graphql`\n        query UserResourcePolicyListQuery {\n          user_resource_policies {\n            id\n            name\n            created_at\n            # follows version of https://github.com/lablup/backend.ai/pull/1993\n            # --------------- START --------------------\n            max_vfolder_count @since(version: \"23.09.6\")\n            max_session_count_per_model_session @since(version: \"23.09.10\")\n            max_quota_scope_size @since(version: \"23.09.2\")\n            # ---------------- END ---------------------\n            max_customized_image_count @since(version: \"24.03.0\")\n            ...UserResourcePolicySettingModalFragment\n          }\n        }\n      `,\n      {},\n      {\n        fetchPolicy:\n          userResourcePolicyFetchKey === 'initial-fetch'\n            ? 'store-and-network'\n            : 'network-only',\n        fetchKey: userResourcePolicyFetchKey,\n      },\n    );\n  const [commitDelete, isInflightDelete] =\n    useMutation<UserResourcePolicyListMutation>(graphql`\n      mutation UserResourcePolicyListMutation($name: String!) {\n        delete_user_resource_policy(name: $name) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const columns = filterEmptyItem<ColumnType<UserResourcePolicies>>([\n    {\n      title: t('resourcePolicy.Name'),\n      dataIndex: 'name',\n      key: 'name',\n      fixed: 'left',\n      sorter: (a, b) => localeCompare(a?.name, b?.name),\n    },\n    supportMaxVfolderCount && {\n      title: t('resourcePolicy.MaxVFolderCount'),\n      dataIndex: 'max_vfolder_count',\n      key: 'max_vfolder_count',\n      render: (text) => (_.toNumber(text) === 0 ? '∞' : text),\n      sorter: (a, b) =>\n        numberSorterWithInfinityValue(\n          a?.max_vfolder_count,\n          b?.max_vfolder_count,\n          0,\n        ),\n    },\n    supportMaxSessionCountPerModelSession && {\n      title: t('resourcePolicy.MaxSessionCountPerModelSession'),\n      dataIndex: 'max_session_count_per_model_session',\n      key: 'max_session_count_per_model_session',\n      sorter: (a, b) =>\n        (a?.max_session_count_per_model_session ?? 0) -\n        (b?.max_session_count_per_model_session ?? 0),\n    },\n    supportMaxQuotaScopeSize && {\n      title: t('resourcePolicy.MaxQuotaScopeSize'),\n      dataIndex: 'max_quota_scope_size',\n      key: 'max_quota_scope_size',\n      render: (text) => (text === -1 ? '∞' : bytesToGB(text)),\n      sorter: (a, b) =>\n        numberSorterWithInfinityValue(\n          a?.max_quota_scope_size,\n          b?.max_quota_scope_size,\n          -1,\n        ),\n    },\n    supportMaxCustomizedImageCount && {\n      title: t('resourcePolicy.MaxCustomizedImageCount'),\n      key: 'max_customized_image_count',\n      dataIndex: 'max_customized_image_count',\n      sorter: (a, b) =>\n        (a?.max_customized_image_count ?? 0) -\n        (b?.max_customized_image_count ?? 0),\n    },\n    {\n      title: 'ID',\n      dataIndex: 'id',\n      key: 'id',\n      sorter: (a, b) => localeCompare(a?.id, b?.id),\n    },\n    {\n      title: t('resourcePolicy.CreatedAt'),\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (text) => dayjs(text).format('lll'),\n      sorter: (a, b) => localeCompare(a?.created_at, b?.created_at),\n    },\n    {\n      title: t('general.Control'),\n      fixed: 'right',\n      key: 'control',\n      render: (text: any, row: UserResourcePolicies) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            style={{\n              color: token.colorInfo,\n            }}\n            onClick={() => {\n              setEditingUserResourcePolicy(row);\n            }}\n          />\n          <Popconfirm\n            title={t('dialog.ask.DoYouWantToProceed')}\n            description={t('dialog.warning.CannotBeUndone')}\n            okType=\"danger\"\n            okText={t('button.Delete')}\n            onConfirm={() => {\n              if (row?.name) {\n                setInFlightResourcePolicyName(\n                  row.name + userResourcePolicyFetchKey,\n                );\n                commitDelete({\n                  variables: {\n                    name: row.name,\n                  },\n                  onCompleted: (res, errors) => {\n                    if (!res?.delete_user_resource_policy?.ok) {\n                      message.error(res?.delete_user_resource_policy?.msg);\n                      return;\n                    }\n                    if (errors && errors.length > 0) {\n                      const errorMsgList = errors.map((error) => error.message);\n                      for (const error of errorMsgList) {\n                        message.error(error);\n                      }\n                      return;\n                    }\n                    startRefetchTransition(() =>\n                      updateUserResourcePolicyFetchKey(),\n                    );\n                    message.success(t('resourcePolicy.SuccessfullyDeleted'));\n                  },\n                  onError(err) {\n                    message.error(err?.message);\n                  },\n                });\n              }\n            }}\n          >\n            <Button\n              type=\"text\"\n              icon={\n                <DeleteOutlined\n                  style={{\n                    color: token.colorError,\n                  }}\n                />\n              }\n              loading={\n                isInflightDelete &&\n                inFlightResourcePolicyName ===\n                  row?.name + userResourcePolicyFetchKey\n              }\n              disabled={\n                isInflightDelete &&\n                inFlightResourcePolicyName !==\n                  row?.name + userResourcePolicyFetchKey\n              }\n            />\n          </Popconfirm>\n        </Flex>\n      ),\n    },\n  ]);\n\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useHiddenColumnKeysSetting(\n    'UserResourcePolicyList',\n  );\n\n  const handleExportCSV = () => {\n    if (\n      !user_resource_policies ||\n      user_resource_policies.length === hiddenColumnKeys?.length\n    ) {\n      message.error(t('resourcePolicy.NoDataToExport'));\n      return;\n    }\n\n    const columnKeys = _.without(\n      _.map(columns, (column) => _.toString(column.key)),\n      'control',\n    );\n    const responseData = _.map(user_resource_policies, (policy) => {\n      return _.pick(\n        policy,\n        columnKeys.map((key) => key as keyof UserResourcePolicies),\n      );\n    });\n\n    exportCSVWithFormattingRules(\n      responseData as UserResourcePolicies[],\n      'user-resource-policies',\n      {\n        max_vfolder_count: (text) => (_.toNumber(text) === 0 ? '-' : text),\n        max_quota_scope_size: (text) => (text === -1 ? '-' : bytesToGB(text)),\n      },\n    );\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        wrap=\"wrap\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex direction=\"column\" align=\"start\">\n          <Dropdown\n            menu={{\n              items: [\n                {\n                  key: 'exportCSV',\n                  label: t('resourcePolicy.ExportCSV'),\n                  onClick: () => {\n                    handleExportCSV();\n                  },\n                },\n              ],\n            }}\n          >\n            <Button\n              type=\"link\"\n              style={{ padding: 0 }}\n              onClick={(e) => e.preventDefault()}\n            >\n              <Space style={{ color: token.colorLinkHover }}>\n                {t('resourcePolicy.Tools')}\n                <DownOutlined />\n              </Space>\n            </Button>\n          </Dropdown>\n        </Flex>\n        <Flex direction=\"row\" gap={'xs'} wrap=\"wrap\" style={{ flexShrink: 1 }}>\n          <Flex gap={'xs'}>\n            <Button\n              icon={<ReloadOutlined />}\n              loading={isRefetchPending}\n              onClick={() => {\n                startRefetchTransition(() =>\n                  updateUserResourcePolicyFetchKey(),\n                );\n              }}\n            />\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                setIsCreatingPolicySetting(true);\n              }}\n            >\n              {t('button.Create')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Table\n        rowKey=\"id\"\n        showSorterTooltip={false}\n        columns={_.filter(\n          columns,\n          (column) => !_.includes(hiddenColumnKeys, _.toString(column?.key)),\n        )}\n        dataSource={filterNonNullItems(user_resource_policies)}\n        scroll={{ x: 'max-content' }}\n        pagination={false}\n      />\n      <Flex\n        justify=\"end\"\n        style={{\n          padding: token.paddingXXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            toggleColumnSettingModal();\n          }}\n        />\n      </Flex>\n      <TableColumnsSettingModal\n        open={visibleColumnSettingModal}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setHiddenColumnKeys(\n              _.difference(\n                columns.map((column) => _.toString(column.key)),\n                values?.selectedColumnKeys,\n              ),\n            );\n          toggleColumnSettingModal();\n        }}\n        columns={columns}\n        hiddenColumnKeys={hiddenColumnKeys}\n      />\n      <UserResourcePolicySettingModal\n        existingPolicyNames={_.map(user_resource_policies, 'name')}\n        open={!!editingUserResourcePolicy || isCreatingPolicySetting}\n        userResourcePolicyFrgmt={editingUserResourcePolicy || null}\n        onRequestClose={(success) => {\n          if (success) {\n            startRefetchTransition(() => updateUserResourcePolicyFetchKey());\n          }\n          setEditingUserResourcePolicy(null);\n          setIsCreatingPolicySetting(false);\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default UserResourcePolicyList;\n","import FlexActivityIndicator from '../components/FlexActivityIndicator';\nimport KeypairResourcePolicyList from '../components/KeypairResourcePolicyList';\nimport ProjectResourcePolicyList from '../components/ProjectResourcePolicyList';\nimport UserResourcePolicyList from '../components/UserResourcePolicyList';\nimport { filterEmptyItem } from '../helper';\nimport { useSuspendedBackendaiClient, useWebUINavigate } from '../hooks';\nimport { Card } from 'antd';\nimport React, { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { withDefault, StringParam, useQueryParam } from 'use-query-params';\n\nconst tabParam = withDefault(StringParam, 'keypair');\n\ninterface ResourcePolicyPageProps {}\nconst ResourcePolicyPage: React.FC<ResourcePolicyPageProps> = () => {\n  const { t } = useTranslation();\n  const [curTabKey] = useQueryParam('tab', tabParam);\n  const webUINavigate = useWebUINavigate();\n  const baiClient = useSuspendedBackendaiClient();\n  const supportConfigureUserResourcePolicy = baiClient?.supports(\n    'configure-user-resource-policy',\n  );\n\n  return (\n    <Card\n      activeTabKey={curTabKey}\n      onTabChange={(key) => {\n        webUINavigate(\n          {\n            pathname: '/resource-policy',\n            search: `?tab=${key}`,\n          },\n          {\n            params: {\n              tab: key,\n            },\n          },\n        );\n      }}\n      tabList={filterEmptyItem([\n        {\n          key: 'keypair',\n          label: t('resourcePolicy.Keypair'),\n        },\n        supportConfigureUserResourcePolicy && {\n          key: 'user',\n          label: t('resourcePolicy.User'),\n        },\n        {\n          key: 'project',\n          label: t('resourcePolicy.Project'),\n        },\n      ])}\n      styles={{\n        body: {\n          padding: 0,\n          paddingTop: 1,\n          overflow: 'hidden',\n        },\n      }}\n    >\n      <Suspense fallback={<FlexActivityIndicator />}>\n        {curTabKey === 'keypair' && <KeypairResourcePolicyList />}\n        {curTabKey === 'user' && <UserResourcePolicyList />}\n        {curTabKey === 'project' && <ProjectResourcePolicyList />}\n      </Suspense>\n    </Card>\n  );\n};\n\nexport default ResourcePolicyPage;\n"],"names":["_ref","_$map","open","onRequestClose","columns","hiddenColumnKeys","modalProps","formRef","useRef","t","useTranslation","token","theme","useToken","columnOptions","_","column","title","label","value","key","element","React","map","props","children","child","undefined","_jsx","BAIModal","destroyOnClose","centered","onOk","_formRef$current","current","validateFields","then","values","catch","onCancel","_jsxs","Form","ref","preserve","initialValues","selectedColumnKeys","filter","columnKey","layout","Item","name","style","marginBottom","Input","prefix","SearchOutlined","marginSM","placeholder","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","columnOption","includes","display","height","overflowY","Checkbox","Group","options","flexDirection","node","v0","v1","hash","v2","v3","v4","v5","v6","v7","v8","escapeCsvValue","String","JSON","stringify","replace","downloadBlob","blob","filename","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","exportCSVWithFormattingRules","data","format_rules","bodyStr","JSONToCSVBody","displayedData","row","CSVTitle","csvContent","_format_rules","call","join","Blob","type","useHiddenColumnKeysSetting","listName","setHiddenColumnKeys","useBAISettingUserState","selectProps","allowedHostNames","useAllowedHostNames","Select","hostName","Option","unlimitedValue","disableUnlimited","formItemPropsWithoutNameAndChildren","isUnlimited","setIsUnlimited","useState","form","useFormInstance","useEffect","fieldValue","childrenWithProps","isValidElement","cloneElement","disabled","childrenWithUndefinedValue","Flex","direction","align","margin","hidden","checked","onChange","e","target","setFieldValue","resetFields","existingPolicyNames","keypairResourcePolicyFrgmt","message","App","useApp","resourceSlots","useResourceSlots","mergedResourceSlots","useResourceSlotsDetails","baiClient","useSuspendedBackendaiClient","isDeprecatedMaxVfolderCountInKeypairResourcePolicy","supports","keypairResourcePolicy","useFragment","_KeypairResourcePolicySettingModalFragment","require","commitCreateKeypairResourcePolicy","isInFlightCommitCreateUserSetting","useMutation","_KeypairResourcePolicySettingModalCreateMutation","commitModifyKeypairResourcePolicy","isInFlightCommitModifyUserSetting","_KeypairResourcePolicySettingModalModifyMutation","useMemo","_keypairResourcePolic","_keypairResourcePolic2","_keypairResourcePolic3","_keypairResourcePolic4","_keypairResourcePolic5","_keypairResourcePolic6","_keypairResourcePolic7","_$keys","_keypairResourcePolic8","_keypairResourcePolic9","parsedVfolderHosts","parse","allowed_vfolder_hosts","parsedTotalResourceSlots","total_resource_slots","mem","_autoUniResult","_autoUniResult2","_autoUniResult3","autoUniResult","convertBinarySizeUnit","unit","numberUnit","default_for_unspecified","max_session_lifetime","max_concurrent_sessions","max_containers_per_session","idle_timeout","max_pending_session_count","max_concurrent_sftp_sessions","width","handleOk","_convertBinarySizeUni","numberFixed","_initialValues$allowe","restValues","max_vfolder_count","variables","onCompleted","res","errors","_res$create_keypair_r","_res$create_keypair_r2","_res$create_keypair_r3","_res$create_keypair_r4","create_keypair_resource_policy","ok","msg","success","error","onError","err","_res$modify_keypair_r","_res$modify_keypair_r2","modify_keypair_resource_policy","length","forEach","confirmLoading","requiredMark","required","rules","max","validator","Promise","reject","resolve","gap","Typography","Text","Tooltip","_Fragment","placement","QuestionCircleOutlined","color","colorTextSecondary","cursor","Card","keys","chunk","resourceSlotKeys","index","Row","gutter","resourceSlotKey","_$get","_$get2","Col","xs","span","md","alignSelf","marginLG","FormItemWithUnlimited","description","__","number","Error","DynamicUnitInputNumber","InputNumber","min","MAX_CPU_QUOTA","step","addonAfter","display_unit","SIGNED_32BIT_MAX_INT","Number","MAX_SAFE_INTEGER","AllowedHostNamesSelect","mode","modal","keypairResourcePolicyFetchKey","updateKeypairResourcePolicyFetchKey","useUpdatableState","isRefetchPending","startRefetchTransition","useTransition","visibleColumnSettingModal","toggle","toggleColumnSettingModal","useToggle","isCreatingPolicySetting","setIsCreatingPolicySetting","inFlightResourcePolicyName","setInFlightResourcePolicyName","editingKeypairResourcePolicy","setEditingKeypairResourcePolicy","keypair_resource_policies","useLazyLoadQuery","_KeypairResourcePolicyListQuery","fetchPolicy","fetchKey","commitDelete","isInflightDelete","_KeypairResourcePolicyListMutation","filterEmptyItem","dataIndex","fixed","sorter","b","localeCompare","render","text","ResourceNumber","numberSorterWithInfinityValue","allowedVFolderHosts","host","Tag","Button","size","icon","SettingOutlined","colorInfo","onClick","DeleteOutlined","colorError","loading","confirm","content","strong","okButtonProps","danger","okText","_res$delete_keypair_r","_res$delete_keypair_r2","delete_keypair_resource_policy","errorMsgList","justify","wrap","padding","paddingContentVertical","paddingLeft","paddingContentHorizontalSM","paddingRight","Dropdown","menu","items","handleExportCSV","columnKeys","responseData","policy","preventDefault","Space","colorLinkHover","DownOutlined","flexShrink","ReloadOutlined","PlusOutlined","Table","dataSource","rowKey","scroll","x","pagination","showSorterTooltip","paddingXXS","TableColumnsSettingModal","Suspense","KeypairResourcePolicySettingModal","projectResourcePolicyFrgmt","baiModalProps","supportMaxVfolderCount","supportMaxQuotaScopeSize","supportMaxNetworkCount","projectResourcePolicy","_ProjectResourcePolicySettingModalFragment","commitCreateProjectResourcePolicy","isInFlightCommitCreateProjectResourcePolicy","_ProjectResourcePolicySettingModalCreateMutation","commitModifyProjectResourcePolicy","isInFlightCommitModifyProjectResourcePolicy","_ProjectResourcePolicySettingModalModifyMutation","unlimitedValues","max_quota_scope_size","max_network_count","maxQuotaScopeSize","bytesToGB","GBToBytes","_res$create_project_r","_res$create_project_r2","create_project_resource_policy","_res$modify_project_r","_res$modify_project_r2","modify_project_resource_policy","Alert","showIcon","marginMD","Math","floor","pow","ProjectResourcePolicyList","projectResourcePolicyFetchKey","updateProjectResourcePolicyFetchKey","editingProjectResourcePolicy","setEditingProjectResourcePolicy","project_resource_policies","_ProjectResourcePolicyListQuery","_ProjectResourcePolicyListMutation","id","dayjs","format","created_at","Popconfirm","okType","onConfirm","_res$delete_project_r","_res$delete_project_r2","delete_project_resource_policy","columnkeys","filterNonNullItems","ProjectResourcePolicySettingModal","userResourcePolicyFrgmt","supportMaxSessionCountPerModelSession","supportMaxCustomizedImageCount","userResourcePolicy","_UserResourcePolicySettingModalFragment","commitCreateUserResourcePolicy","isInFlightCommitCreateUserResourcePolicy","_UserResourcePolicySettingModalCreateMutation","commitModifyUserResourcePolicy","isInFlightCommitModifyUserResourcePolicy","_UserResourcePolicySettingModalModifyMutation","max_session_count_per_model_session","max_customized_image_count","_res$create_user_reso","_res$create_user_reso2","create_user_resource_policy","_res$modify_user_reso","_res$modify_user_reso2","modify_user_resource_policy","UserResourcePolicyList","userResourcePolicyFetchKey","updateUserResourcePolicyFetchKey","editingUserResourcePolicy","setEditingUserResourcePolicy","user_resource_policies","_UserResourcePolicyListQuery","_UserResourcePolicyListMutation","_a$max_session_count_","_b$max_session_count_","_a$max_customized_ima","_b$max_customized_ima","_res$delete_user_reso","_res$delete_user_reso2","delete_user_resource_policy","UserResourcePolicySettingModal","tabParam","withDefault","StringParam","ResourcePolicyPage","curTabKey","useQueryParam","webUINavigate","useWebUINavigate","supportConfigureUserResourcePolicy","activeTabKey","onTabChange","pathname","search","params","tab","tabList","styles","body","paddingTop","overflow","fallback","FlexActivityIndicator","KeypairResourcePolicyList"],"sourceRoot":""}