{"version":3,"file":"static/js/2483.18473481.chunk.js","mappings":"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","sources":["components/BAICard.tsx","components/BAIPropertyFilter.tsx","components/BAITable.tsx","components/FlexActivityIndicator.tsx","components/__generated__/KeypairInfoModalFragment.graphql.ts","components/__generated__/KeypairInfoModalQuery.graphql.ts","components/__generated__/KeypairResourcePolicySelectorQuery.graphql.ts","components/__generated__/KeypairSettingModalCreateMutation.graphql.ts","components/__generated__/KeypairSettingModalFragment.graphql.ts","components/__generated__/KeypairSettingModalModifyMutation.graphql.ts","components/__generated__/UserCredentialListDeleteMutation.graphql.ts","components/__generated__/UserCredentialListModifyMutation.graphql.ts","components/__generated__/UserCredentialListQuery.graphql.ts","components/__generated__/UserInfoModalQuery.graphql.ts","components/__generated__/UserNodeListModifyMutation.graphql.ts","components/__generated__/UserNodeListQuery.graphql.ts","components/__generated__/UserResourcePolicySelectorQuery.graphql.ts","components/__generated__/UserSettingModalCreateMutation.graphql.ts","components/__generated__/UserSettingModalModifyMutation.graphql.ts","components/__generated__/UserSettingModalQuery.graphql.ts","hooks/reactPaginationQueryOptions.tsx","components/KeypairInfoModal.tsx","components/KeypairResourcePolicySelector.tsx","components/KeypairSettingModal.tsx","components/UserCredentialList.tsx","components/UserInfoModal.tsx","components/UserResourcePolicySelector.tsx","components/UserSettingModal.tsx","components/UserNodeList.tsx","pages/UserCredentialsPage.tsx"],"sourcesContent":["import { CloseCircleTwoTone, WarningTwoTone } from '@ant-design/icons';\nimport { Button, Card, CardProps, theme } from 'antd';\nimport _ from 'lodash';\nimport React, { ReactNode } from 'react';\n\nexport interface BAICardProps extends CardProps {\n  status?: 'success' | 'error' | 'warning' | 'default';\n  extraButtonTitle?: string | ReactNode;\n  onClickExtraButton?: () => void;\n  ref?: React.LegacyRef<HTMLDivElement> | undefined;\n}\n\nconst BAICard: React.FC<BAICardProps> = ({\n  status = 'default',\n  extraButtonTitle,\n  onClickExtraButton,\n  extra,\n  style,\n  ...cardProps\n}) => {\n  const { token } = theme.useToken();\n  const _extra =\n    extra ||\n    (extraButtonTitle && (\n      <Button\n        type=\"link\"\n        icon={\n          status === 'error' ? (\n            <CloseCircleTwoTone twoToneColor={token.colorError} />\n          ) : status === 'warning' ? (\n            <WarningTwoTone twoToneColor={token.colorWarning} />\n          ) : undefined\n        }\n        onClick={onClickExtraButton}\n      >\n        {extraButtonTitle}\n      </Button>\n    )) ||\n    undefined;\n  return (\n    <Card\n      className={status === 'error' ? 'bai-card-error' : ''}\n      style={_.extend(style, {\n        borderColor:\n          status === 'error'\n            ? token.colorError\n            : status === 'warning'\n              ? token.colorWarning\n              : status === 'success'\n                ? token.colorSuccess\n                : style?.borderColor, // default\n      })}\n      extra={_extra}\n      {...cardProps}\n    />\n  );\n};\n\nexport default BAICard;\n","import { filterEmptyItem } from '../helper';\nimport Flex from './Flex';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useControllableValue } from 'ahooks';\nimport {\n  AutoComplete,\n  AutoCompleteProps,\n  Button,\n  GetRef,\n  Input,\n  Select,\n  Space,\n  Tag,\n  Tooltip,\n  theme,\n} from 'antd';\nimport _ from 'lodash';\nimport React, {\n  ComponentProps,\n  ReactNode,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\n\n//github.com/lablup/backend.ai/blob/main/src/ai/backend/manager/models/minilang/queryfilter.py\nexport type FilterProperty = {\n  key: string;\n  // operators: Array<string>;\n  defaultOperator?: string;\n  propertyLabel: string;\n  // TODO: support array, number\n  type: 'string' | 'boolean';\n  options?: AutoCompleteProps['options'];\n  strictSelection?: boolean;\n  rule?: {\n    message: string;\n    validate: (value: string) => boolean;\n  };\n};\n\nexport interface BAIPropertyFilterProps\n  extends Omit<ComponentProps<typeof Flex>, 'value' | 'onChange'> {\n  value?: string;\n  onChange?: (value: string) => void;\n  defaultValue?: string;\n  filterProperties: Array<FilterProperty>;\n  loading?: boolean;\n}\n\ninterface FilterInput {\n  property: string;\n  operator: string;\n  value: string;\n  label?: ReactNode;\n  type: FilterProperty['type'];\n  propertyLabel: string;\n}\n\nconst DEFAULT_OPERATOR_OF_TYPES = {\n  string: 'ilike',\n  boolean: '==',\n};\n\nconst DEFAULT_OPTIONS_OF_TYPES: {\n  [key: string]: AutoCompleteProps['options'] | undefined;\n} = {\n  boolean: [\n    {\n      label: 'True',\n      value: 'true',\n    },\n    {\n      label: 'False',\n      value: 'false',\n    },\n  ],\n  string: undefined,\n};\n\nconst DEFAULT_STRICT_SELECTION_OF_TYPES: {\n  [key: string]: boolean | undefined;\n} = {\n  boolean: true,\n};\n\nfunction trimFilterValue(filterValue: string): string {\n  return filterValue.replace(/^%|%$/g, '');\n}\n\nexport function mergeFilterValues(\n  filterStrings: Array<string | undefined | null>,\n  operator: string = '&',\n) {\n  const mergedFilter = _.join(\n    _.map(filterEmptyItem(filterStrings), (str) => `(${str})`),\n    operator,\n  );\n  return !!mergedFilter ? mergedFilter : undefined;\n}\n\n/**\n * Parses the filter value and returns an object containing the property, operator, and value.\n * @param filter - The filter string to parse.\n * @returns An object containing the parsed property, operator, and value.\n */\nexport function parseFilterValue(filter: string) {\n  // Split the filter string into an array of strings using a regular expression.\n  // The regular expression splits the string at whitespace characters, but ignores whitespace within double quotes.\n  const [property, ...rest] = filter.split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n  // Join the remaining strings in the array and split them again using the same regular expression.\n  // This extracts the operator and the value from the filter string.\n  const [operator, ...valueParts] = rest\n    .join(' ')\n    .split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n  // Join the value parts into a single string and remove any leading or trailing double quotes.\n  const value = valueParts.join(' ').replace(/^\"|\"$/g, '');\n\n  // Return an object containing the parsed property, operator, and value.\n  return { property, operator, value };\n}\n\n/**\n * Combines filter strings with the specified logical operator.\n * @param filters - The array of filter strings to combine.\n * @param operator - The logical operator to use ('and' or 'or').\n * @returns The combined filter string.\n */\nfunction combineFilters(filters: string[], operator: '&' | '|'): string {\n  return filters.join(` ${operator} `);\n}\n\nconst BAIPropertyFilter: React.FC<BAIPropertyFilterProps> = ({\n  filterProperties,\n  value: propValue,\n  onChange: propOnChange,\n  defaultValue,\n  loading,\n  ...containerProps\n}) => {\n  const [search, setSearch] = useState<string>();\n  const autoCompleteRef = useRef<GetRef<typeof AutoComplete>>(null);\n  const [isOpenAutoComplete, setIsOpenAutoComplete] = useState(false);\n\n  const [value, setValue] = useControllableValue<string | undefined>({\n    value: propValue,\n    defaultValue: defaultValue,\n    onChange: propOnChange,\n  });\n\n  const filtersFromValue = useMemo(() => {\n    if (value === undefined || value === '') return [];\n    const filters = value.split('&').map((filter) => filter.trim());\n    return filters.map((filter, index) => {\n      const { property, operator, value } = parseFilterValue(filter);\n      return {\n        key: index + value,\n        property,\n        operator,\n        value,\n        propertyLabel:\n          _.find(filterProperties, (f) => f.key === property)?.propertyLabel ||\n          property,\n        type:\n          _.find(filterProperties, (f) => f.key === property)?.type || 'string',\n      };\n    });\n  }, [value, filterProperties]);\n\n  const { t } = useTranslation();\n  const options = _.map(filterProperties, (filterProperty) => ({\n    label: filterProperty.propertyLabel,\n    value: filterProperty.key,\n    filter: filterProperty,\n  }));\n  const [selectedProperty, setSelectedProperty] = useState(options[0].filter);\n\n  const { token } = theme.useToken();\n\n  const [isValid, setIsValid] = useState(true);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const updateFiltersValue = (filters: FilterInput[]) => {\n    if (filters.length === 0) {\n      setValue(undefined);\n    } else {\n      const newFilterString = _.map(filters, (item) => {\n        const valueStringInResult =\n          item.type === 'string' ? `\"${item.value}\"` : item.value;\n        return `${item.property} ${item.operator} ${valueStringInResult}`;\n      });\n      setValue(combineFilters(newFilterString, '&'));\n    }\n  };\n\n  const push = (item: FilterInput) => {\n    updateFiltersValue([...filtersFromValue, item]);\n  };\n\n  const remove = (key: string) => {\n    const newFilters = filtersFromValue.filter((item) => item.key !== key);\n    updateFiltersValue(newFilters);\n  };\n\n  const resetList = () => {\n    updateFiltersValue([]);\n  };\n\n  const onSearch = (value: string) => {\n    if (_.isEmpty(value)) return;\n    if (\n      selectedProperty.strictSelection ||\n      DEFAULT_STRICT_SELECTION_OF_TYPES[selectedProperty.type]\n    ) {\n      const option = _.find(\n        selectedProperty.options ||\n          DEFAULT_OPTIONS_OF_TYPES[selectedProperty.type],\n        (o) => o.value === value,\n      );\n      if (!option) return;\n    }\n    const isValid =\n      !selectedProperty.rule?.validate || selectedProperty.rule.validate(value);\n    setIsValid(isValid);\n    if (!isValid) return;\n\n    setSearch('');\n    const operator =\n      selectedProperty.defaultOperator ||\n      DEFAULT_OPERATOR_OF_TYPES[selectedProperty.type];\n    const filterValue =\n      operator === 'ilike' || operator === 'like' ? `%${value}%` : `${value}`;\n    push({\n      property: selectedProperty.key,\n      propertyLabel: selectedProperty.propertyLabel,\n      operator,\n      value: filterValue,\n      label: selectedProperty.options?.find((o) => o.value === value)?.label,\n      type: selectedProperty.type,\n    });\n  };\n\n  return (\n    <Flex direction=\"column\" gap={'xs'} align=\"start\">\n      <Space.Compact>\n        <Select\n          popupMatchSelectWidth={false}\n          options={options}\n          value={selectedProperty.key}\n          onChange={(value, options) => {\n            setSelectedProperty(_.castArray(options)[0].filter);\n          }}\n          onSelect={() => {\n            autoCompleteRef.current?.focus();\n            setIsOpenAutoComplete(true);\n            setIsValid(true);\n          }}\n          showSearch\n          optionFilterProp=\"label\"\n        />\n        <Tooltip\n          title={isValid || !isFocused ? '' : selectedProperty.rule?.message}\n          open={!isValid && isFocused}\n          color={token.colorError}\n        >\n          <AutoComplete\n            ref={autoCompleteRef}\n            value={search}\n            open={isOpenAutoComplete}\n            onDropdownVisibleChange={setIsOpenAutoComplete}\n            onSelect={onSearch}\n            onChange={(value) => {\n              setIsValid(true);\n              setSearch(value);\n            }}\n            style={{\n              minWidth: 200,\n            }}\n            // @ts-ignore\n            options={_.filter(\n              selectedProperty.options ||\n                DEFAULT_OPTIONS_OF_TYPES[selectedProperty.type],\n              (option) => {\n                return !search\n                  ? true\n                  : option.label?.toString().includes(search);\n              },\n            )}\n            placeholder={t('propertyFilter.PlaceHolder')}\n            onBlur={() => {\n              setIsFocused(false);\n            }}\n            onFocus={() => {\n              setIsFocused(true);\n            }}\n          >\n            <Input.Search\n              onSearch={onSearch}\n              allowClear\n              status={!isValid && isFocused ? 'error' : undefined}\n            />\n          </AutoComplete>\n        </Tooltip>\n      </Space.Compact>\n      {filtersFromValue.length > 0 && (\n        <Flex\n          direction=\"row\"\n          gap={'xs'}\n          wrap=\"wrap\"\n          style={{ alignSelf: 'stretch' }}\n        >\n          {_.map(filtersFromValue, (item) => (\n            <Tag\n              key={item.key}\n              closable\n              onClose={() => remove(item.key)}\n              style={{ margin: 0 }}\n            >\n              {item.propertyLabel}: {trimFilterValue(item.value)}\n            </Tag>\n          ))}\n          {filtersFromValue.length > 1 && (\n            <Tooltip title={t('propertyFilter.ResetFilter')}>\n              <Button\n                size=\"small\"\n                icon={\n                  <CloseCircleOutlined\n                    style={{ color: token.colorTextSecondary }}\n                  />\n                }\n                type=\"text\"\n                onClick={resetList}\n              />\n            </Tooltip>\n          )}\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nexport default BAIPropertyFilter;\n","import { useThemeMode } from '../hooks/useThemeMode';\nimport { useDebounce } from 'ahooks';\nimport { ConfigProvider, GetProps, Table } from 'antd';\nimport { createStyles } from 'antd-style';\nimport { ColumnsType, ColumnType } from 'antd/es/table';\nimport { TableProps } from 'antd/lib';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { Resizable, ResizeCallbackData } from 'react-resizable';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  resizableTable: css`\n    .react-resizable-handle {\n      position: absolute;\n      inset-inline-end: 0px;\n      bottom: 0;\n      z-index: 1;\n      width: 10px;\n      height: 100%;\n      cursor: col-resize;\n    }\n    .ant-table-cell {\n      overflow: hidden;\n      whitespace: 'pre';\n      wordwrap: 'break-word';\n    }\n  `,\n  neoHeader: css`\n    thead.ant-table-thead > tr > th.ant-table-cell {\n      font-weight: 500;\n      color: ${token.colorTextTertiary};\n    }\n  `,\n}));\n\nconst ResizableTitle = (\n  props: React.HTMLAttributes<any> & {\n    onResize: (\n      e: React.SyntheticEvent<Element> | undefined,\n      data: ResizeCallbackData,\n    ) => void;\n    width: number;\n  },\n) => {\n  const { onResize, width, onClick, ...restProps } = props;\n  const wrapRef = useRef<HTMLTableCellElement>(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const debouncedIsResizing = useDebounce(isResizing, { wait: 100 });\n\n  // This is a workaround for the initial width of resizable columns if the width is not specified\n  useEffect(() => {\n    if (wrapRef.current && _.isUndefined(width)) {\n      onResize?.(undefined, {\n        size: {\n          width: wrapRef.current.offsetWidth,\n          height: wrapRef.current.offsetHeight,\n        },\n        node: wrapRef.current,\n        handle: 'e',\n      });\n    }\n  });\n\n  return _.isUndefined(width) ? (\n    <th ref={wrapRef} {...restProps} />\n  ) : (\n    <Resizable\n      width={width}\n      height={0}\n      handle={\n        <span\n          className=\"react-resizable-handle\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        />\n      }\n      onResize={onResize}\n      onResizeStart={() => {\n        setIsResizing(true);\n      }}\n      onResizeStop={() => {\n        setIsResizing(false);\n      }}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th\n        onClick={(e) => {\n          if (debouncedIsResizing) {\n            e.preventDefault();\n          } else {\n            onClick?.(e);\n          }\n        }}\n        {...restProps}\n      />\n    </Resizable>\n  );\n};\n\ninterface BAITableProps<RecordType extends object = any>\n  extends TableProps<RecordType> {\n  resizable?: boolean;\n  neoStyle?: boolean;\n}\n\nconst columnKeyOrIndexKey = (column: any, index: number) =>\n  column.key || `index_${index}`;\nconst generateResizedColumnWidths = (columns?: ColumnsType<any>) => {\n  const widths: Record<string, number> = {};\n  _.each(columns, (column, index) => {\n    widths[columnKeyOrIndexKey(column, index)] = column.width as number;\n  });\n  return widths;\n};\n\nconst BAITable = <RecordType extends object = any>({\n  resizable = false,\n  columns,\n  components,\n  neoStyle,\n  loading,\n  ...tableProps\n}: BAITableProps<RecordType>) => {\n  const { styles } = useStyles();\n  const { isDarkMode } = useThemeMode();\n  const [resizedColumnWidths, setResizedColumnWidths] = useState<\n    Record<string, number>\n  >(generateResizedColumnWidths(columns));\n\n  const mergedColumns = useMemo(() => {\n    return !resizable\n      ? columns\n      : _.map(\n          columns,\n          (column, index) =>\n            ({\n              ...column,\n              width:\n                resizedColumnWidths[columnKeyOrIndexKey(column, index)] ||\n                column.width,\n              onHeaderCell: (column: ColumnType<RecordType>) => {\n                return {\n                  width: column.width,\n                  onResize: (e, { size }) => {\n                    setResizedColumnWidths((prev) => ({\n                      ...prev,\n                      [columnKeyOrIndexKey(column, index)]: size.width,\n                    }));\n                  },\n                } as GetProps<typeof ResizableTitle>;\n              },\n            }) as ColumnType<RecordType>,\n        );\n  }, [resizable, columns, resizedColumnWidths]);\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Table:\n            !isDarkMode && neoStyle\n              ? {\n                  headerBg: '#E3E3E3',\n                }\n              : undefined,\n        },\n      }}\n    >\n      <Table\n        sortDirections={['descend', 'ascend', 'descend']}\n        showSorterTooltip={false}\n        className={classNames(\n          resizable && styles.resizableTable,\n          neoStyle && styles.neoHeader,\n        )}\n        style={{\n          opacity: loading ? 0.7 : 1,\n          transition: 'opacity 0.3s ease',\n        }}\n        components={\n          resizable\n            ? _.merge(components || {}, {\n                header: {\n                  cell: ResizableTitle,\n                },\n              })\n            : components\n        }\n        columns={mergedColumns}\n        {...tableProps}\n      />\n    </ConfigProvider>\n  );\n};\n\nexport default BAITable;\n","import Flex, { FlexProps } from './Flex';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin, SpinProps } from 'antd';\nimport React from 'react';\n\ninterface FlexActivityIndicatorProps extends FlexProps {\n  spinSize?: SpinProps['size'];\n}\n\nconst FlexActivityIndicator: React.FC<FlexActivityIndicatorProps> = ({\n  style,\n  children,\n  spinSize = 'default',\n}) => {\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"center\"\n      align=\"center\"\n      style={{ width: '100%', height: '100%', ...style }}\n    >\n      <Spin indicator={<LoadingOutlined spin />} size={spinSize} />\n      {children}\n    </Flex>\n  );\n};\n\nexport default FlexActivityIndicator;\n","/**\n * @generated SignedSource<<d21430b94b671f8fe916f823f76c7b4a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type KeypairInfoModalFragment$data = {\n  readonly access_key: string | null | undefined;\n  readonly concurrency_used: number | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly is_admin: boolean | null | undefined;\n  readonly last_used: string | null | undefined;\n  readonly num_queries: number | null | undefined;\n  readonly rate_limit: number | null | undefined;\n  readonly resource_policy: string | null | undefined;\n  readonly secret_key: string | null | undefined;\n  readonly user_id: string | null | undefined;\n  readonly \" $fragmentType\": \"KeypairInfoModalFragment\";\n};\nexport type KeypairInfoModalFragment$key = {\n  readonly \" $data\"?: KeypairInfoModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"KeypairInfoModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"KeypairInfoModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"access_key\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"secret_key\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"is_admin\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"resource_policy\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_queries\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"rate_limit\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"concurrency_used\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"KeyPair\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"11d6baebc6283f59151dab410a2a80d2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<09c52fd69155e410ca3937001f24a195>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type KeypairInfoModalQuery$variables = {\n  domain_name?: string | null | undefined;\n  email?: string | null | undefined;\n};\nexport type KeypairInfoModalQuery$data = {\n  readonly user: {\n    readonly main_access_key: string | null | undefined;\n  } | null | undefined;\n};\nexport type KeypairInfoModalQuery = {\n  response: KeypairInfoModalQuery$data;\n  variables: KeypairInfoModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domain_name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"domain_name\",\n    \"variableName\": \"domain_name\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"main_access_key\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"ae75c283d1803be0e160390a438f1ef0\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairInfoModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query KeypairInfoModalQuery(\\n  $domain_name: String\\n  $email: String\\n) {\\n  user(domain_name: $domain_name, email: $email) {\\n    main_access_key @since(version: \\\"24.03.0\\\")\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"4e1858d8f369f238aa329976b4678e7b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<35d3f35636b8b31e3fcd6797a2fc5a07>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type KeypairResourcePolicySelectorQuery$variables = Record<PropertyKey, never>;\nexport type KeypairResourcePolicySelectorQuery$data = {\n  readonly keypair_resource_policies: ReadonlyArray<{\n    readonly name: string | null | undefined;\n  } | null | undefined> | null | undefined;\n};\nexport type KeypairResourcePolicySelectorQuery = {\n  response: KeypairResourcePolicySelectorQuery$data;\n  variables: KeypairResourcePolicySelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"KeyPairResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"keypair_resource_policies\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairResourcePolicySelectorQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairResourcePolicySelectorQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"98cc9e7ac02916e772401f1672dc324f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairResourcePolicySelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query KeypairResourcePolicySelectorQuery {\\n  keypair_resource_policies {\\n    name\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"3052deb294da5fb0ec7a981d8fade18f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<27fffc4e941f15adb290c0bf8daefb1c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type KeyPairInput = {\n  concurrency_limit?: number | null | undefined;\n  is_active?: boolean | null | undefined;\n  is_admin?: boolean | null | undefined;\n  rate_limit: number;\n  resource_policy: string;\n};\nexport type KeypairSettingModalCreateMutation$variables = {\n  props: KeyPairInput;\n  user_id: string;\n};\nexport type KeypairSettingModalCreateMutation$data = {\n  readonly create_keypair: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type KeypairSettingModalCreateMutation = {\n  response: KeypairSettingModalCreateMutation$data;\n  variables: KeypairSettingModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"user_id\"\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"user_id\",\n        \"variableName\": \"user_id\"\n      }\n    ],\n    \"concreteType\": \"CreateKeyPair\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"create_keypair\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairSettingModalCreateMutation\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairSettingModalCreateMutation\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"2911946ae5cad21bdff21cc88cf64c74\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairSettingModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation KeypairSettingModalCreateMutation(\\n  $user_id: String!\\n  $props: KeyPairInput!\\n) {\\n  create_keypair(user_id: $user_id, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"a81bb2d7d4e5a095deaf58a442f4211d\";\n\nexport default node;\n","/**\n * @generated SignedSource<<f39dabc507f471b885d8b641f395f228>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type KeypairSettingModalFragment$data = {\n  readonly access_key: string | null | undefined;\n  readonly rate_limit: number | null | undefined;\n  readonly resource_policy: string | null | undefined;\n  readonly \" $fragmentType\": \"KeypairSettingModalFragment\";\n};\nexport type KeypairSettingModalFragment$key = {\n  readonly \" $data\"?: KeypairSettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"KeypairSettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"KeypairSettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"rate_limit\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"access_key\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"resource_policy\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"KeyPair\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a453330249f3d6cb4a241e19f2314614\";\n\nexport default node;\n","/**\n * @generated SignedSource<<22000ba597fba0ac08f0492496215dd3>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ModifyKeyPairInput = {\n  concurrency_limit?: number | null | undefined;\n  is_active?: boolean | null | undefined;\n  is_admin?: boolean | null | undefined;\n  rate_limit?: number | null | undefined;\n  resource_policy?: string | null | undefined;\n};\nexport type KeypairSettingModalModifyMutation$variables = {\n  access_key: string;\n  props: ModifyKeyPairInput;\n};\nexport type KeypairSettingModalModifyMutation$data = {\n  readonly modify_keypair: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type KeypairSettingModalModifyMutation = {\n  response: KeypairSettingModalModifyMutation$data;\n  variables: KeypairSettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"access_key\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"access_key\",\n        \"variableName\": \"access_key\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyKeyPair\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_keypair\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairSettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairSettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"0bf2a12bbaaabcbf7577479149266c0b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairSettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation KeypairSettingModalModifyMutation(\\n  $access_key: String!\\n  $props: ModifyKeyPairInput!\\n) {\\n  modify_keypair(access_key: $access_key, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"59732bd851a981ce0e4bd3bda1b4c602\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0dbb8f07a4684468ce2631709bfd9c48>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type UserCredentialListDeleteMutation$variables = {\n  access_key: string;\n};\nexport type UserCredentialListDeleteMutation$data = {\n  readonly delete_keypair: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type UserCredentialListDeleteMutation = {\n  response: UserCredentialListDeleteMutation$data;\n  variables: UserCredentialListDeleteMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"access_key\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"access_key\",\n        \"variableName\": \"access_key\"\n      }\n    ],\n    \"concreteType\": \"DeleteKeyPair\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"delete_keypair\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserCredentialListDeleteMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserCredentialListDeleteMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"00d579de4db39e2f3e48067fb19aaf72\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserCredentialListDeleteMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserCredentialListDeleteMutation(\\n  $access_key: String!\\n) {\\n  delete_keypair(access_key: $access_key) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b955bc28ed14b19b153f202b0f1e6e22\";\n\nexport default node;\n","/**\n * @generated SignedSource<<8f4ec6193adce713c0b9aec234f45600>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ModifyKeyPairInput = {\n  concurrency_limit?: number | null | undefined;\n  is_active?: boolean | null | undefined;\n  is_admin?: boolean | null | undefined;\n  rate_limit?: number | null | undefined;\n  resource_policy?: string | null | undefined;\n};\nexport type UserCredentialListModifyMutation$variables = {\n  access_key: string;\n  props: ModifyKeyPairInput;\n};\nexport type UserCredentialListModifyMutation$data = {\n  readonly modify_keypair: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type UserCredentialListModifyMutation = {\n  response: UserCredentialListModifyMutation$data;\n  variables: UserCredentialListModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"access_key\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"access_key\",\n        \"variableName\": \"access_key\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyKeyPair\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_keypair\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserCredentialListModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserCredentialListModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"49292a75a914ad1eeb6f8e2667974b95\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserCredentialListModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserCredentialListModifyMutation(\\n  $access_key: String!\\n  $props: ModifyKeyPairInput!\\n) {\\n  modify_keypair(access_key: $access_key, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b3504d39bac9dd8ac749460ba5e510c0\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2ee2ffc48a942bdda9f5f7c5c9896148>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserCredentialListQuery$variables = {\n  domain_name?: string | null | undefined;\n  email?: string | null | undefined;\n  filter?: string | null | undefined;\n  is_active?: boolean | null | undefined;\n  limit: number;\n  offset: number;\n  order?: string | null | undefined;\n};\nexport type UserCredentialListQuery$data = {\n  readonly keypair_list: {\n    readonly items: ReadonlyArray<{\n      readonly access_key: string | null | undefined;\n      readonly concurrency_used: number | null | undefined;\n      readonly created_at: string | null | undefined;\n      readonly id: string | null | undefined;\n      readonly is_admin: boolean | null | undefined;\n      readonly num_queries: number | null | undefined;\n      readonly rate_limit: number | null | undefined;\n      readonly resource_policy: string | null | undefined;\n      readonly user_id: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"KeypairInfoModalFragment\" | \"KeypairSettingModalFragment\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type UserCredentialListQuery = {\n  response: UserCredentialListQuery$data;\n  variables: UserCredentialListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"domain_name\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"is_active\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv6 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"order\"\n},\nv7 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"domain_name\",\n    \"variableName\": \"domain_name\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"is_active\",\n    \"variableName\": \"is_active\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"order\",\n    \"variableName\": \"order\"\n  }\n],\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"user_id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"access_key\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"is_admin\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"rate_limit\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"num_queries\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"concurrency_used\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/),\n      (v6/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserCredentialListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"KeyPairList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"KeyPair\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"KeypairSettingModalFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"KeypairInfoModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v17/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v4/*: any*/),\n      (v5/*: any*/),\n      (v2/*: any*/),\n      (v6/*: any*/),\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserCredentialListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v7/*: any*/),\n        \"concreteType\": \"KeyPairList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"KeyPair\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"secret_key\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"last_used\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v17/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3318983898774e0fa0110bbe3a8f1ad5\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserCredentialListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserCredentialListQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $filter: String\\n  $order: String\\n  $domain_name: String\\n  $email: String\\n  $is_active: Boolean\\n) {\\n  keypair_list(limit: $limit, offset: $offset, filter: $filter, order: $order, domain_name: $domain_name, email: $email, is_active: $is_active) {\\n    items {\\n      id\\n      user_id\\n      access_key\\n      is_admin\\n      resource_policy\\n      created_at\\n      rate_limit\\n      num_queries\\n      concurrency_used @since(version: \\\"24.09.0\\\")\\n      ...KeypairSettingModalFragment\\n      ...KeypairInfoModalFragment\\n    }\\n    total_count\\n  }\\n}\\n\\nfragment KeypairInfoModalFragment on KeyPair {\\n  user_id\\n  access_key\\n  secret_key\\n  is_admin\\n  created_at\\n  last_used\\n  resource_policy\\n  num_queries\\n  rate_limit\\n  concurrency_used @since(version: \\\"24.09.0\\\")\\n}\\n\\nfragment KeypairSettingModalFragment on KeyPair {\\n  rate_limit\\n  access_key\\n  resource_policy\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"591117e6f6a9853325076522a5e68177\";\n\nexport default node;\n","/**\n * @generated SignedSource<<63b642b82bd92407927ba956dc91e81d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type UserInfoModalQuery$variables = {\n  email?: string | null | undefined;\n  isNotSupportSudoSessionEnabled: boolean;\n  isTOTPSupported: boolean;\n};\nexport type UserInfoModalQuery$data = {\n  readonly user: {\n    readonly description: string | null | undefined;\n    readonly domain_name: string | null | undefined;\n    readonly email: string | null | undefined;\n    readonly full_name: string | null | undefined;\n    readonly groups: ReadonlyArray<{\n      readonly id: string | null | undefined;\n      readonly name: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly main_access_key: string | null | undefined;\n    readonly need_password_change: boolean | null | undefined;\n    readonly resource_policy: string | null | undefined;\n    readonly role: string | null | undefined;\n    readonly status: string | null | undefined;\n    readonly sudo_session_enabled: boolean | null | undefined;\n    readonly totp_activated?: boolean | null | undefined;\n    readonly username: string | null | undefined;\n  } | null | undefined;\n};\nexport type UserInfoModalQuery = {\n  response: UserInfoModalQuery$data;\n  variables: UserInfoModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportSudoSessionEnabled\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isTOTPSupported\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv14 = {\n  \"condition\": \"isTOTPSupported\",\n  \"kind\": \"Condition\",\n  \"passingValue\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ]\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"main_access_key\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v15/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v15/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"d675c49fbcf67cc926cd8f0f3f7a0a93\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserInfoModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserInfoModalQuery(\\n  $email: String\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isTOTPSupported: Boolean!\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    resource_policy\\n    sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n    totp_activated @include(if: $isTOTPSupported)\\n    main_access_key @since(version: \\\"23.09.7\\\")\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"4c1eaa080e82b723c9491072604e8925\";\n\nexport default node;\n","/**\n * @generated SignedSource<<3b58e0ef9e2c1507931af30aee201278>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ModifyUserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null | undefined> | null | undefined;\n  description?: string | null | undefined;\n  domain_name?: string | null | undefined;\n  full_name?: string | null | undefined;\n  group_ids?: ReadonlyArray<string | null | undefined> | null | undefined;\n  is_active?: boolean | null | undefined;\n  main_access_key?: string | null | undefined;\n  need_password_change?: boolean | null | undefined;\n  password?: string | null | undefined;\n  resource_policy?: string | null | undefined;\n  role?: string | null | undefined;\n  status?: string | null | undefined;\n  sudo_session_enabled?: boolean | null | undefined;\n  totp_activated?: boolean | null | undefined;\n  username?: string | null | undefined;\n};\nexport type UserNodeListModifyMutation$variables = {\n  email: string;\n  props: ModifyUserInput;\n};\nexport type UserNodeListModifyMutation$data = {\n  readonly modify_user: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type UserNodeListModifyMutation = {\n  response: UserNodeListModifyMutation$data;\n  variables: UserNodeListModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"email\",\n        \"variableName\": \"email\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyUser\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_user\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserNodeListModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserNodeListModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"e5b806ab045f58761fda6a600a152b09\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserNodeListModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserNodeListModifyMutation(\\n  $email: String!\\n  $props: ModifyUserInput!\\n) {\\n  modify_user(email: $email, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c6c04b9b22e9843ff5f39bdc7f7ddcef\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0c7646c2de22894bae7f0733d7f70c39>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type UserNodeListQuery$variables = {\n  filter?: string | null | undefined;\n  first?: number | null | undefined;\n  offset?: number | null | undefined;\n  order?: string | null | undefined;\n};\nexport type UserNodeListQuery$data = {\n  readonly user_nodes: {\n    readonly count: number | null | undefined;\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly created_at: string | null | undefined;\n        readonly description: string | null | undefined;\n        readonly email: string | null | undefined;\n        readonly full_name: string | null | undefined;\n        readonly id: string;\n        readonly role: string | null | undefined;\n        readonly status: string | null | undefined;\n        readonly username: string | null | undefined;\n      } | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type UserNodeListQuery = {\n  response: UserNodeListQuery$data;\n  variables: UserNodeListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"first\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"order\"\n},\nv4 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"filter\",\n        \"variableName\": \"filter\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"first\",\n        \"variableName\": \"first\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"offset\",\n        \"variableName\": \"offset\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"order\",\n        \"variableName\": \"order\"\n      }\n    ],\n    \"concreteType\": \"UserConnection\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_nodes\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"count\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserEdge\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"edges\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"UserNode\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"node\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"full_name\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"role\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"description\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"email\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"username\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"created_at\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"status\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserNodeListQuery\",\n    \"selections\": (v4/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserNodeListQuery\",\n    \"selections\": (v4/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"e53b339922da0ca6ffbff07957c0e01f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserNodeListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserNodeListQuery(\\n  $first: Int\\n  $offset: Int\\n  $filter: String\\n  $order: String\\n) {\\n  user_nodes(first: $first, offset: $offset, filter: $filter, order: $order) {\\n    count\\n    edges {\\n      node {\\n        id\\n        full_name\\n        role\\n        description\\n        email\\n        username\\n        created_at\\n        status\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"42a6195e0bec81c661b19a540789b1fd\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5a3f1b563c8d280d909a65f68d7c6d22>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserResourcePolicySelectorQuery$variables = Record<PropertyKey, never>;\nexport type UserResourcePolicySelectorQuery$data = {\n  readonly user_resource_policies: ReadonlyArray<{\n    readonly created_at: string;\n    readonly id: string;\n    readonly max_customized_image_count: number | null | undefined;\n    readonly max_quota_scope_size: any | null | undefined;\n    readonly max_session_count_per_model_session: number | null | undefined;\n    readonly max_vfolder_count: number | null | undefined;\n    readonly name: string;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"UserResourcePolicySettingModalFragment\">;\n  } | null | undefined> | null | undefined;\n};\nexport type UserResourcePolicySelectorQuery = {\n  response: UserResourcePolicySelectorQuery$data;\n  variables: UserResourcePolicySelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_vfolder_count\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_session_count_per_model_session\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_quota_scope_size\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_customized_image_count\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicySelectorQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"UserResourcePolicySettingModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicySelectorQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"5c0bb0244594feb3fc33aadcac7ffb2f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicySelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserResourcePolicySelectorQuery {\\n  user_resource_policies {\\n    id\\n    name\\n    created_at\\n    max_vfolder_count @since(version: \\\"23.09.6\\\")\\n    max_session_count_per_model_session @since(version: \\\"23.09.10\\\")\\n    max_quota_scope_size @since(version: \\\"23.09.2\\\")\\n    max_customized_image_count @since(version: \\\"24.03.0\\\")\\n    ...UserResourcePolicySettingModalFragment\\n  }\\n}\\n\\nfragment UserResourcePolicySettingModalFragment on UserResourcePolicy {\\n  id\\n  name\\n  max_vfolder_count @since(version: \\\"23.09.6\\\")\\n  max_session_count_per_model_session @since(version: \\\"23.09.10\\\")\\n  max_quota_scope_size @since(version: \\\"23.09.2\\\")\\n  max_customized_image_count @since(version: \\\"24.03.0\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"df2a28e16edd8e8b4791053a89f9917f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<59a25ed3a99df29d2bc51279aa84b8b6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null | undefined> | null | undefined;\n  description?: string | null | undefined;\n  domain_name?: string;\n  full_name?: string | null | undefined;\n  group_ids?: ReadonlyArray<string | null | undefined> | null | undefined;\n  is_active?: boolean | null | undefined;\n  need_password_change: boolean;\n  password: string;\n  resource_policy?: string | null | undefined;\n  role?: string | null | undefined;\n  status?: string | null | undefined;\n  sudo_session_enabled?: boolean | null | undefined;\n  totp_activated?: boolean | null | undefined;\n  username: string;\n};\nexport type UserSettingModalCreateMutation$variables = {\n  email: string;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n  props: UserInput;\n};\nexport type UserSettingModalCreateMutation$data = {\n  readonly create_user: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n    readonly user: {\n      readonly description: string | null | undefined;\n      readonly domain_name: string | null | undefined;\n      readonly email: string | null | undefined;\n      readonly full_name: string | null | undefined;\n      readonly groups: ReadonlyArray<{\n        readonly id: string | null | undefined;\n        readonly name: string | null | undefined;\n      } | null | undefined> | null | undefined;\n      readonly id: string | null | undefined;\n      readonly need_password_change: boolean | null | undefined;\n      readonly resource_policy: string | null | undefined;\n      readonly role: string | null | undefined;\n      readonly status: string | null | undefined;\n      readonly sudo_session_enabled: boolean | null | undefined;\n      readonly totp_activated: boolean | null | undefined;\n      readonly username: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type UserSettingModalCreateMutation = {\n  response: UserSettingModalCreateMutation$data;\n  variables: UserSettingModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportSudoSessionEnabled\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportTotp\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"props\",\n    \"variableName\": \"props\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ok\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"msg\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v7/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalCreateMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"CreateUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"create_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TOTPActivateModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v3/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalCreateMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"CreateUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"create_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b78883f2b7e7a10f064f61e031445525\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserSettingModalCreateMutation(\\n  $email: String!\\n  $props: UserInput!\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  create_user(email: $email, props: $props) {\\n    ok\\n    msg\\n    user {\\n      id\\n      email\\n      username\\n      need_password_change\\n      full_name\\n      description\\n      status\\n      domain_name\\n      role\\n      groups {\\n        id\\n        name\\n      }\\n      resource_policy\\n      sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n      totp_activated @skipOnClient(if: $isNotSupportTotp)\\n      ...TOTPActivateModalFragment\\n    }\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"da6a0b51b106d3285d157ffa3bae33e9\";\n\nexport default node;\n","/**\n * @generated SignedSource<<ad3ebe89479a7231d02890dfb4be1835>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModifyUserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null | undefined> | null | undefined;\n  description?: string | null | undefined;\n  domain_name?: string | null | undefined;\n  full_name?: string | null | undefined;\n  group_ids?: ReadonlyArray<string | null | undefined> | null | undefined;\n  is_active?: boolean | null | undefined;\n  main_access_key?: string | null | undefined;\n  need_password_change?: boolean | null | undefined;\n  password?: string | null | undefined;\n  resource_policy?: string | null | undefined;\n  role?: string | null | undefined;\n  status?: string | null | undefined;\n  sudo_session_enabled?: boolean | null | undefined;\n  totp_activated?: boolean | null | undefined;\n  username?: string | null | undefined;\n};\nexport type UserSettingModalModifyMutation$variables = {\n  email: string;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n  props: ModifyUserInput;\n};\nexport type UserSettingModalModifyMutation$data = {\n  readonly modify_user: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n    readonly user: {\n      readonly description: string | null | undefined;\n      readonly domain_name: string | null | undefined;\n      readonly email: string | null | undefined;\n      readonly full_name: string | null | undefined;\n      readonly groups: ReadonlyArray<{\n        readonly id: string | null | undefined;\n        readonly name: string | null | undefined;\n      } | null | undefined> | null | undefined;\n      readonly id: string | null | undefined;\n      readonly need_password_change: boolean | null | undefined;\n      readonly resource_policy: string | null | undefined;\n      readonly role: string | null | undefined;\n      readonly status: string | null | undefined;\n      readonly sudo_session_enabled: boolean | null | undefined;\n      readonly totp_activated: boolean | null | undefined;\n      readonly username: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type UserSettingModalModifyMutation = {\n  response: UserSettingModalModifyMutation$data;\n  variables: UserSettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportSudoSessionEnabled\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportTotp\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"props\",\n    \"variableName\": \"props\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ok\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"msg\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v7/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalModifyMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TOTPActivateModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v3/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalModifyMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3c14d927cc4b33a11b36b4164a99b4b3\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserSettingModalModifyMutation(\\n  $email: String!\\n  $props: ModifyUserInput!\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  modify_user(email: $email, props: $props) {\\n    ok\\n    msg\\n    user {\\n      id\\n      email\\n      username\\n      need_password_change\\n      full_name\\n      description\\n      status\\n      domain_name\\n      role\\n      groups {\\n        id\\n        name\\n      }\\n      resource_policy\\n      sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n      totp_activated @skipOnClient(if: $isNotSupportTotp)\\n      ...TOTPActivateModalFragment\\n    }\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"bc8377f1ce18b00d8a7a4eacc523d362\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5b529bc111a502b96a0889cd7eaedf41>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserSettingModalQuery$variables = {\n  email?: string | null | undefined;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n};\nexport type UserSettingModalQuery$data = {\n  readonly user: {\n    readonly description: string | null | undefined;\n    readonly domain_name: string | null | undefined;\n    readonly email: string | null | undefined;\n    readonly full_name: string | null | undefined;\n    readonly groups: ReadonlyArray<{\n      readonly id: string | null | undefined;\n      readonly name: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly need_password_change: boolean | null | undefined;\n    readonly resource_policy: string | null | undefined;\n    readonly role: string | null | undefined;\n    readonly status: string | null | undefined;\n    readonly sudo_session_enabled: boolean | null | undefined;\n    readonly totp_activated: boolean | null | undefined;\n    readonly username: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n  } | null | undefined;\n};\nexport type UserSettingModalQuery = {\n  response: UserSettingModalQuery$data;\n  variables: UserSettingModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportSudoSessionEnabled\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportTotp\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"TOTPActivateModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"bac70fdc2febe6e71fe3e2e68dd70136\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSettingModalQuery(\\n  $email: String\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    resource_policy\\n    sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n    totp_activated @skipOnClient(if: $isNotSupportTotp)\\n    ...TOTPActivateModalFragment\\n    id\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"69a4050361fa30fd6cbc230a027ae19d\";\n\nexport default node;\n","// import { offset_to_cursor } from \"../helper\";\nimport { LazyLoadQueryOptions } from '../helper/types';\nimport { SorterResult } from 'antd/lib/table/interface';\nimport _ from 'lodash';\nimport { useState } from 'react';\nimport {\n  fetchQuery,\n  GraphQLTaggedNode,\n  useRelayEnvironment,\n} from 'react-relay';\nimport {\n  ArrayParam,\n  NumberParam,\n  ObjectParam,\n  StringParam,\n  useQueryParams,\n} from 'use-query-params';\n\nexport type SorterInterface = Pick<SorterResult<any>, 'field' | 'order'>;\n\nexport const antdSorterResultToOrder = (\n  sorter: SorterInterface | SorterInterface[],\n) => {\n  const sorterArray = _.castArray(sorter).filter((s) => s.field);\n\n  return _.filter(\n    _.map(sorterArray, (s) =>\n      _.isNull(s.order)\n        ? undefined\n        : `${_.snakeCase(s.field as string).toUpperCase()}_${\n            s.order === 'ascend' ? 'ASC' : 'DESC'\n          }`,\n    ),\n  );\n};\n\nexport const orderToAntdSorterResult = (order: string[]) => {\n  return _.map(order, (o) => {\n    const names = o.split('_');\n    const orderKey = names.pop();\n    const field = _.camelCase(names.join('_'));\n    return {\n      field,\n      order: (orderKey === 'ASC' ? 'ascend' : 'descend') as\n        | 'ascend'\n        | 'descend'\n        | null,\n    };\n  });\n};\n\nexport const getSortOrderByName = (order: string[], name: string) => {\n  const sorterResult = orderToAntdSorterResult(order);\n  const sorter = _.find(sorterResult, (s) => s.field === name);\n  return sorter?.order;\n};\n\nexport const useRelayPaginationQueryOptions = <\n  // Q, N,\n  O,\n  F,\n>({\n  query,\n  defaultVariables,\n  getVariables = ({ page, pageSize, order, filter }) => {\n    return {\n      first: pageSize,\n      //   after: page > 1 ? offset_to_cursor((page - 1) * pageSize - 1) : undefined,\n      order: order,\n      filter: filter,\n    };\n  },\n}: {\n  query: GraphQLTaggedNode;\n  defaultVariables: {\n    page: number;\n    pageSize: number;\n    order: O[];\n    filter?: F;\n    // sorter?: SorterResult<N>[];\n  };\n  getVariables?: (params: {\n    page: number;\n    pageSize: number;\n    order: O[];\n    filter?: F;\n  }) => any;\n}) => {\n  const [isPending, setIsPending] = useState(false);\n\n  const [params, setParams] = useQueryParams({\n    page: NumberParam,\n    pageSize: NumberParam,\n    order: ArrayParam,\n    filter: ObjectParam,\n  });\n\n  const page = params.page || defaultVariables.page;\n  const pageSize = params.pageSize || defaultVariables.pageSize;\n  //TODO: not use as\n  const order = (params.order || defaultVariables.order) as O[];\n  const filter = (params.filter || defaultVariables.filter) as F;\n\n  const relayEnvironment = useRelayEnvironment();\n\n  const [refreshedQueryOptions, setRefreshedQueryOptions] =\n    useState<LazyLoadQueryOptions>({\n      fetchKey: 0,\n      fetchPolicy: 'store-and-network',\n    });\n\n  const prevLocationRef = window.location.href;\n  const refresh = (\n    newPage: number = defaultVariables.page,\n    newPageSize: number = defaultVariables.pageSize,\n    // sorter: SorterResult<N>[],\n    newOrder: O[] = defaultVariables.order,\n    newFilter: F | undefined = defaultVariables.filter,\n    options?: {\n      withoutPendingStatus: boolean;\n    },\n  ) => {\n    if (options?.withoutPendingStatus !== true) {\n      setIsPending(true);\n    }\n    fetchQuery<any>(\n      relayEnvironment,\n      query,\n      getVariables({\n        page: newPage,\n        pageSize: newPageSize,\n        order: newOrder,\n        filter: newFilter,\n      }),\n    ).subscribe({\n      complete: () => {\n        if (window.location.href !== prevLocationRef) return;\n        setIsPending(false);\n        setParams({\n          page: newPage,\n          pageSize: newPageSize,\n          // eslint-disable-next-line\n          order: newOrder as [], // TODO: not use as []\n          // eslint-disable-next-line\n          filter: newFilter as {}, // TODO: not use as {}\n        });\n        setRefreshedQueryOptions((prev) => ({\n          ...prev,\n          fetchPolicy: 'store-only',\n          fetchKey: new Date().toISOString(),\n        }));\n      },\n    });\n  };\n\n  const variables = getVariables({\n    page,\n    pageSize,\n    order,\n    filter,\n  });\n\n  return [\n    {\n      refreshedQueryOptions,\n      page,\n      pageSize,\n      order,\n      isPending,\n      variables,\n      filter,\n      //   after: page > 1 ? offset_to_cursor((page - 1) * pageSize - 1) : undefined,\n    },\n    {\n      refresh,\n    },\n  ] as const;\n};\n\nexport const useBAIPaginationQueryOptions = ({\n  query,\n  defaultVariables,\n  getVariables = ({ page, pageSize, order, filter }) => {\n    return {\n      limit: pageSize,\n      offset: page > 1 ? (page - 1) * pageSize : 0,\n      filter: filter,\n      order: order,\n    };\n  },\n}: {\n  query: GraphQLTaggedNode;\n  defaultVariables: {\n    page: number;\n    pageSize: number;\n    order?: string;\n    filter?: string;\n  };\n  getVariables?: (params: {\n    page: number;\n    pageSize: number;\n    order?: string;\n    filter?: string;\n  }) => any;\n}) => {\n  const [params, setParams] = useQueryParams({\n    page: NumberParam,\n    pageSize: NumberParam,\n    filter: StringParam,\n    order: StringParam,\n  });\n  const page = params.page || defaultVariables.page;\n  const pageSize = params.pageSize || defaultVariables.pageSize;\n  const order = params.order || defaultVariables.order;\n  const filter = params.filter || defaultVariables.filter;\n\n  const relayEnvironment = useRelayEnvironment();\n\n  const [refreshedQueryOptions, setRefreshedQueryOptions] =\n    useState<LazyLoadQueryOptions>({\n      fetchKey: 0,\n      fetchPolicy: 'store-and-network',\n    });\n\n  const prevLocationRef = window.location.href;\n  const refresh = (\n    newPage: number = defaultVariables.page,\n    newPageSize: number = defaultVariables.pageSize,\n    newOrder: string | undefined = defaultVariables.order,\n    newFilter: string | undefined = defaultVariables.filter,\n  ) => {\n    fetchQuery<any>(\n      relayEnvironment,\n      query,\n      getVariables({\n        page: newPage,\n        pageSize: newPageSize,\n        order: newOrder,\n        filter: newFilter,\n      }),\n    ).subscribe({\n      complete: () => {\n        if (window.location.href !== prevLocationRef) return;\n        setParams({\n          page: newPage,\n          pageSize: newPageSize,\n          order: newOrder,\n          filter: newFilter,\n        });\n        setRefreshedQueryOptions((prev) => ({\n          ...prev,\n          fetchPolicy: 'store-only',\n          fetchKey: new Date().toISOString(),\n        }));\n      },\n    });\n  };\n\n  const variables = getVariables({\n    page,\n    pageSize,\n    order,\n    filter,\n  });\n\n  return [\n    {\n      refreshedQueryOptions,\n      page,\n      pageSize,\n      order,\n      variables,\n      filter,\n    },\n    {\n      refresh,\n    },\n  ] as const;\n};\n\ninterface BAIPaginationOption {\n  limit: number;\n  offset: number;\n  first?: number;\n  // filter?: string;\n  // order?: string;\n}\ninterface AntdBasicPaginationOption {\n  pageSize: number;\n  current: number;\n}\n\ninterface InitialPaginationOption\n  extends AntdBasicPaginationOption,\n    Omit<BAIPaginationOption, 'limit' | 'offset'> {}\nexport const useBAIPaginationOptionState = (\n  initialOptions: InitialPaginationOption,\n): {\n  baiPaginationOption: BAIPaginationOption;\n  tablePaginationOption: AntdBasicPaginationOption;\n  setTablePaginationOption: (\n    pagination: Partial<AntdBasicPaginationOption>,\n  ) => void;\n} => {\n  const [options, setOptions] =\n    useState<AntdBasicPaginationOption>(initialOptions);\n  return {\n    baiPaginationOption: {\n      limit: options.pageSize,\n      first: options.pageSize,\n      offset:\n        options.current > 1 ? (options.current - 1) * options.pageSize : 0,\n    },\n    tablePaginationOption: {\n      pageSize: options.pageSize,\n      current: options.current,\n    },\n    setTablePaginationOption: (pagination) => {\n      if (!_.isEqual(pagination, options)) {\n        setOptions((current) => ({\n          ...current,\n          ...pagination,\n        }));\n      }\n    },\n  };\n};\n","import BAIModal from './BAIModal';\nimport Flex from './Flex';\nimport { KeypairInfoModalFragment$key } from './__generated__/KeypairInfoModalFragment.graphql';\nimport { KeypairInfoModalQuery } from './__generated__/KeypairInfoModalQuery.graphql';\nimport { Descriptions, ModalProps, Tag, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport { t } from 'i18next';\nimport { useFragment, useLazyLoadQuery } from 'react-relay';\n\ninterface KeypairInfoModalProps extends ModalProps {\n  keypairInfoModalFrgmt: KeypairInfoModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst KeypairInfoModal: React.FC<KeypairInfoModalProps> = ({\n  keypairInfoModalFrgmt = null,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { token } = theme.useToken();\n\n  const keypair = useFragment(\n    graphql`\n      fragment KeypairInfoModalFragment on KeyPair {\n        user_id\n        access_key\n        secret_key\n        is_admin\n        created_at\n        last_used\n        resource_policy\n        num_queries\n        rate_limit\n        concurrency_used @since(version: \"24.09.0\")\n      }\n    `,\n    keypairInfoModalFrgmt,\n  );\n\n  // FIXME: Keypair query does not support main_access_key info.\n  const { user } = useLazyLoadQuery<KeypairInfoModalQuery>(\n    graphql`\n      query KeypairInfoModalQuery($domain_name: String, $email: String) {\n        user(domain_name: $domain_name, email: $email) {\n          main_access_key @since(version: \"24.03.0\")\n        }\n      }\n    `,\n    {\n      email: keypair?.user_id,\n    },\n    {\n      fetchPolicy:\n        modalProps.open && keypair?.user_id ? 'network-only' : 'store-only',\n    },\n  );\n\n  return (\n    <BAIModal\n      title={\n        <Flex gap={'xs'}>\n          <Typography.Text style={{ fontSize: token.fontSizeHeading5 }}>\n            {t('credential.KeypairDetail')}\n          </Typography.Text>\n          {user?.main_access_key === keypair?.access_key && (\n            <Tag color=\"red\">{t('credential.MainAccessKey')}</Tag>\n          )}\n        </Flex>\n      }\n      onCancel={() => onRequestClose()}\n      footer={null}\n      {...modalProps}\n    >\n      <Descriptions\n        title={t('credential.Information')}\n        size=\"small\"\n        column={1}\n        labelStyle={{ width: '40%' }}\n      >\n        <Descriptions.Item label={t('credential.UserID')}>\n          {keypair?.user_id}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.AccessKey')}>\n          {keypair?.access_key}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.SecretKey')}>\n          <Typography.Text copyable={{ text: keypair?.secret_key ?? '' }}>\n            {keypair?.secret_key ? '********' : ''}\n          </Typography.Text>\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.Permission')}>\n          {keypair?.is_admin ? (\n            <>\n              <Tag color=\"red\">admin</Tag>\n              <Tag color=\"green\">user</Tag>\n            </>\n          ) : (\n            <Tag color=\"green\">user</Tag>\n          )}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.CreatedAt')}>\n          {dayjs(keypair?.created_at).format('lll')}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.LastUsed')}>\n          {keypair?.last_used ? dayjs(keypair?.last_used).format('lll') : '-'}\n        </Descriptions.Item>\n      </Descriptions>\n      <br />\n      <Descriptions\n        title={t('credential.Allocation')}\n        size=\"small\"\n        column={1}\n        labelStyle={{ width: '40%' }}\n      >\n        <Descriptions.Item label={t('credential.ResourcePolicy')}>\n          {keypair?.resource_policy}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.NumberOfQueries')}>\n          {keypair?.num_queries}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.ConcurrentSessions')}>\n          {keypair?.concurrency_used}\n        </Descriptions.Item>\n        <Descriptions.Item\n          label={`${t('credential.RateLimit')} ${t('credential.For900Seconds')}`}\n        >\n          {keypair?.rate_limit}\n        </Descriptions.Item>\n      </Descriptions>\n    </BAIModal>\n  );\n};\n\nexport default KeypairInfoModal;\n","import { localeCompare } from '../helper';\nimport useControllableState from '../hooks/useControllableState';\nimport { KeypairResourcePolicySelectorQuery } from './__generated__/KeypairResourcePolicySelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface KeypairResourcePolicySelectorProps extends SelectProps {}\n\nconst KeypairResourcePolicySelector: React.FC<\n  KeypairResourcePolicySelectorProps\n> = ({ ...selectProps }) => {\n  const { t } = useTranslation();\n  const [value, setValue] = useControllableState<string>({\n    value: selectProps.value,\n    onChange: selectProps.onChange,\n  });\n\n  const { keypair_resource_policies } =\n    useLazyLoadQuery<KeypairResourcePolicySelectorQuery>(\n      graphql`\n        query KeypairResourcePolicySelectorQuery {\n          keypair_resource_policies {\n            name\n          }\n        }\n      `,\n      {},\n      { fetchPolicy: 'store-and-network' },\n    );\n\n  return (\n    <Select\n      showSearch\n      placeholder={t('credential.SelectPolicy')}\n      options={_.map(keypair_resource_policies, (policy) => {\n        return {\n          value: policy?.name,\n          label: policy?.name,\n        };\n      }).sort((a, b) => localeCompare(a?.label, b?.label))}\n      {...selectProps}\n      value={value}\n      onChange={(value, option) => {\n        setValue(value, option);\n      }}\n    />\n  );\n};\n\nexport default KeypairResourcePolicySelector;\n","import BAIModal from './BAIModal';\nimport KeypairResourcePolicySelector from './KeypairResourcePolicySelector';\nimport { KeypairSettingModalCreateMutation } from './__generated__/KeypairSettingModalCreateMutation.graphql';\nimport { KeypairSettingModalFragment$key } from './__generated__/KeypairSettingModalFragment.graphql';\nimport { KeypairSettingModalModifyMutation } from './__generated__/KeypairSettingModalModifyMutation.graphql';\nimport { App, Col, Form, Input, InputNumber, ModalProps, Row } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ntype KeypairSettingModalFormInput = {\n  user_id?: string;\n  rate_limit: number;\n  resource_policy: string;\n};\n\ninterface KeypairSettingModalProps extends ModalProps {\n  keypairSettingModalFrgmt?: KeypairSettingModalFragment$key | null;\n  onRequestClose: (success: boolean) => void;\n}\n\nconst KeypairSettingModal: React.FC<KeypairSettingModalProps> = ({\n  keypairSettingModalFrgmt = null,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { message } = App.useApp();\n  const formRef = useRef<FormInstance<KeypairSettingModalFormInput>>(null);\n\n  const keypair = useFragment(\n    graphql`\n      fragment KeypairSettingModalFragment on KeyPair {\n        rate_limit\n        access_key\n        resource_policy\n      }\n    `,\n    keypairSettingModalFrgmt,\n  );\n\n  const [commitCreateKeypair, isInFlightCommitCreateKeypair] =\n    useMutation<KeypairSettingModalCreateMutation>(graphql`\n      mutation KeypairSettingModalCreateMutation(\n        $user_id: String!\n        $props: KeyPairInput!\n      ) {\n        create_keypair(user_id: $user_id, props: $props) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const [commitModifyKeypair, isInFlightCommitModifyKeypair] =\n    useMutation<KeypairSettingModalModifyMutation>(graphql`\n      mutation KeypairSettingModalModifyMutation(\n        $access_key: String!\n        $props: ModifyKeyPairInput!\n      ) {\n        modify_keypair(access_key: $access_key, props: $props) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  return (\n    <BAIModal\n      title={\n        keypair\n          ? t('credential.ModifyKeypairResourcePolicy')\n          : t('credential.AddCredential')\n      }\n      width={500}\n      destroyOnClose\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            keypair\n              ? commitModifyKeypair({\n                  variables: {\n                    access_key: keypair.access_key ?? '',\n                    props: {\n                      rate_limit: values.rate_limit,\n                      resource_policy: values.resource_policy,\n                    },\n                  },\n                  onCompleted: (res, errors) => {\n                    if (!res.modify_keypair?.ok || errors) {\n                      message.error(res?.modify_keypair?.msg);\n                      onRequestClose(false);\n                      return;\n                    }\n                    message.success(t('notification.SuccessfullyUpdated'));\n                    onRequestClose(true);\n                  },\n                  onError: (error) => {\n                    message.error(error.message);\n                    onRequestClose(false);\n                  },\n                })\n              : commitCreateKeypair({\n                  variables: {\n                    user_id: values.user_id ?? '',\n                    props: {\n                      rate_limit: values.rate_limit,\n                      resource_policy: values.resource_policy,\n                    },\n                  },\n                  onCompleted: (res, errors) => {\n                    if (!res.create_keypair?.ok || errors) {\n                      message.error(res?.create_keypair?.msg);\n                      onRequestClose(false);\n                      return;\n                    }\n                    message.success(t('credential.KeypairCreated'));\n                    onRequestClose(true);\n                  },\n                  onError: (error) => {\n                    message.error(error.message);\n                    onRequestClose(false);\n                  },\n                });\n          })\n          .catch((error) => {});\n      }}\n      okButtonProps={{\n        loading: isInFlightCommitCreateKeypair || isInFlightCommitModifyKeypair,\n      }}\n      onCancel={() => onRequestClose(false)}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        layout=\"vertical\"\n        initialValues={keypair ? { ...keypair } : {}}\n      >\n        {!keypair && (\n          <Form.Item\n            name=\"user_id\"\n            label={t('credential.UserIDAsEmail')}\n            rules={[\n              {\n                required: true,\n              },\n              {\n                type: 'email',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        )}\n        <Row gutter={16}>\n          <Col span={12}>\n            <Form.Item\n              name=\"resource_policy\"\n              label={t('credential.ResourcePolicy')}\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <KeypairResourcePolicySelector />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item\n              name=\"rate_limit\"\n              label={t('credential.RateLimitFor15min')}\n              rules={[\n                {\n                  required: true,\n                },\n                {\n                  type: 'number',\n                  min: 0,\n                  max: 50000,\n                },\n                {\n                  validator(rule, value, callback) {\n                    if (value <= 100) {\n                      return Promise.reject(\n                        t('credential.WarningLessRateLimit'),\n                      );\n                    }\n                    return Promise.resolve();\n                  },\n                  warningOnly: true,\n                },\n              ]}\n            >\n              <InputNumber min={0} max={50000} style={{ width: '100%' }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default KeypairSettingModal;\n","import {\n  filterEmptyItem,\n  filterNonNullItems,\n  transformSorterToOrderString,\n} from '../helper';\nimport { useUpdatableState } from '../hooks';\nimport { useBAIPaginationOptionState } from '../hooks/reactPaginationQueryOptions';\nimport BAIPropertyFilter from './BAIPropertyFilter';\nimport BAITable from './BAITable';\nimport Flex from './Flex';\nimport KeypairInfoModal from './KeypairInfoModal';\nimport KeypairSettingModal from './KeypairSettingModal';\nimport { KeypairSettingModalFragment$key } from './__generated__/KeypairSettingModalFragment.graphql';\nimport { UserCredentialListDeleteMutation } from './__generated__/UserCredentialListDeleteMutation.graphql';\nimport { UserCredentialListModifyMutation } from './__generated__/UserCredentialListModifyMutation.graphql';\nimport {\n  UserCredentialListQuery,\n  UserCredentialListQuery$data,\n} from './__generated__/UserCredentialListQuery.graphql';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  LoadingOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport {\n  App,\n  Button,\n  Popconfirm,\n  Radio,\n  Tag,\n  Tooltip,\n  Typography,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { BanIcon, PlusIcon, UndoIcon } from 'lucide-react';\nimport { useEffect, useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery, useMutation } from 'react-relay';\nimport { StringParam, useQueryParam } from 'use-query-params';\n\ntype Keypair = NonNullable<\n  NonNullable<UserCredentialListQuery$data['keypair_list']>['items'][number]\n>;\n\nconst UserCredentialList: React.FC = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message, modal } = App.useApp();\n\n  const [action, setAction] = useQueryParam('action', StringParam);\n  useEffect(() => {\n    if (action === 'add') {\n      setOpenUserKeypairSettingModal(true);\n      setAction(undefined);\n    }\n  }, [action, setAction]);\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [activeType, setActiveType] = useState<'active' | 'inactive'>('active');\n  const [order, setOrder] = useState<string | undefined>(undefined);\n  const [filterString, setFilterString] = useState<string>();\n  const [keypairSettingModalFrgmt, setKeypairSettingModalFrgmt] =\n    useState<KeypairSettingModalFragment$key | null>(null);\n  const [openUserKeypairSettingModal, setOpenUserKeypairSettingModal] =\n    useState(false);\n  const [keypairInfoModalFrgmt, setKeypairInfoModalFrgmt] = useState<any>(null);\n\n  const [isPendingRefresh, startRefreshTransition] = useTransition();\n  const [isActiveTypePending, startActiveTypeTransition] = useTransition();\n  const [isPendingPageChange, startPageChangeTransition] = useTransition();\n  const [isPendingFilter, startFilterTransition] = useTransition();\n  const [isPendingInfoModalOpen, startInfoModalOpenTransition] =\n    useTransition();\n  const [isPendingSettingModalOpen, startSettingModalOpenTransition] =\n    useTransition();\n\n  const {\n    baiPaginationOption,\n    tablePaginationOption,\n    setTablePaginationOption,\n  } = useBAIPaginationOptionState({\n    current: 1,\n    pageSize: 20,\n  });\n\n  const { keypair_list } = useLazyLoadQuery<UserCredentialListQuery>(\n    graphql`\n      query UserCredentialListQuery(\n        $limit: Int!\n        $offset: Int!\n        $filter: String\n        $order: String\n        $domain_name: String\n        $email: String\n        $is_active: Boolean\n      ) {\n        keypair_list(\n          limit: $limit\n          offset: $offset\n          filter: $filter\n          order: $order\n          domain_name: $domain_name\n          email: $email\n          is_active: $is_active\n        ) {\n          items {\n            id\n            user_id\n            access_key\n            is_admin\n            resource_policy\n            created_at\n            rate_limit\n            num_queries\n            concurrency_used @since(version: \"24.09.0\")\n\n            ...KeypairSettingModalFragment\n            ...KeypairInfoModalFragment\n          }\n          total_count\n        }\n      }\n    `,\n    {\n      limit: baiPaginationOption.limit,\n      offset: baiPaginationOption.offset,\n      is_active: activeType === 'active',\n      filter: filterString,\n      order,\n    },\n    { fetchKey, fetchPolicy: 'network-only' },\n  );\n\n  const [commitModifyKeypair, isInFlightCommitModifyKeypair] =\n    useMutation<UserCredentialListModifyMutation>(graphql`\n      mutation UserCredentialListModifyMutation(\n        $access_key: String!\n        $props: ModifyKeyPairInput!\n      ) {\n        modify_keypair(access_key: $access_key, props: $props) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const [commitDeleteKeypair, isInFlightCommitDeleteKeypair] =\n    useMutation<UserCredentialListDeleteMutation>(graphql`\n      mutation UserCredentialListDeleteMutation($access_key: String!) {\n        delete_keypair(access_key: $access_key) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        justify=\"between\"\n        align=\"start\"\n        gap=\"xs\"\n        style={{ padding: token.paddingSM }}\n        wrap=\"wrap\"\n      >\n        <Flex gap={'sm'} align=\"start\">\n          <Radio.Group\n            value={activeType}\n            onChange={(value) => {\n              startActiveTypeTransition(() => {\n                setActiveType(value.target.value);\n                setTablePaginationOption({\n                  current: 1,\n                  pageSize: tablePaginationOption.pageSize,\n                });\n              });\n            }}\n            optionType=\"button\"\n            options={[\n              {\n                label: 'Active',\n                value: 'active',\n              },\n              {\n                label: 'Inactive',\n                value: 'inactive',\n              },\n            ]}\n          />\n          <BAIPropertyFilter\n            filterProperties={[\n              {\n                key: 'email',\n                propertyLabel: t('credential.UserID'),\n                type: 'string',\n              },\n              {\n                key: 'access_key',\n                propertyLabel: t('credential.AccessKey'),\n                type: 'string',\n              },\n              {\n                key: 'is_admin',\n                propertyLabel: t('credential.Permission'),\n                type: 'boolean',\n                strictSelection: true,\n                defaultOperator: '==',\n                options: [\n                  {\n                    label: 'admin',\n                    value: 'true',\n                  },\n                  {\n                    label: 'user',\n                    value: 'false',\n                  },\n                ],\n              },\n              {\n                key: 'resource_policy',\n                propertyLabel: t('credential.ResourcePolicy'),\n                type: 'string',\n              },\n            ]}\n            value={filterString}\n            loading={isPendingFilter}\n            onChange={(value) => {\n              startFilterTransition(() => {\n                setFilterString(value);\n              });\n            }}\n          />\n        </Flex>\n        <Flex gap={'xs'}>\n          <Tooltip title={t('button.Refresh')}>\n            <Button\n              loading={isPendingRefresh}\n              onClick={() => {\n                startRefreshTransition(() => {\n                  updateFetchKey();\n                });\n              }}\n              icon={<ReloadOutlined />}\n            />\n          </Tooltip>\n          <Button\n            type=\"primary\"\n            icon={<PlusIcon />}\n            onClick={() => {\n              setOpenUserKeypairSettingModal(true);\n            }}\n          >\n            {t('credential.AddCredential')}\n          </Button>\n        </Flex>\n      </Flex>\n      <BAITable<Keypair>\n        // resizable\n        rowKey={'id'}\n        scroll={{ x: 'max-content' }}\n        loading={{\n          spinning:\n            isActiveTypePending ||\n            isPendingRefresh ||\n            isPendingPageChange ||\n            isPendingFilter,\n          indicator: <LoadingOutlined />,\n        }}\n        dataSource={filterNonNullItems(keypair_list?.items)}\n        columns={filterEmptyItem([\n          {\n            key: 'userID',\n            title: t('credential.UserID'),\n            dataIndex: 'email',\n            fixed: 'left',\n            sorter: true,\n            // TODO: user_id field in keypair_list is used as user's email, but sorting is done by email field\n            render: (value, record) => {\n              return record.user_id;\n            },\n          },\n          {\n            key: 'accessKey',\n            title: t('credential.AccessKey'),\n            dataIndex: 'access_key',\n            sorter: true,\n          },\n          {\n            key: 'permission',\n            title: t('credential.Permission'),\n            dataIndex: 'is_admin',\n            render: (isAdmin) =>\n              isAdmin ? (\n                <>\n                  <Tag color=\"red\">admin</Tag>\n                  <Tag color=\"green\">user</Tag>\n                </>\n              ) : (\n                <Tag color=\"green\">user</Tag>\n              ),\n            sorter: true,\n          },\n          {\n            key: 'keyAge',\n            title: t('credential.KeyAge'),\n            dataIndex: 'created_at',\n            render: (createdAt) => {\n              return `${dayjs().diff(createdAt, 'day')}${t('credential.Days')}`;\n            },\n            sorter: true,\n          },\n          {\n            key: 'createdAt',\n            title: t('credential.CreatedAt'),\n            dataIndex: 'created_at',\n            render: (createdAt) => dayjs(createdAt).format('lll'),\n            sorter: true,\n          },\n          {\n            key: 'resourcePolicy',\n            title: t('credential.ResourcePolicy'),\n            dataIndex: 'resource_policy',\n            sorter: true,\n          },\n          {\n            key: 'allocation',\n            title: t('credential.Allocation'),\n            render: (record) => {\n              return (\n                <Flex direction=\"column\" align=\"start\">\n                  <Typography.Text>\n                    {record.concurrency_used}\n                    <Typography.Text\n                      type=\"secondary\"\n                      style={{\n                        marginLeft: token.marginXXS,\n                        fontSize: token.fontSizeSM,\n                      }}\n                    >\n                      {t('credential.Sessions')}\n                    </Typography.Text>\n                  </Typography.Text>\n                  <Typography.Text\n                    style={{\n                      fontSize: token.fontSizeSM,\n                    }}\n                  >\n                    {record.rate_limit}\n                    <Typography.Text\n                      type=\"secondary\"\n                      style={{\n                        marginLeft: token.marginXXS,\n                        fontSize: token.fontSizeSM,\n                      }}\n                    >\n                      {t('credential.ReqPer15Min')}\n                    </Typography.Text>\n                  </Typography.Text>\n                  <Typography.Text\n                    style={{\n                      fontSize: token.fontSizeSM,\n                    }}\n                  >\n                    {record.num_queries}\n                    <Typography.Text\n                      type=\"secondary\"\n                      style={{\n                        marginLeft: token.marginXXS,\n                        fontSize: token.fontSizeSM,\n                      }}\n                    >\n                      {t('credential.Queries')}\n                    </Typography.Text>\n                  </Typography.Text>\n                </Flex>\n              );\n            },\n          },\n          {\n            key: 'control',\n            title: t('general.Control'),\n            fixed: 'right',\n            render: (value, record) => {\n              return (\n                <Flex gap={token.marginXS}>\n                  <Button\n                    type=\"text\"\n                    icon={\n                      <InfoCircleOutlined\n                        style={{ color: token.colorSuccess }}\n                      />\n                    }\n                    onClick={() => {\n                      startInfoModalOpenTransition(() => {\n                        setKeypairInfoModalFrgmt(record);\n                      });\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={\n                      <SettingOutlined style={{ color: token.colorInfo }} />\n                    }\n                    onClick={() => {\n                      startSettingModalOpenTransition(() => {\n                        setKeypairSettingModalFrgmt(record);\n                      });\n                    }}\n                  />\n                  {activeType === 'inactive' && (\n                    <Tooltip title={t('credential.Activate')}>\n                      <Popconfirm\n                        title={t('credential.ActivateCredential')}\n                        description={record.user_id}\n                        okText={t('credential.Activate')}\n                        placement=\"left\"\n                        onConfirm={() => {\n                          commitModifyKeypair({\n                            variables: {\n                              access_key: record.access_key ?? '',\n                              props: {\n                                is_active: true,\n                              },\n                            },\n                            onCompleted: (res, errors) => {\n                              if (!res?.modify_keypair?.ok || errors) {\n                                message.error(res?.modify_keypair?.msg);\n                                return;\n                              }\n                              message.success(\n                                t(\n                                  'credential.KeypairStatusUpdatedSuccessfully',\n                                ),\n                              );\n                              startRefreshTransition(() => {\n                                updateFetchKey();\n                              });\n                            },\n                            onError: (error) => {\n                              message.error(error?.message);\n                              console.error(error);\n                            },\n                          });\n                        }}\n                      >\n                        <Button type=\"text\" icon={<UndoIcon />} />\n                      </Popconfirm>\n                    </Tooltip>\n                  )}\n                  {activeType === 'active' ? (\n                    <Tooltip title={t('credential.Deactivate')}>\n                      <Popconfirm\n                        title={t('credential.DeactivateCredential')}\n                        description={record.user_id}\n                        okButtonProps={{\n                          loading: isInFlightCommitModifyKeypair,\n                        }}\n                        okType=\"danger\"\n                        okText={t('credential.Deactivate')}\n                        placement=\"left\"\n                        onConfirm={() => {\n                          commitModifyKeypair({\n                            variables: {\n                              access_key: record.access_key ?? '',\n                              props: {\n                                is_active: false,\n                              },\n                            },\n                            onCompleted: (res, errors) => {\n                              if (!res?.modify_keypair?.ok || errors) {\n                                message.error(res?.modify_keypair?.msg);\n                                return;\n                              }\n                              message.success(\n                                t(\n                                  'credential.KeypairStatusUpdatedSuccessfully',\n                                ),\n                              );\n                              startRefreshTransition(() => {\n                                updateFetchKey();\n                              });\n                            },\n                            onError: (error) => {\n                              message.error(error?.message);\n                              console.error(error);\n                            },\n                          });\n                        }}\n                      >\n                        <Button type=\"text\" danger icon={<BanIcon />} />\n                      </Popconfirm>\n                    </Tooltip>\n                  ) : (\n                    <Button\n                      type=\"text\"\n                      danger\n                      icon={<DeleteOutlined />}\n                      loading={isInFlightCommitDeleteKeypair}\n                      onClick={() => {\n                        modal.confirm({\n                          title: t('credential.DeleteCredential'),\n                          content: (\n                            <Flex direction=\"column\" align=\"stretch\">\n                              <Typography.Text>\n                                {t('credential.YouAreAboutToDeleteCredential')}\n                              </Typography.Text>\n                              <Typography.Text strong>\n                                {record.user_id}\n                              </Typography.Text>\n                              <br />\n                              <Typography.Text type=\"danger\">\n                                {t('dialog.warning.CannotBeUndone')}\n                              </Typography.Text>\n                            </Flex>\n                          ),\n                          onOk: () => {\n                            commitDeleteKeypair({\n                              variables: {\n                                access_key: record.access_key ?? '',\n                              },\n                              onCompleted: (res, errors) => {\n                                if (!res?.delete_keypair?.ok || errors) {\n                                  message.error(res?.delete_keypair?.msg);\n                                  return;\n                                }\n                                message.success(\n                                  t('credential.KeypairSuccessfullyDeleted'),\n                                );\n                                startRefreshTransition(() => {\n                                  updateFetchKey();\n                                });\n                              },\n                              onError: (error) => {\n                                message.error(error?.message);\n                                console.error(error);\n                              },\n                            });\n                          },\n                          okButtonProps: {\n                            danger: true,\n                          },\n                          okText: t('button.Delete'),\n                        });\n                      }}\n                    />\n                  )}\n                </Flex>\n              );\n            },\n          },\n        ])}\n        showSorterTooltip={false}\n        pagination={{\n          pageSize: tablePaginationOption.pageSize,\n          showSizeChanger: true,\n          total: keypair_list?.total_count || 0,\n          current: tablePaginationOption.current,\n          showTotal: (total, range) => {\n            return `${range[0]}-${range[1]} of ${total} items`;\n          },\n          // TODO: need to set more options to export CSV in current page's data\n          pageSizeOptions: ['10', '20', '50'],\n          style: { marginRight: token.marginXS },\n        }}\n        onChange={({ pageSize, current }, filters, sorter) => {\n          startPageChangeTransition(() => {\n            if (_.isNumber(current) && _.isNumber(pageSize)) {\n              setTablePaginationOption({\n                current,\n                pageSize,\n              });\n            }\n            setOrder(transformSorterToOrderString(sorter));\n          });\n        }}\n      />\n      <KeypairInfoModal\n        keypairInfoModalFrgmt={keypairInfoModalFrgmt}\n        open={!!keypairInfoModalFrgmt || isPendingInfoModalOpen}\n        loading={isPendingInfoModalOpen}\n        onRequestClose={() => {\n          setKeypairInfoModalFrgmt(null);\n        }}\n      />\n      <KeypairSettingModal\n        keypairSettingModalFrgmt={keypairSettingModalFrgmt}\n        loading={isPendingSettingModalOpen}\n        open={\n          !!keypairSettingModalFrgmt ||\n          isPendingSettingModalOpen ||\n          openUserKeypairSettingModal\n        }\n        onRequestClose={(success) => {\n          setKeypairSettingModalFrgmt(null);\n          setOpenUserKeypairSettingModal(false);\n          if (success) {\n            startRefreshTransition(() => {\n              updateFetchKey();\n            });\n          }\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default UserCredentialList;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTOTPSupported } from '../hooks/backendai';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { UserInfoModalQuery } from './__generated__/UserInfoModalQuery.graphql';\nimport { Descriptions, DescriptionsProps, Tag, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  userEmail: string;\n  onRequestClose: () => void;\n}\n\nconst UserInfoModal: React.FC<Props> = ({\n  userEmail,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const sudoSessionEnabledSupported = baiClient?.supports(\n    'sudo-session-enabled',\n  );\n\n  const { isTOTPSupported, isLoading: isLoadingManagerSupportingTOTP } =\n    useTOTPSupported();\n\n  const { user } = useLazyLoadQuery<UserInfoModalQuery>(\n    graphql`\n      query UserInfoModalQuery(\n        $email: String\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isTOTPSupported: Boolean!\n      ) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          resource_policy\n          # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n          # support from 23.09.0b1\n          # https://github.com/lablup/backend.ai/pull/1530\n          sudo_session_enabled\n            @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n          totp_activated @include(if: $isTOTPSupported)\n          main_access_key @since(version: \"23.09.7\")\n        }\n      }\n    `,\n    {\n      email: userEmail,\n      isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n      isTOTPSupported: isTOTPSupported ?? false,\n    },\n  );\n\n  const columnSetting: DescriptionsProps['column'] = {\n    xxl: 1,\n    xl: 1,\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <BAIModal\n      centered\n      title={t('credential.UserDetail')}\n      footer={null}\n      onCancel={onRequestClose}\n      {...baiModalProps}\n    >\n      <Descriptions\n        size=\"small\"\n        column={columnSetting}\n        title={t('credential.Information')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item label={t('credential.UserID')}>\n          {user?.email}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.Description')}>\n          {user?.description}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.UserName')}>\n          {user?.username}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.FullName')}>\n          {user?.full_name}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.MainAccessKey')}>\n          {user?.main_access_key}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.DescActiveUser')}>\n          {user?.status === 'active' ? t('button.Yes') : t('button.No')}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.DescRequirePasswordChange')}>\n          {user?.need_password_change ? t('button.Yes') : t('button.No')}\n        </Descriptions.Item>\n        {sudoSessionEnabledSupported && (\n          <Descriptions.Item label={t('credential.EnableSudoSession')}>\n            {user?.sudo_session_enabled ? t('button.Yes') : t('button.No')}\n          </Descriptions.Item>\n        )}\n        {isTOTPSupported && (\n          <Descriptions.Item label={t('webui.menu.TotpActivated')}>\n            <Spin spinning={isLoadingManagerSupportingTOTP}>\n              {user?.totp_activated ? t('button.Yes') : t('button.No')}\n            </Spin>\n          </Descriptions.Item>\n        )}\n      </Descriptions>\n      <br />\n      <Descriptions\n        size=\"small\"\n        column={columnSetting}\n        title={t('credential.Association')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item label={t('credential.Role')}>\n          {user?.role}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.Domain')}>\n          {user?.domain_name}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.ResourcePolicy')}>\n          {user?.resource_policy}\n        </Descriptions.Item>\n      </Descriptions>\n      <br />\n      <Descriptions\n        title={t('credential.ProjectAndGroup')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item>\n          {_.map(user?.groups, (group) => {\n            return <Tag key={group?.id}>{group?.name}</Tag>;\n          })}\n        </Descriptions.Item>\n      </Descriptions>\n    </BAIModal>\n  );\n};\n\nexport default UserInfoModal;\n","import { localeCompare } from '../helper';\nimport { UserResourcePolicySelectorQuery } from './__generated__/UserResourcePolicySelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends SelectProps {\n  defaultValue?: string;\n}\n\nconst UserResourcePolicySelector: React.FC<Props> = ({ ...selectProps }) => {\n  const { t } = useTranslation();\n  const { user_resource_policies } =\n    useLazyLoadQuery<UserResourcePolicySelectorQuery>(\n      graphql`\n        query UserResourcePolicySelectorQuery {\n          user_resource_policies {\n            id\n            name\n            created_at\n            # follows version of https://github.com/lablup/backend.ai/pull/1993\n            # --------------- START --------------------\n            max_vfolder_count @since(version: \"23.09.6\")\n            max_session_count_per_model_session @since(version: \"23.09.10\")\n            max_quota_scope_size @since(version: \"23.09.2\")\n            # ---------------- END ---------------------\n            max_customized_image_count @since(version: \"24.03.0\")\n            ...UserResourcePolicySettingModalFragment\n          }\n        }\n      `,\n      {},\n      {\n        fetchPolicy: 'store-and-network',\n      },\n    );\n\n  return (\n    <Select\n      showSearch // user_resource_policy does not have filtering options\n      placeholder={t('credential.SelectPolicy')}\n      options={_.map(user_resource_policies, (policy) => {\n        return {\n          value: policy?.name,\n          label: policy?.name,\n        };\n      }).sort((a, b) => localeCompare(a?.label, b?.label))}\n      {...selectProps}\n    />\n  );\n};\n\nexport default UserResourcePolicySelector;\n","import {\n  useCurrentDomainValue,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\nimport { useCurrentUserRole, useTOTPSupported } from '../hooks/backendai';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport TOTPActivateModal from './TOTPActivateModal';\nimport UserResourcePolicySelector from './UserResourcePolicySelector';\nimport {\n  UserInput,\n  UserSettingModalCreateMutation,\n} from './__generated__/UserSettingModalCreateMutation.graphql';\nimport {\n  ModifyUserInput,\n  UserSettingModalModifyMutation,\n} from './__generated__/UserSettingModalModifyMutation.graphql';\nimport { UserSettingModalQuery } from './__generated__/UserSettingModalQuery.graphql';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport {\n  Form,\n  Input,\n  Select,\n  Switch,\n  message,\n  Typography,\n  FormInstance,\n  App,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from 'react-relay';\nimport { useLazyLoadQuery } from 'react-relay';\n\ntype UserStatus = {\n  [key: string]: string;\n};\nconst userStatus: UserStatus = {\n  active: 'Active',\n  inactive: 'Inactive',\n  'before-verification': 'Before Verification',\n  deleted: 'Deleted',\n};\n\ntype UserRole = {\n  [key: string]: string[];\n};\nconst permissionRangeOfRoleChanges: UserRole = {\n  superadmin: ['superadmin', 'admin', 'user', 'monitor'],\n  admin: ['admin', 'user', 'monitor'],\n};\n\ninterface UserSettingModalProps extends BAIModalProps {\n  userEmail?: string | null;\n  onRequestClose: (success: boolean) => void;\n}\n\nconst UserSettingModal: React.FC<UserSettingModalProps> = ({\n  userEmail = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { modal } = App.useApp();\n  const formRef = useRef<FormInstance>(null);\n\n  const currentUserRole = useCurrentUserRole();\n  const currentDomainName = useCurrentDomainValue();\n  const baiClient = useSuspendedBackendaiClient();\n  const sudoSessionEnabledSupported = baiClient?.supports(\n    'sudo-session-enabled',\n  );\n  const { isTOTPSupported, isLoading: isLoadingManagerSupportingTOTP } =\n    useTOTPSupported();\n  const [isOpenTOTPActivateModal, { toggle: toggleTOTPActivateModal }] =\n    useToggle(false);\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n\n  const { user } = useLazyLoadQuery<UserSettingModalQuery>(\n    graphql`\n      query UserSettingModalQuery(\n        $email: String\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n      ) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          resource_policy\n          # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n          # support from 23.09.0b1\n          # https://github.com/lablup/backend.ai/pull/1530\n          sudo_session_enabled\n            @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n          totp_activated @skipOnClient(if: $isNotSupportTotp)\n          ...TOTPActivateModalFragment\n        }\n      }\n    `,\n    {\n      email: userEmail ?? '',\n      isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n      isNotSupportTotp: !isTOTPSupported,\n    },\n    {\n      // Do not fetch user data if the modal is closed or the user email is not provided\n      fetchPolicy:\n        baiModalProps.open && userEmail ? 'network-only' : 'store-only',\n      fetchKey: fetchKey,\n    },\n  );\n\n  const [commitModifyUserSetting, isInFlightCommitModifyUserSetting] =\n    useMutation<UserSettingModalModifyMutation>(graphql`\n      mutation UserSettingModalModifyMutation(\n        $email: String!\n        $props: ModifyUserInput!\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n      ) {\n        modify_user(email: $email, props: $props) {\n          ok\n          msg\n          user {\n            id\n            email\n            username\n            need_password_change\n            full_name\n            description\n            status\n            domain_name\n            role\n            groups {\n              id\n              name\n            }\n            resource_policy\n            # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n            # support from 23.09.0b1\n            # https://github.com/lablup/backend.ai/pull/1530\n            sudo_session_enabled\n              @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n            totp_activated @skipOnClient(if: $isNotSupportTotp)\n            ...TOTPActivateModalFragment\n          }\n        }\n      }\n    `);\n\n  const [commitCreateUser, isInFlightCommitCreateUser] =\n    useMutation<UserSettingModalCreateMutation>(graphql`\n      mutation UserSettingModalCreateMutation(\n        $email: String!\n        $props: UserInput!\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n      ) {\n        create_user(email: $email, props: $props) {\n          ok\n          msg\n          user {\n            id\n            email\n            username\n            need_password_change\n            full_name\n            description\n            status\n            domain_name\n            role\n            groups {\n              id\n              name\n            }\n            resource_policy\n            sudo_session_enabled\n              @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n            totp_activated @skipOnClient(if: $isNotSupportTotp)\n            ...TOTPActivateModalFragment\n          }\n        }\n      }\n    `);\n\n  const mutationToRemoveTotp = useTanMutation({\n    mutationFn: (email: string) => {\n      return baiClient.remove_totp(email);\n    },\n  });\n\n  const INITIAL_VALUES = {\n    email: '',\n    username: '',\n    need_password_change: false,\n    full_name: '',\n    description: '',\n    status: 'active',\n    domain_name: currentDomainName,\n    role: 'user',\n    is_active: true,\n    resource_policy: 'default',\n  };\n\n  const handleOk = () => {\n    formRef.current\n      ?.validateFields()\n      .then(async (values) => {\n        if (user) {\n          const props: ModifyUserInput = _.omitBy(\n            _.omit(values, ['email', 'password_confirm']),\n            _.isNil,\n          );\n          commitModifyUserSetting({\n            variables: {\n              email: values?.email || '',\n              props: props,\n              isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n              isNotSupportTotp: !isTOTPSupported,\n            },\n            onCompleted: (res, errors) => {\n              if (!res?.modify_user?.ok) {\n                message.error(t('dialog.ErrorOccurred'));\n                console.error(res?.modify_user?.msg);\n                onRequestClose(false);\n                return;\n              }\n              if (errors && errors.length > 0) {\n                const errorMsgList = _.map(errors, (error) => error.message);\n                for (const error of errorMsgList) {\n                  message.error(error, 2.5);\n                }\n                onRequestClose(false);\n              }\n              message.success(t('environment.SuccessfullyModified'));\n              onRequestClose(true);\n            },\n            onError: (err) => {\n              message.error(t('dialog.ErrorOccurred'));\n              console.error(err);\n            },\n          });\n        } else {\n          const default_group_id = [\n            await baiClient.group\n              .list()\n              .then((res: any) => _.find(res.groups, { name: 'default' })?.id),\n          ];\n          const props: UserInput = {\n            ..._.omit(values, ['email', 'password_confirm']),\n            password: values.password,\n            need_password_change: values.need_password_change,\n            username: values?.username || _.split(values.email, '@')[0],\n            full_name: values?.full_name || _.split(values.email, '@')[0],\n            description:\n              values?.description ||\n              `${_.split(values.email, '@')[0]}'s Account`,\n            group_ids: default_group_id,\n          };\n          commitCreateUser({\n            variables: {\n              email: values?.email || '',\n              props: props,\n              isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n              isNotSupportTotp: !isTOTPSupported,\n            },\n            onCompleted: (res, errors) => {\n              if (!res?.create_user?.ok) {\n                message.error(\n                  res.create_user?.msg?.includes('already exists')\n                    ? t('credential.UserAccountCreatedError')\n                    : t('dialog.ErrorOccurred'),\n                );\n                console.error(res?.create_user?.msg);\n                onRequestClose(false);\n                return;\n              }\n              if (errors && errors.length > 0) {\n                const errorMsgList = _.map(errors, (error) => error.message);\n                for (const error of errorMsgList) {\n                  message.error(error, 2.5);\n                }\n                onRequestClose(false);\n              }\n              message.success(t('environment.SuccessfullyCreated'));\n              onRequestClose(true);\n            },\n            onError: (err) => {\n              message.error(t('dialog.ErrorOccurred'));\n              console.error(err);\n            },\n          });\n        }\n      })\n      .catch((e) => console.error(e));\n  };\n\n  return (\n    <BAIModal\n      centered\n      title={\n        user ? t('credential.ModifyUserDetail') : t('credential.CreateUser')\n      }\n      destroyOnClose\n      onOk={handleOk}\n      confirmLoading={\n        isInFlightCommitModifyUserSetting || isInFlightCommitCreateUser\n      }\n      onCancel={() => onRequestClose(false)}\n      {...baiModalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        labelCol={{ span: 10 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ marginBottom: 40, marginTop: token.marginMD }}\n        initialValues={user ? { ...user } : INITIAL_VALUES}\n      >\n        <Form.Item\n          name=\"email\"\n          label={t('credential.UserID')}\n          rules={[{ required: !user }, { type: 'email' }]}\n        >\n          <Input disabled={!!user} />\n        </Form.Item>\n        <Form.Item\n          name=\"username\"\n          label={t('credential.UserName')}\n          rules={[\n            {\n              max: 64,\n            },\n          ]}\n        >\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item\n          name=\"full_name\"\n          label={t('credential.FullName')}\n          rules={[\n            {\n              max: 64,\n            },\n          ]}\n        >\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={user ? t('general.NewPassword') : t('general.Password')}\n          rules={[\n            {\n              required: !user,\n            },\n            {\n              pattern: /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[_\\W]).{8,}$/,\n              message: t('webui.menu.InvalidPasswordMessage'),\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"password_confirm\"\n          dependencies={['password']}\n          label={\n            user\n              ? t('webui.menu.NewPasswordAgain')\n              : t('general.ConfirmPassword')\n          }\n          rules={[\n            {\n              required: !user,\n              message: '',\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value && !!getFieldValue('password')) {\n                  return Promise.reject(\n                    new Error(t('webui.menu.PleaseConfirmYourPassword')),\n                  );\n                }\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(t('environment.PasswordsDoNotMatch')),\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label={t('credential.Description')}\n          rules={[{ max: 500 }]}\n        >\n          <Input.TextArea placeholder={t('maxLength.500chars')} />\n        </Form.Item>\n        <Form.Item name=\"status\" label={t('credential.UserStatus')}>\n          <Select\n            options={_.map(userStatus, (value, key) => {\n              return {\n                value: key,\n                label: value,\n              };\n            })}\n          />\n        </Form.Item>\n        {!!user?.role &&\n          !!currentUserRole &&\n          currentUserRole in permissionRangeOfRoleChanges && (\n            <Form.Item name=\"role\" label={t('credential.Role')}>\n              <Select\n                options={_.map(\n                  permissionRangeOfRoleChanges[currentUserRole],\n                  (item) => {\n                    return {\n                      value: item,\n                      label: item,\n                    };\n                  },\n                )}\n              />\n            </Form.Item>\n          )}\n        <Form.Item\n          name=\"need_password_change\"\n          label={t('credential.DescRequirePasswordChange')}\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n        {!!sudoSessionEnabledSupported && (\n          <Form.Item\n            name=\"sudo_session_enabled\"\n            label={t('credential.EnableSudoSession')}\n            valuePropName=\"checked\"\n          >\n            <Switch />\n          </Form.Item>\n        )}\n        {!!isTOTPSupported && (\n          <Form.Item\n            name=\"totp_activated\"\n            label={t('webui.menu.TotpActivated')}\n            valuePropName=\"checked\"\n            extra={\n              user?.email !== baiClient?.email && (\n                <Typography.Text\n                  type=\"secondary\"\n                  style={{ fontSize: token.fontSizeSM }}\n                >\n                  {t('credential.AdminCanOnlyRemoveTotp')}\n                </Typography.Text>\n              )\n            }\n          >\n            <Switch\n              loading={\n                isLoadingManagerSupportingTOTP || mutationToRemoveTotp.isPending\n              }\n              disabled={\n                user?.email !== baiClient?.email && !user?.totp_activated\n              }\n              onChange={(checked: boolean) => {\n                if (checked) {\n                  toggleTOTPActivateModal();\n                } else {\n                  if (user?.totp_activated) {\n                    formRef.current?.setFieldValue('totp_activated', true);\n                    modal.confirm({\n                      title: t('totp.TurnOffTotp'),\n                      icon: <ExclamationCircleFilled />,\n                      content: t('totp.ConfirmTotpRemovalBody'),\n                      okText: t('button.Yes'),\n                      okType: 'danger',\n                      cancelText: t('button.No'),\n                      onOk() {\n                        mutationToRemoveTotp.mutate(user?.email || '', {\n                          onSuccess: () => {\n                            message.success(t('totp.RemoveTotpSetupCompleted'));\n                            updateFetchKey();\n                            formRef.current?.setFieldValue(\n                              'totp_activated',\n                              false,\n                            );\n                          },\n                          onError: (err) => {\n                            console.log(err);\n                          },\n                        });\n                      },\n                      onCancel() {\n                        formRef.current?.setFieldValue('totp_activated', true);\n                      },\n                    });\n                  }\n                }\n              }}\n            />\n          </Form.Item>\n        )}\n        <Form.Item\n          name=\"resource_policy\"\n          label={t('resourcePolicy.ResourcePolicy')}\n          rules={[{ required: !user }]}\n        >\n          <UserResourcePolicySelector />\n        </Form.Item>\n      </Form>\n      {!!isTOTPSupported && (\n        <TOTPActivateModal\n          userFrgmt={user}\n          open={isOpenTOTPActivateModal}\n          onRequestClose={(success) => {\n            if (success) {\n              updateFetchKey();\n            } else {\n              formRef.current?.setFieldValue('totp_activated', false);\n            }\n            toggleTOTPActivateModal();\n          }}\n        />\n      )}\n    </BAIModal>\n  );\n};\n\nexport default UserSettingModal;\n","import BAIPropertyFilter from '../components/BAIPropertyFilter';\nimport Flex from '../components/Flex';\nimport {\n  filterEmptyItem,\n  filterNonNullItems,\n  transformSorterToOrderString,\n} from '../helper';\nimport { useUpdatableState } from '../hooks';\nimport { useBAIPaginationOptionState } from '../hooks/reactPaginationQueryOptions';\nimport UserInfoModal from './UserInfoModal';\nimport UserSettingModal from './UserSettingModal';\nimport { UserNodeListModifyMutation } from './__generated__/UserNodeListModifyMutation.graphql';\nimport { UserNodeListQuery } from './__generated__/UserNodeListQuery.graphql';\nimport {\n  ReloadOutlined,\n  LoadingOutlined,\n  InfoCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Tooltip, Button, Table, theme, Radio, Popconfirm, App } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { BanIcon, PlusIcon, UndoIcon } from 'lucide-react';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery, useMutation } from 'react-relay';\n\ninterface UserNodeListProps {}\n\nconst UserNodeList: React.FC<UserNodeListProps> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [isPendingRefresh, startRefreshTransition] = useTransition();\n  const [isPendingFilter, startFilterTransition] = useTransition();\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [filterString, setFilterString] = useState<string>();\n  const [order, setOrder] = useState<string | undefined>('-created_at');\n  const [isPendingPageChange, startPageChangeTransition] = useTransition();\n  const [isPendingStatusFetch, startStatusFetchTransition] = useTransition();\n  const [activeFilter, setActiveFilter] = useState<\n    'status == \"active\"' | 'status != \"active\"'\n  >('status == \"active\"');\n  const { message } = App.useApp();\n\n  const [emailForInfoModal, setEmailForInfoModal] = useState<string | null>(\n    null,\n  );\n  const [isPendingInfoModalOpen, startInfoModalOpenTransition] =\n    useTransition();\n  const [isPendingSettingModalOpen, startSettingModalOpenTransition] =\n    useTransition();\n  const [emailForSettingModal, setEmailForSettingModal] = useState<\n    string | null\n  >(null);\n  const [openCreateModal, setOpenCreateModal] = useState<boolean>(false);\n\n  const {\n    baiPaginationOption,\n    tablePaginationOption,\n    setTablePaginationOption,\n  } = useBAIPaginationOptionState({\n    current: 1,\n    pageSize: 20,\n  });\n\n  const [pendingUserId, setPendingUserId] = useState<string>();\n\n  const { user_nodes } = useLazyLoadQuery<UserNodeListQuery>(\n    graphql`\n      query UserNodeListQuery(\n        $first: Int\n        $offset: Int\n        $filter: String\n        $order: String\n      ) {\n        user_nodes(\n          first: $first\n          offset: $offset\n          filter: $filter\n          order: $order\n        ) {\n          count\n          edges {\n            node {\n              id\n              full_name\n              role\n              description\n              email\n              username\n              created_at\n              status\n            }\n          }\n        }\n      }\n    `,\n    {\n      first: baiPaginationOption.limit,\n      offset: baiPaginationOption.offset,\n      filter: [filterString, activeFilter]\n        .filter(Boolean)\n        .map((x) => `(${x})`)\n        .join(' & '),\n      order,\n    },\n    {\n      fetchKey,\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const [commitModifyUser, isInFlightCommitModifyUser] =\n    useMutation<UserNodeListModifyMutation>(graphql`\n      mutation UserNodeListModifyMutation(\n        $email: String!\n        $props: ModifyUserInput!\n      ) {\n        modify_user(email: $email, props: $props) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        justify=\"between\"\n        align=\"start\"\n        gap=\"xs\"\n        style={{ padding: token.paddingSM }}\n        wrap=\"wrap\"\n      >\n        <Flex direction=\"row\" gap={'sm'} align=\"start\" wrap=\"wrap\">\n          <Radio.Group\n            value={activeFilter}\n            onChange={(e) => {\n              startStatusFetchTransition(() => {\n                setActiveFilter(e.target?.value);\n                // to page 1\n                setTablePaginationOption({\n                  current: 1,\n                  pageSize: tablePaginationOption.pageSize,\n                });\n              });\n            }}\n            optionType=\"button\"\n            options={[\n              {\n                label: 'Active',\n                value: 'status == \"active\"',\n              },\n              {\n                label: 'Inactive',\n                value: 'status != \"active\"',\n              },\n            ]}\n          />\n          <BAIPropertyFilter\n            filterProperties={[\n              {\n                key: 'email',\n                propertyLabel: t('credential.UserID'),\n                type: 'string',\n              },\n              {\n                key: 'username',\n                propertyLabel: t('credential.Name'),\n                type: 'string',\n              },\n              {\n                key: 'role',\n                propertyLabel: t('credential.Role'),\n                type: 'string',\n                strictSelection: true,\n                defaultOperator: '==',\n                options: [\n                  {\n                    label: 'superadmin',\n                    value: 'superadmin',\n                  },\n                  {\n                    label: 'admin',\n                    value: 'admin',\n                  },\n                  {\n                    label: 'user',\n                    value: 'user',\n                  },\n                  {\n                    label: 'monitor',\n                    value: 'monitor',\n                  },\n                ],\n              },\n              {\n                key: 'description',\n                propertyLabel: t('credential.Description'),\n                type: 'string',\n              },\n            ]}\n            value={filterString}\n            loading={isPendingFilter}\n            onChange={(value) => {\n              startFilterTransition(() => {\n                setFilterString(value);\n              });\n            }}\n          />\n        </Flex>\n        <Flex gap=\"xs\">\n          <Tooltip title={t('button.Refresh')}>\n            <Button\n              loading={isPendingRefresh}\n              onClick={() => {\n                startRefreshTransition(() => {\n                  updateFetchKey();\n                });\n              }}\n              icon={<ReloadOutlined />}\n            ></Button>\n          </Tooltip>\n          <Button\n            type=\"primary\"\n            icon={<PlusIcon />}\n            onClick={() => {\n              setOpenCreateModal(true);\n            }}\n          >\n            {t('credential.CreateUser')}\n          </Button>\n        </Flex>\n      </Flex>\n      <Table\n        scroll={{ x: 'max-content' }}\n        rowKey={'id'}\n        dataSource={_.map(filterNonNullItems(user_nodes?.edges), (e) => e.node)}\n        columns={filterEmptyItem([\n          {\n            key: 'email',\n            title: t('credential.UserID'),\n            dataIndex: 'email',\n            sorter: true,\n          },\n          {\n            key: 'username',\n            title: t('credential.Name'),\n            dataIndex: 'username',\n            sorter: true,\n          },\n          {\n            key: 'role',\n            title: t('credential.Role'),\n            dataIndex: 'role',\n            sorter: true,\n          },\n          {\n            key: 'description',\n            title: t('credential.Description'),\n            dataIndex: 'description',\n          },\n          {\n            title: t('credential.CreatedAt'),\n            dataIndex: 'created_at',\n            render: (text) => dayjs(text).format('lll'),\n            sorter: true,\n            defaultSortOrder: 'descend',\n          },\n          activeFilter === 'status != \"active\"' && {\n            key: 'status',\n            title: t('credential.Status'),\n            dataIndex: 'status',\n            sorter: true,\n          },\n          {\n            title: t('general.Control'),\n            render: (record) => {\n              const isActive = record?.status === 'active';\n              return (\n                <Flex gap={token.marginXS}>\n                  <Button\n                    type=\"text\"\n                    icon={\n                      <InfoCircleOutlined\n                        style={{ color: token.colorSuccess }}\n                      />\n                    }\n                    onClick={() => {\n                      startInfoModalOpenTransition(() => {\n                        setEmailForInfoModal(record?.email || null);\n                      });\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={\n                      <SettingOutlined style={{ color: token.colorInfo }} />\n                    }\n                    onClick={() => {\n                      startSettingModalOpenTransition(() => {\n                        setEmailForSettingModal(record?.email || null);\n                      });\n                    }}\n                  />\n                  <Tooltip\n                    title={\n                      isActive\n                        ? t('credential.Deactivate')\n                        : t('credential.Activate')\n                    }\n                  >\n                    <Popconfirm\n                      title={\n                        isActive\n                          ? t('credential.DeactivateUser')\n                          : t('credential.ActivateUser')\n                      }\n                      placement=\"left\"\n                      okType={isActive ? 'danger' : 'primary'}\n                      okText={\n                        isActive\n                          ? t('credential.Deactivate')\n                          : t('credential.Activate')\n                      }\n                      description={record?.email}\n                      onConfirm={() => {\n                        setPendingUserId(record?.id || '');\n                        commitModifyUser({\n                          variables: {\n                            email: record?.email || '',\n                            props: {\n                              status: isActive ? 'inactive' : 'active',\n                            },\n                          },\n                          onCompleted: () => {\n                            message.success(\n                              t('credential.StatusUpdatedSuccessfully'),\n                            );\n                            startRefreshTransition(() => {\n                              updateFetchKey();\n                            });\n                          },\n                          onError: (error) => {\n                            message.error(error?.message);\n                            console.error(error);\n                          },\n                        });\n                      }}\n                    >\n                      <Button\n                        type=\"text\"\n                        danger={isActive}\n                        icon={isActive ? <BanIcon /> : <UndoIcon />}\n                        disabled={\n                          isInFlightCommitModifyUser &&\n                          pendingUserId !== record?.id\n                        }\n                        loading={\n                          isInFlightCommitModifyUser &&\n                          pendingUserId === record?.id\n                        }\n                      />\n                    </Popconfirm>\n                  </Tooltip>\n                </Flex>\n              );\n            },\n          },\n        ])}\n        showSorterTooltip={false}\n        sortDirections={['descend', 'ascend', 'descend']}\n        pagination={{\n          pageSize: tablePaginationOption.pageSize,\n          showSizeChanger: true,\n          total: user_nodes?.count || 0,\n          current: tablePaginationOption.current,\n          showTotal(total, range) {\n            return `${range[0]}-${range[1]} of ${total} users`;\n          },\n          pageSizeOptions: ['10', '20', '50'],\n          style: { marginRight: token.marginXS },\n        }}\n        onChange={({ pageSize, current }, filters, sorter) => {\n          startPageChangeTransition(() => {\n            if (_.isNumber(current) && _.isNumber(pageSize)) {\n              setTablePaginationOption({\n                current,\n                pageSize,\n              });\n            }\n            setOrder(transformSorterToOrderString(sorter));\n          });\n        }}\n        loading={{\n          spinning:\n            isPendingPageChange || isPendingStatusFetch || isPendingFilter,\n          indicator: <LoadingOutlined />,\n        }}\n      />\n      <UserInfoModal\n        userEmail={emailForInfoModal || ''}\n        open={!!emailForInfoModal || isPendingInfoModalOpen}\n        loading={isPendingInfoModalOpen}\n        onRequestClose={() => {\n          setEmailForInfoModal(null);\n        }}\n      />\n      <UserSettingModal\n        userEmail={emailForSettingModal}\n        open={\n          !!emailForSettingModal || isPendingSettingModalOpen || openCreateModal\n        }\n        loading={isPendingSettingModalOpen}\n        onRequestClose={(success) => {\n          setEmailForSettingModal(null);\n          setOpenCreateModal(false);\n          if (success) {\n            startRefreshTransition(() => {\n              updateFetchKey();\n            });\n          }\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default UserNodeList;\n","import BAICard from '../components/BAICard';\nimport Flex from '../components/Flex';\nimport FlexActivityIndicator from '../components/FlexActivityIndicator';\nimport UserCredentialList from '../components/UserCredentialList';\nimport UserNodeList from '../components/UserNodeList';\nimport { createStyles } from 'antd-style';\nimport { CardTabListType } from 'antd/es/card';\nimport { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StringParam, useQueryParam, withDefault } from 'use-query-params';\n\nconst useStyles = createStyles(({ css }) => ({\n  card: css`\n    .ant-card-body {\n      padding: 0;\n    }\n  `,\n}));\n\nconst tabParam = withDefault(StringParam, 'users');\n\nconst UserCredentialsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { styles } = useStyles();\n  const [curTabKey, setCurTabKey] = useQueryParam('tab', tabParam);\n  const tabItems: CardTabListType[] = [\n    {\n      key: 'users',\n      label: t('credential.Users'),\n    },\n    {\n      key: 'credentials',\n      label: t('credential.Credentials'),\n    },\n  ];\n\n  return (\n    <BAICard\n      className={styles.card}\n      activeTabKey={curTabKey}\n      onTabChange={setCurTabKey}\n      tabList={tabItems}\n    >\n      <Suspense\n        fallback={\n          <FlexActivityIndicator\n            style={{ height: 'calc(100vh - 145px)' }}\n            spinSize=\"large\"\n          />\n        }\n      >\n        {curTabKey === 'users' && (\n          <Flex direction=\"column\" align=\"stretch\">\n            <UserNodeList />\n          </Flex>\n        )}\n        {curTabKey === 'credentials' && (\n          <Flex direction=\"column\" align=\"stretch\">\n            <UserCredentialList />\n          </Flex>\n        )}\n      </Suspense>\n    </BAICard>\n  );\n};\n\nexport default UserCredentialsPage;\n"],"names":["_ref","status","extraButtonTitle","onClickExtraButton","extra","style","cardProps","token","theme","useToken","_extra","_jsx","Button","type","icon","CloseCircleTwoTone","twoToneColor","colorError","WarningTwoTone","colorWarning","undefined","onClick","children","Card","className","_","borderColor","colorSuccess","DEFAULT_OPERATOR_OF_TYPES","string","boolean","DEFAULT_OPTIONS_OF_TYPES","label","value","DEFAULT_STRICT_SELECTION_OF_TYPES","mergeFilterValues","filterStrings","operator","arguments","length","mergedFilter","filterEmptyItem","str","_selectedProperty$rul2","filterProperties","propValue","onChange","propOnChange","defaultValue","loading","containerProps","search","setSearch","useState","autoCompleteRef","useRef","isOpenAutoComplete","setIsOpenAutoComplete","setValue","useControllableValue","filtersFromValue","useMemo","split","map","filter","trim","index","_$find","_$find2","property","rest","valueParts","join","replace","parseFilterValue","key","propertyLabel","f","t","useTranslation","options","filterProperty","selectedProperty","setSelectedProperty","isValid","setIsValid","isFocused","setIsFocused","updateFiltersValue","filters","newFilterString","item","valueStringInResult","combineFilters","onSearch","_selectedProperty$rul","_selectedProperty$opt","_selectedProperty$opt2","strictSelection","o","rule","validate","defaultOperator","filterValue","find","_jsxs","Flex","direction","gap","align","Space","Compact","Select","popupMatchSelectWidth","onSelect","_autoCompleteRef$curr","current","focus","showSearch","optionFilterProp","Tooltip","title","message","open","color","AutoComplete","ref","onDropdownVisibleChange","minWidth","option","_option$label","toString","includes","placeholder","onBlur","onFocus","Input","Search","allowClear","wrap","alignSelf","Tag","closable","onClose","newFilters","remove","margin","size","CloseCircleOutlined","colorTextSecondary","resetList","useStyles","createStyles","css","resizableTable","neoHeader","colorTextTertiary","ResizableTitle","props","onResize","width","restProps","wrapRef","isResizing","setIsResizing","debouncedIsResizing","useDebounce","wait","useEffect","offsetWidth","height","offsetHeight","node","handle","Resizable","e","stopPropagation","onResizeStart","onResizeStop","draggableOpts","enableUserSelectHack","preventDefault","columnKeyOrIndexKey","column","_ref2","resizable","columns","components","neoStyle","tableProps","styles","isDarkMode","useThemeMode","resizedColumnWidths","setResizedColumnWidths","widths","generateResizedColumnWidths","mergedColumns","onHeaderCell","_ref3","prev","ConfigProvider","Table","headerBg","sortDirections","showSorterTooltip","classNames","opacity","transition","header","cell","spinSize","justify","Spin","indicator","LoadingOutlined","spin","v0","v1","v2","hash","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","useBAIPaginationOptionState","initialOptions","setOptions","baiPaginationOption","limit","pageSize","first","offset","tablePaginationOption","setTablePaginationOption","pagination","_keypair$secret_key","keypairInfoModalFrgmt","onRequestClose","modalProps","keypair","useFragment","_KeypairInfoModalFragment","require","user","useLazyLoadQuery","_KeypairInfoModalQuery","email","user_id","fetchPolicy","BAIModal","Typography","Text","fontSize","fontSizeHeading5","main_access_key","access_key","onCancel","footer","Descriptions","labelStyle","Item","copyable","text","secret_key","is_admin","_Fragment","dayjs","created_at","format","last_used","resource_policy","num_queries","concurrency_used","rate_limit","selectProps","useControllableState","keypair_resource_policies","_KeypairResourcePolicySelectorQuery","policy","name","sort","a","b","localeCompare","keypairSettingModalFrgmt","App","useApp","formRef","_KeypairSettingModalFragment","commitCreateKeypair","isInFlightCommitCreateKeypair","useMutation","_KeypairSettingModalCreateMutation","commitModifyKeypair","isInFlightCommitModifyKeypair","_KeypairSettingModalModifyMutation","destroyOnClose","onOk","_formRef$current","validateFields","then","values","_keypair$access_key","_values$user_id","variables","onCompleted","res","errors","_res$modify_keypair","_res$modify_keypair2","modify_keypair","ok","error","msg","success","onError","_res$create_keypair","_res$create_keypair2","create_keypair","catch","okButtonProps","Form","layout","initialValues","rules","required","Row","gutter","Col","span","KeypairResourcePolicySelector","min","max","validator","callback","Promise","reject","resolve","warningOnly","InputNumber","UserCredentialList","modal","action","setAction","useQueryParam","StringParam","setOpenUserKeypairSettingModal","fetchKey","updateFetchKey","useUpdatableState","activeType","setActiveType","order","setOrder","filterString","setFilterString","setKeypairSettingModalFrgmt","openUserKeypairSettingModal","setKeypairInfoModalFrgmt","isPendingRefresh","startRefreshTransition","useTransition","isActiveTypePending","startActiveTypeTransition","isPendingPageChange","startPageChangeTransition","isPendingFilter","startFilterTransition","isPendingInfoModalOpen","startInfoModalOpenTransition","isPendingSettingModalOpen","startSettingModalOpenTransition","keypair_list","_UserCredentialListQuery","is_active","_UserCredentialListModifyMutation","commitDeleteKeypair","isInFlightCommitDeleteKeypair","_UserCredentialListDeleteMutation","padding","paddingSM","Radio","target","optionType","BAIPropertyFilter","ReloadOutlined","PlusIcon","BAITable","rowKey","scroll","x","spinning","dataSource","filterNonNullItems","items","dataIndex","fixed","sorter","render","record","isAdmin","createdAt","diff","marginLeft","marginXXS","fontSizeSM","marginXS","InfoCircleOutlined","SettingOutlined","colorInfo","Popconfirm","description","okText","placement","onConfirm","_record$access_key","console","UndoIcon","okType","_record$access_key2","_res$modify_keypair3","_res$modify_keypair4","danger","BanIcon","DeleteOutlined","confirm","content","strong","_record$access_key3","_res$delete_keypair","_res$delete_keypair2","delete_keypair","showSizeChanger","total","total_count","showTotal","range","pageSizeOptions","marginRight","transformSorterToOrderString","KeypairInfoModal","KeypairSettingModal","userEmail","baiModalProps","baiClient","useSuspendedBackendaiClient","sudoSessionEnabledSupported","supports","isTOTPSupported","isLoading","isLoadingManagerSupportingTOTP","useTOTPSupported","_UserInfoModalQuery","isNotSupportSudoSessionEnabled","columnSetting","xxl","xl","lg","md","sm","xs","centered","username","full_name","need_password_change","sudo_session_enabled","totp_activated","role","domain_name","groups","group","id","user_resource_policies","_UserResourcePolicySelectorQuery","userStatus","active","inactive","deleted","permissionRangeOfRoleChanges","superadmin","admin","currentUserRole","useCurrentUserRole","currentDomainName","useCurrentDomainValue","isOpenTOTPActivateModal","toggle","toggleTOTPActivateModal","useToggle","_UserSettingModalQuery","isNotSupportTotp","commitModifyUserSetting","isInFlightCommitModifyUserSetting","_UserSettingModalModifyMutation","commitCreateUser","isInFlightCommitCreateUser","_UserSettingModalCreateMutation","mutationToRemoveTotp","useTanMutation","mutationFn","remove_totp","INITIAL_VALUES","handleOk","async","_res$modify_user","_res$modify_user2","modify_user","errorMsgList","err","default_group_id","list","password","group_ids","_res$create_user","_res$create_user2","_res$create_user2$msg","_res$create_user3","create_user","confirmLoading","preserve","labelCol","wrapperCol","validateTrigger","marginBottom","marginTop","marginMD","disabled","pattern","Password","dependencies","getFieldValue","Error","TextArea","valuePropName","Switch","isPending","checked","_formRef$current2","setFieldValue","ExclamationCircleFilled","cancelText","mutate","onSuccess","_formRef$current3","log","_formRef$current4","UserResourcePolicySelector","TOTPActivateModal","userFrgmt","_formRef$current5","UserNodeList","isPendingStatusFetch","startStatusFetchTransition","activeFilter","setActiveFilter","emailForInfoModal","setEmailForInfoModal","emailForSettingModal","setEmailForSettingModal","openCreateModal","setOpenCreateModal","pendingUserId","setPendingUserId","user_nodes","_UserNodeListQuery","Boolean","commitModifyUser","isInFlightCommitModifyUser","_UserNodeListModifyMutation","_e$target","edges","defaultSortOrder","isActive","count","UserInfoModal","UserSettingModal","card","tabParam","withDefault","UserCredentialsPage","curTabKey","setCurTabKey","tabItems","BAICard","activeTabKey","onTabChange","tabList","Suspense","fallback","FlexActivityIndicator"],"sourceRoot":""}