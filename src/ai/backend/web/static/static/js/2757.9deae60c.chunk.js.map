{"version":3,"file":"static/js/2757.9deae60c.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/ahooks@3.8.1_react@18.3.1/node_modules/ahooks/es/useDynamicList/index.js"],"sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { useCallback, useRef, useState } from 'react';\nimport isDev from '../utils/isDev';\nvar useDynamicList = function (initialList) {\n  if (initialList === void 0) {\n    initialList = [];\n  }\n  var counterRef = useRef(-1);\n  var keyList = useRef([]);\n  var setKey = useCallback(function (index) {\n    counterRef.current += 1;\n    keyList.current.splice(index, 0, counterRef.current);\n  }, []);\n  var _a = __read(useState(function () {\n      initialList.forEach(function (_, index) {\n        setKey(index);\n      });\n      return initialList;\n    }), 2),\n    list = _a[0],\n    setList = _a[1];\n  var resetList = useCallback(function (newList) {\n    keyList.current = [];\n    setList(function () {\n      newList.forEach(function (_, index) {\n        setKey(index);\n      });\n      return newList;\n    });\n  }, []);\n  var insert = useCallback(function (index, item) {\n    setList(function (l) {\n      var temp = __spreadArray([], __read(l), false);\n      temp.splice(index, 0, item);\n      setKey(index);\n      return temp;\n    });\n  }, []);\n  var getKey = useCallback(function (index) {\n    return keyList.current[index];\n  }, []);\n  var getIndex = useCallback(function (key) {\n    return keyList.current.findIndex(function (ele) {\n      return ele === key;\n    });\n  }, []);\n  var merge = useCallback(function (index, items) {\n    setList(function (l) {\n      var temp = __spreadArray([], __read(l), false);\n      items.forEach(function (_, i) {\n        setKey(index + i);\n      });\n      temp.splice.apply(temp, __spreadArray([index, 0], __read(items), false));\n      return temp;\n    });\n  }, []);\n  var replace = useCallback(function (index, item) {\n    setList(function (l) {\n      var temp = __spreadArray([], __read(l), false);\n      temp[index] = item;\n      return temp;\n    });\n  }, []);\n  var remove = useCallback(function (index) {\n    setList(function (l) {\n      var temp = __spreadArray([], __read(l), false);\n      temp.splice(index, 1);\n      // remove keys if necessary\n      try {\n        keyList.current.splice(index, 1);\n      } catch (e) {\n        console.error(e);\n      }\n      return temp;\n    });\n  }, []);\n  var batchRemove = useCallback(function (indexes) {\n    if (!Array.isArray(indexes)) {\n      if (isDev) {\n        console.error(\"`indexes` parameter of `batchRemove` function expected to be an array, but got \\\"\".concat(typeof indexes, \"\\\".\"));\n      }\n      return;\n    }\n    if (!indexes.length) {\n      return;\n    }\n    setList(function (prevList) {\n      var newKeyList = [];\n      var newList = prevList.filter(function (item, index) {\n        var shouldKeep = !indexes.includes(index);\n        if (shouldKeep) {\n          newKeyList.push(getKey(index));\n        }\n        return shouldKeep;\n      });\n      keyList.current = newKeyList;\n      return newList;\n    });\n  }, []);\n  var move = useCallback(function (oldIndex, newIndex) {\n    if (oldIndex === newIndex) {\n      return;\n    }\n    setList(function (l) {\n      var newList = __spreadArray([], __read(l), false);\n      var temp = newList.filter(function (_, index) {\n        return index !== oldIndex;\n      });\n      temp.splice(newIndex, 0, newList[oldIndex]);\n      // move keys if necessary\n      try {\n        var keyTemp = keyList.current.filter(function (_, index) {\n          return index !== oldIndex;\n        });\n        keyTemp.splice(newIndex, 0, keyList.current[oldIndex]);\n        keyList.current = keyTemp;\n      } catch (e) {\n        console.error(e);\n      }\n      return temp;\n    });\n  }, []);\n  var push = useCallback(function (item) {\n    setList(function (l) {\n      setKey(l.length);\n      return l.concat([item]);\n    });\n  }, []);\n  var pop = useCallback(function () {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(0, keyList.current.length - 1);\n    } catch (e) {\n      console.error(e);\n    }\n    setList(function (l) {\n      return l.slice(0, l.length - 1);\n    });\n  }, []);\n  var unshift = useCallback(function (item) {\n    setList(function (l) {\n      setKey(0);\n      return [item].concat(l);\n    });\n  }, []);\n  var shift = useCallback(function () {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(1, keyList.current.length);\n    } catch (e) {\n      console.error(e);\n    }\n    setList(function (l) {\n      return l.slice(1, l.length);\n    });\n  }, []);\n  var sortList = useCallback(function (result) {\n    return result.map(function (item, index) {\n      return {\n        key: index,\n        item: item\n      };\n    }) // add index into obj\n    .sort(function (a, b) {\n      return getIndex(a.key) - getIndex(b.key);\n    }) // sort based on the index of table\n    .filter(function (item) {\n      return !!item.item;\n    }) // remove undefined(s)\n    .map(function (item) {\n      return item.item;\n    });\n  },\n  // retrive the data\n  []);\n  return {\n    list: list,\n    insert: insert,\n    merge: merge,\n    replace: replace,\n    remove: remove,\n    batchRemove: batchRemove,\n    getKey: getKey,\n    getIndex: getIndex,\n    move: move,\n    push: push,\n    pop: pop,\n    unshift: unshift,\n    shift: shift,\n    sortList: sortList,\n    resetList: resetList\n  };\n};\nexport default useDynamicList;"],"names":["initialList","counterRef","useRef","keyList","setKey","useCallback","index","current","splice","_a","__read","useState","forEach","_","list","setList","resetList","newList","insert","item","l","temp","__spreadArray","getKey","getIndex","key","findIndex","ele","merge","items","i","apply","replace","remove","e","console","error","batchRemove","indexes","Array","isArray","length","prevList","newKeyList","filter","shouldKeep","includes","push","isDev","concat","move","oldIndex","newIndex","keyTemp","pop","slice","unshift","shift","sortList","result","map","sort","a","b"],"sourceRoot":""}