{"version":3,"file":"static/js/3268.6b939b1d.chunk.js","mappings":"gTAWA,MA+FA,EA/F0DA,IAEnD,OADFC,GACJD,EACC,MAAM,EAAEE,IAAMC,EAAAA,EAAAA,OACR,MAAEC,GAAUC,EAAAA,EAAMC,YACjBC,GAAaC,OAAQC,KAAmBC,EAAAA,EAAAA,IAAU,IAClDC,EAAcC,GAAmBC,EAAAA,YAGlC,cAAEC,IAAkBC,EAAAA,EAAAA,uBACpBC,EAA8BC,IAClCL,EAAgBK,GAChBH,EAAc,SAAUG,EAAM,EAGhC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAWC,KAAI,CAACC,KAAK,YAAYC,MAAO,CAAEC,SAAUtB,EAAMuB,YAAaP,SACrElB,EAAE,wCAELgB,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACC,MAAM,QAAQC,IAAI,KAAIV,SAAA,EAC1BC,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CACPC,QAASzB,EACT0B,QAAUC,IACRzB,IACA,MAAM0B,EAAkBD,EACpBE,MAAQC,IAAI,EAAG,WAAWC,mBAC1BC,EACJvB,EAA2BmB,EAAgB,EAC3Cf,SAEDlB,EAAE,8BAELgB,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACY,UAAU,SAASX,MAAM,MAAKT,SAAA,EAClCC,EAAAA,EAAAA,KAACoB,EAAAA,EAAa,IACRxC,EACJyC,WAAY,CAAEC,SAAU,SACxBC,aAAeC,GACNA,EAAKC,SAASV,MAAQW,QAAQ,WAEvCC,UAAWzC,EACX0C,SAAU,CACRC,qBAAqB,GAEvBjC,MAAOV,EAAYI,OAAe4B,EAClCY,SAAWlC,IACTD,EAA2BC,EAAM,EAEnCmC,OAAQA,KACNpC,EAA2BL,EAAa,EAE1C0C,OACE9C,IAAcI,EACV,UACAyB,IAAMzB,GAAcmC,SAASV,OAC3B,aACAG,IAGThC,GAAaI,IACZO,EAAAA,EAAAA,MAACI,EAAAA,EAAWC,KAAI,CACdC,KAAK,YACLC,MAAO,CAAEC,SAAUtB,EAAMuB,WAAa,GAAIP,SAAA,CAC3C,IACGlB,EAAE,gCACJmB,EAAAA,EAAAA,KAACiC,EAAAA,EAAe,CACdC,SAAUA,KAESnB,IAAMzB,GAAc6C,KAAKpB,OAC3B,GACbpB,EACEoB,IAAMzB,GAAc0B,IAAI,EAAG,WAAWC,eAGnCF,IAAMzB,GAAc8C,WAE7BC,MAAO,MACP,OAILnD,IAAcI,IACbU,EAAAA,EAAAA,KAACC,EAAAA,EAAWC,KAAI,CACdC,KAAK,UACLC,MAAO,CAAEC,SAAUtB,EAAMuB,WAAa,GAAIP,SAEzClB,EAAE,oDAKV,C,0HCzFP,MA6BA,EA7BoDF,IAK7C,IAL8C,MACnDiB,EAAK,SACLkC,EAAQ,YACRQ,KACGC,GACJ5D,EACC,MAAO,CAAE6D,IAAwBC,EAAAA,EAAAA,GAAqB,CACpD7C,QACAkC,aAGF,OACE9B,EAAAA,EAAAA,KAAC0C,EAAAA,EAAU,CACT9C,MAAOA,EAAQmB,IAAMnB,QAASsB,EAC9BY,SAAWlC,IAAW,IAAD+C,EAAAC,EAAAC,EACfC,IAAAA,QAAUlD,KACZA,EAAQA,EAAM,IAEhB,MAAMmD,EAAWT,EACR,QADmBK,EACxB/C,SAAK,IAAA+C,OAAA,EAALA,EAAOK,SACF,QADUJ,EACfhD,SAAK,IAAAgD,GAAM,QAANC,EAALD,EAAOK,YAAI,IAAAJ,OAAN,EAALA,EAAa5B,cAEjBuB,EAAqBO,EAAS,KAE5BR,GACJ,C","sources":["components/BatchSessionScheduledTimeSetting.tsx","components/DatePickerISO.tsx"],"sourcesContent":["import BAIIntervalText from './BAIIntervalText';\nimport DatePickerISO, { DatePickerISOProps } from './DatePickerISO';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport Flex from './Flex';\nimport { useToggle } from 'ahooks';\nimport { Typography, Checkbox, theme } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props extends DatePickerISOProps {}\nconst BatchSessionScheduledTimeSetting: React.FC<Props> = ({\n  ...datePickerISOProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [isChecked, { toggle: toggleChecked }] = useToggle(false);\n  const [scheduleTime, setScheduleTime] = React.useState<\n    string | undefined | null\n  >();\n  const { dispatchEvent } = useWebComponentInfo();\n  const dispatchAndSetScheduleTime = (value: string | undefined | null) => {\n    setScheduleTime(value);\n    dispatchEvent('change', value);\n  };\n\n  return (\n    <>\n      <Typography.Text type=\"secondary\" style={{ fontSize: token.fontSizeSM }}>\n        {t('session.launcher.SessionStartTime')}\n      </Typography.Text>\n      <Flex align=\"start\" gap=\"sm\">\n        <Checkbox\n          checked={isChecked}\n          onClick={(v) => {\n            toggleChecked();\n            const newScheduleTime = v\n              ? dayjs().add(2, 'minutes').toISOString()\n              : undefined;\n            dispatchAndSetScheduleTime(newScheduleTime);\n          }}\n        >\n          {t('session.launcher.Enable')}\n        </Checkbox>\n        <Flex direction=\"column\" align=\"end\">\n          <DatePickerISO\n            {...datePickerISOProps}\n            popupStyle={{ position: 'fixed' }}\n            disabledDate={(date) => {\n              return date.isBefore(dayjs().startOf('minute'));\n            }}\n            disabled={!isChecked}\n            showTime={{\n              hideDisabledOptions: true,\n            }}\n            value={isChecked ? scheduleTime : undefined}\n            onChange={(value) => {\n              dispatchAndSetScheduleTime(value);\n            }}\n            onBlur={() => {\n              dispatchAndSetScheduleTime(scheduleTime);\n            }}\n            status={\n              isChecked && !scheduleTime\n                ? 'warning'\n                : dayjs(scheduleTime).isBefore(dayjs())\n                  ? 'error'\n                  : undefined\n            }\n          />\n          {isChecked && scheduleTime && (\n            <Typography.Text\n              type=\"secondary\"\n              style={{ fontSize: token.fontSizeSM - 2 }}\n            >\n              ({t('session.launcher.StartAfter')}\n              <BAIIntervalText\n                callback={() => {\n                  // Add 2 minutes if the schedule time is in the past\n                  const leftTime = dayjs(scheduleTime).diff(dayjs());\n                  if (leftTime < 0) {\n                    dispatchAndSetScheduleTime(\n                      dayjs(scheduleTime).add(2, 'minutes').toISOString(),\n                    );\n                  }\n                  return dayjs(scheduleTime).fromNow();\n                }}\n                delay={1000}\n              />\n              )\n            </Typography.Text>\n          )}\n          {isChecked && !scheduleTime && (\n            <Typography.Text\n              type=\"warning\"\n              style={{ fontSize: token.fontSizeSM - 2 }}\n            >\n              {t('session.launcher.StartTimeDoesNotApply')}\n            </Typography.Text>\n          )}\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default BatchSessionScheduledTimeSetting;\n","import { useControllableValue } from 'ahooks';\nimport { DatePicker } from 'antd';\nimport { PickerProps } from 'antd/es/date-picker/generatePicker';\nimport dayjs, { Dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React from 'react';\n\nexport interface DatePickerISOProps\n  extends Omit<PickerProps<Dayjs>, 'value' | 'onChange'> {\n  value?: string | undefined | null;\n  onChange?: (value: string | undefined) => void;\n  localFormat?: boolean;\n}\nconst DatePickerISO: React.FC<DatePickerISOProps> = ({\n  value,\n  onChange,\n  localFormat,\n  ...pickerProps\n}) => {\n  const [, setControllableValue] = useControllableValue({\n    value,\n    onChange,\n  });\n\n  return (\n    <DatePicker\n      value={value ? dayjs(value) : undefined}\n      onChange={(value) => {\n        if (_.isArray(value)) {\n          value = value[0];\n        }\n        const newValue = localFormat\n          ? value?.format()\n          : value?.tz()?.toISOString();\n        // \"2023-11-10T18:09:56+08:00\"\n        setControllableValue(newValue);\n      }}\n      {...pickerProps}\n    />\n  );\n};\n\nexport default DatePickerISO;\n"],"names":["_ref","datePickerISOProps","t","useTranslation","token","theme","useToken","isChecked","toggle","toggleChecked","useToggle","scheduleTime","setScheduleTime","React","dispatchEvent","useWebComponentInfo","dispatchAndSetScheduleTime","value","_jsxs","_Fragment","children","_jsx","Typography","Text","type","style","fontSize","fontSizeSM","Flex","align","gap","Checkbox","checked","onClick","v","newScheduleTime","dayjs","add","toISOString","undefined","direction","DatePickerISO","popupStyle","position","disabledDate","date","isBefore","startOf","disabled","showTime","hideDisabledOptions","onChange","onBlur","status","BAIIntervalText","callback","diff","fromNow","delay","localFormat","pickerProps","setControllableValue","useControllableValue","DatePicker","_value","_value2","_value2$tz","_","newValue","format","tz"],"sourceRoot":""}