{"version":3,"file":"static/js/2055.96d6d073.chunk.js","mappings":"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","sources":["__generated__/ChatCardQuery.graphql.ts","__generated__/ChatHeader_Endpoint.graphql.ts","__generated__/ChatPageQuery.graphql.ts","__generated__/EndpointSelectQuery.graphql.ts","__generated__/EndpointSelectValueQuery.graphql.ts","__generated__/EndpointTokenSelectQuery.graphql.ts","components/FluentEmojiIcon.tsx","hooks/useAIAgent.ts","components/Chat/AIAgentSelect.tsx","components/Chat/ChatModel.tsx","components/Chat/ChatParametersSliders.tsx","components/TotalFooter.tsx","components/Chat/EndpointSelect.tsx","hooks/usePaginatedQuery.ts","components/Chat/ModelSelect.tsx","components/Chat/ChatHeader.tsx","components/Chat/ChatSender.tsx","components/Chat/ChatInput.tsx","hooks/useTokenizer.ts","components/Chat/ChatTokenCounter.tsx","components/Chat/ChatMessageContainer.tsx","components/Chat/CopyButton.tsx","hooks/useHighlight.ts","components/Chat/SyntaxHighight.tsx","components/Chat/ChatMessageContent.tsx","components/Chat/ChatMessage.tsx","components/Chat/AssistantChatMesssage.tsx","components/Chat/ScrollBottomHandlerButton.tsx","components/Chat/VirtualChatMessageList.tsx","components/Chat/UserChatMesssage.tsx","components/Chat/ChatMessages.tsx","components/Chat/EndpointTokenSelect.tsx","components/Chat/CustomModelForm.tsx","components/Chat/ChatCard.tsx","components/Chat/ChatHistory.ts","pages/ChatPage.tsx"],"sourcesContent":["/**\n * @generated SignedSource<<e5d693125b3adaa1a4eae699dd1aee12>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs, Result } from \"relay-runtime\";\nexport type ChatCardQuery$variables = {\n  endpointId: string;\n};\nexport type ChatCardQuery$data = {\n  readonly endpoint: Result<{\n    readonly endpoint_id: string | null | undefined;\n    readonly url: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ChatHeader_Endpoint\">;\n  } | null | undefined, unknown>;\n};\nexport type ChatCardQuery = {\n  response: ChatCardQuery$data;\n  variables: ChatCardQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpointId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ChatCardQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": {\n          \"alias\": null,\n          \"args\": (v1/*: any*/),\n          \"concreteType\": \"Endpoint\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"endpoint\",\n          \"plural\": false,\n          \"selections\": [\n            (v2/*: any*/),\n            (v3/*: any*/),\n            {\n              \"args\": null,\n              \"kind\": \"FragmentSpread\",\n              \"name\": \"ChatHeader_Endpoint\"\n            }\n          ],\n          \"storageKey\": null\n        },\n        \"to\": \"RESULT\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ChatCardQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"6e2c7cca467d32f74de4ddf840a8f08a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ChatCardQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ChatCardQuery(\\n  $endpointId: UUID!\\n) {\\n  endpoint(endpoint_id: $endpointId) {\\n    endpoint_id\\n    url\\n    ...ChatHeader_Endpoint\\n    id\\n  }\\n}\\n\\nfragment ChatHeader_Endpoint on Endpoint {\\n  endpoint_id\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"5ff3fd270fca0bac7779be279e93341e\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c53946a820e47295c1530ab5d02ed807>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ChatHeader_Endpoint$data = {\n  readonly endpoint_id: string | null | undefined;\n  readonly \" $fragmentType\": \"ChatHeader_Endpoint\";\n};\nexport type ChatHeader_Endpoint$key = {\n  readonly \" $data\"?: ChatHeader_Endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ChatHeader_Endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ChatHeader_Endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"baa41c02cf67330c6bf4313d43280faa\";\n\nexport default node;\n","/**\n * @generated SignedSource<<52124f4a9df40dc678d068524dbcfceb>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ChatPageQuery$variables = {\n  filter?: string | null | undefined;\n};\nexport type ChatPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type ChatPageQuery = {\n  response: ChatPageQuery$data;\n  variables: ChatPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"filter\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 1\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"offset\",\n    \"value\": 0\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"763e262ee50ff2487754885efebacb90\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ChatPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ChatPageQuery(\\n  $filter: String\\n) {\\n  endpoint_list(limit: 1, offset: 0, filter: $filter) {\\n    items {\\n      endpoint_id\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"81b9bb8d9bd90410dd13088b30f18dc2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<082ee34999eb1cf06d1c21de59385e0d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type EndpointSelectQuery$variables = {\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n};\nexport type EndpointSelectQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string;\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointSelectQuery = {\n  response: EndpointSelectQuery$data;\n  variables: EndpointSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v7/*: any*/),\n                \"action\": \"NONE\"\n              },\n              (v8/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v1/*: any*/),\n      (v3/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"aae5f818f3d7f1a77dce26a43ed1ead6\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      url\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"75cd9e15a8e37c564ec047492c6798b3\";\n\nexport default node;\n","/**\n * @generated SignedSource<<a9b0e2dcfa6a989d5e9e95f31d87b20d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type EndpointSelectValueQuery$variables = {\n  endpoint_id: string;\n};\nexport type EndpointSelectValueQuery$data = {\n  readonly endpoint: {\n    readonly endpoint_id: string;\n    readonly name: string | null | undefined;\n    readonly url: string | null | undefined;\n  } | null | undefined;\n};\nexport type EndpointSelectValueQuery = {\n  response: EndpointSelectValueQuery$data;\n  variables: EndpointSelectValueQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpoint_id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpoint_id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectValueQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"kind\": \"RequiredField\",\n            \"field\": (v3/*: any*/),\n            \"action\": \"NONE\"\n          },\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectValueQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"305b4336fc43ab460edf54efa95ff116\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectValueQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectValueQuery(\\n  $endpoint_id: UUID!\\n) {\\n  endpoint(endpoint_id: $endpoint_id) {\\n    name\\n    endpoint_id\\n    url\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"5f7c6954ddf84a211dc8428e86004300\";\n\nexport default node;\n","/**\n * @generated SignedSource<<715fa760caad46a2fadd8e35e197b7ac>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { Result } from \"relay-runtime\";\nexport type EndpointTokenSelectQuery$variables = {\n  endpointId: string;\n  isEmptyEndpointId: boolean;\n};\nexport type EndpointTokenSelectQuery$data = {\n  readonly endpoint_token_list: Result<{\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly id: string | null | undefined;\n      readonly token: string;\n      readonly valid_until: string | null | undefined;\n    } | null | undefined>;\n  } | null | undefined, unknown>;\n};\nexport type EndpointTokenSelectQuery = {\n  response: EndpointTokenSelectQuery$data;\n  variables: EndpointTokenSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isEmptyEndpointId\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": [\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"endpoint_id\",\n      \"variableName\": \"endpointId\"\n    },\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"limit\",\n      \"value\": 100\n    },\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"offset\",\n      \"value\": 0\n    }\n  ],\n  \"concreteType\": \"EndpointTokenList\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"endpoint_token_list\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"EndpointToken\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"items\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"id\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"token\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"created_at\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"valid_until\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": (v1/*: any*/),\n        \"to\": \"RESULT\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"selections\": [\n      (v1/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"f8777131f4094de086beaa0e11d6ae09\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointTokenSelectQuery(\\n  $endpointId: UUID!\\n  $isEmptyEndpointId: Boolean!\\n) {\\n  endpoint_token_list(offset: 0, limit: 100, endpoint_id: $endpointId) @skipOnClient(if: $isEmptyEndpointId) {\\n    items {\\n      id\\n      token\\n      created_at\\n      valid_until\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"839fdaad7009de6f1d8dc79de4e35a3d\";\n\nexport default node;\n","import * as fluentEmoji from '@iconify-json/fluent-emoji-flat';\nimport React from 'react';\n\nexport const FluentEmojiIcon: React.FC<{\n  name?: string;\n  height?: number;\n  width?: number;\n}> = ({ name, height, width }) => {\n  const icon = fluentEmoji.icons.icons[name ?? 'pure'];\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      height={height}\n      width={width}\n      role=\"img\"\n      dangerouslySetInnerHTML={{ __html: icon.body }}\n    />\n  );\n};\n","import { useUpdatableState } from '.';\nimport { useTanQuery } from './reactQueryAlias';\nimport { useCallback } from 'react';\n\nexport interface AIAgentMeta {\n  title: string;\n  avatar?: string;\n  background?: string;\n  descriptions?: string;\n  tags?: string[];\n}\n\nexport interface AIAgentConfig {\n  system_prompt: string;\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgentParams {\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stop?: string | string[];\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgent {\n  id: string;\n  endpoint: string;\n  endpoint_id: string;\n  config: AIAgentConfig;\n  meta: AIAgentMeta;\n  params?: AIAgentParams;\n}\n\nexport interface AIAgents {\n  agents: AIAgent[];\n}\n\nconst TIMEOUT_24_HOURS = 24 * 60 * 60 * 1000;\n\nexport const useAIAgent = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data: agentsData, isLoading } = useTanQuery<AIAgents>({\n    queryKey: ['useAgents', key],\n    queryFn: () => {\n      return fetch('resources/ai-agents.json').then((response) =>\n        response.json(),\n      );\n    },\n    staleTime: TIMEOUT_24_HOURS, // 24 hours\n  });\n\n  return {\n    agents: agentsData?.agents ?? [],\n    isLoading,\n    refresh: useCallback(() => checkUpdate(), [checkUpdate]),\n  };\n};\n","import { AIAgent, useAIAgent } from '../../hooks/useAIAgent';\nimport Flex from '../Flex';\nimport { FluentEmojiIcon } from '../FluentEmojiIcon';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps, theme } from 'antd';\nimport React, { useState, useTransition } from 'react';\n\ninterface ChatAgentSelectProps extends Omit<SelectProps, 'options'> {}\n\nfunction makeAgentOptions(agents: AIAgent[], filter?: string) {\n  return agents\n    .map((agent) => ({\n      label: agent.meta.title,\n      value: agent.id,\n      ...agent,\n    }))\n    .filter((agent) => {\n      return agent.label.toLocaleLowerCase().includes(filter || '');\n    });\n}\n\nconst AIAgentSelect: React.FC<ChatAgentSelectProps> = ({\n  loading,\n  ...props\n}) => {\n  const { token } = theme.useToken();\n  const [controllableValue, setControllableValue] = useControllableValue(props);\n\n  const [searchAgent, setSearchAgent] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  const { agents } = useAIAgent();\n  const selectedAgent = agents.find((agent) => agent.id === controllableValue);\n\n  return (\n    <>\n      {selectedAgent && (\n        <Flex gap=\"xs\">\n          <FluentEmojiIcon\n            name={selectedAgent.meta.avatar}\n            height={token.sizeXL}\n            width={token.sizeXL}\n          />\n          <Select\n            showSearch\n            onSearch={(v) => {\n              startSearchTransition(() => {\n                setSearchAgent(v);\n              });\n            }}\n            filterOption={false}\n            loading={isSearchPending || loading}\n            options={makeAgentOptions(agents, searchAgent)}\n            value={controllableValue}\n            onChange={(v, agent) => {\n              setControllableValue(v, agent);\n            }}\n            popupMatchSelectWidth={false}\n          />\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default AIAgentSelect;\n","import type { AIAgent } from '../../hooks/useAIAgent';\nimport { APICallError } from 'ai';\nimport type { UIMessage } from 'ai';\n\nexport interface ChatProviderData {\n  basePath?: string;\n  baseURL?: string;\n  endpointId?: string;\n  agentId?: string;\n  modelId?: string;\n  apiKey?: string;\n}\n\nexport interface ChatParameters {\n  maxTokens: number;\n  temperature: number;\n  topP: number;\n  topK: number;\n  frequencyPenalty: number;\n  presencePenalty: number;\n}\n\nexport type ChatMessage = UIMessage;\n\nexport interface ChatData {\n  id: string;\n  sync: boolean;\n  usingParameters: boolean;\n  parameters: ChatParameters;\n  provider: ChatProviderData;\n  agent?: AIAgent;\n  messages: ChatMessage[];\n}\n\nexport interface ChatModel {\n  id: string;\n  name?: string;\n  group?: string;\n  created?: string;\n  description?: string;\n}\n\nexport function getAIErrorMessage(error: unknown): string {\n  try {\n    if (APICallError.isInstance(error)) {\n      if (!error.responseBody) {\n        return error.message;\n      }\n\n      const errorBody = JSON.parse(error.responseBody || '{}');\n\n      return errorBody.message;\n    } else if (error instanceof Error) {\n      return error.message;\n    } else if (typeof error === 'string') {\n      return error;\n    }\n  } catch {}\n\n  return 'Unknown error:' + error;\n}\n\nexport const DEFAULT_CHAT_PARAMETERS = {\n  maxTokens: 4096,\n  temperature: 0.7,\n  topP: 1,\n  topK: 1,\n  frequencyPenalty: 1,\n  presencePenalty: 1,\n};\n\nexport function getLatestUserMessage(messages: Array<ChatMessage>) {\n  const userMessages = messages.filter((message) => message.role === 'user');\n  return userMessages.at(-1);\n}\n","import InputNumberWithSlider from '../InputNumberWithSlider';\nimport QuestionIconWithTooltip from '../QuestionIconWithTooltip';\nimport { DEFAULT_CHAT_PARAMETERS, type ChatParameters } from './ChatModel';\nimport {\n  ConfigProvider,\n  Divider,\n  Flex,\n  Form,\n  Switch,\n  theme,\n  Typography,\n} from 'antd';\nimport { t } from 'i18next';\nimport { useRef } from 'react';\n\ntype ChatParameterChangeEventHandler = (event: {\n  id: string;\n  value: number;\n}) => void;\n\ninterface ChatParameterSliderData {\n  label: string;\n  max: number;\n  min: number;\n  step: number;\n  value?: number;\n  description?: string;\n}\n\ninterface ChatParameterSliderFormItemProps extends ChatParameterSliderData {\n  id: string;\n  onChange?: ChatParameterChangeEventHandler;\n}\n\nconst ChatParameterSliderFormItem = ({\n  id,\n  label,\n  max,\n  min,\n  step,\n  description,\n  disabled,\n}: ChatParameterSliderFormItemProps & { disabled: boolean }) => {\n  const { token } = theme.useToken();\n  return (\n    <Form.Item\n      label={\n        <Flex justify=\"between\" style={{ width: '240px' }}>\n          <Flex gap={'xxs'}>\n            <Typography.Text\n              style={{\n                fontSize: token.fontSizeSM,\n                marginRight: token.marginXXS,\n              }}\n            >\n              {label}\n            </Typography.Text>\n            {description && (\n              <QuestionIconWithTooltip title={description} trigger=\"hover\" />\n            )}\n          </Flex>\n        </Flex>\n      }\n      name={id}\n    >\n      <InputNumberWithSlider\n        disabled={disabled}\n        min={min}\n        max={max}\n        step={step ?? null}\n      />\n    </Form.Item>\n  );\n};\n\nconst chatParameters: Record<string, ChatParameterSliderData> = {\n  maxTokens: {\n    label: 'Max Tokens',\n    min: 50,\n    max: 16384,\n    step: 1,\n    description: t('chatui.chat.parameter.MaxTokens'),\n  },\n  temperature: {\n    label: 'Temperature',\n    min: 0.0,\n    max: 1,\n    step: 0.01,\n    description: t('chatui.chat.parameter.Temperature'),\n  },\n  topP: {\n    label: 'Top P',\n    min: 0.0,\n    max: 1,\n    step: 0.01,\n    description: t('chatui.chat.parameter.TopP'),\n  },\n  topK: {\n    label: 'Top K',\n    min: 1,\n    max: 500,\n    step: 1,\n    description: t('chatui.chat.parameter.TopK'),\n  },\n  frequencyPenalty: {\n    label: 'Frequency Penalty',\n    min: 0,\n    max: 2,\n    step: 0.01,\n    description: t('chatui.chat.parameter.FrequencyPenalty'),\n  },\n  presencePenalty: {\n    label: 'Presence Penalty',\n    min: 0,\n    max: 2,\n    step: 0.01,\n    description: t('chatui.chat.parameter.PresencePenalty'),\n  },\n};\n\nexport const ChatParametersSliders = ({\n  parameters,\n  usingParameters,\n  onChangeParameter,\n}: {\n  parameters: ChatParameters;\n  usingParameters: boolean;\n  onChangeParameter: (\n    usingParameters: boolean,\n    parameters: ChatParameters,\n  ) => void;\n}) => {\n  const { token } = theme.useToken();\n  const currentParameters = useRef<ChatParameters>(\n    Object.keys(parameters).length > 0 ? parameters : DEFAULT_CHAT_PARAMETERS,\n  );\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Form: {\n            verticalLabelPadding: 0,\n            itemMarginBottom: token.marginXXS,\n          },\n        },\n      }}\n    >\n      <Form\n        size=\"small\"\n        layout=\"vertical\"\n        initialValues={\n          Object.keys(parameters).length > 0\n            ? parameters\n            : DEFAULT_CHAT_PARAMETERS\n        }\n        onValuesChange={(values) => {\n          currentParameters.current = {\n            ...currentParameters.current,\n            ...values,\n          };\n          onChangeParameter(usingParameters, {\n            ...currentParameters.current,\n          });\n        }}\n      >\n        <Flex align=\"center\" justify=\"space-between\">\n          <Typography.Text\n            style={{ fontSize: token.fontSizeLG, marginLeft: token.marginXXS }}\n          >\n            {t('chatui.chat.parameter.Title')}\n          </Typography.Text>\n          <Switch\n            checked={usingParameters}\n            onChange={() => {\n              onChangeParameter(!usingParameters, {\n                ...currentParameters.current,\n              });\n            }}\n          />\n        </Flex>\n        <Divider\n          style={{\n            marginBlock: token.marginSM,\n          }}\n        />\n        {Object.entries(chatParameters).map(([id, params]) => (\n          <ChatParameterSliderFormItem\n            disabled={!usingParameters}\n            key={id}\n            id={id}\n            {...params}\n          />\n        ))}\n      </Form>\n    </ConfigProvider>\n  );\n};\n","import Flex from './Flex';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { theme, Typography } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst TotalFooter: React.FC<{\n  loading?: boolean;\n  total?: number;\n}> = ({ loading, total }) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  return (\n    <Flex justify=\"end\" gap={'xs'}>\n      {loading ? (\n        <LoadingOutlined\n          spin\n          style={{\n            color: token.colorTextSecondary,\n          }}\n        />\n      ) : (\n        <div />\n      )}\n      <Typography.Text type=\"secondary\">\n        {t('general.TotalItems', {\n          total: total,\n        })}\n      </Typography.Text>\n    </Flex>\n  );\n};\n\nexport default TotalFooter;\n","import {\n  EndpointSelectQuery,\n  EndpointSelectQuery$data,\n} from '../../__generated__/EndpointSelectQuery.graphql';\nimport { EndpointSelectValueQuery } from '../../__generated__/EndpointSelectValueQuery.graphql';\nimport { useSuspendedBackendaiClient } from '../../hooks';\nimport { useLazyPaginatedQuery } from '../../hooks/usePaginatedQuery';\nimport BAILink from '../BAILink';\nimport BAISelect from '../BAISelect';\nimport TotalFooter from '../TotalFooter';\nimport { useControllableValue } from 'ahooks';\nimport { GetRef, SelectProps, Skeleton, Tooltip } from 'antd';\nimport { Flex } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport { InfoIcon } from 'lucide-react';\nimport React, { useDeferredValue, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\n\nexport type Endpoint = NonNullable<\n  NonNullableItem<EndpointSelectQuery$data['endpoint_list']>\n>;\n\nexport interface EndpointSelectProps\n  extends Omit<SelectProps, 'options' | 'labelInValue'> {\n  fetchKey?: string;\n  lifecycleStageFilter?: LifecycleStage[];\n}\n\ntype LifecycleStage = 'created' | 'destroying' | 'destroyed';\n\nconst EndpointSelect: React.FC<EndpointSelectProps> = ({\n  fetchKey,\n  lifecycleStageFilter = ['created'],\n  loading,\n  ...selectPropsWithoutLoading\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const [controllableValue, setControllableValue] = useControllableValue<\n    string | undefined\n  >(selectPropsWithoutLoading);\n  const [controllableOpen, setControllableOpen] = useControllableValue<boolean>(\n    selectPropsWithoutLoading,\n    {\n      valuePropName: 'open',\n      trigger: 'onDropdownVisibleChange',\n    },\n  );\n  const deferredOpen = useDeferredValue(controllableOpen);\n  const [searchStr, setSearchStr] = useState<string>();\n  const deferredSearchStr = useDeferredValue(searchStr);\n\n  const selectRef = useRef<GetRef<typeof BAISelect> | null>(null);\n\n  const lifecycleStageFilterStr = lifecycleStageFilter\n    .map((v) => `lifecycle_stage == \"${v}\"`)\n    .join(' | ');\n\n  const { endpoint: selectedEndpoint } =\n    useLazyLoadQuery<EndpointSelectValueQuery>(\n      graphql`\n        query EndpointSelectValueQuery($endpoint_id: UUID!) {\n          endpoint(endpoint_id: $endpoint_id) {\n            name\n            endpoint_id @required(action: NONE)\n            url\n          }\n        }\n      `,\n      {\n        endpoint_id: controllableValue ?? '',\n      },\n      {\n        // to skip the query when controllableValue is empty\n        fetchPolicy: controllableValue ? 'store-or-network' : 'store-only',\n      },\n    );\n\n  const {\n    paginationData,\n    result: { endpoint_list },\n    loadNext,\n    isLoadingNext,\n  } = useLazyPaginatedQuery<\n    EndpointSelectQuery,\n    NonNullable<\n      EndpointSelectQuery['response']['endpoint_list']\n    >['items'][number]\n  >(\n    graphql`\n      query EndpointSelectQuery(\n        $offset: Int!\n        $limit: Int!\n        $projectID: UUID\n        $filter: String\n      ) {\n        endpoint_list(\n          offset: $offset\n          limit: $limit\n          project: $projectID\n          filter: $filter\n        ) {\n          total_count\n          items {\n            name\n            endpoint_id @required(action: NONE)\n            url\n          }\n        }\n      }\n    `,\n    {\n      limit: 10,\n    },\n    {\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? [\n            lifecycleStageFilterStr,\n            deferredSearchStr\n              ? `name ilike \"%${deferredSearchStr}%\"`\n              : undefined,\n          ]\n            .filter(Boolean)\n            .map((v) => `(${v})`)\n            .join(' & ')\n        : undefined,\n    },\n    // TODO: skip fetch when the option popover is closed\n    {\n      fetchKey,\n      fetchPolicy: deferredOpen ? 'network-only' : 'store-only',\n    },\n    {\n      getTotal: (result) => result.endpoint_list?.total_count,\n      getItem: (result) => result.endpoint_list?.items,\n      getId: (item) => item?.endpoint_id,\n    },\n  );\n\n  const selectOptions = _.map(paginationData, (item) => {\n    return {\n      label: item?.name,\n      value: item?.endpoint_id,\n      endpoint: item,\n    };\n  });\n\n  const [optimisticValueWithLabel, setOptimisticValueWithLabel] = useState(\n    selectedEndpoint\n      ? {\n          label: selectedEndpoint?.name || undefined,\n          value: selectedEndpoint?.endpoint_id || undefined,\n        }\n      : controllableValue\n        ? {\n            label: controllableValue,\n            value: controllableValue,\n          }\n        : controllableValue,\n  );\n\n  const isValueMatched = searchStr === deferredSearchStr;\n  useEffect(() => {\n    if (isValueMatched) {\n      // Scroll dropdown to top position when search completes (search value matches deferred value)\n      // This ensures users see the top results immediately after search processing\n      selectRef.current?.scrollTo(0);\n    }\n  }, [isValueMatched]);\n  return (\n    <BAISelect\n      ref={selectRef}\n      placeholder={t('chatui.SelectEndpoint')}\n      style={{\n        minWidth: 100,\n      }}\n      showSearch\n      searchValue={searchStr}\n      onSearch={(v) => {\n        setSearchStr(v);\n      }}\n      labelRender={({ label }: { label: React.ReactNode }) => {\n        return label ? (\n          <Flex gap=\"xxs\">\n            {label}\n            <Tooltip title={t('general.NavigateToDetailPage')}>\n              <BAILink to={`/serving/${selectedEndpoint?.endpoint_id}`}>\n                <InfoIcon />\n              </BAILink>\n            </Tooltip>\n          </Flex>\n        ) : (\n          label\n        );\n      }}\n      // TODO: Need to make it work properly when autoClearSearchValue is not specified\n      autoClearSearchValue\n      filterOption={false}\n      loading={searchStr !== deferredSearchStr || loading}\n      options={selectOptions}\n      {...selectPropsWithoutLoading}\n      // override value and onChange\n      labelInValue // use labelInValue to display the selected option label\n      value={optimisticValueWithLabel}\n      onChange={(v, option) => {\n        setOptimisticValueWithLabel(v);\n        setControllableValue(v.value, _.castArray(option)?.[0].endpoint);\n        selectPropsWithoutLoading.onChange?.(v.value || '', option);\n      }}\n      endReached={() => {\n        loadNext();\n      }}\n      open={controllableOpen}\n      onDropdownVisibleChange={setControllableOpen}\n      notFoundContent={\n        _.isUndefined(paginationData) ? (\n          // For the first loading options\n          <Skeleton.Input active size=\"small\" block />\n        ) : undefined\n      }\n      footer={\n        _.isNumber(endpoint_list?.total_count) &&\n        endpoint_list.total_count > 0 ? (\n          <TotalFooter\n            loading={isLoadingNext}\n            total={endpoint_list?.total_count}\n          />\n        ) : undefined\n      }\n    />\n  );\n};\n\nexport default EndpointSelect;\n","import { useEventNotStable } from './useEventNotStable';\nimport _ from 'lodash';\nimport { useState, useTransition, useMemo, useRef, useEffect } from 'react';\nimport { GraphQLTaggedNode, useLazyLoadQuery } from 'react-relay';\nimport { OperationType } from 'relay-runtime';\n\ntype extraOptions<Result, ItemType> = {\n  getItem: (result: Result) => any;\n  getTotal: (result: Result) => number | undefined;\n  getId: (item: ItemType) => string | undefined | null;\n};\nexport function useLazyPaginatedQuery<\n  T extends OperationType & {\n    variables: { limit: number; offset: number };\n  },\n  ItemType,\n>(\n  query: GraphQLTaggedNode,\n  initialPaginationVariables: Pick<T['variables'], 'limit'>,\n  otherVariables: Omit<Partial<T['variables']>, 'limit' | 'offset'>,\n  options: Parameters<typeof useLazyLoadQuery<T>>[2],\n  { getItem, getId, getTotal }: extraOptions<T['response'], ItemType>,\n) {\n  const previousResult = useRef<T['response'][]>([]);\n  const [isLoadingNext, startLoadingNextTransition] = useTransition();\n\n  // limit doesn't change after the first render\n  const [limit] = useState(initialPaginationVariables.limit);\n  const [offset, setOffset] = useState(0);\n\n  const previousOtherVariablesRef = useRef(otherVariables);\n\n  const isNewOtherVariables = !_.isEqual(\n    previousOtherVariablesRef.current,\n    otherVariables,\n  );\n\n  // Fetch the initial data using useLazyLoadQuery\n  const result = useLazyLoadQuery<T>(\n    query,\n    {\n      limit: isNewOtherVariables ? initialPaginationVariables.limit : limit,\n      offset: isNewOtherVariables ? 0 : offset,\n      ...otherVariables,\n    },\n    options,\n  );\n\n  const data = useMemo(() => {\n    const items = getItem(result);\n    if (isNewOtherVariables) {\n      previousResult.current = [];\n    }\n    return items\n      ? _.uniqBy([...previousResult.current, ...items], getId)\n      : undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [result]);\n\n  const hasNext = offset + limit < (getTotal(result) as number);\n\n  const loadNext = useEventNotStable(() => {\n    if (isLoadingNext || !hasNext) return;\n    previousResult.current = data || [];\n    startLoadingNextTransition(() => {\n      const nextOffset = offset + limit;\n      setOffset(nextOffset);\n    });\n  });\n\n  useEffect(() => {\n    // Reset the offset and limit when otherVariables change after success rendering\n    if (isNewOtherVariables) {\n      previousOtherVariablesRef.current = otherVariables;\n      setOffset(0);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isNewOtherVariables]);\n\n  return {\n    paginationData: data,\n    result,\n    loadNext,\n    hasNext,\n    isLoadingNext,\n  };\n}\n","import type { ChatModel } from './ChatModel';\nimport { Select, type SelectProps } from 'antd';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModelSelectProps extends SelectProps {\n  models?: Array<ChatModel>;\n}\n\nconst ModelSelect: React.FC<ModelSelectProps> = ({\n  models,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectModel')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      options={_.chain(models)\n        .groupBy('group')\n        .mapValues((ms) =>\n          _.map(ms, ({ name }) => ({\n            label: name,\n            value: name,\n          })),\n        )\n        .map((v, k) => ({\n          label: k === 'undefined' ? 'Others' : k,\n          options: v,\n        }))\n        .value()}\n      popupMatchSelectWidth={false}\n      {...selectProps}\n    />\n  );\n};\n\nexport default ModelSelect;\n","import { ChatHeader_Endpoint$key } from '../../__generated__/ChatHeader_Endpoint.graphql';\nimport { filterEmptyItem } from '../../helper';\nimport { useWebUINavigate } from '../../hooks';\nimport { AIAgent } from '../../hooks/useAIAgent';\nimport { useBAISettingUserState } from '../../hooks/useBAISetting';\nimport Flex from '../Flex';\nimport AIAgentSelect from './AIAgentSelect';\nimport type { ChatModel, ChatParameters } from './ChatModel';\nimport { ChatParametersSliders } from './ChatParametersSliders';\nimport EndpointSelect, { EndpointSelectProps } from './EndpointSelect';\nimport ModelSelect from './ModelSelect';\nimport {\n  CloseOutlined,\n  ControlOutlined,\n  MoreOutlined,\n} from '@ant-design/icons';\nimport { Dropdown, Button, theme, MenuProps, Popover, Tooltip } from 'antd';\nimport { isEmpty } from 'lodash';\nimport {\n  ScaleIcon,\n  EraserIcon,\n  ToggleRightIcon,\n  ToggleLeftIcon,\n  ArrowRightLeftIcon,\n} from 'lucide-react';\nimport React, { startTransition, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useFragment } from 'react-relay';\n\ninterface SyncSwitchProps {\n  sync: boolean;\n  onClick: (sync: boolean) => void;\n}\n\nconst SyncSwitch: React.FC<SyncSwitchProps> = ({ sync, onClick }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  return (\n    <>\n      <Tooltip title={t('chatui.SyncInput')}>\n        <Button\n          type=\"text\"\n          icon={sync ? <ToggleRightIcon /> : <ToggleLeftIcon />}\n          onClick={() => onClick(!sync)}\n          style={{\n            marginLeft: 8,\n            color: sync ? token.colorPrimary : undefined,\n          }}\n        />\n      </Tooltip>\n    </>\n  );\n};\n\ninterface ChatHeaderProps {\n  showCompareMenuItem?: boolean;\n  closable?: boolean;\n  cloneable?: boolean;\n  models: ChatModel[];\n  modelId: string;\n  onChangeModel: (modelId: string) => void;\n  endpointFrgmt?: ChatHeader_Endpoint$key | null;\n  onChangeEndpoint: EndpointSelectProps['onChange'];\n  agents: AIAgent[];\n  agent?: AIAgent;\n  onChangeAgent: (agent: AIAgent) => void;\n  sync: boolean;\n  onChangeSync: (sync: boolean) => void;\n  fetchKey: string;\n  onClearMessage?: () => void;\n  onRemoveChat?: () => void;\n  onAddChat?: () => void;\n  parameters: ChatParameters;\n  usingParameters: boolean;\n  onChangeParameter: (\n    usingParameters: boolean,\n    parameters: ChatParameters,\n  ) => void;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\n  showCompareMenuItem,\n  closable,\n  cloneable,\n  models,\n  modelId,\n  onChangeModel,\n  endpointFrgmt,\n  onChangeEndpoint,\n  agent,\n  onChangeAgent,\n  sync,\n  onChangeSync,\n  onRemoveChat,\n  onAddChat,\n  fetchKey,\n  parameters,\n  usingParameters,\n  onChangeParameter,\n  onClearMessage,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const webuiNavigate = useWebUINavigate();\n\n  const [isPendingEndpointTransition, startEndpointTransition] =\n    useTransition();\n  const [isPendingAgentTransition, startAgentTransition] = useTransition();\n\n  // Using fragment instead of just endpoint_id to support future EndpointSelect extensions\n  const endpoint = useFragment(\n    graphql`\n      fragment ChatHeader_Endpoint on Endpoint {\n        endpoint_id\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const items: MenuProps['items'] = filterEmptyItem([\n    showCompareMenuItem && {\n      key: 'compare',\n      label: t('chatui.CompareWithOtherModels'),\n      icon: <ScaleIcon />,\n      onClick: () => {\n        webuiNavigate({\n          pathname: '/serving',\n          search: new URLSearchParams({\n            tab: 'chatting',\n            endpointId: endpoint?.endpoint_id ?? '',\n            modelId: modelId,\n          }).toString(),\n        });\n      },\n    },\n    showCompareMenuItem && {\n      type: 'divider',\n    },\n    {\n      key: 'clear',\n      label: t('chatui.DeleteChatHistory'),\n      icon: <EraserIcon />,\n      onClick: () => {\n        onClearMessage?.();\n      },\n    },\n    closable && {\n      type: 'divider',\n    },\n    closable && {\n      key: 'close',\n      danger: true,\n      label: t('chatui.DeleteChattingSession'),\n      icon: <CloseOutlined />,\n      onClick: () => {\n        onRemoveChat?.();\n      },\n    },\n  ]);\n\n  const [experimentalAIAgents] = useBAISettingUserState(\n    'experimental_ai_agents',\n  );\n\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"start\"\n      wrap=\"wrap\"\n      gap=\"xs\"\n      style={{\n        minHeight: '56px',\n        width: '100%',\n        paddingTop: token.paddingXS,\n        paddingBottom: token.paddingXS,\n      }}\n    >\n      <Flex\n        wrap=\"wrap\"\n        align=\"start\"\n        gap=\"xs\"\n        style={{\n          flexGrow: 1,\n          flexShrink: 1,\n          flexBasis: 'auto',\n        }}\n      >\n        {experimentalAIAgents && (\n          <AIAgentSelect\n            loading={isPendingAgentTransition}\n            value={agent?.id}\n            onChange={(_, agent: any) => {\n              startAgentTransition(() => {\n                onChangeAgent(agent);\n              });\n            }}\n          />\n        )}\n        <EndpointSelect\n          fetchKey={fetchKey}\n          loading={isPendingEndpointTransition}\n          onChange={(id) => {\n            startEndpointTransition(() => {\n              onChangeEndpoint?.(id);\n            });\n          }}\n          value={endpoint?.endpoint_id}\n          popupMatchSelectWidth={false}\n        />\n        {!isEmpty(models) && (\n          <ModelSelect\n            models={models}\n            value={modelId}\n            onChange={(modelId) => {\n              startTransition(() => {\n                onChangeModel(modelId);\n              });\n            }}\n          />\n        )}\n      </Flex>\n      <Flex style={{ zIndex: 1 }}>\n        {closable && (\n          <SyncSwitch\n            sync={sync}\n            onClick={(checked) => {\n              startTransition(() => {\n                onChangeSync(checked);\n              });\n            }}\n          />\n        )}\n        <Popover\n          content={\n            <ChatParametersSliders\n              parameters={parameters}\n              usingParameters={usingParameters}\n              onChangeParameter={(usingParameters, parameters) => {\n                startTransition(() => {\n                  onChangeParameter(usingParameters, parameters);\n                });\n              }}\n            />\n          }\n          trigger=\"click\"\n          placement=\"bottomLeft\"\n          style={{\n            padding: token.paddingXS,\n          }}\n        >\n          <Tooltip title={t('chatui.chat.parameter.Title')}>\n            <Button\n              type=\"text\"\n              icon={\n                <ControlOutlined\n                  style={{\n                    color: usingParameters ? token.colorPrimary : undefined,\n                  }}\n                />\n              }\n            />\n          </Tooltip>\n        </Popover>\n        {cloneable && (\n          <Tooltip title={t('chatui.CreateCompareChat')}>\n            <Button\n              type=\"text\"\n              onClick={() => onAddChat?.()}\n              icon={<ArrowRightLeftIcon />}\n            />\n          </Tooltip>\n        )}\n        <Dropdown menu={{ items }} trigger={['click']}>\n          <Button\n            type=\"text\"\n            onClick={(e) => e.preventDefault()}\n            icon={<MoreOutlined />}\n            style={{ color: token.colorTextSecondary }}\n          />\n        </Dropdown>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatHeader;\n","import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\nimport {\n  Attachments,\n  AttachmentsProps,\n  Sender,\n  SenderProps,\n} from '@ant-design/x';\nimport { Attachment } from '@ant-design/x/es/attachments';\nimport { Badge, Button, GetRef, UploadProps } from 'antd';\nimport { isEmpty } from 'lodash';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChatAttachmentsProps {\n  dropContainerRef: React.RefObject<HTMLElement | null>;\n}\n\nconst ChatAttachments: React.FC<ChatAttachmentsProps & AttachmentsProps> = ({\n  items,\n  onChange,\n  dropContainerRef,\n  children,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Attachments\n      beforeUpload={() => false}\n      getDropContainer={() => dropContainerRef.current}\n      accept=\"image/*,text/*\"\n      items={items}\n      onChange={onChange}\n      placeholder={(type) =>\n        type === 'drop'\n          ? {\n              title: t('chatui.DropFileHere'),\n            }\n          : {\n              icon: <CloudUploadOutlined />,\n              title: t('chatui.UploadFiles'),\n              description: t('chatui.UploadFilesDescription'),\n            }\n      }\n    >\n      {children}\n    </Attachments>\n  );\n};\n\nexport type AttachmentChangeInfo = Parameters<\n  NonNullable<UploadProps['onChange']>\n>[0];\n\ninterface ChatSenderProps\n  extends Omit<SenderProps, 'onChange'>,\n    ChatAttachmentsProps {\n  loading?: boolean;\n  autoFocus?: boolean;\n  items?: Attachment[];\n  openAttachment?: boolean;\n  onInputChange?: (value: string) => void;\n  onInputSubmit?: () => void;\n  onInputCancel?: () => void;\n  onAttachmentChange?: (\n    attachment: 'prefix' | 'header',\n    info: AttachmentChangeInfo,\n  ) => void;\n  onAttachmentOpenChange?: (open: boolean) => void;\n}\n\nconst ChatSender: React.FC<ChatSenderProps> = ({\n  loading,\n  autoFocus,\n  items,\n  openAttachment,\n  dropContainerRef,\n  onInputChange,\n  onInputSubmit,\n  onInputCancel,\n  onAttachmentChange,\n  onAttachmentOpenChange,\n  ...senderProps\n}) => {\n  const { t } = useTranslation();\n\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\n\n  useEffect(() => {\n    if (autoFocus && senderRef.current) {\n      senderRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <Sender\n      style={{ flex: 1 }}\n      ref={senderRef}\n      {...senderProps}\n      loading={loading}\n      placeholder={t('chatui.SenderPlaceholder')}\n      onChange={onInputChange}\n      onSubmit={onInputSubmit}\n      onCancel={onInputCancel}\n      submitType=\"enter\"\n      header={\n        <Sender.Header\n          closable={false}\n          title={t('chatui.Attachments')}\n          open={!!openAttachment && !isEmpty(items)}\n          onOpenChange={onAttachmentOpenChange}\n          styles={{\n            content: {\n              padding: 0,\n            },\n          }}\n        >\n          <ChatAttachments\n            items={items}\n            dropContainerRef={dropContainerRef}\n            onChange={(info) => onAttachmentChange?.('header', info)}\n          />\n        </Sender.Header>\n      }\n      prefix={\n        <ChatAttachments\n          items={items}\n          dropContainerRef={dropContainerRef}\n          onChange={(info) => onAttachmentChange?.('prefix', info)}\n        >\n          <Badge dot={!isEmpty(items) && !openAttachment}>\n            <Button type=\"text\" icon={<LinkOutlined />} />\n          </Badge>\n        </ChatAttachments>\n      }\n    />\n  );\n};\n\nexport default ChatSender;\n","import { createDataTransferFiles } from '../../helper';\nimport Flex from '../Flex';\nimport ChatSender, {\n  AttachmentChangeInfo,\n  ChatAttachmentsProps,\n} from './ChatSender';\nimport { CreateMessage, Message } from '@ai-sdk/react';\nimport type { AttachmentsProps } from '@ant-design/x';\nimport { ChatRequestOptions } from 'ai';\nimport { theme } from 'antd';\nimport { atom, useAtom } from 'jotai';\nimport { isEmpty, isEqual, isUndefined } from 'lodash';\nimport React, {\n  CSSProperties,\n  useCallback,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react';\n\nconst synchronizedMessageState = atom<string>('');\nconst synchronizedAttachmentState = atom<AttachmentsProps['items']>();\nconst chatSubmitKeyInfoState = atom<{ id: string; key: string } | undefined>(\n  undefined,\n);\n\ninterface ChatInputProps extends ChatAttachmentsProps {\n  sync: boolean;\n  input: string;\n  setInput: (input: string) => void;\n  stop: () => void;\n  append: (\n    message: Message | CreateMessage,\n    chatRequestOptions?: ChatRequestOptions,\n  ) => Promise<string | null | undefined>;\n  isStreaming: boolean;\n  disabled?: boolean;\n}\n\nconst ChatInput: React.FC<ChatInputProps> = ({\n  sync,\n  input,\n  setInput,\n  stop,\n  append,\n  isStreaming,\n  disabled,\n  dropContainerRef,\n}) => {\n  const { token } = theme.useToken();\n\n  const ChatInputStyle: CSSProperties = {\n    borderTop: `1px solid ${token.colorBorderSecondary}`,\n    paddingBlock: token.paddingContentVertical,\n    paddingInline: token.paddingContentHorizontal,\n  };\n\n  const [isOpenAttachments, setIsOpenAttachments] = useState(false);\n  const [files, setFiles] = useState<AttachmentsProps['items']>([]);\n\n  const [synchronizedMessage, setSynchronizedMessage] = useAtom(\n    synchronizedMessageState,\n  );\n\n  const [synchronizedAttachment, setSynchronizedAttachment] = useAtom(\n    synchronizedAttachmentState,\n  );\n\n  const [chatSubmitKeyInfo, setChatSubmitKeyInfo] = useAtom(\n    chatSubmitKeyInfoState,\n  );\n\n  const submitId = useId();\n  const submitKey =\n    chatSubmitKeyInfo?.id === submitId ? undefined : chatSubmitKeyInfo?.key;\n\n  const prevSyncRef = useRef(sync);\n  useEffect(() => {\n    if (prevSyncRef.current !== sync) {\n      setInput('');\n      prevSyncRef.current = sync;\n    }\n  }, [sync, setInput]);\n\n  useEffect(() => {\n    if (sync && !isUndefined(synchronizedMessage)) {\n      setInput(synchronizedMessage);\n    }\n  }, [synchronizedMessage, setInput, sync]);\n\n  const setFilesFromInputAttachment = (\n    inputAttachment: AttachmentsProps['items'],\n  ) => {\n    if (!isUndefined(inputAttachment) && !isEqual(files, inputAttachment)) {\n      setFiles(inputAttachment);\n      setIsOpenAttachments(true);\n    }\n  };\n\n  // If the `inputAttachment` prop exists, the `files` state has to follow it.\n  useEffect(() => {\n    setFilesFromInputAttachment(synchronizedAttachment);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [synchronizedAttachment]);\n\n  useEffect(() => {\n    if (!isUndefined(submitKey) && input) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitKey]);\n\n  const handleInputChange = useCallback(\n    (value: string) => {\n      setInput(value);\n      if (sync) {\n        setSynchronizedMessage(value);\n      }\n    },\n    [sync, setInput, setSynchronizedMessage],\n  );\n\n  const handleInputCancel = useCallback(() => {\n    stop();\n  }, [stop]);\n\n  const handleInputSubmit = useCallback(() => {\n    if (input || !isEmpty(files)) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n      setTimeout(() => {\n        setInput('');\n        setFiles([]);\n        setIsOpenAttachments(false);\n      }, 0);\n\n      setSynchronizedMessage('');\n      setSynchronizedAttachment([]);\n      if (sync) {\n        setChatSubmitKeyInfo({\n          id: submitId,\n          key: new Date().toString(),\n        });\n      }\n    }\n  }, [\n    input,\n    files,\n    append,\n    setSynchronizedMessage,\n    setSynchronizedAttachment,\n    sync,\n    setInput,\n    setChatSubmitKeyInfo,\n    submitId,\n  ]);\n\n  const handleAttachmentChange = useCallback(\n    (attachment: string, info: AttachmentChangeInfo) => {\n      const fileList = info.fileList;\n      setFiles(fileList);\n\n      if (attachment === 'prefix') {\n        setIsOpenAttachments(true);\n      }\n\n      if (sync) {\n        setSynchronizedAttachment(fileList);\n      }\n    },\n    [sync, setFiles, setIsOpenAttachments, setSynchronizedAttachment],\n  );\n\n  const handleAttachmentOpenChange = useCallback(\n    (open: boolean) => {\n      setIsOpenAttachments(open);\n    },\n    [setIsOpenAttachments],\n  );\n\n  return (\n    <>\n      <Flex style={ChatInputStyle} direction=\"column\" align=\"center\">\n        <ChatSender\n          disabled={disabled}\n          placeholder=\"Say something...\"\n          autoFocus\n          value={input}\n          items={files}\n          openAttachment={isOpenAttachments}\n          dropContainerRef={dropContainerRef}\n          loading={isStreaming}\n          onInputChange={handleInputChange}\n          onInputSubmit={handleInputSubmit}\n          onInputCancel={handleInputCancel}\n          onAttachmentChange={handleAttachmentChange}\n          onAttachmentOpenChange={handleAttachmentOpenChange}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatInput;\n","import { startTransition, useEffect, useState } from 'react';\n\nexport const encodeAsync = async (str: string) => {\n  const { encode } = await import('gpt-tokenizer');\n\n  return encode(str).length;\n};\n\nexport const useTokenCount = (input: string = '') => {\n  const [value, setNum] = useState(0);\n\n  useEffect(() => {\n    startTransition(() => {\n      encodeAsync(input)\n        .then(setNum)\n        .catch(() => {\n          setNum(input.length);\n        });\n    });\n  }, [input]);\n\n  return value;\n};\n","import { useTokenCount } from '../../hooks/useTokenizer';\nimport Flex from '../Flex';\nimport QuestionIconWithTooltip from '../QuestionIconWithTooltip';\nimport { Message } from 'ai';\nimport { Typography, Tag, Divider } from 'antd';\nimport { t } from 'i18next';\nimport { map, last } from 'lodash';\nimport React, { useMemo } from 'react';\n\ninterface ChatTokenCounterProps {\n  input: string;\n  messages: Message[];\n  startTime: number | null;\n  style?: React.CSSProperties;\n}\n\nconst ChatTokenCounter: React.FC<ChatTokenCounterProps> = ({\n  input,\n  messages,\n  startTime,\n  style,\n}) => {\n  const inputTokenCount = useTokenCount(input);\n  const allChatMessageString = useMemo(() => {\n    return map(messages, (message) => message?.content).join('');\n  }, [messages]);\n  const chatsTokenCount = useTokenCount(allChatMessageString);\n  const totalTokenCount = inputTokenCount + chatsTokenCount;\n  const lastAssistantMessageString = useMemo(() => {\n    const lastAssistantMessage = last(messages);\n    if (lastAssistantMessage?.role === 'assistant') {\n      return lastAssistantMessage?.content;\n    } else {\n      return '';\n    }\n  }, [messages]);\n\n  const lastAssistantTokenCount = useTokenCount(lastAssistantMessageString);\n  const tokenPerSecond = useMemo(() => {\n    return lastAssistantTokenCount > 0 && startTime\n      ? lastAssistantTokenCount / ((Date.now() - startTime) / 1000)\n      : 0;\n  }, [lastAssistantTokenCount, startTime]);\n\n  return (\n    <Flex justify=\"end\" align=\"end\">\n      <Tag style={{ margin: 0 }}>\n        <span>\n          <Typography.Text>{tokenPerSecond.toFixed(1)}</Typography.Text>{' '}\n          <Typography.Text type=\"secondary\">TPS</Typography.Text>\n        </span>{' '}\n        <Divider type=\"vertical\" />\n        <span>\n          <Typography.Text>{totalTokenCount}</Typography.Text>{' '}\n          <Typography.Text type=\"secondary\"> tokens</Typography.Text>\n        </span>\n        <QuestionIconWithTooltip title={t('chatui.TokenCounterTooltip')} />\n      </Tag>\n    </Flex>\n  );\n};\n\nexport default ChatTokenCounter;\n","import Flex, { FlexProps } from '../Flex';\nimport { Avatar, theme } from 'antd';\nimport React, { memo } from 'react';\n\nexport type ChatMessagePlacement = {\n  top?: boolean;\n  left?: boolean;\n  right?: boolean;\n  bottom?: boolean;\n};\n\nexport interface ChatMessageContainerProps extends FlexProps {\n  placement?: ChatMessagePlacement;\n  containerStyle?: React.CSSProperties;\n  avatar?: React.ReactNode;\n  children?: React.ReactNode;\n}\n\nexport const ChatMessageContainer: React.FC<ChatMessageContainerProps> = memo(\n  ({ children, placement = {}, avatar, onMouseEnter, onMouseLeave }) => {\n    const { token } = theme.useToken();\n\n    return (\n      <Flex\n        direction={placement.left ? 'row' : 'row-reverse'}\n        justify={'start'}\n        align=\"baseline\"\n        style={{\n          marginLeft: placement.left ? 0 : '15%',\n          marginRight: placement.right ? 0 : 20,\n          paddingLeft: token.paddingMD,\n          paddingRight: token.paddingMD,\n          paddingTop: placement.top ? token.paddingMD : 0,\n          paddingBottom: placement.bottom ? token.paddingMD : 0,\n        }}\n        gap={'sm'}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Avatar icon={avatar} style={{ fontSize: token.fontSizeHeading3 }} />\n        <Flex\n          direction=\"column\"\n          align={placement.left ? 'start' : 'end'}\n          wrap=\"wrap\"\n          style={{ flex: 1 }}\n          gap={'xs'}\n        >\n          {children}\n        </Flex>\n      </Flex>\n    );\n  },\n);\n\nChatMessageContainer.displayName = 'ChatMessageContainer';\n","import { Button, ButtonProps, Tooltip } from 'antd';\nimport { CopyConfig } from 'antd/es/typography/Base';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport React, { useEffect, useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface CopyButtonProps extends ButtonProps {\n  copyable?: Omit<CopyConfig, 'text'> & { text: string };\n  defaultIcon?: React.ReactNode;\n}\nconst CopyButton: React.FC<CopyButtonProps> = ({\n  copyable,\n  defaultIcon,\n  ...props\n}) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = async () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      const timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCopied]);\n\n  return (\n    <Tooltip\n      title={isCopied ? 'Copied!' : 'Copy'}\n      open={isCopied ? true : undefined}\n    >\n      <div>\n        <CopyToClipboard text={copyable?.text || ''} onCopy={handleCopy}>\n          <Button\n            icon={\n              isCopied ? (\n                <CheckIcon />\n              ) : defaultIcon ? (\n                defaultIcon\n              ) : (\n                <CopyIcon />\n              )\n            }\n            {...props}\n          />\n        </CopyToClipboard>\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default CopyButton;\n","import { useThemeMode } from 'antd-style';\nimport { useMemo } from 'react';\nimport { codeToHtml } from 'shiki';\nimport useSWR from 'swr';\nimport { Md5 } from 'ts-md5';\n\nexport const FALLBACK_LANG = 'txt';\n\nexport const useHighlight = (text: string, lang: string) => {\n  const { isDarkMode } = useThemeMode();\n  const language = lang.toLowerCase();\n  const matchedLanguage = languageMap[language] ? language : FALLBACK_LANG;\n  const key = useMemo(() => Md5.hashStr(text), [text]);\n\n  return useSWR(\n    [matchedLanguage, isDarkMode ? 'd' : 'l', key].join('-'),\n    async () => {\n      try {\n        return codeToHtml(text, {\n          lang: matchedLanguage,\n          theme: isDarkMode ? 'github-dark' : 'github-light',\n        });\n      } catch (error) {\n        console.error('shiki Highlight error:', error);\n        return text;\n      }\n    },\n  );\n};\n\nconst languageMap: Record<string, boolean> = {\n  abap: true,\n  'actionscript-3': true,\n  ada: true,\n  apache: true,\n  apex: true,\n  apl: true,\n  applescript: true,\n  ara: true,\n  asm: true,\n  astro: true,\n  awk: true,\n  ballerina: true,\n  bat: true,\n  beancount: true,\n  berry: true,\n  bibtex: true,\n  bicep: true,\n  blade: true,\n  c: true,\n  cadence: true,\n  clarity: true,\n  clojure: true,\n  cmake: true,\n  cobol: true,\n  codeql: true,\n  coffee: true,\n  cpp: true,\n  crystal: true,\n  csharp: true,\n  css: true,\n  cue: true,\n  cypher: true,\n  d: true,\n  dart: true,\n  dax: true,\n  diff: true,\n  docker: true,\n  'dream-maker': true,\n  elixir: true,\n  elm: true,\n  erb: true,\n  erlang: true,\n  fish: true,\n  fsharp: true,\n  gdresource: true,\n  gdscript: true,\n  gdshader: true,\n  gherkin: true,\n  'git-commit': true,\n  'git-rebase': true,\n  'glimmer-js': true,\n  'glimmer-ts': true,\n  glsl: true,\n  gnuplot: true,\n  go: true,\n  graphql: true,\n  groovy: true,\n  hack: true,\n  haml: true,\n  handlebars: true,\n  haskell: true,\n  hcl: true,\n  hjson: true,\n  hlsl: true,\n  html: true,\n  http: true,\n  imba: true,\n  ini: true,\n  java: true,\n  javascript: true,\n  'jinja-html': true,\n  jison: true,\n  json: true,\n  json5: true,\n  jsonc: true,\n  jsonl: true,\n  jsonnet: true,\n  jssm: true,\n  jsx: true,\n  julia: true,\n  kotlin: true,\n  kusto: true,\n  latex: true,\n  less: true,\n  liquid: true,\n  lisp: true,\n  logo: true,\n  lua: true,\n  make: true,\n  markdown: true,\n  marko: true,\n  matlab: true,\n  mdc: true,\n  mdx: true,\n  mermaid: true,\n  mojo: true,\n  narrat: true,\n  nextflow: true,\n  nginx: true,\n  nim: true,\n  nix: true,\n  'objective-c': true,\n  'objective-cpp': true,\n  ocaml: true,\n  pascal: true,\n  perl: true,\n  php: true,\n  plsql: true,\n  postcss: true,\n  powerquery: true,\n  powershell: true,\n  prisma: true,\n  prolog: true,\n  proto: true,\n  pug: true,\n  puppet: true,\n  purescript: true,\n  python: true,\n  r: true,\n  raku: true,\n  razor: true,\n  reg: true,\n  rel: true,\n  riscv: true,\n  rst: true,\n  ruby: true,\n  rust: true,\n  sas: true,\n  sass: true,\n  scala: true,\n  scheme: true,\n  scss: true,\n  shaderlab: true,\n  shellscript: true,\n  shellsession: true,\n  smalltalk: true,\n  solidity: true,\n  sparql: true,\n  splunk: true,\n  sql: true,\n  'ssh-config': true,\n  stata: true,\n  stylus: true,\n  svelte: true,\n  swift: true,\n  'system-verilog': true,\n  tasl: true,\n  tcl: true,\n  tex: true,\n  toml: true,\n  tsx: true,\n  turtle: true,\n  twig: true,\n  typescript: true,\n  v: true,\n  vb: true,\n  verilog: true,\n  vhdl: true,\n  viml: true,\n  vue: true,\n  'vue-html': true,\n  vyper: true,\n  wasm: true,\n  wenyan: true,\n  wgsl: true,\n  wolfram: true,\n  xml: true,\n  xsl: true,\n  yaml: true,\n  zenscript: true,\n  zig: true,\n  bash: true,\n  batch: true,\n  be: true,\n  'c#': true,\n  cdc: true,\n  clj: true,\n  cmd: true,\n  console: true,\n  cql: true,\n  cs: true,\n  dockerfile: true,\n  erl: true,\n  'f#': true,\n  fs: true,\n  fsl: true,\n  gjs: true,\n  gts: true,\n  hbs: true,\n  hs: true,\n  jade: true,\n  js: true,\n  kql: true,\n  makefile: true,\n  md: true,\n  nar: true,\n  nf: true,\n  objc: true,\n  perl6: true,\n  properties: true,\n  ps: true,\n  ps1: true,\n  py: true,\n  ql: true,\n  rb: true,\n  rs: true,\n  sh: true,\n  shader: true,\n  shell: true,\n  spl: true,\n  styl: true,\n  ts: true,\n  vim: true,\n  vimscript: true,\n  vy: true,\n  yml: true,\n  zsh: true,\n  文言: true,\n};\n","import { useHighlight } from '../../hooks/useHighlight';\nimport { HTMLAttributes, memo } from 'react';\n\nexport interface SyntaxHighlighterProps extends HTMLAttributes<HTMLDivElement> {\n  children: string;\n  language: string;\n}\n\nexport const SyntaxHighlighter = memo<SyntaxHighlighterProps>(\n  ({ children, language }) => {\n    const { data, isLoading } = useHighlight(children, language);\n\n    return (\n      <>\n        {isLoading || !data ? (\n          <pre>\n            <code style={{ whiteSpace: 'pre-wrap' }}>{children}</code>\n          </pre>\n        ) : (\n          <div dangerouslySetInnerHTML={{ __html: data as string }} dir=\"ltr\" />\n        )}\n      </>\n    );\n  },\n);\n\nSyntaxHighlighter.displayName = 'SyntaxHighlighter';\n","import Flex from '../Flex';\nimport CopyButton from './CopyButton';\nimport { SyntaxHighlighter, SyntaxHighlighterProps } from './SyntaxHighight';\nimport { theme, Typography } from 'antd';\n// `rehype-katex` does not import the CSS file, so we need to import it manually.\nimport 'katex/dist/katex.min.css';\nimport { marked } from 'marked';\nimport React, { memo, useCallback, useMemo } from 'react';\nimport Markdown from 'react-markdown';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nconst { Text } = Typography;\n\nfunction parseMarkdownIntoBlocks(markdown: string): string[] {\n  const tokens = marked.lexer(markdown);\n  return tokens.map((token) => token.raw);\n}\n\nconst CodeBlock = memo<SyntaxHighlighterProps>(({ children, ...props }) => (\n  <SyntaxHighlighter {...props}>{children}</SyntaxHighlighter>\n));\n\nCodeBlock.displayName = 'CodeBlock';\n\nconst CodeHead = memo<{ lang: string; extra?: React.ReactNode }>(\n  ({ lang, extra }) => {\n    const { token } = theme.useToken();\n\n    return (\n      <Flex\n        style={{\n          margin: 0,\n          minHeight: 38,\n          padding: `0 ${token.paddingSM}px`,\n          background: 'rgba(0, 0, 0, 0.02)',\n          width: '100%',\n        }}\n      >\n        <Flex\n          style={{\n            display: 'inline-block',\n            flex: '1',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          <Text style={{ fontWeight: 'normal' }} type=\"secondary\">\n            {lang}\n          </Text>\n        </Flex>\n        <Flex>{extra}</Flex>\n      </Flex>\n    );\n  },\n);\n\nCodeHead.displayName = 'CodeHead';\n\nconst ChatMessageContentBlock = memo<{ block?: string; isStreaming?: boolean }>(\n  ({ block, isStreaming }) => {\n    const renderCode = useCallback(\n      (props: any) => {\n        const { children, className, node, ref, ...rest } = props;\n        const match = /language-(\\w+)/.exec(className || '');\n        const content = String(children ?? '').replace(/\\n$/, '');\n        const { token } = theme.useToken();\n\n        return match ? (\n          <Flex\n            direction={'column'}\n            style={{\n              border: '1px solid #f0f0f0',\n              margin: '0',\n              padding: '0',\n              borderRadius: token.borderRadiusLG,\n              overflow: 'hidden',\n            }}\n          >\n            <CodeHead\n              lang={match[1]}\n              extra={\n                <CopyButton\n                  type=\"text\"\n                  copyable={{ text: content ?? '' }}\n                  style={{\n                    display: isStreaming ? 'none' : 'block',\n                  }}\n                />\n              }\n            />\n            <Flex\n              style={{\n                width: '100%',\n                padding: token.paddingSM,\n                borderRadius: `0 0 ${token.borderRadiusLG}px ${token.borderRadiusLG}px`,\n                margin: '-0.5em 0',\n                overflow: 'scroll',\n              }}\n            >\n              <CodeBlock\n                {...rest}\n                PreTag=\"div\"\n                language={match[1]}\n                style={oneLight}\n                wrapLongLines\n                wrapLines\n              >\n                {content}\n              </CodeBlock>\n            </Flex>\n          </Flex>\n        ) : (\n          <Flex\n            style={{\n              width: '100%',\n              padding: token.paddingSM,\n              borderRadius: `0 0 ${token.borderRadiusLG}px ${token.borderRadiusLG}px`,\n              margin: '-0.5em 0',\n              overflow: 'scroll',\n            }}\n          >\n            <code\n              {...rest}\n              style={{ whiteSpace: 'pre-wrap' }}\n              className={className}\n            >\n              {/* @ts-ignore */}\n              {children}\n            </code>\n          </Flex>\n        );\n      },\n      [isStreaming],\n    );\n\n    const renderParagraph = useCallback(({ node, ...props }: any) => {\n      return <p {...props} style={{ whiteSpace: 'pre-wrap' }} />;\n    }, []);\n\n    return (\n      <Markdown\n        remarkPlugins={[remarkGfm, remarkMath]}\n        rehypePlugins={[rehypeKatex]}\n        components={{ p: renderParagraph, code: renderCode }}\n      >\n        {block}\n      </Markdown>\n    );\n  },\n);\n\nChatMessageContentBlock.displayName = 'ChatMessageContentBlock';\n\nconst ChatMessageContent: React.FC<{\n  children?: string;\n  isStreaming?: boolean;\n}> = ({ children, isStreaming }) => {\n  const blocks = useMemo(\n    () => parseMarkdownIntoBlocks(children ?? ''),\n    [children],\n  );\n\n  return blocks.map((block, index) => (\n    <ChatMessageContentBlock\n      block={block}\n      key={`block_${index}`}\n      isStreaming={isStreaming}\n    />\n  ));\n};\n\nChatMessageContent.displayName = 'ChatMessageContent';\n\nexport default memo(ChatMessageContent);\n","import Flex from '../Flex';\nimport {\n  ChatMessageContainer,\n  ChatMessagePlacement,\n} from './ChatMessageContainer';\n// ES 2015\nimport ChatMessageContent from './ChatMessageContent';\nimport { Message } from '@ai-sdk/react';\nimport { Attachments } from '@ant-design/x';\nimport { theme, Image, Collapse, Typography, Spin } from 'antd';\nimport _ from 'lodash';\nimport React, { memo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChatMessageProps {\n  message: Message;\n  placement?: ChatMessagePlacement;\n  extra?: React.ReactNode;\n  enableExtraHover?: boolean;\n  isStreaming?: boolean;\n  avatar?: React.ReactNode;\n}\n\nconst ChatMessage: React.FC<ChatMessageProps> = ({\n  extra,\n  message,\n  placement,\n  enableExtraHover,\n  isStreaming,\n  avatar,\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const { content, reasoning } = message;\n\n  return (\n    <ChatMessageContainer\n      placement={placement}\n      avatar={avatar}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {_.map(message.experimental_attachments, (attachment, index) =>\n        _.includes(attachment?.contentType, 'image/') ? (\n          <Flex\n            style={{\n              border: 'none',\n              textAlign: 'end',\n            }}\n            align=\"end\"\n          >\n            <Image\n              key={`${message?.id}-${index}`}\n              src={attachment?.url}\n              alt={attachment?.name}\n              style={{\n                maxWidth: '50vw',\n                maxHeight: '12vh',\n                borderRadius: token.borderRadius,\n              }}\n            />\n          </Flex>\n        ) : (\n          <Attachments.FileCard\n            key={index}\n            item={{\n              uid: `${message?.id}-${index}`,\n              name: attachment?.name || attachment?.url,\n              type: attachment?.contentType,\n              description: attachment?.name,\n              url: attachment?.url,\n            }}\n          />\n        ),\n      )}\n      <Flex\n        align=\"stretch\"\n        direction=\"column\"\n        style={{\n          borderRadius: token.borderRadius,\n          borderColor: token.colorBorderSecondary,\n          borderWidth: token.lineWidth,\n          padding: '1em',\n          paddingTop: 0,\n          paddingBottom: 0,\n          backgroundColor:\n            message.role !== 'user'\n              ? token.colorBgContainer\n              : token.colorBgContainerDisabled,\n          maxWidth: '100%',\n          width: _.trim(message.reasoning) ? '100%' : 'auto',\n        }}\n      >\n        {_.trim(message.reasoning) && (\n          <Collapse\n            style={{\n              marginTop: token.margin,\n              width: '100%',\n            }}\n            items={[\n              {\n                key: 'reasoning',\n                label: _.isEmpty(content) ? (\n                  <Flex gap=\"xs\">\n                    <Typography.Text>{t('chatui.Thinking')}</Typography.Text>\n                    <Spin size=\"small\" />\n                  </Flex>\n                ) : (\n                  <Typography.Text>{t('chatui.ViewReasoning')}</Typography.Text>\n                ),\n                children: (\n                  <ChatMessageContent isStreaming={isStreaming}>\n                    {reasoning}\n                  </ChatMessageContent>\n                ),\n              },\n            ]}\n          />\n        )}\n        <ChatMessageContent isStreaming={isStreaming}>\n          {content + (isStreaming ? '\\n' : '')}\n        </ChatMessageContent>\n      </Flex>\n      <Flex\n        style={{\n          fontSize: token.fontSizeSM,\n          ...(enableExtraHover\n            ? {\n                opacity: isHovered ? 1 : 0,\n                transition: 'opacity 0.2s',\n                transitionDelay: isHovered ? '0s' : '0.2s',\n              }\n            : {}),\n        }}\n      >\n        {extra}\n      </Flex>\n    </ChatMessageContainer>\n  );\n};\n\nexport default memo(ChatMessage);\n","import ChatMessage, { ChatMessageProps } from './ChatMessage';\nimport CopyButton from './CopyButton';\nimport Compact from 'antd/es/space/Compact';\n\nexport const AssistantChatMessage: React.FC<ChatMessageProps> = ({\n  message,\n  isStreaming,\n  placement,\n}) => {\n  return (\n    <ChatMessage\n      key={message.id}\n      message={message}\n      placement={{ ...placement, left: true }}\n      isStreaming={isStreaming}\n      enableExtraHover={false}\n      extra={\n        <Compact>\n          <CopyButton\n            type=\"text\"\n            size=\"small\"\n            copyable={{\n              text: message.content,\n            }}\n            style={{\n              display: isStreaming ? 'none' : 'block',\n            }}\n          />\n        </Compact>\n      }\n      avatar={'🤖'}\n    />\n  );\n};\n","import { useEventNotStable } from '../../hooks/useEventNotStable';\nimport { Button } from 'antd';\nimport { ArrowDownIcon } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface ScrollBottomHandlerButtonProps {\n  autoScroll?: boolean;\n  atBottom?: boolean;\n  onScrollToBottom: (type: 'click' | 'auto') => void;\n}\nconst ScrollBottomHandlerButton: React.FC<ScrollBottomHandlerButtonProps> = ({\n  autoScroll,\n  atBottom,\n  ...props\n}) => {\n  const onScrollToBottom = useEventNotStable(props.onScrollToBottom);\n\n  useEffect(() => {\n    if (atBottom && autoScroll) {\n      onScrollToBottom?.('auto');\n    }\n  }, [atBottom, autoScroll, onScrollToBottom]);\n\n  return (\n    <Button\n      icon={<ArrowDownIcon />}\n      shape=\"circle\"\n      onClick={() => {\n        onScrollToBottom && onScrollToBottom('click');\n      }}\n    ></Button>\n  );\n};\n\nexport default ScrollBottomHandlerButton;\n","import Flex from '../Flex';\nimport { AssistantChatMessage } from './AssistantChatMesssage';\nimport ScrollBottomHandlerButton from './ScrollBottomHandlerButton';\nimport { UserChatMessage } from './UserChatMesssage';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\ninterface VirtualizedListProps {\n  messages: Array<Message>;\n  isStreaming?: boolean;\n}\n\nconst ChatMessageRenders = {\n  user: UserChatMessage,\n  assistant: AssistantChatMessage,\n  system: AssistantChatMessage,\n  data: AssistantChatMessage,\n};\n\nconst VirtualChatMessageList: React.FC<VirtualizedListProps> = ({\n  messages,\n  isStreaming,\n}) => {\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [atBottom, setAtBottom] = useState(true);\n  const { token } = theme.useToken();\n\n  // overscan should be 1.5 times the height of the window\n  const overscan = typeof window !== 'undefined' ? window.innerHeight * 1.5 : 0;\n\n  const itemContent = useCallback(\n    (index: number, message: Message) => {\n      const RenderChatMessage = ChatMessageRenders[message.role];\n\n      return (\n        <RenderChatMessage\n          key={message.id}\n          message={message}\n          isStreaming={isStreaming ?? false}\n          placement={{\n            top: index === 0,\n            bottom: index === messages.length - 1,\n          }}\n        />\n      );\n    },\n    [isStreaming, messages.length],\n  );\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ height: '100%', flex: 1 }}\n    >\n      <Virtuoso\n        atBottomStateChange={setAtBottom}\n        atBottomThreshold={60}\n        computeItemKey={(_, item) => item.id}\n        data={messages}\n        followOutput={'auto'}\n        initialTopMostItemIndex={messages?.length - 1}\n        itemContent={itemContent}\n        overscan={overscan}\n        ref={virtuosoRef}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          right: '50%',\n          transform: 'translateX(+50%)',\n          bottom: token.marginSM,\n          opacity: atBottom ? 0 : 1,\n          transition: 'opacity 0.2s',\n          transitionDelay: atBottom ? '0s' : '0.2s',\n          zIndex: 1,\n        }}\n      >\n        <ScrollBottomHandlerButton\n          atBottom={atBottom}\n          autoScroll={isStreaming}\n          onScrollToBottom={(type) => {\n            const virtuoso = virtuosoRef.current;\n            switch (type) {\n              case 'auto': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'auto',\n                  index: 'LAST',\n                });\n                break;\n              }\n              case 'click': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'smooth',\n                  index: 'LAST',\n                });\n                break;\n              }\n            }\n          }}\n        />\n      </div>\n    </Flex>\n  );\n};\n\nexport default VirtualChatMessageList;\n","import ChatMessage from './ChatMessage';\nimport type { ChatMessagePlacement } from './ChatMessageContainer';\nimport { Message } from '@ai-sdk/react';\nimport Compact from 'antd/es/space/Compact';\n\ninterface UserChatMessageProps {\n  message: Message;\n  isStreaming: boolean;\n  placement?: ChatMessagePlacement;\n}\n\nexport const UserChatMessage: React.FC<UserChatMessageProps> = ({\n  message,\n  isStreaming,\n  placement,\n}) => {\n  return (\n    <ChatMessage\n      key={message.id}\n      message={message}\n      placement={{ ...placement, right: true }}\n      isStreaming={isStreaming}\n      enableExtraHover={true}\n      extra={<Compact>{null}</Compact>}\n      avatar={'🧑‍🦰'}\n    />\n  );\n};\n","import Flex from '../Flex';\nimport PureChatTokenCounter from './ChatTokenCounter';\nimport VirtualChatMessageList from './VirtualChatMessageList';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport React, { memo } from 'react';\n\nconst ChatMessageList = memo(VirtualChatMessageList);\n\nconst ChatTokenCounter = memo(PureChatTokenCounter);\n\ninterface ChatMessageProps {\n  messages: Message[];\n  input: string;\n  isStreaming: boolean;\n  startTime: number | null;\n}\n\nconst ChatMessages: React.FC<ChatMessageProps> = ({\n  messages,\n  input,\n  isStreaming,\n  startTime,\n}) => {\n  const { token } = theme.useToken();\n  return (\n    <Flex direction=\"column\" align=\"stretch\" style={{ flex: 1 }}>\n      <ChatMessageList messages={messages} isStreaming={isStreaming} />\n      <Flex\n        direction=\"column\"\n        align=\"end\"\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          right: 0,\n          margin: token.margin,\n        }}\n      >\n        <ChatTokenCounter\n          messages={messages}\n          input={input}\n          startTime={startTime}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatMessages;\n","import type {\n  EndpointTokenSelectQuery,\n  EndpointTokenSelectQuery$data,\n} from '../../__generated__/EndpointTokenSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Input, Select } from 'antd';\nimport type { SelectProps } from 'antd';\nimport dayjs from 'dayjs';\nimport { castArray, sortBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\n\nfunction sortEndpointTokenList(\n  endpointTokenListData: EndpointTokenSelectQuery$data['endpoint_token_list'],\n) {\n  if (!endpointTokenListData.ok) return [];\n\n  const now = dayjs();\n  return sortBy(endpointTokenListData.value?.items, 'created_at').map(\n    (item) => ({\n      label: item?.token,\n      value: item?.token,\n      disabled: !dayjs(item?.valid_until).tz().isAfter(now),\n    }),\n  );\n}\n\ninterface EndpointTokenSelectProps extends Omit<SelectProps, 'options'> {\n  endpointId?: string | null;\n}\n\nconst EndpointTokenSelect: React.FC<EndpointTokenSelectProps> = ({\n  endpointId,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(props);\n\n  const { endpoint_token_list } = useLazyLoadQuery<EndpointTokenSelectQuery>(\n    graphql`\n      query EndpointTokenSelectQuery(\n        $endpointId: UUID!\n        $isEmptyEndpointId: Boolean!\n      ) {\n        endpoint_token_list(offset: 0, limit: 100, endpoint_id: $endpointId)\n          @skipOnClient(if: $isEmptyEndpointId)\n          @catch {\n          items {\n            id\n            token\n            created_at\n            valid_until\n          }\n        }\n      }\n    `,\n    {\n      endpointId: endpointId || '',\n      isEmptyEndpointId: !endpointId,\n    },\n  );\n\n  const selectOptions = useMemo(\n    () => sortEndpointTokenList(endpoint_token_list),\n    [endpoint_token_list],\n  );\n\n  return selectOptions.length <= 0 ? (\n    <Input onChange={(e) => setControllableValue(e.target.value)} />\n  ) : (\n    <Select\n      placeholder={t('chatui.SelectToken')}\n      style={{\n        fontWeight: 'normal',\n        width: '200px',\n      }}\n      options={selectOptions}\n      value={controllableValue}\n      onChange={(_, option) => {\n        setControllableValue(castArray(option)?.[0].value ?? '');\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default EndpointTokenSelect;\n","import Flex from '../Flex';\nimport EndpointTokenSelect from './EndpointTokenSelect';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport useResizeObserver from '@react-hook/resize-observer';\nimport { Alert, Button, Form, Input, theme } from 'antd';\nimport type { FormInstance } from 'antd';\nimport { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type CustomModelFormValues = {\n  baseURL?: string;\n  basePath?: string;\n  token?: string;\n};\n\ntype CustomModelFormProps = {\n  endpointUrl?: string;\n  basePath?: string;\n  token?: string;\n  endpointId?: string | null;\n  loading: boolean;\n  onSubmit?: (formData: CustomModelFormValues) => void;\n};\n\nconst CustomModelForm: React.FC<CustomModelFormProps> = ({\n  endpointUrl,\n  basePath,\n  token,\n  endpointId,\n  loading,\n  onSubmit,\n}) => {\n  const { t } = useTranslation();\n  const { token: themeToken } = theme.useToken();\n  const formRef = useRef<FormInstance>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [shrinkControlSize, setShrinkControlSize] = useState<boolean>(true);\n\n  useResizeObserver(containerRef.current, ({ contentRect }) => {\n    setShrinkControlSize(contentRect.width < 480);\n  });\n\n  return (\n    <Flex\n      direction=\"row\"\n      style={{\n        padding: themeToken.paddingContentVerticalLG,\n        paddingInline: themeToken.paddingContentHorizontal,\n        backgroundColor: themeToken.colorBgContainer,\n        overflow: 'hidden',\n        borderBottom: `1px solid ${themeToken.colorBorderSecondary}`,\n      }}\n      ref={containerRef}\n    >\n      <Form\n        ref={formRef}\n        layout=\"horizontal\"\n        size=\"small\"\n        requiredMark=\"optional\"\n        style={{ flex: 1 }}\n        key={endpointUrl}\n        initialValues={{\n          basePath: basePath,\n          token: token,\n        }}\n      >\n        <div style={{ marginBottom: themeToken.size }}>\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={t('chatui.CannotFindModel')}\n          />\n        </div>\n        <Form.Item label={t('modelService.BasePath')} name=\"basePath\">\n          <Input\n            placeholder=\"v1\"\n            addonBefore={shrinkControlSize ? undefined : endpointUrl}\n            defaultValue={basePath}\n          />\n        </Form.Item>\n        <Form.Item label={t('modelService.Token')} name=\"token\">\n          <EndpointTokenSelect\n            loading={loading}\n            endpointId={endpointId}\n            style={{\n              width: shrinkControlSize ? '100%' : '200px',\n            }}\n          />\n        </Form.Item>\n        <Button\n          icon={<ReloadOutlined />}\n          loading={loading}\n          onClick={() => {\n            onSubmit?.({\n              basePath: formRef.current?.getFieldValue('basePath') ?? '',\n              token: formRef.current?.getFieldValue('token'),\n            });\n          }}\n        >\n          {t('button.RefreshModelInformation')}\n        </Button>\n      </Form>\n    </Flex>\n  );\n};\n\nexport { CustomModelForm };\n","import { ChatCardQuery } from '../../__generated__/ChatCardQuery.graphql';\nimport { useUpdatableState } from '../../hooks';\nimport { useSuspenseTanQuery } from '../../hooks/reactQueryAlias';\nimport { useAIAgent } from '../../hooks/useAIAgent';\nimport PureChatHeader from './ChatHeader';\nimport PureChatInput from './ChatInput';\nimport ChatMessages from './ChatMessages';\nimport {\n  getAIErrorMessage,\n  ChatProviderData,\n  ChatData,\n  ChatModel,\n  getLatestUserMessage,\n  ChatMessage,\n} from './ChatModel';\nimport { CustomModelForm } from './CustomModelForm';\nimport { createOpenAI } from '@ai-sdk/openai';\nimport { useChat } from '@ai-sdk/react';\nimport {\n  extractReasoningMiddleware,\n  streamText,\n  UIMessage,\n  wrapLanguageModel,\n} from 'ai';\nimport { Alert, App, Card, CardProps, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useTransition,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\n\ninterface ChatCardProps extends Omit<CardProps, 'classNames' | 'variant'> {\n  chat: ChatData;\n  onUpdateChat?: (partialChat: DeepPartial<ChatData>) => void;\n  onRemoveChat?: (chat: ChatData) => void;\n  onAddChat?: (chat: ChatData) => void;\n  onChangeEndpoint?: (endpointId: string) => void;\n  onChangeModel?: (modelId: string) => void;\n  onChangeAgent?: (agentId: string) => void;\n  onChangeSync?: (sync: boolean) => void;\n  onSaveMessage?: (message: ChatMessage) => void;\n  onClearMessage?: (chat: ChatData) => void;\n  closable?: boolean;\n  cloneable?: boolean;\n  fetchOnClient?: boolean;\n  defaultEndpointId?: string;\n}\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatCard: css`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  alert: css`\n    margin-block: ${token.paddingContentVertical}px;\n    margin-inline: ${token.paddingContentHorizontal}px;\n  `,\n}));\n\nfunction createModelsURL(baseURL: string) {\n  const { origin, port, pathname: path } = new URL(baseURL.trim());\n  const host = port.length > 0 ? `${origin}:${port}` : origin;\n  const normalizedPath = path === '/' ? '/models' : `${path}/models`;\n\n  return new URL(normalizedPath, host).toString();\n}\n\nfunction useModels(\n  provider: ChatProviderData,\n  fetchKey: string,\n  baseURL?: string,\n) {\n  const { t } = useTranslation();\n  const getModelsErrorMessage = (status?: number) => {\n    switch (status) {\n      case 401:\n        return t('error.UnauthorizedToken');\n      case 404:\n        return t('error.NotFoundBasePath');\n      case 500:\n        return t('error.InternalServerError');\n      case 503:\n        return t('error.ServiceUnavailable');\n      default:\n        return t('error.UnknownError');\n    }\n  };\n\n  const { data: modelsResult } = useSuspenseTanQuery<{\n    data: Array<ChatModel>;\n    error?: number;\n  }>({\n    queryKey: ['models', fetchKey, baseURL, provider.apiKey],\n    queryFn: async () => {\n      if (!baseURL) {\n        return { data: [] };\n      }\n\n      const url = createModelsURL(baseURL);\n      const authToken = provider.apiKey;\n      const result = await fetch(url, {\n        headers: {\n          Authorization: authToken ? `Bearer ${authToken}` : '',\n        },\n      })\n        .then((res) => res.json())\n        .catch((e) => {\n          return {\n            ok: false,\n            status: -1,\n          } as const;\n        });\n\n      if (result.ok === false) {\n        return { data: [], error: result?.status };\n      }\n      return result;\n    },\n    select: (res) => ({\n      data: res\n        ? res.data.map((model) => ({\n            id: model.id,\n            name: model.id,\n          }))\n        : [],\n    }),\n  });\n\n  const modelId = useMemo(\n    () =>\n      provider.modelId &&\n      _.includes(_.map(modelsResult?.data || [], 'id'), provider.modelId)\n        ? provider.modelId\n        : (modelsResult?.data?.[0]?.id ?? 'custom'),\n    [modelsResult?.data, provider.modelId],\n  );\n\n  const modelsError =\n    modelsResult.error && getModelsErrorMessage(modelsResult.error);\n\n  return {\n    models: modelsResult?.data,\n    modelId,\n    modelsError,\n  } as const;\n}\n\nconst ChatHeader = PureChatHeader;\n\nconst ChatInput = React.memo(PureChatInput);\n\nfunction createBaseURL(basePath?: string, endpointUrl?: string | null) {\n  try {\n    return endpointUrl\n      ? new URL(basePath ?? '', endpointUrl).toString()\n      : undefined;\n  } catch {\n    console.error('Invalid base URL:', basePath, 'endpointUrl', endpointUrl);\n  }\n}\n\nconst PureChatCard: React.FC<ChatCardProps> = ({\n  chat,\n  onUpdateChat,\n  closable,\n  cloneable,\n  fetchOnClient,\n  onRemoveChat,\n  onAddChat,\n  onSaveMessage,\n  onClearMessage,\n  styles,\n  className,\n  ...otherCardProps\n}) => {\n  const { t } = useTranslation();\n  const { message: appMessage } = App.useApp();\n  const endpointResult = useLazyLoadQuery<ChatCardQuery>(\n    graphql`\n      query ChatCardQuery($endpointId: UUID!) {\n        endpoint(endpoint_id: $endpointId) @catch {\n          endpoint_id\n          url\n          ...ChatHeader_Endpoint\n        }\n      }\n    `,\n    {\n      endpointId: chat.provider.endpointId || '',\n    },\n    {\n      fetchPolicy: chat.provider.endpointId ? 'store-or-network' : 'store-only',\n    },\n  );\n  const endpoint = endpointResult.endpoint.ok\n    ? endpointResult.endpoint.value\n    : null;\n  const {\n    styles: { chatCard: chatCardStyle, alert: alertStyle },\n  } = useStyles();\n\n  const { token } = theme.useToken();\n\n  const [isPendingUpdate, startUpdateTransition] = useTransition();\n\n  const dropContainerRef = useRef<HTMLDivElement>(null);\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  const baseURL = createBaseURL(chat.provider.basePath, endpoint?.url);\n  const { models, modelId, modelsError } = useModels(\n    chat.provider,\n    fetchKey,\n    baseURL,\n  );\n  const { agents } = useAIAgent();\n  const agent = agents.find((a) => a.id === chat.provider.agentId);\n\n  const {\n    error,\n    messages,\n    input,\n    setInput,\n    stop,\n    status,\n    append,\n    setMessages,\n  } = useChat({\n    id: chat.id,\n    api: baseURL,\n    body: {\n      modelId: modelId,\n    },\n    initialMessages: chat.messages,\n    experimental_throttle: 50,\n    fetch: async (input, init) => {\n      if (fetchOnClient || modelId === 'custom') {\n        const body = JSON.parse(init?.body as string);\n        const provider = createOpenAI({\n          baseURL: baseURL,\n          apiKey: chat.provider.apiKey || 'dummy',\n        });\n        const result = streamText({\n          abortSignal: init?.signal || undefined,\n          model: wrapLanguageModel({\n            model: provider(modelId),\n            middleware: extractReasoningMiddleware({ tagName: 'think' }),\n          }),\n          messages: body?.messages,\n          system: agent ? (agent.config.system_prompt ?? '') : '',\n          ...(chat.usingParameters ? chat.parameters : {}),\n        });\n\n        const userMessage = getLatestUserMessage(body.messages);\n        if (userMessage) {\n          onSaveMessage?.(userMessage);\n        }\n\n        setStartTime(Date.now());\n\n        return result.toDataStreamResponse({\n          sendReasoning: true,\n          getErrorMessage: (error) => {\n            return getAIErrorMessage(error);\n          },\n        });\n      }\n\n      return fetch(input, init);\n    },\n    onFinish: (assistantMessage, { finishReason }) => {\n      if (finishReason === 'stop') {\n        onSaveMessage?.(assistantMessage as UIMessage);\n      }\n    },\n  });\n\n  const isStreaming = status === 'streaming' || status === 'submitted';\n\n  useEffect(() => {\n    // prevent to show the error message as failed fetching in the first time\n    if (modelsError && fetchKey !== 'first') {\n      appMessage.error(`Error fetching models: ${modelsError}`, 5);\n    }\n  }, [modelsError, fetchKey, appMessage]);\n\n  useEffect(() => {\n    if (chat.messages.length > 0) {\n      setMessages(chat.messages);\n    }\n  }, [setMessages, chat.messages]);\n\n  return (\n    <Card\n      {...otherCardProps}\n      variant=\"outlined\"\n      className={classNames(chatCardStyle, className)}\n      styles={{\n        ...styles,\n        body: {\n          backgroundColor: token.colorFillQuaternary,\n          borderRadius: 0,\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 0,\n          height: '50%',\n          position: 'relative',\n          ...styles?.body,\n        },\n        actions: {\n          paddingLeft: token.paddingContentHorizontal,\n          paddingRight: token.paddingContentHorizontal,\n          ...styles?.actions,\n        },\n        header: {\n          zIndex: 1,\n          paddingInline: token.paddingContentHorizontal,\n          paddingRight: token.paddingXS,\n          ...styles?.header,\n        },\n      }}\n      title={\n        <ChatHeader\n          // model\n          models={models}\n          modelId={modelId}\n          onChangeModel={(modelId) => {\n            onUpdateChat?.({\n              provider: {\n                modelId,\n              },\n            });\n          }}\n          // agent\n          agents={agents}\n          agent={agent}\n          onChangeAgent={(agent) => {\n            onUpdateChat?.({\n              provider: {\n                agentId: agent.id,\n                endpointId: agent.endpoint_id,\n              },\n            });\n          }}\n          // endpoint\n          endpointFrgmt={endpoint}\n          onChangeEndpoint={(endpointId) => {\n            onUpdateChat?.({\n              provider: {\n                endpointId,\n              },\n            });\n          }}\n          // sync\n          sync={chat.sync}\n          onChangeSync={(sync) => {\n            onUpdateChat?.({\n              sync,\n            });\n          }}\n          // others\n          fetchKey={fetchKey}\n          closable={closable}\n          cloneable={cloneable}\n          onAddChat={() => {\n            onAddChat?.(chat);\n          }}\n          onRemoveChat={() => {\n            onRemoveChat?.(chat);\n          }}\n          onClearMessage={() => {\n            onClearMessage?.(chat);\n            setMessages([]);\n          }}\n          parameters={chat.parameters}\n          usingParameters={chat.usingParameters}\n          onChangeParameter={(usingParameters, parameters) => {\n            onUpdateChat?.({\n              usingParameters,\n              parameters,\n            });\n          }}\n        />\n      }\n      ref={dropContainerRef}\n    >\n      {baseURL && endpoint && _.isEmpty(models) && (\n        <CustomModelForm\n          endpointUrl={endpoint?.url ?? ''}\n          basePath={chat.provider.basePath}\n          token={chat.provider.apiKey}\n          endpointId={endpoint?.endpoint_id}\n          loading={isPendingUpdate}\n          onSubmit={(data) => {\n            startUpdateTransition(() => {\n              updateFetchKey();\n              onUpdateChat?.({\n                ...chat,\n                provider: {\n                  ...chat.provider,\n                  basePath: data.basePath,\n                  apiKey: data.token,\n                },\n              });\n            });\n          }}\n        />\n      )}\n      {!_.isEmpty(error?.message) ? (\n        <Alert\n          message={error?.message}\n          type=\"error\"\n          showIcon\n          className={alertStyle}\n          closable\n        />\n      ) : null}\n      {!baseURL ? (\n        <Alert\n          message={t('error.InvalidBaseURL')}\n          type=\"error\"\n          showIcon\n          className={alertStyle}\n          closable\n        />\n      ) : null}\n      <ChatMessages\n        messages={messages}\n        input={input}\n        isStreaming={isStreaming}\n        startTime={startTime}\n      />\n      <ChatInput\n        disabled={!baseURL}\n        sync={chat.sync}\n        input={input}\n        setInput={setInput}\n        stop={stop}\n        append={append}\n        isStreaming={isStreaming}\n        dropContainerRef={dropContainerRef}\n      />\n    </Card>\n  );\n};\n\nexport default memo(PureChatCard);\n","import { useWebUINavigate } from '../../hooks';\nimport {\n  DEFAULT_CHAT_PARAMETERS,\n  type ChatData,\n  type ChatProviderData,\n  type ChatMessage,\n} from './ChatModel';\nimport _ from 'lodash';\nimport { customAlphabet } from 'nanoid/non-secure';\nimport { useEffect, useCallback, useState } from 'react';\n\n// Utils for chat history cache\nconst createIdGenerator = () => {\n  const generator = customAlphabet(\n    '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n    8,\n  );\n  return (prefix: string) => `${prefix}/${generator()}`;\n};\n\nconst generateChatDataId = createIdGenerator();\n\nexport function generateChatId(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport function createLocalStorageCache<T>(cacheName: string) {\n  const cache = new Map<string, T>(\n    JSON.parse(localStorage.getItem(cacheName) ?? '[]'),\n  );\n\n  return {\n    cache,\n    set(key: string, value: T) {\n      cache.set(key, value);\n\n      localStorage.setItem(\n        cacheName,\n        JSON.stringify(Array.from(cache.entries())),\n      );\n    },\n    get(key: string) {\n      return cache.get(key);\n    },\n    size() {\n      return cache.size;\n    },\n    delete(key: string) {\n      cache.delete(key);\n\n      localStorage.setItem(\n        cacheName,\n        JSON.stringify(Array.from(cache.entries())),\n      );\n    },\n    clear: () => {\n      cache.clear();\n      localStorage.removeItem(cacheName);\n    },\n    getAll() {\n      return Array.from(cache.entries()).map(([key, value]) => ({\n        id: key,\n        ...value,\n      }));\n    },\n  };\n}\n\n// Chat history cache and hook to manage chat list and update chat history\nexport interface ChatHistoryData {\n  id: string;\n  label: string;\n  chats: ChatData[];\n  updatedAt: string;\n}\n\nconst chatHistoryCache = createLocalStorageCache<ChatHistoryData>(\n  'backendaiwebui.cache.chat_history',\n);\n\nexport function useHistory(id: string, provider: ChatProviderData) {\n  const [history, setHistory] = useState<ChatHistoryData[]>([]);\n  const [chat, setChat] = useState<ChatHistoryData | undefined>(undefined);\n  const webuiNavigate = useWebUINavigate();\n\n  const removeHistory = useCallback((id: string) => {\n    chatHistoryCache.delete(id);\n    setHistory([...chatHistoryCache.getAll().sort(sortHistoryByUpdatedAt)]);\n\n    return chatHistoryCache.size();\n  }, []);\n\n  const updateHistory = useCallback((data: ChatHistoryData) => {\n    const mergedData: ChatHistoryData = _.merge({}, data, {\n      updatedAt: new Date().toISOString(),\n    });\n\n    chatHistoryCache.set(data.id, mergedData);\n    setChat({ ...mergedData });\n    setHistory([...chatHistoryCache.getAll().sort(sortHistoryByUpdatedAt)]);\n  }, []);\n\n  const addChatData = useCallback(\n    ({ provider, id }: ChatData) => {\n      if (!chat) {\n        console.error('Chat history is not initialized.');\n        return;\n      }\n\n      const chatData = createChatData({ provider });\n\n      // find origin chat position to insert next to the origin chat\n      const index = chat.chats.findIndex((chat) => chat.id === id);\n\n      if (index === -1) {\n        console.error(`Chat with id ${id} not found in cache.`);\n        return;\n      }\n\n      chat.chats.splice(index + 1, 0, chatData);\n\n      if (!getChatById(id)) {\n        updateHistory({ ...chat });\n        webuiNavigate(`/chat/${chat.id}`, { replace: true });\n        return;\n      }\n\n      updateHistory({ ...chat });\n    },\n    [chat, webuiNavigate, updateHistory],\n  );\n\n  const removeChatData = useCallback(\n    (id: string) => {\n      if (!chat) {\n        console.error('Chat history is not initialized.');\n        return;\n      }\n\n      const index = chat.chats.findIndex((item) => item.id === id);\n      if (index === -1) {\n        return;\n      }\n\n      chat.chats = chat.chats.filter((chat) => chat.id !== id);\n\n      updateHistory({ ...chat });\n    },\n    [chat, updateHistory],\n  );\n\n  const updateChatData = useCallback(\n    (id: string, data: DeepPartial<ChatData>) => {\n      if (!chat) {\n        console.error('Chat history is not initialized.');\n        return;\n      }\n\n      const index = chat.chats.findIndex((item) => item.id === id);\n      if (index === -1) {\n        console.error(`Chat with id ${id} not found in cache.`);\n        return;\n      }\n\n      chat.chats[index] = _.merge({}, chat.chats[index], data);\n\n      const currentChat = getChatById(chat.id);\n      if (currentChat) {\n        // If the chat is already in the cache, update it\n        currentChat.chats[index] = chat.chats[index];\n        updateHistory(currentChat);\n      } else {\n        updateHistory({ ...chat });\n        webuiNavigate(`/chat/${chat.id}`, { replace: true });\n      }\n    },\n    [chat, updateHistory, webuiNavigate],\n  );\n\n  const saveChatMessage = useCallback(\n    (id: string, message: ChatMessage) => {\n      if (!chat) {\n        console.error('Chat history is not initialized.');\n        return;\n      }\n\n      const index = chat.chats.findIndex((item) => item.id === id);\n      if (index === -1) {\n        console.error(`Chat with id ${id} not found in cache.`);\n        return;\n      }\n\n      const chatData = chat.chats[index];\n      const lastMessage = chatData.messages.at(-1);\n\n      // Overwrite the last message if it is the same message\n      if (lastMessage?.id === id) {\n        chat.chats[index].messages = [\n          ...chatData.messages.slice(0, -1),\n          _.merge({}, lastMessage, {\n            content: message.content,\n            parts: message.parts,\n          }),\n        ];\n      } else {\n        chat.chats[index].messages = [...chatData.messages, message];\n      }\n\n      // Update the chat label with the first chat data message content\n      if (\n        index === 0 &&\n        chat.chats[index].messages.length === 2 &&\n        message.role === 'assistant'\n      ) {\n        // Change the chat label to the first user message content\n        chat.label = chat.chats[0].messages[0].content ?? chat.label;\n      }\n\n      const currentChat = getChatById(chat.id);\n      if (currentChat) {\n        // If the chat is already in the cache, update it\n        currentChat.chats[index] = chat.chats[index];\n        updateHistory(currentChat);\n      } else {\n        updateHistory({ ...chat });\n        webuiNavigate(`/chat/${chat.id}`, { replace: true });\n      }\n    },\n    [chat, updateHistory, webuiNavigate],\n  );\n\n  const clearChatMessage = useCallback(\n    (id: string) => {\n      if (!chat) {\n        console.error('Chat history is not initialized.');\n        return;\n      }\n\n      const index = chat.chats.findIndex((item) => item.id === id);\n      if (index === -1) {\n        console.error(`Chat with id ${id} not found in cache.`);\n        return;\n      }\n\n      const chatData = chat.chats.find((item) => item.id === id);\n      if (!chatData) {\n        console.error(`Chat with id ${id} not found in chat history.`);\n        return;\n      }\n\n      chat.chats[index].messages = [];\n\n      updateHistory({ ...chat });\n    },\n    [chat, updateHistory],\n  );\n\n  useEffect(() => {\n    // Create a new chat history if it doesn't exist\n    const cachedChat = getChatById(id);\n    const chat = cachedChat ? cachedChat : createChat({ provider });\n\n    setChat(chat);\n    setHistory([...chatHistoryCache.getAll().sort(sortHistoryByUpdatedAt)]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  return {\n    chat,\n    addChatData,\n    removeChatData,\n    updateChatData,\n    saveChatMessage,\n    clearChatMessage,\n    history,\n    removeHistory,\n    updateHistory,\n  };\n}\n\nexport function getChatById(id: string) {\n  return chatHistoryCache.get(id);\n}\n\nexport function createChatData({ provider }: { provider: ChatProviderData }) {\n  return {\n    id: generateChatDataId('/chat'),\n    sync: true,\n    usingParameters: false,\n    parameters: DEFAULT_CHAT_PARAMETERS,\n    provider: provider,\n    messages: [],\n  };\n}\n\nexport function createChat({\n  chats,\n  provider,\n}: {\n  chats?: ChatData[];\n  provider: ChatProviderData;\n}) {\n  const dateTime = new Date();\n  const id = generateChatId();\n  const newChats: ChatHistoryData = {\n    id,\n    label: 'Chat',\n    chats: chats ?? [createChatData({ provider })],\n    updatedAt: dateTime.toISOString(),\n  };\n\n  return newChats;\n}\n\nfunction sortHistoryByUpdatedAt(a: ChatHistoryData, b: ChatHistoryData) {\n  return new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime();\n}\n","import { ChatPageQuery } from '../__generated__/ChatPageQuery.graphql';\nimport BAICard from '../components/BAICard';\nimport ChatCard from '../components/Chat/ChatCard';\nimport {\n  type ChatHistoryData,\n  generateChatId,\n  getChatById,\n  useHistory,\n} from '../components/Chat/ChatHistory';\nimport { type ChatProviderData } from '../components/Chat/ChatModel';\nimport Flex from '../components/Flex';\nimport { useSuspendedBackendaiClient, useWebUINavigate } from '../hooks';\nimport { Badge, Button, Card, Drawer, List, Tooltip, Typography } from 'antd';\nimport { createStyles } from 'antd-style';\nimport dayjs from 'dayjs';\nimport { t } from 'i18next';\nimport _ from 'lodash';\nimport { HistoryIcon, PlusIcon, TrashIcon } from 'lucide-react';\nimport { Suspense, useState } from 'react';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { useParams } from 'react-router-dom';\nimport { StringParam, useQueryParams } from 'use-query-params';\n\nconst useStyles = createStyles(({ css }) => ({\n  chatViewHorizontal: css`\n    overflow: auto;\n    height: calc(100vh - 224px);\n  `,\n  chatViewVertical: css`\n    overflow: hidden;\n  `,\n  chatCard: css`\n    flex: 1;\n    overflow: 'hidden';\n  `,\n  fixEditableVerticalAlign: css`\n    & {\n      margin-top: 0px !important;\n      inset-inline-start: 0px !important;\n    }\n  `,\n}));\n\nfunction useDefaultEndpointId() {\n  const baiClient = useSuspendedBackendaiClient();\n  const { endpoint_list } = useLazyLoadQuery<ChatPageQuery>(\n    graphql`\n      query ChatPageQuery($filter: String) {\n        endpoint_list(limit: 1, offset: 0, filter: $filter) {\n          items {\n            endpoint_id\n          }\n        }\n      }\n    `,\n    {\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? 'lifecycle_stage == \"created\"'\n        : undefined,\n    },\n  );\n\n  return endpoint_list?.items[0]?.endpoint_id || undefined;\n}\n\nfunction useChatProviderData(defaultEndpointId?: string): ChatProviderData {\n  const [{ endpointId, modelId, agentId, apiKey }] = useQueryParams({\n    endpointId: StringParam,\n    agentId: StringParam,\n    modelId: StringParam,\n    apiKey: StringParam,\n  });\n\n  return {\n    basePath: 'v1', // Use OpenAPI 'v1' for OpenAI compatibility basePath,\n    baseURL: '',\n    endpointId: endpointId ?? defaultEndpointId ?? undefined,\n    agentId: agentId ?? undefined,\n    modelId: modelId ?? undefined,\n    apiKey: apiKey ?? undefined,\n  };\n}\n\ninterface ChatHistoryDrawerProps {\n  selectedHistoryId?: string;\n  history: ChatHistoryData[];\n  open?: boolean;\n  onClickClose: () => void;\n  onClickRemove: (id: string) => void;\n  onClickHistory: (id: string) => void;\n}\n\nconst ChatHistoryDrawer = ({\n  selectedHistoryId,\n  history,\n  open,\n  onClickClose,\n  onClickRemove,\n  onClickHistory,\n}: ChatHistoryDrawerProps) => {\n  return (\n    <Drawer\n      getContainer={false}\n      open={open}\n      onClose={onClickClose}\n      mask={false}\n      maskClosable={true}\n      title={t('chatui.History')}\n      styles={{\n        body: { paddingBlock: 0 },\n      }}\n    >\n      <List\n        dataSource={history.map((item) => ({\n          title: item.label,\n          id: item.id,\n          updatedAt: item.updatedAt,\n        }))}\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <Button\n                key=\"delete\"\n                type=\"text\"\n                icon={\n                  <TrashIcon\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onClickRemove(item.id);\n                    }}\n                  />\n                }\n              />,\n            ]}\n            style={{ cursor: 'pointer' }}\n            styles={{\n              actions: {\n                padding: 0,\n              },\n            }}\n            onClick={() => onClickHistory(item.id)}\n          >\n            <List.Item.Meta\n              title={\n                <Badge dot={selectedHistoryId === item.id}>{item.title}</Badge>\n              }\n              description={dayjs(item.updatedAt).format('YYYY-MM-DD HH:mm:ss')}\n            />\n          </List.Item>\n        )}\n      />\n    </Drawer>\n  );\n};\n\nconst PureChatPage = ({ id }: { id: string }) => {\n  const defaultEndpointId = useDefaultEndpointId();\n  const provider = useChatProviderData(defaultEndpointId);\n  const { styles } = useStyles();\n  const [openHistory, setOpenHistory] = useState(false);\n  const {\n    chat,\n    history,\n    addChatData,\n    removeChatData,\n    updateChatData,\n    saveChatMessage,\n    clearChatMessage,\n    removeHistory,\n    updateHistory,\n  } = useHistory(id, provider);\n  const navigate = useWebUINavigate();\n\n  return (\n    chat && (\n      <BAICard\n        title={\n          <Typography.Text\n            className={styles.fixEditableVerticalAlign}\n            editable={\n              getChatById(chat.id)\n                ? {\n                    onChange: (value) => {\n                      if (!_.isEmpty(value)) {\n                        updateHistory({ ...chat, label: value });\n                      }\n                    },\n                    text: chat.label,\n                    triggerType: ['icon', 'text'],\n                  }\n                : undefined\n            }\n          >\n            {chat.label}\n          </Typography.Text>\n        }\n        styles={{\n          body: { overflow: 'hidden', paddingTop: 0 },\n        }}\n        style={{\n          overflow: 'hidden',\n        }}\n        extra={\n          <>\n            <Tooltip title={t('chatui.NewChat')}>\n              <Button\n                type=\"text\"\n                icon={<PlusIcon />}\n                onClick={() => {\n                  setOpenHistory(false);\n                  navigate('/chat', { replace: true });\n                }}\n              />\n            </Tooltip>\n            <Tooltip title={t('chatui.History')}>\n              <Button\n                type=\"text\"\n                icon={<HistoryIcon />}\n                onClick={() => {\n                  setOpenHistory(!openHistory);\n                }}\n              />\n            </Tooltip>\n          </>\n        }\n      >\n        {id && (\n          <Flex\n            className={styles.chatViewVertical}\n            direction=\"column\"\n            align=\"stretch\"\n            gap={'xs'}\n          >\n            <Flex\n              className={styles.chatViewHorizontal}\n              gap={'xs'}\n              direction=\"row\"\n              align=\"stretch\"\n            >\n              <Suspense fallback={<Card className={styles.chatCard} loading />}>\n                {_.map(chat.chats, (chatData, index) => (\n                  <ChatCard\n                    key={chatData.id}\n                    className={styles.chatCard}\n                    chat={chatData}\n                    onUpdateChat={(newChatProperties) => {\n                      updateChatData(chatData.id, newChatProperties);\n                    }}\n                    fetchOnClient\n                    onRemoveChat={() => {\n                      removeChatData(chatData.id);\n                    }}\n                    onAddChat={() => {\n                      addChatData(chatData);\n                    }}\n                    onSaveMessage={(message) => {\n                      saveChatMessage(chatData.id, message);\n                    }}\n                    onClearMessage={(chatData) => {\n                      clearChatMessage(chatData.id);\n                    }}\n                    closable={isClosable(chat.chats.length)}\n                    cloneable={isClonable(chat.chats.length)}\n                  />\n                ))}\n              </Suspense>\n            </Flex>\n          </Flex>\n        )}\n        <ChatHistoryDrawer\n          selectedHistoryId={chat.id}\n          open={openHistory}\n          history={history}\n          onClickClose={() => {\n            setOpenHistory(false);\n          }}\n          onClickRemove={(historyId) => {\n            const remainHistories = removeHistory(historyId);\n\n            if (remainHistories === 0) {\n              setOpenHistory(false);\n              navigate('/chat', { replace: true });\n            } else if (historyId === chat.id) {\n              const chat = history.filter(({ id }) => id !== historyId)[0];\n              navigate(`/chat/${chat?.id}`, { replace: true });\n            }\n          }}\n          onClickHistory={(historyId) => {\n            navigate(`/chat/${historyId}`, { replace: true });\n          }}\n        />\n      </BAICard>\n    )\n  );\n};\n\nfunction isClosable(chatLength: number) {\n  return chatLength > 1;\n}\n\nfunction isClonable(chatLength: number) {\n  return chatLength <= 10;\n}\n\nconst ChatPage: React.FC = () => {\n  const { id } = useParams();\n\n  const webuiNavigate = useWebUINavigate();\n\n  if (id && !getChatById(id)) {\n    webuiNavigate(`/chat`, { replace: true });\n  }\n\n  return (\n    <>\n      <PureChatPage id={id || generateChatId()} />\n    </>\n  );\n};\n\nexport default ChatPage;\n"],"names":["node","v0","v1","v2","v3","hash","v4","v5","v6","v7","v8","FluentEmojiIcon","_ref","name","height","width","icon","fluentEmoji","icons","_jsx","xmlns","viewBox","role","dangerouslySetInnerHTML","__html","body","useAIAgent","_agentsData$agents","key","checkUpdate","useUpdatableState","data","agentsData","isLoading","useTanQuery","queryKey","queryFn","fetch","then","response","json","staleTime","agents","refresh","useCallback","makeAgentOptions","filter","map","agent","label","meta","title","value","id","toLocaleLowerCase","includes","loading","props","token","theme","useToken","controllableValue","setControllableValue","useControllableValue","searchAgent","setSearchAgent","useState","isSearchPending","startSearchTransition","useTransition","selectedAgent","find","_Fragment","children","_jsxs","Flex","gap","avatar","sizeXL","Select","showSearch","onSearch","v","filterOption","options","onChange","popupMatchSelectWidth","DEFAULT_CHAT_PARAMETERS","maxTokens","temperature","topP","topK","frequencyPenalty","presencePenalty","ChatParameterSliderFormItem","max","min","step","description","disabled","Form","Item","justify","style","Typography","Text","fontSize","fontSizeSM","marginRight","marginXXS","QuestionIconWithTooltip","trigger","InputNumberWithSlider","chatParameters","t","ChatParametersSliders","_ref2","parameters","usingParameters","onChangeParameter","currentParameters","useRef","Object","keys","length","ConfigProvider","components","verticalLabelPadding","itemMarginBottom","size","layout","initialValues","onValuesChange","values","current","align","fontSizeLG","marginLeft","Switch","checked","Divider","marginBlock","marginSM","entries","_ref3","params","total","useTranslation","LoadingOutlined","spin","color","colorTextSecondary","type","fetchKey","lifecycleStageFilter","selectPropsWithoutLoading","baiClient","useSuspendedBackendaiClient","controllableOpen","setControllableOpen","valuePropName","deferredOpen","useDeferredValue","searchStr","setSearchStr","deferredSearchStr","selectRef","lifecycleStageFilterStr","join","endpoint","selectedEndpoint","useLazyLoadQuery","_EndpointSelectValueQuery","require","endpoint_id","fetchPolicy","paginationData","result","endpoint_list","loadNext","isLoadingNext","query","initialPaginationVariables","otherVariables","getItem","getId","getTotal","previousResult","startLoadingNextTransition","limit","offset","setOffset","previousOtherVariablesRef","isNewOtherVariables","_","useMemo","items","undefined","hasNext","useEventNotStable","useEffect","useLazyPaginatedQuery","_EndpointSelectQuery","supports","Boolean","_result$endpoint_list","total_count","_result$endpoint_list2","item","selectOptions","optimisticValueWithLabel","setOptimisticValueWithLabel","isValueMatched","_selectRef$current","scrollTo","BAISelect","ref","placeholder","minWidth","searchValue","labelRender","Tooltip","BAILink","to","InfoIcon","autoClearSearchValue","labelInValue","option","_$castArray","_selectPropsWithoutLo","call","endReached","open","onDropdownVisibleChange","notFoundContent","Skeleton","Input","active","block","footer","TotalFooter","models","selectProps","fontWeight","groupBy","mapValues","ms","k","SyncSwitch","sync","onClick","Button","ToggleRightIcon","ToggleLeftIcon","colorPrimary","showCompareMenuItem","closable","cloneable","modelId","onChangeModel","endpointFrgmt","onChangeEndpoint","onChangeAgent","onChangeSync","onRemoveChat","onAddChat","onClearMessage","webuiNavigate","useWebUINavigate","isPendingEndpointTransition","startEndpointTransition","isPendingAgentTransition","startAgentTransition","useFragment","_ChatHeader_Endpoint","filterEmptyItem","ScaleIcon","_endpoint$endpoint_id","pathname","search","URLSearchParams","tab","endpointId","toString","EraserIcon","danger","CloseOutlined","experimentalAIAgents","useBAISettingUserState","direction","wrap","minHeight","paddingTop","paddingXS","paddingBottom","flexGrow","flexShrink","flexBasis","AIAgentSelect","EndpointSelect","isEmpty","ModelSelect","startTransition","zIndex","Popover","content","placement","padding","ControlOutlined","ArrowRightLeftIcon","Dropdown","menu","e","preventDefault","MoreOutlined","ChatAttachments","dropContainerRef","Attachments","beforeUpload","getDropContainer","accept","CloudUploadOutlined","autoFocus","openAttachment","onInputChange","onInputSubmit","onInputCancel","onAttachmentChange","onAttachmentOpenChange","senderProps","senderRef","focus","Sender","flex","onSubmit","onCancel","submitType","header","Header","onOpenChange","styles","info","prefix","Badge","dot","LinkOutlined","synchronizedMessageState","atom","synchronizedAttachmentState","chatSubmitKeyInfoState","input","setInput","stop","append","isStreaming","ChatInputStyle","borderTop","colorBorderSecondary","paddingBlock","paddingContentVertical","paddingInline","paddingContentHorizontal","isOpenAttachments","setIsOpenAttachments","files","setFiles","synchronizedMessage","setSynchronizedMessage","useAtom","synchronizedAttachment","setSynchronizedAttachment","chatSubmitKeyInfo","setChatSubmitKeyInfo","submitId","useId","submitKey","prevSyncRef","isUndefined","inputAttachment","isEqual","chatRequestOptions","experimental_attachments","createDataTransferFiles","handleInputChange","handleInputCancel","handleInputSubmit","setTimeout","Date","handleAttachmentChange","attachment","fileList","handleAttachmentOpenChange","ChatSender","useTokenCount","arguments","setNum","async","encode","str","encodeAsync","catch","messages","startTime","inputTokenCount","allChatMessageString","message","totalTokenCount","lastAssistantMessageString","lastAssistantMessage","last","lastAssistantTokenCount","tokenPerSecond","now","Tag","margin","toFixed","ChatMessageContainer","memo","onMouseEnter","onMouseLeave","left","right","paddingLeft","paddingMD","paddingRight","top","bottom","Avatar","fontSizeHeading3","displayName","copyable","defaultIcon","isCopied","setIsCopied","timeout","clearTimeout","CopyToClipboard","text","onCopy","CheckIcon","CopyIcon","languageMap","abap","ada","apache","apex","apl","applescript","ara","asm","astro","awk","ballerina","bat","beancount","berry","bibtex","bicep","blade","c","cadence","clarity","clojure","cmake","cobol","codeql","coffee","cpp","crystal","csharp","css","cue","cypher","d","dart","dax","diff","docker","elixir","elm","erb","erlang","fish","fsharp","gdresource","gdscript","gdshader","gherkin","glsl","gnuplot","go","graphql","groovy","hack","haml","handlebars","haskell","hcl","hjson","hlsl","html","http","imba","ini","java","javascript","jison","json5","jsonc","jsonl","jsonnet","jssm","jsx","julia","kotlin","kusto","latex","less","liquid","lisp","logo","lua","make","markdown","marko","matlab","mdc","mdx","mermaid","mojo","narrat","nextflow","nginx","nim","nix","ocaml","pascal","perl","php","plsql","postcss","powerquery","powershell","prisma","prolog","proto","pug","puppet","purescript","python","r","raku","razor","reg","rel","riscv","rst","ruby","rust","sas","sass","scala","scheme","scss","shaderlab","shellscript","shellsession","smalltalk","solidity","sparql","splunk","sql","stata","stylus","svelte","swift","tasl","tcl","tex","toml","tsx","turtle","twig","typescript","vb","verilog","vhdl","viml","vue","vyper","wasm","wenyan","wgsl","wolfram","xml","xsl","yaml","zenscript","zig","bash","batch","be","cdc","clj","cmd","console","cql","cs","dockerfile","erl","fs","fsl","gjs","gts","hbs","hs","jade","js","kql","makefile","md","nar","nf","objc","perl6","properties","ps","ps1","py","ql","rb","rs","sh","shader","shell","spl","styl","ts","vim","vimscript","vy","yml","zsh","文言","SyntaxHighlighter","language","useHighlight","lang","isDarkMode","useThemeMode","toLowerCase","matchedLanguage","Md5","hashStr","useSWR","codeToHtml","error","whiteSpace","dir","CodeBlock","CodeHead","extra","paddingSM","background","display","overflow","textOverflow","ChatMessageContentBlock","renderCode","className","rest","match","exec","String","replace","border","borderRadius","borderRadiusLG","CopyButton","PreTag","oneLight","wrapLongLines","wrapLines","renderParagraph","_ref4","Markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","p","code","ChatMessageContent","_ref5","parseMarkdownIntoBlocks","marked","lexer","raw","index","ChatMessage","enableExtraHover","isHovered","setIsHovered","reasoning","contentType","textAlign","Image","src","url","alt","maxWidth","maxHeight","FileCard","uid","borderColor","borderWidth","lineWidth","backgroundColor","colorBgContainer","colorBgContainerDisabled","Collapse","marginTop","Spin","opacity","transition","transitionDelay","AssistantChatMessage","Compact","autoScroll","atBottom","onScrollToBottom","ArrowDownIcon","shape","ChatMessageRenders","user","assistant","system","virtuosoRef","setAtBottom","overscan","window","innerHeight","itemContent","RenderChatMessage","Virtuoso","atBottomStateChange","atBottomThreshold","computeItemKey","followOutput","initialTopMostItemIndex","position","transform","ScrollBottomHandlerButton","virtuoso","scrollToIndex","behavior","ChatMessageList","VirtualChatMessageList","ChatTokenCounter","PureChatTokenCounter","endpoint_token_list","_EndpointTokenSelectQuery","isEmptyEndpointId","endpointTokenListData","_endpointTokenListDat","ok","dayjs","sortBy","valid_until","tz","isAfter","sortEndpointTokenList","target","_castArray$0$value","_castArray","castArray","CustomModelForm","endpointUrl","basePath","themeToken","formRef","containerRef","shrinkControlSize","setShrinkControlSize","useResizeObserver","contentRect","paddingContentVerticalLG","borderBottom","requiredMark","marginBottom","Alert","showIcon","addonBefore","defaultValue","EndpointTokenSelect","ReloadOutlined","_formRef$current$getF","_formRef$current","_formRef$current2","getFieldValue","useStyles","createStyles","chatCard","alert","useModels","provider","baseURL","modelsResult","useSuspenseTanQuery","apiKey","origin","port","path","URL","trim","host","createModelsURL","authToken","headers","Authorization","res","status","select","model","_modelsResult$data$0$","_modelsResult$data","_modelsResult$data$","modelsError","getModelsErrorMessage","ChatHeader","PureChatHeader","ChatInput","React","PureChatInput","PureChatCard","_endpoint$url","chat","onUpdateChat","fetchOnClient","onSaveMessage","otherCardProps","appMessage","App","useApp","endpointResult","_ChatCardQuery","chatCardStyle","alertStyle","isPendingUpdate","startUpdateTransition","updateFetchKey","setStartTime","createBaseURL","a","agentId","setMessages","useChat","api","initialMessages","experimental_throttle","init","_agent$config$system_","JSON","parse","createOpenAI","streamText","abortSignal","signal","wrapLanguageModel","middleware","extractReasoningMiddleware","tagName","config","system_prompt","userMessage","at","getLatestUserMessage","toDataStreamResponse","sendReasoning","getErrorMessage","APICallError","isInstance","responseBody","Error","getAIErrorMessage","onFinish","assistantMessage","finishReason","Card","variant","classNames","colorFillQuaternary","flexDirection","actions","ChatMessages","generateChatDataId","createIdGenerator","generator","customAlphabet","generateChatId","Math","random","chatHistoryCache","cacheName","_localStorage$getItem","cache","Map","localStorage","set","setItem","stringify","Array","from","get","delete","clear","removeItem","getAll","createLocalStorageCache","useHistory","history","setHistory","setChat","removeHistory","sort","sortHistoryByUpdatedAt","updateHistory","mergedData","updatedAt","toISOString","addChatData","chatData","createChatData","chats","findIndex","splice","getChatById","removeChatData","updateChatData","currentChat","saveChatMessage","lastMessage","_chat$chats$0$message","slice","parts","clearChatMessage","cachedChat","dateTime","newChats","createChat","b","getTime","chatViewHorizontal","chatViewVertical","fixEditableVerticalAlign","ChatHistoryDrawer","selectedHistoryId","onClickClose","onClickRemove","onClickHistory","Drawer","getContainer","onClose","mask","maskClosable","List","dataSource","renderItem","TrashIcon","stopPropagation","cursor","Meta","format","PureChatPage","defaultEndpointId","useQueryParams","StringParam","useChatProviderData","_endpoint_list$items$","_ChatPageQuery","useDefaultEndpointId","openHistory","setOpenHistory","navigate","BAICard","editable","triggerType","PlusIcon","HistoryIcon","Suspense","fallback","ChatCard","newChatProperties","chatLength","isClonable","historyId","ChatPage","useParams"],"sourceRoot":""}