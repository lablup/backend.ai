{"version":3,"file":"static/js/473.088b7609.chunk.js","mappings":"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","sources":["hooks/useIntervalValue.tsx","components/BAIIntervalText.tsx","components/BatchSessionScheduledTimeSetting.tsx","components/DatePickerISO.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport function useInterval(callback: () => void, delay: number) {\n  const savedCallback = useRef<() => any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current?.();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport const useIntervalValue = (calculator: () => any, delay: number) => {\n  const [result, setResult] = useState(calculator());\n\n  useInterval(() => {\n    const newResult = calculator();\n    if (newResult !== result) setResult(newResult);\n  }, delay);\n\n  return result;\n};\n","import { useIntervalValue } from '../hooks/useIntervalValue';\nimport React from 'react';\n\nconst BAIIntervalText: React.FC<{\n  callback: () => any;\n  delay: number;\n}> = ({ callback, delay }) => {\n  const value = useIntervalValue(callback, delay);\n  return value;\n};\n\nexport default BAIIntervalText;\n","import BAIIntervalText from './BAIIntervalText';\nimport DatePickerISO, { DatePickerISOProps } from './DatePickerISO';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport Flex from './Flex';\nimport { useToggle } from 'ahooks';\nimport { Typography, Checkbox, theme } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props extends DatePickerISOProps {}\nconst BatchSessionScheduledTimeSetting: React.FC<Props> = ({\n  ...datePickerISOProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [isChecked, { toggle: toggleChecked }] = useToggle(false);\n  const [scheduleTime, setScheduleTime] = React.useState<\n    string | undefined | null\n  >();\n  const { dispatchEvent } = useWebComponentInfo();\n  const dispatchAndSetScheduleTime = (value: string | undefined | null) => {\n    setScheduleTime(value);\n    dispatchEvent('change', value);\n  };\n\n  return (\n    <>\n      <Typography.Text type=\"secondary\" style={{ fontSize: token.fontSizeSM }}>\n        {t('session.launcher.SessionStartTime')}\n      </Typography.Text>\n      <Flex align=\"start\" gap=\"sm\">\n        <Checkbox\n          checked={isChecked}\n          onClick={(v) => {\n            toggleChecked();\n            const newScheduleTime = v\n              ? dayjs().add(2, 'minutes').toISOString()\n              : undefined;\n            dispatchAndSetScheduleTime(newScheduleTime);\n          }}\n        >\n          {t('session.launcher.Enable')}\n        </Checkbox>\n        <Flex direction=\"column\" align=\"end\">\n          <DatePickerISO\n            {...datePickerISOProps}\n            popupStyle={{ position: 'fixed' }}\n            disabledDate={(date) => {\n              return date.isBefore(dayjs().startOf('minute'));\n            }}\n            disabled={!isChecked}\n            showTime={{\n              hideDisabledOptions: true,\n            }}\n            value={isChecked ? scheduleTime : undefined}\n            onChange={(value) => {\n              dispatchAndSetScheduleTime(value);\n            }}\n            onBlur={() => {\n              dispatchAndSetScheduleTime(scheduleTime);\n            }}\n            status={\n              isChecked && !scheduleTime\n                ? 'warning'\n                : dayjs(scheduleTime).isBefore(dayjs())\n                  ? 'error'\n                  : undefined\n            }\n          />\n          {isChecked && scheduleTime && (\n            <Typography.Text\n              type=\"secondary\"\n              style={{ fontSize: token.fontSizeSM - 2 }}\n            >\n              ({t('session.launcher.StartAfter')}\n              <BAIIntervalText\n                callback={() => {\n                  // Add 2 minutes if the schedule time is in the past\n                  const leftTime = dayjs(scheduleTime).diff(dayjs());\n                  if (leftTime < 0) {\n                    dispatchAndSetScheduleTime(\n                      dayjs(scheduleTime).add(2, 'minutes').toISOString(),\n                    );\n                  }\n                  return dayjs(scheduleTime).fromNow();\n                }}\n                delay={1000}\n              />\n              )\n            </Typography.Text>\n          )}\n          {isChecked && !scheduleTime && (\n            <Typography.Text\n              type=\"warning\"\n              style={{ fontSize: token.fontSizeSM - 2 }}\n            >\n              {t('session.launcher.StartTimeDoesNotApply')}\n            </Typography.Text>\n          )}\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default BatchSessionScheduledTimeSetting;\n","import { useControllableValue } from 'ahooks';\nimport { DatePicker } from 'antd';\nimport { PickerDateProps } from 'antd/es/date-picker/generatePicker';\nimport dayjs, { Dayjs } from 'dayjs';\nimport React from 'react';\n\nexport interface DatePickerISOProps\n  extends Omit<PickerDateProps<Dayjs>, 'value' | 'onChange'> {\n  value?: string | undefined | null;\n  onChange?: (value: string | undefined) => void;\n  localFormat?: boolean;\n}\nconst DatePickerISO: React.FC<DatePickerISOProps> = ({\n  value,\n  onChange,\n  localFormat,\n  ...pickerProps\n}) => {\n  const [, setControllableValue] = useControllableValue({\n    value,\n    onChange,\n  });\n\n  return (\n    <DatePicker\n      value={value ? dayjs(value) : undefined}\n      onChange={(value) => {\n        const newValue = localFormat\n          ? value?.format()\n          : value?.tz()?.toISOString();\n        // \"2023-11-10T18:09:56+08:00\"\n        setControllableValue(newValue);\n      }}\n      {...pickerProps}\n    />\n  );\n};\n\nexport default DatePickerISO;\n"],"names":["useIntervalValue","calculator","delay","_useState","useState","_useState2","_slicedToArray","result","setResult","callback","savedCallback","useRef","useEffect","current","id","setInterval","_savedCallback$curren","call","clearInterval","useInterval","newResult","_ref","datePickerISOProps","Object","assign","_objectDestructuringEmpty","t","useTranslation","token","theme","useToken","_useToggle","useToggle","_useToggle2","isChecked","toggleChecked","toggle","_React$useState","React","_React$useState2","scheduleTime","setScheduleTime","dispatchEvent","useWebComponentInfo","dispatchAndSetScheduleTime","value","_jsxs","_Fragment","children","_jsx","Typography","Text","type","style","fontSize","fontSizeSM","Flex","align","gap","Checkbox","checked","onClick","v","newScheduleTime","dayjs","add","toISOString","undefined","direction","DatePickerISO","_objectSpread","popupStyle","position","disabledDate","date","isBefore","startOf","disabled","showTime","hideDisabledOptions","onChange","onBlur","status","BAIIntervalText","diff","fromNow","localFormat","pickerProps","_objectWithoutProperties","_excluded","_useControllableValue","useControllableValue","setControllableValue","DatePicker","_value$tz","newValue","format","tz"],"sourceRoot":""}