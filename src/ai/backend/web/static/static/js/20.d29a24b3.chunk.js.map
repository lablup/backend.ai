{"version":3,"file":"static/js/20.d29a24b3.chunk.js","mappings":"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","sources":["components/UserSettingModal.tsx","components/__generated__/UserSettingModalMutation.graphql.ts","components/__generated__/UserSettingModalQuery.graphql.ts"],"sourcesContent":["import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport TOTPActivateModal from './TOTPActivateModal';\nimport { UserSettingModalMutation } from './__generated__/UserSettingModalMutation.graphql';\nimport {\n  UserSettingModalQuery,\n  UserSettingModalQuery$data,\n} from './__generated__/UserSettingModalQuery.graphql';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { Form, Input, Select, Switch, message, Typography, Modal } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useMutation } from 'react-relay';\nimport { useLazyLoadQuery } from 'react-relay';\n\ntype User = UserSettingModalQuery$data['user'];\n\ntype UserStatus = {\n  [key: string]: string;\n};\n\ntype UserRole = {\n  [key: string]: string[];\n};\n\ninterface Props extends BAIModalProps {\n  extraFetchKey?: string;\n}\n\nconst UserSettingModal: React.FC<Props> = ({\n  extraFetchKey = '',\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    userEmail: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      userEmail: '',\n    };\n  }\n  const { open, userEmail } = parsedValue;\n\n  const [modal, contextHolder] = Modal.useModal();\n\n  const [form] = Form.useForm<User>();\n\n  const userStatus: UserStatus = {\n    active: 'Active',\n    inactive: 'Inactive',\n    'before-verification': 'Before Verification',\n    deleted: 'Deleted',\n  };\n\n  const permissionRangeOfRoleChanges: UserRole = {\n    superadmin: ['superadmin', 'admin', 'user', 'monitor'],\n    admin: ['admin', 'user', 'monitor'],\n  };\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const deferredMergedFetchKey = useDeferredValue(fetchKey + extraFetchKey);\n\n  const baiClient = useSuspendedBackendaiClient();\n  const sudoSessionEnabledSupported = baiClient?.supports(\n    'sudo-session-enabled',\n  );\n  let totpSupported = false;\n  let {\n    data: isManagerSupportingTOTP,\n    isLoading: isLoadingManagerSupportingTOTP,\n  } = useQuery(\n    'isManagerSupportingTOTP',\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    },\n  );\n  totpSupported = baiClient?.supports('2FA') && isManagerSupportingTOTP;\n\n  const { user, loggedInUser } = useLazyLoadQuery<UserSettingModalQuery>(\n    graphql`\n      query UserSettingModalQuery(\n        $email: String\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n        $loggedInUserEmail: String\n      ) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n          # support from 23.09.0b1\n          # https://github.com/lablup/backend.ai/pull/1530\n          sudo_session_enabled\n            @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n          totp_activated @skipOnClient(if: $isNotSupportTotp)\n          ...TOTPActivateModalFragment\n        }\n        loggedInUser: user(email: $loggedInUserEmail) {\n          role\n        }\n      }\n    `,\n    {\n      email: userEmail,\n      isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n      isNotSupportTotp: !totpSupported,\n      loggedInUserEmail: baiClient?.email ?? '',\n    },\n    {\n      fetchKey: deferredMergedFetchKey,\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const [commitModifyUserSetting, isInFlightCommitModifyUserSetting] =\n    useMutation<UserSettingModalMutation>(graphql`\n      mutation UserSettingModalMutation(\n        $email: String!\n        $props: ModifyUserInput!\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n      ) {\n        modify_user(email: $email, props: $props) {\n          ok\n          msg\n          user {\n            id\n            email\n            username\n            need_password_change\n            full_name\n            description\n            status\n            domain_name\n            role\n            groups {\n              id\n              name\n            }\n            # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n            # support from 23.09.0b1\n            # https://github.com/lablup/backend.ai/pull/1530\n            sudo_session_enabled\n              @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n            totp_activated @skipOnClient(if: $isNotSupportTotp)\n            ...TOTPActivateModalFragment\n          }\n        }\n      }\n    `);\n\n  const mutationToRemoveTotp = useTanMutation({\n    mutationFn: (email: string) => {\n      return baiClient.remove_totp(email);\n    },\n  });\n\n  const [isOpenTOTPActivateModal, { toggle: toggleTOTPActivateModal }] =\n    useToggle(false);\n\n  const _onOk = () => {\n    form.validateFields().then(async (values) => {\n      let input = { ...values };\n      delete input.email;\n      input = _.omit(input, ['password_confirm']);\n      input = _.omitBy(input, (item) => item === undefined || item === '');\n      if (!sudoSessionEnabledSupported) {\n        delete input?.sudo_session_enabled;\n      }\n      // TOTP setting\n      if (!totpSupported) {\n        delete input?.totp_activated;\n      }\n\n      commitModifyUserSetting({\n        variables: {\n          email: values?.email || '',\n          props: input,\n          isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n          isNotSupportTotp: !totpSupported,\n        },\n        onCompleted(res) {\n          if (res?.modify_user?.ok) {\n            message.success(t('environment.SuccessfullyModified'));\n          } else {\n            message.error(res?.modify_user?.msg);\n          }\n          dispatchEvent('ok', null);\n        },\n        onError(err) {\n          message.error(err?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      open={open}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      centered\n      title={t('credential.ModifyUserDetail')}\n      destroyOnClose={true}\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitModifyUserSetting}\n      {...baiModalProps}\n    >\n      <Form\n        preserve={false}\n        form={form}\n        labelCol={{ span: 10 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ marginBottom: 40, marginTop: 20 }}\n        initialValues={{ ...user }}\n      >\n        <Form.Item name=\"email\" label={t('credential.UserID')}>\n          <Input disabled />\n        </Form.Item>\n        <Form.Item name=\"username\" label={t('credential.UserName')}>\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item name=\"full_name\" label={t('credential.FullName')}>\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={t('general.NewPassword')}\n          rules={[\n            {\n              pattern: /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[_\\W]).{8,}$/,\n              message: t('webui.menu.InvalidPasswordMessage'),\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"password_confirm\"\n          dependencies={['password']}\n          label={t('webui.menu.NewPasswordAgain')}\n          rules={[\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value && !!getFieldValue('password')) {\n                  return Promise.reject(\n                    new Error(t('webui.menu.PleaseConfirmYourPassword')),\n                  );\n                }\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(t('environment.PasswordsDoNotMatch')),\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item name=\"description\" label={t('credential.Description')}>\n          <Input.TextArea placeholder={t('maxLength.500chars')} />\n        </Form.Item>\n        <Form.Item name=\"status\" label={t('credential.UserStatus')}>\n          <Select\n            options={_.map(userStatus, (value, key) => {\n              return {\n                value: key,\n                label: value,\n              };\n            })}\n          />\n        </Form.Item>\n        {!!user?.role &&\n          !!loggedInUser?.role &&\n          loggedInUser.role in permissionRangeOfRoleChanges && (\n            <Form.Item name=\"role\" label={t('credential.Role')}>\n              <Select\n                options={_.map(\n                  permissionRangeOfRoleChanges[loggedInUser.role],\n                  (item) => {\n                    return {\n                      value: item,\n                      label: item,\n                    };\n                  },\n                )}\n              />\n            </Form.Item>\n          )}\n        <Form.Item\n          name=\"need_password_change\"\n          label={t('credential.DescRequirePasswordChange')}\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n        {!!sudoSessionEnabledSupported && (\n          <Form.Item\n            name=\"sudo_session_enabled\"\n            label={t('credential.EnableSudoSession')}\n            valuePropName=\"checked\"\n          >\n            <Switch />\n          </Form.Item>\n        )}\n        {!!totpSupported && (\n          <Form.Item\n            name=\"totp_activated\"\n            label={t('webui.menu.TotpActivated')}\n            valuePropName=\"checked\"\n            extra={\n              user?.email !== baiClient?.email && (\n                <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                  {t('credential.AdminCanOnlyRemoveTotp')}\n                </Typography.Text>\n              )\n            }\n          >\n            <Switch\n              loading={\n                isLoadingManagerSupportingTOTP || mutationToRemoveTotp.isLoading\n              }\n              disabled={\n                user?.email !== baiClient?.email && !user?.totp_activated\n              }\n              onChange={(checked: boolean) => {\n                if (checked) {\n                  toggleTOTPActivateModal();\n                } else {\n                  if (user?.totp_activated) {\n                    form.setFieldValue('totp_activated', true);\n                    modal.confirm({\n                      title: t('totp.TurnOffTotp'),\n                      icon: <ExclamationCircleFilled />,\n                      content: t('totp.ConfirmTotpRemovalBody'),\n                      okText: t('button.Yes'),\n                      okType: 'danger',\n                      cancelText: t('button.No'),\n                      onOk() {\n                        mutationToRemoveTotp.mutate(user?.email || '', {\n                          onSuccess: () => {\n                            message.success(t('totp.RemoveTotpSetupCompleted'));\n                            updateFetchKey();\n                            form.setFieldValue('totp_activated', false);\n                          },\n                          onError: (err) => {\n                            console.log(err);\n                          },\n                        });\n                      },\n                      onCancel() {\n                        form.setFieldValue('totp_activated', true);\n                      },\n                    });\n                  }\n                }\n              }}\n            />\n          </Form.Item>\n        )}\n      </Form>\n      {!!totpSupported && (\n        <TOTPActivateModal\n          userFrgmt={user}\n          open={isOpenTOTPActivateModal}\n          onRequestClose={(success) => {\n            if (success) {\n              updateFetchKey();\n            } else {\n              form.setFieldValue('totp_activated', false);\n            }\n            toggleTOTPActivateModal();\n          }}\n        />\n      )}\n      {contextHolder}\n    </BAIModal>\n  );\n};\n\nexport default UserSettingModal;\n","/**\n * @generated SignedSource<<7a67024e8aa866120f14c593bc174ad4>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModifyUserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null> | null;\n  description?: string | null;\n  domain_name?: string | null;\n  full_name?: string | null;\n  group_ids?: ReadonlyArray<string | null> | null;\n  is_active?: boolean | null;\n  need_password_change?: boolean | null;\n  password?: string | null;\n  resource_policy?: string | null;\n  role?: string | null;\n  status?: string | null;\n  sudo_session_enabled?: boolean | null;\n  totp_activated?: boolean | null;\n  username?: string | null;\n};\nexport type UserSettingModalMutation$variables = {\n  email: string;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n  props: ModifyUserInput;\n};\nexport type UserSettingModalMutation$data = {\n  readonly modify_user: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n    readonly user: {\n      readonly description: string | null;\n      readonly domain_name: string | null;\n      readonly email: string | null;\n      readonly full_name: string | null;\n      readonly groups: ReadonlyArray<{\n        readonly id: string | null;\n        readonly name: string | null;\n      } | null> | null;\n      readonly id: string | null;\n      readonly need_password_change: boolean | null;\n      readonly role: string | null;\n      readonly status: string | null;\n      readonly sudo_session_enabled: boolean | null;\n      readonly totp_activated: boolean | null;\n      readonly username: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n    } | null;\n  } | null;\n};\nexport type UserSettingModalMutation = {\n  response: UserSettingModalMutation$data;\n  variables: UserSettingModalMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportSudoSessionEnabled\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportTotp\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"props\",\n    \"variableName\": \"props\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ok\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"msg\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v7/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TOTPActivateModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v3/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"9b1a3e23ee391f117fee34e25b6fbf05\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserSettingModalMutation(\\n  $email: String!\\n  $props: ModifyUserInput!\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  modify_user(email: $email, props: $props) {\\n    ok\\n    msg\\n    user {\\n      id\\n      email\\n      username\\n      need_password_change\\n      full_name\\n      description\\n      status\\n      domain_name\\n      role\\n      groups {\\n        id\\n        name\\n      }\\n      sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n      totp_activated @skipOnClient(if: $isNotSupportTotp)\\n      ...TOTPActivateModalFragment\\n    }\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b7bb2083b30dea10ff3f89197e67e2cb\";\n\nexport default node;\n","/**\n * @generated SignedSource<<d08c3dc9daaa457025b029cf4ba48420>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserSettingModalQuery$variables = {\n  email?: string | null;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n  loggedInUserEmail?: string | null;\n};\nexport type UserSettingModalQuery$data = {\n  readonly loggedInUser: {\n    readonly role: string | null;\n  } | null;\n  readonly user: {\n    readonly description: string | null;\n    readonly domain_name: string | null;\n    readonly email: string | null;\n    readonly full_name: string | null;\n    readonly groups: ReadonlyArray<{\n      readonly id: string | null;\n      readonly name: string | null;\n    } | null> | null;\n    readonly need_password_change: boolean | null;\n    readonly role: string | null;\n    readonly status: string | null;\n    readonly sudo_session_enabled: boolean | null;\n    readonly totp_activated: boolean | null;\n    readonly username: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n  } | null;\n};\nexport type UserSettingModalQuery = {\n  response: UserSettingModalQuery$data;\n  variables: UserSettingModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportSudoSessionEnabled\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportTotp\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"loggedInUserEmail\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n},\nv14 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"loggedInUserEmail\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"TOTPActivateModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"loggedInUser\",\n        \"args\": (v14/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v9/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"loggedInUser\",\n        \"args\": (v14/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v9/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"55fb94209e66cec0a1a802ff12b18c64\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSettingModalQuery(\\n  $email: String\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n  $loggedInUserEmail: String\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n    totp_activated @skipOnClient(if: $isNotSupportTotp)\\n    ...TOTPActivateModalFragment\\n    id\\n  }\\n  loggedInUser: user(email: $loggedInUserEmail) {\\n    role\\n    id\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"139401e06fdc036b1235475a82fd4397\";\n\nexport default node;\n"],"names":["_ref","_baiClient$email","parsedValue","_ref$extraFetchKey","extraFetchKey","baiModalProps","_objectWithoutProperties","_excluded","t","useTranslation","_useWebComponentInfo","useWebComponentInfo","value","dispatchEvent","JSON","parse","error","open","userEmail","totpSupported","_parsedValue","_Modal$useModal","Modal","useModal","_Modal$useModal2","_slicedToArray","modal","contextHolder","_Form$useForm","Form","useForm","form","permissionRangeOfRoleChanges","superadmin","admin","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","deferredMergedFetchKey","useDeferredValue","baiClient","useSuspendedBackendaiClient","sudoSessionEnabledSupported","supports","_useQuery","useQuery","isManagerSupportingTOTP","suspense","data","isLoadingManagerSupportingTOTP","isLoading","_useLazyLoadQuery","useLazyLoadQuery","_UserSettingModalQuery","require","email","isNotSupportSudoSessionEnabled","isNotSupportTotp","loggedInUserEmail","fetchPolicy","user","loggedInUser","_useMutation","useMutation","_UserSettingModalMutation","_useMutation2","commitModifyUserSetting","isInFlightCommitModifyUserSetting","mutationToRemoveTotp","useTanMutation","mutationFn","remove_totp","_useToggle","useToggle","_useToggle2","isOpenTOTPActivateModal","toggleTOTPActivateModal","toggle","_jsxs","BAIModal","_objectSpread","onCancel","centered","title","destroyOnClose","onOk","validateFields","then","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","input","_input","_input2","wrap","_context","prev","next","_","item","undefined","sudo_session_enabled","totp_activated","variables","props","onCompleted","res","_res$modify_user","_res$modify_user2","modify_user","ok","message","success","msg","onError","err","stop","_x","apply","arguments","confirmLoading","children","preserve","labelCol","span","wrapperCol","validateTrigger","style","marginBottom","marginTop","initialValues","_jsx","Item","name","label","Input","disabled","placeholder","rules","pattern","Password","dependencies","_ref3","getFieldValue","validator","Promise","reject","Error","resolve","TextArea","Select","options","active","inactive","deleted","key","role","valuePropName","Switch","extra","Typography","Text","type","fontSize","loading","onChange","checked","setFieldValue","confirm","icon","ExclamationCircleFilled","content","okText","okType","cancelText","mutate","onSuccess","console","log","TOTPActivateModal","userFrgmt","onRequestClose","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","hash"],"sourceRoot":""}