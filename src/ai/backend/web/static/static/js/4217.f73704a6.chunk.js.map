{"version":3,"file":"static/js/4217.f73704a6.chunk.js","mappings":"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","sources":["components/Chat/__generated__/ChatCardQuery.graphql.ts","components/Chat/__generated__/ChatHeader_Endpoint.graphql.ts","components/Chat/__generated__/EndpointSelectQuery.graphql.ts","components/Chat/__generated__/EndpointTokenSelectQuery.graphql.ts","components/FluentEmojiIcon.tsx","hooks/useAIAgent.ts","components/Chat/AIAgentSelect.tsx","components/Chat/EndpointSelect.tsx","components/Chat/ModelSelect.tsx","components/Chat/ChatHeader.tsx","components/Chat/ChatSender.tsx","components/Chat/ChatInput.tsx","hooks/useTokenizer.ts","components/Chat/ChatTokenCounter.tsx","components/Chat/ChatMessageContainer.tsx","components/Chat/CopyButton.tsx","hooks/useHighlight.ts","components/Chat/SyntaxHighight.tsx","components/Chat/ChatMessageContent.tsx","components/Chat/ChatMessage.tsx","components/Chat/AssistantChatMesssage.tsx","components/Chat/ScrollBottomHandlerButton.tsx","components/Chat/VirtualChatMessageList.tsx","components/Chat/UserChatMesssage.tsx","components/Chat/ChatMessages.tsx","components/Chat/EndpointTokenSelect.tsx","components/Chat/CustomModelForm.tsx","components/Chat/ChatCard.tsx","components/Chat/Conversation.tsx","pages/ChatPage.tsx","pages/__generated__/ChatPageQuery.graphql.ts"],"sourcesContent":["/**\n * @generated SignedSource<<e5d693125b3adaa1a4eae699dd1aee12>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs, Result } from \"relay-runtime\";\nexport type ChatCardQuery$variables = {\n  endpointId: string;\n};\nexport type ChatCardQuery$data = {\n  readonly endpoint: Result<{\n    readonly endpoint_id: string | null | undefined;\n    readonly url: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ChatHeader_Endpoint\">;\n  } | null | undefined, unknown>;\n};\nexport type ChatCardQuery = {\n  response: ChatCardQuery$data;\n  variables: ChatCardQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpointId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ChatCardQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": {\n          \"alias\": null,\n          \"args\": (v1/*: any*/),\n          \"concreteType\": \"Endpoint\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"endpoint\",\n          \"plural\": false,\n          \"selections\": [\n            (v2/*: any*/),\n            (v3/*: any*/),\n            {\n              \"args\": null,\n              \"kind\": \"FragmentSpread\",\n              \"name\": \"ChatHeader_Endpoint\"\n            }\n          ],\n          \"storageKey\": null\n        },\n        \"to\": \"RESULT\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ChatCardQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"6e2c7cca467d32f74de4ddf840a8f08a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ChatCardQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ChatCardQuery(\\n  $endpointId: UUID!\\n) {\\n  endpoint(endpoint_id: $endpointId) {\\n    endpoint_id\\n    url\\n    ...ChatHeader_Endpoint\\n    id\\n  }\\n}\\n\\nfragment ChatHeader_Endpoint on Endpoint {\\n  endpoint_id\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"5ff3fd270fca0bac7779be279e93341e\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c53946a820e47295c1530ab5d02ed807>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ChatHeader_Endpoint$data = {\n  readonly endpoint_id: string | null | undefined;\n  readonly \" $fragmentType\": \"ChatHeader_Endpoint\";\n};\nexport type ChatHeader_Endpoint$key = {\n  readonly \" $data\"?: ChatHeader_Endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ChatHeader_Endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ChatHeader_Endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"baa41c02cf67330c6bf4313d43280faa\";\n\nexport default node;\n","/**\n * @generated SignedSource<<fa509d1aed66953967269bb3b8bc3764>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type EndpointSelectQuery$variables = {\n  endpoint_id: string;\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n  skipEndpoint: boolean;\n};\nexport type EndpointSelectQuery$data = {\n  readonly endpoint: {\n    readonly endpoint_id: string | null | undefined;\n    readonly name: string | null | undefined;\n    readonly url: string | null | undefined;\n  } | null | undefined;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointSelectQuery = {\n  response: EndpointSelectQuery$data;\n  variables: EndpointSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpoint_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipEndpoint\"\n},\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv11 = [\n  (v8/*: any*/),\n  (v9/*: any*/),\n  (v10/*: any*/)\n],\nv12 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpoint_id\"\n  }\n],\nv13 = [\n  (v8/*: any*/),\n  (v9/*: any*/),\n  (v10/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v11/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v11/*: any*/),\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v3/*: any*/),\n      (v2/*: any*/),\n      (v4/*: any*/),\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v13/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v13/*: any*/),\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"057f79f4d6fde184fa40f8615eea1b50\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n  $endpoint_id: UUID!\\n  $skipEndpoint: Boolean!\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      url\\n      id\\n    }\\n  }\\n  endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\\n    name\\n    endpoint_id\\n    url\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"3778e0b0dd1a53c203b0eb756fa6cfcf\";\n\nexport default node;\n","/**\n * @generated SignedSource<<715fa760caad46a2fadd8e35e197b7ac>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { Result } from \"relay-runtime\";\nexport type EndpointTokenSelectQuery$variables = {\n  endpointId: string;\n  isEmptyEndpointId: boolean;\n};\nexport type EndpointTokenSelectQuery$data = {\n  readonly endpoint_token_list: Result<{\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly id: string | null | undefined;\n      readonly token: string;\n      readonly valid_until: string | null | undefined;\n    } | null | undefined>;\n  } | null | undefined, unknown>;\n};\nexport type EndpointTokenSelectQuery = {\n  response: EndpointTokenSelectQuery$data;\n  variables: EndpointTokenSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isEmptyEndpointId\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": [\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"endpoint_id\",\n      \"variableName\": \"endpointId\"\n    },\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"limit\",\n      \"value\": 100\n    },\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"offset\",\n      \"value\": 0\n    }\n  ],\n  \"concreteType\": \"EndpointTokenList\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"endpoint_token_list\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"EndpointToken\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"items\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"id\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"token\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"created_at\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"valid_until\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": (v1/*: any*/),\n        \"to\": \"RESULT\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"selections\": [\n      (v1/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"f8777131f4094de086beaa0e11d6ae09\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointTokenSelectQuery(\\n  $endpointId: UUID!\\n  $isEmptyEndpointId: Boolean!\\n) {\\n  endpoint_token_list(offset: 0, limit: 100, endpoint_id: $endpointId) @skipOnClient(if: $isEmptyEndpointId) {\\n    items {\\n      id\\n      token\\n      created_at\\n      valid_until\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"839fdaad7009de6f1d8dc79de4e35a3d\";\n\nexport default node;\n","import * as fluentEmoji from '@iconify-json/fluent-emoji-flat';\nimport React from 'react';\n\nexport const FluentEmojiIcon: React.FC<{\n  name?: string;\n  height?: number;\n  width?: number;\n}> = ({ name, height, width }) => {\n  const icon = fluentEmoji.icons.icons[name ?? 'pure'];\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      height={height}\n      width={width}\n      role=\"img\"\n      dangerouslySetInnerHTML={{ __html: icon.body }}\n    />\n  );\n};\n","import { useUpdatableState } from '.';\nimport { useTanQuery } from './reactQueryAlias';\nimport { useCallback } from 'react';\n\nexport interface AIAgentMeta {\n  title: string;\n  avatar?: string;\n  background?: string;\n  descriptions?: string;\n  tags?: string[];\n}\n\nexport interface AIAgentConfig {\n  system_prompt: string;\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgentParams {\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stop?: string | string[];\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgent {\n  id: string;\n  endpoint: string;\n  endpoint_id: string;\n  config: AIAgentConfig;\n  meta: AIAgentMeta;\n  params?: AIAgentParams;\n}\n\nexport interface AIAgents {\n  agents: AIAgent[];\n}\n\nconst TIMEOUT_24_HOURS = 24 * 60 * 60 * 1000;\n\nexport const useAIAgent = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data: agentsData, isLoading } = useTanQuery<AIAgents>({\n    queryKey: ['useAgents', key],\n    queryFn: () => {\n      return fetch('resources/ai-agents.json').then((response) =>\n        response.json(),\n      );\n    },\n    staleTime: TIMEOUT_24_HOURS, // 24 hours\n  });\n\n  return {\n    agents: agentsData?.agents ?? [],\n    isLoading,\n    refresh: useCallback(() => checkUpdate(), [checkUpdate]),\n  };\n};\n","import { AIAgent, useAIAgent } from '../../hooks/useAIAgent';\nimport Flex from '../Flex';\nimport { FluentEmojiIcon } from '../FluentEmojiIcon';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps, theme } from 'antd';\nimport React, { useState, useTransition } from 'react';\n\ninterface ChatAgentSelectProps extends Omit<SelectProps, 'options'> {}\n\nfunction makeAgentOptions(agents: AIAgent[], filter?: string) {\n  return agents\n    .map((agent) => ({\n      label: agent.meta.title,\n      value: agent.id,\n      ...agent,\n    }))\n    .filter((agent) => {\n      return agent.label.toLocaleLowerCase().includes(filter || '');\n    });\n}\n\nconst AIAgentSelect: React.FC<ChatAgentSelectProps> = ({\n  loading,\n  ...props\n}) => {\n  const { token } = theme.useToken();\n  const [controllableValue, setControllableValue] = useControllableValue(props);\n\n  const [searchAgent, setSearchAgent] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  const { agents } = useAIAgent();\n  const selectedAgent = agents.find((agent) => agent.id === controllableValue);\n\n  return (\n    <>\n      {selectedAgent && (\n        <Flex gap=\"xs\">\n          <FluentEmojiIcon\n            name={selectedAgent.meta.avatar}\n            height={token.sizeXL}\n            width={token.sizeXL}\n          />\n          <Select\n            showSearch\n            onSearch={(v) => {\n              startSearchTransition(() => {\n                setSearchAgent(v);\n              });\n            }}\n            filterOption={false}\n            loading={isSearchPending || loading}\n            options={makeAgentOptions(agents, searchAgent)}\n            value={controllableValue}\n            onChange={(v, agent) => {\n              setControllableValue(v, agent);\n            }}\n            popupMatchSelectWidth={false}\n          />\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default AIAgentSelect;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport {\n  EndpointSelectQuery,\n  EndpointSelectQuery$data,\n} from './__generated__/EndpointSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nexport type Endpoint = NonNullable<\n  NonNullableItem<EndpointSelectQuery$data['endpoint_list']>\n>;\n\nexport interface EndpointSelectProps\n  extends Omit<\n    SelectProps<\n      string,\n      {\n        label?: string | null;\n        value?: string | null;\n        endpoint?: Endpoint | null;\n      }\n    >,\n    'options'\n  > {\n  fetchKey?: string;\n  lifecycleStageFilter?: LifecycleStage[];\n}\n\ntype LifecycleStage = 'created' | 'destroying' | 'destroyed';\n\nconst EndpointSelect: React.FC<EndpointSelectProps> = ({\n  fetchKey,\n  lifecycleStageFilter = ['created'],\n  loading,\n  ...selectPropsWithoutLoading\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(selectPropsWithoutLoading);\n  const [searchStr, setSearchStr] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  const lifecycleStageFilterStr = lifecycleStageFilter\n    .map((v) => `lifecycle_stage == \"${v}\"`)\n    .join(' | ');\n\n  const { endpoint_list, endpoint } = useLazyLoadQuery<EndpointSelectQuery>(\n    graphql`\n      query EndpointSelectQuery(\n        $offset: Int!\n        $limit: Int!\n        $projectID: UUID\n        $filter: String\n        $endpoint_id: UUID!\n        $skipEndpoint: Boolean!\n      ) {\n        endpoint_list(\n          offset: $offset\n          limit: $limit\n          project: $projectID\n          filter: $filter\n        ) {\n          total_count\n          items {\n            name\n            endpoint_id\n            url\n          }\n        }\n        endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\n          name\n          endpoint_id\n          url\n        }\n      }\n    `,\n    {\n      limit: 10,\n      offset: 0,\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? [lifecycleStageFilterStr, searchStr]\n            .filter(Boolean)\n            .map((v) => `(${v})`)\n            .join(' & ')\n        : undefined,\n      endpoint_id: controllableValue,\n      skipEndpoint: !controllableValue,\n    },\n    {\n      fetchKey: fetchKey,\n    },\n  );\n\n  const selectOptions = endpoint\n    ? _.map(\n        _.uniqBy(_.concat(endpoint_list?.items, endpoint), 'endpoint_id'),\n        (item) => {\n          return {\n            label: item?.name,\n            value: item?.endpoint_id,\n            endpoint: item,\n          };\n        },\n      )\n    : _.map(endpoint_list?.items, (item) => {\n        return {\n          label: item?.name,\n          value: item?.endpoint_id,\n          endpoint: item,\n        };\n      });\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectEndpoint')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      onSearch={(v) => {\n        startSearchTransition(() => {\n          setSearchStr(v && `name ilike \"%${v}%\"`);\n        });\n      }}\n      filterOption={false}\n      loading={isSearchPending || loading}\n      options={selectOptions}\n      {...selectPropsWithoutLoading}\n      // override value and onChange\n      value={controllableValue}\n      onChange={(v, option) => {\n        setControllableValue(v, _.castArray(option)?.[0].endpoint);\n      }}\n    />\n  );\n};\n\nexport default EndpointSelect;\n","import { BAIModel } from './ChatModel';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModelSelectProps extends SelectProps {\n  models?: Array<BAIModel>;\n}\n\nconst ModelSelect: React.FC<ModelSelectProps> = ({\n  models,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectModel')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      options={_.chain(models)\n        .groupBy('group')\n        .mapValues((ms) =>\n          _.map(ms, (m) => ({\n            label: m.label,\n            value: m.name,\n          })),\n        )\n        .map((v, k) => ({\n          label: k === 'undefined' ? 'Others' : k,\n          options: v,\n        }))\n        .value()}\n      popupMatchSelectWidth={false}\n      {...selectProps}\n    />\n  );\n};\n\nexport default ModelSelect;\n","import { filterEmptyItem } from '../../helper';\nimport { useWebUINavigate } from '../../hooks';\nimport { AIAgent } from '../../hooks/useAIAgent';\nimport { useBAISettingUserState } from '../../hooks/useBAISetting';\nimport Flex from '../Flex';\nimport AIAgentSelect from './AIAgentSelect';\nimport { BAIModel } from './ChatModel';\nimport EndpointSelect, { EndpointSelectProps } from './EndpointSelect';\nimport ModelSelect from './ModelSelect';\nimport { ChatHeader_Endpoint$key } from './__generated__/ChatHeader_Endpoint.graphql';\nimport { CloseOutlined, MoreOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Dropdown, Button, theme, MenuProps, Typography, Switch } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { isEmpty } from 'lodash';\nimport { Scale as ScaleIcon, Eraser as EraserIcon } from 'lucide-react';\nimport React, { startTransition, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface SyncSwitchProps {\n  sync: boolean;\n  onClick: (sync: boolean) => void;\n}\n\nconst SyncSwitch: React.FC<SyncSwitchProps> = ({ sync, onClick }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      {sync && (\n        <Typography.Text type=\"secondary\">\n          {t('chatui.SyncInput')}\n        </Typography.Text>\n      )}\n      <Switch checked={sync} onClick={onClick} />\n    </>\n  );\n};\n\ninterface ChatHeaderProps {\n  showCompareMenuItem?: boolean;\n  closable?: boolean;\n  models: BAIModel[];\n  modelId: string;\n  onChangeModel: (modelId: string) => void;\n  endpointFrgmt?: ChatHeader_Endpoint$key | null;\n  onChangeEndpoint: EndpointSelectProps['onChange'];\n  agents: AIAgent[];\n  agent?: AIAgent;\n  onChangeAgent: (agent: AIAgent) => void;\n  sync: boolean;\n  onChangeSync: (sync: boolean) => void;\n  fetchKey: string;\n  onClickDeleteChatHistory?: () => void;\n  onClickClose?: () => void;\n  onClickCreate?: () => void;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\n  showCompareMenuItem,\n  closable,\n  models,\n  modelId,\n  onChangeModel,\n  endpointFrgmt,\n  onChangeEndpoint,\n  agents,\n  agent,\n  onChangeAgent,\n  sync,\n  onChangeSync,\n  onClickClose,\n  onClickCreate,\n  fetchKey,\n  onClickDeleteChatHistory,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const webuiNavigate = useWebUINavigate();\n\n  const [isPendingEndpointTransition, startEndpointTransition] =\n    useTransition();\n  const [isPendingAgentTransition, startAgentTransition] = useTransition();\n\n  // Using fragment instead of just endpoint_id to support future EndpointSelect extensions\n  const endpoint = useFragment(\n    graphql`\n      fragment ChatHeader_Endpoint on Endpoint {\n        endpoint_id\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const items: MenuProps['items'] = filterEmptyItem([\n    showCompareMenuItem && {\n      key: 'compare',\n      label: t('chatui.CompareWithOtherModels'),\n      icon: <ScaleIcon />,\n      onClick: () => {\n        webuiNavigate(\n          `/serving?tab=chatting&endpointId=${endpoint?.endpoint_id}&modelId=${modelId}`,\n        );\n      },\n    },\n    showCompareMenuItem && {\n      type: 'divider',\n    },\n    {\n      key: 'clear',\n      label: t('chatui.DeleteChatHistory'),\n      icon: <EraserIcon />,\n      onClick: () => {\n        onClickDeleteChatHistory?.();\n      },\n    },\n    closable && {\n      type: 'divider',\n    },\n    closable && {\n      key: 'close',\n      danger: true,\n      label: t('chatui.DeleteChattingSession'),\n      icon: <CloseOutlined />,\n      onClick: () => {\n        onClickClose?.();\n      },\n    },\n  ]);\n\n  const [experimentalAIAgents] = useBAISettingUserState(\n    'experimental_ai_agents',\n  );\n\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"start\"\n      wrap=\"wrap\"\n      gap=\"xs\"\n      style={{\n        minHeight: '56px',\n        width: '100%',\n        paddingTop: token.paddingXS,\n        paddingBottom: token.paddingXS,\n      }}\n    >\n      <Flex\n        wrap=\"wrap\"\n        align=\"start\"\n        gap=\"xs\"\n        style={{\n          flexGrow: 1,\n          flexShrink: 1,\n          flexBasis: 'auto',\n        }}\n      >\n        {experimentalAIAgents && (\n          <AIAgentSelect\n            loading={isPendingAgentTransition}\n            value={agent?.id}\n            onChange={(_, agent: any) => {\n              startAgentTransition(() => {\n                onChangeAgent(agent);\n              });\n            }}\n          />\n        )}\n        <EndpointSelect\n          fetchKey={fetchKey}\n          loading={isPendingEndpointTransition}\n          onChange={(id) => {\n            startEndpointTransition(() => {\n              onChangeEndpoint?.(id);\n            });\n          }}\n          value={endpoint?.endpoint_id}\n          popupMatchSelectWidth={false}\n        />\n        {!isEmpty(models) && (\n          <ModelSelect\n            models={models}\n            value={modelId}\n            onChange={(modelId) => {\n              startTransition(() => {\n                onChangeModel(modelId);\n              });\n            }}\n          />\n        )}\n      </Flex>\n      <Flex gap={'xs'}>\n        {closable && (\n          <SyncSwitch\n            sync={sync}\n            onClick={(checked) => {\n              startTransition(() => {\n                onChangeSync(checked);\n              });\n            }}\n          />\n        )}\n        <Button onClick={() => onClickCreate?.()} icon={<PlusOutlined />} />\n        <Dropdown menu={{ items }} trigger={['click']}>\n          <Button\n            type=\"link\"\n            onClick={(e) => e.preventDefault()}\n            icon={<MoreOutlined />}\n            style={{ color: token.colorTextSecondary, width: token.sizeMS }}\n          />\n        </Dropdown>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatHeader;\n","import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\nimport {\n  Attachments,\n  AttachmentsProps,\n  Sender,\n  SenderProps,\n} from '@ant-design/x';\nimport { Attachment } from '@ant-design/x/es/attachments';\nimport { Badge, Button, GetRef, UploadProps } from 'antd';\nimport { isEmpty } from 'lodash';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChatAttachmentsProps {\n  dropContainerRef: React.RefObject<HTMLElement | null>;\n}\n\nconst ChatAttachments: React.FC<ChatAttachmentsProps & AttachmentsProps> = ({\n  items,\n  onChange,\n  dropContainerRef,\n  children,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Attachments\n      beforeUpload={() => false}\n      getDropContainer={() => dropContainerRef.current}\n      accept=\"image/*,text/*\"\n      items={items}\n      onChange={onChange}\n      placeholder={(type) =>\n        type === 'drop'\n          ? {\n              title: t('chatui.DropFileHere'),\n            }\n          : {\n              icon: <CloudUploadOutlined />,\n              title: t('chatui.UploadFiles'),\n              description: t('chatui.UploadFilesDescription'),\n            }\n      }\n    >\n      {children}\n    </Attachments>\n  );\n};\n\nexport type AttachmentChangeInfo = Parameters<\n  NonNullable<UploadProps['onChange']>\n>[0];\n\ninterface ChatSenderProps\n  extends Omit<SenderProps, 'onChange'>,\n    ChatAttachmentsProps {\n  loading?: boolean;\n  autoFocus?: boolean;\n  items?: Attachment[];\n  openAttachment?: boolean;\n  onInputChange?: (value: string) => void;\n  onInputSubmit?: () => void;\n  onInputCancel?: () => void;\n  onAttachmentChange?: (\n    attachment: 'prefix' | 'header',\n    info: AttachmentChangeInfo,\n  ) => void;\n  onAttachmentOpenChange?: (open: boolean) => void;\n}\n\nconst ChatSender: React.FC<ChatSenderProps> = ({\n  loading,\n  autoFocus,\n  items,\n  openAttachment,\n  dropContainerRef,\n  onInputChange,\n  onInputSubmit,\n  onInputCancel,\n  onAttachmentChange,\n  onAttachmentOpenChange,\n  ...senderProps\n}) => {\n  const { t } = useTranslation();\n\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\n\n  useEffect(() => {\n    if (autoFocus && senderRef.current) {\n      senderRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <Sender\n      style={{ flex: 1 }}\n      ref={senderRef}\n      {...senderProps}\n      loading={loading}\n      onChange={onInputChange}\n      onSubmit={onInputSubmit}\n      onCancel={onInputCancel}\n      submitType=\"enter\"\n      header={\n        <Sender.Header\n          closable={false}\n          title={t('chatui.Attachments')}\n          open={!!openAttachment && !isEmpty(items)}\n          onOpenChange={onAttachmentOpenChange}\n          styles={{\n            content: {\n              padding: 0,\n            },\n          }}\n        >\n          <ChatAttachments\n            items={items}\n            dropContainerRef={dropContainerRef}\n            onChange={(info) => onAttachmentChange?.('header', info)}\n          />\n        </Sender.Header>\n      }\n      prefix={\n        <ChatAttachments\n          items={items}\n          dropContainerRef={dropContainerRef}\n          onChange={(info) => onAttachmentChange?.('prefix', info)}\n        >\n          <Badge dot={!isEmpty(items) && !openAttachment}>\n            <Button type=\"text\" icon={<LinkOutlined />} />\n          </Badge>\n        </ChatAttachments>\n      }\n    />\n  );\n};\n\nexport default ChatSender;\n","import { createDataTransferFiles } from '../../helper';\nimport Flex from '../Flex';\nimport ChatSender, {\n  AttachmentChangeInfo,\n  ChatAttachmentsProps,\n} from './ChatSender';\nimport { CreateMessage, Message } from '@ai-sdk/react';\nimport type { AttachmentsProps } from '@ant-design/x';\nimport { ChatRequestOptions } from 'ai';\nimport { theme } from 'antd';\nimport { atom, useAtom } from 'jotai';\nimport { isEmpty, isEqual, isUndefined } from 'lodash';\nimport React, { useCallback, useEffect, useId, useRef, useState } from 'react';\n\nconst synchronizedMessageState = atom<string>('');\nconst synchronizedAttachmentState = atom<AttachmentsProps['items']>();\nconst chatSubmitKeyInfoState = atom<{ id: string; key: string } | undefined>(\n  undefined,\n);\n\ninterface ChatRequest {\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n}\n\ninterface ChatInputProps extends ChatRequest, ChatAttachmentsProps {\n  sync: boolean;\n  input: string;\n  setInput: (input: string) => void;\n  stop: () => void;\n  append: (\n    message: Message | CreateMessage,\n    chatRequestOptions?: ChatRequestOptions,\n  ) => Promise<string | null | undefined>;\n  isStreaming: boolean;\n  disabled?: boolean;\n}\n\nconst ChatInput: React.FC<ChatInputProps> = ({\n  sync,\n  input,\n  setInput,\n  stop,\n  append,\n  isStreaming,\n  disabled,\n  dropContainerRef,\n}) => {\n  const { token } = theme.useToken();\n\n  const ChatInputStyle = {\n    borderTop: `1px solid ${token.colorBorderSecondary}`,\n    padding: token.paddingContentVertical,\n  };\n\n  const [isOpenAttachments, setIsOpenAttachments] = useState(false);\n  const [files, setFiles] = useState<AttachmentsProps['items']>([]);\n\n  const [synchronizedMessage, setSynchronizedMessage] = useAtom(\n    synchronizedMessageState,\n  );\n\n  const [synchronizedAttachment, setSynchronizedAttachment] = useAtom(\n    synchronizedAttachmentState,\n  );\n\n  const [chatSubmitKeyInfo, setChatSubmitKeyInfo] = useAtom(\n    chatSubmitKeyInfoState,\n  );\n\n  const submitId = useId();\n  const submitKey =\n    chatSubmitKeyInfo?.id === submitId ? undefined : chatSubmitKeyInfo?.key;\n\n  const prevSyncRef = useRef(sync);\n  useEffect(() => {\n    if (prevSyncRef.current !== sync) {\n      setInput('');\n      prevSyncRef.current = sync;\n    }\n  }, [sync, setInput]);\n\n  useEffect(() => {\n    if (sync && !isUndefined(synchronizedMessage)) {\n      setInput(synchronizedMessage);\n    }\n  }, [synchronizedMessage, setInput, sync]);\n\n  const setFilesFromInputAttachment = (\n    inputAttachment: AttachmentsProps['items'],\n  ) => {\n    if (!isUndefined(inputAttachment) && !isEqual(files, inputAttachment)) {\n      setFiles(inputAttachment);\n      setIsOpenAttachments(true);\n    }\n  };\n\n  // If the `inputAttachment` prop exists, the `files` state has to follow it.\n  useEffect(() => {\n    setFilesFromInputAttachment(synchronizedAttachment);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [synchronizedAttachment]);\n\n  useEffect(() => {\n    if (!isUndefined(submitKey) && input) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitKey]);\n\n  const handleInputChange = useCallback(\n    (value: string) => {\n      setInput(value);\n      if (sync) {\n        setSynchronizedMessage(value);\n      }\n    },\n    [sync, setInput, setSynchronizedMessage],\n  );\n\n  const handleInputCancel = useCallback(() => {\n    stop();\n  }, [stop]);\n\n  const handleInputSubmit = useCallback(() => {\n    if (input || !isEmpty(files)) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n      setTimeout(() => {\n        setInput('');\n        setFiles([]);\n        setIsOpenAttachments(false);\n      }, 0);\n\n      setSynchronizedMessage('');\n      setSynchronizedAttachment([]);\n      if (sync) {\n        setChatSubmitKeyInfo({\n          id: submitId,\n          key: new Date().toString(),\n        });\n      }\n    }\n  }, [\n    input,\n    files,\n    append,\n    setSynchronizedMessage,\n    setSynchronizedAttachment,\n    sync,\n    setInput,\n    setChatSubmitKeyInfo,\n    submitId,\n  ]);\n\n  const handleAttachmentChange = useCallback(\n    (attachment: string, info: AttachmentChangeInfo) => {\n      const fileList = info.fileList;\n      setFiles(fileList);\n\n      if (attachment === 'prefix') {\n        setIsOpenAttachments(true);\n      }\n\n      if (sync) {\n        setSynchronizedAttachment(fileList);\n      }\n    },\n    [sync, setFiles, setIsOpenAttachments, setSynchronizedAttachment],\n  );\n\n  const handleAttachmentOpenChange = useCallback(\n    (open: boolean) => {\n      setIsOpenAttachments(open);\n    },\n    [setIsOpenAttachments],\n  );\n\n  return (\n    <>\n      <Flex style={ChatInputStyle} direction=\"column\" align=\"center\">\n        <ChatSender\n          disabled={disabled}\n          placeholder=\"Say something...\"\n          autoFocus\n          value={input}\n          items={files}\n          openAttachment={isOpenAttachments}\n          dropContainerRef={dropContainerRef}\n          loading={isStreaming}\n          onInputChange={handleInputChange}\n          onInputSubmit={handleInputSubmit}\n          onInputCancel={handleInputCancel}\n          onAttachmentChange={handleAttachmentChange}\n          onAttachmentOpenChange={handleAttachmentOpenChange}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatInput;\n","import { startTransition, useEffect, useState } from 'react';\n\nexport const encodeAsync = async (str: string) => {\n  const { encode } = await import('gpt-tokenizer');\n\n  return encode(str).length;\n};\n\nexport const useTokenCount = (input: string = '') => {\n  const [value, setNum] = useState(0);\n\n  useEffect(() => {\n    startTransition(() => {\n      encodeAsync(input)\n        .then(setNum)\n        .catch(() => {\n          setNum(input.length);\n        });\n    });\n  }, [input]);\n\n  return value;\n};\n","import { useTokenCount } from '../../hooks/useTokenizer';\nimport Flex from '../Flex';\nimport { RocketOutlined } from '@ant-design/icons';\nimport { Message } from 'ai';\nimport { Typography } from 'antd';\nimport { Tag, theme } from 'antd';\nimport { map, last } from 'lodash';\nimport React, { useMemo } from 'react';\n\ninterface ChatTokenCounterProps {\n  input: string;\n  messages: Message[];\n  startTime: number | null;\n}\n\nconst ChatTokenCounter: React.FC<ChatTokenCounterProps> = ({\n  input,\n  messages,\n  startTime,\n}) => {\n  const { token } = theme.useToken();\n  const inputTokenCount = useTokenCount(input);\n  const allChatMessageString = useMemo(() => {\n    return map(messages, (message) => message?.content).join('');\n  }, [messages]);\n  const chatsTokenCount = useTokenCount(allChatMessageString);\n  const totalTokenCount = inputTokenCount + chatsTokenCount;\n  const lastAssistantMessageString = useMemo(() => {\n    const lastAssistantMessage = last(messages);\n    if (lastAssistantMessage?.role === 'assistant') {\n      return lastAssistantMessage?.content;\n    } else {\n      return '';\n    }\n  }, [messages]);\n\n  const lastAssistantTokenCount = useTokenCount(lastAssistantMessageString);\n  const tokenPerSecond = useMemo(() => {\n    return lastAssistantTokenCount > 0 && startTime\n      ? lastAssistantTokenCount / ((Date.now() - startTime) / 1000)\n      : 0;\n  }, [lastAssistantTokenCount, startTime]);\n\n  return (\n    <Flex justify=\"end\" align=\"end\" style={{ margin: token.marginSM }}>\n      <Tag>\n        <Flex gap={'xs'}>\n          <RocketOutlined />\n          <Flex gap={'xxs'}>\n            <Typography.Text>{tokenPerSecond.toFixed(2)}</Typography.Text>\n            <Typography.Text type=\"secondary\">tok/s</Typography.Text>\n          </Flex>\n          <Flex gap={'xxs'}>\n            <Typography.Text>{totalTokenCount}</Typography.Text>\n            <Typography.Text type=\"secondary\">total tokens</Typography.Text>\n          </Flex>\n        </Flex>\n      </Tag>\n    </Flex>\n  );\n};\n\nexport default ChatTokenCounter;\n","import Flex, { FlexProps } from '../Flex';\nimport { Avatar, theme } from 'antd';\nimport React, { memo } from 'react';\n\nexport type ChatMessagePlacement = {\n  top?: boolean;\n  left?: boolean;\n  right?: boolean;\n  bottom?: boolean;\n};\n\nexport interface ChatMessageContainerProps extends FlexProps {\n  placement?: ChatMessagePlacement;\n  containerStyle?: React.CSSProperties;\n  avatar?: React.ReactNode;\n  children?: React.ReactNode;\n}\n\nexport const ChatMessageContainer: React.FC<ChatMessageContainerProps> = memo(\n  ({ children, placement = {}, avatar, onMouseEnter, onMouseLeave }) => {\n    const { token } = theme.useToken();\n\n    return (\n      <Flex\n        direction={placement.left ? 'row' : 'row-reverse'}\n        justify={'start'}\n        align=\"baseline\"\n        style={{\n          marginLeft: placement.left ? 0 : '15%',\n          marginRight: placement.right ? 0 : 20,\n          paddingLeft: token.paddingMD,\n          paddingRight: token.paddingMD,\n          paddingTop: placement.top ? token.paddingMD : 0,\n          paddingBottom: placement.bottom ? token.paddingMD : 0,\n        }}\n        gap={'sm'}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Avatar icon={avatar} style={{ fontSize: token.fontSizeHeading3 }} />\n        <Flex\n          direction=\"column\"\n          align={placement.left ? 'start' : 'end'}\n          wrap=\"wrap\"\n          style={{ flex: 1 }}\n          gap={'xs'}\n        >\n          {children}\n        </Flex>\n      </Flex>\n    );\n  },\n);\n\nChatMessageContainer.displayName = 'ChatMessageContainer';\n","import { Button, ButtonProps, Tooltip } from 'antd';\nimport { CopyConfig } from 'antd/es/typography/Base';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface CopyButtonProps extends ButtonProps {\n  copyable?: Omit<CopyConfig, 'text'> & { text: string };\n  defaultIcon?: React.ReactNode;\n}\nconst CopyButton: React.FC<CopyButtonProps> = ({\n  copyable,\n  defaultIcon,\n  ...props\n}) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = async () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      const timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCopied]);\n\n  return (\n    <Tooltip\n      title={isCopied ? 'Copied!' : 'Copy'}\n      open={isCopied ? true : undefined}\n    >\n      <CopyToClipboard text={copyable?.text || ''} onCopy={handleCopy}>\n        <Button\n          icon={\n            isCopied ? <CheckIcon /> : defaultIcon ? defaultIcon : <CopyIcon />\n          }\n          {...props}\n        />\n      </CopyToClipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyButton;\n","import { useThemeMode } from 'antd-style';\nimport { useMemo } from 'react';\nimport { codeToHtml } from 'shiki';\nimport useSWR from 'swr';\nimport { Md5 } from 'ts-md5';\n\nexport const FALLBACK_LANG = 'txt';\n\nexport const useHighlight = (text: string, lang: string) => {\n  const { isDarkMode } = useThemeMode();\n  const language = lang.toLowerCase();\n  const matchedLanguage = languageMap[language] ? language : FALLBACK_LANG;\n  const key = useMemo(() => Md5.hashStr(text), [text]);\n\n  return useSWR(\n    [matchedLanguage, isDarkMode ? 'd' : 'l', key].join('-'),\n    async () => {\n      try {\n        return codeToHtml(text, {\n          lang: matchedLanguage,\n          theme: isDarkMode ? 'github-dark' : 'github-light',\n        });\n      } catch (error) {\n        console.error('shiki Highlight error:', error);\n        return text;\n      }\n    },\n  );\n};\n\nconst languageMap: Record<string, boolean> = {\n  abap: true,\n  'actionscript-3': true,\n  ada: true,\n  apache: true,\n  apex: true,\n  apl: true,\n  applescript: true,\n  ara: true,\n  asm: true,\n  astro: true,\n  awk: true,\n  ballerina: true,\n  bat: true,\n  beancount: true,\n  berry: true,\n  bibtex: true,\n  bicep: true,\n  blade: true,\n  c: true,\n  cadence: true,\n  clarity: true,\n  clojure: true,\n  cmake: true,\n  cobol: true,\n  codeql: true,\n  coffee: true,\n  cpp: true,\n  crystal: true,\n  csharp: true,\n  css: true,\n  cue: true,\n  cypher: true,\n  d: true,\n  dart: true,\n  dax: true,\n  diff: true,\n  docker: true,\n  'dream-maker': true,\n  elixir: true,\n  elm: true,\n  erb: true,\n  erlang: true,\n  fish: true,\n  fsharp: true,\n  gdresource: true,\n  gdscript: true,\n  gdshader: true,\n  gherkin: true,\n  'git-commit': true,\n  'git-rebase': true,\n  'glimmer-js': true,\n  'glimmer-ts': true,\n  glsl: true,\n  gnuplot: true,\n  go: true,\n  graphql: true,\n  groovy: true,\n  hack: true,\n  haml: true,\n  handlebars: true,\n  haskell: true,\n  hcl: true,\n  hjson: true,\n  hlsl: true,\n  html: true,\n  http: true,\n  imba: true,\n  ini: true,\n  java: true,\n  javascript: true,\n  'jinja-html': true,\n  jison: true,\n  json: true,\n  json5: true,\n  jsonc: true,\n  jsonl: true,\n  jsonnet: true,\n  jssm: true,\n  jsx: true,\n  julia: true,\n  kotlin: true,\n  kusto: true,\n  latex: true,\n  less: true,\n  liquid: true,\n  lisp: true,\n  logo: true,\n  lua: true,\n  make: true,\n  markdown: true,\n  marko: true,\n  matlab: true,\n  mdc: true,\n  mdx: true,\n  mermaid: true,\n  mojo: true,\n  narrat: true,\n  nextflow: true,\n  nginx: true,\n  nim: true,\n  nix: true,\n  'objective-c': true,\n  'objective-cpp': true,\n  ocaml: true,\n  pascal: true,\n  perl: true,\n  php: true,\n  plsql: true,\n  postcss: true,\n  powerquery: true,\n  powershell: true,\n  prisma: true,\n  prolog: true,\n  proto: true,\n  pug: true,\n  puppet: true,\n  purescript: true,\n  python: true,\n  r: true,\n  raku: true,\n  razor: true,\n  reg: true,\n  rel: true,\n  riscv: true,\n  rst: true,\n  ruby: true,\n  rust: true,\n  sas: true,\n  sass: true,\n  scala: true,\n  scheme: true,\n  scss: true,\n  shaderlab: true,\n  shellscript: true,\n  shellsession: true,\n  smalltalk: true,\n  solidity: true,\n  sparql: true,\n  splunk: true,\n  sql: true,\n  'ssh-config': true,\n  stata: true,\n  stylus: true,\n  svelte: true,\n  swift: true,\n  'system-verilog': true,\n  tasl: true,\n  tcl: true,\n  tex: true,\n  toml: true,\n  tsx: true,\n  turtle: true,\n  twig: true,\n  typescript: true,\n  v: true,\n  vb: true,\n  verilog: true,\n  vhdl: true,\n  viml: true,\n  vue: true,\n  'vue-html': true,\n  vyper: true,\n  wasm: true,\n  wenyan: true,\n  wgsl: true,\n  wolfram: true,\n  xml: true,\n  xsl: true,\n  yaml: true,\n  zenscript: true,\n  zig: true,\n  bash: true,\n  batch: true,\n  be: true,\n  'c#': true,\n  cdc: true,\n  clj: true,\n  cmd: true,\n  console: true,\n  cql: true,\n  cs: true,\n  dockerfile: true,\n  erl: true,\n  'f#': true,\n  fs: true,\n  fsl: true,\n  gjs: true,\n  gts: true,\n  hbs: true,\n  hs: true,\n  jade: true,\n  js: true,\n  kql: true,\n  makefile: true,\n  md: true,\n  nar: true,\n  nf: true,\n  objc: true,\n  perl6: true,\n  properties: true,\n  ps: true,\n  ps1: true,\n  py: true,\n  ql: true,\n  rb: true,\n  rs: true,\n  sh: true,\n  shader: true,\n  shell: true,\n  spl: true,\n  styl: true,\n  ts: true,\n  vim: true,\n  vimscript: true,\n  vy: true,\n  yml: true,\n  zsh: true,\n  文言: true,\n};\n","import { useHighlight } from '../../hooks/useHighlight';\nimport { HTMLAttributes, memo } from 'react';\n\nexport interface SyntaxHighlighterProps extends HTMLAttributes<HTMLDivElement> {\n  children: string;\n  language: string;\n}\n\nexport const SyntaxHighlighter = memo<SyntaxHighlighterProps>(\n  ({ children, language }) => {\n    const { data, isLoading } = useHighlight(children, language);\n\n    return (\n      <>\n        {isLoading || !data ? (\n          <pre>\n            <code>{children}</code>\n          </pre>\n        ) : (\n          <div dangerouslySetInnerHTML={{ __html: data as string }} dir=\"ltr\" />\n        )}\n      </>\n    );\n  },\n);\n\nSyntaxHighlighter.displayName = 'SyntaxHighlighter';\n","import Flex from '../Flex';\nimport CopyButton from './CopyButton';\nimport { SyntaxHighlighter, SyntaxHighlighterProps } from './SyntaxHighight';\nimport { theme, Typography } from 'antd';\n// `rehype-katex` does not import the CSS file, so we need to import it manually.\nimport 'katex/dist/katex.min.css';\nimport { marked } from 'marked';\nimport React, { memo, useCallback, useMemo } from 'react';\nimport Markdown from 'react-markdown';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nconst { Text } = Typography;\n\nfunction parseMarkdownIntoBlocks(markdown: string): string[] {\n  const tokens = marked.lexer(markdown);\n  return tokens.map((token) => token.raw);\n}\n\nconst CodeBlock = memo<SyntaxHighlighterProps>(({ children, ...props }) => (\n  <SyntaxHighlighter {...props}>{children}</SyntaxHighlighter>\n));\n\nCodeBlock.displayName = 'CodeBlock';\n\nconst CodeHead = memo<{ lang: string; extra?: React.ReactNode }>(\n  ({ lang, extra }) => {\n    const { token } = theme.useToken();\n\n    return (\n      <Flex\n        style={{\n          margin: 0,\n          minHeight: 38,\n          padding: `0 ${token.paddingSM}px`,\n          background: 'rgba(0, 0, 0, 0.02)',\n          width: '100%',\n        }}\n      >\n        <Flex\n          style={{\n            display: 'inline-block',\n            flex: '1',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          <Text style={{ fontWeight: 'normal' }} type=\"secondary\">\n            {lang}\n          </Text>\n        </Flex>\n        <Flex>{extra}</Flex>\n      </Flex>\n    );\n  },\n);\n\nCodeHead.displayName = 'CodeHead';\n\nconst ChatMessageContentBlock = memo<{ block?: string; isStreaming?: boolean }>(\n  ({ block, isStreaming }) => {\n    const renderCode = useCallback(\n      (props: any) => {\n        const { children, className, node, ref, ...rest } = props;\n        const match = /language-(\\w+)/.exec(className || '');\n        const content = String(children ?? '').replace(/\\n$/, '');\n        const { token } = theme.useToken();\n\n        return match ? (\n          <Flex\n            direction={'column'}\n            style={{\n              border: '1px solid #f0f0f0',\n              margin: '0',\n              padding: '0',\n              borderRadius: token.borderRadiusLG,\n              overflow: 'hidden',\n            }}\n          >\n            <CodeHead\n              lang={match[1]}\n              extra={\n                <CopyButton\n                  type=\"text\"\n                  copyable={{ text: content ?? '' }}\n                  style={{\n                    display: isStreaming ? 'none' : 'block',\n                  }}\n                />\n              }\n            />\n            <Flex\n              style={{\n                width: '100%',\n                padding: token.paddingSM,\n                borderRadius: `0 0 ${token.borderRadiusLG}px ${token.borderRadiusLG}px`,\n                margin: '-0.5em 0',\n              }}\n            >\n              <CodeBlock\n                {...rest}\n                PreTag=\"div\"\n                language={match[1]}\n                style={oneLight}\n                wrapLongLines\n                wrapLines\n              >\n                {content}\n              </CodeBlock>\n            </Flex>\n          </Flex>\n        ) : (\n          <code {...rest} className={className}>\n            {/* @ts-ignore */}\n            {children}\n          </code>\n        );\n      },\n      [isStreaming],\n    );\n\n    const renderParagraph = useCallback(({ node, ...props }: any) => {\n      return <p {...props} style={{ whiteSpace: 'pre-wrap' }} />;\n    }, []);\n\n    return (\n      <Markdown\n        remarkPlugins={[remarkGfm, remarkMath]}\n        rehypePlugins={[rehypeKatex]}\n        components={{ p: renderParagraph, code: renderCode }}\n      >\n        {block}\n      </Markdown>\n    );\n  },\n);\n\nChatMessageContentBlock.displayName = 'ChatMessageContentBlock';\n\nconst ChatMessageContent: React.FC<{\n  children?: string;\n  isStreaming?: boolean;\n}> = ({ children, isStreaming }) => {\n  const blocks = useMemo(\n    () => parseMarkdownIntoBlocks(children ?? ''),\n    [children],\n  );\n\n  return blocks.map((block, index) => (\n    <ChatMessageContentBlock\n      block={block}\n      key={`block_${index}`}\n      isStreaming={isStreaming}\n    />\n  ));\n};\n\nChatMessageContent.displayName = 'ChatMessageContent';\n\nexport default memo(ChatMessageContent);\n","import Flex from '../Flex';\nimport {\n  ChatMessageContainer,\n  ChatMessagePlacement,\n} from './ChatMessageContainer';\n// ES 2015\nimport ChatMessageContent from './ChatMessageContent';\nimport { Message } from '@ai-sdk/react';\nimport { Attachments } from '@ant-design/x';\nimport { theme, Image, Collapse, Typography, Spin } from 'antd';\nimport _ from 'lodash';\nimport React, { memo } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChatMessageProps {\n  message: Message;\n  placement?: ChatMessagePlacement;\n  extra?: React.ReactNode;\n  enableExtraHover?: boolean;\n  isStreaming?: boolean;\n  avatar?: React.ReactNode;\n}\n\nconst ChatMessage: React.FC<ChatMessageProps> = ({\n  extra,\n  message,\n  placement,\n  enableExtraHover,\n  isStreaming,\n  avatar,\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const { content, reasoning } = message;\n\n  return (\n    <ChatMessageContainer\n      placement={placement}\n      avatar={avatar}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {_.map(message.experimental_attachments, (attachment, index) =>\n        _.includes(attachment?.contentType, 'image/') ? (\n          <Flex\n            style={{\n              border: 'none',\n              textAlign: 'end',\n            }}\n            align=\"end\"\n          >\n            <Image\n              key={`${message?.id}-${index}`}\n              src={attachment?.url}\n              alt={attachment?.name}\n              style={{\n                maxWidth: '50vw',\n                maxHeight: '12vh',\n                borderRadius: token.borderRadius,\n              }}\n            />\n          </Flex>\n        ) : (\n          <Attachments.FileCard\n            key={index}\n            item={{\n              uid: `${message?.id}-${index}`,\n              name: attachment?.name || attachment?.url,\n              type: attachment?.contentType,\n              description: attachment?.name,\n              url: attachment?.url,\n            }}\n          />\n        ),\n      )}\n      <Flex\n        align=\"stretch\"\n        direction=\"column\"\n        style={{\n          borderRadius: token.borderRadius,\n          borderColor: token.colorBorderSecondary,\n          borderWidth: token.lineWidth,\n          padding: '1em',\n          paddingTop: 0,\n          paddingBottom: 0,\n          backgroundColor:\n            message.role !== 'user'\n              ? token.colorBgContainer\n              : token.colorBgContainerDisabled,\n          maxWidth: '100%',\n          width: _.trim(message.reasoning) ? '100%' : 'auto',\n        }}\n      >\n        {_.trim(message.reasoning) && (\n          <Collapse\n            style={{\n              marginTop: token.margin,\n              width: '100%',\n            }}\n            items={[\n              {\n                key: 'reasoning',\n                label: _.isEmpty(content) ? (\n                  <Flex gap=\"xs\">\n                    <Typography.Text>{t('chatui.Thinking')}</Typography.Text>\n                    <Spin size=\"small\" />\n                  </Flex>\n                ) : (\n                  <Typography.Text>{t('chatui.ViewReasoning')}</Typography.Text>\n                ),\n                children: (\n                  <ChatMessageContent isStreaming={isStreaming}>\n                    {reasoning}\n                  </ChatMessageContent>\n                ),\n              },\n            ]}\n          />\n        )}\n        <ChatMessageContent isStreaming={isStreaming}>\n          {content + (isStreaming ? '\\n' : '')}\n        </ChatMessageContent>\n      </Flex>\n      <Flex\n        style={{\n          fontSize: token.fontSizeSM,\n          ...(enableExtraHover\n            ? {\n                opacity: isHovered ? 1 : 0,\n                transition: 'opacity 0.2s',\n                transitionDelay: isHovered ? '0s' : '0.2s',\n              }\n            : {}),\n        }}\n      >\n        {extra}\n      </Flex>\n    </ChatMessageContainer>\n  );\n};\n\nexport default memo(ChatMessage);\n","import ChatMessage, { ChatMessageProps } from './ChatMessage';\nimport CopyButton from './CopyButton';\nimport Compact from 'antd/es/space/Compact';\n\nexport const AssistantChatMessage: React.FC<ChatMessageProps> = ({\n  message,\n  isStreaming,\n  placement,\n}) => {\n  return (\n    <ChatMessage\n      key={message.id}\n      message={message}\n      placement={{ ...placement, left: true }}\n      isStreaming={isStreaming}\n      enableExtraHover={false}\n      extra={\n        <Compact>\n          <CopyButton\n            type=\"text\"\n            size=\"small\"\n            copyable={{\n              text: message.content,\n            }}\n            style={{\n              display: isStreaming ? 'none' : 'block',\n            }}\n          />\n        </Compact>\n      }\n      avatar={'🤖'}\n    />\n  );\n};\n","import { useEventNotStable } from '../../hooks/useEventNotStable';\nimport { Button } from 'antd';\nimport { ArrowDownIcon } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface ScrollBottomHandlerButtonProps {\n  autoScroll?: boolean;\n  atBottom?: boolean;\n  onScrollToBottom: (type: 'click' | 'auto') => void;\n}\nconst ScrollBottomHandlerButton: React.FC<ScrollBottomHandlerButtonProps> = ({\n  autoScroll,\n  atBottom,\n  ...props\n}) => {\n  const onScrollToBottom = useEventNotStable(props.onScrollToBottom);\n\n  useEffect(() => {\n    if (atBottom && autoScroll) {\n      onScrollToBottom?.('auto');\n    }\n  }, [atBottom, autoScroll, onScrollToBottom]);\n\n  return (\n    <Button\n      icon={<ArrowDownIcon />}\n      shape=\"circle\"\n      onClick={() => {\n        onScrollToBottom && onScrollToBottom('click');\n      }}\n    ></Button>\n  );\n};\n\nexport default ScrollBottomHandlerButton;\n","import Flex from '../Flex';\nimport { AssistantChatMessage } from './AssistantChatMesssage';\nimport ScrollBottomHandlerButton from './ScrollBottomHandlerButton';\nimport { UserChatMessage } from './UserChatMesssage';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\ninterface VirtualizedListProps {\n  messages: Array<Message>;\n  isStreaming?: boolean;\n}\n\nconst ChatMessageRenders = {\n  user: UserChatMessage,\n  assistant: AssistantChatMessage,\n  system: AssistantChatMessage,\n  data: AssistantChatMessage,\n};\n\nconst VirtualChatMessageList: React.FC<VirtualizedListProps> = ({\n  messages,\n  isStreaming,\n}) => {\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [atBottom, setAtBottom] = useState(true);\n  const { token } = theme.useToken();\n\n  // overscan should be 1.5 times the height of the window\n  const overscan = typeof window !== 'undefined' ? window.innerHeight * 1.5 : 0;\n\n  const itemContent = useCallback(\n    (index: number, message: Message) => {\n      const RenderChatMessage = ChatMessageRenders[message.role];\n\n      return (\n        <>\n          <RenderChatMessage\n            key={message.id}\n            message={message}\n            isStreaming={isStreaming ?? false}\n            placement={{\n              top: index === 0,\n              bottom: index === messages.length - 1,\n            }}\n          />\n        </>\n      );\n    },\n    [isStreaming, messages.length],\n  );\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ height: '100%', flex: 1 }}\n    >\n      <Virtuoso\n        atBottomStateChange={setAtBottom}\n        atBottomThreshold={60}\n        computeItemKey={(_, item) => item.id}\n        data={messages}\n        followOutput={'auto'}\n        initialTopMostItemIndex={messages?.length - 1}\n        itemContent={itemContent}\n        overscan={overscan}\n        ref={virtuosoRef}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          right: '50%',\n          transform: 'translateX(+50%)',\n          bottom: token.marginSM,\n          opacity: atBottom ? 0 : 1,\n          transition: 'opacity 0.2s',\n          transitionDelay: atBottom ? '0s' : '0.2s',\n        }}\n      >\n        <ScrollBottomHandlerButton\n          atBottom={atBottom}\n          autoScroll={isStreaming}\n          onScrollToBottom={(type) => {\n            const virtuoso = virtuosoRef.current;\n            switch (type) {\n              case 'auto': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'auto',\n                  index: 'LAST',\n                });\n                break;\n              }\n              case 'click': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'smooth',\n                  index: 'LAST',\n                });\n                break;\n              }\n            }\n          }}\n        />\n      </div>\n    </Flex>\n  );\n};\n\nexport default VirtualChatMessageList;\n","import ChatMessage from './ChatMessage';\nimport type { ChatMessagePlacement } from './ChatMessageContainer';\nimport { Message } from '@ai-sdk/react';\nimport Compact from 'antd/es/space/Compact';\n\ninterface UserChatMessageProps {\n  message: Message;\n  isStreaming: boolean;\n  placement?: ChatMessagePlacement;\n}\n\nexport const UserChatMessage: React.FC<UserChatMessageProps> = ({\n  message,\n  isStreaming,\n  placement,\n}) => {\n  return (\n    <ChatMessage\n      key={message.id}\n      message={message}\n      placement={{ ...placement, right: true }}\n      isStreaming={isStreaming}\n      enableExtraHover={true}\n      extra={<Compact>{null}</Compact>}\n      avatar={'🧑‍🦰'}\n    />\n  );\n};\n","import Flex from '../Flex';\nimport PureChatTokenCounter from './ChatTokenCounter';\nimport VirtualChatMessageList from './VirtualChatMessageList';\nimport { Message } from '@ai-sdk/react';\nimport React, { memo } from 'react';\n\nconst ChatMessageList = memo(VirtualChatMessageList);\n\nconst ChatTokenCounter = memo(PureChatTokenCounter);\n\ninterface ChatRequest {\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n}\n\ninterface ChatMessageProps extends ChatRequest {\n  messages: Message[];\n  input: string;\n  isStreaming: boolean;\n  startTime: number | null;\n}\n\nconst ChatMessages: React.FC<ChatMessageProps> = ({\n  messages,\n  input,\n  isStreaming,\n  startTime,\n}) => {\n  return (\n    <>\n      <ChatMessageList messages={messages} isStreaming={isStreaming} />\n      <Flex direction=\"column\" align=\"end\">\n        <ChatTokenCounter\n          messages={messages}\n          input={input}\n          startTime={startTime}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatMessages;\n","import type {\n  EndpointTokenSelectQuery,\n  EndpointTokenSelectQuery$data,\n} from './__generated__/EndpointTokenSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Input, Select } from 'antd';\nimport type { SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport { castArray, sortBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nfunction sortEndpointTokenList(\n  endpointTokenListData: EndpointTokenSelectQuery$data['endpoint_token_list'],\n) {\n  if (!endpointTokenListData.ok) return [];\n\n  const now = dayjs();\n  return sortBy(endpointTokenListData.value?.items, 'created_at').map(\n    (item) => ({\n      label: item?.token,\n      value: item?.token,\n      disabled: !dayjs(item?.valid_until).tz().isAfter(now),\n    }),\n  );\n}\n\ninterface EndpointTokenSelectProps extends Omit<SelectProps, 'options'> {\n  endpointId?: string | null;\n}\n\nconst EndpointTokenSelect: React.FC<EndpointTokenSelectProps> = ({\n  endpointId,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(props);\n\n  const { endpoint_token_list } = useLazyLoadQuery<EndpointTokenSelectQuery>(\n    graphql`\n      query EndpointTokenSelectQuery(\n        $endpointId: UUID!\n        $isEmptyEndpointId: Boolean!\n      ) {\n        endpoint_token_list(offset: 0, limit: 100, endpoint_id: $endpointId)\n          @skipOnClient(if: $isEmptyEndpointId)\n          @catch {\n          items {\n            id\n            token\n            created_at\n            valid_until\n          }\n        }\n      }\n    `,\n    {\n      endpointId: endpointId || '',\n      isEmptyEndpointId: !endpointId,\n    },\n  );\n\n  const selectOptions = useMemo(\n    () => sortEndpointTokenList(endpoint_token_list),\n    [endpoint_token_list],\n  );\n\n  return selectOptions.length <= 0 ? (\n    <Input onChange={(e) => setControllableValue(e.target.value)} />\n  ) : (\n    <Select\n      placeholder={t('chatui.SelectToken')}\n      style={{\n        fontWeight: 'normal',\n        width: '200px',\n      }}\n      options={selectOptions}\n      value={controllableValue}\n      onChange={(_, option) => {\n        setControllableValue(castArray(option)?.[0].value ?? '');\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default EndpointTokenSelect;\n","import Flex from '../Flex';\nimport EndpointTokenSelect from './EndpointTokenSelect';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { Alert, Button, Form, Input, theme } from 'antd';\nimport type { FormInstance } from 'antd';\nimport { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type CustomModelFormValues = {\n  baseURL?: string;\n  token?: string;\n};\n\ntype CustomModelFormProps = {\n  baseURL?: string;\n  token?: string;\n  endpointId?: string | null;\n  loading: boolean;\n  onSubmit?: (formData: CustomModelFormValues) => void;\n};\n\nfunction parseBaseURL(baseURL?: string) {\n  const { origin, pathname } = new URL(baseURL || '');\n  return {\n    origin: `${origin}/`,\n    pathname: pathname.replace(/^\\//, ''),\n  };\n}\n\nconst CustomModelForm: React.FC<CustomModelFormProps> = ({\n  baseURL,\n  token,\n  endpointId,\n  loading,\n  onSubmit,\n}) => {\n  const { t } = useTranslation();\n  const { token: themeToken } = theme.useToken();\n  const formRef = useRef<FormInstance>(null);\n\n  const { origin, pathname: basePath } = parseBaseURL(baseURL);\n\n  return (\n    <Flex\n      direction=\"row\"\n      style={{\n        padding: themeToken.paddingSM,\n        paddingRight: themeToken.paddingContentHorizontalLG,\n        paddingLeft: themeToken.paddingContentHorizontalLG,\n        backgroundColor: themeToken.colorBgContainer,\n      }}\n    >\n      <Form\n        ref={formRef}\n        layout=\"horizontal\"\n        size=\"small\"\n        requiredMark=\"optional\"\n        style={{ flex: 1 }}\n        key={baseURL}\n        initialValues={{\n          basePath: basePath,\n          token: token,\n        }}\n      >\n        <div style={{ marginBottom: themeToken.size }}>\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={t('chatui.CannotFindModel')}\n          />\n        </div>\n        <Form.Item label={t('modelService.BasePath')} name=\"basePath\">\n          <Input\n            placeholder=\"v1\"\n            addonBefore={origin}\n            defaultValue={basePath}\n          />\n        </Form.Item>\n        <Form.Item label={t('modelService.Token')} name=\"token\">\n          <EndpointTokenSelect loading={loading} endpointId={endpointId} />\n        </Form.Item>\n        <Button\n          icon={<ReloadOutlined />}\n          loading={loading}\n          onClick={() => {\n            onSubmit?.({\n              baseURL: new URL(\n                formRef.current?.getFieldValue('basePath') ?? '',\n                origin,\n              ).toString(),\n              token: formRef.current?.getFieldValue('token'),\n            });\n          }}\n        >\n          {t('button.RefreshModelInformation')}\n        </Button>\n      </Form>\n    </Flex>\n  );\n};\n\nexport { CustomModelForm };\n","import { useUpdatableState } from '../../hooks';\nimport { useSuspenseTanQuery } from '../../hooks/reactQueryAlias';\nimport { useAIAgent } from '../../hooks/useAIAgent';\nimport PureChatHeader from './ChatHeader';\nimport PureChatInput from './ChatInput';\nimport ChatMessages from './ChatMessages';\nimport {\n  BAIModel,\n  ChatLifecycleEventType,\n  ChatProviderType,\n  ChatType,\n  Model,\n} from './ChatModel';\nimport { CustomModelForm } from './CustomModelForm';\nimport { ChatCardQuery } from './__generated__/ChatCardQuery.graphql';\nimport { createOpenAI } from '@ai-sdk/openai';\nimport { useChat } from '@ai-sdk/react';\nimport { extractReasoningMiddleware, streamText, wrapLanguageModel } from 'ai';\nimport { Alert, App, Card, CardProps } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useTransition,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface ChatCardProps extends CardProps, ChatLifecycleEventType {\n  chat: ChatType;\n  onUpdateChat?: (partialChat: DeepPartial<ChatType>) => void;\n  closable?: boolean;\n  fetchOnClient?: boolean;\n  defaultEndpointId?: string;\n}\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatCard: css`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  body: css`\n    background-color: ${token.colorFillQuaternary};\n    border-radius: 0;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    height: 50%;\n    position: relative;\n  `,\n  actions: css`\n    padding-left: ${token.paddingContentHorizontal};\n    padding-right: ${token.paddingContentHorizontal};\n  `,\n  header: css`\n    zindex: 1;\n  `,\n  alert: css`\n    margin: ${token.marginSM};\n  `,\n}));\n\nfunction createModelsURL(baseURL: string) {\n  const { origin, port, pathname: path } = new URL(baseURL.trim());\n  const host = port.length > 0 ? `${origin}:${port}` : origin;\n  const normalizedPath = path === '/' ? '/models' : `${path}/models`;\n\n  return new URL(normalizedPath, host).toString();\n}\n\nfunction useModels(\n  provider: ChatProviderType,\n  fetchKey: string,\n  baseURL?: string,\n) {\n  const { t } = useTranslation();\n  const getModelsErrorMessage = (status?: number) => {\n    switch (status) {\n      case 401:\n        return t('error.UnauthorizedToken');\n      case 404:\n        return t('error.NotFoundBasePath');\n      case 500:\n        return t('error.InternalServerError');\n      case 503:\n        return t('error.ServiceUnavailable');\n      case -1:\n      default:\n        return t('error.UnknownError');\n    }\n  };\n\n  const { data: modelsResult } = useSuspenseTanQuery<{\n    data: Array<Model>;\n    error?: number;\n  }>({\n    queryKey: ['models', fetchKey, baseURL, provider.apiKey],\n    queryFn: async () => {\n      if (!baseURL) {\n        return { data: [] };\n      }\n\n      const url = createModelsURL(baseURL);\n      const authToken = provider.apiKey;\n      const res = await fetch(url, {\n        headers: {\n          Authorization: authToken ? `Bearer ${authToken}` : '',\n        },\n      }).catch((e) => {\n        return {\n          ok: false,\n          status: -1,\n        } as const;\n      });\n\n      if (res.ok) {\n        return await res.json();\n      } else {\n        return { data: [], error: res?.status };\n      }\n    },\n  });\n\n  const models = _.map(modelsResult?.data || [], (m) => ({\n    id: m.id,\n    name: m.id,\n  })) as BAIModel[];\n\n  const modelId = useMemo(\n    () =>\n      provider.modelId &&\n      _.includes(_.map(modelsResult?.data || [], 'id'), provider.modelId)\n        ? provider.modelId\n        : (modelsResult?.data?.[0]?.id ?? 'custom'),\n    [modelsResult?.data, provider.modelId],\n  );\n\n  const modelsError =\n    modelsResult.error && getModelsErrorMessage(modelsResult.error);\n\n  return {\n    models,\n    modelId,\n    modelsError,\n  } as const;\n}\n\nconst ChatHeader = PureChatHeader;\n\nconst ChatInput = React.memo(PureChatInput);\n\nfunction createBaseURL(basePath: string, endpointUrl?: string | null) {\n  return endpointUrl ? new URL(basePath, endpointUrl).toString() : undefined;\n}\n\nconst ChatCard: React.FC<ChatCardProps> = ({\n  chat,\n  onUpdateChat,\n  closable,\n  fetchOnClient,\n  onRequestClose,\n  onCreateNewChat,\n}) => {\n  const { t } = useTranslation();\n  const { message: appMessage } = App.useApp();\n  const endpointResult = useLazyLoadQuery<ChatCardQuery>(\n    graphql`\n      query ChatCardQuery($endpointId: UUID!) {\n        endpoint(endpoint_id: $endpointId) @catch {\n          endpoint_id\n          url\n          ...ChatHeader_Endpoint\n        }\n      }\n    `,\n    {\n      endpointId: chat.provider.endpointId || '',\n    },\n    {\n      fetchPolicy: chat.provider.endpointId ? 'store-or-network' : 'store-only',\n    },\n  );\n  const endpoint = endpointResult.endpoint.ok\n    ? endpointResult.endpoint.value\n    : null;\n  const {\n    styles: { chatCard: chatCardStyle, alert: alertStyle, ...chatCardStyles },\n  } = useStyles();\n  const [isPendingUpdate, startUpdateTransition] = useTransition();\n\n  const dropContainerRef = useRef<HTMLDivElement>(null);\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  const baseURL = createBaseURL(chat.provider.basePath, endpoint?.url);\n  const { models, modelId, modelsError } = useModels(\n    chat.provider,\n    fetchKey,\n    baseURL,\n  );\n  const { agents } = useAIAgent();\n  const agent = agents.find((a) => a.id === chat.provider.agentId);\n\n  const {\n    error,\n    messages,\n    input,\n    setInput,\n    stop,\n    status,\n    append,\n    setMessages,\n  } = useChat({\n    id: `${chat.id}-${endpoint?.endpoint_id}-${agent?.id ?? 'none'}-${modelId}`,\n    api: baseURL,\n    credentials: chat.provider.credentials,\n    body: {\n      modelId: modelId,\n    },\n    experimental_throttle: 50,\n    fetch: async (input, init) => {\n      if (fetchOnClient || modelId === 'custom') {\n        const body = JSON.parse(init?.body as string);\n        const provider = createOpenAI({\n          baseURL: baseURL,\n          apiKey: chat.provider.apiKey || 'dummy',\n        });\n        const result = streamText({\n          abortSignal: init?.signal || undefined,\n          model: wrapLanguageModel({\n            model: provider(modelId),\n            middleware: extractReasoningMiddleware({ tagName: 'think' }),\n          }),\n          messages: body?.messages,\n          system: agent ? (agent.config.system_prompt ?? '') : '',\n        });\n\n        setStartTime(Date.now());\n\n        return result.toDataStreamResponse({\n          sendReasoning: true,\n        });\n      }\n\n      return fetch(input, init);\n    },\n  });\n\n  const isStreaming = status === 'streaming' || status === 'submitted';\n\n  useEffect(() => {\n    // prevent to show the error message as failed fetching in the first time\n    if (modelsError && fetchKey !== 'first') {\n      appMessage.error(`Error fetching models: ${modelsError}`, 5);\n    }\n  }, [modelsError, fetchKey, appMessage]);\n\n  return (\n    <Card\n      variant=\"outlined\"\n      className={chatCardStyle}\n      classNames={chatCardStyles}\n      title={\n        <ChatHeader\n          // model\n          models={models}\n          modelId={modelId}\n          onChangeModel={(modelId) => {\n            onUpdateChat?.({\n              provider: {\n                modelId,\n              },\n            });\n          }}\n          // agent\n          agents={agents}\n          agent={agent}\n          onChangeAgent={(agent) => {\n            onUpdateChat?.({\n              provider: {\n                agentId: agent.id,\n                endpointId: agent.endpoint_id,\n              },\n            });\n          }}\n          // endpoint\n          endpointFrgmt={endpoint}\n          onChangeEndpoint={(endpointId) => {\n            onUpdateChat?.({\n              provider: {\n                endpointId,\n              },\n            });\n          }}\n          // sync\n          sync={chat.sync}\n          onChangeSync={(sync) => {\n            onUpdateChat?.({\n              sync,\n            });\n          }}\n          // others\n          fetchKey={fetchKey}\n          closable={closable}\n          onClickCreate={onCreateNewChat}\n          onClickClose={() => {\n            onRequestClose?.(chat);\n          }}\n          onClickDeleteChatHistory={() => {\n            setMessages([]);\n          }}\n        />\n      }\n      ref={dropContainerRef}\n    >\n      {baseURL && endpoint && _.isEmpty(models) && (\n        <CustomModelForm\n          baseURL={baseURL}\n          token={chat.provider.apiKey}\n          endpointId={endpoint?.endpoint_id}\n          loading={isPendingUpdate}\n          onSubmit={(data) => {\n            startUpdateTransition(() => {\n              updateFetchKey();\n              onUpdateChat?.({\n                ...chat,\n                provider: {\n                  ...chat.provider,\n                  baseURL: data.baseURL,\n                  apiKey: data.token,\n                },\n              });\n            });\n          }}\n        />\n      )}\n      {!_.isEmpty(error?.message) ? (\n        <Alert\n          message={error?.message}\n          type=\"error\"\n          showIcon\n          className={alertStyle}\n          closable\n        />\n      ) : null}\n      {!baseURL ? (\n        <Alert\n          message={t('error.InvalidBaseURL')}\n          type=\"error\"\n          showIcon\n          className={alertStyle}\n          closable\n        />\n      ) : null}\n      <ChatMessages\n        messages={messages}\n        input={input}\n        isStreaming={isStreaming}\n        startTime={startTime}\n      />\n      <ChatInput\n        disabled={!baseURL}\n        sync={chat.sync}\n        input={input}\n        setInput={setInput}\n        stop={stop}\n        append={append}\n        isStreaming={isStreaming}\n        dropContainerRef={dropContainerRef}\n      />\n    </Card>\n  );\n};\n\nexport default ChatCard;\n","import Flex from '../Flex';\nimport ChatCard from './ChatCard';\nimport { ChatProviderType, ChatType, ConversationType } from './ChatModel';\nimport { useDynamicList } from 'ahooks';\nimport { Card, Skeleton } from 'antd';\nimport { createStyles } from 'antd-style';\nimport _ from 'lodash';\nimport { map } from 'lodash';\nimport { Suspense, useId } from 'react';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatView: css`\n    overflow: auto;\n    height: calc(100vh - 240px);\n  `,\n  skeleton: css`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  chatCard: css`\n    flex: 1;\n    overflow: 'hidden';\n  `,\n  conversation: css`\n    overflow: hidden;\n  `,\n}));\n\nexport type ConversationProps = {\n  conversation: ConversationType;\n  provider: ChatProviderType;\n};\n\nfunction createNewChat(\n  id: string,\n  conversationId: string,\n  provider: ChatProviderType,\n) {\n  return {\n    id,\n    conversationId,\n    label: 'Chat',\n    sync: true,\n    provider,\n  };\n}\n\nexport const Conversation: React.FC<ConversationProps> = ({\n  conversation,\n  provider,\n}) => {\n  const defaultChat = createNewChat(useId(), conversation.id, provider);\n  const { list, remove, push, replace } = useDynamicList<ChatType>([\n    defaultChat,\n  ]);\n  const { styles } = useStyles();\n  return (\n    <Flex\n      className={styles.conversation}\n      direction=\"column\"\n      align=\"stretch\"\n      gap={'xs'}\n    >\n      <Flex\n        className={styles.chatView}\n        gap={'xs'}\n        direction=\"row\"\n        align=\"stretch\"\n      >\n        {map(list, (chat, index) => (\n          <Suspense\n            fallback={\n              <Card className={styles.skeleton} variant=\"outlined\">\n                <Skeleton active />\n              </Card>\n            }\n            key={chat.id}\n          >\n            <ChatCard\n              className={styles.chatCard}\n              chat={chat}\n              onUpdateChat={(newChatProperties) => {\n                const mergedChat = _.merge({}, chat, newChatProperties);\n                replace(index, mergedChat);\n              }}\n              fetchOnClient\n              onRequestClose={() => remove(index)}\n              onCreateNewChat={() => {\n                push(\n                  createNewChat(\n                    list.length.toString(),\n                    conversation.id,\n                    chat.provider,\n                  ),\n                );\n              }}\n              closable={list.length > 1}\n            />\n          </Suspense>\n        ))}\n      </Flex>\n    </Flex>\n  );\n};\n","import BAICard from '../components/BAICard';\nimport {\n  ChatProviderType,\n  ConversationType,\n} from '../components/Chat/ChatModel';\nimport { Conversation } from '../components/Chat/Conversation';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { ChatPageQuery } from './__generated__/ChatPageQuery.graphql';\nimport graphql from 'babel-plugin-relay/macro';\nimport { t } from 'i18next';\nimport React, { useId } from 'react';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { StringParam, useQueryParams } from 'use-query-params';\n\nconst ChatPageStyle = {\n  body: {\n    overflow: 'hidden',\n  },\n};\n\ntype ChatPageProps = {};\n\nfunction useDefaultEndpointId() {\n  const baiClient = useSuspendedBackendaiClient();\n  const { endpoint_list } = useLazyLoadQuery<ChatPageQuery>(\n    graphql`\n      query ChatPageQuery($filter: String) {\n        endpoint_list(limit: 1, offset: 0, filter: $filter) {\n          items {\n            endpoint_id\n          }\n        }\n      }\n    `,\n    {\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? 'lifecycle_stage == \"created\"'\n        : undefined,\n    },\n  );\n\n  return endpoint_list?.items[0]?.endpoint_id || undefined;\n}\n\nconst ChatPage: React.FC<ChatPageProps> = () => {\n  const [{ endpointId, modelId, agentId }] = useQueryParams({\n    endpointId: StringParam,\n    agentId: StringParam,\n    modelId: StringParam,\n  });\n\n  const defaultEndpointId = useDefaultEndpointId();\n\n  const conversation: ConversationType = {\n    id: useId(),\n    label: t('webui.menu.Chat'),\n    chats: [],\n  };\n\n  const provider: ChatProviderType = {\n    basePath: 'v1',\n    agentId: agentId ?? undefined,\n    endpointId: endpointId ?? defaultEndpointId ?? undefined,\n    modelId: modelId ?? undefined,\n  };\n\n  return (\n    <BAICard title={t('webui.menu.Chat')} styles={ChatPageStyle}>\n      <Conversation conversation={conversation} provider={provider} />\n    </BAICard>\n  );\n};\n\nexport default ChatPage;\n","/**\n * @generated SignedSource<<52124f4a9df40dc678d068524dbcfceb>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ChatPageQuery$variables = {\n  filter?: string | null | undefined;\n};\nexport type ChatPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type ChatPageQuery = {\n  response: ChatPageQuery$data;\n  variables: ChatPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"filter\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 1\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"offset\",\n    \"value\": 0\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"763e262ee50ff2487754885efebacb90\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ChatPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ChatPageQuery(\\n  $filter: String\\n) {\\n  endpoint_list(limit: 1, offset: 0, filter: $filter) {\\n    items {\\n      endpoint_id\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"81b9bb8d9bd90410dd13088b30f18dc2\";\n\nexport default node;\n"],"names":["node","v0","v1","v2","v3","hash","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","FluentEmojiIcon","_ref","name","height","width","icon","fluentEmoji","icons","_jsx","xmlns","viewBox","role","dangerouslySetInnerHTML","__html","body","useAIAgent","_agentsData$agents","key","checkUpdate","useUpdatableState","data","agentsData","isLoading","useTanQuery","queryKey","queryFn","fetch","then","response","json","staleTime","agents","refresh","useCallback","makeAgentOptions","filter","map","agent","label","meta","title","value","id","toLocaleLowerCase","includes","loading","props","token","theme","useToken","controllableValue","setControllableValue","useControllableValue","searchAgent","setSearchAgent","useState","isSearchPending","startSearchTransition","useTransition","selectedAgent","find","_Fragment","children","_jsxs","Flex","gap","avatar","sizeXL","Select","showSearch","onSearch","v","filterOption","options","onChange","popupMatchSelectWidth","fetchKey","lifecycleStageFilter","selectPropsWithoutLoading","t","useTranslation","baiClient","useSuspendedBackendaiClient","searchStr","setSearchStr","lifecycleStageFilterStr","join","endpoint_list","endpoint","useLazyLoadQuery","_EndpointSelectQuery","require","limit","offset","supports","Boolean","undefined","endpoint_id","skipEndpoint","selectOptions","_","items","item","placeholder","style","fontWeight","option","_$castArray","models","selectProps","groupBy","mapValues","ms","m","k","SyncSwitch","sync","onClick","Typography","Text","type","Switch","checked","_ref2","showCompareMenuItem","closable","modelId","onChangeModel","endpointFrgmt","onChangeEndpoint","onChangeAgent","onChangeSync","onClickClose","onClickCreate","onClickDeleteChatHistory","webuiNavigate","useWebUINavigate","isPendingEndpointTransition","startEndpointTransition","isPendingAgentTransition","startAgentTransition","useFragment","_ChatHeader_Endpoint","filterEmptyItem","ScaleIcon","EraserIcon","danger","CloseOutlined","experimentalAIAgents","useBAISettingUserState","direction","justify","wrap","minHeight","paddingTop","paddingXS","paddingBottom","align","flexGrow","flexShrink","flexBasis","AIAgentSelect","EndpointSelect","isEmpty","ModelSelect","startTransition","Button","PlusOutlined","Dropdown","menu","trigger","e","preventDefault","MoreOutlined","color","colorTextSecondary","sizeMS","ChatAttachments","dropContainerRef","Attachments","beforeUpload","getDropContainer","current","accept","CloudUploadOutlined","description","autoFocus","openAttachment","onInputChange","onInputSubmit","onInputCancel","onAttachmentChange","onAttachmentOpenChange","senderProps","senderRef","useRef","useEffect","focus","Sender","flex","ref","onSubmit","onCancel","submitType","header","Header","open","onOpenChange","styles","content","padding","info","prefix","Badge","dot","LinkOutlined","synchronizedMessageState","atom","synchronizedAttachmentState","chatSubmitKeyInfoState","input","setInput","stop","append","isStreaming","disabled","ChatInputStyle","borderTop","colorBorderSecondary","paddingContentVertical","isOpenAttachments","setIsOpenAttachments","files","setFiles","synchronizedMessage","setSynchronizedMessage","useAtom","synchronizedAttachment","setSynchronizedAttachment","chatSubmitKeyInfo","setChatSubmitKeyInfo","submitId","useId","submitKey","prevSyncRef","isUndefined","inputAttachment","isEqual","chatRequestOptions","experimental_attachments","createDataTransferFiles","handleInputChange","handleInputCancel","handleInputSubmit","setTimeout","Date","toString","handleAttachmentChange","attachment","fileList","handleAttachmentOpenChange","ChatSender","useTokenCount","arguments","length","setNum","async","encode","str","encodeAsync","catch","messages","startTime","inputTokenCount","allChatMessageString","useMemo","message","totalTokenCount","lastAssistantMessageString","lastAssistantMessage","last","lastAssistantTokenCount","tokenPerSecond","now","margin","marginSM","Tag","RocketOutlined","toFixed","ChatMessageContainer","memo","placement","onMouseEnter","onMouseLeave","left","marginLeft","marginRight","right","paddingLeft","paddingMD","paddingRight","top","bottom","Avatar","fontSize","fontSizeHeading3","displayName","copyable","defaultIcon","isCopied","setIsCopied","timeout","clearTimeout","Tooltip","CopyToClipboard","text","onCopy","CheckIcon","CopyIcon","languageMap","abap","ada","apache","apex","apl","applescript","ara","asm","astro","awk","ballerina","bat","beancount","berry","bibtex","bicep","blade","c","cadence","clarity","clojure","cmake","cobol","codeql","coffee","cpp","crystal","csharp","css","cue","cypher","d","dart","dax","diff","docker","elixir","elm","erb","erlang","fish","fsharp","gdresource","gdscript","gdshader","gherkin","glsl","gnuplot","go","graphql","groovy","hack","haml","handlebars","haskell","hcl","hjson","hlsl","html","http","imba","ini","java","javascript","jison","json5","jsonc","jsonl","jsonnet","jssm","jsx","julia","kotlin","kusto","latex","less","liquid","lisp","logo","lua","make","markdown","marko","matlab","mdc","mdx","mermaid","mojo","narrat","nextflow","nginx","nim","nix","ocaml","pascal","perl","php","plsql","postcss","powerquery","powershell","prisma","prolog","proto","pug","puppet","purescript","python","r","raku","razor","reg","rel","riscv","rst","ruby","rust","sas","sass","scala","scheme","scss","shaderlab","shellscript","shellsession","smalltalk","solidity","sparql","splunk","sql","stata","stylus","svelte","swift","tasl","tcl","tex","toml","tsx","turtle","twig","typescript","vb","verilog","vhdl","viml","vue","vyper","wasm","wenyan","wgsl","wolfram","xml","xsl","yaml","zenscript","zig","bash","batch","be","cdc","clj","cmd","console","cql","cs","dockerfile","erl","fs","fsl","gjs","gts","hbs","hs","jade","js","kql","makefile","md","nar","nf","objc","perl6","properties","ps","ps1","py","ql","rb","rs","sh","shader","shell","spl","styl","ts","vim","vimscript","vy","yml","zsh","文言","SyntaxHighlighter","language","useHighlight","lang","isDarkMode","useThemeMode","toLowerCase","matchedLanguage","Md5","hashStr","useSWR","codeToHtml","error","dir","CodeBlock","CodeHead","extra","paddingSM","background","display","overflow","whiteSpace","textOverflow","ChatMessageContentBlock","_ref3","block","renderCode","className","rest","match","exec","String","replace","border","borderRadius","borderRadiusLG","CopyButton","PreTag","oneLight","wrapLongLines","wrapLines","renderParagraph","_ref4","Markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","components","p","code","ChatMessageContent","_ref5","parseMarkdownIntoBlocks","marked","lexer","raw","index","ChatMessage","enableExtraHover","isHovered","setIsHovered","reasoning","contentType","textAlign","Image","src","url","alt","maxWidth","maxHeight","FileCard","uid","borderColor","borderWidth","lineWidth","backgroundColor","colorBgContainer","colorBgContainerDisabled","Collapse","marginTop","Spin","size","fontSizeSM","opacity","transition","transitionDelay","AssistantChatMessage","Compact","autoScroll","atBottom","onScrollToBottom","useEventNotStable","ArrowDownIcon","shape","ChatMessageRenders","user","assistant","system","virtuosoRef","setAtBottom","overscan","window","innerHeight","itemContent","RenderChatMessage","Virtuoso","atBottomStateChange","atBottomThreshold","computeItemKey","followOutput","initialTopMostItemIndex","position","transform","ScrollBottomHandlerButton","virtuoso","scrollToIndex","behavior","ChatMessageList","VirtualChatMessageList","ChatTokenCounter","PureChatTokenCounter","endpointId","endpoint_token_list","_EndpointTokenSelectQuery","isEmptyEndpointId","endpointTokenListData","_endpointTokenListDat","ok","dayjs","sortBy","valid_until","tz","isAfter","sortEndpointTokenList","Input","target","_castArray$0$value","_castArray","castArray","CustomModelForm","baseURL","themeToken","formRef","origin","pathname","basePath","URL","parseBaseURL","paddingContentHorizontalLG","Form","layout","requiredMark","initialValues","marginBottom","Alert","showIcon","Item","addonBefore","defaultValue","EndpointTokenSelect","ReloadOutlined","_formRef$current$getF","_formRef$current","_formRef$current2","getFieldValue","useStyles","createStyles","chatCard","colorFillQuaternary","actions","paddingContentHorizontal","alert","useModels","provider","modelsResult","useSuspenseTanQuery","apiKey","port","path","trim","host","createModelsURL","authToken","res","headers","Authorization","status","_modelsResult$data$0$","_modelsResult$data","_modelsResult$data$","modelsError","getModelsErrorMessage","ChatHeader","PureChatHeader","ChatInput","React","PureChatInput","_agent$id","chat","onUpdateChat","fetchOnClient","onRequestClose","onCreateNewChat","appMessage","App","useApp","endpointResult","_ChatCardQuery","fetchPolicy","chatCardStyle","alertStyle","chatCardStyles","isPendingUpdate","startUpdateTransition","updateFetchKey","setStartTime","endpointUrl","a","agentId","setMessages","useChat","api","credentials","experimental_throttle","init","_agent$config$system_","JSON","parse","createOpenAI","result","streamText","abortSignal","signal","model","wrapLanguageModel","middleware","extractReasoningMiddleware","tagName","config","system_prompt","toDataStreamResponse","sendReasoning","Card","variant","classNames","ChatMessages","chatView","skeleton","conversation","createNewChat","conversationId","Conversation","defaultChat","list","remove","push","useDynamicList","Suspense","fallback","Skeleton","active","ChatCard","newChatProperties","mergedChat","ChatPageStyle","ChatPage","useQueryParams","StringParam","defaultEndpointId","_endpoint_list$items$","_ChatPageQuery","useDefaultEndpointId","chats","BAICard"],"sourceRoot":""}