{"version":3,"file":"static/js/946.ca43b9e4.chunk.js","mappings":"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","sources":["components/DoubleTag.tsx","components/EndpointStatusTag.tsx","components/Flex.tsx","components/FlexActivityIndicator.tsx","components/ImageMetaIcon.tsx","components/ModelServiceSettingModal.tsx","components/__generated__/EndpointStatusTagFragment.graphql.ts","components/__generated__/ImageEnvironmentSelectFormItemsQuery.graphql.ts","components/__generated__/ModelServiceSettingModal_endpoint.graphql.ts","helper/index.tsx","hooks/index.ts","hooks/reactQueryAlias.tsx","components/SliderInputFormItem.tsx","components/TextHighlighter.tsx","components/ImageEnvironmentSelectFormItems.tsx","components/ResourceGroupSelect.tsx","components/VFolderSelect.tsx","components/ServiceLauncherModal.tsx","hooks/backendai.tsx","pages/ServingListPage.tsx","pages/__generated__/ServingListPageQuery.graphql.ts"],"sourcesContent":["import { Tag } from \"antd\";\nimport Flex from \"./Flex\";\nimport _ from \"lodash\";\nimport React from \"react\";\n\ntype ObjectValue = {\n  label: ValueType;\n  color?: string;\n};\n\ntype ValueType = string | React.ReactNode;\nconst DoubleTag: React.FC<{\n  values?: ValueType[] | ObjectValue[];\n}> = ({ values = [] }) => {\n  if (values.length === 0) return null;\n  let objectValues: ObjectValue[];\n  if (\n    values[0] &&\n    (typeof values[0] === \"string\" || React.isValidElement(values[0]))\n  ) {\n    objectValues = values.map(\n      (value) =>\n        ({\n          label: value,\n          color: \"blue\",\n        } as ObjectValue)\n    );\n  } else {\n    objectValues = values as ObjectValue[];\n  }\n\n  return (\n    <Flex direction=\"row\">\n      {_.map(objectValues, (objValue, idx) => {\n        return (\n          <Tag\n            key={idx}\n            style={\n              _.last(objectValues) === objValue\n                ? undefined\n                : { margin: 0, marginRight: -1, zIndex: 1 }\n            }\n          >\n            {objValue.label}\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default DoubleTag;\n","import { Tag } from \"antd\";\nimport React from \"react\";\nimport { useFragment } from \"react-relay\";\nimport { EndpointStatusTagFragment$key } from \"./__generated__/EndpointStatusTagFragment.graphql\";\nimport graphql from \"babel-plugin-relay/macro\";\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt\n  );\n  let color = \"default\";\n  switch (endpoint?.status?.toUpperCase()) {\n    case \"RUNNING\":\n      color = \"success\";\n      break;\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import { theme } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\n\nexport interface FlexProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"dir\">,\n    PropsWithChildren {\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  justify?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  // | \"evenly\";\n  align?: \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n  gap?: number | \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nconst Flex: React.FC<FlexProps> = ({\n  direction = \"row\",\n  wrap = \"nowrap\",\n  justify = \"flex-start\",\n  align = \"center\",\n  gap = 0,\n  style,\n  children,\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferConst = [justify, align];\n  const transferConstStyle = transferConst?.map((el) => {\n    let tempTxt;\n    switch (el) {\n      case \"start\":\n        tempTxt = \"flex-start\";\n        break;\n      case \"end\":\n        tempTxt = \"flex-end\";\n        break;\n      case \"between\":\n        tempTxt = \"space-between\";\n        break;\n      case \"around\":\n        tempTxt = \"space-around\";\n        break;\n      default:\n        tempTxt = el;\n        break;\n    }\n\n    return tempTxt;\n  });\n  const flexStyle: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: direction,\n    flexWrap: wrap,\n    justifyContent: transferConstStyle[0],\n    alignItems: transferConstStyle[1],\n    ...style,\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"stretch\",\n        backgroundColor: \"transparent\",\n        border: \"0 solid black\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexBasis: \"auto\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        listStyle: \"none\",\n        margin: 0,\n        minHeight: 0,\n        minWidth: 0,\n        padding: 0,\n        position: \"relative\",\n        textDecoration: \"none\",\n        gap:\n          // @ts-ignore\n          typeof gap === \"string\" ? token[\"padding\" + gap.toUpperCase()] : gap,\n        ...flexStyle,\n      }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","import Flex, { FlexProps } from \"./Flex\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { Spin } from \"antd\";\nimport React from \"react\";\n\nconst FlexActivityIndicator: React.FC<FlexProps> = ({ style, children }) => {\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"center\"\n      align=\"center\"\n      style={{ width: \"100%\", height: \"100%\", ...style }}\n    >\n      <Spin indicator={<LoadingOutlined spin />} />\n      {children}\n    </Flex>\n  );\n};\n\nexport default FlexActivityIndicator;\n","import React from \"react\";\nimport { useBackendaiImageMetaData } from \"../hooks\";\n\nconst ImageMetaIcon: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n  alt?: string | null;\n}> = ({ image, style = {} }, bordered, alt = \"\") => {\n  const [, { getImageIcon }] = useBackendaiImageMetaData();\n\n  return (\n    <img\n      src={getImageIcon(image)}\n      style={{\n        width: \"1.5em\",\n        height: \"1.5em\",\n        ...style,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nexport default React.memo(ImageMetaIcon);\n","import React from \"react\";\n\nimport { Form, InputNumber, Modal, ModalProps, theme } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport { baiSignedRequestWithPromise } from \"../helper\";\nimport { useTanMutation } from \"../hooks/reactQueryAlias\";\nimport Flex from \"./Flex\";\nimport { useFragment } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { ModelServiceSettingModal_endpoint$key } from \"./__generated__/ModelServiceSettingModal_endpoint.graphql\";\n\ninterface Props extends ModalProps {\n  endpointFrgmt: ModelServiceSettingModal_endpoint$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface ServiceSettingFormInput {\n  desired_session_count: number;\n}\n\nconst ModelServiceSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  endpointFrgmt,\n  ...props\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment ModelServiceSettingModal_endpoint on Endpoint {\n        endpoint_id\n        desired_session_count\n      }\n    `,\n    endpointFrgmt\n  );\n\n  const mutationToUpdateService = useTanMutation({\n    mutationFn: (values: ServiceSettingFormInput) => {\n      const body = {\n        to: values.desired_session_count,\n      };\n      return baiSignedRequestWithPromise({\n        method: \"POST\",\n        url: `/services/${endpoint?.endpoint_id}/scale`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToUpdateService.mutate(values, {\n          onSuccess: () => {\n            console.log(\"service updated\");\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            console.log(error);\n            // TODO: show error message\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{\n        loading: mutationToUpdateService.isLoading,\n      }}\n      title={t(\"modelService.EditModelService\")}\n    >\n      <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n        <Form\n          form={form}\n          preserve={false}\n          validateTrigger={[\"onChange\", \"onBlur\"]}\n          initialValues={{\n            desired_session_count: endpoint?.desired_session_count,\n          }}\n          style={{ marginBottom: token.marginLG, marginTop: token.margin }}\n        >\n          <Form.Item\n            name=\"desired_session_count\"\n            label={t(\"modelService.DesiredSessionCount\")}\n            rules={[\n              {\n                pattern: /^[0-9]+$/,\n                message: t(\"modelService.OnlyAllowsNonNegativeIntegers\"),\n              },\n            ]}\n          >\n            <InputNumber type=\"number\" min={0} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </Modal>\n  );\n};\n\nexport default ModelServiceSettingModal;\n","/**\n * @generated SignedSource<<8a960e7428e05bcb25f322a53888680e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null;\n  readonly status: string | null;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7a44bb06b700bc6990b9f284967ae6c0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ImageEnvironmentSelectFormItemsQuery$variables = {\n  installed?: boolean | null;\n};\nexport type ImageEnvironmentSelectFormItemsQuery$data = {\n  readonly images: ReadonlyArray<{\n    readonly architecture: string | null;\n    readonly digest: string | null;\n    readonly humanized_name: string | null;\n    readonly installed: boolean | null;\n    readonly labels: ReadonlyArray<{\n      readonly key: string | null;\n      readonly value: string | null;\n    } | null> | null;\n    readonly name: string | null;\n    readonly registry: string | null;\n    readonly resource_limits: ReadonlyArray<{\n      readonly key: string | null;\n      readonly max: string | null;\n      readonly min: string | null;\n    } | null> | null;\n    readonly tag: string | null;\n  } | null> | null;\n};\nexport type ImageEnvironmentSelectFormItemsQuery = {\n  response: ImageEnvironmentSelectFormItemsQuery$data;\n  variables: ImageEnvironmentSelectFormItemsQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"installed\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"key\",\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"is_installed\",\n        \"variableName\": \"installed\"\n      }\n    ],\n    \"concreteType\": \"Image\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"images\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"humanized_name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"tag\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"registry\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"architecture\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"digest\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"installed\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ResourceLimit\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"resource_limits\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"min\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"KVPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"labels\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"value\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"ea71f4a3948d4742dd6bb11ef80a8300\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ImageEnvironmentSelectFormItemsQuery(\\n  $installed: Boolean\\n) {\\n  images(is_installed: $installed) {\\n    name\\n    humanized_name\\n    tag\\n    registry\\n    architecture\\n    digest\\n    installed\\n    resource_limits {\\n      key\\n      min\\n      max\\n    }\\n    labels {\\n      key\\n      value\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"33367bd6e1532b42b61629ef9d3dc46b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b2872924ef54e9c1706ca51d19289a4f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelServiceSettingModal_endpoint$data = {\n  readonly desired_session_count: number | null;\n  readonly endpoint_id: any | null;\n  readonly \" $fragmentType\": \"ModelServiceSettingModal_endpoint\";\n};\nexport type ModelServiceSettingModal_endpoint$key = {\n  readonly \" $data\"?: ModelServiceSettingModal_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelServiceSettingModal_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"desired_session_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"881f18324b27eba6ff0fcfb83ae241d2\";\n\nexport default node;\n","import { useSuspendedBackendaiClient } from \"../hooks\";\n\nexport const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client?.newSignedRequest(method, url, body, null);\n  return client?._wrapWithPromise(request);\n};\n\nexport const useBaiSignedRequestWithPromise = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return ({\n    method,\n    url,\n    body = null,\n  }: {\n    method: string;\n    url: string;\n    body?: any;\n  }) =>\n    baiSignedRequestWithPromise({\n      method,\n      url,\n      body,\n      client: baiClient,\n    });\n};\n\n/**\n * Convert file size with binary unit to human readable unit and value\n *\n * @param {number} bytes\n * @param {number} decimalPoint decimal point set to 2 as a default\n * @return {string} converted file size to human readable value\n */\nexport const _humanReadableDecimalSize = (bytes = 0, decimalPoint = 2) => {\n  if (bytes === 0) return \"0 Bytes\";\n  const k = Math.pow(10, 3);\n  decimalPoint = decimalPoint < 0 ? 0 : decimalPoint;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"];\n  let i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) + \" \" + sizes[i]\n  );\n};\n\nexport const _humanReadableBinarySize = (\n  bytes = 0,\n  decimalPoint = 2,\n  compact = false\n) => {\n  if (!bytes) return 0;\n  if (typeof bytes === \"string\") bytes = parseInt(bytes);\n  const k = Math.pow(2, 10);\n  let i;\n  let unitList;\n  decimalPoint = decimalPoint < 0 || compact ? 0 : decimalPoint;\n  i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  if (compact) {\n    unitList = [\"\", \"Ki\", \"Mi\", \"Gi\", \"Ti\", \"Pi\", \"Ei\"];\n  } else {\n    unitList = [\"Bytes\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\"];\n  }\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) +\n    \" \" +\n    unitList[i]\n  );\n};\n\nexport const GBToBytes = (value = 0) => {\n  const gigabyte = Math.pow(10, 9);\n  return Math.round(gigabyte * value);\n};\n\nexport const bytesToGB = (\n  bytes: number,\n  decimalPoint = 2,\n  nullStr: string = \"-\"\n) => {\n  if (bytes === null || bytes === undefined) return nullStr;\n  if (!bytes) return bytes;\n  return (bytes / 10 ** 9).toFixed(decimalPoint);\n};\n\nexport type QuotaScopeType = \"project\" | \"user\";\nexport const addQuotaScopeTypePrefix = (type: QuotaScopeType, str: string) => {\n  if (str === \"\" || str === undefined) return \"\";\n  if (str.startsWith(`${type}:`)) return str;\n  return `${type}:${str}`;\n};\n\nexport const usageIndicatorColor = (percentage: number) => {\n  return percentage < 70\n    ? \"rgba(58, 178, 97, 1)\"\n    : percentage < 90\n    ? \"rgb(223, 179, 23)\"\n    : \"#ef5350\";\n};\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener(\"backend-ai-group-changed\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-group-changed\", listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: \"backendai-metadata-for-suspense\",\n    queryFn: () => {\n      return fetch(\"resources/image_metadata.json\")\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          }\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: \"\",\n        tags: [],\n      };\n    }\n    const specs = imageName.split(\"/\");\n\n    const [key, tag] = (specs[2] || specs[1]).split(\":\");\n    const tags = tag.split(\"-\");\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = \"resources/icons/\") => {\n        if (!imageName) return \"default.png\";\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key]?.icon !== undefined\n            ? metadata?.imageInfo[key]?.icon\n            : \"default.png\")\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n","import { useQuery, useMutation } from \"react-query\";\n\nexport const useTanQuery = useQuery;\nexport const useTanMutation = useMutation;\n","import React from \"react\";\nimport {\n  InputNumber,\n  Slider,\n  Form,\n  SliderSingleProps,\n  InputNumberProps,\n} from \"antd\";\nimport Flex from \"./Flex\";\nimport { FormItemProps } from \"antd/lib/form/FormItem\";\nimport { NamePath } from \"antd/es/form/interface\";\nimport { SliderRangeProps } from \"antd/es/slider\";\n\ninterface SliderInputProps extends Omit<FormItemProps, \"name\"> {\n  min?: number;\n  max?: number;\n  step?: number;\n  name: NamePath;\n  inputNumberProps?: InputNumberProps;\n  sliderProps?: SliderSingleProps | SliderRangeProps;\n}\nconst SliderInputItem: React.FC<SliderInputProps> = ({\n  name,\n  min,\n  max,\n  step,\n  rules,\n  required,\n  inputNumberProps,\n  sliderProps,\n  ...formItemProps\n}) => {\n  return (\n    <Form.Item required={required} {...formItemProps}>\n      <Flex direction=\"row\" gap={\"md\"}>\n        <Flex direction=\"column\" align=\"stretch\" style={{ flex: 3 }}>\n          <Form.Item name={name} noStyle rules={rules}>\n            <Slider max={max} min={min} step={step} {...sliderProps} />\n          </Form.Item>\n        </Flex>\n        <Flex style={{ flex: 2 }}>\n          <Form.Item name={name} noStyle>\n            <InputNumber\n              max={max}\n              min={min}\n              step={step}\n              {...inputNumberProps}\n            />\n          </Form.Item>\n        </Flex>\n      </Flex>\n    </Form.Item>\n    // <Row justify=\"space-around\" align=\"middle\" gutter={20}>\n    //   <Col span={6}>\n    //     <p>Resource</p>\n    //   </Col>\n    //   <Col span={8}>\n    //     <Slider\n    //       min={minValue}\n    //       max={maxValue}\n    //       onChange={onChange}\n    //       value={typeof inputValue === \"number\" ? inputValue : 0}\n    //       step={0.01}\n    //     />\n    //   </Col>\n    //   <Col span={6}>\n    //     <InputNumber\n    //       min={minValue}\n    //       max={maxValue}\n    //       style={\n    //         {\n    //           /* use theme config */\n    //         }\n    //       }\n    //       step={0.01}\n    //       value={inputValue}\n    //       onChange={onChange}\n    //     />\n    //   </Col>\n    // </Row>\n  );\n};\n\nexport default SliderInputItem;\n","import { theme } from \"antd\";\nimport React from \"react\";\n\ninterface TextHighlighterProps {\n  children?: string | null;\n  keyword: string;\n  style?: React.CSSProperties;\n}\n\nconst TextHighlighter: React.FC<TextHighlighterProps> = ({\n  children,\n  keyword,\n  style,\n}) => {\n  if (!children) return null;\n\n  const keyIndex = children.toLowerCase().indexOf(keyword?.toLowerCase());\n  const { token } = theme.useToken() || \"#F1A239\";\n  return keyIndex >= 0 ? (\n    <span>\n      {children.substring(0, keyIndex)}\n      <span style={{ backgroundColor: token.colorWarningHover, ...style }}>\n        {children.substring(keyIndex, keyIndex + keyword.length)}\n      </span>\n      {children.substring(keyIndex + keyword.length)}\n    </span>\n  ) : (\n    <span>{children}</span>\n  );\n};\n\nexport default TextHighlighter;\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport _ from \"lodash\";\nimport { Divider, Form, Input, RefSelectProps, Select, Tag, theme } from \"antd\";\nimport { useBackendaiImageMetaData } from \"../hooks\";\nimport ImageMetaIcon from \"./ImageMetaIcon\";\nimport Flex from \"./Flex\";\nimport { useTranslation } from \"react-i18next\";\nimport TextHighlighter from \"./TextHighlighter\";\nimport DoubleTag from \"./DoubleTag\";\nimport {\n  ImageEnvironmentSelectFormItemsQuery,\n  ImageEnvironmentSelectFormItemsQuery$data,\n} from \"./__generated__/ImageEnvironmentSelectFormItemsQuery.graphql\";\n\nexport type Image = NonNullable<\n  NonNullable<ImageEnvironmentSelectFormItemsQuery$data>[\"images\"]\n>[0];\n\ntype ImageGroup = {\n  groupName: string;\n  environmentGroups: {\n    environmentName: string;\n    displayName: string;\n    prefix?: string;\n    images: Image[];\n  }[];\n};\n\nexport type ImageEnvironmentFormInput = {\n  environments: {\n    environment: string;\n    version: string;\n    image: Image | undefined;\n  };\n};\n\ninterface ImageEnvironmentSelectFormItemsProps {\n  filter?: (image: Image) => boolean;\n}\n\nconst getImageFullName = (image: Image) => {\n  return image\n    ? `${image.registry}/${image.name}:${image.tag}@${image.architecture}`\n    : undefined;\n};\n\nfunction compareVersions(version1: string, version2: string): number {\n  const v1 = version1.split(\".\").map(Number);\n  const v2 = version2.split(\".\").map(Number);\n\n  for (let i = 0; i < Math.max(v1.length, v2.length); i++) {\n    const num1 = v1[i] || 0;\n    const num2 = v2[i] || 0;\n\n    if (num1 > num2) {\n      return 1;\n    } else if (num1 < num2) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\nconst ImageEnvironmentSelectFormItems: React.FC<\n  ImageEnvironmentSelectFormItemsProps\n> = ({ filter }) => {\n  const form = Form.useFormInstance<ImageEnvironmentFormInput>();\n  const currentEnvironmentsFormData = Form.useWatch(\"environments\", form);\n\n  const [environmentSearch, setEnvironmentSearch] = useState(\"\");\n  const [versionSearch, setVersionSearch] = useState(\"\");\n  const { t } = useTranslation();\n  const [metadata, { getImageMeta }] = useBackendaiImageMetaData();\n  const { token } = theme.useToken();\n\n  const versionSelectRef = useRef<RefSelectProps>(null);\n\n  const { images } = useLazyLoadQuery<ImageEnvironmentSelectFormItemsQuery>(\n    graphql`\n      query ImageEnvironmentSelectFormItemsQuery($installed: Boolean) {\n        images(is_installed: $installed) {\n          name\n          humanized_name\n          tag\n          registry\n          architecture\n          digest\n          installed\n          resource_limits {\n            key\n            min\n            max\n          }\n          labels {\n            key\n            value\n          }\n        }\n      }\n    `,\n    {\n      installed: true,\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n\n  // If not initial value, select first value\n  // auto select when relative field is changed\n  useEffect(() => {\n    // if not initial value, select first value\n    const nextEnvironmentName =\n      currentEnvironmentsFormData?.environment ||\n      imageGroups[0]?.environmentGroups[0]?.environmentName;\n\n    let nextEnvironmentGroup: ImageGroup[\"environmentGroups\"][0] | undefined;\n    _.find(imageGroups, (group) => {\n      return _.find(group.environmentGroups, (environment) => {\n        if (environment.environmentName === nextEnvironmentName) {\n          nextEnvironmentGroup = environment;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    });\n\n    // if current version does'nt exist in next environment group, select a version of the first image of next environment group\n    if (\n      !_.find(\n        nextEnvironmentGroup?.images,\n        (image) =>\n          currentEnvironmentsFormData?.version === getImageFullName(image)\n      )\n    ) {\n      const nextNewImage = nextEnvironmentGroup?.images[0];\n      if (nextNewImage) {\n        form.setFieldsValue({\n          environments: {\n            environment: nextEnvironmentName,\n            version: getImageFullName(nextNewImage),\n            image: nextNewImage,\n          },\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentEnvironmentsFormData?.environment]);\n\n  const imageGroups: ImageGroup[] = useMemo(\n    () =>\n      _.chain(images)\n        .filter(filter ? filter : () => true)\n        .groupBy((image) => {\n          // group by using `group` property of image info\n          return (\n            metadata?.imageInfo[getImageMeta(getImageFullName(image) || \"\").key]\n              ?.group || \"Custom Environments\"\n          );\n        })\n        .map((images, groupName) => {\n          return {\n            groupName,\n            environmentGroups: _.chain(images)\n              // sub group by using (environment) `name` property of image info\n              .groupBy((image) => {\n                return (\n                  // metadata?.imageInfo[\n                  //   getImageMeta(getImageFullName(image) || \"\").key\n                  // ]?.name || image?.name\n                  image?.name\n                );\n              })\n              .map((images, environmentName) => ({\n                environmentName,\n                displayName:\n                  metadata?.imageInfo[environmentName.split(\"/\")?.[1]]?.name ||\n                  environmentName,\n                prefix: environmentName.split(\"/\")?.[0],\n                images: images.sort((a, b) =>\n                  compareVersions(\n                    // latest version comes first\n                    b?.tag?.split(\"-\")?.[0] ?? \"\",\n                    a?.tag?.split(\"-\")?.[0] ?? \"\"\n                  )\n                ),\n              }))\n              .sortBy((item) => item.displayName)\n              .value(),\n          };\n        })\n        .sortBy((item) => item.groupName)\n        .value(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [images, metadata, filter]\n  );\n\n  return (\n    <>\n      <Form.Item\n        name={[\"environments\", \"environment\"]}\n        label={`${t(\"session.launcher.Environments\")} / ${t(\n          \"session.launcher.Version\"\n        )}`}\n        rules={[{ required: true }]}\n        style={{ marginBottom: 10 }}\n      >\n        <Select\n          showSearch\n          // autoClearSearchValue\n          labelInValue={false}\n          searchValue={environmentSearch}\n          onSearch={setEnvironmentSearch}\n          defaultActiveFirstOption={true}\n          optionLabelProp=\"label\"\n          optionFilterProp=\"filterValue\"\n          onSelect={() => {\n            // versionSelectRef.current?.focus();\n          }}\n        >\n          {_.map(imageGroups, (group) => {\n            return (\n              <Select.OptGroup key={group.groupName} label={group.groupName}>\n                {_.map(group.environmentGroups, (environmentGroup) => {\n                  const firstImage = environmentGroup.images[0];\n                  const currentMetaImageInfo =\n                    metadata?.imageInfo[\n                      environmentGroup.environmentName.split(\"/\")?.[1]\n                    ];\n\n                  const extraFilterValues: string[] = [];\n                  let environmentPrefixTag = null;\n                  if (\n                    environmentGroup.prefix &&\n                    ![\"lablup\", \"cloud\", \"stable\"].includes(\n                      environmentGroup.prefix\n                    )\n                  ) {\n                    extraFilterValues.push(environmentGroup.prefix);\n                    environmentPrefixTag = (\n                      <Tag color=\"purple\">{environmentGroup.prefix}</Tag>\n                    );\n                  }\n\n                  const tagsFromMetaImageInfoLabel = _.map(\n                    currentMetaImageInfo?.label,\n                    (label) => {\n                      if (\n                        _.isUndefined(label.category) &&\n                        label.tag &&\n                        label.color\n                      ) {\n                        extraFilterValues.push(label.tag);\n                        return (\n                          <Tag color={label.color}>\n                            <TextHighlighter keyword={environmentSearch}>\n                              {label.tag}\n                            </TextHighlighter>\n                          </Tag>\n                        );\n                      }\n                      return null;\n                    }\n                  );\n                  return (\n                    <Select.Option\n                      key={environmentGroup.environmentName}\n                      value={environmentGroup.environmentName}\n                      filterValue={\n                        environmentGroup.displayName +\n                        \"\\t\" +\n                        extraFilterValues.join(\"\\t\")\n                      }\n                      label={\n                        <Flex direction=\"row\">\n                          <Flex direction=\"row\" align=\"center\" gap=\"xs\">\n                            <ImageMetaIcon\n                              image={getImageFullName(firstImage) || \"\"}\n                              style={{\n                                width: 15,\n                                height: 15,\n                              }}\n                            />\n                            {environmentGroup.displayName}\n                          </Flex>\n                        </Flex>\n                      }\n                    >\n                      <Flex direction=\"row\" justify=\"between\">\n                        <Flex direction=\"row\" align=\"center\" gap=\"xs\">\n                          <ImageMetaIcon\n                            image={getImageFullName(firstImage) || \"\"}\n                            style={{\n                              width: 15,\n                              height: 15,\n                            }}\n                          />\n                          <TextHighlighter keyword={environmentSearch}>\n                            {environmentGroup.displayName}\n                          </TextHighlighter>\n                        </Flex>\n                        {environmentPrefixTag}\n                        {tagsFromMetaImageInfoLabel}\n                      </Flex>\n                    </Select.Option>\n                  );\n                })}\n              </Select.OptGroup>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        noStyle\n        shouldUpdate={(prev, cur) =>\n          prev.environments?.environments !== cur.environments?.environment\n        }\n      >\n        {({ getFieldValue }) => {\n          let selectedEnvironmentGroup:\n            | ImageGroup[\"environmentGroups\"][0]\n            | undefined;\n          _.find(imageGroups, (group) => {\n            return _.find(group.environmentGroups, (environment) => {\n              if (\n                environment.environmentName ===\n                getFieldValue(\"environments\")?.environment\n              ) {\n                selectedEnvironmentGroup = environment;\n                return true;\n              } else {\n                return false;\n              }\n            });\n          });\n          return (\n            <Form.Item\n              name={[\"environments\", \"version\"]}\n              rules={[{ required: true }]}\n            >\n              <Select\n                ref={versionSelectRef}\n                onChange={() => {}}\n                showSearch\n                searchValue={versionSearch}\n                onSearch={setVersionSearch}\n                // autoClearSearchValue\n                optionFilterProp=\"filterValue\"\n                optionLabelProp=\"label\"\n                dropdownRender={(menu) => (\n                  <>\n                    <Flex\n                      style={{\n                        fontWeight: token.fontWeightStrong,\n                        paddingLeft: token.paddingSM,\n                      }}\n                    >\n                      {t(\"session.launcher.Version\")}\n                      <Divider type=\"vertical\" />\n                      {t(\"session.launcher.Base\")}\n                      <Divider type=\"vertical\" />\n                      {t(\"session.launcher.Architecture\")}\n                      <Divider type=\"vertical\" />\n                      {t(\"session.launcher.Requirements\")}\n                    </Flex>\n                    <Divider style={{ margin: \"8px 0\" }} />\n                    {menu}\n                  </>\n                )}\n              >\n                {_.map(\n                  _.uniqBy(selectedEnvironmentGroup?.images, \"digest\"),\n\n                  (image) => {\n                    const [version, tag, ...requirements] = image?.tag?.split(\n                      \"-\"\n                    ) || [\"\", \"\", \"\"];\n\n                    let tagAlias = metadata?.tagAlias[tag];\n                    if (!tagAlias) {\n                      for (const [key, replaceString] of Object.entries(\n                        metadata?.tagReplace || {}\n                      )) {\n                        const pattern = new RegExp(key);\n                        if (pattern.test(tag)) {\n                          tagAlias = tag?.replace(pattern, replaceString);\n                        }\n                      }\n                      if (!tagAlias) {\n                        tagAlias = tag;\n                      }\n                    }\n\n                    const extraFilterValues: string[] = [];\n                    const requirementTags =\n                      requirements.length > 0 ? (\n                        <Flex\n                          direction=\"row\"\n                          wrap=\"wrap\"\n                          style={{\n                            flex: 1,\n                          }}\n                          gap={\"xxs\"}\n                        >\n                          {_.map(requirements, (requirement, idx) => (\n                            <DoubleTag\n                              key={idx}\n                              values={\n                                metadata?.tagAlias[requirement]\n                                  ?.split(\":\")\n                                  .map((str) => {\n                                    extraFilterValues.push(str);\n                                    return (\n                                      <TextHighlighter keyword={versionSearch}>\n                                        {str}\n                                      </TextHighlighter>\n                                    );\n                                  }) || requirements\n                              }\n                            />\n                          ))}\n                        </Flex>\n                      ) : (\n                        \"-\"\n                      );\n                    return (\n                      <Select.Option\n                        key={image?.digest}\n                        value={getImageFullName(image)}\n                        filterValue={[\n                          version,\n                          tagAlias,\n                          image?.architecture,\n                          ...extraFilterValues,\n                        ].join(\"\\t\")}\n                        label={[\n                          version,\n                          tagAlias,\n                          image?.architecture,\n                          requirements.length > 0\n                            ? requirements.join(\", \")\n                            : \"-\",\n                        ].join(\" | \")}\n                      >\n                        <Flex direction=\"row\">\n                          <TextHighlighter keyword={versionSearch}>\n                            {version}\n                          </TextHighlighter>\n                          <Divider type=\"vertical\" />\n                          <TextHighlighter keyword={versionSearch}>\n                            {tagAlias}\n                          </TextHighlighter>\n                          <Divider type=\"vertical\" />\n                          <TextHighlighter keyword={versionSearch}>\n                            {image?.architecture}\n                          </TextHighlighter>\n                          <Divider type=\"vertical\" />\n                          {requirementTags}\n                        </Flex>\n                      </Select.Option>\n                    );\n                  }\n                )}\n              </Select>\n            </Form.Item>\n          );\n        }}\n      </Form.Item>\n      <Form.Item noStyle hidden name={[\"environments\", \"image\"]}>\n        <Input />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ImageEnvironmentSelectFormItems;\n","import { Select, SelectProps } from \"antd\";\nimport React, { startTransition, useEffect } from \"react\";\nimport _ from \"lodash\";\n// import { ResourceGroupSelectorQuery } from \"./__generated__/ResourceGroupSelectorQuery.graphql\";\nimport { useCurrentProjectValue, useUpdatableState } from \"../hooks\";\nimport { useBaiSignedRequestWithPromise } from \"../helper\";\nimport { useTanQuery } from \"../hooks/reactQueryAlias\";\n\ninterface ResourceGroupSelectorProps extends SelectProps {\n  projectId?: string;\n  autoSelectDefault?: boolean;\n  filter?: (projectName: string) => boolean;\n}\n\nconst ResourceGroupSelector: React.FC<ResourceGroupSelectorProps> = ({\n  projectId,\n  autoSelectDefault,\n  filter,\n  ...selectProps\n}) => {\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const currentProject = useCurrentProjectValue();\n  // const { group: project } = useLazyLoadQuery<ResourceGroupSelectorQuery>(\n  //   graphql`\n  //     query ResourceGroupSelectorQuery($projectId: UUID!) {\n  //       group(id: $projectId) {\n  //         id\n  //         scaling_groups\n  //       }\n  //     }\n  //   `,\n  //   {\n  //     projectId: projectId || currentProject.id,\n  //   }\n  // );\n\n  const [key, checkUpdate] = useUpdatableState(\"first\");\n\n  const { data } = useTanQuery({\n    queryKey: [\"ResourceGroupSelectorQuery\", key],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: \"GET\",\n        url: `/scaling-groups?group=${currentProject.name}`,\n      }) as Promise<{ scaling_groups: { name: string }[] }>;\n    },\n    staleTime: 0,\n  });\n  const resourceGroups = data?.scaling_groups || [];\n\n  const autoSelectedOption = resourceGroups[0]\n    ? {\n        label: resourceGroups[0].name,\n        value: resourceGroups[0].name,\n      }\n    : undefined;\n\n  useEffect(() => {\n    if (autoSelectDefault && autoSelectedOption) {\n      selectProps.onChange?.(autoSelectedOption.value, autoSelectedOption);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoSelectDefault]);\n  return (\n    <Select\n      defaultActiveFirstOption\n      defaultValue={autoSelectDefault ? autoSelectedOption : undefined}\n      onDropdownVisibleChange={(open) => {\n        if (open) {\n          startTransition(() => {\n            checkUpdate();\n          });\n        }\n      }}\n      {...selectProps}\n    >\n      {_.map(resourceGroups, (resourceGroup, idx) => {\n        return (\n          <Select.Option key={resourceGroup.name} value={resourceGroup.name}>\n            {resourceGroup.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default ResourceGroupSelector;\n","import { Select, SelectProps } from \"antd\";\nimport React, { startTransition, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { useCurrentProjectValue, useUpdatableState } from \"../hooks\";\nimport { useBaiSignedRequestWithPromise } from \"../helper\";\nimport { useTanQuery } from \"../hooks/reactQueryAlias\";\n\ntype VFolder = {\n  name: string;\n  id: string;\n  quota_scope_id: string;\n  host: string;\n  status: string;\n  usage_mode: string;\n  created_at: string;\n  is_owner: boolean;\n  permission: string;\n  user: null;\n  group: string;\n  creator: string;\n  user_email: null;\n  group_name: string;\n  ownership_type: string;\n  type: string;\n  cloneable: boolean;\n  max_files: number;\n  max_size: null | number;\n  cur_size: number;\n};\n\ninterface VFolderSelectProps extends SelectProps {\n  autoSelectDefault?: boolean;\n  filter?: (vFolder: VFolder) => boolean;\n}\n\nconst VFolderSelect: React.FC<VFolderSelectProps> = ({\n  filter,\n  autoSelectDefault,\n  ...selectProps\n}) => {\n  const currentProject = useCurrentProjectValue();\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  // const { vfolder_list } = useLazyLoadQuery<VFolderSelectQuery>(\n  //   graphql`\n  //     # query VFolderSelectQuery($group_id: UUID) {\n  //     query VFolderSelectQuery {\n  //       vfolder_list(limit: 20, offset: 0) {\n  //         # vfolder_list(limit: 20, offset: 0, group_id: $group_id) {\n  //         items {\n  //           id\n  //           name\n  //           status\n  //           usage_mode\n  //           ownership_type\n  //           user_email\n  //           group\n  //           group_name\n  //         }\n  //         total_count\n  //       }\n  //     }\n  //   `,\n  //   {\n  //     // group_id: currentProject.id,\n  //   },\n  //   {\n  //     fetchPolicy: \"store-and-network\",\n  //   }\n  // );\n  // console.log(\"vfolder_list\", vfolder_list);\n  const [key, checkUpdate] = useUpdatableState(\"first\");\n\n  const { data } = useTanQuery({\n    queryKey: [\"VFolderSelectQuery\", key],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: \"GET\",\n        url: `/folders?group_id=${currentProject.id}`,\n      }) as Promise<VFolder[]>;\n    },\n    staleTime: 0,\n  });\n\n  const filteredVFolders = filter ? _.filter(data, filter) : data;\n\n  const autoSelectedOption = _.first(filteredVFolders)\n    ? {\n        label: _.first(filteredVFolders)?.name,\n        value: _.first(filteredVFolders)?.name,\n      }\n    : undefined;\n  useEffect(() => {\n    if (autoSelectDefault && autoSelectedOption) {\n      selectProps.onChange?.(autoSelectedOption.value, autoSelectedOption);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoSelectDefault]);\n  return (\n    <Select\n      showSearch\n      {...selectProps}\n      onDropdownVisibleChange={(open) => {\n        if (open) {\n          startTransition(() => {\n            checkUpdate();\n          });\n        }\n      }}\n    >\n      {_.map(filteredVFolders, (vfolder) => {\n        return (\n          <Select.Option key={vfolder?.id} value={vfolder?.name}>\n            {vfolder?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default VFolderSelect;\n","import {\n  Card,\n  Form,\n  Input,\n  Modal,\n  ModalProps,\n  theme,\n  Switch,\n  message,\n} from \"antd\";\nimport React, { Suspense } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport SliderInputItem from \"./SliderInputFormItem\";\nimport ImageEnvironmentSelectFormItems, {\n  Image,\n  ImageEnvironmentFormInput,\n} from \"./ImageEnvironmentSelectFormItems\";\nimport FlexActivityIndicator from \"./FlexActivityIndicator\";\nimport _ from \"lodash\";\nimport ResourceGroupSelect from \"./ResourceGroupSelect\";\nimport VFolderSelect from \"./VFolderSelect\";\nimport { useTanMutation } from \"../hooks/reactQueryAlias\";\nimport { useCurrentDomainValue } from \"../hooks\";\nimport { baiSignedRequestWithPromise } from \"../helper\";\nimport { useResourceSlots } from \"../hooks/backendai\";\n\ntype ClusterMode = \"single-node\" | \"multi-node\";\n\ninterface ServiceCreateConfigResourceOptsType {\n  shmem?: number | string;\n}\ninterface ServiceCreateConfigResourceType {\n  cpu: number | string;\n  mem: string;\n  \"cuda.device\"?: number | string;\n  \"cuda.shares\"?: number | string;\n}\n\ninterface ServiceCreateConfigType {\n  model: string;\n  model_version?: string;\n  model_mount_destination: string; // default == \"/models\"\n  environ: object; // environment variable\n  scaling_group: string;\n  resources: ServiceCreateConfigResourceType;\n  resource_opts?: ServiceCreateConfigResourceOptsType;\n}\ninterface ServiceCreateType {\n  name: string;\n  desired_session_count: number;\n  image: string;\n  arch: string;\n  group: string;\n  domain: string;\n  cluster_size: number;\n  cluster_mode: ClusterMode;\n  tag?: string;\n  startup_command?: string;\n  bootstrap_script?: string;\n  owner_access_key?: string;\n  open_to_public: boolean;\n  config: ServiceCreateConfigType;\n}\n\ninterface ServiceLauncherProps extends Omit<ModalProps, \"onOK\" | \"onCancel\"> {\n  extraP?: boolean;\n  onRequestClose: (success?: boolean) => void;\n}\ninterface ServiceLauncherFormInput extends ImageEnvironmentFormInput {\n  serviceName: string;\n  gpu: number;\n  cpu: number;\n  mem: number;\n  shmem: number;\n  resourceGroup: string;\n  vFolderName: string;\n  desiredRoutingCount: number;\n  openToPublic: boolean;\n}\n\nconst ServiceLauncherModal: React.FC<ServiceLauncherProps> = ({\n  extraP,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  // const [modalText, setModalText] = useState(\"Content of the modal\");\n  const currentDomain = useCurrentDomainValue();\n  const [form] = Form.useForm<ServiceLauncherFormInput>();\n  const [resourceSlots] = useResourceSlots();\n\n  const mutationToCreateService = useTanMutation({\n    mutationFn: (values: ServiceLauncherFormInput) => {\n      const image: string = `${values.environments.image?.registry}/${values.environments.image?.name}:${values.environments.image?.tag}`;\n      const body: ServiceCreateType = {\n        name: values.serviceName,\n        desired_session_count: values.desiredRoutingCount,\n        image: image,\n        arch: values.environments.image?.architecture as string,\n        group: baiClient.current_group, // current Project Group,\n        domain: currentDomain, // current Domain Group,\n        cluster_size: 1, // FIXME: hardcoded. change it with option later\n        cluster_mode: \"single-node\", // FIXME: hardcoded. change it with option later\n        open_to_public: values.openToPublic,\n        config: {\n          model: values.vFolderName,\n          model_mount_destination: \"/models\", // FIXME: hardcoded. change it with option later\n          environ: {}, // FIXME: hardcoded. change it with option later\n          scaling_group: values.resourceGroup,\n          resources: {\n            cpu: values.cpu,\n            mem: values.mem + \"G\",\n          },\n        },\n      };\n      if (resourceSlots?.cuda === \"shares\") {\n        body[\"config\"].resources[\"cuda.shares\"] = values.gpu;\n      }\n      if (resourceSlots?.cuda === \"device\") {\n        body[\"config\"].resources[\"cuda.device\"] = values.gpu;\n      }\n      if (values.shmem && values.shmem > 0) {\n        body[\"config\"].resource_opts = {\n          shmem: values.shmem,\n        };\n      }\n      return baiSignedRequestWithPromise({\n        method: \"POST\",\n        url: \"/services\",\n        body,\n        client: baiClient,\n      });\n    },\n  });\n  // const scalingGroupList = use;\n  // modelStorageList: Record<string, any>[];\n  // environmentList: Record<string, any>[];\n  // name?: string;\n  // cpu: number | string;\n  // mem: number | string;\n  // npu?: number | string;\n  // shmem?: number | string;\n\n  // Apply any operation after clicking OK button\n  const handleOk = () => {\n    // setModalText(\"Lorem Ipsum\");\n    // setConfirmLoading(true);\n    // // TODO: send request to start service to manager server\n    // setTimeout(() => {\n    //   setConfirmLoading(false);\n    // }, 2000);\n    form.validateFields().then((values) => {\n      mutationToCreateService.mutate(values, {\n        onSuccess: () => {\n          onRequestClose(true);\n        },\n        onError: (error) => {\n          message.error(t(\"modelService.FailedToStartService\"));\n        },\n      });\n      new Promise((resolve, reject) => {}).then(() => {\n        onRequestClose(true);\n      });\n    });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <Modal\n      title={t(\"modelService.StartNewServing\")}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      maskClosable={false}\n      confirmLoading={mutationToCreateService.isLoading}\n      {...modalProps}\n    >\n      <Suspense fallback={<FlexActivityIndicator />}>\n        <Form\n          disabled={mutationToCreateService.isLoading}\n          form={form}\n          preserve={false}\n          layout=\"vertical\"\n          labelCol={{ span: 12 }}\n          initialValues={\n            {\n              cpu: 1,\n              gpu: 0,\n              mem: 0.25,\n              shmem: 0,\n              desiredRoutingCount: 1,\n            } as ServiceLauncherFormInput\n          }\n        >\n          <Form.Item\n            label={t(\"modelService.ServiceName\")}\n            name=\"serviceName\"\n            rules={[\n              {\n                max: 20,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"resourceGroup\"\n            label={t(\"session.ResourceGroup\")}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <ResourceGroupSelect autoSelectDefault />\n          </Form.Item>\n          <Form.Item\n            name=\"openToPublic\"\n            label={t(\"modelService.OpenToPublic\")}\n            valuePropName=\"checked\"\n          >\n            <Switch></Switch>\n          </Form.Item>\n          <Form.Item\n            name={\"vFolderName\"}\n            label={t(\"session.launcher.ModelStorageToMount\")}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <VFolderSelect\n              filter={(vf) => vf.usage_mode === \"model\"}\n              autoSelectDefault\n            />\n          </Form.Item>\n          <SliderInputItem\n            label={t(\"modelService.DesiredRoutingCount\")}\n            name=\"desiredRoutingCount\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            inputNumberProps={{\n              //TODO: change unit based on resource limit\n              addonAfter: \"#\",\n            }}\n            required\n          />\n          <Card\n            style={{\n              marginBottom: token.margin,\n            }}\n          >\n            <ImageEnvironmentSelectFormItems\n            // //TODO: test with real inference images\n            // filter={(image) => {\n            //   return !!_.find(image?.labels, (label) => {\n            //     return (\n            //       label?.key === \"ai.backend.role\" &&\n            //       label.value === \"INFERENCE\" //['COMPUTE', 'INFERENCE', 'SYSTEM']\n            //     );\n            //   });\n            // }}\n            />\n            <Form.Item\n              noStyle\n              shouldUpdate={(prev, cur) =>\n                prev.environments?.image?.digest !==\n                cur.environments?.image?.digest\n              }\n            >\n              {({ getFieldValue }) => {\n                // TODO: change min/max based on selected images resource limit and current user limit\n                const currentImage: Image =\n                  getFieldValue(\"environments\")?.image;\n\n                return (\n                  <>\n                    <SliderInputItem\n                      name={\"cpu\"}\n                      label={t(\"session.launcher.CPU\")}\n                      tooltip={<Trans i18nKey={\"session.launcher.DescCPU\"} />}\n                      min={parseInt(\n                        _.find(\n                          currentImage?.resource_limits,\n                          (i) => i?.key === \"cpu\"\n                        )?.min || \"0\"\n                      )}\n                      max={parseInt(\n                        _.find(\n                          currentImage?.resource_limits,\n                          (i) => i?.key === \"cpu\"\n                        )?.max || \"100\"\n                      )}\n                      inputNumberProps={{\n                        addonAfter: t(\"session.launcher.Core\"),\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                    <SliderInputItem\n                      name={\"mem\"}\n                      label={t(\"session.launcher.Memory\")}\n                      tooltip={\n                        <Trans i18nKey={\"session.launcher.DescMemory\"} />\n                      }\n                      max={30}\n                      inputNumberProps={{\n                        addonAfter: \"GB\",\n                      }}\n                      step={0.05}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                    <SliderInputItem\n                      name={\"shmem\"}\n                      label={t(\"session.launcher.SharedMemory\")}\n                      tooltip={\n                        <Trans i18nKey={\"session.launcher.DescSharedMemory\"} />\n                      }\n                      max={30}\n                      step={0.1}\n                      inputNumberProps={{\n                        addonAfter: \"GB\",\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                    {resourceSlots.cuda !== undefined ? (\n                      <SliderInputItem\n                        style={{ marginBottom: 0 }}\n                        name={\"gpu\"}\n                        label={t(\"session.launcher.AIAccelerator\")}\n                        tooltip={\n                          <Trans\n                            i18nKey={\"session.launcher.DescAIAccelerator\"}\n                          />\n                        }\n                        max={30}\n                        step={0.1}\n                        inputNumberProps={{\n                          //TODO: change unit based on resource limit\n                          addonAfter: \"GPU\",\n                        }}\n                        required\n                        rules={[\n                          {\n                            required: true,\n                          },\n                        ]}\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </>\n                );\n              }}\n            </Form.Item>\n          </Card>\n        </Form>\n      </Suspense>\n    </Modal>\n  );\n};\n\nexport default ServiceLauncherModal;\n","import { useUpdatableState } from \".\";\nimport { useBaiSignedRequestWithPromise } from \"../helper\";\nimport { useTanQuery } from \"./reactQueryAlias\";\n\nexport interface QuotaScope {\n  id: string;\n  quota_scope_id: string;\n  storage_host_name: string;\n  details: {\n    hard_limit_bytes: number | null;\n    usage_bytes: number | null;\n    usage_count: number | null;\n  };\n}\n\nexport const useResourceSlots = () => {\n  const [key, checkUpdate] = useUpdatableState(\"first\");\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const { data: resourceSlots } = useTanQuery({\n    queryKey: [\"useResourceSlots\", key],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: \"GET\",\n        url: `/config/resource-slots`,\n      }) as Promise<any>;\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n","import { Button, Modal, Table, Tabs, Typography, theme } from \"antd\";\nimport React, {\n  PropsWithChildren,\n  Suspense,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n} from \"react\";\nimport Flex from \"../components/Flex\";\nimport { useTranslation } from \"react-i18next\";\nimport ServiceLauncherModal from \"../components/ServiceLauncherModal\";\nimport {\n  useCurrentProjectValue,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from \"../hooks\";\nimport { baiSignedRequestWithPromise } from \"../helper\";\nimport { useTanMutation } from \"../hooks/reactQueryAlias\";\nimport ModelServiceSettingModal from \"../components/ModelServiceSettingModal\";\nimport { useRafInterval } from \"ahooks\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport {\n  ServingListPageQuery,\n  ServingListPageQuery$data,\n} from \"./__generated__/ServingListPageQuery.graphql\";\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport EndpointStatusTag from \"../components/EndpointStatusTag\";\n\n// FIXME: need to apply filtering type of service later\ntype TabKey = \"services\"; //  \"running\" | \"finished\" | \"others\";\n\ntype Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<ServingListPageQuery$data>[\"endpoint_list\"]\n    >[\"items\"]\n  >[0]\n>;\n\nconst ServingListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenServiceLauncher, setIsOpenServiceLauncher] = useState(false);\n  const [selectedModelService, setSelectedModelService] = useState<Endpoint>();\n  const [isOpenModelServiceSettingModal, setIsOpenModelServiceSettingModal] =\n    useState(false);\n\n  // const [paginationState, setPaginationState] = useState<{\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [\n    isOpenModelServiceTerminatingModal,\n    setIsOpenModelServiceTerminatingModal,\n  ] = useState(false);\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState(\"initial-fetch\");\n  // FIXME: need to apply filtering type of service later\n  const [selectedTab, setSelectedTab] = useState<TabKey>(\"services\");\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    useLazyLoadQuery<ServingListPageQuery>(\n      graphql`\n        query ServingListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: \"name != 'koalpaca-test'\"\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              image\n              model\n              domain\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              ...ModelServiceSettingModal_endpoint\n              ...EndpointStatusTagFragment\n            }\n          }\n        }\n      `,\n      {\n        offset: (paginationState.current - 1) * paginationState.pageSize,\n        limit: paginationState.pageSize,\n        projectID: curProject.id,\n      },\n      {\n        fetchPolicy:\n          servicesFetchKey === \"initial-fetch\"\n            ? \"store-and-network\"\n            : \"network-only\",\n        fetchKey: servicesFetchKey,\n      }\n    );\n\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, \"name\");\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation({\n    mutationFn: () => {\n      return baiSignedRequestWithPromise({\n        method: \"DELETE\",\n        url: \"/services/\" + selectedModelService?.endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n  // const { data, refetch } = useTanQuery({\n  //   queryKey: \"terminateModelService\",\n  //   queryFn: () => {\n  //     return baiSignedRequestWithPromise({\n  //       method: \"DELETE\",\n  //       url: \"/services/\" + selectedModelService?.id,\n  //       client: baiClient,\n  //     });\n  //   },\n  //   onSuccess: (res: any) => {\n  //     console.log(res);\n  //   },\n  //   onError: (err: any) => {\n  //     console.log(err);\n  //   },\n  //   enabled: false,\n  //   // for to render even this query fails\n  //   suspense: true,\n  // });\n\n  return (\n    <>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{ padding: token.padding, gap: token.margin }}\n      >\n        {/* <Card bordered title={t(\"summary.ResourceStatistics\")}>\n          <p>SessionList</p>\n        </Card> */}\n        {/* <Card bodyStyle={{ paddingTop: 0 }}> */}\n        <Flex direction=\"column\" align=\"stretch\">\n          <Flex style={{ flex: 1 }}>\n            <Tabs\n              // type=\"card\"\n              activeKey={selectedTab}\n              onChange={(key) => setSelectedTab(key as TabKey)}\n              tabBarStyle={{ marginBottom: 0 }}\n              style={{\n                width: \"100%\",\n                paddingLeft: token.paddingMD,\n                paddingRight: token.paddingMD,\n                borderTopLeftRadius: token.borderRadius,\n                borderTopRightRadius: token.borderRadius,\n              }}\n              items={[\n                { key: \"services\", label: t(\"modelService.Services\") },\n                // FIXME: need to apply filtering type of service later\n                // {\n                //   key: \"running\",\n                //   label: t(\"session.Running\"),\n                // },\n                // {\n                //   key: \"finished\",\n                //   label: t(\"session.Finished\"),\n                // },\n                // {\n                //   key: \"others\",\n                //   label: t(\"session.Others\"),\n                // },\n              ]}\n              tabBarExtraContent={{\n                right: (\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      setIsOpenServiceLauncher(true);\n                    }}\n                  >\n                    {t(\"modelService.StartService\")}\n                  </Button>\n                ),\n              }}\n            />\n            {/* <Button type=\"text\" icon={<MoreOutlined />} /> */}\n          </Flex>\n          {/* <Button type=\"primary\" icon={<PoweroffOutlined />}>\n          시작\n        </Button> */}\n\n          {/* @ts-ignore */}\n          {/* <backend-ai-session-launcher\n        location=\"session\"\n        id=\"session-launcher\"\n        active\n      /> */}\n          <Suspense fallback={<div>loading..</div>}>\n            {/* <ServingList\n              loading={isRefetchPending}\n              projectId={curProject.id}\n              status={[]}\n              extraFetchKey={\"\"}\n              dataSource={modelServiceList}\n              onClickEdit={(row) => {\n                setIsOpenModelServiceSettingModal(true);\n                setSelectedModelService(row);\n              }}\n              onClickTerminate={(row) => {\n                setIsOpenModelServiceTerminatingModal(true);\n                setSelectedModelService(row);\n              }}\n            /> */}\n            <Table\n              loading={isRefetchPending}\n              scroll={{ x: \"max-content\" }}\n              dataSource={(sortedEndpointList || []) as Endpoint[]}\n              columns={[\n                {\n                  title: t(\"modelService.EndpointName\"),\n                  dataIndex: \"endpoint_id\",\n                  fixed: \"left\",\n                  render: (endpoint_id, row) => (\n                    <Link to={\"/serving/\" + endpoint_id}>{row.name}</Link>\n                  ),\n                },\n                {\n                  title: t(\"modelService.EndpointId\"),\n                  dataIndex: \"endpoint_id\",\n                  width: 310,\n                  render: (endpoint_id) => (\n                    <Typography.Text code>{endpoint_id}</Typography.Text>\n                  ),\n                },\n                {\n                  title: t(\"modelService.Controls\"),\n                  dataIndex: \"controls\",\n                  render: (text, row) => (\n                    <Flex direction=\"row\" align=\"stretch\">\n                      <Button\n                        type=\"text\"\n                        icon={<SettingOutlined />}\n                        style={\n                          row.desired_session_count > 0\n                            ? {\n                                color: \"#29b6f6\",\n                              }\n                            : undefined\n                        }\n                        disabled={row.desired_session_count < 0}\n                        onClick={() => {\n                          setIsOpenModelServiceSettingModal(true);\n                          setSelectedModelService(row);\n                        }}\n                      />\n                      <Button\n                        type=\"text\"\n                        icon={\n                          <DeleteOutlined\n                            style={\n                              row.desired_session_count > 0\n                                ? {\n                                    color: token.colorError,\n                                  }\n                                : undefined\n                            }\n                          />\n                        }\n                        disabled={row.desired_session_count < 0}\n                        onClick={() => {\n                          setIsOpenModelServiceTerminatingModal(true);\n                          setSelectedModelService(row);\n                        }}\n                      />\n                    </Flex>\n                  ),\n                },\n                {\n                  title: t(\"modelService.Status\"),\n                  render: (text, row) => (\n                    <EndpointStatusTag endpointFrgmt={row} />\n                  ),\n                },\n                {\n                  title: t(\"modelService.DesiredSessionCount\"),\n                  dataIndex: \"desired_session_count\",\n                  render: (desired_session_count) => {\n                    return desired_session_count < 0\n                      ? \"-\"\n                      : desired_session_count;\n                  },\n                },\n                {\n                  title: (\n                    <Flex direction=\"column\" align=\"start\">\n                      {t(\"modelService.RoutingsCount\")}\n                      <br />\n                      <Typography.Text\n                        type=\"secondary\"\n                        style={{ fontWeight: \"normal\" }}\n                      >\n                        ({t(\"modelService.Active/Total\")})\n                      </Typography.Text>\n                    </Flex>\n                  ),\n                  // dataIndex: \"active_route_count\",\n                  render: (text, row) => {\n                    return (\n                      _.filter(row.routings, (r) => r?.status === \"HEALTHY\")\n                        .length +\n                      \" / \" +\n                      row.routings?.length\n                    );\n                    // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n                  },\n                },\n                {\n                  title: t(\"modelService.Public\"),\n                  render: (text, row) =>\n                    row.open_to_public ? (\n                      <CheckOutlined style={{ color: token.colorSuccess }} />\n                    ) : (\n                      <CloseOutlined\n                        style={{ color: token.colorTextSecondary }}\n                      />\n                    ),\n                },\n              ]}\n              pagination={false}\n              // pagination={{\n              //   pageSize: paginationState.pageSize,\n              //   current: paginationState.current,\n              //   total: modelServiceList?.total_count || 0,\n              //   showSizeChanger: true,\n              //   // showTotal(total, range) {\n              //   //   return `${range[0]}-${range[1]} of ${total}`;\n              //   // },\n              //   onChange(page, pageSize) {\n              //     startRefetchTransition(() => {\n              //       setPaginationState({\n              //         current: page,\n              //         pageSize: pageSize || 100,\n              //       });\n              //     });\n              //   },\n              // }}\n            />\n          </Suspense>\n        </Flex>\n      </Flex>\n      <Modal\n        open={isOpenModelServiceTerminatingModal}\n        title={t(\"dialog.title.LetsDouble-Check\")}\n        okButtonProps={{\n          loading: terminateModelServiceMutation.isLoading,\n        }}\n        onOk={() => {\n          // FIXME: any better idea for handling result?\n          terminateModelServiceMutation.mutate(undefined, {\n            onSuccess: (res) => {\n              startRefetchTransition(() => {\n                updateServicesFetchKey();\n              });\n              setIsOpenModelServiceTerminatingModal(false);\n            },\n            onError: (err) => {\n              console.log(\"terminateModelServiceMutation Error\", err);\n            },\n          });\n        }}\n        onCancel={() => {\n          setIsOpenModelServiceTerminatingModal(false);\n        }}\n      >\n        <Flex direction=\"column\" align=\"stretch\" justify=\"center\">\n          <p>\n            {t(\"modelService.YouAreAboutToTerminate\") +\n              (selectedModelService?.name || \"\") +\n              \".\"}\n          </p>\n          <p>{t(\"dialog.ask.DoYouWantToProceed\")}</p>\n        </Flex>\n      </Modal>\n      <ModelServiceSettingModal\n        open={isOpenModelServiceSettingModal}\n        onRequestClose={(success) => {\n          setIsOpenModelServiceSettingModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n        endpointFrgmt={selectedModelService || null}\n      />\n      <ServiceLauncherModal\n        open={isOpenServiceLauncher}\n        onRequestClose={(success) => {\n          setIsOpenServiceLauncher(!isOpenServiceLauncher);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default ServingListPage;\n","/**\n * @generated SignedSource<<0a8cd3382b92de9b812e6b9876c3f1f9>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingListPageQuery$variables = {\n  limit: number;\n  offset: number;\n  projectID?: any | null;\n};\nexport type ServingListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly desired_session_count: number;\n      readonly domain: string | null;\n      readonly endpoint_id: any | null;\n      readonly image: string | null;\n      readonly model: any | null;\n      readonly name: string | null;\n      readonly open_to_public: boolean | null;\n      readonly project: string | null;\n      readonly resource_group: string | null;\n      readonly resource_slots: any | null;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null;\n        readonly routing_id: any | null;\n        readonly session: any | null;\n        readonly status: string | null;\n        readonly traffic_ratio: number | null;\n      } | null> | null;\n      readonly url: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\" | \"ModelServiceSettingModal_endpoint\">;\n    } | null>;\n    readonly total_count: number;\n  } | null;\n};\nexport type ServingListPageQuery = {\n  response: ServingListPageQuery$data;\n  variables: ServingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"filter\",\n    \"value\": \"name != 'koalpaca-test'\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v15/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v16/*: any*/),\n                  (v17/*: any*/),\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ModelServiceSettingModal_endpoint\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointStatusTagFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v16/*: any*/),\n                  (v17/*: any*/),\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v21/*: any*/),\n              (v20/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"53cec1819c3f5f5936159f3d452557f1\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ServingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ServingListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: \\\"name != 'koalpaca-test'\\\") {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      image\\n      model\\n      domain\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      ...ModelServiceSettingModal_endpoint\\n      ...EndpointStatusTagFragment\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\\nfragment ModelServiceSettingModal_endpoint on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"15ae6559c4d26c1eff859e5f35324d69\";\n\nexport default node;\n"],"names":["_ref","objectValues","_ref$values","values","length","React","map","value","label","color","_jsx","Flex","direction","children","_","objValue","idx","Tag","style","undefined","margin","marginRight","zIndex","_endpoint$status","endpointFrgmt","endpoint","useFragment","_EndpointStatusTagFragment","require","status","toUpperCase","_ref$direction","_ref$wrap","wrap","_ref$justify","justify","_ref$align","align","_ref$gap","gap","restProps","_objectWithoutProperties","_excluded","token","theme","transferConst","transferConstStyle","el","tempTxt","flexStyle","_objectSpread","display","flexDirection","flexWrap","justifyContent","alignItems","backgroundColor","border","boxSizing","flexBasis","flexShrink","listStyle","minHeight","minWidth","padding","position","textDecoration","_jsxs","width","height","Spin","indicator","LoadingOutlined","spin","ImageMetaIcon","bordered","image","_ref$style","alt","arguments","_useBackendaiImageMet","useBackendaiImageMetaData","getImageIcon","_slicedToArray","src","onRequestClose","props","baiClient","useSuspendedBackendaiClient","t","useTranslation","_Form$useForm","Form","form","_ModelServiceSettingModal_endpoint","mutationToUpdateService","useTanMutation","mutationFn","body","to","desired_session_count","baiSignedRequestWithPromise","method","url","concat","endpoint_id","client","Modal","destroyOnClose","onOk","e","validateFields","then","mutate","onSuccess","console","log","onError","error","catch","err","onCancel","okButtonProps","loading","isLoading","title","preserve","validateTrigger","initialValues","marginBottom","marginLG","marginTop","name","rules","pattern","message","InputNumber","type","min","node","v0","v1","v2","hash","newLineToBrElement","text","separatorRegExp","split","line","index","match","_ref$body","request","newSignedRequest","_wrapWithPromise","useBaiSignedRequestWithPromise","_ref2","_ref2$body","_humanReadableDecimalSize","bytes","decimalPoint","k","Math","pow","i","floor","round","parseFloat","toFixed","GBToBytes","gigabyte","bytesToGB","addQuotaScopeTypePrefix","str","startsWith","usageIndicatorColor","percentage","useUpdatableState","initialValue","_useState3","useState","Date","toISOString","_useState4","setValue","newValue","useDateISOState","useCurrentDomainValue","_config","domainName","useCurrentProjectValue","_useState5","current_group","id","groupIds","_useState6","project","_setProject","useEffect","listener","newProjectName","detail","document","addEventListener","removeEventListener","useAnonymousBackendaiClient","api_endpoint","useMemo","clientConfig","globalThis","BackendAIClientConfig","BackendAIClient","useQuery","queryKey","queryFn","Promise","resolve","backendaiclient","ready","retry","suspense","data","metadata","fetch","response","json","getImageMeta","imageName","key","tags","specs","_split","_split2","getImageAliasName","imageInfo","_metadata$imageInfo$k","_metadata$imageInfo$k2","path","icon","getImageTags","getBaseVersion","getBaseImage","useTanQuery","useMutation","max","step","required","inputNumberProps","sliderProps","formItemProps","flex","noStyle","Slider","keyword","keyIndex","toLowerCase","indexOf","substring","colorWarningHover","getImageFullName","registry","tag","architecture","filter","currentEnvironmentsFormData","_useState","_useState2","environmentSearch","setEnvironmentSearch","versionSearch","setVersionSearch","_useBackendaiImageMet2","versionSelectRef","useRef","images","useLazyLoadQuery","_ImageEnvironmentSelectFormItemsQuery","installed","fetchPolicy","_imageGroups$","_imageGroups$$environ","_nextEnvironmentGroup","nextEnvironmentGroup","nextEnvironmentName","environment","imageGroups","environmentGroups","environmentName","group","version","_nextEnvironmentGroup2","nextNewImage","setFieldsValue","environments","groupBy","_metadata$imageInfo$g","groupName","_metadata$imageInfo$e","_environmentName$spli","_environmentName$spli2","displayName","prefix","sort","a","b","_b$tag$split$","_b$tag","_b$tag$split","_a$tag$split$","_a$tag","_a$tag$split","version1","version2","Number","num1","num2","compareVersions","sortBy","item","_Fragment","Select","showSearch","labelInValue","searchValue","onSearch","defaultActiveFirstOption","optionLabelProp","optionFilterProp","onSelect","environmentGroup","_environmentGroup$env","firstImage","currentMetaImageInfo","extraFilterValues","environmentPrefixTag","includes","push","tagsFromMetaImageInfoLabel","category","TextHighlighter","filterValue","join","shouldUpdate","prev","cur","_prev$environments","_cur$environments","_selectedEnvironmentG","selectedEnvironmentGroup","getFieldValue","_getFieldValue","ref","onChange","dropdownRender","menu","fontWeight","fontWeightStrong","paddingLeft","paddingSM","Divider","_image$tag","_ref3","_ref4","_toArray","requirements","slice","tagAlias","_i","_Object$entries","Object","entries","tagReplace","_Object$entries$_i","replaceString","RegExp","test","replace","requirementTags","requirement","_metadata$tagAlias$re","DoubleTag","digest","hidden","Input","projectId","autoSelectDefault","selectProps","baiRequestWithPromise","currentProject","_useUpdatableState","_useUpdatableState2","checkUpdate","staleTime","resourceGroups","scaling_groups","autoSelectedOption","_selectProps$onChange","call","defaultValue","onDropdownVisibleChange","open","startTransition","resourceGroup","_$first","_$first2","filteredVFolders","vfolder","extraP","modalProps","currentDomain","_useResourceSlots","refresh","useResourceSlots","resourceSlots","mutationToCreateService","_values$environments$","_values$environments$2","_values$environments$3","_values$environments$4","serviceName","desiredRoutingCount","arch","domain","cluster_size","cluster_mode","open_to_public","openToPublic","config","model","vFolderName","model_mount_destination","environ","scaling_group","resources","cpu","mem","cuda","gpu","shmem","resource_opts","reject","maskClosable","confirmLoading","Suspense","fallback","FlexActivityIndicator","disabled","layout","labelCol","span","ResourceGroupSelect","valuePropName","Switch","VFolderSelect","vf","usage_mode","SliderInputItem","addonAfter","Card","ImageEnvironmentSelectFormItems","_prev$environments$im","_cur$environments$ima","_$find","_$find2","currentImage","tooltip","Trans","i18nKey","parseInt","resource_limits","curProject","isOpenServiceLauncher","setIsOpenServiceLauncher","selectedModelService","setSelectedModelService","isOpenModelServiceSettingModal","setIsOpenModelServiceSettingModal","_useState7","current","pageSize","paginationState","_useTransition","useTransition","_useTransition2","isRefetchPending","startRefetchTransition","_useState9","_useState10","isOpenModelServiceTerminatingModal","setIsOpenModelServiceTerminatingModal","servicesFetchKey","updateServicesFetchKey","_useState11","_useState12","selectedTab","setSelectedTab","useRafInterval","startTransitionWithoutPendingState","modelServiceList","_ServingListPageQuery","offset","limit","projectID","fetchKey","endpoint_list","sortedEndpointList","items","terminateModelServiceMutation","Tabs","activeKey","tabBarStyle","paddingMD","paddingRight","borderTopLeftRadius","borderRadius","borderTopRightRadius","tabBarExtraContent","right","Button","onClick","Table","scroll","x","dataSource","columns","dataIndex","fixed","render","row","Link","Typography","code","SettingOutlined","DeleteOutlined","colorError","EndpointStatusTag","_row$routings","routings","r","CheckOutlined","colorSuccess","CloseOutlined","colorTextSecondary","pagination","res","ModelServiceSettingModal","success","ServiceLauncherModal","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21"],"sourceRoot":""}