{"version":3,"file":"static/js/332.5efdadc2.chunk.js","mappings":"8JAsBA,MAAMA,EAAuB,CAC3B,oBAAuB,GACvB,KAAQ,WACR,SAAY,KACZ,KAAQ,+BACR,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,OAGlB,KAAQ,WACR,YAAe,KAGhBA,KAAoB,oCAErB,G,wEC9CO,MAAMC,EAIRC,IAA8B,IAA7B,KAAEC,EAAI,OAAEC,EAAM,MAAEC,GAAOH,EAC3B,MAAMI,EAAOC,EAAAA,GAAkBC,MAAU,OAAJL,QAAI,IAAJA,EAAAA,EAAQ,QAE7C,OACEM,EAAAA,EAAAA,KAAA,OACEC,MAAM,6BACNC,QAAQ,YACRP,OAAQA,EACRC,MAAOA,EACPO,KAAK,MACLC,wBAAyB,CAAEC,OAAQR,EAAKS,OACxC,C,gDCuBN,MAAMf,EAAyB,WAC/B,IAAIgB,EAAK,CACP,aAAgB,KAChB,KAAQ,gBACR,KAAQ,eAEVC,EAAK,CACH,aAAgB,KAChB,KAAQ,gBACR,KAAQ,UAEVC,EAAK,CACH,aAAgB,KAChB,KAAQ,gBACR,KAAQ,SAEVC,EAAK,CACH,aAAgB,KAChB,KAAQ,gBACR,KAAQ,UAEVC,EAAK,CACH,aAAgB,KAChB,KAAQ,gBACR,KAAQ,aAEVC,EAAK,CACH,aAAgB,KAChB,KAAQ,gBACR,KAAQ,gBAEVC,EAAK,CACH,CACE,KAAQ,WACR,KAAQ,SACR,aAAgB,UAElB,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,SAElB,CACE,KAAQ,WACR,KAAQ,SACR,aAAgB,UAElB,CACE,KAAQ,WACR,KAAQ,UACR,aAAgB,cAGpBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,OACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,MAEhBC,EAAM,CACJ,KAAQ,KACR,KAAQ,iBACR,KAAQ,gCAEVC,EAAM,CACJ,CACE,KAAQ,WACR,KAAQ,cACR,aAAgB,gBAGpBC,EAAM,CACHL,EACAC,EACAC,EACD,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,OAGlB,MAAO,CACL,SAAY,CACV,oBAAuB,CACpBV,EACAC,EACAC,EACAC,EACAC,EACAC,GAEH,KAAQ,WACR,SAAY,KACZ,KAAQ,sBACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,eAChB,KAAQ,cACR,KAAQ,gBACR,QAAU,EACV,WAAc,CACXC,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,WAChB,KAAQ,cACR,KAAQ,QACR,QAAU,EACV,WAAc,CACXC,EACAC,EACAC,EACAC,GAEH,WAAc,OAGlB,WAAc,MAEhB,CACE,MAAS,KACT,KAASC,EACT,aAAgB,WAChB,KAAQ,cACR,KAAQ,WACR,QAAU,EACV,WAAc,CACXJ,EACAC,EACAE,GAEH,WAAc,OAGlB,KAAQ,UACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAuB,CACpBR,EACAD,EACAE,EACAH,EACAD,EACAK,GAEH,KAAQ,YACR,KAAQ,sBACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,eAChB,KAAQ,cACR,KAAQ,gBACR,QAAU,EACV,WAAc,CACXC,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,WAChB,KAAQ,cACR,KAAQ,QACR,QAAU,EACV,WAAeM,EACf,WAAc,OAGlB,WAAc,MAEhB,CACE,MAAS,KACT,KAASD,EACT,aAAgB,WAChB,KAAQ,cACR,KAAQ,WACR,QAAU,EACV,WAAeC,EACf,WAAc,QAIpB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,CAAC,EACb,KAAQ,sBACR,cAAiB,QACjB,KAAQ,umBAGZ,CA5N+B,GA8N9B7B,EAAa8B,KAAO,mCAErB,S,uECjOA,MAEaC,EAAaA,KAAO,IAADC,EAC9B,MAAOC,EAAKC,IAAeC,EAAAA,EAAAA,IAAkB,UAErCC,KAAMC,EAAU,UAAEC,IAAcC,EAAAA,EAAAA,IAAsB,CAC5DC,SAAU,CAAC,YAAaP,GACxBQ,QAASA,IACAC,MAAM,4BAA4BC,MAAMC,GAC7CA,EAASC,SAGbC,UAZqB,QAevB,MAAO,CACLC,OAA0B,QAApBf,EAAY,OAAVK,QAAU,IAAVA,OAAU,EAAVA,EAAYU,cAAM,IAAAf,EAAAA,EAAI,GAC9BM,YACAU,SAASC,EAAAA,EAAAA,cAAY,IAAMf,KAAe,CAACA,IAC5C,C,sJChDH,SAASgB,EAAiBH,EAAmBI,GAC3C,OAAOJ,EACJK,KAAKC,IAAK,CACTC,MAAOD,EAAME,KAAKC,MAClBC,MAAOJ,EAAMK,OAEdP,QAAQE,GACAA,EAAMC,MAAMK,oBAAoBC,SAAST,GAAU,KAEhE,CAEA,MAgCA,EAhCkDjD,IAM3C,IAN4C,OACjD6C,EAAM,UACNc,EAAS,cACTC,EAAa,QACbC,KACGC,GACJ9D,EACC,MAAO+D,EAAmBC,IACxBC,EAAAA,EAAAA,GAA6BH,IACxBI,EAAaC,IAAkBC,EAAAA,EAAAA,aAC/BC,EAAiBC,IAAyBC,EAAAA,EAAAA,iBAEjD,OACEhE,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CACLC,YAAU,EACVC,SAAWC,IACTL,GAAsB,KACpBH,EAAeQ,EAAE,GACjB,EAEJC,cAAc,EACdf,QAASQ,GAAmBR,EAC5BgB,QAAS7B,EAAiBH,EAAQqB,GAClCX,MAAOQ,EACPe,SAAUA,CAACH,EAAGxB,KACZa,EAAqBW,EAAGxB,EAAM,EAEhC4B,uBAAuB,GACvB,E,qCC3BN,MAiHA,EAjHsD/E,IAK/C,IALgD,SACrDgF,EAAQ,qBACRC,EAAuB,CAAC,WAAU,QAClCpB,KACGC,GACJ9D,EACC,MAAMkF,GAAYC,EAAAA,EAAAA,OACXpB,EAAmBC,IACxBC,EAAAA,EAAAA,GAA6BH,IACxBsB,EAAWC,IAAgBjB,EAAAA,EAAAA,aAC3BC,EAAiBC,IAAyBC,EAAAA,EAAAA,iBAE3Ce,EAA0BL,EAC7B/B,KAAKyB,GAAM,uBAAuBA,OAClCY,KAAK,QAEF,cAAEC,EAAa,SAAEC,IAAaC,EAAAA,EAAAA,uBAAgB,IAAAC,EAAAA,EAAAA,EAAAC,EAAA,OA+BlD,CACEC,MAAO,GACPC,OAAQ,EACR7C,OAAQiC,EAAUa,SAAS,mCACvB,CAACT,EAAyBF,GACvBnC,OAAO+C,SACP9C,KAAKyB,GAAM,IAAIA,OACfY,KAAK,YACRU,EACJC,YAAanC,EACboC,cAAepC,GAEjB,CACEiB,SAAUA,IAaRoB,EAAgBX,EAClBY,IAAAA,IACEA,IAAAA,OAASA,IAAAA,OAAsB,OAAbb,QAAa,IAAbA,OAAa,EAAbA,EAAec,MAAOb,GAAW,gBAClDc,IACQ,CACLnD,MAAW,OAAJmD,QAAI,IAAJA,OAAI,EAAJA,EAAMtG,KACbsD,MAAW,OAAJgD,QAAI,IAAJA,OAAI,EAAJA,EAAML,YACbT,SAAUc,MAIhBF,IAAAA,IAAmB,OAAbb,QAAa,IAAbA,OAAa,EAAbA,EAAec,OAAQC,IACpB,CACLnD,MAAW,OAAJmD,QAAI,IAAJA,OAAI,EAAJA,EAAMtG,KACbsD,MAAW,OAAJgD,QAAI,IAAJA,OAAI,EAAJA,EAAML,YACbT,SAAUc,MAIlB,OACEhG,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CACLC,YAAU,EACVC,SAAWC,IACTL,GAAsB,KACpBe,EAAaV,GAAK,gBAAgBA,MAAM,GACxC,EAEJC,cAAc,EACdf,QAASQ,GAAmBR,EAC5BgB,QAASuB,KACLtC,EAEJP,MAAOQ,EACPe,SAAUA,CAACH,EAAG6B,KAAY,IAADC,EACvBzC,EAAqBW,EAAsB,QAArB8B,EAAEJ,IAAAA,UAAYG,UAAO,IAAAC,OAAA,EAAnBA,EAAsB,GAAGhB,SAAS,GAE5D,E,qCClIC,MAMMiB,EAAgB,WAAyB,IAAxBC,EAAaC,UAAAC,OAAA,QAAAZ,IAAAW,UAAA,GAAAA,UAAA,GAAG,GAC5C,MAAOrD,EAAOuD,IAAU1C,EAAAA,EAAAA,UAAS,GAYjC,OAVA2C,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,kBAAgB,KAVOC,WACzB,MAAM,OAAEC,SAAiB,gCAEzB,OAAOA,EAAOC,GAAKN,MAAM,EAQrBO,CAAYT,GACTlE,KAAKqE,GACLO,OAAM,KACLP,EAAOH,EAAME,OAAO,GACpB,GACJ,GACD,CAACF,IAEGpD,CACT,E,eCZA,MA+BA,EA/B8CvD,IAOvC,IAPwC,MAC7CsH,EAAK,QACLzD,EAAO,UACP0D,EAAS,OACTC,EAAM,OACNC,KACGC,GACJ1H,EACC,MAAM2H,GAAYC,EAAAA,EAAAA,QAA8B,MAQhD,OANAb,EAAAA,EAAAA,YAAU,KACJQ,GAAaI,EAAUE,SACzBF,EAAUE,QAAQC,OACpB,GACC,CAACP,KAGFhH,EAAAA,EAAAA,KAACwH,EAAAA,EAAM,CACLC,IAAKL,KACDD,EACJ7D,QAASA,EACToE,SAAUA,KACF,OAANR,QAAM,IAANA,GAAAA,GAAU,EAEZS,SAAUA,KACF,OAANV,QAAM,IAANA,GAAAA,GAAU,EAEZW,WAAW,SACX,E,eC3BN,MA4CA,EA5CgDnI,IAIzC,IAJ0C,OAC/CoI,EAAM,iBACNC,KACGC,GACJtI,EACC,MAAM,EAAEuI,IAAMC,EAAAA,EAAAA,MAEd,OACEjI,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CACLiE,YAAaF,EAAE,sBACfjB,MAAO,CACLoB,WAAY,UAEdjE,YAAU,EACVI,QAASwB,IAAAA,OACPgC,EACI,CACE,CACEjF,MAAO,SAEPG,MAAO,WAGX,GACJ8C,IAAAA,MAAQ+B,GACLO,QAAQ,SACRC,WAAWC,GACVxC,IAAAA,IAAMwC,GAAKC,IAAC,CACV1F,MAAO0F,EAAE1F,MACTG,MAAOuF,EAAE7I,WAGZiD,KAAI,CAACyB,EAAGoE,KAAC,CACR3F,MAAa,cAAN2F,EAAoB,SAAWA,EACtClE,QAASF,MAEVpB,SAELwB,uBAAuB,KACnBuD,GACJ,E,yDCvCN,MAqCA,EArC8CtI,IAIvC,IAJwC,SAC7CgJ,EAAQ,YACRC,KACGC,GACJlJ,EACC,MAAOmJ,EAAUC,IAAehF,EAAAA,EAAAA,WAAS,GAezC,OATA2C,EAAAA,EAAAA,YAAU,KACR,GAAIoC,EAAU,CACZ,MAAME,EAAUC,YAAW,KACzBF,GAAY,EAAM,GACjB,KACH,MAAO,IAAMG,aAAaF,EAC5B,IACC,CAACF,KAGF5I,EAAAA,EAAAA,KAACiJ,EAAAA,EAAO,CACNlG,MAAO6F,EAAW,UAAY,OAC9BM,OAAMN,QAAkBlD,EAAUyD,UAElCnJ,EAAAA,EAAAA,KAACoJ,EAAAA,gBAAe,CAACC,MAAc,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUY,OAAQ,GAAIC,OAlB9B5C,UACjBmC,GAAY,EAAK,EAiBiDM,UAC9DnJ,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACL1J,KACE+I,GAAW5I,EAAAA,EAAAA,KAACwJ,EAAAA,EAAS,IAAMd,IAA4B1I,EAAAA,EAAAA,KAACyJ,EAAAA,EAAQ,OAE9Dd,OAGA,E,uGC9Bd,MAAM,KAAEe,GAASC,EAAAA,EAEXC,EAEDnK,IAAmB,IAAlB,SAAE0J,GAAU1J,EAChB,OACEO,EAAAA,EAAAA,KAAC6J,EAAAA,EAAQ,CACPC,cAAe,CAACC,EAAAA,EAAWC,EAAAA,GAC3BC,cAAe,CAACC,EAAAA,GAChBC,WAAY,CACVC,CAAAA,CAACC,GAAsB,IAArB,KAAE9K,KAASoJ,GAAO0B,EAElB,OAAOrK,EAAAA,EAAAA,KAAA,QAAO2I,EAAO5B,MAAO,CAAEuD,WAAY,aAC5C,EACAC,IAAAA,CAAK5B,GACH,MAAM,SAAEQ,EAAQ,UAAEqB,EAAS,KAAEjL,EAAI,IAAEkI,KAAQgD,GAAS9B,EAC9C+B,EAAQ,iBAAiBC,KAAKH,GAAa,IAC3CI,EAAUC,OAAO1B,GAAU2B,QAAQ,MAAO,IAChD,OAAOJ,GACL1K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAI,CACHhI,OACE/C,EAAAA,EAAAA,KAAC0J,EAAI,CAAC3C,MAAO,CAAEoB,WAAY,UAAY6C,KAAK,YAAW7B,SACpDuB,EAAM,KAGXM,KAAK,QACLC,KAAK,QACLC,OACElL,EAAAA,EAAAA,KAACmL,EAAU,CACTH,KAAK,OACLvC,SAAU,CACRY,KAAM,OAIZ+B,OAAQ,CACN9K,KAAM,CAAE+K,QAAS,GACjBC,OAAQ,CAAEC,OAAQ,IAClBpC,UAEFnJ,EAAAA,EAAAA,KAAA,OAAK+G,MAAO,CAAEwE,OAAQ,WAAY3L,MAAO,QAASuJ,UAChDnJ,EAAAA,EAAAA,KAACwL,EAAS,CACR/D,IAAKA,KACDgD,EACJgB,OAAO,MACPC,SAAUhB,EAAM,GAChB3D,MAAO4E,EAAAA,EACPC,eAAa,EACbC,WAAS,EAAA1C,SAERyB,SAKP5K,EAAAA,EAAAA,KAAA,WAAUyK,EAAMD,UAAWA,EAAUrB,SAElCA,GAGP,GACAA,SAEDA,GACQ,EAIT2C,EAAsCC,IAA6B,IAA5B,SAAE5C,KAAaR,GAAOoD,EACjE,OAAO/L,EAAAA,EAAAA,KAACgM,EAAAA,EAAiB,IAAKrD,EAAKQ,SAAGA,GAA6B,EAE/DqC,EAAYS,EAAAA,KAAWH,GAE7B,EAAeG,EAAAA,KAAWrC,G,kJCzE1BsC,KAAAA,OAAaC,MACbD,KAAAA,OAAaE,MAEb,MAyKA,GAjKK3M,IAOE,IAPD,MACJyL,EAAK,QACLmB,EAAO,UACPC,EAAY,OAAM,eAClBC,EAAc,iBACdC,EAAgB,YAChBC,GACDhN,EACC,MAAM,MAAEiN,GAAUC,EAAAA,EAAMC,YAClB,EAAE5E,IAAMC,EAAAA,EAAAA,OACP4E,EAAWC,IAAgBjJ,EAAAA,EAAAA,WAAS,GAErCkJ,GAA4BC,EAAAA,EAAAA,GAAYX,EAAQY,UAAW,CAC/DC,KAAM,KAEFC,GAA0BH,EAAAA,EAAAA,GAAYX,EAAQzB,QAAS,CAAEsC,KAAM,KAErE,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAyB,SAAdhB,EAAuB,MAAQ,cAC1CiB,QAAS,QACTC,MAAM,WACNzG,MAAO,CACL0G,WAA0B,SAAdnB,EAAuB,IAAM,MACzCoB,YAA2B,UAAdpB,EAAwB,IAAM,MACxCC,GAELoB,IAAK,KACLC,aAAcA,IAAMd,GAAa,GACjCe,aAAcA,IAAMf,GAAa,GAAO3D,SAAA,CAEtB,SAAjBkD,EAAQlM,MACPH,EAAAA,EAAAA,KAAC8N,EAAAA,EACC,CACAjO,KAAM,eACNkH,MAAO,CAAEgH,SAAUrB,EAAMsB,oBAEzB,MAEJZ,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAU,SACVE,MAAqB,SAAdlB,EAAuB,QAAU,MACxC2B,KAAK,OACLlH,MAAO,CAAEmH,KAAM,GACfP,IAAK,KAAKxE,SAAA,CAETrD,IAAAA,IAAMuG,EAAQ8B,0BAA0B,CAACC,EAAYC,IACpDvI,IAAAA,SAAqB,OAAVsI,QAAU,IAAVA,OAAU,EAAVA,EAAYE,YAAa,WAClCtO,EAAAA,EAAAA,KAACqN,EAAAA,EAAI,CACHtG,MAAO,CACLwH,OAAQ,OACRC,UAAW,OAEbhB,MAAM,MAAKrE,UAEXnJ,EAAAA,EAAAA,KAACyO,EAAAA,EAAK,CAEJC,IAAe,OAAVN,QAAU,IAAVA,OAAU,EAAVA,EAAYO,IACjBC,IAAe,OAAVR,QAAU,IAAVA,OAAU,EAAVA,EAAY1O,KACjBqH,MAAO,CACL8H,SAAU,OACVC,UAAW,OACXC,aAAcrC,EAAMqC,eANjB,GAAU,OAAP1C,QAAO,IAAPA,OAAO,EAAPA,EAASpJ,MAAMoL,QAW3BrO,EAAAA,EAAAA,KAACgP,EAAAA,EAAYC,SAAQ,CAEnBjJ,KAAM,CACJkJ,IAAK,GAAU,OAAP7C,QAAO,IAAPA,OAAO,EAAPA,EAASpJ,MAAMoL,IACvB3O,MAAgB,OAAV0O,QAAU,IAAVA,OAAU,EAAVA,EAAY1O,QAAkB,OAAV0O,QAAU,IAAVA,OAAU,EAAVA,EAAYO,KACtC3D,KAAgB,OAAVoD,QAAU,IAAVA,OAAU,EAAVA,EAAYE,YAClBa,YAAuB,OAAVf,QAAU,IAAVA,OAAU,EAAVA,EAAY1O,KACzBiP,IAAe,OAAVP,QAAU,IAAVA,OAAU,EAAVA,EAAYO,MANdN,MAWXjB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHG,MAAM,UACNF,UAAU,SACVvG,MAAO,CACLgI,aAAcrC,EAAMqC,aACpBK,YAAa1C,EAAM2C,qBACnBC,YAAa5C,EAAM6C,UACnBlE,QAAS,MACTmE,WAAY,EACZC,cAAe,EACfC,gBACmB,SAAjBrD,EAAQlM,KACJuM,EAAMiD,iBACNjD,EAAMkD,yBACZf,SAAU,OACVjP,MAAOkG,IAAAA,KAAOuG,EAAQY,WAAa,OAAS,QAC5C9D,SAAA,CAEDrD,IAAAA,KAAOuG,EAAQY,aACdjN,EAAAA,EAAAA,KAAC6P,EAAAA,EAAQ,CACP9I,MAAO,CACL+I,UAAWpD,EAAMnB,OACjB3L,MAAO,QAETmG,MAAO,CACL,CACEvE,IAAK,YACLqB,MAAOiD,IAAAA,QAAUqH,IACfC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACM,IAAI,KAAIxE,SAAA,EACZnJ,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWD,KAAI,CAAAP,SAAEnB,EAAE,sBACpBhI,EAAAA,EAAAA,KAAC+P,EAAAA,EAAI,CAAC9E,KAAK,cAGbjL,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWD,KAAI,CAAAP,SACbnB,EAAE,0BAGPmB,UACEnJ,EAAAA,EAAAA,KAAC4J,EAAkB,CAAAT,SAChB4D,SAOb/M,EAAAA,EAAAA,KAAC4J,EAAkB,CAAAT,SAChBgE,GAA2BV,EAAc,WAAQ,UAGtDzM,EAAAA,EAAAA,KAACqN,EAAAA,EAAI,CACHtG,MAAO,CACLgH,SAAUrB,EAAMsD,cACZxD,EACA,CACEyD,QAASpD,EAAY,EAAI,EACzBqD,WAAY,eACZC,gBAAiBtD,EAAY,KAAO,QAEtC,CAAC,GACL1D,SAED+B,SAgBA,E,2BC5KX,MAyBA,GAzB4EzL,IAKrE,IALsE,WAC3E2Q,EAAU,SACVC,EAAQ,mBACRC,KACG3H,GACJlJ,EACC,MAAM8Q,GAAmBC,EAAAA,GAAAA,GAAkB7H,EAAM4H,kBAQjD,OANA/J,EAAAA,EAAAA,YAAU,KACJ6J,GAAYD,IACE,OAAhBG,QAAgB,IAAhBA,GAAAA,EAAmB,QACrB,GACC,CAACF,EAAUD,EAAYE,EAAoBC,KAG5CvQ,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACL1J,MAAMG,EAAAA,EAAAA,KAACyQ,GAAAA,EAAa,IACpBC,MAAM,SACNC,QAASA,KACPJ,GAAoBA,EAAiB,QAAQ,GAEvC,E,2BCdd,MA2GA,GA3G+D9Q,IAGxD,IAHyD,SAC9DmR,EAAQ,YACRnE,GACDhN,EACC,MAAMoR,GAAcxJ,EAAAA,EAAAA,QAAuB,OACpCgJ,EAAUS,IAAejN,EAAAA,EAAAA,WAAS,IACnC,MAAE6I,GAAUC,EAAAA,EAAMC,WAElBmE,EAA6B,qBAAXC,OAA8C,IAArBA,OAAOC,YAAoB,EAE5E,OACE7D,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAU,SACVE,MAAM,UACNzG,MAAO,CAAEpH,OAAQ,OAAQuO,KAAM,GAAI/E,SAAA,EAEnCnJ,EAAAA,EAAAA,KAACkR,GAAAA,GAAQ,CACPC,oBAAqBL,EACrBM,kBAAmB,GACnBC,eAAgBA,CAACvL,EAAGE,IAASA,EAAK/C,GAClCtB,KAAMiP,EACNU,aAAc,OACdC,yBAAiC,OAARX,QAAQ,IAARA,OAAQ,EAARA,EAAUtK,QAAS,EAC5CkL,YAAaA,CAACnD,EAAO9F,KAEjBvI,EAAAA,EAAAA,KAACyR,GAAW,CAEVpF,QAAS9D,EACT+D,UAAsB,SAAX/D,EAAEpI,KAAkB,QAAU,OACzCoM,eAAgB,CACdmF,YAAahF,EAAMiF,UACnBC,aAAclF,EAAMiF,UACpBnC,WAAsB,IAAVnB,EAAc3B,EAAMiF,UAAY,EAC5ClC,cACEpB,IAAUuC,EAAStK,OAAS,EAAIoG,EAAMiF,UAAY,GAEtDlF,YACa,SAAXlE,EAAEpI,MACFsM,GACA4B,IAAUuC,EAAStK,OAAS,EAE9BkG,iBAA6B,SAAXjE,EAAEpI,KACpB+K,MACa,SAAX3C,EAAEpI,MACAH,EAAAA,EAAAA,KAAC6R,GAAAA,GAAO,CAAA1I,UACNnJ,EAAAA,EAAAA,KAACmL,EAAU,CACTH,KAAK,OACLC,KAAK,QACLxC,SAAU,CACRY,KAAMd,EAAEqC,cAOd5K,EAAAA,EAAAA,KAAC6R,GAAAA,GAAO,CAAA1I,SAAE,QA9BTZ,EAAEtF,IAoCb8N,SAAUA,EACVtJ,IAAKoJ,KAEP7Q,EAAAA,EAAAA,KAAA,OACE+G,MAAO,CACL+K,SAAU,WACVC,MAAO,MACPC,UAAW,mBACXC,OAAQvF,EAAMwF,SACdjC,QAASI,EAAW,EAAI,EACxBH,WAAY,eACZC,gBAAiBE,EAAW,KAAO,QACnClH,UAEFnJ,EAAAA,EAAAA,KAACmS,GAAyB,CACxB9B,SAAUA,EACVD,WAAY3D,EACZ8D,iBAAmBvF,IACjB,MAAMoH,EAAWvB,EAAYvJ,QAC7B,OAAQ0D,GACN,IAAK,OACK,OAARoH,QAAQ,IAARA,GAAAA,EAAUC,cAAc,CACtB7E,MAAO,MACP8E,SAAU,OACVjE,MAAO,SAET,MAEF,IAAK,QACK,OAAR+D,QAAQ,IAARA,GAAAA,EAAUC,cAAc,CACtB7E,MAAO,MACP8E,SAAU,SACVjE,MAAO,SAIb,EAEFiC,mBAAoBxK,IAAAA,IAAMA,IAAAA,KAAO8K,GAAW,iBAG3C,E,sLCtCX,MAybA,GAzbgDnR,IAsBzC,IAAD8S,EAAA,IAtB2C,OAC/C1K,EAAS,GAAE,WACX2K,EAAU,aACVC,EAAY,OACZC,EAAM,QACNC,EAAO,QACPC,EAAO,YACPC,EAAW,OACXC,EAAM,cACNC,EAAa,iBACbjL,EAAgB,MAChBkL,EAAK,UACLC,EAAS,aACTC,EAAY,gBACZC,EAAe,UACfC,EAAS,cACTC,EAAa,mBACbC,EAAkB,eAClBC,EAAc,oBACdC,EAAmB,WACnBC,KACGC,GACJjU,EACC,MAAMkU,GAAgBC,EAAAA,EAAAA,OACfC,EAAmBC,IAAwBjQ,EAAAA,EAAAA,WAAS,IACpDkQ,EAAOC,IAAYnQ,EAAAA,EAAAA,UAAoC,KAEvDoQ,EAASC,IAAcxQ,EAAAA,EAAAA,GAAqBgQ,EAAW,CAC5DS,cAAe,UACfC,QAAS,gBACTC,aAAoB,OAANxM,QAAM,IAANA,GAAW,QAAL0K,EAAN1K,EAAS,UAAE,IAAA0K,OAAL,EAANA,EAAatP,KAGvBqR,GAAqBjN,EAAAA,EAAAA,QAAqB,MAC1CkN,GAAUlN,EAAAA,EAAAA,QAAuB,OAEjC,SACJuJ,EAAQ,MACR4D,EAAK,MACLpO,EAAK,SACLqO,EAAQ,KACRC,EAAI,UACJ7S,GAAS,OACT8S,GAAM,YACNC,KAEEC,EAAAA,GAAAA,IAAQ,CACV5R,GAAIyP,EACJoC,IAAKnC,EACLE,cACAvS,KAAM,CACJ2T,QAASA,GAEXhS,MAAOyE,MAAON,EAAO2O,KACnB,GAAIhC,GAA6B,WAAZkB,EAAsB,CAAC,IAADe,EAAAC,EAAAC,EACzC,MAAM5U,EAAO6U,KAAKC,MAAU,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMzU,MACxB+U,GAAWC,EAAAA,GAAAA,GAAa,CAC5B3C,QAAS7K,EACqB,QADLkN,EACrBV,EAAmBhN,eAAO,IAAA0N,OAAA,EAA1BA,EAA4BO,cAAc,WAC1C5C,EACJG,QACGhL,EAC6B,QADbmN,EACbX,EAAmBhN,eAAO,IAAA2N,OAAA,EAA1BA,EAA4BM,cAAc,SAC1CzC,IAAW,UAEb0C,GAASC,EAAAA,GAAAA,IAAW,CACxBC,aAAiB,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,cAAUjQ,EAC7BkQ,OAAOC,EAAAA,GAAAA,IAAkB,CACvBD,MAAOP,EACLvN,EAC8B,QADdoN,EACZZ,EAAmBhN,eAAO,IAAA4N,OAAA,EAA1BA,EAA4BK,cAAc,WAC1CtB,GAEN6B,YAAYC,EAAAA,GAAAA,IAA2B,CAAEC,QAAS,YAEpDpF,SAAc,OAAJtQ,QAAI,IAAJA,OAAI,EAAJA,EAAMsQ,SAChBqF,OAAQxD,IAGV,OADAyD,GAAaC,KAAKC,OACXZ,EAAOa,qBAAqB,CACjCC,eAAe,GAEnB,CACE,OAAOrU,MAAMmE,EAAO2O,EACtB,KAGE,MAAErI,IAAUC,EAAAA,EAAMC,YAClB,EAAE5E,KAAMC,EAAAA,EAAAA,OAEPsO,GAAWL,KAAgBrS,EAAAA,EAAAA,UAAwB,OAG1D2C,EAAAA,EAAAA,YAAU,KACHV,IAAAA,YAAcoN,IACjBuB,EAASvB,EACX,GACC,CAACA,EAAcuB,KAYlBjO,EAAAA,EAAAA,YAAU,KATR2M,KAEKrN,IAAAA,YAAcqN,IAAqBrN,IAAAA,QAAUiO,EAAOZ,KACvDa,EAASb,GACTW,GAAqB,GACvB,EAKA0C,CAA4BrD,EAAgB,GAE3C,CAACA,KAEJ3M,EAAAA,EAAAA,YAAU,KACR,IAAKV,IAAAA,YAAcsN,IAAchN,EAAO,CACtC,MAAMqQ,EAAyC,CAAC,EAC3C3Q,IAAAA,QAAUiO,KACb0C,EAAmBtI,0BACjBuI,EAAAA,EAAAA,IAAwB3C,IAE5BY,GACE,CACExU,KAAM,OACNyK,QAASxE,GAEXqQ,EAEJ,IAEC,CAACrD,IAEJ,MAAMuD,GAAkBxQ,EAAcC,GAEhCwQ,IAAuBC,EAAAA,EAAAA,UAAQ,IAC5B/Q,IAAAA,IAAM8K,GAAWvE,GAAmB,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASzB,UAAS5F,KAAK,KAC1D,CAAC4L,IAEEkG,GAAkBH,GADAxQ,EAAcyQ,IAGhCG,IAA6BF,EAAAA,EAAAA,UAAQ,KACzC,MAAMG,EAAuBlR,IAAAA,KAAO8K,GACpC,MAAmC,eAAX,OAApBoG,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB7W,MACG,OAApB6W,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBpM,QAEtB,EACT,GACC,CAACgG,IAEEqG,GAA0B9Q,EAAc4Q,IACxCG,IAAiBL,EAAAA,EAAAA,UAAQ,IACtBI,GAA0B,GAAKV,GAClCU,KAA4Bd,KAAKC,MAAQG,IAAa,KACtD,GACH,CAACU,GAAyBV,KAEvBxQ,IAA4BoR,EAAAA,EAAAA,IAAgB,CAChD3D,GAAuB,CACrBhS,IAAK,UACLqB,MAAOmF,GAAE,iCACTnI,MAAMG,EAAAA,EAAAA,KAACoX,GAAAA,EAAK,IACZzG,QAASA,KACPgD,EACE,oCAAoCnB,aAAsByB,IAC3D,GAGLT,GAAuB,CACrBxI,KAAM,WAER,CACExJ,IAAK,QACL6V,QAAQ,EACRxU,MAAOmF,GAAE,4BACTnI,MAAMG,EAAAA,EAAAA,KAACsX,GAAAA,EAAc,IACrB3G,QAASA,KACPiE,GAAY,GAAG,KAKrB,OACExH,EAAAA,EAAAA,MAACrC,EAAAA,EAAI,CACHtD,IAAK8M,EACLgD,UAAQ,EACRrM,MACE,MAKEwI,EACJ3Q,OACE/C,EAAAA,EAAAA,KAACqN,EAAAA,EAAI,CAACC,UAAU,SAASE,MAAM,UAAUG,IAAK,KAAKxE,UACjDiE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAU,MAAMK,IAAK,KAAKxE,SAAA,CAW7B8J,GACDjT,EAAAA,EAAAA,KAACwX,EAAW,CACV3P,OAAQA,EACR7E,MAAOiR,EACP1P,SAAU2P,EACVpM,iBAAkBA,KAEpB9H,EAAAA,EAAAA,KAACyX,GAAAA,EAAQ,CAACC,KAAM,CAAE3R,UAASqO,QAAS,CAAC,SAASjL,UAC5CnJ,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACLyB,KAAK,OACL2F,QAAUgH,GAAMA,EAAEC,iBAClB/X,MAAMG,EAAAA,EAAAA,KAAC6X,GAAAA,EAAY,IACnB9Q,MAAO,CAAE+Q,MAAOpL,GAAMqL,mBAAoBnY,MAAO8M,GAAMsL,iBAMjEjR,MAAO,CACLpH,OAAQ,OACRC,MAAO,OACPqY,QAAS,OACTC,cAAe,UAEjB9M,OAAQ,CACN9K,KAAM,CACJoP,gBAAiBhD,GAAMyL,oBACvBpJ,aAAc,EACdb,KAAM,EACN+J,QAAS,OACTC,cAAe,SACf7M,QAAS,EACT1L,OAAQ,MACRmS,SAAU,YAEZsG,QAAS,CACP1G,YAAahF,GAAM2L,yBACnBzG,aAAclF,GAAM2L,0BAEtB/M,OAAQ,CACNgN,OAAQ,IAGZF,QAAS,EACPpY,EAAAA,EAAAA,KAACuY,EAAU,CACTvR,WAAS,EACThE,MAAOoD,EACP8B,YAAY,mBACZoD,QACEtL,EAAAA,EAAAA,KAACwH,EAAAA,EAAOgR,OAAM,CACZC,UAAU,EACV1V,MAAOiF,GAAE,sBACTkB,OAAQ2K,IAAsB/N,IAAAA,QAAUiO,GACxC2E,aAAc5E,EACd1I,OAAQ,CACNR,QAAS,CACPS,QAAS,IAEXlC,UAEFnJ,EAAAA,EAAAA,KAACgP,EAAAA,EAAW,CACV2J,aAAcA,KAAM,EACpBC,iBAAkBA,IAAMrE,EAAQjN,QAChCuR,OAAO,iBACP9S,MAAOgO,EACPxP,SAAU8F,IAAmB,IAAlB,SAAEyO,GAAUzO,EACrB2J,EAAS8E,GACS,OAAlBxF,QAAkB,IAAlBA,GAAAA,EAAqBwF,EAAS,EAEhC5Q,YAAc8C,GACH,SAATA,EACI,CACEjI,MAAOiF,GAAE,wBAEX,CACEnI,MAAMG,EAAAA,EAAAA,KAAC+Y,GAAAA,EAAmB,IAC1BhW,MAAOiF,GAAE,sBACTmH,YAAanH,GAAE,sCAM7BgR,QACEhZ,EAAAA,EAAAA,KAACgP,EAAAA,EAAW,CACV2J,aAAcA,KAAM,EACpBC,iBAAkBA,IAAMrE,EAAQjN,QAChCuR,OAAO,iBACP9S,MAAOgO,EACPxP,SAAUwH,IAAmB,IAAlB,SAAE+M,GAAU/M,EACrBiI,EAAS8E,GACS,OAAlBxF,QAAkB,IAAlBA,GAAAA,EAAqBwF,GACrBhF,GAAqB,EAAK,EAE5B5L,YAAc8C,GACH,SAATA,EACI,CACEjI,MAAOiF,GAAE,wBAEX,CACEnI,MAAMG,EAAAA,EAAAA,KAAC+Y,GAAAA,EAAmB,IAC1BhW,MAAOiF,GAAE,sBACTmH,YAAanH,GAAE,kCAEtBmB,UAEDnJ,EAAAA,EAAAA,KAACiZ,GAAAA,EAAK,CAACC,KAAMpT,IAAAA,QAAUiO,KAAWF,EAAkB1K,UAClDnJ,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CAACyB,KAAK,OAAOnL,MAAMG,EAAAA,EAAAA,KAACmZ,GAAAA,EAAY,UAI7C5U,SAAWH,IACTqQ,EAASrQ,GACLiP,GACFA,EAAcjP,EAChB,EAEFd,QAASzB,GACToF,OAAQA,KACNyN,GAAM,EAERxN,OAAQA,KACN,GAAId,IAAUN,IAAAA,QAAUiO,GAAQ,CAC9B,MAAM0C,EAAyC,CAAC,EAC3C3Q,IAAAA,QAAUiO,KACb0C,EAAmBtI,0BACjBuI,EAAAA,EAAAA,IAAwB3C,IAE5BY,GACE,CACExU,KAAM,OACNyK,QAASxE,GAEXqQ,GAGF1N,YAAW,KACT0L,EAAS,IACTT,EAAS,IACTF,GAAqB,EAAM,GAC1B,GACW,OAAdP,QAAc,IAAdA,GAAAA,GACF,GAEFxM,MAAO,CAAEmH,KAAM,MAEjB/E,SAAA,EAEFnJ,EAAAA,EAAAA,KAACqN,EAAAA,EAAI,CACHC,UAAU,MACVvG,MAAO,CACLsE,QAASqB,GAAM0M,UACfxH,aAAclF,GAAM2M,2BACpB3H,YAAahF,GAAM2M,2BACnB3J,gBAAiBhD,GAAMiD,iBACvBsI,QACGnQ,GAAgC,WAAZmM,EAAwB,OAAW,QAC1D9K,UAEFiE,EAAAA,EAAAA,MAACkM,GAAAA,EAAI,CACH7R,IAAK6M,EACLiF,OAAO,aACPtO,KAAK,QACLuO,aAAa,WACbzS,MAAO,CAAEmH,KAAM,GAEfuL,cAAe,CACb9G,QAASA,EACTjG,MAAO+G,GACPtK,SAAA,CAED6J,GACChT,EAAAA,EAAAA,KAAA,OAAK+G,MAAO,CAAE2S,aAAchN,GAAMzB,MAAO9B,SAAE6J,IACzC,MACJhT,EAAAA,EAAAA,KAACsZ,GAAAA,EAAKK,KAAI,CACR9W,MAAM,UACNnD,KAAK,UACLka,MAAO,CACL,CACE5O,KAAM,OAER,CACE6O,UAAU,IAEZ1Q,UAEFnJ,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,CAAC5R,YAAY,yBAErBlI,EAAAA,EAAAA,KAACsZ,GAAAA,EAAKK,KAAI,CACR9W,MAAM,WACNnD,KAAK,UACLka,MAAO,CACL,CACEC,UAAU,IAEZ1Q,UAEFnJ,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,CAAC5R,YAAY,iBAErBlI,EAAAA,EAAAA,KAACsZ,GAAAA,EAAKK,KAAI,CAAC9W,MAAM,QAAQnD,KAAK,QAAOyJ,UACnCnJ,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,QAnCHnH,KAwCP7M,IAAAA,QAAe,OAAL0O,QAAK,IAALA,OAAK,EAALA,EAAOnI,SAUf,MATFrM,EAAAA,EAAAA,KAAC+Z,GAAAA,EAAK,CACJ1N,QAAc,OAALmI,QAAK,IAALA,OAAK,EAALA,EAAOnI,QAChBrB,KAAK,QACLgP,UAAQ,EACRjT,MAAO,CACLwE,OAAQmB,GAAMwF,UAEhBuG,UAAQ,KAGZzY,EAAAA,EAAAA,KAACia,GAAsB,CAACrJ,SAAUA,EAAUnE,YAAa5K,MACzD7B,EAAAA,EAAAA,KAACqN,EAAAA,EAAI,CAACE,QAAQ,MAAMC,MAAM,MAAMzG,MAAO,CAAEwE,OAAQmB,GAAMwF,UAAW/I,UAChEnJ,EAAAA,EAAAA,KAACka,GAAAA,EAAG,CAAA/Q,UACFiE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACM,IAAK,KAAKxE,SAAA,EACdnJ,EAAAA,EAAAA,KAACma,GAAAA,EAAc,KACf/M,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACM,IAAK,MAAMxE,SAAA,EACfnJ,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWD,KAAI,CAAAP,SAAE+N,GAAekD,QAAQ,MACzCpa,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWD,KAAI,CAACsB,KAAK,YAAW7B,SAAC,cAEpCiE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACM,IAAK,MAAMxE,SAAA,EACfnJ,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWD,KAAI,CAAAP,SAAE2N,MAClB9W,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWD,KAAI,CAACsB,KAAK,YAAW7B,SAAC,6BAKrC,E,kEC7eX,MAAMkR,IAA2BC,EAAAA,GAAAA,IAAa,IACxCC,IAA8BD,EAAAA,GAAAA,MAC9BE,IAAyBF,EAAAA,GAAAA,SAC7B5U,GAuNF,GAzMgEjG,IAUzD,IAADgb,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAV2D,SAC/DC,EAAW,KAAI,SACfrC,EAAQ,eACRsC,EAAc,gBACdC,EAAe,eACfC,EAAc,cACdC,EAAa,eACbC,EAAc,cACdC,KACG1H,GACJjU,EACC,MAAM,EAAEuI,IAAMC,EAAAA,EAAAA,OACR,MAAEyE,GAAUC,EAAAA,EAAMC,YAEjBnI,EAAU4W,IAAkB3Z,EAAAA,EAAAA,IAAkB,UAC9C4Z,EAAeC,IACpB1X,EAAAA,EAAAA,UAAkDmX,GAAmB,MACjE9V,GAAWsW,EAAAA,EAAAA,kBAAW,IAAAC,GAAAA,GAAAA,GAAApW,EAAC,OAO3BiW,IAEKI,EAAmBC,IAAwB9X,EAAAA,EAAAA,UAASqB,IAEpD0W,EAAqBC,IAA0BC,EAAAA,GAAAA,IACpDzB,KAEK0B,EAAwBC,IAA6BF,EAAAA,GAAAA,IAC1DvB,KAGK0B,EAAmBC,IAAwBJ,EAAAA,GAAAA,IAChDtB,KAGM7Y,KAAMwa,IAAiBC,EAAAA,EAAAA,IAE5B,CACDra,SAAU,CAAC,SAAU0C,EAAkB,OAARS,QAAQ,IAARA,OAAQ,EAARA,EAAUS,aACzC3D,QAASA,KAAO,IAADqa,EACb,OAAe,OAARnX,QAAQ,IAARA,GAAAA,EAAUyJ,IACb1M,MACE,IAAIqa,IACFxB,EAAW,UACE,QADOuB,EACZ,OAARnX,QAAQ,IAARA,OAAQ,EAARA,EAAUyJ,WAAG,IAAA0N,EAAAA,OAAI3W,GACjB6W,YAEDra,MAAMsa,GAAQA,EAAIpa,SAClB0E,OAAO6Q,IAAC,CAAQhW,KAAM,OACzB8a,QAAQC,QAAQ,CAAE/a,KAAM,IAAK,IAI/BkG,EAAS/B,IAAAA,IAAkB,OAAZqW,QAAY,IAAZA,OAAY,EAAZA,EAAcxa,MAAO4G,IAAC,CACzCtF,GAAIsF,EAAEtF,GACNvD,KAAM6I,EAAEtF,OAGJ0Z,GAAWC,EAAAA,EAAAA,UAEX,OAAEta,IAAWhB,EAAAA,EAAAA,MACZub,EAASC,IAAcjZ,EAAAA,EAAAA,UAASoX,GACjCrY,GAAQiU,EAAAA,EAAAA,UAAQ,IACbvU,EAAOya,MAAMC,GAAMA,EAAE/Z,KAAO4Z,KAClC,CAACva,EAAQua,KACLI,IAAwBC,EAAAA,EAAAA,GAC7B,0BAOF,OAJA1W,EAAAA,EAAAA,YAAU,KACRsW,EAAW7B,EAAe,GACzB,CAACA,KAGFjb,EAAAA,EAAAA,KAACmd,GAAW,IACNzJ,EACJhB,OAAQ,GAAW,OAARxN,QAAQ,IAARA,OAAQ,EAARA,EAAUS,eAAekX,IACpClK,QACU,OAARzN,QAAQ,IAARA,GAAAA,EAAUyJ,IACN,IAAI2N,IAAIxB,EAAuB,QAAfL,EAAU,OAARvV,QAAQ,IAARA,OAAQ,EAARA,EAAUyJ,WAAG,IAAA8L,EAAAA,OAAI/U,GAAW6W,gBAC9C7W,EAENmC,OAAQA,EACR4K,aAAmB,OAAL7P,QAAK,IAALA,GAAa,QAAR8X,EAAL9X,EAAOwa,cAAM,IAAA1C,OAAR,EAALA,EAAe2C,cAC7BtK,eAAa,EACbE,WACE7F,EAAAA,EAAAA,MAAAkQ,EAAAA,SAAA,CAAAnU,SAAA,CACG8T,GAAwBra,IACvBwK,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACM,IAAI,KAAIxE,SAAA,EACZnJ,EAAAA,EAAAA,KAACR,EAAAA,EAAe,CACdE,KAAMkD,EAAME,KAAKya,OACjB5d,OAAQ,GACRC,MAAO,MAETI,EAAAA,EAAAA,KAACwd,EAAa,CACZlb,OAAQA,EACRU,MAAO6Z,EACPtY,SAAW3B,KACT6D,EAAAA,EAAAA,kBAAgB,KACdqW,EAAWla,EAAM,GACjB,QAKV5C,EAAAA,EAAAA,KAACyd,EAAc,CACbvV,YAAaF,EAAE,yBACfjB,MAAO,CACLoB,WAAY,UAEd1D,SAAUA,EACVP,YAAU,EACVZ,SAA0B,OAAjBoY,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB/V,gBAAwB,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAUS,aACtDpB,SAAUA,CAACH,EAAGc,KAGZyW,EAAqBzW,IACrBuB,EAAAA,EAAAA,kBAAgB,KAEd8U,EAAiBrW,EAAS,GAC1B,EAEJlC,MAAe,OAARkC,QAAQ,IAARA,OAAQ,EAARA,EAAUS,YACjBnB,uBAAuB,OAI7ByP,QACE8G,GACAjV,IAAAA,SAAWA,IAAAA,IAAkB,OAAZqW,QAAY,IAAZA,OAAY,EAAZA,EAAcxa,KAAM,MAAOoZ,GACxCA,EAC4B,QADdJ,EACD,OAAZwB,QAAY,IAAZA,GAAkB,QAANvB,EAAZuB,EAAcxa,YAAI,IAAAiZ,GAAK,QAALC,EAAlBD,EAAqB,UAAE,IAAAC,OAAX,EAAZA,EAAyB5X,UAAE,IAAA0X,EAAAA,EAAI,SAEtCzP,MACEuN,GACEzY,EAAAA,EAAAA,KAAC0d,GAAAA,EAAU,CACT3a,MAAOiF,EAAE,gCACTmH,YAAanH,EAAE,2CACf2V,UAAWA,KACK,OAAdxC,QAAc,IAAdA,GAAAA,GAAkB,EAEpByC,OAAQ5V,EAAE,iBACV6V,cAAe,CAAExG,QAAQ,GAAOlO,UAEhCnJ,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACL1J,MAAMG,EAAAA,EAAAA,KAAC8d,GAAAA,EAAa,IACpB9S,KAAK,OACLjE,MAAO,CAAE+Q,MAAOpL,EAAMqR,oBAGxBrY,EAENoC,iBAAkBhC,IAAAA,QAAU+B,GAC5BmL,MACElN,IAAAA,QAAU+B,KACR7H,EAAAA,EAAAA,KAAC+Z,GAAAA,EAAK,CACJ/O,KAAK,UACLgP,UAAQ,EACR3N,QAASrE,EAAE,0BACXgW,QACEhe,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACL1J,MAAMG,EAAAA,EAAAA,KAACie,GAAAA,EAAc,IACrBtN,QAASA,KACP0K,GAAgB,EAChBlS,SAEDnB,EAAE,sBAMbkL,aAAcgI,EAAgBU,OAAsBlW,EACpD2N,cAAgBjP,IACdyX,EAAuBzX,EAAE,EAE3B+O,gBAAiB+H,EAAgBa,OAAyBrW,EAC1D4N,mBAAqBlF,IACnB4N,EAA0B5N,EAAW,EAEvCgF,WACmB,OAAjB6I,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBhZ,MAAO0Z,GAAwC,OAAjBV,QAAiB,IAAjBA,OAAZvW,EAAYuW,EAAmBza,IAEtE+R,eAAgBA,KACdsI,EAAuB,IACvBG,EAA0B,IACtBd,GACFgB,EAAqB,CACnBjZ,GAAI0Z,EACJnb,KAAK,IAAI2U,MAAOoG,YAEpB,GAEF,E,kECjON,MAkHA,GAlH0C9c,IAAmB,OAAbkJ,GAAOlJ,EACrD,MAAM,EAAEuI,IAAMC,EAAAA,EAAAA,OAER,KAAEiW,EAAI,OAAEC,EAAM,OAAEC,EAAM,KAAEC,IAASC,EAAAA,GAAAA,GAAe,CAAC,OAEhDpD,EAAeqD,IAAkB1a,EAAAA,EAAAA,WAAS,IAE1C2O,IAAcgM,EAAAA,GAAAA,eAAc,aAAcC,GAAAA,cAC1CxK,IAAWuK,EAAAA,GAAAA,eAAc,UAAWC,GAAAA,cACpC5B,IAAW2B,EAAAA,GAAAA,eAAc,UAAWC,GAAAA,aACrCC,GAAqBlM,GAErB,SAAEtN,EAAQ,cAAED,IAAkBE,EAAAA,EAAAA,uBAAgB,IAAAwZ,GAAAA,GAAAA,GAAAtZ,EAAA,OAelD,CACEmN,WAAYA,GAAc,GAC1BkM,kBAAmBA,IAGvB,OACE1e,EAAAA,EAAAA,KAAC4e,EAAAA,EAAO,CACN7b,MAAOiF,EAAE,mBACToD,OAAQ,CACN9K,KAAM,CACJue,SAAU,WAGd3T,OACElL,EAAAA,EAAAA,KAACqN,EAAAA,EAAI,CAACC,UAAU,MAAMK,IAAK,KAAMM,KAAK,OAAOlH,MAAO,CAAE+X,WAAY,GAAI3V,UACpEiE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACM,IAAK,KAAKxE,SAAA,EACdnJ,EAAAA,EAAAA,KAAC2J,EAAAA,EAAWD,KAAI,CAACsB,KAAK,YAAW7B,SAC9BnB,EAAE,uBAELhI,EAAAA,EAAAA,KAAC+e,GAAAA,EAAM,CACL/b,MAAOkY,EACPvK,QAAUvM,IACRma,EAAena,EAAE,KAGrBpE,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACLoH,QAASA,KACP0N,GAAK,IAAIlI,MAAOoG,WAAW,EAE7B1c,MAAMG,EAAAA,EAAAA,KAACgf,GAAAA,EAAY,WAI1B7V,UAEDnJ,EAAAA,EAAAA,KAACqN,EAAAA,EAAI,CAACC,UAAU,SAASE,MAAM,UAAUG,IAAK,KAAKxE,UACjDnJ,EAAAA,EAAAA,KAACqN,EAAAA,EAAI,CACHM,IAAK,KACLL,UAAU,MACVvG,MAAO,CACL8X,SAAU,OACVlf,OAAQ,uBAEV6N,MAAM,UAASrE,SAEdrD,IAAAA,IAAMoY,GAAM,CAACe,EAAI5Q,KAAK,IAAA6Q,EAAA,OACrBlf,EAAAA,EAAAA,KAACmf,EAAAA,SAAQ,CACPC,UACEpf,EAAAA,EAAAA,KAAC+K,EAAAA,EAAI,CACHwM,UAAQ,EACRxQ,MAAO,CACLnH,MAAO,OACPqY,QAAS,OACTC,cAAe,UACf/O,UAEFnJ,EAAAA,EAAAA,KAACqf,GAAAA,EAAQ,CAACC,QAAM,MAEnBnW,UAGDnJ,EAAAA,EAAAA,KAACuf,GAAmB,CAClBxE,eACY,IAAV1M,GAAenJ,EAASsa,IAAMvL,EAAUA,OAAUvO,EAEpDsV,gBACY,IAAV3M,GAAenJ,EAASsa,GACpBta,EAASlC,YAAS0C,GACL,OAAbT,QAAa,IAAbA,GAAoB,QAAPia,EAAbja,EAAec,aAAK,IAAAmZ,OAAP,EAAbA,EAAuB,UAAMxZ,EAEnCuV,eAAgB4B,QAAWnX,EAE3BqB,MAAO,CAAEmH,KAAM,GACfiN,eAAgBA,KACdgD,EAAO9P,EAAM,EAEfoK,SAAUyF,EAAK5X,OAAS,EACxB4U,cAAeA,GANVkD,EAAO/P,KAZT+P,EAAO/P,GAoBH,SAIT,C,gDC/Fd,MAAM9O,EAAyB,WAC/B,IAAIgB,EAAK,CACP,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,cAEV,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,sBAGZC,EAAK,CACH,CACE,KAAQ,WACR,KAAQ,cACR,aAAgB,eAGpBC,EAAK,CACH,CACE,KAAQ,KACR,KAAQ,iBACR,KAAQ,iCAGZC,EAAK,CACH,CACE,KAAQ,UACR,KAAQ,QACR,MAAS,GAEX,CACE,KAAQ,UACR,KAAQ,SACR,MAAS,IAGbC,EAAK,CACH,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,OAGlB,MAAO,CACL,SAAY,CACV,oBAAwBJ,EACxB,KAAQ,WACR,SAAY,KACZ,KAAQ,gBACR,WAAc,CACZ,CACE,KAAQ,aACR,MAAS,CACP,MAAS,KACT,KAASC,EACT,aAAgB,WAChB,KAAQ,cACR,KAAQ,WACR,QAAU,EACV,WAAeC,EACf,WAAc,MAEhB,GAAM,SACN,KAAQ,YAEV,CACE,MAAS,KACT,KAASC,EACT,aAAgB,eAChB,KAAQ,cACR,KAAQ,gBACR,QAAU,EACV,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,WAChB,KAAQ,cACR,KAAQ,QACR,QAAU,EACV,WAAeD,EACf,WAAc,OAGlB,WAAc,oCAGlB,KAAQ,UACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAwBF,EACxB,KAAQ,YACR,KAAQ,gBACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,WAChB,KAAQ,cACR,KAAQ,WACR,QAAU,EACV,WAAeG,EACf,WAAc,MAEhB,CACE,MAAS,KACT,KAASD,EACT,aAAgB,eAChB,KAAQ,cACR,KAAQ,gBACR,QAAU,EACV,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,WAChB,KAAQ,cACR,KAAQ,QACR,QAAU,EACV,WAAeC,EACf,WAAc,OAGlB,WAAc,qCAIpB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,CAAC,EACb,KAAQ,gBACR,cAAiB,QACjB,KAAQ,0ZAGZ,CA7J+B,GA+J9BpB,EAAa8B,KAAO,mCAErB,S","sources":["components/Chat/__generated__/EndpointLLMChatCard_endpoint.graphql.ts","components/FluentEmojiIcon.tsx","components/__generated__/EndpointSelectQuery.graphql.ts","hooks/useAIAgent.ts","components/AIAgentSelect.tsx","components/EndpointSelect.tsx","hooks/useTokenizer.ts","components/Chat/ChatSender.tsx","components/Chat/ModelSelect.tsx","components/Chat/CopyButton.tsx","components/Chat/ChatMessageContent.tsx","components/Chat/ChatMessage.tsx","components/Chat/ScrollBottomHandlerButton.tsx","components/Chat/VirtualChatMessageList.tsx","components/Chat/LLMChatCard.tsx","components/Chat/EndpointLLMChatCard.tsx","pages/ChatPage.tsx","pages/__generated__/ChatPageQuery.graphql.ts"],"sourcesContent":["/**\n * @generated SignedSource<<8234055321a793d0c3c681ede81be380>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointLLMChatCard_endpoint$data = {\n  readonly endpoint_id: string | null | undefined;\n  readonly url: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointLLMChatCard_endpoint\";\n};\nexport type EndpointLLMChatCard_endpoint$key = {\n  readonly \" $data\"?: EndpointLLMChatCard_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointLLMChatCard_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"url\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"d5fbaab35efda649f9f7847ee51028b6\";\n\nexport default node;\n","import * as fluentEmoji from '@iconify-json/fluent-emoji-flat';\nimport React from 'react';\n\nexport const FluentEmojiIcon: React.FC<{\n  name?: string;\n  height?: number;\n  width?: number;\n}> = ({ name, height, width }) => {\n  const icon = fluentEmoji.icons.icons[name ?? 'pure'];\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      height={height}\n      width={width}\n      role=\"img\"\n      dangerouslySetInnerHTML={{ __html: icon.body }}\n    />\n  );\n};\n","/**\n * @generated SignedSource<<b5cb52bf9518bc158683bbbd4337ae75>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointSelectQuery$variables = {\n  endpoint_id: string;\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n  skipEndpoint: boolean;\n};\nexport type EndpointSelectQuery$data = {\n  readonly endpoint: {\n    readonly endpoint_id: string | null | undefined;\n    readonly name: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n  } | null | undefined;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointSelectQuery = {\n  response: EndpointSelectQuery$data;\n  variables: EndpointSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpoint_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipEndpoint\"\n},\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv11 = {\n  \"args\": null,\n  \"kind\": \"FragmentSpread\",\n  \"name\": \"EndpointLLMChatCard_endpoint\"\n},\nv12 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpoint_id\"\n  }\n],\nv13 = [\n  (v8/*: any*/),\n  (v9/*: any*/),\n  (v10/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v3/*: any*/),\n      (v2/*: any*/),\n      (v4/*: any*/),\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v13/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v13/*: any*/),\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"4ed77e0d8d228a82aa36a46316bc28ca\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n  $endpoint_id: UUID!\\n  $skipEndpoint: Boolean!\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      url\\n      ...EndpointLLMChatCard_endpoint\\n      id\\n    }\\n  }\\n  endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\\n    name\\n    endpoint_id\\n    ...EndpointLLMChatCard_endpoint\\n    id\\n  }\\n}\\n\\nfragment EndpointLLMChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"bc98e0b499fc7a18b88e87841f5e6e47\";\n\nexport default node;\n","import { useUpdatableState } from '.';\nimport { useTanQuery } from './reactQueryAlias';\nimport { useCallback } from 'react';\n\nexport interface AIAgentMeta {\n  title: string;\n  avatar?: string;\n  background?: string;\n  descriptions?: string;\n  tags?: string[];\n}\n\nexport interface AIAgentConfig {\n  system_prompt: string;\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgentParams {\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stop?: string | string[];\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgent {\n  id: string;\n  endpoint: string;\n  endpoint_id: string;\n  config: AIAgentConfig;\n  meta: AIAgentMeta;\n  params?: AIAgentParams;\n}\n\nexport interface AIAgents {\n  agents: AIAgent[];\n}\n\nconst TIMEOUT_24_HOURS = 24 * 60 * 60 * 1000;\n\nexport const useAIAgent = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data: agentsData, isLoading } = useTanQuery<AIAgents>({\n    queryKey: ['useAgents', key],\n    queryFn: () => {\n      return fetch('resources/ai-agents.json').then((response) =>\n        response.json(),\n      );\n    },\n    staleTime: TIMEOUT_24_HOURS, // 24 hours\n  });\n\n  return {\n    agents: agentsData?.agents ?? [],\n    isLoading,\n    refresh: useCallback(() => checkUpdate(), [checkUpdate]),\n  };\n};\n","import { AIAgent } from '../hooks/useAIAgent';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps } from 'antd';\nimport React, { useState, useTransition } from 'react';\n\ninterface AgentSelectProps extends Omit<SelectProps, 'options'> {\n  agents: AIAgent[];\n  defaultId?: string;\n  onSelectAgent?: (agent: AIAgent) => void;\n}\n\nfunction makeAgentOptions(agents: AIAgent[], filter?: string) {\n  return agents\n    .map((agent) => ({\n      label: agent.meta.title,\n      value: agent.id,\n    }))\n    .filter((agent) => {\n      return agent.label.toLocaleLowerCase().includes(filter || '');\n    });\n}\n\nconst AIAgentSelect: React.FC<AgentSelectProps> = ({\n  agents,\n  defaultId,\n  onSelectAgent,\n  loading,\n  ...selectPropsWithoutLoading\n}) => {\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(selectPropsWithoutLoading);\n  const [searchAgent, setSearchAgent] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  return (\n    <Select\n      showSearch\n      onSearch={(v) => {\n        startSearchTransition(() => {\n          setSearchAgent(v);\n        });\n      }}\n      filterOption={false}\n      loading={isSearchPending || loading}\n      options={makeAgentOptions(agents, searchAgent)}\n      value={controllableValue}\n      onChange={(v, agent) => {\n        setControllableValue(v, agent);\n      }}\n      popupMatchSelectWidth={false}\n    />\n  );\n};\n\nexport default AIAgentSelect;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport {\n  EndpointSelectQuery,\n  EndpointSelectQuery$data,\n} from './__generated__/EndpointSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useState, useTransition } from 'react';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface EndpointSelectProps extends Omit<SelectProps, 'options'> {\n  fetchKey?: string;\n  lifecycleStageFilter?: LifecycleStage[];\n}\n\nexport type Endpoint = NonNullableItem<\n  EndpointSelectQuery$data['endpoint_list']\n>;\n\ntype LifecycleStage = 'created' | 'destroying' | 'destroyed';\n\nconst EndpointSelect: React.FC<EndpointSelectProps> = ({\n  fetchKey,\n  lifecycleStageFilter = ['created'],\n  loading,\n  ...selectPropsWithoutLoading\n}) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(selectPropsWithoutLoading);\n  const [searchStr, setSearchStr] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  const lifecycleStageFilterStr = lifecycleStageFilter\n    .map((v) => `lifecycle_stage == \"${v}\"`)\n    .join(' | ');\n\n  const { endpoint_list, endpoint } = useLazyLoadQuery<EndpointSelectQuery>(\n    graphql`\n      query EndpointSelectQuery(\n        $offset: Int!\n        $limit: Int!\n        $projectID: UUID\n        $filter: String\n        $endpoint_id: UUID!\n        $skipEndpoint: Boolean!\n      ) {\n        endpoint_list(\n          offset: $offset\n          limit: $limit\n          project: $projectID\n          filter: $filter\n        ) {\n          total_count\n          items {\n            name\n            endpoint_id\n            url\n            ...EndpointLLMChatCard_endpoint\n          }\n        }\n        endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\n          name\n          endpoint_id\n          ...EndpointLLMChatCard_endpoint\n        }\n      }\n    `,\n    {\n      limit: 10,\n      offset: 0,\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? [lifecycleStageFilterStr, searchStr]\n            .filter(Boolean)\n            .map((v) => `(${v})`)\n            .join(' & ')\n        : undefined,\n      endpoint_id: controllableValue,\n      skipEndpoint: !controllableValue,\n    },\n    {\n      fetchKey: fetchKey,\n    },\n  );\n\n  // useEffect(() => {\n  //   if (autoSelectDefault && _.isEmpty(controllableValue)) {\n  //     setControllableValue(\n  //       endpoint_list?.items?.[0]?.endpoint_id,\n  //       endpoint_list?.items?.[0],\n  //     );\n  //   }\n  // }, []);\n\n  const selectOptions = endpoint\n    ? _.map(\n        _.uniqBy(_.concat(endpoint_list?.items, endpoint), 'endpoint_id'),\n        (item) => {\n          return {\n            label: item?.name,\n            value: item?.endpoint_id,\n            endpoint: item,\n          };\n        },\n      )\n    : _.map(endpoint_list?.items, (item) => {\n        return {\n          label: item?.name,\n          value: item?.endpoint_id,\n          endpoint: item,\n        };\n      });\n\n  return (\n    <Select\n      showSearch\n      onSearch={(v) => {\n        startSearchTransition(() => {\n          setSearchStr(v && `name ilike \"%${v}%\"`);\n        });\n      }}\n      filterOption={false}\n      loading={isSearchPending || loading}\n      options={selectOptions}\n      {...selectPropsWithoutLoading}\n      // override value and onChange\n      value={controllableValue}\n      onChange={(v, option) => {\n        setControllableValue(v, _.castArray(option)?.[0].endpoint);\n      }}\n    />\n  );\n};\n\nexport default EndpointSelect;\n","import { startTransition, useEffect, useState } from 'react';\n\nexport const encodeAsync = async (str: string) => {\n  const { encode } = await import('gpt-tokenizer');\n\n  return encode(str).length;\n};\n\nexport const useTokenCount = (input: string = '') => {\n  const [value, setNum] = useState(0);\n\n  useEffect(() => {\n    startTransition(() => {\n      encodeAsync(input)\n        .then(setNum)\n        .catch(() => {\n          setNum(input.length);\n        });\n    });\n  }, [input]);\n\n  return value;\n};\n","import { Sender, SenderProps } from '@ant-design/x';\nimport { GetRef } from 'antd';\nimport { useEffect, useRef } from 'react';\n\ninterface ChatSenderProps extends SenderProps {\n  loading?: boolean;\n  autoFocus?: boolean;\n  onStop?: () => void;\n  onSend?: () => void;\n}\nconst ChatSender: React.FC<ChatSenderProps> = ({\n  style,\n  loading,\n  autoFocus,\n  onStop,\n  onSend,\n  ...senderProps\n}) => {\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\n\n  useEffect(() => {\n    if (autoFocus && senderRef.current) {\n      senderRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <Sender\n      ref={senderRef}\n      {...senderProps}\n      loading={loading}\n      onSubmit={() => {\n        onSend?.();\n      }}\n      onCancel={() => {\n        onStop?.();\n      }}\n      submitType=\"enter\"\n    />\n  );\n};\nexport default ChatSender;\n","import { BAIModel } from './LLMChatCard';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModelSelectProps extends SelectProps {\n  models?: Array<BAIModel>;\n  allowCustomModel?: boolean;\n}\n\nconst ModelSelect: React.FC<ModelSelectProps> = ({\n  models,\n  allowCustomModel,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectModel')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      options={_.concat(\n        allowCustomModel\n          ? [\n              {\n                label: 'Custom',\n                // @ts-ignore\n                value: 'custom',\n              },\n            ]\n          : [],\n        _.chain(models)\n          .groupBy('group')\n          .mapValues((ms) =>\n            _.map(ms, (m) => ({\n              label: m.label,\n              value: m.name,\n            })),\n          )\n          .map((v, k) => ({\n            label: k === 'undefined' ? 'Others' : k,\n            options: v,\n          }))\n          .value(),\n      )}\n      popupMatchSelectWidth={false}\n      {...selectProps}\n    />\n  );\n};\n\nexport default ModelSelect;\n","import { Button, ButtonProps, Tooltip } from 'antd';\nimport { CopyConfig } from 'antd/es/typography/Base';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface CopyButtonProps extends ButtonProps {\n  copyable?: Omit<CopyConfig, 'text'> & { text: string };\n  defaultIcon?: React.ReactNode;\n}\nconst CopyButton: React.FC<CopyButtonProps> = ({\n  copyable,\n  defaultIcon,\n  ...props\n}) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = async () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      const timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCopied]);\n\n  return (\n    <Tooltip\n      title={isCopied ? 'Copied!' : 'Copy'}\n      open={isCopied ? true : undefined}\n    >\n      <CopyToClipboard text={copyable?.text || ''} onCopy={handleCopy}>\n        <Button\n          icon={\n            isCopied ? <CheckIcon /> : defaultIcon ? defaultIcon : <CopyIcon />\n          }\n          {...props}\n        />\n      </CopyToClipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyButton;\n","import CopyButton from './CopyButton';\nimport { Card, Typography } from 'antd';\n// `rehype-katex` does not import the CSS file, so we need to import it manually.\nimport 'katex/dist/katex.min.css';\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport {\n  Prism as SyntaxHighlighter,\n  SyntaxHighlighterProps,\n} from 'react-syntax-highlighter';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nconst { Text } = Typography;\n\nconst ChatMessageContent: React.FC<{\n  children?: string;\n}> = ({ children }) => {\n  return (\n    <Markdown\n      remarkPlugins={[remarkGfm, remarkMath]}\n      rehypePlugins={[rehypeKatex]}\n      components={{\n        p({ node, ...props }) {\n          // @ts-ignore\n          return <p {...props} style={{ whiteSpace: 'pre-wrap' }} />;\n        },\n        code(props) {\n          const { children, className, node, ref, ...rest } = props;\n          const match = /language-(\\w+)/.exec(className || '');\n          const content = String(children).replace(/\\n$/, '');\n          return match ? (\n            <Card\n              title={\n                <Text style={{ fontWeight: 'normal' }} type=\"secondary\">\n                  {match[1]}\n                </Text>\n              }\n              type=\"inner\"\n              size=\"small\"\n              extra={\n                <CopyButton\n                  type=\"text\"\n                  copyable={{\n                    text: 's',\n                  }}\n                />\n              }\n              styles={{\n                body: { padding: 0 },\n                header: { margin: 0 },\n              }}\n            >\n              <div style={{ margin: '-0.5em 0', width: '100%' }}>\n                <CodeBlock\n                  ref={ref}\n                  {...rest}\n                  PreTag=\"div\"\n                  language={match[1]}\n                  style={oneLight}\n                  wrapLongLines\n                  wrapLines\n                >\n                  {content}\n                </CodeBlock>\n              </div>\n            </Card>\n          ) : (\n            <code {...rest} className={className}>\n              {/* @ts-ignore */}\n              {children}\n            </code>\n          );\n        },\n      }}\n    >\n      {children}\n    </Markdown>\n  );\n};\n\nconst X: React.FC<SyntaxHighlighterProps> = ({ children, ...props }) => {\n  return <SyntaxHighlighter {...props}>{children}</SyntaxHighlighter>;\n};\nconst CodeBlock = React.memo(X);\n\nexport default React.memo(ChatMessageContent);\n","import Flex from '../Flex';\n// ES 2015\nimport ChatMessageContent from './ChatMessageContent';\nimport { Message } from '@ai-sdk/react';\nimport { Attachments } from '@ant-design/x';\nimport { useThrottle } from 'ahooks';\nimport { Avatar, theme, Image, Collapse, Typography, Spin } from 'antd';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst ChatMessage: React.FC<{\n  message: Message;\n  placement?: 'left' | 'right';\n  extra?: React.ReactNode;\n  enableExtraHover?: boolean;\n  containerStyle?: React.CSSProperties;\n  isStreaming?: boolean;\n  // avatar?:\n}> = ({\n  extra,\n  message,\n  placement = 'left',\n  containerStyle,\n  enableExtraHover,\n  isStreaming,\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const throttledMessageReasoning = useThrottle(message.reasoning, {\n    wait: 50,\n  });\n  const throttledMessageContent = useThrottle(message.content, { wait: 50 });\n\n  return (\n    <Flex\n      direction={placement === 'left' ? 'row' : 'row-reverse'}\n      justify={'start'}\n      align=\"baseline\"\n      style={{\n        marginLeft: placement === 'left' ? '0' : '15%',\n        marginRight: placement === 'right' ? '0' : 20,\n        ...containerStyle,\n      }}\n      gap={'sm'}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {message.role !== 'user' ? (\n        <Avatar\n          // icon={message.role === \"user\" ? \"🧑‍🦰\" : \"🤖\"}\n          icon={'🤖'}\n          style={{ fontSize: token.fontSizeHeading3 }}\n        />\n      ) : null}\n\n      <Flex\n        direction=\"column\"\n        align={placement === 'left' ? 'start' : 'end'}\n        wrap=\"wrap\"\n        style={{ flex: 1 }}\n        gap={'xs'}\n      >\n        {_.map(message.experimental_attachments, (attachment, index) =>\n          _.includes(attachment?.contentType, 'image/') ? (\n            <Flex\n              style={{\n                border: 'none',\n                textAlign: 'end',\n              }}\n              align=\"end\"\n            >\n              <Image\n                key={`${message?.id}-${index}`}\n                src={attachment?.url}\n                alt={attachment?.name}\n                style={{\n                  maxWidth: '50vw',\n                  maxHeight: '12vh',\n                  borderRadius: token.borderRadius,\n                }}\n              />\n            </Flex>\n          ) : (\n            <Attachments.FileCard\n              key={index}\n              item={{\n                uid: `${message?.id}-${index}`,\n                name: attachment?.name || attachment?.url,\n                type: attachment?.contentType,\n                description: attachment?.name,\n                url: attachment?.url,\n              }}\n            />\n          ),\n        )}\n        <Flex\n          align=\"stretch\"\n          direction=\"column\"\n          style={{\n            borderRadius: token.borderRadius,\n            borderColor: token.colorBorderSecondary,\n            borderWidth: token.lineWidth,\n            padding: '1em',\n            paddingTop: 0,\n            paddingBottom: 0,\n            backgroundColor:\n              message.role !== 'user'\n                ? token.colorBgContainer\n                : token.colorBgContainerDisabled,\n            maxWidth: '100%',\n            width: _.trim(message.reasoning) ? '100%' : 'auto',\n          }}\n        >\n          {_.trim(message.reasoning) && (\n            <Collapse\n              style={{\n                marginTop: token.margin,\n                width: '100%',\n              }}\n              items={[\n                {\n                  key: 'reasoning',\n                  label: _.isEmpty(throttledMessageContent) ? (\n                    <Flex gap=\"xs\">\n                      <Typography.Text>{t('chatui.Thinking')}</Typography.Text>\n                      <Spin size=\"small\" />\n                    </Flex>\n                  ) : (\n                    <Typography.Text>\n                      {t('chatui.ViewReasoning')}\n                    </Typography.Text>\n                  ),\n                  children: (\n                    <ChatMessageContent>\n                      {throttledMessageReasoning}\n                    </ChatMessageContent>\n                  ),\n                },\n              ]}\n            />\n          )}\n          <ChatMessageContent>\n            {throttledMessageContent + (isStreaming ? '\\n●' : '')}\n          </ChatMessageContent>\n        </Flex>\n        <Flex\n          style={{\n            fontSize: token.fontSizeSM,\n            ...(enableExtraHover\n              ? {\n                  opacity: isHovered ? 1 : 0,\n                  transition: 'opacity 0.2s',\n                  transitionDelay: isHovered ? '0s' : '0.2s',\n                }\n              : {}),\n          }}\n        >\n          {extra}\n        </Flex>\n        {/* <Text\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n            opacity: isHovered ? 1 : 0,\n            transition: \"opacity 0.2s\",\n            transitionDelay: isHovered ? \"0s\" : \"0.2s\",\n          }}\n        >\n          {dayjs(message.createdAt)?.isSame(new Date(), \"day\")\n            ? dayjs(message.createdAt).format(\"LT\")\n            : dayjs(message.createdAt).format(\"L LT\")}\n        </Text> */}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatMessage;\n","import { useEventNotStable } from '../../hooks/useEventNotStable';\nimport { Button } from 'antd';\nimport { ArrowDownIcon } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface ScrollBottomHandlerButtonProps {\n  autoScroll?: boolean;\n  atBottom?: boolean;\n  lastMessageContent?: string;\n  onScrollToBottom: (type: 'click' | 'auto') => void;\n}\nconst ScrollBottomHandlerButton: React.FC<ScrollBottomHandlerButtonProps> = ({\n  autoScroll,\n  atBottom,\n  lastMessageContent,\n  ...props\n}) => {\n  const onScrollToBottom = useEventNotStable(props.onScrollToBottom);\n\n  useEffect(() => {\n    if (atBottom && autoScroll) {\n      onScrollToBottom?.('auto');\n    }\n  }, [atBottom, autoScroll, lastMessageContent, onScrollToBottom]);\n\n  return (\n    <Button\n      icon={<ArrowDownIcon />}\n      shape=\"circle\"\n      onClick={() => {\n        onScrollToBottom && onScrollToBottom('click');\n      }}\n    ></Button>\n  );\n};\n\nexport default ScrollBottomHandlerButton;\n","import Flex from '../Flex';\nimport ChatMessage from './ChatMessage';\nimport CopyButton from './CopyButton';\nimport ScrollBottomHandlerButton from './ScrollBottomHandlerButton';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport Compact from 'antd/es/space/Compact';\nimport _ from 'lodash';\nimport React, { useRef, useState } from 'react';\nimport { Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\n// import AutoScroll from '../AutoScroll';\n// import Item from '../ChatItem';\n\ninterface VirtualizedListProps {\n  messages: Array<Message>;\n  isStreaming?: boolean;\n}\nconst VirtualChatMessageList: React.FC<VirtualizedListProps> = ({\n  messages,\n  isStreaming,\n}) => {\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [atBottom, setAtBottom] = useState(true);\n  const { token } = theme.useToken();\n  // overscan should be 1.5 times the height of the window\n  const overscan = typeof window !== 'undefined' ? window.innerHeight * 1.5 : 0;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ height: '100%', flex: 1 }}\n    >\n      <Virtuoso\n        atBottomStateChange={setAtBottom}\n        atBottomThreshold={60}\n        computeItemKey={(_, item) => item.id}\n        data={messages}\n        followOutput={'auto'}\n        initialTopMostItemIndex={messages?.length - 1}\n        itemContent={(index, m) => {\n          return (\n            <ChatMessage\n              key={m.id}\n              message={m}\n              placement={m.role === 'user' ? 'right' : 'left'}\n              containerStyle={{\n                paddingLeft: token.paddingMD,\n                paddingRight: token.paddingMD,\n                paddingTop: index === 0 ? token.paddingMD : 0,\n                paddingBottom:\n                  index === messages.length - 1 ? token.paddingMD : 0,\n              }}\n              isStreaming={\n                m.role !== 'user' &&\n                isStreaming &&\n                index === messages.length - 1\n              }\n              enableExtraHover={m.role === 'user'}\n              extra={\n                m.role !== 'user' ? (\n                  <Compact>\n                    <CopyButton\n                      type=\"text\"\n                      size=\"small\"\n                      copyable={{\n                        text: m.content,\n                      }}\n                    />\n                    {/* <Button/> */}\n                    {/* <Button/> */}\n                  </Compact>\n                ) : (\n                  <Compact>{null}</Compact>\n                )\n              }\n            />\n          );\n        }}\n        overscan={overscan}\n        ref={virtuosoRef}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          right: '50%',\n          transform: 'translateX(+50%)',\n          bottom: token.marginSM,\n          opacity: atBottom ? 0 : 1,\n          transition: 'opacity 0.2s',\n          transitionDelay: atBottom ? '0s' : '0.2s',\n        }}\n      >\n        <ScrollBottomHandlerButton\n          atBottom={atBottom}\n          autoScroll={isStreaming}\n          onScrollToBottom={(type) => {\n            const virtuoso = virtuosoRef.current;\n            switch (type) {\n              case 'auto': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'auto',\n                  index: 'LAST',\n                });\n                break;\n              }\n              case 'click': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'smooth',\n                  index: 'LAST',\n                });\n                break;\n              }\n            }\n          }}\n          lastMessageContent={_.get(_.last(messages), 'content')}\n        />\n      </div>\n    </Flex>\n  );\n};\n\nexport default VirtualChatMessageList;\n","'use client';\n\nimport { createDataTransferFiles, filterEmptyItem } from '../../helper';\nimport { useWebUINavigate } from '../../hooks';\nimport { useTokenCount } from '../../hooks/useTokenizer';\nimport Flex from '../Flex';\nimport ChatSender from './ChatSender';\nimport ModelSelect from './ModelSelect';\nimport VirtualChatMessageList from './VirtualChatMessageList';\nimport { createOpenAI } from '@ai-sdk/openai';\nimport { useChat } from '@ai-sdk/react';\nimport {\n  CloudUploadOutlined,\n  DeleteOutlined,\n  LinkOutlined,\n  MoreOutlined,\n  RocketOutlined,\n} from '@ant-design/icons';\nimport { Attachments, AttachmentsProps, Sender } from '@ant-design/x';\nimport { useControllableValue } from 'ahooks';\nimport {\n  streamText,\n  extractReasoningMiddleware,\n  wrapLanguageModel,\n  ChatRequestOptions,\n} from 'ai';\nimport {\n  Alert,\n  Badge,\n  Button,\n  Card,\n  CardProps,\n  Dropdown,\n  Form,\n  FormInstance,\n  Input,\n  MenuProps,\n  Tag,\n  theme,\n  Typography,\n} from 'antd';\nimport _ from 'lodash';\nimport { Scale } from 'lucide-react';\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type BAIModel = {\n  id: string;\n  label?: string;\n  name?: string;\n  group?: string;\n  created?: string;\n  description?: string;\n};\ntype BAIAgent = {};\nexport interface LLMChatCardProps extends CardProps {\n  models?: Array<BAIModel>;\n  agents?: Array<BAIAgent>;\n  modelId?: string;\n  agentId?: string;\n  endpointId?: string;\n  systemPrompt?: string;\n  chatId?: string;\n  baseURL?: string;\n  apiKey?: string;\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n  allowCustomModel?: boolean;\n  alert?: React.ReactNode;\n  leftExtra?: React.ReactNode;\n  inputMessage?: string;\n  inputAttachment?: AttachmentsProps['items'];\n  submitKey?: string;\n  onAgentChange?: (agentId: string) => void;\n  onModelChange?: (modelId: string) => void;\n  onInputChange?: (input: string) => void;\n  onAttachmentChange?: (attachment: AttachmentsProps['items']) => void;\n  onSubmitChange?: () => void;\n  showCompareMenuItem?: boolean;\n  modelToken?: string;\n}\n\nconst LLMChatCard: React.FC<LLMChatCardProps> = ({\n  models = [],\n  endpointId,\n  systemPrompt,\n  chatId,\n  baseURL,\n  headers,\n  credentials,\n  apiKey,\n  fetchOnClient,\n  allowCustomModel,\n  alert,\n  leftExtra,\n  inputMessage,\n  inputAttachment,\n  submitKey,\n  onInputChange,\n  onAttachmentChange,\n  onSubmitChange,\n  showCompareMenuItem,\n  modelToken,\n  ...cardProps\n}) => {\n  const webuiNavigate = useWebUINavigate();\n  const [isOpenAttachments, setIsOpenAttachments] = useState(false);\n  const [files, setFiles] = useState<AttachmentsProps['items']>([]);\n\n  const [modelId, setModelId] = useControllableValue(cardProps, {\n    valuePropName: 'modelId',\n    trigger: 'onModelChange',\n    defaultValue: models?.[0]?.id,\n  });\n\n  const customModelFormRef = useRef<FormInstance>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  const {\n    messages,\n    error,\n    input,\n    setInput,\n    stop,\n    isLoading,\n    append,\n    setMessages,\n    // ...chatHelpers,\n  } = useChat({\n    id: chatId,\n    api: baseURL,\n    credentials,\n    body: {\n      modelId: modelId,\n    },\n    fetch: async (input, init) => {\n      if (fetchOnClient || modelId === 'custom') {\n        const body = JSON.parse(init?.body as string);\n        const provider = createOpenAI({\n          baseURL: allowCustomModel\n            ? customModelFormRef.current?.getFieldValue('baseURL')\n            : baseURL,\n          apiKey:\n            (allowCustomModel\n              ? customModelFormRef.current?.getFieldValue('token')\n              : apiKey) || 'dummy',\n        });\n        const result = streamText({\n          abortSignal: init?.signal || undefined,\n          model: wrapLanguageModel({\n            model: provider(\n              allowCustomModel\n                ? customModelFormRef.current?.getFieldValue('modelId')\n                : modelId,\n            ),\n            middleware: extractReasoningMiddleware({ tagName: 'think' }),\n          }),\n          messages: body?.messages,\n          system: systemPrompt,\n        });\n        setStartTime(Date.now());\n        return result.toDataStreamResponse({\n          sendReasoning: true,\n        });\n      } else {\n        return fetch(input, init);\n      }\n    },\n  });\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  // If the `inputMessage` prop exists, the `input` state has to follow it.\n  useEffect(() => {\n    if (!_.isUndefined(inputMessage)) {\n      setInput(inputMessage);\n    }\n  }, [inputMessage, setInput]);\n\n  const setFilesFromInputAttachment = (\n    inputAttachment: AttachmentsProps['items'],\n  ) => {\n    if (!_.isUndefined(inputAttachment) && !_.isEqual(files, inputAttachment)) {\n      setFiles(inputAttachment);\n      setIsOpenAttachments(true);\n    }\n  };\n\n  // If the `inputAttachment` prop exists, the `files` state has to follow it.\n  useEffect(() => {\n    setFilesFromInputAttachment(inputAttachment);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputAttachment]);\n\n  useEffect(() => {\n    if (!_.isUndefined(submitKey) && input) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!_.isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitKey]);\n\n  const inputTokenCount = useTokenCount(input);\n\n  const allChatMessageString = useMemo(() => {\n    return _.map(messages, (message) => message?.content).join('');\n  }, [messages]);\n  const chatsTokenCount = useTokenCount(allChatMessageString);\n  const totalTokenCount = inputTokenCount + chatsTokenCount;\n\n  const lastAssistantMessageString = useMemo(() => {\n    const lastAssistantMessage = _.last(messages);\n    if (lastAssistantMessage?.role === 'assistant') {\n      return lastAssistantMessage?.content;\n    } else {\n      return '';\n    }\n  }, [messages]);\n\n  const lastAssistantTokenCount = useTokenCount(lastAssistantMessageString);\n  const tokenPerSecond = useMemo(() => {\n    return lastAssistantTokenCount > 0 && startTime\n      ? lastAssistantTokenCount / ((Date.now() - startTime) / 1000)\n      : 0;\n  }, [lastAssistantTokenCount, startTime]);\n\n  const items: MenuProps['items'] = filterEmptyItem([\n    showCompareMenuItem && {\n      key: 'compare',\n      label: t('chatui.CompareWithOtherModels'),\n      icon: <Scale />,\n      onClick: () => {\n        webuiNavigate(\n          `/serving?tab=chatting&endpointId=${endpointId}&modelId=${modelId}`,\n        );\n      },\n    },\n    showCompareMenuItem && {\n      type: 'divider',\n    },\n    {\n      key: 'clear',\n      danger: true,\n      label: t('chatui.DeleteChatHistory'),\n      icon: <DeleteOutlined />,\n      onClick: () => {\n        setMessages([]);\n      },\n    },\n  ]);\n\n  return (\n    <Card\n      ref={cardRef}\n      bordered\n      extra={\n        [\n          // <Checkbox key=\"sync\">Sync</Checkbox>,\n          // <Button key=\"setting\" type=\"text\" icon={<SlidersHorizontalIcon/>}></Button>,\n        ]\n      }\n      {...cardProps}\n      title={\n        <Flex direction=\"column\" align=\"stretch\" gap={'sm'}>\n          <Flex direction=\"row\" gap={'xs'}>\n            {/* <Select\n            options={[\n              {\n                label: \"Default Agent\",\n                value: \"default\",\n              },\n            ]}\n            value={\"default\"}\n            popupMatchSelectWidth={false}\n          ></Select> */}\n            {leftExtra}\n            <ModelSelect\n              models={models}\n              value={modelId}\n              onChange={setModelId}\n              allowCustomModel={allowCustomModel}\n            />\n            <Dropdown menu={{ items }} trigger={['click']}>\n              <Button\n                type=\"link\"\n                onClick={(e) => e.preventDefault()}\n                icon={<MoreOutlined />}\n                style={{ color: token.colorTextSecondary, width: token.sizeMS }}\n              />\n            </Dropdown>\n          </Flex>\n        </Flex>\n      }\n      style={{\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      styles={{\n        body: {\n          backgroundColor: token.colorFillQuaternary,\n          borderRadius: 0,\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 0,\n          height: '50%',\n          position: 'relative',\n        },\n        actions: {\n          paddingLeft: token.paddingContentHorizontal,\n          paddingRight: token.paddingContentHorizontal,\n        },\n        header: {\n          zIndex: 1,\n        },\n      }}\n      actions={[\n        <ChatSender\n          autoFocus\n          value={input}\n          placeholder=\"Say something...\"\n          header={\n            <Sender.Header\n              closable={false}\n              title={t('chatui.Attachments')}\n              open={!!isOpenAttachments && !_.isEmpty(files)}\n              onOpenChange={setIsOpenAttachments}\n              styles={{\n                content: {\n                  padding: 0,\n                },\n              }}\n            >\n              <Attachments\n                beforeUpload={() => false}\n                getDropContainer={() => cardRef.current}\n                accept=\"image/*,text/*\"\n                items={files}\n                onChange={({ fileList }) => {\n                  setFiles(fileList);\n                  onAttachmentChange?.(fileList);\n                }}\n                placeholder={(type) =>\n                  type === 'drop'\n                    ? {\n                        title: t('chatui.DropFileHere'),\n                      }\n                    : {\n                        icon: <CloudUploadOutlined />,\n                        title: t('chatui.UploadFiles'),\n                        description: t('chatui.UploadFilesDescription'),\n                      }\n                }\n              />\n            </Sender.Header>\n          }\n          prefix={\n            <Attachments\n              beforeUpload={() => false}\n              getDropContainer={() => cardRef.current}\n              accept=\"image/*,text/*\"\n              items={files}\n              onChange={({ fileList }) => {\n                setFiles(fileList);\n                onAttachmentChange?.(fileList);\n                setIsOpenAttachments(true);\n              }}\n              placeholder={(type) =>\n                type === 'drop'\n                  ? {\n                      title: t('chatui.DropFileHere'),\n                    }\n                  : {\n                      icon: <CloudUploadOutlined />,\n                      title: t('chatui.UploadFiles'),\n                      description: t('chatui.UploadFilesDescription'),\n                    }\n              }\n            >\n              <Badge dot={!_.isEmpty(files) && !isOpenAttachments}>\n                <Button type=\"text\" icon={<LinkOutlined />} />\n              </Badge>\n            </Attachments>\n          }\n          onChange={(v: string) => {\n            setInput(v);\n            if (onInputChange) {\n              onInputChange(v);\n            }\n          }}\n          loading={isLoading}\n          onStop={() => {\n            stop();\n          }}\n          onSend={() => {\n            if (input || !_.isEmpty(files)) {\n              const chatRequestOptions: ChatRequestOptions = {};\n              if (!_.isEmpty(files)) {\n                chatRequestOptions.experimental_attachments =\n                  createDataTransferFiles(files);\n              }\n              append(\n                {\n                  role: 'user',\n                  content: input,\n                },\n                chatRequestOptions,\n              );\n\n              setTimeout(() => {\n                setInput('');\n                setFiles([]);\n                setIsOpenAttachments(false);\n              }, 0);\n              onSubmitChange?.();\n            }\n          }}\n          style={{ flex: 1 }}\n        />,\n      ]}\n    >\n      <Flex\n        direction=\"row\"\n        style={{\n          padding: token.paddingSM,\n          paddingRight: token.paddingContentHorizontalLG,\n          paddingLeft: token.paddingContentHorizontalLG,\n          backgroundColor: token.colorBgContainer,\n          display:\n            (allowCustomModel && modelId === 'custom' && 'flex') || 'none',\n        }}\n      >\n        <Form\n          ref={customModelFormRef}\n          layout=\"horizontal\"\n          size=\"small\"\n          requiredMark=\"optional\"\n          style={{ flex: 1 }}\n          key={baseURL}\n          initialValues={{\n            baseURL: baseURL,\n            token: modelToken,\n          }}\n        >\n          {alert ? (\n            <div style={{ marginBottom: token.size }}>{alert}</div>\n          ) : null}\n          <Form.Item\n            label=\"baseURL\"\n            name=\"baseURL\"\n            rules={[\n              {\n                type: 'url',\n              },\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"https://domain/v1\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Model ID\"\n            name=\"modelId\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"llm-model\" />\n          </Form.Item>\n          <Form.Item label=\"Token\" name=\"token\">\n            <Input />\n          </Form.Item>\n        </Form>\n      </Flex>\n      {/* <ChatMessageList messages={messages}  /> */}\n      {!_.isEmpty(error?.message) ? (\n        <Alert\n          message={error?.message}\n          type=\"error\"\n          showIcon\n          style={{\n            margin: token.marginSM,\n          }}\n          closable\n        />\n      ) : null}\n      <VirtualChatMessageList messages={messages} isStreaming={isLoading} />\n      <Flex justify=\"end\" align=\"end\" style={{ margin: token.marginSM }}>\n        <Tag>\n          <Flex gap={'xs'}>\n            <RocketOutlined />\n            <Flex gap={'xxs'}>\n              <Typography.Text>{tokenPerSecond.toFixed(2)}</Typography.Text>\n              <Typography.Text type=\"secondary\">tok/s</Typography.Text>\n            </Flex>\n            <Flex gap={'xxs'}>\n              <Typography.Text>{totalTokenCount}</Typography.Text>\n              <Typography.Text type=\"secondary\">total tokens</Typography.Text>\n            </Flex>\n          </Flex>\n        </Tag>\n      </Flex>\n    </Card>\n  );\n};\n\nexport default LLMChatCard;\n","import { useUpdatableState } from '../../hooks';\nimport { useSuspenseTanQuery } from '../../hooks/reactQueryAlias';\nimport { useAIAgent } from '../../hooks/useAIAgent';\nimport { useBAISettingUserState } from '../../hooks/useBAISetting';\nimport AIAgentSelect from '../AIAgentSelect';\nimport EndpointSelect from '../EndpointSelect';\nimport Flex from '../Flex';\nimport { FluentEmojiIcon } from '../FluentEmojiIcon';\nimport { Model } from './ChatUIModal';\nimport LLMChatCard, { BAIModel } from './LLMChatCard';\nimport { EndpointLLMChatCard_endpoint$key } from './__generated__/EndpointLLMChatCard_endpoint.graphql';\nimport { CloseOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { AttachmentsProps } from '@ant-design/x';\nimport { Alert, Button, CardProps, Popconfirm, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { atom, useAtom } from 'jotai';\nimport _ from 'lodash';\nimport React, {\n  startTransition,\n  useEffect,\n  useId,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst synchronizedMessageState = atom<string>('');\nconst synchronizedAttachmentState = atom<AttachmentsProps['items']>();\nconst chatSubmitKeyInfoState = atom<{ id: string; key: string } | undefined>(\n  undefined,\n);\n\ninterface EndpointLLMChatCardProps extends CardProps {\n  basePath?: string;\n  closable?: boolean;\n  defaultModelId?: string;\n  defaultEndpoint?: EndpointLLMChatCard_endpoint$key;\n  defaultAgentId?: string;\n  isSynchronous?: boolean;\n  onRequestClose?: () => void;\n  onModelChange?: (modelId: string) => void;\n}\n\nconst EndpointLLMChatCard: React.FC<EndpointLLMChatCardProps> = ({\n  basePath = 'v1',\n  closable,\n  defaultModelId,\n  defaultEndpoint,\n  defaultAgentId,\n  isSynchronous,\n  onRequestClose,\n  onModelChange,\n  ...cardProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [endpointFrgmt, setEndpointFrgmt] =\n    useState<EndpointLLMChatCard_endpoint$key | null>(defaultEndpoint || null);\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointLLMChatCard_endpoint on Endpoint {\n        endpoint_id\n        url\n      }\n    `,\n    endpointFrgmt,\n  );\n  const [promisingEndpoint, setPromisingEndpoint] = useState(endpoint);\n\n  const [synchronizedMessage, setSynchronizedMessage] = useAtom(\n    synchronizedMessageState,\n  );\n  const [synchronizedAttachment, setSynchronizedAttachment] = useAtom(\n    synchronizedAttachmentState,\n  );\n\n  const [chatSubmitKeyInfo, setChatSubmitKeyInfo] = useAtom(\n    chatSubmitKeyInfoState,\n  );\n\n  const { data: modelsResult } = useSuspenseTanQuery<{\n    data: Array<Model>;\n  }>({\n    queryKey: ['models', fetchKey, endpoint?.endpoint_id],\n    queryFn: () => {\n      return endpoint?.url\n        ? fetch(\n            new URL(\n              basePath + '/models',\n              endpoint?.url ?? undefined,\n            ).toString(),\n          )\n            .then((res) => res.json())\n            .catch((e) => ({ data: [] }))\n        : Promise.resolve({ data: [] });\n    },\n  });\n\n  const models = _.map(modelsResult?.data, (m) => ({\n    id: m.id,\n    name: m.id,\n  })) as BAIModel[];\n\n  const submitId = useId();\n\n  const { agents } = useAIAgent();\n  const [agentId, setAgentId] = useState(defaultAgentId);\n  const agent = useMemo(() => {\n    return agents.find((a) => a.id === agentId);\n  }, [agents, agentId]);\n  const [experimentalAIAgents] = useBAISettingUserState(\n    'experimental_ai_agents',\n  );\n\n  useEffect(() => {\n    setAgentId(defaultAgentId);\n  }, [defaultAgentId]);\n\n  return (\n    <LLMChatCard\n      {...cardProps}\n      chatId={`${endpoint?.endpoint_id}_${agentId}`}\n      baseURL={\n        endpoint?.url\n          ? new URL(basePath, endpoint?.url ?? undefined).toString()\n          : undefined\n      }\n      models={models}\n      systemPrompt={agent?.config?.system_prompt}\n      fetchOnClient\n      leftExtra={\n        <>\n          {experimentalAIAgents && agent && (\n            <Flex gap=\"xs\">\n              <FluentEmojiIcon\n                name={agent.meta.avatar}\n                height={32}\n                width={32}\n              />\n              <AIAgentSelect\n                agents={agents}\n                value={agentId}\n                onChange={(agent) => {\n                  startTransition(() => {\n                    setAgentId(agent);\n                  });\n                }}\n              />\n            </Flex>\n          )}\n          <EndpointSelect\n            placeholder={t('chatui.SelectEndpoint')}\n            style={{\n              fontWeight: 'normal',\n            }}\n            fetchKey={fetchKey}\n            showSearch\n            loading={promisingEndpoint?.endpoint_id !== endpoint?.endpoint_id}\n            onChange={(v, endpoint) => {\n              // TODO: fix type definitions\n              // @ts-ignore\n              setPromisingEndpoint(endpoint);\n              startTransition(() => {\n                // @ts-ignore\n                setEndpointFrgmt(endpoint);\n              });\n            }}\n            value={endpoint?.endpoint_id}\n            popupMatchSelectWidth={false}\n          />\n        </>\n      }\n      modelId={\n        defaultModelId &&\n        _.includes(_.map(modelsResult?.data, 'id'), defaultModelId)\n          ? defaultModelId\n          : (modelsResult?.data?.[0]?.id ?? 'custom')\n      }\n      extra={\n        closable ? (\n          <Popconfirm\n            title={t('chatui.DeleteChattingSession')}\n            description={t('chatui.DeleteChattingSessionDescription')}\n            onConfirm={() => {\n              onRequestClose?.();\n            }}\n            okText={t('button.Delete')}\n            okButtonProps={{ danger: true }}\n          >\n            <Button\n              icon={<CloseOutlined />}\n              type=\"text\"\n              style={{ color: token.colorIcon }}\n            />\n          </Popconfirm>\n        ) : undefined\n      }\n      allowCustomModel={_.isEmpty(models)}\n      alert={\n        _.isEmpty(models) && (\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={t('chatui.CannotFindModel')}\n            action={\n              <Button\n                icon={<ReloadOutlined />}\n                onClick={() => {\n                  updateFetchKey();\n                }}\n              >\n                {t('button.Refresh')}\n              </Button>\n            }\n          />\n        )\n      }\n      inputMessage={isSynchronous ? synchronizedMessage : undefined}\n      onInputChange={(v) => {\n        setSynchronizedMessage(v);\n      }}\n      inputAttachment={isSynchronous ? synchronizedAttachment : undefined}\n      onAttachmentChange={(attachment) => {\n        setSynchronizedAttachment(attachment);\n      }}\n      submitKey={\n        chatSubmitKeyInfo?.id === submitId ? undefined : chatSubmitKeyInfo?.key\n      }\n      onSubmitChange={() => {\n        setSynchronizedMessage('');\n        setSynchronizedAttachment([]);\n        if (isSynchronous) {\n          setChatSubmitKeyInfo({\n            id: submitId,\n            key: new Date().toString(),\n          });\n        }\n      }}\n    />\n  );\n};\n\nexport default EndpointLLMChatCard;\n","import BAICard from '../components/BAICard';\nimport EndpointLLMChatCard from '../components/Chat/EndpointLLMChatCard';\nimport Flex from '../components/Flex';\nimport { ChatPageQuery } from './__generated__/ChatPageQuery.graphql';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useDynamicList } from 'ahooks';\nimport { Button, Card, Skeleton, Switch, Typography } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { StringParam, useQueryParam } from 'use-query-params';\n\ninterface ChatPageProps {}\n\nconst ChatPage: React.FC<ChatPageProps> = ({ ...props }) => {\n  const { t } = useTranslation();\n  // Set the initial list to have two items\n  const { list, remove, getKey, push } = useDynamicList(['0']);\n\n  const [isSynchronous, setSynchronous] = useState(false);\n\n  const [endpointId] = useQueryParam('endpointId', StringParam);\n  const [modelId] = useQueryParam('modelId', StringParam);\n  const [agentId] = useQueryParam('agentId', StringParam);\n  const isEmptyEndpointId = !endpointId;\n\n  const { endpoint, endpoint_list } = useLazyLoadQuery<ChatPageQuery>(\n    graphql`\n      query ChatPageQuery($endpointId: UUID!, $isEmptyEndpointId: Boolean!) {\n        endpoint(endpoint_id: $endpointId)\n          @skipOnClient(if: $isEmptyEndpointId)\n          @catch {\n          ...EndpointLLMChatCard_endpoint\n        }\n        endpoint_list(limit: 1, offset: 0) {\n          items {\n            ...EndpointLLMChatCard_endpoint\n          }\n        }\n      }\n    `,\n    {\n      endpointId: endpointId || '',\n      isEmptyEndpointId: isEmptyEndpointId,\n    },\n  );\n  return (\n    <BAICard\n      title={t('webui.menu.Chat')}\n      styles={{\n        body: {\n          overflow: 'hidden',\n        },\n      }}\n      extra={\n        <Flex direction=\"row\" gap={'xs'} wrap=\"wrap\" style={{ flexShrink: 1 }}>\n          <Flex gap={'xs'}>\n            <Typography.Text type=\"secondary\">\n              {t('chatui.SyncInput')}\n            </Typography.Text>\n            <Switch\n              value={isSynchronous}\n              onClick={(v) => {\n                setSynchronous(v);\n              }}\n            />\n            <Button\n              onClick={() => {\n                push(new Date().toString());\n              }}\n              icon={<PlusOutlined />}\n            />\n          </Flex>\n        </Flex>\n      }\n    >\n      <Flex direction=\"column\" align=\"stretch\" gap={'xs'}>\n        <Flex\n          gap={'xs'}\n          direction=\"row\"\n          style={{\n            overflow: 'auto',\n            height: 'calc(100vh - 240px)',\n          }}\n          align=\"stretch\"\n        >\n          {_.map(list, (__, index) => (\n            <Suspense\n              fallback={\n                <Card\n                  bordered\n                  style={{\n                    width: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <Skeleton active />\n                </Card>\n              }\n              key={getKey(index)}\n            >\n              <EndpointLLMChatCard\n                defaultModelId={\n                  index === 0 && endpoint.ok && modelId ? modelId : undefined\n                }\n                defaultEndpoint={\n                  index === 0 && endpoint.ok\n                    ? endpoint.value || undefined\n                    : endpoint_list?.items?.[0] || undefined\n                }\n                defaultAgentId={agentId || undefined}\n                key={getKey(index)}\n                style={{ flex: 1 }}\n                onRequestClose={() => {\n                  remove(index);\n                }}\n                closable={list.length > 1}\n                isSynchronous={isSynchronous}\n              />\n            </Suspense>\n          ))}\n        </Flex>\n      </Flex>\n    </BAICard>\n  );\n};\n\nexport default ChatPage;\n","/**\n * @generated SignedSource<<ef14120e0fd8cd740c83683d5ffc3b34>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs, Result } from \"relay-runtime\";\nexport type ChatPageQuery$variables = {\n  endpointId: string;\n  isEmptyEndpointId: boolean;\n};\nexport type ChatPageQuery$data = {\n  readonly endpoint: Result<{\n    readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n  } | null | undefined, ReadonlyArray<unknown>>;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type ChatPageQuery = {\n  response: ChatPageQuery$data;\n  variables: ChatPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isEmptyEndpointId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpointId\"\n  }\n],\nv2 = [\n  {\n    \"args\": null,\n    \"kind\": \"FragmentSpread\",\n    \"name\": \"EndpointLLMChatCard_endpoint\"\n  }\n],\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 1\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"offset\",\n    \"value\": 0\n  }\n],\nv4 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"endpoint_id\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"url\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": {\n          \"alias\": null,\n          \"args\": (v1/*: any*/),\n          \"concreteType\": \"Endpoint\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"endpoint\",\n          \"plural\": false,\n          \"selections\": (v2/*: any*/),\n          \"storageKey\": null\n        },\n        \"to\": \"RESULT\",\n        \"path\": \"endpoint\"\n      },\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v2/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"endpoint_list(limit:1,offset:0)\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v4/*: any*/),\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v4/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"endpoint_list(limit:1,offset:0)\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b78052a376d66eed6b273f0ababb32fc\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ChatPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ChatPageQuery(\\n  $endpointId: UUID!\\n  $isEmptyEndpointId: Boolean!\\n) {\\n  endpoint(endpoint_id: $endpointId) @skipOnClient(if: $isEmptyEndpointId) {\\n    ...EndpointLLMChatCard_endpoint\\n    id\\n  }\\n  endpoint_list(limit: 1, offset: 0) {\\n    items {\\n      ...EndpointLLMChatCard_endpoint\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointLLMChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b884e7f7e1919ec5de6ccff8444229c8\";\n\nexport default node;\n"],"names":["node","FluentEmojiIcon","_ref","name","height","width","icon","fluentEmoji","icons","_jsx","xmlns","viewBox","role","dangerouslySetInnerHTML","__html","body","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","hash","useAIAgent","_agentsData$agents","key","checkUpdate","useUpdatableState","data","agentsData","isLoading","useTanQuery","queryKey","queryFn","fetch","then","response","json","staleTime","agents","refresh","useCallback","makeAgentOptions","filter","map","agent","label","meta","title","value","id","toLocaleLowerCase","includes","defaultId","onSelectAgent","loading","selectPropsWithoutLoading","controllableValue","setControllableValue","useControllableValue","searchAgent","setSearchAgent","useState","isSearchPending","startSearchTransition","useTransition","Select","showSearch","onSearch","v","filterOption","options","onChange","popupMatchSelectWidth","fetchKey","lifecycleStageFilter","baiClient","useSuspendedBackendaiClient","searchStr","setSearchStr","lifecycleStageFilterStr","join","endpoint_list","endpoint","useLazyLoadQuery","_EndpointSelectQuery","require","limit","offset","supports","Boolean","undefined","endpoint_id","skipEndpoint","selectOptions","_","items","item","option","_$castArray","useTokenCount","input","arguments","length","setNum","useEffect","startTransition","async","encode","str","encodeAsync","catch","style","autoFocus","onStop","onSend","senderProps","senderRef","useRef","current","focus","Sender","ref","onSubmit","onCancel","submitType","models","allowCustomModel","selectProps","t","useTranslation","placeholder","fontWeight","groupBy","mapValues","ms","m","k","copyable","defaultIcon","props","isCopied","setIsCopied","timeout","setTimeout","clearTimeout","Tooltip","open","children","CopyToClipboard","text","onCopy","Button","CheckIcon","CopyIcon","Text","Typography","ChatMessageContent","Markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","components","p","_ref2","whiteSpace","code","className","rest","match","exec","content","String","replace","Card","type","size","extra","CopyButton","styles","padding","header","margin","CodeBlock","PreTag","language","oneLight","wrapLongLines","wrapLines","X","_ref3","SyntaxHighlighter","React","dayjs","localizedFormat","relativeTime","message","placement","containerStyle","enableExtraHover","isStreaming","token","theme","useToken","isHovered","setIsHovered","throttledMessageReasoning","useThrottle","reasoning","wait","throttledMessageContent","_jsxs","Flex","direction","justify","align","marginLeft","marginRight","gap","onMouseEnter","onMouseLeave","Avatar","fontSize","fontSizeHeading3","wrap","flex","experimental_attachments","attachment","index","contentType","border","textAlign","Image","src","url","alt","maxWidth","maxHeight","borderRadius","Attachments","FileCard","uid","description","borderColor","colorBorderSecondary","borderWidth","lineWidth","paddingTop","paddingBottom","backgroundColor","colorBgContainer","colorBgContainerDisabled","Collapse","marginTop","Spin","fontSizeSM","opacity","transition","transitionDelay","autoScroll","atBottom","lastMessageContent","onScrollToBottom","useEventNotStable","ArrowDownIcon","shape","onClick","messages","virtuosoRef","setAtBottom","overscan","window","innerHeight","Virtuoso","atBottomStateChange","atBottomThreshold","computeItemKey","followOutput","initialTopMostItemIndex","itemContent","ChatMessage","paddingLeft","paddingMD","paddingRight","Compact","position","right","transform","bottom","marginSM","ScrollBottomHandlerButton","virtuoso","scrollToIndex","behavior","_models$","endpointId","systemPrompt","chatId","baseURL","headers","credentials","apiKey","fetchOnClient","alert","leftExtra","inputMessage","inputAttachment","submitKey","onInputChange","onAttachmentChange","onSubmitChange","showCompareMenuItem","modelToken","cardProps","webuiNavigate","useWebUINavigate","isOpenAttachments","setIsOpenAttachments","files","setFiles","modelId","setModelId","valuePropName","trigger","defaultValue","customModelFormRef","cardRef","error","setInput","stop","append","setMessages","useChat","api","init","_customModelFormRef$c","_customModelFormRef$c2","_customModelFormRef$c3","JSON","parse","provider","createOpenAI","getFieldValue","result","streamText","abortSignal","signal","model","wrapLanguageModel","middleware","extractReasoningMiddleware","tagName","system","setStartTime","Date","now","toDataStreamResponse","sendReasoning","startTime","setFilesFromInputAttachment","chatRequestOptions","createDataTransferFiles","inputTokenCount","allChatMessageString","useMemo","totalTokenCount","lastAssistantMessageString","lastAssistantMessage","lastAssistantTokenCount","tokenPerSecond","filterEmptyItem","Scale","danger","DeleteOutlined","bordered","ModelSelect","Dropdown","menu","e","preventDefault","MoreOutlined","color","colorTextSecondary","sizeMS","display","flexDirection","colorFillQuaternary","actions","paddingContentHorizontal","zIndex","ChatSender","Header","closable","onOpenChange","beforeUpload","getDropContainer","accept","fileList","CloudUploadOutlined","prefix","Badge","dot","LinkOutlined","paddingSM","paddingContentHorizontalLG","Form","layout","requiredMark","initialValues","marginBottom","Item","rules","required","Input","Alert","showIcon","VirtualChatMessageList","Tag","RocketOutlined","toFixed","synchronizedMessageState","atom","synchronizedAttachmentState","chatSubmitKeyInfoState","_endpoint$url2","_agent$config","_modelsResult$data$0$","_modelsResult$data","_modelsResult$data$","basePath","defaultModelId","defaultEndpoint","defaultAgentId","isSynchronous","onRequestClose","onModelChange","updateFetchKey","endpointFrgmt","setEndpointFrgmt","useFragment","_EndpointLLMChatCard_endpoint","promisingEndpoint","setPromisingEndpoint","synchronizedMessage","setSynchronizedMessage","useAtom","synchronizedAttachment","setSynchronizedAttachment","chatSubmitKeyInfo","setChatSubmitKeyInfo","modelsResult","useSuspenseTanQuery","_endpoint$url","URL","toString","res","Promise","resolve","submitId","useId","agentId","setAgentId","find","a","experimentalAIAgents","useBAISettingUserState","LLMChatCard","config","system_prompt","_Fragment","avatar","AIAgentSelect","EndpointSelect","Popconfirm","onConfirm","okText","okButtonProps","CloseOutlined","colorIcon","action","ReloadOutlined","list","remove","getKey","push","useDynamicList","setSynchronous","useQueryParam","StringParam","isEmptyEndpointId","_ChatPageQuery","BAICard","overflow","flexShrink","Switch","PlusOutlined","__","_endpoint_list$items","Suspense","fallback","Skeleton","active","EndpointLLMChatCard","ok"],"sourceRoot":""}