{"version":3,"file":"static/js/4201.83e36242.chunk.js","mappings":"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","sources":["__generated__/LegacyFolderExplorerQuery.graphql.ts","components/FolderExplorerActions.tsx","__generated__/FolderExplorerHeaderFragment.graphql.ts","__generated__/VFolderNameTitleNodeFragment.graphql.ts","components/VFolderNameTitle.tsx","components/FolderExplorerHeader.tsx","__generated__/VFolderNodeDescriptionPermissionRefreshQuery.graphql.ts","__generated__/VFolderNodeDescriptionFragment.graphql.ts","__generated__/useVirtualFolderNodePathFragment.graphql.ts","hooks/useVirtualFolderNodePath.ts","components/BAIText.tsx","components/VirtualFolderNodeItems/VirtualFolderPath.tsx","components/VFolderNodeDescription.tsx","components/LegacyFolderExplorer.tsx"],"sourcesContent":["/**\n * @generated SignedSource<<a2c21d7438ddf2aef1bddfb4bc920d9e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type LegacyFolderExplorerQuery$variables = {\n  vfolderGlobalId: string;\n};\nexport type LegacyFolderExplorerQuery$data = {\n  readonly vfolder_node: {\n    readonly id: string;\n    readonly permission: string | null | undefined;\n    readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n    readonly unmanaged_path: string | null | undefined;\n    readonly user: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"FolderExplorerHeaderFragment\" | \"VFolderNameTitleNodeFragment\" | \"VFolderNodeDescriptionFragment\">;\n  } | null | undefined;\n};\nexport type LegacyFolderExplorerQuery = {\n  response: LegacyFolderExplorerQuery$data;\n  variables: LegacyFolderExplorerQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"vfolderGlobalId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"vfolderGlobalId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"user\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permission\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permissions\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"unmanaged_path\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"LegacyFolderExplorerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"FolderExplorerHeaderFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"VFolderNodeDescriptionFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"VFolderNameTitleNodeFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"LegacyFolderExplorerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"host\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"user_email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"group\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"group_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"creator\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage_mode\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"ownership_type\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_files\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_size\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"created_at\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"last_used\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"num_files\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"cur_size\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"cloneable\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"status\",\n            \"storageKey\": null\n          },\n          (v5/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"70bc60e3664edb7e845206f9f43f7a15\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"LegacyFolderExplorerQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query LegacyFolderExplorerQuery(\\n  $vfolderGlobalId: String!\\n) {\\n  vfolder_node(id: $vfolderGlobalId) @since(version: \\\"24.03.4\\\") {\\n    id\\n    user\\n    permission\\n    permissions\\n    unmanaged_path @since(version: \\\"25.04.0\\\")\\n    ...FolderExplorerHeaderFragment\\n    ...VFolderNodeDescriptionFragment\\n    ...VFolderNameTitleNodeFragment\\n  }\\n}\\n\\nfragment FolderExplorerHeaderFragment on VirtualFolderNode {\\n  id\\n  user\\n  permission\\n  unmanaged_path @since(version: \\\"25.04.0\\\")\\n  ...VFolderNameTitleNodeFragment\\n}\\n\\nfragment VFolderNameTitleNodeFragment on VirtualFolderNode {\\n  name\\n}\\n\\nfragment VFolderNodeDescriptionFragment on VirtualFolderNode {\\n  id\\n  host\\n  quota_scope_id\\n  user\\n  user_email\\n  group\\n  group_name\\n  creator\\n  usage_mode\\n  permission\\n  ownership_type\\n  max_files\\n  max_size\\n  created_at\\n  last_used\\n  num_files\\n  cur_size\\n  cloneable\\n  status\\n  permissions @since(version: \\\"24.09.0\\\")\\n  unmanaged_path @since(version: \\\"25.04.0\\\")\\n  ...VFolderPermissionCellFragment\\n  ...useVirtualFolderNodePathFragment\\n}\\n\\nfragment VFolderPermissionCellFragment on VirtualFolderNode {\\n  permissions\\n}\\n\\nfragment useVirtualFolderNodePathFragment on VirtualFolderNode {\\n  id\\n  host\\n  quota_scope_id\\n  user\\n  user_email\\n  group\\n  group_name\\n  creator\\n  usage_mode\\n  permission\\n  ownership_type\\n  max_files\\n  max_size\\n  created_at\\n  last_used\\n  num_files\\n  cur_size\\n  cloneable\\n  status\\n  permissions @since(version: \\\"24.09.0\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"fac0b3f862cf0dd7c3eed34c49dcb48f\";\n\nexport default node;\n","import { FolderExplorerElement } from './LegacyFolderExplorer';\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FolderAddOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\nimport { Button, Dropdown, Tooltip, theme } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport React, { RefObject } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FolderExplorerActionsProps {\n  isSelected: boolean;\n  isWritable: boolean;\n  folderExplorerRef: RefObject<FolderExplorerElement | null>;\n  size?: 'small' | 'default';\n}\n\nconst FolderExplorerActions: React.FC<FolderExplorerActionsProps> = ({\n  isSelected,\n  isWritable,\n  folderExplorerRef,\n  size = 'default',\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n\n  return (\n    <BAIFlex\n      justify=\"end\"\n      gap={token.marginSM}\n      style={{\n        right: 0,\n      }}\n    >\n      <Tooltip title={size === 'small' && t('button.Delete')}>\n        <Button\n          danger\n          disabled={!isSelected || !isWritable}\n          icon={<DeleteOutlined />}\n          onClick={() => {\n            folderExplorerRef.current?._openDeleteMultipleFileDialog();\n          }}\n        >\n          {size !== 'small' && t('button.Delete')}\n        </Button>\n      </Tooltip>\n      <Tooltip title={size === 'small' && t('button.Create')}>\n        <Button\n          disabled={!isWritable}\n          icon={<FileAddOutlined />}\n          onClick={() => {\n            folderExplorerRef.current?.openMkdirDialog();\n          }}\n        >\n          {size !== 'small' && t('button.Create')}\n        </Button>\n      </Tooltip>\n      <Dropdown\n        disabled={!isWritable}\n        menu={{\n          items: [\n            {\n              key: 'upload files',\n              label: t('data.explorer.UploadFiles'),\n              icon: <FileAddOutlined />,\n              onClick: () => {\n                folderExplorerRef.current?.handleUpload('file');\n              },\n            },\n            {\n              key: 'upload folder',\n              label: t('data.explorer.UploadFolder'),\n              icon: <FolderAddOutlined />,\n              onClick: () => {\n                folderExplorerRef.current?.handleUpload('folder');\n              },\n            },\n          ],\n        }}\n      >\n        <Tooltip title={size === 'small' && t('button.Upload')}>\n          <Button disabled={!isWritable} icon={<UploadOutlined />}>\n            {size !== 'small' && t('button.Upload')}\n          </Button>\n        </Tooltip>\n      </Dropdown>\n    </BAIFlex>\n  );\n};\n\nexport default FolderExplorerActions;\n","/**\n * @generated SignedSource<<8d1493f4510cf23db8b9cf1f125b758c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type FolderExplorerHeaderFragment$data = {\n  readonly id: string;\n  readonly permission: string | null | undefined;\n  readonly unmanaged_path: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderNameTitleNodeFragment\">;\n  readonly \" $fragmentType\": \"FolderExplorerHeaderFragment\";\n};\nexport type FolderExplorerHeaderFragment$key = {\n  readonly \" $data\"?: FolderExplorerHeaderFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"FolderExplorerHeaderFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"FolderExplorerHeaderFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"unmanaged_path\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderNameTitleNodeFragment\"\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"c06cb69b94eff82edbf4132158807449\";\n\nexport default node;\n","/**\n * @generated SignedSource<<9e3f4eb18a8d485a4e90592e0611445c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type VFolderNameTitleNodeFragment$data = {\n  readonly name: string | null | undefined;\n  readonly \" $fragmentType\": \"VFolderNameTitleNodeFragment\";\n};\nexport type VFolderNameTitleNodeFragment$key = {\n  readonly \" $data\"?: VFolderNameTitleNodeFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderNameTitleNodeFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"VFolderNameTitleNodeFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"0601031289a33a9a13a254362a2ee1ab\";\n\nexport default node;\n","import { VFolderNameTitleNodeFragment$key } from '../__generated__/VFolderNameTitleNodeFragment.graphql';\nimport { theme, Tooltip, Typography } from 'antd';\nimport { graphql, useFragment } from 'react-relay';\n\nconst VFolderNameTitle: React.FC<{\n  vfolderNodeFrgmt?: VFolderNameTitleNodeFragment$key | null;\n}> = ({ vfolderNodeFrgmt, ...props }) => {\n  const { token } = theme.useToken();\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment VFolderNameTitleNodeFragment on VirtualFolderNode {\n        name\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  return (\n    <Tooltip title={vfolderNode?.name} {...props}>\n      <Typography.Title\n        level={3}\n        style={{ marginTop: token.marginSM }}\n        ellipsis\n      >\n        {vfolderNode?.name}\n      </Typography.Title>\n    </Tooltip>\n  );\n};\n\nexport default VFolderNameTitle;\n","import { FolderExplorerHeaderFragment$key } from '../__generated__/FolderExplorerHeaderFragment.graphql';\nimport VFolderNameTitle from './VFolderNameTitle';\nimport { Button, Tooltip, Image, Skeleton, Grid, theme } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport React, { LegacyRef, Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useFragment } from 'react-relay';\n\ninterface FolderExplorerHeaderProps {\n  vfolderNodeFrgmt?: FolderExplorerHeaderFragment$key | null;\n  folderExplorerRef: LegacyRef<HTMLDivElement>;\n}\n\nconst FolderExplorerHeader: React.FC<FolderExplorerHeaderProps> = ({\n  vfolderNodeFrgmt,\n  folderExplorerRef,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { lg } = Grid.useBreakpoint();\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment FolderExplorerHeaderFragment on VirtualFolderNode {\n        id\n        user\n        permission\n        unmanaged_path @since(version: \"25.04.0\")\n        ...VFolderNameTitleNodeFragment\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  return (\n    <BAIFlex justify=\"between\" gap={token.marginMD} style={{ width: '100%' }}>\n      <BAIFlex gap={token.marginMD} style={{ flex: 1 }}>\n        <Suspense fallback={<Skeleton.Input active />}>\n          <VFolderNameTitle vfolderNodeFrgmt={vfolderNode} />\n        </Suspense>\n      </BAIFlex>\n      <BAIFlex\n        justify=\"end\"\n        gap={token.marginSM}\n        style={{\n          flex: lg ? 2 : 1,\n        }}\n      >\n        {!vfolderNode?.unmanaged_path ? (\n          <>\n            <Tooltip title={!lg && t('data.explorer.ExecuteFileBrowser')}>\n              <Button\n                icon={\n                  <Image\n                    width=\"18px\"\n                    src=\"/resources/icons/filebrowser.svg\"\n                    alt=\"File Browser\"\n                    preview={false}\n                  />\n                }\n                onClick={() =>\n                  // @ts-ignore\n                  folderExplorerRef.current?._executeFileBrowser()\n                }\n              >\n                {lg && t('data.explorer.ExecuteFileBrowser')}\n              </Button>\n            </Tooltip>\n            <Tooltip title={!lg && t('data.explorer.RunSSH/SFTPserver')}>\n              <Button\n                icon={\n                  <Image\n                    width=\"18px\"\n                    src=\"/resources/icons/sftp.png\"\n                    alt=\"SSH / SFTP\"\n                    preview={false}\n                  />\n                }\n                onClick={() => {\n                  // @ts-ignore\n                  folderExplorerRef.current?._executeSSHProxyAgent();\n                }}\n              >\n                {lg && t('data.explorer.RunSSH/SFTPserver')}\n              </Button>\n            </Tooltip>\n          </>\n        ) : null}\n      </BAIFlex>\n    </BAIFlex>\n  );\n};\n\nexport default FolderExplorerHeader;\n","/**\n * @generated SignedSource<<4ff506ca4ac35f775ddd263bb5669041>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type VFolderNodeDescriptionPermissionRefreshQuery$variables = {\n  id: string;\n};\nexport type VFolderNodeDescriptionPermissionRefreshQuery$data = {\n  readonly vfolder_node: {\n    readonly permission: string | null | undefined;\n    readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  } | null | undefined;\n};\nexport type VFolderNodeDescriptionPermissionRefreshQuery = {\n  response: VFolderNodeDescriptionPermissionRefreshQuery$data;\n  variables: VFolderNodeDescriptionPermissionRefreshQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permission\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permissions\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3aee063a4b508648c2365ba6c7f0f44a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query VFolderNodeDescriptionPermissionRefreshQuery(\\n  $id: String!\\n) {\\n  vfolder_node(id: $id) {\\n    permission\\n    permissions\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"36063c8300310d9ef6c369b49127a2a2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<462af5f9df0e58aaa2ad869af29774cb>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type VFolderNodeDescriptionFragment$data = {\n  readonly cloneable: boolean | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly creator: string | null | undefined;\n  readonly cur_size: any | null | undefined;\n  readonly group: string | null | undefined;\n  readonly group_name: string | null | undefined;\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly last_used: string | null | undefined;\n  readonly max_files: number | null | undefined;\n  readonly max_size: any | null | undefined;\n  readonly num_files: number | null | undefined;\n  readonly ownership_type: string | null | undefined;\n  readonly permission: string | null | undefined;\n  readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  readonly quota_scope_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly unmanaged_path: string | null | undefined;\n  readonly usage_mode: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderPermissionCellFragment\" | \"useVirtualFolderNodePathFragment\">;\n  readonly \" $fragmentType\": \"VFolderNodeDescriptionFragment\";\n};\nexport type VFolderNodeDescriptionFragment$key = {\n  readonly \" $data\"?: VFolderNodeDescriptionFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderNodeDescriptionFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"VFolderNodeDescriptionFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"creator\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage_mode\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"ownership_type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cur_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cloneable\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permissions\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"unmanaged_path\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderPermissionCellFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"useVirtualFolderNodePathFragment\"\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f4ca4470ea635f85c8c346eed0a5fe8c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7a027844ee7c6caf9ae1cc064636660b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type useVirtualFolderNodePathFragment$data = {\n  readonly cloneable: boolean | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly creator: string | null | undefined;\n  readonly cur_size: any | null | undefined;\n  readonly group: string | null | undefined;\n  readonly group_name: string | null | undefined;\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly last_used: string | null | undefined;\n  readonly max_files: number | null | undefined;\n  readonly max_size: any | null | undefined;\n  readonly num_files: number | null | undefined;\n  readonly ownership_type: string | null | undefined;\n  readonly permission: string | null | undefined;\n  readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  readonly quota_scope_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly usage_mode: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentType\": \"useVirtualFolderNodePathFragment\";\n};\nexport type useVirtualFolderNodePathFragment$key = {\n  readonly \" $data\"?: useVirtualFolderNodePathFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"useVirtualFolderNodePathFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"useVirtualFolderNodePathFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"creator\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage_mode\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"ownership_type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cur_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cloneable\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permissions\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"439221036e87c57ca3ec1ce737e0cdf7\";\n\nexport default node;\n","import { useVirtualFolderNodePathFragment$key } from '../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { toLocalId } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport { graphql, useFragment } from 'react-relay';\n\nexport const useVirtualFolderPath = (\n  vfolderNodeFrgmt: useVirtualFolderNodePathFragment$key,\n) => {\n  const vfolderNode = useFragment(\n    graphql`\n      fragment useVirtualFolderNodePathFragment on VirtualFolderNode {\n        id\n        host\n        quota_scope_id\n        user\n        user_email\n        group\n        group_name\n        creator\n        usage_mode\n        permission\n        ownership_type\n        max_files\n        max_size\n        created_at\n        last_used\n        num_files\n        cur_size\n        cloneable\n        status\n        permissions @since(version: \"24.09.0\")\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  const [quotaScopeType, quotaScopeIdWithoutType] = _.split(\n    vfolderNode?.quota_scope_id,\n    ':',\n  );\n  const vfolderId = toLocalId(vfolderNode?.id);\n  const vfolderIdPrefix1 = vfolderId.slice(0, 2);\n  const vfolderIdPrefix2 = vfolderId.slice(2, 4);\n  const vfolderIdRest = [vfolderId.slice(4)];\n  const vfolderPath = `${quotaScopeIdWithoutType}/${vfolderIdPrefix1}/${vfolderIdPrefix2}/${vfolderIdRest}`;\n\n  return {\n    quotaScopeType,\n    quotaScopeIdWithoutType,\n    vfolderId,\n    vfolderIdPrefix1,\n    vfolderIdPrefix2,\n    vfolderIdRest,\n    vfolderPath,\n  };\n};\n","import { Typography } from 'antd';\nimport type { TextProps as AntdTextProps } from 'antd/es/typography/Text';\nimport React from 'react';\n\nexport interface BAITextProps extends AntdTextProps {\n  monospace?: boolean;\n}\n\nconst BAIText: React.FC<BAITextProps> = ({\n  type,\n  style,\n  monospace,\n  children,\n  ...restProps\n}) => {\n  // If monospace prop is true, apply monospace font styling\n  if (monospace) {\n    return (\n      <Typography.Text\n        type={type}\n        {...restProps}\n        style={{\n          fontFamily: 'monospace',\n          ...style,\n        }}\n      >\n        {children}\n      </Typography.Text>\n    );\n  }\n\n  // For non-monospace text, pass all props directly to antd Text\n  return (\n    <Typography.Text type={type} style={style} {...restProps}>\n      {children}\n    </Typography.Text>\n  );\n};\n\nexport default BAIText;\n","import { useVirtualFolderNodePathFragment$key } from '../../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { useVirtualFolderPath } from '../../hooks/useVirtualFolderNodePath';\nimport BAIText from '../BAIText';\nimport { theme } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport React from 'react';\n\ninterface VirtualFolderPathProps {\n  vfolderNodeFrgmt: useVirtualFolderNodePathFragment$key;\n}\n\nconst VirtualFolderPath: React.FC<VirtualFolderPathProps> = ({\n  vfolderNodeFrgmt,\n}) => {\n  const {\n    quotaScopeType,\n    quotaScopeIdWithoutType,\n    vfolderId,\n    vfolderIdPrefix1,\n    vfolderIdPrefix2,\n    vfolderIdRest,\n  } = useVirtualFolderPath(vfolderNodeFrgmt);\n\n  const { token } = theme.useToken();\n\n  return (\n    <BAIFlex direction=\"row\" align=\"start\" justify=\"start\" wrap=\"wrap\" gap={3}>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        (root)\n      </BAIText>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        /\n      </BAIText>\n      <BAIFlex direction=\"column\" align=\"start\" justify=\"start\">\n        <BAIText\n          monospace\n          copyable={{\n            text: quotaScopeIdWithoutType,\n          }}\n          style={{ fontSize: '0.9em' }}\n        >\n          {_.truncate(quotaScopeIdWithoutType, { length: 15 })}\n        </BAIText>\n        <BAIText\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n          }}\n        >\n          Quota Scope ID ({_.upperFirst(quotaScopeType)})\n        </BAIText>\n      </BAIFlex>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        /\n      </BAIText>\n      <BAIFlex direction=\"column\" align=\"start\" justify=\"start\">\n        <BAIFlex gap={3}>\n          <BAIText monospace style={{ fontSize: '0.9em' }}>\n            {vfolderIdPrefix1}\n          </BAIText>\n          <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n            /\n          </BAIText>\n          <BAIText monospace style={{ fontSize: '0.9em' }}>\n            {vfolderIdPrefix2}\n          </BAIText>\n          <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n            /\n          </BAIText>\n          <BAIText\n            monospace\n            copyable={{\n              text: vfolderId,\n            }}\n            style={{ fontSize: '0.9em' }}\n          >\n            {_.truncate(vfolderIdRest.join(''), { length: 7 })}\n          </BAIText>\n        </BAIFlex>\n        <BAIText\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n          }}\n        >\n          VFolder ID\n        </BAIText>\n      </BAIFlex>\n    </BAIFlex>\n  );\n};\n\nexport default VirtualFolderPath;\n","import { VFolderNodeDescriptionFragment$key } from '../__generated__/VFolderNodeDescriptionFragment.graphql';\nimport { VFolderNodeDescriptionPermissionRefreshQuery } from '../__generated__/VFolderNodeDescriptionPermissionRefreshQuery.graphql';\nimport { useVirtualFolderNodePathFragment$key } from '../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { convertToDecimalUnit, filterOutEmpty } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport { usePainKiller } from '../hooks/usePainKiller';\nimport { useVirtualFolderPath } from '../hooks/useVirtualFolderNodePath';\nimport BAISelect from './BAISelect';\nimport BAITag from './BAITag';\nimport { statusTagColor } from './VFolderNodes';\nimport VirtualFolderPath from './VirtualFolderNodeItems/VirtualFolderPath';\nimport { CheckCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport {\n  App,\n  Descriptions,\n  theme,\n  Typography,\n  type DescriptionsProps,\n} from 'antd';\nimport { BAIUserUnionIcon, toLocalId, BAIFlex } from 'backend.ai-ui';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  graphql,\n  fetchQuery,\n  useFragment,\n  useRelayEnvironment,\n} from 'react-relay';\n\ninterface VFolderNodeDescriptionProps extends DescriptionsProps {\n  vfolderNodeFrgmt: VFolderNodeDescriptionFragment$key;\n  onRequestRefresh?: () => void;\n}\n\nconst VFolderNodeDescription: React.FC<VFolderNodeDescriptionProps> = ({\n  vfolderNodeFrgmt,\n  onRequestRefresh,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n\n  const relayEnv = useRelayEnvironment();\n  const currentProject = useCurrentProjectValue();\n  const painKiller = usePainKiller();\n  const baiClient = useSuspendedBackendaiClient();\n  const [currentUser] = useCurrentUserInfo();\n\n  const updateMutation = useTanMutation({\n    mutationFn: ({ permission, id }: { permission: string; id: string }) => {\n      return baiClient.vfolder.update_folder({ permission }, id);\n    },\n  });\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment VFolderNodeDescriptionFragment on VirtualFolderNode {\n        id\n        host\n        quota_scope_id\n        user\n        user_email\n        group\n        group_name\n        creator\n        usage_mode\n        permission\n        ownership_type\n        max_files\n        max_size\n        created_at\n        last_used\n        num_files\n        cur_size\n        cloneable\n        status\n        permissions @since(version: \"24.09.0\")\n        unmanaged_path @since(version: \"25.04.0\")\n        ...VFolderPermissionCellFragment\n        ...useVirtualFolderNodePathFragment\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  const { vfolderPath } = useVirtualFolderPath(\n    // Temporary type assertion to suppress TS error – not actually needed at runtime\n    vfolderNode as useVirtualFolderNodePathFragment$key,\n  );\n\n  const vfolderId = toLocalId(vfolderNode.id);\n\n  const items: DescriptionsProps['items'] = filterOutEmpty([\n    !vfolderNode?.unmanaged_path && {\n      key: 'path',\n      label: (\n        <Typography.Text\n          copyable={{\n            text: vfolderPath,\n          }}\n          style={{\n            color: token.colorTextLabel,\n          }}\n        >\n          {t('data.folders.Path')}\n        </Typography.Text>\n      ),\n      children: <VirtualFolderPath vfolderNodeFrgmt={vfolderNode} />,\n    },\n    {\n      key: 'status',\n      label: t('data.folders.Status'),\n      children: (\n        <BAITag\n          color={\n            vfolderNode.status\n              ? statusTagColor[\n                  vfolderNode.status as keyof typeof statusTagColor\n                ]\n              : undefined\n          }\n        >\n          {_.toUpper(vfolderNode.status || '')}\n        </BAITag>\n      ),\n    },\n    {\n      key: 'host',\n      label: t('data.Host'),\n      children: vfolderNode.host,\n    },\n    {\n      key: 'ownership_type',\n      label: t('data.folders.Ownership'),\n      children:\n        vfolderNode?.ownership_type === 'user' ? (\n          <BAIFlex gap={'xs'}>\n            <Typography.Text>{t('data.User')}</Typography.Text>\n            <UserOutlined style={{ color: token.colorTextTertiary }} />\n          </BAIFlex>\n        ) : (\n          <BAIFlex gap={'xs'}>\n            <Typography.Text>{t('data.Project')}</Typography.Text>\n            <BAIUserUnionIcon style={{ color: token.colorTextTertiary }} />\n          </BAIFlex>\n        ),\n    },\n    (vfolderNode?.user === currentUser.uuid ||\n      (baiClient.is_admin && vfolderNode?.group === currentProject?.id)) && {\n      key: 'permission',\n      label: t('data.folders.MountPermission'),\n      children: (\n        <BAISelect\n          defaultValue={\n            vfolderNode.permission === 'wd' ? 'rw' : vfolderNode.permission\n          }\n          options={[\n            { value: 'ro', label: t('data.ReadOnly') },\n            { value: 'rw', label: t('data.ReadWrite') },\n          ]}\n          onChange={(value) => {\n            updateMutation.mutate(\n              { permission: value, id: vfolderId },\n              {\n                onSuccess: () => {\n                  message.success(t('data.permission.PermissionModified'));\n                  document.dispatchEvent(\n                    new CustomEvent('backend-ai-folder-updated'),\n                  );\n\n                  // To update GraphQL relay node\n                  fetchQuery<VFolderNodeDescriptionPermissionRefreshQuery>(\n                    relayEnv,\n                    graphql`\n                      query VFolderNodeDescriptionPermissionRefreshQuery(\n                        $id: String!\n                      ) {\n                        vfolder_node(id: $id) {\n                          permission\n                          permissions\n                        }\n                      }\n                    `,\n                    {\n                      id: vfolderNode.id,\n                    },\n                  ).toPromise();\n                  onRequestRefresh?.();\n                },\n                onError: (error: { message: string }) => {\n                  message.error(painKiller.relieve(error?.message));\n                },\n              },\n            );\n          }}\n          popupMatchSelectWidth={false}\n        />\n      ),\n    },\n    {\n      key: 'owner',\n      label: t('data.folders.Owner'),\n      children:\n        vfolderNode?.user === currentUser?.uuid ||\n        (baiClient.is_admin && vfolderNode?.group === currentProject?.id) ? (\n          <BAIFlex justify=\"start\">\n            <CheckCircleOutlined />\n          </BAIFlex>\n        ) : null,\n    },\n    vfolderNode.user_email !== null && {\n      key: 'user_email',\n      label: t('data.User'),\n      children: (\n        <Typography.Text copyable>{vfolderNode.user_email}</Typography.Text>\n      ),\n    },\n    vfolderNode.group_name !== null && {\n      key: 'group_name',\n      label: t('data.Project'),\n      children: vfolderNode.group_name,\n    },\n    {\n      key: 'cloneable',\n      label: t('data.folders.Cloneable'),\n      children: vfolderNode.cloneable ? (\n        <BAIFlex justify=\"start\">\n          <CheckCircleOutlined />\n        </BAIFlex>\n      ) : null,\n    },\n    {\n      key: 'max_size',\n      label: t('data.folders.MaxSize'),\n      children: vfolderNode.max_size\n        ? convertToDecimalUnit(vfolderNode.max_size, 'g', 2)?.displayValue\n        : '∞',\n    },\n    {\n      key: 'usage',\n      label: t('data.UsageMode'),\n      children: vfolderNode.usage_mode,\n    },\n    {\n      key: 'created_at',\n      label: t('data.folders.CreatedAt'),\n      children: dayjs(vfolderNode.created_at).format('lll'),\n    },\n  ]);\n\n  return (\n    <Descriptions\n      bordered\n      column={1}\n      size=\"small\"\n      items={items}\n      styles={{\n        content: {\n          wordBreak: 'break-word',\n          overflowWrap: 'break-word',\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default VFolderNodeDescription;\n","import { LegacyFolderExplorerQuery } from '../__generated__/LegacyFolderExplorerQuery.graphql';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport FolderExplorerActions from './FolderExplorerActions';\nimport FolderExplorerHeader from './FolderExplorerHeader';\nimport VFolderNodeDescription from './VFolderNodeDescription';\nimport { Alert, Grid, Splitter, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport { toGlobalId, BAIFlex } from 'backend.ai-ui';\nimport { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  baiModalHeader: css`\n    .ant-modal-title {\n      width: 100%;\n      margin-right: ${token.marginXXL}px;\n    }\n  `,\n}));\n\ninterface LegacyFolderExplorerProps extends BAIModalProps {\n  vfolderID: string;\n  onRequestClose: () => void;\n}\nexport interface FolderExplorerElement extends HTMLDivElement {\n  _fetchVFolder: () => void;\n  _openDeleteMultipleFileDialog: () => void;\n  openMkdirDialog: () => void;\n  handleUpload: (name: 'file' | 'folder') => void;\n}\n\nconst LegacyFolderExplorer: React.FC<LegacyFolderExplorerProps> = ({\n  vfolderID,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { token } = theme.useToken();\n  const { styles } = useStyles();\n  const { xl } = Grid.useBreakpoint();\n\n  const { t } = useTranslation();\n  const [isWritable, setIsWritable] = useState<boolean>(false);\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  // TODO: Events are sent and received as normal,\n  // but the Lit Element is not rendered and the values inside are not available but ref is available.\n  const folderExplorerRef = useRef<FolderExplorerElement>(null);\n\n  // ensure the client is connected\n  useSuspendedBackendaiClient();\n  useEffect(() => {\n    const handleConnected = (e: any) => {\n      setIsWritable(e.detail || false);\n    };\n\n    const handleColumnSelected = (e: any) => {\n      setIsSelected(e.detail || false);\n    };\n\n    document.addEventListener('folderExplorer:connected', handleConnected);\n    document.addEventListener(\n      'folderExplorer:columnSelected',\n      handleColumnSelected,\n    );\n    return () => {\n      document.removeEventListener('folderExplorer:connected', handleConnected);\n      document.removeEventListener(\n        'folderExplorer:columnSelected',\n        handleColumnSelected,\n      );\n    };\n  }, []);\n\n  const { vfolder_node } = useLazyLoadQuery<LegacyFolderExplorerQuery>(\n    graphql`\n      query LegacyFolderExplorerQuery($vfolderGlobalId: String!) {\n        vfolder_node(id: $vfolderGlobalId) @since(version: \"24.03.4\") {\n          id\n          user\n          permission\n          permissions\n          unmanaged_path @since(version: \"25.04.0\")\n          ...FolderExplorerHeaderFragment\n          ...VFolderNodeDescriptionFragment\n          ...VFolderNameTitleNodeFragment\n        }\n      }\n    `,\n    {\n      vfolderGlobalId: toGlobalId('VirtualFolderNode', vfolderID),\n    },\n    {\n      fetchPolicy: modalProps.open ? 'network-only' : 'store-only',\n    },\n  );\n\n  // TODO: Skip permission check due to inaccurate API response. Update when API is fixed.\n  const hasNoPermissions = false;\n  // !vfolder_node || (vfolder_node.permissions?.length || 0) === 0;\n\n  const legacyFolderExplorerPane = vfolder_node && (\n    <BAIFlex direction=\"column\" align=\"stretch\">\n      {vfolder_node?.unmanaged_path ? (\n        <Alert\n          message={t('explorer.NoExplorerSupportForUnmanagedFolder')}\n          showIcon\n        />\n      ) : !hasNoPermissions ? (\n        <>\n          <FolderExplorerActions\n            isSelected={isSelected}\n            isWritable={isWritable}\n            folderExplorerRef={folderExplorerRef}\n            size={xl ? 'default' : 'small'}\n          />\n          {/* @ts-ignore */}\n          <backend-ai-folder-explorer\n            ref={folderExplorerRef}\n            active\n            vfolderID={vfolderID}\n          />\n        </>\n      ) : null}\n    </BAIFlex>\n  );\n\n  const vfolderDescription = vfolder_node && (\n    <VFolderNodeDescription\n      vfolderNodeFrgmt={vfolder_node}\n      onRequestRefresh={() => {\n        folderExplorerRef.current?._fetchVFolder();\n      }}\n    />\n  );\n\n  return (\n    <BAIModal\n      className={styles.baiModalHeader}\n      centered\n      width={'90%'}\n      destroyOnClose\n      footer={null}\n      title={\n        vfolder_node ? (\n          <FolderExplorerHeader\n            vfolderNodeFrgmt={vfolder_node}\n            folderExplorerRef={folderExplorerRef}\n          />\n        ) : null\n      }\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      {!vfolder_node ? (\n        <Alert\n          message={t('explorer.FolderNotFoundOrNoAccess')}\n          type=\"error\"\n          showIcon\n        />\n      ) : hasNoPermissions ? (\n        <Alert message={t('explorer.NoPermissions')} type=\"error\" showIcon />\n      ) : null}\n      {vfolder_node ? (\n        xl ? (\n          <Splitter\n            style={{\n              gap: token.size,\n              alignSelf: 'stretch',\n            }}\n          >\n            <Splitter.Panel resizable={false}>\n              {legacyFolderExplorerPane}\n            </Splitter.Panel>\n            <Splitter.Panel defaultSize={500} min={300} max={'40%'}>\n              {vfolderDescription}\n            </Splitter.Panel>\n          </Splitter>\n        ) : (\n          <BAIFlex direction=\"column\" align=\"stretch\" gap={'md'}>\n            {legacyFolderExplorerPane}\n            {vfolderDescription}\n          </BAIFlex>\n        )\n      ) : null}\n    </BAIModal>\n  );\n};\n\nexport default LegacyFolderExplorer;\n"],"names":["node","v0","v1","v2","v3","v4","v5","v6","hash","_ref","isSelected","isWritable","folderExplorerRef","size","token","theme","useToken","t","useTranslation","_jsxs","BAIFlex","justify","gap","marginSM","style","right","children","_jsx","Tooltip","title","Button","danger","disabled","icon","DeleteOutlined","onClick","_folderExplorerRef$cu","current","_openDeleteMultipleFileDialog","FileAddOutlined","_folderExplorerRef$cu2","openMkdirDialog","Dropdown","menu","items","key","label","_folderExplorerRef$cu3","handleUpload","FolderAddOutlined","_folderExplorerRef$cu4","UploadOutlined","vfolderNodeFrgmt","props","vfolderNode","useFragment","_VFolderNameTitleNodeFragment","name","Typography","Title","level","marginTop","ellipsis","lg","Grid","useBreakpoint","_FolderExplorerHeaderFragment","marginMD","width","flex","Suspense","fallback","Skeleton","Input","active","VFolderNameTitle","unmanaged_path","_Fragment","Image","src","alt","preview","_executeFileBrowser","_executeSSHProxyAgent","useVirtualFolderPath","_useVirtualFolderNodePathFragment","quotaScopeType","quotaScopeIdWithoutType","_","quota_scope_id","vfolderId","toLocalId","id","vfolderIdPrefix1","slice","vfolderIdPrefix2","vfolderIdRest","vfolderPath","type","monospace","restProps","Text","fontFamily","direction","align","wrap","BAIText","fontSize","copyable","text","length","fontSizeSM","join","_convertToDecimalUnit","onRequestRefresh","message","App","useApp","relayEnv","useRelayEnvironment","currentProject","useCurrentProjectValue","painKiller","usePainKiller","baiClient","useSuspendedBackendaiClient","currentUser","useCurrentUserInfo","updateMutation","useTanMutation","mutationFn","_ref2","permission","vfolder","update_folder","_VFolderNodeDescriptionFragment","filterOutEmpty","color","colorTextLabel","VirtualFolderPath","BAITag","status","statusTagColor","undefined","host","ownership_type","UserOutlined","colorTextTertiary","BAIUserUnionIcon","user","uuid","is_admin","group","BAISelect","defaultValue","options","value","onChange","mutate","onSuccess","success","document","dispatchEvent","CustomEvent","fetchQuery","_VFolderNodeDescriptionPermissionRefreshQuery","toPromise","onError","error","relieve","popupMatchSelectWidth","CheckCircleOutlined","user_email","group_name","cloneable","max_size","convertToDecimalUnit","displayValue","usage_mode","dayjs","created_at","format","Descriptions","bordered","column","styles","content","wordBreak","overflowWrap","useStyles","createStyles","css","baiModalHeader","marginXXL","vfolderID","onRequestClose","modalProps","xl","setIsWritable","useState","setIsSelected","useRef","useEffect","handleConnected","e","detail","handleColumnSelected","addEventListener","removeEventListener","vfolder_node","useLazyLoadQuery","_LegacyFolderExplorerQuery","vfolderGlobalId","toGlobalId","fetchPolicy","open","legacyFolderExplorerPane","Alert","showIcon","FolderExplorerActions","ref","vfolderDescription","VFolderNodeDescription","_fetchVFolder","BAIModal","className","centered","destroyOnClose","footer","FolderExplorerHeader","onCancel","Splitter","alignSelf","Panel","resizable","defaultSize","min","max"],"sourceRoot":""}