{"version":3,"file":"static/js/2871.f754acb2.chunk.js","mappings":"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","sources":["components/EndpointOwnerInfo.tsx","components/EndpointStatusTag.tsx","components/TableColumnsSettingModal.tsx","components/__generated__/EndpointOwnerInfoFragment.graphql.ts","components/__generated__/EndpointStatusTagFragment.graphql.ts","pages/EndpointListPage.tsx","pages/__generated__/EndpointListPageQuery.graphql.ts"],"sourcesContent":["import { useSuspendedBackendaiClient } from '../hooks';\nimport { EndpointOwnerInfoFragment$key } from './__generated__/EndpointOwnerInfoFragment.graphql';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Tooltip, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointOwnerInfoProps {\n  endpointFrgmt: EndpointOwnerInfoFragment$key | null | undefined;\n}\nconst EndpointOwnerInfo: React.FC<EndpointOwnerInfoProps> = ({\n  endpointFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointOwnerInfoFragment on Endpoint {\n        id\n        created_user_email @since(version: \"23.09.8\")\n        session_owner_email @since(version: \"23.09.8\")\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  if (!baiClient.supports('model-serving-endpoint-user-info'))\n    return baiClient.email || '';\n  if (endpoint?.created_user_email === endpoint?.session_owner_email)\n    return endpoint?.session_owner_email || '';\n  else\n    return (\n      <>\n        {endpoint?.session_owner_email || ''}\n        <Tooltip\n          title={t('modelService.ServiceDelegatedFrom', {\n            createdUser: endpoint?.created_user_email || '',\n            sessionOwner: endpoint?.session_owner_email || '',\n          })}\n        >\n          <Button\n            size=\"small\"\n            type=\"text\"\n            icon={<QuestionCircleOutlined />}\n            style={{ color: token.colorTextSecondary }}\n          />\n        </Tooltip>\n      </>\n    );\n};\n\nexport default EndpointOwnerInfo;\n","import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null | undefined;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","/**\n * @generated SignedSource<<247fee0740f2e92821882fde613f0c58>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointOwnerInfoFragment$data = {\n  readonly created_user_email: string | null | undefined;\n  readonly id: string | null | undefined;\n  readonly session_owner_email: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointOwnerInfoFragment\";\n};\nexport type EndpointOwnerInfoFragment$key = {\n  readonly \" $data\"?: EndpointOwnerInfoFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointOwnerInfoFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_owner_email\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"fb21a441c8873205b5092ae1a5a7157e\";\n\nexport default node;\n","/**\n * @generated SignedSource<<9520b09b196edae5bc04bac14b48331f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","import EndpointOwnerInfo from '../components/EndpointOwnerInfo';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport Flex from '../components/Flex';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport { baiSignedRequestWithPromise } from '../helper';\nimport {\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n  useWebUINavigate,\n} from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\n// import { getSortOrderByName } from '../hooks/reactPaginationQueryOptions';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport {\n  EndpointListPageQuery,\n  EndpointListPageQuery$data,\n} from './__generated__/EndpointListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useRafInterval } from 'ahooks';\nimport { useLocalStorageState } from 'ahooks';\nimport { Button, Table, Typography, theme, Radio, App } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n  useDeferredValue,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { Link } from 'react-router-dom';\n\nexport type Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<EndpointListPageQuery$data>['endpoint_list']\n    >['items']\n  >[0]\n>;\n\nexport const isDestroyingStatus = (\n  desiredSessionCount: number | null | undefined,\n  status: string | null | undefined,\n) => {\n  return (\n    (desiredSessionCount ?? 0) < 0 ||\n    _.includes(['DESTROYED', 'DESTROYING'], status ?? '')\n  );\n};\n\ntype LifecycleStage = 'created&destroying' | 'destroyed';\n\nconst EndpointListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const { message, modal } = App.useApp();\n  const baiClient = useSuspendedBackendaiClient();\n  const webuiNavigate = useWebUINavigate();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [selectedLifecycleStage, setSelectedLifecycleStage] =\n    useState<LifecycleStage>('created&destroying');\n  const deferredSelectedLifecycleStage = useDeferredValue(\n    selectedLifecycleStage,\n  );\n  const [paginationState, setPaginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const deferredPaginationState = useDeferredValue(paginationState);\n  const isPendingPaginationAndFilter =\n    selectedLifecycleStage !== deferredSelectedLifecycleStage ||\n    paginationState !== deferredPaginationState;\n  const lifecycleStageFilter =\n    deferredSelectedLifecycleStage === 'created&destroying'\n      ? `lifecycle_stage == \"created\" | lifecycle_stage == \"destroying\"`\n      : `lifecycle_stage == \"${deferredSelectedLifecycleStage}\"`;\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [optimisticDeletingId, setOptimisticDeletingId] = useState<\n    string | null\n  >();\n\n  const [currentUser] = useCurrentUserInfo();\n\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  const columns: ColumnsType<Endpoint> = [\n    {\n      title: t('modelService.EndpointName'),\n      dataIndex: 'endpoint_id',\n      key: 'endpointName',\n      fixed: 'left',\n      render: (endpoint_id, row) => (\n        <Link to={'/serving/' + endpoint_id}>{row.name}</Link>\n      ),\n    },\n    {\n      title: t('modelService.EndpointId'),\n      dataIndex: 'endpoint_id',\n      key: 'endpoint_id',\n      width: 310,\n      render: (endpoint_id) => (\n        <Typography.Text code>{endpoint_id}</Typography.Text>\n      ),\n    },\n    {\n      title: t('modelService.ServiceEndpoint'),\n      dataIndex: 'endpoint_id',\n      key: 'url',\n      render: (endpoint_id, row) =>\n        row.url ? (\n          <Typography.Link copyable href={row.url} target=\"_blank\">\n            {row.url}\n          </Typography.Link>\n        ) : (\n          '-'\n        ),\n    },\n    {\n      title: t('modelService.Controls'),\n      dataIndex: 'controls',\n      key: 'controls',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            style={\n              isDestroyingStatus(row?.desired_session_count, row?.status) ||\n              (!!row.created_user_email &&\n                row.created_user_email !== currentUser.email)\n                ? {\n                    color: token.colorTextDisabled,\n                  }\n                : {\n                    color: token.colorInfo,\n                  }\n            }\n            disabled={\n              isDestroyingStatus(row?.desired_session_count, row?.status) ||\n              (!!row.created_user_email &&\n                row.created_user_email !== currentUser.email)\n            }\n            onClick={() => {\n              webuiNavigate('/service/update/' + row.endpoint_id);\n            }}\n          />\n          <Button\n            type=\"text\"\n            icon={\n              <DeleteOutlined\n                style={\n                  isDestroyingStatus(row?.desired_session_count, row?.status)\n                    ? undefined\n                    : {\n                        color: token.colorError,\n                      }\n                }\n              />\n            }\n            loading={\n              terminateModelServiceMutation.isPending &&\n              optimisticDeletingId === row.endpoint_id\n            }\n            disabled={isDestroyingStatus(\n              row?.desired_session_count,\n              row?.status,\n            )}\n            onClick={() => {\n              modal.confirm({\n                title: t('dialog.ask.DoYouWantToDeleteSomething', {\n                  name: row.name,\n                }),\n                content: t('dialog.warning.CannotBeUndone'),\n                okText: t('button.Delete'),\n                okButtonProps: {\n                  danger: true,\n                  type: 'primary',\n                },\n                onOk: () => {\n                  setOptimisticDeletingId(row.endpoint_id);\n                  // FIXME: any better idea for handling result?\n                  row.endpoint_id &&\n                    terminateModelServiceMutation.mutate(row.endpoint_id, {\n                      onSuccess: (res) => {\n                        startRefetchTransition(() => {\n                          updateServicesFetchKey();\n                        });\n                        // FIXME: temporally refer to mutate input to message\n                        if (res.success) {\n                          message.success(\n                            t('modelService.ServiceTerminated', {\n                              name: row?.name,\n                            }),\n                          );\n                        } else {\n                          message.error(\n                            t('modelService.FailedToTerminateService'),\n                          );\n                        }\n                      },\n                      onError: (err) => {\n                        message.error(\n                          t('modelService.FailedToTerminateService'),\n                        );\n                      },\n                    });\n                },\n              });\n            }}\n          />\n        </Flex>\n      ),\n    },\n    {\n      title: t('modelService.Status'),\n      key: 'status',\n      render: (text, row) => <EndpointStatusTag endpointFrgmt={row} />,\n    },\n    ...(baiClient.is_admin\n      ? [\n          {\n            title: t('modelService.Owner'),\n            // created_user_email is referred by EndpointOwnerInfoFragment\n            dataIndex: 'created_user_email',\n            key: 'session_owner',\n            render: (_: string, endpoint_info: Endpoint) => (\n              <EndpointOwnerInfo endpointFrgmt={endpoint_info} />\n            ),\n          },\n        ]\n      : []),\n    {\n      title: t('modelService.CreatedAt'),\n      dataIndex: 'created_at',\n      key: 'createdAt',\n      render: (created_at) => {\n        return dayjs(created_at).format('ll LT');\n      },\n      defaultSortOrder: 'descend',\n      sortDirections: ['descend', 'ascend', 'descend'],\n      sorter: (a, b) => {\n        const date1 = dayjs(a.created_at);\n        const date2 = dayjs(b.created_at);\n        return date1.diff(date2);\n      },\n    },\n    {\n      title: t('modelService.DesiredSessionCount'),\n      dataIndex: 'desired_session_count',\n      key: 'desiredSessionCount',\n      render: (desired_session_count) => {\n        return desired_session_count < 0 ? '-' : desired_session_count;\n      },\n    },\n    {\n      title: (\n        <Flex direction=\"column\" align=\"start\">\n          {t('modelService.RoutingsCount')}\n          <br />\n          <Typography.Text type=\"secondary\" style={{ fontWeight: 'normal' }}>\n            ({t('modelService.Active/Total')})\n          </Typography.Text>\n        </Flex>\n      ),\n      // dataIndex: \"active_route_count\",\n      key: 'routingCount',\n      render: (text, row) => {\n        return (\n          _.filter(row.routings, (r) => r?.status === 'HEALTHY').length +\n          ' / ' +\n          row.routings?.length\n        );\n        // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n      },\n    },\n    {\n      title: t('modelService.Public'),\n      key: 'public',\n      render: (text, row) =>\n        row.open_to_public ? (\n          <CheckOutlined style={{ color: token.colorSuccess }} />\n        ) : (\n          <CloseOutlined style={{ color: token.colorTextSecondary }} />\n        ),\n    },\n  ];\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.EndpointListPage.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    useLazyLoadQuery<EndpointListPageQuery>(\n      graphql`\n        query EndpointListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n          $filter: String\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: $filter\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              model\n              domain\n              status\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              created_at @since(version: \"23.09.0\")\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              runtime_variant @since(version: \"24.03.5\") {\n                name\n                human_readable_name\n              }\n              created_user_email @since(version: \"23.09.8\")\n              ...EndpointOwnerInfoFragment\n              ...EndpointStatusTagFragment\n            }\n          }\n        }\n      `,\n      {\n        offset:\n          (deferredPaginationState.current - 1) *\n          deferredPaginationState.pageSize,\n        limit: deferredPaginationState.pageSize,\n        projectID: curProject.id,\n        filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n          ? lifecycleStageFilter\n          : undefined,\n      },\n      {\n        fetchPolicy: 'network-only',\n        fetchKey: servicesFetchKey,\n      },\n    );\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, 'name');\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation<\n    {\n      success?: boolean;\n    },\n    unknown,\n    string\n  >({\n    mutationFn: (endpoint_id) => {\n      return baiSignedRequestWithPromise({\n        method: 'DELETE',\n        url: '/services/' + endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        wrap=\"wrap\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex direction=\"column\" align=\"start\">\n          {baiClient.supports('endpoint-lifecycle-stage-filter') && (\n            <Radio.Group\n              value={selectedLifecycleStage}\n              onChange={(e) => {\n                setSelectedLifecycleStage(e.target?.value);\n                // reset pagination state when filter changes\n                setPaginationState({\n                  current: 1,\n                  pageSize: paginationState.pageSize,\n                });\n              }}\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n              options={[\n                {\n                  label: 'Active',\n                  value: 'created&destroying',\n                },\n                {\n                  label: 'Destroyed',\n                  value: 'destroyed',\n                },\n              ]}\n            />\n          )}\n        </Flex>\n        <Flex direction=\"row\" gap={'xs'} wrap=\"wrap\" style={{ flexShrink: 1 }}>\n          <Flex gap={'xs'}>\n            <Button\n              icon={<ReloadOutlined />}\n              loading={isRefetchPending}\n              onClick={() => {\n                startRefetchTransition(() => updateServicesFetchKey());\n              }}\n            />\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                webuiNavigate('/service/start');\n              }}\n            >\n              {t('modelService.StartService')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Table\n        loading={{\n          spinning: isPendingPaginationAndFilter,\n          indicator: <LoadingOutlined />,\n        }}\n        scroll={{ x: 'max-content' }}\n        rowKey={'endpoint_id'}\n        dataSource={(sortedEndpointList || []) as Endpoint[]}\n        columns={columns.filter((column) =>\n          displayedColumnKeys?.includes(_.toString(column.key)),\n        )}\n        pagination={{\n          pageSize: paginationState.pageSize,\n          current: paginationState.current,\n          pageSizeOptions: ['10', '20', '50'],\n          total: modelServiceList?.total_count || 0,\n          showSizeChanger: true,\n          onChange(page, pageSize) {\n            setPaginationState({\n              current: page,\n              pageSize: pageSize,\n            });\n          },\n          style: { marginRight: token.marginXS },\n        }}\n      />\n      <Flex\n        justify=\"end\"\n        style={{\n          padding: token.paddingXXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            setIsOpenColumnsSetting(true);\n          }}\n        />\n      </Flex>\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(!isOpenColumnsSetting);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </Flex>\n  );\n};\n\nexport default EndpointListPage;\n","/**\n * @generated SignedSource<<f737c042a6b2b092598eb55c3b8e1839>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointListPageQuery$variables = {\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n};\nexport type EndpointListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly created_user_email: string | null | undefined;\n      readonly desired_session_count: number;\n      readonly domain: string | null | undefined;\n      readonly endpoint_id: string | null | undefined;\n      readonly model: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly open_to_public: boolean | null | undefined;\n      readonly project: string | null | undefined;\n      readonly resource_group: string | null | undefined;\n      readonly resource_slots: any | null | undefined;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null | undefined;\n        readonly routing_id: string | null | undefined;\n        readonly session: string | null | undefined;\n        readonly status: string | null | undefined;\n        readonly traffic_ratio: number | null | undefined;\n      } | null | undefined> | null | undefined;\n      readonly runtime_variant: {\n        readonly human_readable_name: string | null | undefined;\n        readonly name: string | null | undefined;\n      } | null | undefined;\n      readonly status: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\" | \"EndpointStatusTagFragment\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointListPageQuery = {\n  response: EndpointListPageQuery$data;\n  variables: EndpointListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"RuntimeVariantInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"runtime_variant\",\n  \"plural\": false,\n  \"selections\": [\n    (v6/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"human_readable_name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_user_email\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v17/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v22/*: any*/),\n              (v23/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointOwnerInfoFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointStatusTagFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v1/*: any*/),\n      (v3/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v10/*: any*/),\n                  (v24/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v22/*: any*/),\n              (v23/*: any*/),\n              (v24/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"session_owner_email\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"44748285f349a9d059efd5b64975c446\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      model\\n      domain\\n      status\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      created_at @since(version: \\\"23.09.0\\\")\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      runtime_variant @since(version: \\\"24.03.5\\\") {\\n        name\\n        human_readable_name\\n      }\\n      created_user_email @since(version: \\\"23.09.8\\\")\\n      ...EndpointOwnerInfoFragment\\n      ...EndpointStatusTagFragment\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointOwnerInfoFragment on Endpoint {\\n  id\\n  created_user_email @since(version: \\\"23.09.8\\\")\\n  session_owner_email @since(version: \\\"23.09.8\\\")\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"114c24611862a1a2577a867b9bc71359\";\n\nexport default node;\n"],"names":["_ref","endpointFrgmt","t","useTranslation","token","theme","useToken","baiClient","useSuspendedBackendaiClient","endpoint","useFragment","_EndpointOwnerInfoFragment","require","supports","created_user_email","session_owner_email","_jsxs","_Fragment","children","_jsx","Tooltip","title","createdUser","sessionOwner","Button","size","type","icon","QuestionCircleOutlined","style","color","colorTextSecondary","email","_endpoint$status","_EndpointStatusTagFragment","status","toUpperCase","Tag","open","onRequestClose","columns","displayedColumnKeys","modalProps","formRef","useRef","columnOptions","map","column","label","value","_","key","element","React","props","child","undefined","BAIModal","destroyOnClose","centered","onOk","_formRef$current","current","validateFields","then","values","catch","onCancel","Form","ref","preserve","initialValues","selectedColumnKeys","columnOption","layout","Item","name","marginBottom","Input","prefix","SearchOutlined","marginSM","placeholder","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","includes","display","height","overflowY","Checkbox","Group","options","flexDirection","node","isDestroyingStatus","desiredSessionCount","message","modal","App","useApp","webuiNavigate","useWebUINavigate","curProject","useCurrentProjectValue","isOpenColumnsSetting","setIsOpenColumnsSetting","useState","selectedLifecycleStage","setSelectedLifecycleStage","deferredSelectedLifecycleStage","useDeferredValue","paginationState","setPaginationState","pageSize","deferredPaginationState","isPendingPaginationAndFilter","lifecycleStageFilter","isRefetchPending","startRefetchTransition","useTransition","servicesFetchKey","updateServicesFetchKey","useUpdatableState","optimisticDeletingId","setOptimisticDeletingId","currentUser","useCurrentUserInfo","dataIndex","fixed","render","endpoint_id","row","Link","to","width","Typography","Text","code","url","copyable","href","target","text","Flex","direction","align","SettingOutlined","desired_session_count","colorTextDisabled","colorInfo","disabled","onClick","DeleteOutlined","colorError","loading","terminateModelServiceMutation","isPending","confirm","content","okText","okButtonProps","danger","mutate","onSuccess","res","success","error","onError","err","EndpointStatusTag","is_admin","endpoint_info","EndpointOwnerInfo","created_at","dayjs","format","defaultSortOrder","sortDirections","sorter","a","b","date1","date2","diff","fontWeight","_row$routings","routings","r","length","open_to_public","CheckOutlined","colorSuccess","CloseOutlined","setDisplayedColumnKeys","useLocalStorageState","defaultValue","useRafInterval","startTransitionWithoutPendingState","endpoint_list","modelServiceList","useLazyLoadQuery","_EndpointListPageQuery","offset","limit","projectID","id","filter","fetchPolicy","fetchKey","sortedEndpointList","items","useTanMutation","mutationFn","baiSignedRequestWithPromise","method","client","justify","wrap","gap","padding","paddingContentVertical","paddingLeft","paddingContentHorizontalSM","paddingRight","Radio","onChange","e","_e$target","optionType","buttonStyle","flexShrink","ReloadOutlined","Table","spinning","indicator","LoadingOutlined","scroll","x","rowKey","dataSource","pagination","pageSizeOptions","total","total_count","showSizeChanger","page","marginRight","marginXS","paddingXXS","TableColumnsSettingModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","hash"],"sourceRoot":""}