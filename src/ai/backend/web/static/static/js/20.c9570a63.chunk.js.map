{"version":3,"file":"static/js/20.c9570a63.chunk.js","mappings":"6NAqBA,EAb0C,SAAHA,GAA2B,IAADC,EAAjBC,EAAUC,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAAL,GAAAA,IACxD,OACEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,S,01BACAC,EAAAA,EAAAA,KAACC,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACJC,SAA6B,QAArBX,EAAEC,EAAWU,gBAAQ,IAAAX,GAAAA,EAC7BY,UAAU,aACNX,MAIZ,C,gMCCO,SAASY,EACdC,EACAC,GAIA,IAAMC,GAAiBN,EAAAA,EAAAA,GAAA,GAAQK,GAsC/B,OAhEF,SAAyBE,GAKvB,IAJA,IAGIC,EAHEC,EAAU,qDACVC,EAAa,GAGqB,QAAhCF,EAASC,EAAQE,KAAKJ,KAAgB,CAC5C,IAAAK,EACEJ,EAAMK,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GADDG,EAAcF,EAAA,GAAEG,EAASH,EAAA,GAAEI,EAASJ,EAAA,GAAEK,EAAYL,EAAA,GAAEM,EAAaN,EAAA,GAExEH,EAAWU,KAAK,CACdJ,UAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,cAAAA,EACAJ,eAAAA,GAEJ,CAEA,OAAOL,CACT,CASqBW,CAAgBjB,GACxBkB,SAAQ,SAACL,GAClB,GAC0B,iBAAxBA,EAAUA,WACiB,OAA3BA,EAAUC,eAWRd,GARAa,EAAUE,gBAC2C,IAApDd,EAAUY,EAAUE,cAAcI,UAAU,KACf,SAA5BN,EAAUE,cAMJf,EAAMoB,QACZP,EAAUF,eACVE,EAAUF,eAAeS,QACvB,sDACA,KAPIpB,EAAMoB,QAAQP,EAAUF,eAAgB,IAchDE,EAAUE,cAAcM,WAAW,MACa,IAAhDrB,EAAMsB,MAAMT,EAAUE,eAAeQ,QACrC,CACA,IAAMC,EAA4BX,EAAUE,cAAcI,UAAU,GAC9Dd,EAAU,IAAIoB,OAAO,KAADC,OAAMF,EAAyB,QAAQ,KACjExB,EAAQA,EAAMoB,QAAQf,EAAS,WACxBH,EAAkBW,EAAUE,cAAcI,UAAU,GAC7D,CAGJ,IACO,CACLnB,MAAOA,EACPC,UAAWC,EAEf,C,eCxDAyB,EAAAA,kBAAkBC,wBAAyB,EAE3C,IAAMC,EAAsB,eAAA5C,GAAA6C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAC7BC,EACAjC,GAEA,IAAAkC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnC,EAAA,OAAA2B,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAoBA,OAjBMN,EAAkBtC,EACtBmC,EAAQU,MAAQ,GAChB3C,GAGIqC,EAAU,CACdtC,MAAOqC,EAAgBrC,MACvBC,UAAWoC,EAAgBpC,WAIvBsC,EAAoC,QAA7BJ,EAAGU,WAAWC,uBAAe,IAAAX,OAAA,EAA1BA,EAA4BY,iBAC1C,OACA,aACAT,GAGFG,EAAAE,KAAA,EAC+C,QAD/CP,EACqBS,WAAWC,uBAAe,IAAAV,OAAA,EAA1BA,EAA4BY,iBAC/CT,GACA,EACA,KACA,IACA,GACA,KAAD,EANW,OAANnC,EAAMqC,EAAAQ,KAAAR,EAAAS,OAAA,SAQL9C,GAAM,wBAAAqC,EAAAU,OAAA,GAAAlB,EAAA,KACd,gBAlC2BmB,EAAAC,GAAA,OAAApE,EAAAqE,MAAA,KAAAC,UAAA,KAuErB,I,EAAMC,EANJ,IAAIC,EAAAA,YAAY,CACrBC,QAASC,EAAAA,QAAQC,OAAO/B,OA9BxBgC,GA+BAC,MAAO,IAAIC,EAAAA,MAAM,IAAIC,EAAAA,gB,wJCpDnBC,EAAsBC,EAAAA,cAA6C,MACnEC,EAAoBD,EAAAA,cAAgC,MAC7CE,EAAgB,WAAH,OAASF,EAAAA,WAAiBC,EAAmB,EAC1DE,EAAsB,WAAH,OAASH,EAAAA,WAAiBD,EAAqB,EAGzEK,EAAc,IAAIC,EAAAA,YAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,UAAU,EACVC,sBAAsB,EACtBC,OAAO,MASbC,EAAAA,GAAAA,IACOC,EAAAA,IACJC,IAAIC,EAAAA,GACJC,KAAK,CACJC,QAAS,CACPC,SAAU,gCAGZC,KAAe,OAAVvC,iBAAU,IAAVA,YAA4B,QAAlBV,EAAVU,WAAYwC,wBAAgB,IAAAlD,OAAlB,EAAVA,EAA8BmD,IAAI,sBAAuB,KAC9DC,YAAa,KACbC,cAAe,CACbC,aAAa,KAInB,IAwFMC,EAAsB,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAhBAC,EAAAA,EAAAA,kBAAgB,WACd,IAAMC,EAAiB,SAACC,GACtB,IAAQC,EAAWD,EAAXC,OACRL,EAASK,EAAQ,CAGf5E,SAAS,GAEb,EAGA,OAFA6E,SAASC,iBAAiB,iBAAkBJ,GAErC,WACLG,SAASE,oBAAoB,iBAAkBL,EACjD,CACF,GAAG,CAACH,IAEG,IACT,EAEA,EAjF0D,SAAH1G,GAMhD,IALLQ,EAAQR,EAARQ,SACA2G,EAAKnH,EAALmH,MACAC,EAAMpH,EAANoH,OACAC,EAAUrH,EAAVqH,WACAC,EAAatH,EAAbsH,cAEMC,GAAQC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAa,GAAE,IAC3CC,EApCyB,WAAO,IAADvE,EAC/BwE,GAAyBC,EAAAA,EAAAA,UAEb,OAAVhE,iBAAU,IAAVA,YAA4B,QAAlBT,EAAVS,WAAYwC,wBAAgB,IAAAjD,OAAlB,EAAVA,EAA8BkD,IAAI,qBACnCwB,GAAApG,EAAAA,EAAAA,GAAAkG,EAAA,GAHMG,EAAID,EAAA,GAAEE,EAAQF,EAAA,GAIbjC,GAASoC,EAAAA,EAAAA,MAATpC,KAoBR,OAlBAqC,EAAAA,EAAAA,YAAU,WAERC,YAAW,kBAAU,OAAJtC,QAAI,IAAJA,OAAI,EAAJA,EAAMuC,eAAeL,EAAK,GAAE,EAE/C,GAAG,KAEHG,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAU,SAACtB,GAAc,IAADuB,EAAAC,EAE5BP,EAAU,OAADjB,QAAC,IAADA,GAAS,QAARuB,EAADvB,EAAGC,cAAM,IAAAsB,OAAR,EAADA,EAAWP,MAEpB,IAAMA,GAAgB,OAADhB,QAAC,IAADA,GAAS,QAARwB,EAADxB,EAAGC,cAAM,IAAAuB,OAAR,EAADA,EAAWR,OAAQ,KACpC,OAAJlC,QAAI,IAAJA,GAAAA,EAAMuC,eAAeL,EACvB,EAEA,OADAS,OAAOtB,iBAAiB,cAAemB,GAChC,kBAAMG,OAAOrB,oBAAoB,cAAekB,EAAS,CAClE,GAAG,CAACxC,IAEG,CAACkC,EACV,CAUiBU,GAARV,GAA4BrG,EAAAA,EAAAA,GAAAiG,EAAA,GAAxB,GACLe,GAAcC,EAAAA,EAAAA,KAEdC,GAAkBnB,EAAAA,EAAAA,UAAQ,WAC9B,MAAO,CACLL,MAAAA,EACAG,cAAAA,EACAsB,OAAQ,SAACC,GACPvB,EAAc,SAAU,CAAEuB,KAAAA,GAC5B,EAEJ,GAAG,CAAC1B,EAAOG,IACX,OACE7G,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACG+D,IACC9D,EAAAA,EAAAA,KAACqI,EAAAA,yBAAwB,CAACC,YAAaxE,EAAiB/D,UACtDF,EAAAA,EAAAA,MAAC2E,EAAAA,WAAgB,CAAAzE,SAAA,EACfF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CACG4G,E,0gCAGH3G,EAAAA,EAAAA,KAACuI,EAAAA,oBAAmB,CAACC,OAAQ5D,EAAY7E,UACvCC,EAAAA,EAAAA,KAACyE,EAAkBgE,SAAQ,CAAC/B,MAAOE,EAAW7G,UAC5CC,EAAAA,EAAAA,KAACuE,EAAoBkE,SAAQ,CAAC/B,MAAOwB,EAAgBnI,UACnDC,EAAAA,EAAAA,KAAC0I,EAAAA,GACC,CACAC,kBAAmB,SAACC,GAClB,OAAOhC,CACT,EAEAiC,OAAQ,OAASxB,EAAOyB,EAAAA,EAAQC,EAAAA,EAChCC,MAAOhB,EAAYjI,UAEnBC,EAAAA,EAAAA,KAACiJ,EAAAA,GAAa,CAACC,UAAWtC,EAAYE,MAAOA,EAAM/G,UACjDC,EAAAA,EAAAA,KAACmJ,EAAAA,SAAQ,CAACC,SAAS,GAAErJ,UACnBF,EAAAA,EAAAA,MAACwJ,EAAAA,GAAa,CAAAtJ,SAAA,EACZC,EAAAA,EAAAA,KAACgG,EAAmB,IACnBjG,uBAa3B,C,6QCPA,IA1H2C,SAAHR,GAIjC,IAAD+J,EAAA/J,EAHJgK,UAAAA,OAAS,IAAAD,EAAG,KAAIA,EAChBE,EAAcjK,EAAdiK,eACGC,GAAaC,EAAAA,EAAAA,GAAAnK,EAAAoK,GAERC,GAAMrC,EAAAA,EAAAA,MAANqC,EACAC,EAAUb,EAAAA,EAAMc,WAAhBD,MACRE,EAAeC,EAAAA,EAAKC,UAAbC,GAA6ClJ,EAAAA,EAAAA,GAAA+I,EAAA,GAAzC,GAELI,GAAOC,EAAAA,EAAAA,kBAAW,IAAAC,EAAAA,EAAAA,EAAAC,EAAC,OAOvBf,GAGIgB,GAAYC,EAAAA,EAAAA,MACdC,GAAkBC,EAAAA,EAAAA,UAGnB,CACDC,SAAU,CAAC,kBAA4B,OAATJ,QAAS,IAATA,OAAS,EAATA,EAAWK,MAAOnB,EAAcoB,MAC9DC,QAAS,WACP,OAAW,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMS,UAAmB,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWK,QAC3B,OAAJT,QAAI,IAAJA,GAAAA,EAAMY,iBACPtB,EAAcoB,KAEZ,KADAN,EAAUS,iBAEhB,EACAhG,UAAU,EACViG,UAAW,EACXC,UAAW,IAGPC,GAAyBC,EAAAA,EAAAA,GAAe,CAC5CC,WAAY,SAACC,GACX,OAAOf,EAAUgB,cAAcD,EAAOE,IACxC,IAoBF,OACExL,EAAAA,EAAAA,KAACyL,EAAAA,GAAQvL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACPwL,MAAO9B,EAAE,wBACT+B,cAAc,EACdC,eAAgBT,EAAuBU,UACvCC,KAtBU,WACZ5B,EAAK6B,iBAAiBC,MAAK,SAACV,GAC1BH,EAAuBc,OAAOX,EAAQ,CACpCY,UAAW,WACTC,EAAAA,GAAQC,QAAQxC,EAAE,4BAClBJ,GAAe,EACjB,EACA6C,QAAS,WACPF,EAAAA,GAAQG,MAAM1C,EAAE,wBAClB,IAEF,IAAI2C,SAAQ,SAACC,EAASC,GAAY,IAAGT,MAAK,WACxCxC,GAAe,EACjB,GACF,GACF,EAQIkD,SAAU,WACRlD,GACF,EACAmD,MAAO,CAAEC,OAAQ,IACbnD,GAAa,IAAA1J,SAEhB0K,EAAgBoB,WACf7L,EAAAA,EAAAA,KAAC6M,EAAAA,EAAI,CAACC,QAAQ,SAASC,UAAU,MAAKhN,UACpCC,EAAAA,EAAAA,KAACgN,EAAAA,EAAI,MAEJvC,EAAgBwC,MAKnBpN,EAAAA,EAAAA,MAACmK,EAAAA,EAAI,CACHkD,UAAU,EACVhD,KAAMA,EACNiD,gBAAiB,CAAC,WAAY,UAAUpN,SAAA,CAEvC6J,EAAE,uBACH5J,EAAAA,EAAAA,KAAC6M,EAAAA,EAAI,CACHC,QAAQ,SACRH,MAAO,CAAES,OAAQvD,EAAMwD,SAAUC,IAAKzD,EAAMuD,QAASrN,UAErDC,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,CAAC7G,MAAO+D,EAAgBwC,KAAKO,aAErC5D,EAAE,wBACH5J,EAAAA,EAAAA,KAAC6M,EAAAA,EAAI,CACHC,QAAQ,SACRH,MAAO,CAAES,OAAQvD,EAAMwD,SAAUC,IAAKzD,EAAMuD,QAASrN,UAErDC,EAAAA,EAAAA,KAACyN,EAAAA,EAAWC,KAAI,CAACC,UAAQ,EAACC,MAAI,EAAA7N,SAC3B0K,EAAgBwC,KAAKY,aAGzBjE,EAAE,uBACH5J,EAAAA,EAAAA,KAAC6M,EAAAA,EAAI,CACHC,QAAQ,SACRH,MAAO,CAAES,OAAQvD,EAAMwD,SAAUC,IAAKzD,EAAMuD,QAASrN,UAErDC,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CAACC,UAAQ,EAACC,KAAK,MAAKjO,UAC5BC,EAAAA,EAAAA,KAACiO,EAAAA,EAAK,CACJC,UAAW,EACXC,YAAU,EACVC,YAAY,SACZzB,MAAO,CAAE0B,SAAU,eAnC3BrO,EAAAA,EAAAA,KAAC6M,EAAAA,EAAI,CAACC,QAAQ,SAASC,UAAU,MAAKhN,SACnC6J,EAAE,kCA0Cb,C,oVCgPA,UA1V0C,SAAHrK,GAGhC,IAAD+O,EAGAC,EAHAC,EAAAjP,EAFJkP,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EACf/E,GAAaC,EAAAA,EAAAA,GAAAnK,EAAAoK,GAERC,GAAMrC,EAAAA,EAAAA,MAANqC,EACR8E,GAAiC/J,EAAAA,EAAAA,uBAAzB+B,EAAKgI,EAALhI,MAAOG,EAAa6H,EAAb7H,cAKf,IACE0H,EAAcI,KAAKC,MAAMlI,GAAS,GACpC,CAAE,MAAO4F,IACPiC,EAAc,CACZ1D,MAAM,EACNgE,UAAW,GAEf,CACA,IAsBIC,EAtBJC,EAA4BR,EAApB1D,EAAIkE,EAAJlE,KAAMgE,EAASE,EAATF,UAEdG,EAA+B/O,EAAAA,EAAMgP,WAAUC,GAAAlO,EAAAA,EAAAA,GAAAgO,EAAA,GAAxCG,EAAKD,EAAA,GAAEE,EAAaF,EAAA,GAE3BnF,EAAeC,EAAAA,EAAKC,UAAbC,GAA4BlJ,EAAAA,EAAAA,GAAA+I,EAAA,GAAxB,GASLsF,EAAyC,CAC7CC,WAAY,CAAC,aAAc,QAAS,OAAQ,WAC5CC,MAAO,CAAC,QAAS,OAAQ,YAG3BC,GAAmCC,EAAAA,EAAAA,IAAkB,iBAAgBC,GAAA1O,EAAAA,EAAAA,GAAAwO,EAAA,GAA9DG,EAAQD,EAAA,GAAEE,EAAcF,EAAA,GACzBG,IAAyBC,EAAAA,EAAAA,kBAAiBH,EAAWlB,GAErDlE,IAAYC,EAAAA,EAAAA,MAElBuF,IAGIrF,EAAAA,EAAAA,UACF,2BACA,WACE,OAAOH,GAAUyF,yBACnB,GACA,CAEEhL,UAAU,IATNgL,GAAuBD,GAA7B9C,KACWgD,GAA8BF,GAAzClE,UAWFiD,GAAyB,OAATvE,SAAS,IAATA,QAAS,EAATA,GAAW2F,SAAS,SAAUF,GAE9C,IAAAG,IAA+BC,EAAAA,EAAAA,uBAAgB,IAAAC,EAAAA,EAAAA,EAAA/F,EAAA,OA4B7C,CACEM,MAAOiE,EACPyB,kBAAmBxB,EACnByB,kBAAmC,QAAlBjC,EAAW,OAAT/D,SAAS,IAATA,QAAS,EAATA,GAAWK,aAAK,IAAA0D,EAAAA,EAAI,IAEzC,CACEqB,SAAUE,GACVW,YAAa,iBAnCTrG,GAAIgG,GAAJhG,KAAMsG,GAAYN,GAAZM,aAuCdC,IACEC,EAAAA,EAAAA,kBAAW,IAAAC,EAAAA,EAAAA,EAAAtG,EAAA,QA4BTuG,IAAA7P,EAAAA,EAAAA,GAAA0P,GAAA,GA7BGI,GAAuBD,GAAA,GAAEE,GAAiCF,GAAA,GA+B3DG,IAAuB5F,EAAAA,EAAAA,GAAe,CAC1CC,WAAY,SAACT,GACX,OAAOL,GAAU0G,YAAYrG,EAC/B,IAGFsG,IACEC,EAAAA,EAAAA,IAAU,GAAMC,IAAApQ,EAAAA,EAAAA,GAAAkQ,GAAA,GADXG,GAAuBD,GAAA,GAAYE,GAAuBF,GAAA,GAA/BG,OAmClC,OACE1R,EAAAA,EAAAA,MAAC4L,EAAAA,GAAQvL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACP2K,KAAMA,EACN6B,SAAU,WACR7F,EAAc,SAAU,KAC1B,EACA1G,UAAQ,EACRuL,MAAO9B,EAAE,+BACT4H,gBAAgB,EAChB1F,KAzCU,WACZ5B,EAAK6B,iBAAiBC,KAAI,eAAAyF,GAAArP,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAO+I,GAAM,IAAAoG,EAAAC,EAAA,OAAAtP,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClCyO,GAAKxR,EAAAA,EAAAA,GAAA,GAAQoL,IACJV,MACb8G,EAAQE,IAAAA,KAAOF,EAAO,CAAC,qBACvBA,EAAQE,IAAAA,OAASF,GAAO,SAACG,GAAI,YAAcC,IAATD,GAA+B,KAATA,CAAW,IAE9D/C,GACS,QAAZ6C,EAAOD,SAAK,IAAAC,UAALA,EAAO5G,eAGhB+F,GAAwB,CACtBvQ,UAAW,CACTqK,OAAa,OAANU,QAAM,IAANA,OAAM,EAANA,EAAQV,QAAS,GACxBmH,MAAOL,EACPpB,kBAAmBxB,GAErBkD,YAAW,SAACC,GAAM,IAADC,EAGRC,EAFA,OAAHF,QAAG,IAAHA,GAAgB,QAAbC,EAAHD,EAAKG,mBAAW,IAAAF,GAAhBA,EAAkBG,GACpBlG,EAAAA,GAAQC,QAAQxC,EAAE,qCAElBuC,EAAAA,GAAQG,MAAS,OAAH2F,QAAG,IAAHA,GAAgB,QAAbE,EAAHF,EAAKG,mBAAW,IAAAD,OAAb,EAAHA,EAAkBG,KAElCzL,EAAc,KAAM,KACtB,EACAwF,QAAO,SAACkG,GACNpG,EAAAA,GAAQG,MAAS,OAAHiG,QAAG,IAAHA,OAAG,EAAHA,EAAKpG,QACrB,IACC,wBAAApJ,EAAAU,OAAA,GAAAlB,EAAA,KACJ,gBAAAmB,GAAA,OAAA+N,EAAA7N,MAAA,KAAAC,UAAE,CAAF,CA5ByB,GA6B5B,EAYI+H,eAAgBmF,IACZtH,GAAa,IAAA1J,SAAA,EAEjBF,EAAAA,EAAAA,MAACmK,EAAAA,EAAI,CACHkD,UAAU,EACVhD,KAAMA,EACNsI,SAAU,CAAEC,KAAM,IAClBC,WAAY,CAAED,KAAM,IACpBtF,gBAAiB,CAAC,WAAY,UAC9BR,MAAO,CAAEgG,aAAc,GAAIC,UAAW,IACtCC,eAAa3S,EAAAA,EAAAA,GAAA,GAAOiK,IAAOpK,SAAA,EAE3BC,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CAACE,KAAK,QAAQ8E,MAAOlJ,EAAE,qBAAqB7J,UACpDC,EAAAA,EAAAA,KAACiO,EAAAA,EAAK,CAAC8E,UAAQ,OAEjB/S,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CAACE,KAAK,WAAW8E,MAAOlJ,EAAE,uBAAuB7J,UACzDC,EAAAA,EAAAA,KAACiO,EAAAA,EAAK,CAACG,YAAaxE,EAAE,0BAExB5J,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CAACE,KAAK,YAAY8E,MAAOlJ,EAAE,uBAAuB7J,UAC1DC,EAAAA,EAAAA,KAACiO,EAAAA,EAAK,CAACG,YAAaxE,EAAE,0BAExB5J,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CACRE,KAAK,WACL8E,MAAOlJ,EAAE,uBACToJ,MAAO,CACL,CACErS,QAAS,2CACTwL,QAASvC,EAAE,uCAEb7J,UAEFC,EAAAA,EAAAA,KAACiO,EAAAA,EAAMgF,SAAQ,OAEjBjT,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CACRE,KAAK,mBACLkF,aAAc,CAAC,YACfJ,MAAOlJ,EAAE,+BACToJ,MAAO,CACL,SAAAG,GAAA,IAAGC,EAAaD,EAAbC,cAAa,MAAQ,CACtBC,UAAS,SAACzB,EAAGlL,GACX,OAAKA,GAAW0M,EAAc,YACrB7G,QAAQE,OACb,IAAI6G,MAAM1J,EAAE,0CAGXlD,GAAS0M,EAAc,cAAgB1M,EAGrC6F,QAAQE,OACb,IAAI6G,MAAM1J,EAAE,qCAHL2C,QAAQC,SAKnB,EACD,GACDzM,UAEFC,EAAAA,EAAAA,KAACiO,EAAAA,EAAMgF,SAAQ,OAEjBjT,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CAACE,KAAK,cAAc8E,MAAOlJ,EAAE,0BAA0B7J,UAC/DC,EAAAA,EAAAA,KAACiO,EAAAA,EAAMsF,SAAQ,CAACnF,YAAaxE,EAAE,2BAEjC5J,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CAACE,KAAK,SAAS8E,MAAOlJ,EAAE,yBAAyB7J,UACzDC,EAAAA,EAAAA,KAACwT,EAAAA,EAAM,CACLC,QAAS7B,IAAAA,IAvNY,CAC7B8B,OAAQ,SACRC,SAAU,WACV,sBAAuB,sBACvBC,QAAS,YAmN0B,SAAClN,EAAOmN,GACjC,MAAO,CACLnN,MAAOmN,EACPf,MAAOpM,EAEX,UAGG,OAAJyD,SAAI,IAAJA,KAAAA,GAAM2J,SACO,OAAZrD,SAAY,IAAZA,KAAAA,GAAcqD,OAChBrD,GAAaqD,QAAQzE,IACnBrP,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CAACE,KAAK,OAAO8E,MAAOlJ,EAAE,mBAAmB7J,UACjDC,EAAAA,EAAAA,KAACwT,EAAAA,EAAM,CACLC,QAAS7B,IAAAA,IACPvC,EAA6BoB,GAAaqD,OAC1C,SAACjC,GACC,MAAO,CACLnL,MAAOmL,EACPiB,MAAOjB,EAEX,SAKV7R,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CACRE,KAAK,uBACL8E,MAAOlJ,EAAE,wCACTmK,cAAc,UAAShU,UAEvBC,EAAAA,EAAAA,KAACgU,EAAAA,EAAM,QAENlF,IACD9O,EAAAA,EAAAA,KAACgK,EAAAA,EAAK8D,KAAI,CACRE,KAAK,iBACL8E,MAAOlJ,EAAE,4BACTmK,cAAc,UACdE,OACM,OAAJ9J,SAAI,IAAJA,QAAI,EAAJA,GAAMS,UAAmB,OAATL,SAAS,IAATA,QAAS,EAATA,GAAWK,SACzB5K,EAAAA,EAAAA,KAACyN,EAAAA,EAAWC,KAAI,CAACwG,KAAK,YAAYvH,MAAO,CAAEwH,SAAU,IAAKpU,SACvD6J,EAAE,uCAGR7J,UAEDC,EAAAA,EAAAA,KAACgU,EAAAA,EAAM,CACLI,QACEnE,IAAkCe,GAAqBnF,UAEzDkH,UACM,OAAJ5I,SAAI,IAAJA,QAAI,EAAJA,GAAMS,UAAmB,OAATL,SAAS,IAATA,QAAS,EAATA,GAAWK,UAAc,OAAJT,SAAI,IAAJA,IAAAA,GAAMY,gBAE7CsJ,SAAU,SAACC,GACLA,EACFhD,KAEQ,OAAJnH,SAAI,IAAJA,IAAAA,GAAMY,iBACRb,EAAKqK,cAAc,kBAAkB,GACrCpF,EAAMqF,QAAQ,CACZ9I,MAAO9B,EAAE,oBACT6K,MAAMzU,EAAAA,EAAAA,KAAC0U,EAAAA,EAAuB,IAC9BC,QAAS/K,EAAE,+BACXgL,OAAQhL,EAAE,cACViL,OAAQ,SACRC,WAAYlL,EAAE,aACdkC,KAAI,WACFkF,GAAqB/E,QAAW,OAAJ9B,SAAI,IAAJA,QAAI,EAAJA,GAAMS,QAAS,GAAI,CAC7CsB,UAAW,WACTC,EAAAA,GAAQC,QAAQxC,EAAE,kCAClBgG,IACA1F,EAAKqK,cAAc,kBAAkB,EACvC,EACAlI,QAAS,SAACkG,GACRwC,QAAQC,IAAIzC,EACd,GAEJ,EACA7F,SAAQ,WACNxC,EAAKqK,cAAc,kBAAkB,EACvC,IAIR,WAKLzF,IACD9O,EAAAA,EAAAA,KAACiV,EAAAA,EAAiB,CAChB1L,UAAWY,GACXU,KAAMwG,GACN7H,eAAgB,SAAC4C,GACXA,EACFwD,IAEA1F,EAAKqK,cAAc,kBAAkB,GAEvCjD,IACF,IAGHlC,KAGP,C,+BCrWA,IAAM8F,EAAuB,CAC3B,oBAAuB,CACrB,CACE,KAAQ,eACR,KAAQ,qBAGZ,KAAQ,WACR,SAAY,KACZ,KAAQ,4BACR,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,QACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,iBACR,WAAc,OAGlB,KAAQ,OACR,YAAe,KAGhBA,KAAoB,oCAErB,W,+BCMA,IAAMA,EAAyB,WAC/B,IAAIC,EAAK,CACP,aAAgB,KAChB,KAAQ,gBACR,KAAQ,SAEVC,EAAK,CACH,aAAgB,KAChB,KAAQ,gBACR,KAAQ,oBAEVC,EAAK,CACH,aAAgB,KAChB,KAAQ,gBACR,KAAQ,SAEVC,EAAK,CACH,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,SAElB,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,UAGpBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,QACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,WACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,uBACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,YACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,SACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,OACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,aAAgB,YAChB,KAAQ,cACR,KAAQ,SACR,QAAU,EACV,WAAc,CACXT,EACD,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,OACR,WAAc,OAGlB,WAAc,MAEhBU,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,iBACR,WAAc,MAEhB,MAAO,CACL,SAAY,CACV,oBAAuB,CACpBhB,EACAC,EACAC,GAEH,KAAQ,WACR,SAAY,KACZ,KAAQ,2BACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,aAChB,KAAQ,cACR,KAAQ,cACR,QAAU,EACV,WAAc,CACXC,EACAC,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACD,CACE,KAAQ,KACR,KAAQ,iBACR,KAAQ,8BAGZ,WAAc,OAGlB,WAAc,OAGlB,KAAQ,YACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAuB,CACpBhB,EACAE,EACAD,GAEH,KAAQ,YACR,KAAQ,2BACR,WAAc,CACZ,CACE,MAAS,KACT,KAASE,EACT,aAAgB,aAChB,KAAQ,cACR,KAAQ,cACR,QAAU,EACV,WAAc,CACXC,EACAC,EACD,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEH,WAAc,OAGlB,WAAc,QAIpB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,CAAC,EACb,KAAQ,2BACR,cAAiB,WACjB,KAAQ,+mBAGZ,CAlP+B,GAoP9BjB,EAAakB,KAAO,mCAErB,W,+BCvQA,IAAMlB,EAAyB,WAC/B,IAAIC,EAAK,CACP,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,SAEV,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,oBAEV,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,sBAGZC,EAAK,CACH,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,UAGpBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,QACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,WACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,uBACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,YACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,SACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,OACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,aAAgB,YAChB,KAAQ,cACR,KAAQ,SACR,QAAU,EACV,WAAc,CACXD,EACD,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,OACR,WAAc,OAGlB,WAAc,MAEhBE,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,iBACR,WAAc,MAEhBC,EAAM,CACJ,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,sBAGpB,MAAO,CACL,SAAY,CACV,oBAAwBb,EACxB,KAAQ,WACR,SAAY,KACZ,KAAQ,wBACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACD,CACE,KAAQ,KACR,KAAQ,iBACR,KAAQ,8BAGZ,WAAc,MAEhB,CACE,MAAS,eACT,KAASC,EACT,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXJ,GAEH,WAAc,OAGlB,KAAQ,UACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAwBT,EACxB,KAAQ,YACR,KAAQ,wBACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAF,GAEH,WAAc,MAEhB,CACE,MAAS,eACT,KAASG,EACT,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXJ,EACAC,GAEH,WAAc,QAIpB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,CAAC,EACb,KAAQ,wBACR,cAAiB,QACjB,KAAQ,4lBAGZ,CA9N+B,GAgO9BX,EAAakB,KAAO,mCAErB,W,oNCjPa3G,EAAoB,SAAC4G,GAChC,OAV6B,SAACA,GAC9B,IAAAC,GAA0BnP,EAAAA,EAAAA,UAASkP,IAAgB,IAAIE,MAAOC,eAAcC,GAAAzV,EAAAA,EAAAA,GAAAsV,EAAA,GAArE5P,EAAK+P,EAAA,GAAEC,EAAQD,EAAA,GAKtB,MAAO,CAAC/P,EAHO,SAACiQ,GACdD,EAASC,IAAY,IAAIJ,MAAOC,cAClC,EAEF,CAGSI,CAAgBP,EACzB,EAEaQ,EAAwB,WAEnC,OADkBrM,IACDsM,QAAQC,UAC3B,EAEaC,EAAyB,WACpC,IAAMzM,EAAYC,IAClByM,GAA+B9P,EAAAA,EAAAA,UAG5B,CACD6G,KAAMzD,EAAU2M,cAChBC,GAAI5M,EAAU6M,SAAS7M,EAAU2M,iBACjCG,GAAArW,EAAAA,EAAAA,GAAAiW,EAAA,GANKK,EAAOD,EAAA,GAAEE,EAAWF,EAAA,GAsB3B,OAdA7P,EAAAA,EAAAA,YAAU,WACR,IAAMgQ,EAAW,SAACnR,GAChB,IAAMoR,EAAiBpR,EAAEC,OACzBiR,EAAY,CACVvJ,KAAMyJ,EACNN,GAAI5M,EAAU6M,SAASK,IAE3B,EAEA,OADAlR,SAASC,iBAAiB,2BAA4BgR,GAC/C,WACLjR,SAASE,oBAAoB,2BAA4B+Q,EAC3D,CACF,IAEOF,CACT,EAEaI,EAA8B,SAAHnY,GAIjC,IAHLoY,EAAYpY,EAAZoY,aAgBA,OAZe5Q,EAAAA,EAAAA,UAAQ,WAErB,IAAM6Q,EAAe,IAAIzU,WAAW0U,sBAClC,GACA,GACAF,EACA,WAGF,OAAO,IAAIxU,WAAW2U,gBAAgBF,EAAc,sBACtD,GAAG,CAACD,GAGN,EAEanN,EAA8B,WA6BzC,OA5ByBE,EAAAA,EAAAA,UAAc,CACrCC,SAAU,gCACVG,QAAS,kBACP,IAAIyB,SAAQ,SAACC,GACX,GAEwC,qBAA/BrJ,WAAWC,iBAEa,OAA/BD,WAAWC,kBAE0B,IAArCD,WAAWC,gBAAgB2U,MAU3B,OAAOvL,EAAQrJ,WAAWC,iBAH1BmD,SAASC,iBAAiB,wBALT,SAAXgR,IAEJhL,EAAQrJ,WAAWC,iBACnBmD,SAASE,oBAAoB,uBAAwB+Q,EACvD,GAMJ,GAAE,EACJtS,OAAO,EAEPF,UAAU,IAzBJiI,IA6BV,EAea+K,EAA4B,WACvC,IAAcC,GAAavN,EAAAA,EAAAA,UAAS,CAClCC,SAAU,kCACVG,QAAS,WACP,OAAOoN,MAAM,iCACVlM,MAAK,SAACmM,GAAQ,OAAKA,EAASC,MAAM,IAClCpM,MACC,SAACoM,GAWC,OAAOA,CACT,GAEN,EACApT,UAAU,EACVE,OAAO,IAtBD+H,KAyBFoL,EAAe,SAACC,GAGpB,IAAKA,EACH,MAAO,CACLzE,IAAK,GACL0E,KAAM,IAGV,IAAMC,EAAQF,EAAU1W,MAAM,KAE9B6W,GAAoBD,EAAM,IAAMA,EAAM,IAAI5W,MAAM,KAAI8W,GAAA1X,EAAAA,EAAAA,GAAAyX,EAAA,GAGpD,MAAO,CAAE5E,IAHC6E,EAAA,GAGIH,KAHCG,EAAA,GACE9W,MAAM,KAGzB,EAEA,MAAO,CACLqW,EACA,CACEU,kBAAmB,SAACL,GAClB,IAAQzE,EAAQwE,EAAaC,GAArBzE,IACR,OAAe,OAARoE,QAAQ,IAARA,OAAQ,EAARA,EAAUW,UAAU/E,GAAK7F,OAAQ6F,CAC1C,EACAgF,aAAc,SAACP,GAA0D,IAADQ,EAAAC,EAA9B3Q,EAAIvE,UAAAhC,OAAA,QAAAiQ,IAAAjO,UAAA,GAAAA,UAAA,GAAG,mBAC/C,IAAKyU,EAAW,MAAO,cACvB,IAAQzE,EAAQwE,EAAaC,GAArBzE,IACR,OACEzL,QACoC0J,KAA3B,OAARmG,QAAQ,IAARA,GAAwB,QAAhBa,EAARb,EAAUW,UAAU/E,UAAI,IAAAiF,OAAhB,EAARA,EAA0BrE,MACf,OAARwD,QAAQ,IAARA,GAAwB,QAAhBc,EAARd,EAAUW,UAAU/E,UAAI,IAAAkF,OAAhB,EAARA,EAA0BtE,KAC1B,cAER,EACAuE,aAAc,SAACV,GACb,EAEFW,eAAgB,SAACX,GAEf,OADiBD,EAAaC,GAAtBC,KACI,EACd,EACAW,aAAc,SAACZ,GAEb,OADiBD,EAAaC,GAAtBC,KACI,EACd,EACAF,aAAAA,GAGN,C,8FCzMac,EAAczO,EAAAA,SACdU,EAAiBuF,EAAAA,W","sources":["components/BAIModal.tsx","helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/TOTPActivateModal.tsx","components/UserSettingModal.tsx","components/__generated__/TOTPActivateModalFragment.graphql.ts","components/__generated__/UserSettingModalMutation.graphql.ts","components/__generated__/UserSettingModalQuery.graphql.ts","hooks/index.ts","hooks/reactQueryAlias.tsx"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  },\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === 'skipOnClient' &&\n      directive.argumentName === 'if'\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === 'true')\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, '');\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            '',\n          ),\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith('$') &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, 'g');\n        query = query.replace(pattern, '');\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || '',\n    variables,\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  //@ts-ignore\n  const result = await globalThis.backendaiclient?._wrapWithPromise(\n    reqInfo,\n    false,\n    null,\n    10000,\n    0,\n  );\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { ConfigProvider } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (path: string) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path: string) => {\n        dispatchEvent('moveTo', { path });\n      },\n    };\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <StyleProvider container={shadowRoot} cache={cache}>\n                      <Suspense fallback=\"\">\n                        <BrowserRouter>\n                          <RoutingEventHandler />\n                          {children}\n                        </BrowserRouter>\n                      </Suspense>\n                    </StyleProvider>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { TOTPActivateModalFragment$key } from './__generated__/TOTPActivateModalFragment.graphql';\nimport { QRCode, Typography, Input, theme, Form, message, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useFragment } from 'react-relay';\n\ntype TOTPActivateFormInput = {\n  otp: number;\n};\n\ninterface Props extends BAIModalProps {\n  userFrgmt?: TOTPActivateModalFragment$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst TOTPActivateModal: React.FC<Props> = ({\n  userFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<TOTPActivateFormInput>();\n\n  const user = useFragment(\n    graphql`\n      fragment TOTPActivateModalFragment on User {\n        email\n        totp_activated @skipOnClient(if: $isNotSupportTotp)\n      }\n    `,\n    userFrgmt,\n  );\n\n  const baiClient = useSuspendedBackendaiClient();\n  let initializedTotp = useQuery<{\n    totp_key: string;\n    totp_uri: string;\n  }>({\n    queryKey: ['initialize_totp', baiClient?.email, baiModalProps.open],\n    queryFn: () => {\n      return user?.email === baiClient?.email &&\n        !user?.totp_activated &&\n        baiModalProps.open\n        ? baiClient.initialize_totp()\n        : null;\n    },\n    suspense: false,\n    staleTime: 0,\n    cacheTime: 0,\n  });\n\n  const mutationToActivateTotp = useTanMutation({\n    mutationFn: (values: TOTPActivateFormInput) => {\n      return baiClient.activate_totp(values.otp);\n    },\n  });\n\n  const _onOk = () => {\n    form.validateFields().then((values) => {\n      mutationToActivateTotp.mutate(values, {\n        onSuccess: () => {\n          message.success(t('totp.TotpSetupCompleted'));\n          onRequestClose(true);\n        },\n        onError: () => {\n          message.error(t('totp.InvalidTotpCode'));\n        },\n      });\n      new Promise((resolve, reject) => {}).then(() => {\n        onRequestClose(true);\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      title={t('webui.menu.SetupTotp')}\n      maskClosable={false}\n      confirmLoading={mutationToActivateTotp.isLoading}\n      onOk={_onOk}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      style={{ zIndex: 1 }}\n      {...baiModalProps}\n    >\n      {initializedTotp.isLoading ? (\n        <Flex justify=\"center\" direction=\"row\">\n          <Spin />\n        </Flex>\n      ) : !initializedTotp.data ? (\n        <Flex justify=\"center\" direction=\"row\">\n          {t('totp.TotpSetupNotAvailable')}\n        </Flex>\n      ) : (\n        <Form\n          preserve={false}\n          form={form}\n          validateTrigger={['onChange', 'onBlur']}\n        >\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <QRCode value={initializedTotp.data.totp_uri} />\n          </Flex>\n          {t('totp.ScanQRToEnable')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Typography.Text copyable code>\n              {initializedTotp.data.totp_key}\n            </Typography.Text>\n          </Flex>\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Form.Item required name=\"otp\">\n              <Input\n                maxLength={6}\n                allowClear\n                placeholder=\"000000\"\n                style={{ maxWidth: 120 }}\n              />\n            </Form.Item>\n          </Flex>\n        </Form>\n      )}\n    </BAIModal>\n  );\n};\n\nexport default TOTPActivateModal;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport TOTPActivateModal from './TOTPActivateModal';\nimport { UserSettingModalMutation } from './__generated__/UserSettingModalMutation.graphql';\nimport {\n  UserSettingModalQuery,\n  UserSettingModalQuery$data,\n} from './__generated__/UserSettingModalQuery.graphql';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { Form, Input, Select, Switch, message, Typography, Modal } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useMutation } from 'react-relay';\nimport { useLazyLoadQuery } from 'react-relay';\n\ntype User = UserSettingModalQuery$data['user'];\n\ntype UserStatus = {\n  [key: string]: string;\n};\n\ntype UserRole = {\n  [key: string]: string[];\n};\n\ninterface Props extends BAIModalProps {\n  extraFetchKey?: string;\n}\n\nconst UserSettingModal: React.FC<Props> = ({\n  extraFetchKey = '',\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    userEmail: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      userEmail: '',\n    };\n  }\n  const { open, userEmail } = parsedValue;\n\n  const [modal, contextHolder] = Modal.useModal();\n\n  const [form] = Form.useForm<User>();\n\n  const userStatus: UserStatus = {\n    active: 'Active',\n    inactive: 'Inactive',\n    'before-verification': 'Before Verification',\n    deleted: 'Deleted',\n  };\n\n  const permissionRangeOfRoleChanges: UserRole = {\n    superadmin: ['superadmin', 'admin', 'user', 'monitor'],\n    admin: ['admin', 'user', 'monitor'],\n  };\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const deferredMergedFetchKey = useDeferredValue(fetchKey + extraFetchKey);\n\n  const baiClient = useSuspendedBackendaiClient();\n  let totpSupported = false;\n  let {\n    data: isManagerSupportingTOTP,\n    isLoading: isLoadingManagerSupportingTOTP,\n  } = useQuery(\n    'isManagerSupportingTOTP',\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    },\n  );\n  totpSupported = baiClient?.supports('2FA') && isManagerSupportingTOTP;\n\n  const { user, loggedInUser } = useLazyLoadQuery<UserSettingModalQuery>(\n    graphql`\n      query UserSettingModalQuery(\n        $email: String\n        $isNotSupportTotp: Boolean!\n        $loggedInUserEmail: String\n      ) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          totp_activated @skipOnClient(if: $isNotSupportTotp)\n          ...TOTPActivateModalFragment\n        }\n        loggedInUser: user(email: $loggedInUserEmail) {\n          role\n        }\n      }\n    `,\n    {\n      email: userEmail,\n      isNotSupportTotp: !totpSupported,\n      loggedInUserEmail: baiClient?.email ?? '',\n    },\n    {\n      fetchKey: deferredMergedFetchKey,\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const [commitModifyUserSetting, isInFlightCommitModifyUserSetting] =\n    useMutation<UserSettingModalMutation>(graphql`\n      mutation UserSettingModalMutation(\n        $email: String!\n        $props: ModifyUserInput!\n        $isNotSupportTotp: Boolean!\n      ) {\n        modify_user(email: $email, props: $props) {\n          ok\n          msg\n          user {\n            id\n            email\n            username\n            need_password_change\n            full_name\n            description\n            status\n            domain_name\n            role\n            groups {\n              id\n              name\n            }\n            totp_activated @skipOnClient(if: $isNotSupportTotp)\n            ...TOTPActivateModalFragment\n          }\n        }\n      }\n    `);\n\n  const mutationToRemoveTotp = useTanMutation({\n    mutationFn: (email: string) => {\n      return baiClient.remove_totp(email);\n    },\n  });\n\n  const [isOpenTOTPActivateModal, { toggle: toggleTOTPActivateModal }] =\n    useToggle(false);\n\n  const _onOk = () => {\n    form.validateFields().then(async (values) => {\n      let input = { ...values };\n      delete input.email;\n      input = _.omit(input, ['password_confirm']);\n      input = _.omitBy(input, (item) => item === undefined || item === '');\n      // TOTP setting\n      if (!totpSupported) {\n        delete input?.totp_activated;\n      }\n\n      commitModifyUserSetting({\n        variables: {\n          email: values?.email || '',\n          props: input,\n          isNotSupportTotp: !totpSupported,\n        },\n        onCompleted(res) {\n          if (res?.modify_user?.ok) {\n            message.success(t('environment.SuccessfullyModified'));\n          } else {\n            message.error(res?.modify_user?.msg);\n          }\n          dispatchEvent('ok', null);\n        },\n        onError(err) {\n          message.error(err?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      open={open}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      centered\n      title={t('credential.ModifyUserDetail')}\n      destroyOnClose={true}\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitModifyUserSetting}\n      {...baiModalProps}\n    >\n      <Form\n        preserve={false}\n        form={form}\n        labelCol={{ span: 10 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ marginBottom: 40, marginTop: 20 }}\n        initialValues={{ ...user }}\n      >\n        <Form.Item name=\"email\" label={t('credential.UserID')}>\n          <Input disabled />\n        </Form.Item>\n        <Form.Item name=\"username\" label={t('credential.UserName')}>\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item name=\"full_name\" label={t('credential.FullName')}>\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={t('general.NewPassword')}\n          rules={[\n            {\n              pattern: /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[_\\W]).{8,}$/,\n              message: t('webui.menu.InvalidPasswordMessage'),\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"password_confirm\"\n          dependencies={['password']}\n          label={t('webui.menu.NewPasswordAgain')}\n          rules={[\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value && !!getFieldValue('password')) {\n                  return Promise.reject(\n                    new Error(t('webui.menu.PleaseConfirmYourPassword')),\n                  );\n                }\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(t('environment.PasswordsDoNotMatch')),\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item name=\"description\" label={t('credential.Description')}>\n          <Input.TextArea placeholder={t('maxLength.500chars')} />\n        </Form.Item>\n        <Form.Item name=\"status\" label={t('credential.UserStatus')}>\n          <Select\n            options={_.map(userStatus, (value, key) => {\n              return {\n                value: key,\n                label: value,\n              };\n            })}\n          />\n        </Form.Item>\n        {!!user?.role &&\n          !!loggedInUser?.role &&\n          loggedInUser.role in permissionRangeOfRoleChanges && (\n            <Form.Item name=\"role\" label={t('credential.Role')}>\n              <Select\n                options={_.map(\n                  permissionRangeOfRoleChanges[loggedInUser.role],\n                  (item) => {\n                    return {\n                      value: item,\n                      label: item,\n                    };\n                  },\n                )}\n              />\n            </Form.Item>\n          )}\n        <Form.Item\n          name=\"need_password_change\"\n          label={t('credential.DescRequirePasswordChange')}\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n        {!!totpSupported && (\n          <Form.Item\n            name=\"totp_activated\"\n            label={t('webui.menu.TotpActivated')}\n            valuePropName=\"checked\"\n            extra={\n              user?.email !== baiClient?.email && (\n                <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                  {t('credential.AdminCanOnlyRemoveTotp')}\n                </Typography.Text>\n              )\n            }\n          >\n            <Switch\n              loading={\n                isLoadingManagerSupportingTOTP || mutationToRemoveTotp.isLoading\n              }\n              disabled={\n                user?.email !== baiClient?.email && !user?.totp_activated\n              }\n              onChange={(checked: boolean) => {\n                if (checked) {\n                  toggleTOTPActivateModal();\n                } else {\n                  if (user?.totp_activated) {\n                    form.setFieldValue('totp_activated', true);\n                    modal.confirm({\n                      title: t('totp.TurnOffTotp'),\n                      icon: <ExclamationCircleFilled />,\n                      content: t('totp.ConfirmTotpRemovalBody'),\n                      okText: t('button.Yes'),\n                      okType: 'danger',\n                      cancelText: t('button.No'),\n                      onOk() {\n                        mutationToRemoveTotp.mutate(user?.email || '', {\n                          onSuccess: () => {\n                            message.success(t('totp.RemoveTotpSetupCompleted'));\n                            updateFetchKey();\n                            form.setFieldValue('totp_activated', false);\n                          },\n                          onError: (err) => {\n                            console.log(err);\n                          },\n                        });\n                      },\n                      onCancel() {\n                        form.setFieldValue('totp_activated', true);\n                      },\n                    });\n                  }\n                }\n              }}\n            />\n          </Form.Item>\n        )}\n      </Form>\n      {!!totpSupported && (\n        <TOTPActivateModal\n          userFrgmt={user}\n          open={isOpenTOTPActivateModal}\n          onRequestClose={(success) => {\n            if (success) {\n              updateFetchKey();\n            } else {\n              form.setFieldValue('totp_activated', false);\n            }\n            toggleTOTPActivateModal();\n          }}\n        />\n      )}\n      {contextHolder}\n    </BAIModal>\n  );\n};\n\nexport default UserSettingModal;\n","/**\n * @generated SignedSource<<84ef114f996ea8a63ee4526fc5d27953>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type TOTPActivateModalFragment$data = {\n  readonly email: string | null;\n  readonly totp_activated: boolean | null;\n  readonly \" $fragmentType\": \"TOTPActivateModalFragment\";\n};\nexport type TOTPActivateModalFragment$key = {\n  readonly \" $data\"?: TOTPActivateModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"isNotSupportTotp\"\n    }\n  ],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"TOTPActivateModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"User\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f5da6b3094f7d70bef9373d9c907955c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<47a5683ea754901748162f402e6ef93d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModifyUserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null> | null;\n  description?: string | null;\n  domain_name?: string | null;\n  full_name?: string | null;\n  group_ids?: ReadonlyArray<string | null> | null;\n  is_active?: boolean | null;\n  need_password_change?: boolean | null;\n  password?: string | null;\n  resource_policy?: string | null;\n  role?: string | null;\n  status?: string | null;\n  totp_activated?: boolean | null;\n  username?: string | null;\n};\nexport type UserSettingModalMutation$variables = {\n  email: string;\n  isNotSupportTotp: boolean;\n  props: ModifyUserInput;\n};\nexport type UserSettingModalMutation$data = {\n  readonly modify_user: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n    readonly user: {\n      readonly description: string | null;\n      readonly domain_name: string | null;\n      readonly email: string | null;\n      readonly full_name: string | null;\n      readonly groups: ReadonlyArray<{\n        readonly id: any | null;\n        readonly name: string | null;\n      } | null> | null;\n      readonly id: string | null;\n      readonly need_password_change: boolean | null;\n      readonly role: string | null;\n      readonly status: string | null;\n      readonly totp_activated: boolean | null;\n      readonly username: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n    } | null;\n  } | null;\n};\nexport type UserSettingModalMutation = {\n  response: UserSettingModalMutation$data;\n  variables: UserSettingModalMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportTotp\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"props\",\n    \"variableName\": \"props\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ok\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"msg\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v6/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TOTPActivateModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"5d5c7ff235856d2c08169131fadc0f14\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserSettingModalMutation(\\n  $email: String!\\n  $props: ModifyUserInput!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  modify_user(email: $email, props: $props) {\\n    ok\\n    msg\\n    user {\\n      id\\n      email\\n      username\\n      need_password_change\\n      full_name\\n      description\\n      status\\n      domain_name\\n      role\\n      groups {\\n        id\\n        name\\n      }\\n      totp_activated @skipOnClient(if: $isNotSupportTotp)\\n      ...TOTPActivateModalFragment\\n    }\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"021dbd1c9e2f622338330e746b9c4b3b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<d066559ec0d765aaed8ac5f7dc499b1a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserSettingModalQuery$variables = {\n  email?: string | null;\n  isNotSupportTotp: boolean;\n  loggedInUserEmail?: string | null;\n};\nexport type UserSettingModalQuery$data = {\n  readonly loggedInUser: {\n    readonly role: string | null;\n  } | null;\n  readonly user: {\n    readonly description: string | null;\n    readonly domain_name: string | null;\n    readonly email: string | null;\n    readonly full_name: string | null;\n    readonly groups: ReadonlyArray<{\n      readonly id: any | null;\n      readonly name: string | null;\n    } | null> | null;\n    readonly need_password_change: boolean | null;\n    readonly role: string | null;\n    readonly status: string | null;\n    readonly totp_activated: boolean | null;\n    readonly username: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n  } | null;\n};\nexport type UserSettingModalQuery = {\n  response: UserSettingModalQuery$data;\n  variables: UserSettingModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportTotp\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"loggedInUserEmail\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n},\nv13 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"loggedInUserEmail\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"TOTPActivateModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"loggedInUser\",\n        \"args\": (v13/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v9/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"loggedInUser\",\n        \"args\": (v13/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v9/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"f5c73f63d25dff1f189acfc0eb698438\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSettingModalQuery(\\n  $email: String\\n  $isNotSupportTotp: Boolean!\\n  $loggedInUserEmail: String\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    totp_activated @skipOnClient(if: $isNotSupportTotp)\\n    ...TOTPActivateModalFragment\\n    id\\n  }\\n  loggedInUser: user(email: $loggedInUserEmail) {\\n    role\\n    id\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"a34969350a5ae4fcee0bbba23cc88484\";\n\nexport default node;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useQuery } from 'react-query';\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener('backend-ai-connected', listener);\n    return () => {\n      document.removeEventListener('backend-ai-connected', listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener('backend-ai-group-changed', listener);\n    return () => {\n      document.removeEventListener('backend-ai-group-changed', listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      '',\n      '',\n      api_endpoint,\n      'SESSION',\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, 'Backend.AI Console.');\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: 'backendai-client-for-suspense',\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === 'undefined' ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener('backend-ai-connected', listener);\n          };\n          document.addEventListener('backend-ai-connected', listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: 'backendai-metadata-for-suspense',\n    queryFn: () => {\n      return fetch('resources/image_metadata.json')\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          },\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: '',\n        tags: [],\n      };\n    }\n    const specs = imageName.split('/');\n\n    const [key, tag] = (specs[2] || specs[1]).split(':');\n    const tags = tag.split('-');\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = 'resources/icons/') => {\n        if (!imageName) return 'default.png';\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key]?.icon !== undefined\n            ? metadata?.imageInfo[key]?.icon\n            : 'default.png')\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n","import { useQuery, useMutation } from 'react-query';\n\nexport const useTanQuery = useQuery;\nexport const useTanMutation = useMutation;\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","removeSkipOnClientDirective","query","variables","filteredVariables","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","text","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","document","addEventListener","removeEventListener","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","RelayEnvironmentProvider","environment","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","locale","ko_KR","en_US","theme","StyleProvider","container","Suspense","fallback","BrowserRouter","_ref$userFrgmt","userFrgmt","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","t","token","useToken","_Form$useForm","Form","useForm","form","user","useFragment","_TOTPActivateModalFragment","require","baiClient","useSuspendedBackendaiClient","initializedTotp","useQuery","queryKey","email","open","queryFn","totp_activated","initialize_totp","staleTime","cacheTime","mutationToActivateTotp","useTanMutation","mutationFn","values","activate_totp","otp","BAIModal","title","maskClosable","confirmLoading","isLoading","onOk","validateFields","then","mutate","onSuccess","message","success","onError","error","Promise","resolve","reject","onCancel","style","zIndex","Flex","justify","direction","Spin","data","preserve","validateTrigger","margin","marginSM","gap","QRCode","totp_uri","Typography","Text","copyable","code","totp_key","Item","required","name","Input","maxLength","allowClear","placeholder","maxWidth","_baiClient$email","parsedValue","_ref$extraFetchKey","extraFetchKey","_useWebComponentInfo","JSON","parse","userEmail","totpSupported","_parsedValue","_Modal$useModal","useModal","_Modal$useModal2","modal","contextHolder","permissionRangeOfRoleChanges","superadmin","admin","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","deferredMergedFetchKey","useDeferredValue","_useQuery","isManagerSupportingTOTP","isLoadingManagerSupportingTOTP","supports","_useLazyLoadQuery","useLazyLoadQuery","_UserSettingModalQuery","isNotSupportTotp","loggedInUserEmail","fetchPolicy","loggedInUser","_useMutation","useMutation","_UserSettingModalMutation","_useMutation2","commitModifyUserSetting","isInFlightCommitModifyUserSetting","mutationToRemoveTotp","remove_totp","_useToggle","useToggle","_useToggle2","isOpenTOTPActivateModal","toggleTOTPActivateModal","toggle","destroyOnClose","_ref2","input","_input","_","item","undefined","props","onCompleted","res","_res$modify_user","_res$modify_user2","modify_user","ok","msg","err","labelCol","span","wrapperCol","marginBottom","marginTop","initialValues","label","disabled","rules","Password","dependencies","_ref3","getFieldValue","validator","Error","TextArea","Select","options","active","inactive","deleted","key","role","valuePropName","Switch","extra","type","fontSize","loading","onChange","checked","setFieldValue","confirm","icon","ExclamationCircleFilled","content","okText","okType","cancelText","console","log","TOTPActivateModal","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","hash","initialValue","_useState3","Date","toISOString","_useState4","setValue","newValue","useDateISOState","useCurrentDomainValue","_config","domainName","useCurrentProjectValue","_useState5","current_group","id","groupIds","_useState6","project","_setProject","listener","newProjectName","useAnonymousBackendaiClient","api_endpoint","clientConfig","BackendAIClientConfig","BackendAIClient","ready","useBackendaiImageMetaData","metadata","fetch","response","json","getImageMeta","imageName","tags","specs","_split","_split2","getImageAliasName","imageInfo","getImageIcon","_metadata$imageInfo$k","_metadata$imageInfo$k2","getImageTags","getBaseVersion","getBaseImage","useTanQuery"],"sourceRoot":""}