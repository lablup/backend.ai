{"version":3,"file":"static/js/930.86dbb6d3.chunk.js","mappings":"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","sources":["hooks/useIntervalValue.tsx","components/BAIIntervalText.tsx","components/SessionListColums/__generated__/SessionInfoCellFragment.graphql.ts","components/__generated__/SessionListQuery.graphql.ts","components/ResourceAvailableGageBar.tsx","components/AvailableResourcesCard.tsx","components/SessionListColums/SessionInfoCell.tsx","../node_modules/@ant-design/icons-svg/es/asn/GroupOutlined.js","../node_modules/@ant-design/icons/es/icons/GroupOutlined.js","components/SessionList.tsx","../node_modules/@ant-design/icons-svg/es/asn/PoweroffOutlined.js","../node_modules/@ant-design/icons/es/icons/PoweroffOutlined.js","pages/SessionListPage.tsx","../node_modules/@ant-design/icons-svg/es/asn/ThunderboltTwoTone.js","../node_modules/@ant-design/icons/es/icons/ThunderboltTwoTone.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\n/**\n * Custom hook that executes a callback function at a specified interval.\n *\n * @param callback The function to be executed at the specified interval.\n * @param delay The delay (in milliseconds) between each execution of the callback function. If `null`, the interval is cleared(pause).\n */\nexport function useInterval(callback: () => void, delay: number) {\n  const savedCallback = useRef<() => any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current?.();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n/**\n * Custom hook that provides a value updated at a specified interval.\n *\n * @param calculator - A function that calculates the value.\n * @param delay - The delay in milliseconds between updates.\n * @param triggerKey - An optional key that triggers an immediate update when changed.\n * @returns The updated value.\n */\nexport const useIntervalValue = (\n  calculator: () => any,\n  delay: number,\n  triggerKey?: string,\n) => {\n  const [result, setResult] = useState(calculator());\n\n  useEffect(() => {\n    if (triggerKey) {\n      setResult(calculator());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [triggerKey]);\n\n  useInterval(() => {\n    const newResult = calculator();\n    if (newResult !== result) setResult(newResult);\n  }, delay);\n\n  return result;\n};\n","import { useIntervalValue } from '../hooks/useIntervalValue';\nimport React from 'react';\n\nconst BAIIntervalText: React.FC<{\n  callback: () => any;\n  delay: number;\n  triggerKey?: string;\n}> = ({ callback, delay, triggerKey }) => {\n  const value = useIntervalValue(callback, delay, triggerKey);\n  return value;\n};\n\nexport default BAIIntervalText;\n","/**\n * @generated SignedSource<<d8e992cf5bba499f723933a86f4eaabc>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionInfoCellFragment$data = {\n  readonly id: string | null | undefined;\n  readonly image: string | null | undefined;\n  readonly name: string | null | undefined;\n  readonly session_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionInfoCellFragment\";\n};\nexport type SessionInfoCellFragment$key = {\n  readonly \" $data\"?: SessionInfoCellFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionInfoCellFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionInfoCellFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"image\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSession\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"93f8cd0d4b47d24ea281955be0ad792b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7f325fa51024af0f2b35bf9df5e1a1a1>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionListQuery$variables = {\n  ak?: string | null | undefined;\n  group_id?: string | null | undefined;\n  limit: number;\n  offset: number;\n  skipClusterSize: boolean;\n  status?: string | null | undefined;\n};\nexport type SessionListQuery$data = {\n  readonly compute_session_list: {\n    readonly items: ReadonlyArray<{\n      readonly access_key: string | null | undefined;\n      readonly agents: ReadonlyArray<string | null | undefined> | null | undefined;\n      readonly architecture: string | null | undefined;\n      readonly cluster_size: number | null | undefined;\n      readonly created_at: string | null | undefined;\n      readonly id: string | null | undefined;\n      readonly image: string | null | undefined;\n      readonly mounts: ReadonlyArray<string | null | undefined> | null | undefined;\n      readonly name: string | null | undefined;\n      readonly occupied_slots: any | null | undefined;\n      readonly resource_opts: any | null | undefined;\n      readonly scaling_group: string | null | undefined;\n      readonly service_ports: any | null | undefined;\n      readonly session_id: string | null | undefined;\n      readonly starts_at: string | null | undefined;\n      readonly status: string | null | undefined;\n      readonly status_info: string | null | undefined;\n      readonly terminated_at: string | null | undefined;\n      readonly type: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"SessionInfoCellFragment\">;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type SessionListQuery = {\n  response: SessionListQuery$data;\n  variables: SessionListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"ak\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"group_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipClusterSize\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"status\"\n},\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"access_key\",\n    \"variableName\": \"ak\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"group_id\",\n    \"variableName\": \"group_id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"status\",\n    \"variableName\": \"status\"\n  }\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"type\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session_id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"architecture\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"terminated_at\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status_info\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"service_ports\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"mounts\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"occupied_slots\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_opts\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"access_key\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"starts_at\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"scaling_group\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"agents\",\n  \"storageKey\": null\n},\nv25 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"cluster_size\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"SessionListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"ComputeSessionList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ComputeSession\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/),\n              (v21/*: any*/),\n              (v22/*: any*/),\n              (v23/*: any*/),\n              (v24/*: any*/),\n              (v25/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"SessionInfoCellFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v5/*: any*/),\n      (v4/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"SessionListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"ComputeSessionList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ComputeSession\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/),\n              (v21/*: any*/),\n              (v22/*: any*/),\n              (v23/*: any*/),\n              (v24/*: any*/),\n              (v25/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"user_email\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"83e3fabcd47538a643850d50617579a5\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"SessionListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query SessionListQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $ak: String\\n  $group_id: String\\n  $status: String\\n  $skipClusterSize: Boolean!\\n) {\\n  compute_session_list(limit: $limit, offset: $offset, access_key: $ak, group_id: $group_id, status: $status) {\\n    items {\\n      id\\n      type\\n      session_id\\n      name\\n      image\\n      architecture\\n      created_at\\n      terminated_at\\n      status\\n      status_info\\n      service_ports\\n      mounts\\n      occupied_slots\\n      resource_opts\\n      access_key\\n      starts_at\\n      scaling_group\\n      agents\\n      cluster_size @skipOnClient(if: $skipClusterSize)\\n      ...SessionInfoCellFragment\\n    }\\n  }\\n}\\n\\nfragment SessionInfoCellFragment on ComputeSession {\\n  id\\n  session_id\\n  name\\n  status\\n  user_email\\n  image\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b0859dbf2946abcb56ec83ac42d76781\";\n\nexport default node;\n","import Flex from './Flex';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Tooltip, Typography, theme } from 'antd';\nimport React from 'react';\n\nexport interface ResourceAvailableGageBarProps {\n  title?: React.ReactNode;\n  valueLabel?: React.ReactNode;\n  percent?: number;\n  infoTooltip?: React.ReactNode;\n}\nconst ResourceAvailableGageBar: React.FC<ResourceAvailableGageBarProps> = ({\n  title,\n  valueLabel,\n  percent = 0,\n  infoTooltip,\n}) => {\n  const { token } = theme.useToken();\n  return (\n    <Flex gap={'xxs'}>\n      <Flex\n        style={{\n          padding: 1,\n          border: '1px solid #d9d9d9',\n          borderRadius: 3,\n          width: 150,\n          backgroundColor: token.colorBgContainerDisabled,\n        }}\n        direction=\"column\"\n        align=\"stretch\"\n      >\n        <Flex\n          style={{\n            height: '100%',\n            width: `${percent}%`,\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            backgroundColor: token.colorSuccess,\n            opacity: 0.7,\n            zIndex: 0,\n            overflow: 'hidden',\n          }}\n        ></Flex>\n        <Flex direction=\"row\" justify=\"between\">\n          <Typography.Text>{title}</Typography.Text>\n          <Typography.Text>{valueLabel}</Typography.Text>\n        </Flex>\n      </Flex>\n      {infoTooltip && (\n        <Tooltip title={infoTooltip}>\n          <InfoCircleOutlined />\n        </Tooltip>\n      )}\n    </Flex>\n  );\n};\n\nexport default ResourceAvailableGageBar;\n","import { iSizeToSize } from '../helper';\nimport { useCurrentProjectValue } from '../hooks';\nimport { useResourceLimitAndRemaining } from '../hooks/useResourceLimitAndRemaining';\nimport Flex from './Flex';\nimport ResourceAvailableGageBar from './ResourceAvailableGageBar';\nimport ResourceGroupSelect from './ResourceGroupSelect';\nimport { QuestionCircleOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { Button, Card, Tooltip } from 'antd';\nimport React, { useDeferredValue, useState } from 'react';\n\nconst AvailableResourcesCard = () => {\n  const currentProject = useCurrentProjectValue();\n  const [selectedResourceGroup, setSelectedResourceGroup] = useState();\n  const deferredSelectedResourceGroup = useDeferredValue(selectedResourceGroup);\n  const [{ remaining, resourceLimits, resourceGroupResourceSize }] =\n    useResourceLimitAndRemaining({\n      currentProjectName: currentProject.name,\n      currentResourceGroup: deferredSelectedResourceGroup || 'default',\n    });\n\n  console.log(typeof remaining.mem, remaining.mem);\n  return (\n    <Card\n      title={\n        <Flex direction=\"row\" gap={'xs'}>\n          <ResourceGroupSelect\n            showSearch\n            autoSelectDefault\n            style={{ minWidth: 100 }}\n            value={selectedResourceGroup}\n            onChange={(v) => setSelectedResourceGroup(v)}\n            loading={selectedResourceGroup !== deferredSelectedResourceGroup}\n            popupMatchSelectWidth={false}\n          />{' '}\n          리소스 그룹 사용 가능한 자원\n          <Tooltip\n            title={\n              '선택한 리소스 그룹에서 현재 사용자가 지금 바로 사용가능한 리소스 양으로 현재 사용자에게 적용되는 리소스 정책과 리소스 그룹의 가용양에 따라 결정됩니다.'\n            }\n          >\n            <QuestionCircleOutlined />\n          </Tooltip>\n        </Flex>\n      }\n      extra={[<Button icon={<ReloadOutlined />} type=\"text\" />]}\n    >\n      <Flex gap={'md'}>\n        <ResourceAvailableGageBar\n          title=\"CPU\"\n          percent={\n            (remaining.cpu /\n              // @ts-ignore\n              (resourceLimits.cpu\n                ? resourceLimits.cpu.max\n                : resourceGroupResourceSize.cpu)) *\n            100\n          }\n          valueLabel={remaining.cpu + ' Core'}\n        />\n        <ResourceAvailableGageBar\n          title=\"MEM\"\n          percent={\n            ((iSizeToSize(remaining.mem + '', 'm')?.number || 0) /\n              (iSizeToSize(resourceLimits.mem?.max + '', 'm')?.number || 1)) *\n            100\n          }\n          valueLabel={\n            iSizeToSize(remaining.mem + '', 'g', 2)?.numberFixed + ' GiB'\n          }\n        />\n      </Flex>\n    </Card>\n  );\n};\n\nexport default AvailableResourcesCard;\n","import {\n  // useBackendaiImageMetaData,\n  useSuspendedBackendaiClient,\n} from '../../hooks';\nimport { useTanMutation } from '../../hooks/reactQueryAlias';\nimport Flex from '../Flex';\nimport { SessionInfoCellFragment$key } from './__generated__/SessionInfoCellFragment.graphql';\nimport { EditOutlined } from '@ant-design/icons';\nimport { Button, Form, FormInstance, Input, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst isRunningStatus = (status: string = '') => {\n  return [\n    'RUNNING',\n    'RESTARTING',\n    'TERMINATING',\n    'PENDING',\n    'SCHEDULED',\n    'PREPARING',\n    'PULLING',\n  ].includes(status);\n};\n\nconst isPreparing = (status: string = '') => {\n  return ['RESTARTING', 'PREPARING', 'PULLING'].includes(status);\n};\n\nconst SessionInfoCell: React.FC<{\n  sessionFrgmt: SessionInfoCellFragment$key;\n  sessionNameList: string[];\n  onRename?: () => void;\n}> = ({ sessionFrgmt, sessionNameList, onRename }) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const session = useFragment(\n    graphql`\n      fragment SessionInfoCellFragment on ComputeSession {\n        id\n        session_id\n        name\n        status\n        user_email\n        image\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  // const metadata = useBackendaiImageMetaData();\n\n  const mutation = useTanMutation({\n    mutationFn: (newName: string) => {\n      const sessionId =\n        baiClient.APIMajorVersion < 5 ? session.name : session.session_id;\n      return baiClient.rename(sessionId, newName);\n    },\n  });\n\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n\n  const [editing, setEditing] = useState(false);\n  const [optimisticName, setOptimisticName] = useState(session.name);\n  const editable =\n    isRunningStatus(session.status || undefined) &&\n    !isPreparing(session.status || undefined) &&\n    baiClient.email === session.user_email;\n\n  const save = () => {\n    formRef.current\n      ?.validateFields()\n      .then(({ name }) => {\n        setEditing(false);\n        if (session.name === name) return;\n        setOptimisticName(name);\n        mutation.mutate(name, {\n          onSuccess: (result) => {\n            onRename && onRename();\n          },\n          onError: (error) => {\n            setOptimisticName(session.name);\n          },\n        });\n      })\n      .catch(() => {});\n  };\n\n  const isPendingRename = mutation.isLoading || optimisticName !== session.name;\n\n  // sessions[objectKey].icon = this._getKernelIcon(session.image);\n  //         sessions[objectKey].sessionTags = this._getKernelInfo(session.image);\n  return (\n    <Form ref={formRef}>\n      {editing ? (\n        <Form.Item\n          style={{ margin: 0 }}\n          name={'name'}\n          rules={[\n            {\n              required: true,\n            },\n            {\n              max: 64,\n            },\n            {\n              pattern: /^(?:[a-zA-Z0-9][-a-zA-Z0-9._]{2,}[a-zA-Z0-9])?$/,\n              message: t('session.Validation.EnterValidSessionName'),\n            },\n            () => ({\n              validator(form, value) {\n                if (\n                  _.without(sessionNameList, session.name).includes(\n                    String(value),\n                  )\n                ) {\n                  return Promise.reject(\n                    new Error(t('session.Validation.SessionNameAlreadyExist')),\n                  );\n                }\n                return Promise.resolve();\n              },\n            }),\n          ]}\n        >\n          <Input\n            autoFocus\n            onPressEnter={() => save()}\n            onKeyUp={(e) => {\n              if (e.key === 'Escape') setEditing(false);\n            }}\n          />\n        </Form.Item>\n      ) : (\n        <Flex style={{ maxWidth: 250 }}>\n          <Typography.Text\n            ellipsis={{\n              tooltip: { overlayInnerStyle: { width: 'max-content' } },\n            }}\n            style={{ opacity: isPendingRename ? 0.5 : 1 }}\n          >\n            {optimisticName}\n          </Typography.Text>\n          {editable && (\n            <Button\n              loading={isPendingRename}\n              type=\"text\"\n              icon={<EditOutlined />}\n              style={{ color: token.colorLink }}\n              onClick={() => {\n                formRef.current?.setFieldsValue({\n                  name: session.name,\n                });\n                setEditing(true);\n              }}\n            ></Button>\n          )}\n        </Flex>\n      )}\n    </Form>\n  );\n};\n\nexport default SessionInfoCell;\n","// This icon file is generated automatically.\nvar GroupOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M912 820.1V203.9c28-9.9 48-36.6 48-67.9 0-39.8-32.2-72-72-72-31.3 0-58 20-67.9 48H203.9C194 84 167.3 64 136 64c-39.8 0-72 32.2-72 72 0 31.3 20 58 48 67.9v616.2C84 830 64 856.7 64 888c0 39.8 32.2 72 72 72 31.3 0 58-20 67.9-48h616.2c9.9 28 36.6 48 67.9 48 39.8 0 72-32.2 72-72 0-31.3-20-58-48-67.9zM888 112c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zM136 912c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-752c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm704 680H184V184h656v656zm48 72c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M288 474h448c8.8 0 16-7.2 16-16V282c0-8.8-7.2-16-16-16H288c-8.8 0-16 7.2-16 16v176c0 8.8 7.2 16 16 16zm56-136h336v64H344v-64zm-56 420h448c8.8 0 16-7.2 16-16V566c0-8.8-7.2-16-16-16H288c-8.8 0-16 7.2-16 16v176c0 8.8 7.2 16 16 16zm56-136h336v64H344v-64z\" } }] }, \"name\": \"group\", \"theme\": \"outlined\" };\nexport default GroupOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport GroupOutlinedSvg from \"@ant-design/icons-svg/es/asn/GroupOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar GroupOutlined = function GroupOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: GroupOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(GroupOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'GroupOutlined';\n}\nexport default RefIcon;","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useBackendAIImageMetaData } from '../hooks';\nimport BAIIntervalText from './BAIIntervalText';\nimport DoubleTag from './DoubleTag';\nimport Flex from './Flex';\nimport ImageMetaIcon from './ImageMetaIcon';\nimport ResourceNumber from './ResourceNumber';\nimport SessionInfoCell from './SessionListColums/SessionInfoCell';\nimport { SessionListQuery } from './__generated__/SessionListQuery.graphql';\nimport { FolderOutlined, GroupOutlined } from '@ant-design/icons';\nimport { Table, TableProps, Tag, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ntype Session = NonNullable<\n  SessionListQuery['response']['compute_session_list']\n>['items'][0];\ninterface SessionListProps extends Omit<TableProps<any>, 'dataSource'> {\n  status?: string[];\n  limit?: number;\n  currentPage?: number;\n  pageSize?: number;\n  projectId?: string;\n  filter: (item: Session) => boolean;\n  extraFetchKey?: string;\n}\n\nconst SessionList: React.FC<SessionListProps> = ({\n  status = [],\n  limit = 50,\n  currentPage = 1,\n  pageSize = 50,\n  projectId,\n  filter,\n  extraFetchKey = '',\n  ...tableProps\n}) => {\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const deferredMergedFetchKey = useDeferredValue(fetchKey + extraFetchKey);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [, { getImageAliasName, getBaseVersion, getBaseImage }] =\n    useBackendAIImageMetaData();\n\n  if (\n    !baiClient.supports('avoid-hol-blocking') &&\n    status.includes('SCHEDULED')\n  ) {\n    status = status.filter((e) => e !== 'SCHEDULED');\n  }\n\n  const { compute_session_list } = useLazyLoadQuery<SessionListQuery>(\n    graphql`\n      query SessionListQuery(\n        $limit: Int!\n        $offset: Int!\n        $ak: String\n        $group_id: String\n        $status: String\n        $skipClusterSize: Boolean!\n      ) {\n        compute_session_list(\n          limit: $limit\n          offset: $offset\n          access_key: $ak\n          group_id: $group_id\n          status: $status\n        ) {\n          items {\n            id\n            type\n            session_id\n            name\n            image\n            architecture\n            created_at\n            terminated_at\n            status\n            status_info\n            service_ports\n            mounts\n            occupied_slots\n            resource_opts\n            access_key\n            starts_at\n            scaling_group\n            agents\n            image\n            cluster_size @skipOnClient(if: $skipClusterSize)\n            ...SessionInfoCellFragment\n          }\n        }\n      }\n    `,\n    {\n      limit: pageSize,\n      offset: (currentPage - 1) * pageSize,\n      status: status?.join(','),\n      group_id: projectId,\n\n      // skipOnClients\n      skipClusterSize: !baiClient.supports('multi-container'),\n    },\n    {\n      fetchKey: deferredMergedFetchKey,\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const statusTagColor = {\n    //prepare\n    RESTARTING: 'blue',\n    PREPARING: 'blue',\n    PULLING: 'blue',\n    //running\n    RUNNING: 'green',\n    PENDING: 'green',\n    SCHEDULED: 'green',\n    //error\n    ERROR: 'red',\n    //finished return undefined\n  };\n\n  const statusInfoTagColor = {\n    'idle-timeout': 'green',\n    'user-requested': 'green',\n    scheduled: 'green',\n    'self-terminated': 'green',\n    'no-available-instances': 'red',\n    'failed-to-start': 'red',\n    'creation-failed': 'red',\n  };\n\n  const typeTagColor = {\n    INTERACTIVE: 'green',\n    BATCH: 'darkgreen',\n    INFERENCE: 'blue',\n  };\n\n  return (\n    <>\n      <Table\n        scroll={{ x: 'max-content' }}\n        columns={[\n          {\n            title: t('session.SessionInfo'),\n            render(value, record, index) {\n              return (\n                <SessionInfoCell\n                  key={record.session_id}\n                  sessionFrgmt={record}\n                  sessionNameList={_.map(\n                    (compute_session_list?.items || []).filter(filter) || [],\n                    'name',\n                  )}\n                  onRename={() => {\n                    updateFetchKey(\n                      record.session_id + new Date().toISOString(),\n                    );\n                  }}\n                />\n              );\n            },\n            fixed: 'left',\n          },\n          {\n            title: t('session.Status'),\n            dataIndex: 'status',\n            render(value, record) {\n              return (\n                <>\n                  {record.status_info !== '' ? (\n                    <DoubleTag\n                      values={[\n                        { label: value, color: _.get(statusTagColor, value) },\n                        {\n                          label: record.status_info,\n                          color: _.get(statusInfoTagColor, record.status_info),\n                        },\n                      ]}\n                    />\n                  ) : (\n                    <Tag color={_.get(statusTagColor, value)}>{value}</Tag>\n                  )}\n                </>\n              );\n            },\n          },\n          {\n            title: t('general.Control'),\n          },\n          {\n            title: t('session.Configuration'),\n            dataIndex: 'mounts',\n            render(value, record) {\n              return (\n                <>\n                  {value.length > 0 ? (\n                    <Flex gap=\"xxs\" style={{ width: 200 }}>\n                      <FolderOutlined />\n                      <Typography.Text\n                        ellipsis={{\n                          tooltip: {\n                            overlayInnerStyle: { width: 'max-content' },\n                            title: _.map(value, (mountedFolder) => {\n                              return <div>{mountedFolder}</div>;\n                            }),\n                          },\n                        }}\n                      >\n                        {value.join(', ')}\n                      </Typography.Text>\n                    </Flex>\n                  ) : (\n                    <Flex gap=\"xxs\" style={{ color: token.colorTextDisabled }}>\n                      <FolderOutlined />\n                      No mount\n                    </Flex>\n                  )}\n                  <Flex gap=\"xxs\">\n                    <GroupOutlined />\n                    {record.scaling_group}\n                  </Flex>\n                  <Flex gap=\"xxs\">\n                    {record.occupied_slots &&\n                      _.map(\n                        JSON.parse(record.occupied_slots),\n                        (value, type) => {\n                          return (\n                            <ResourceNumber\n                              key={type}\n                              // @ts-ignore\n                              type={type}\n                              value={_.toString(value)}\n                              opts={{\n                                shmem: _.sum(\n                                  _.map(\n                                    JSON.parse(record.resource_opts),\n                                    (item) => {\n                                      return item.shmem;\n                                    },\n                                  ),\n                                ),\n                              }}\n                            />\n                          );\n                        },\n                      )}\n                  </Flex>\n                </>\n              );\n            },\n          },\n          {\n            title: t('session.Usage'),\n          },\n          {\n            title: t('session.Reservation'),\n            dataIndex: 'created_at',\n            render(value, record) {\n              const localeStringDate = new Date(value).toLocaleString();\n\n              return (\n                <Flex direction=\"column\" gap=\"xs\">\n                  {localeStringDate}\n                  <DoubleTag\n                    values={[\n                      t('session.ElapsedTime'),\n                      <BAIIntervalText\n                        callback={() => {\n                          return baiClient.utils.elapsedTime(\n                            value,\n                            record.terminated_at,\n                          );\n                        }}\n                        delay={1000}\n                      />,\n                    ]}\n                  />\n                </Flex>\n              );\n            },\n          },\n          {\n            title: t('session.EnvironmentInfo'),\n            render: (record) => {\n              return (\n                <Tag color=\"gold\">\n                  <Flex direction=\"column\">\n                    <Flex gap=\"xxs\">\n                      <ImageMetaIcon image={record.image} />\n                      {/*<div> to apply gap */}\n                      <div>{getImageAliasName(record.image)}</div>\n                      {getBaseVersion(record.image)}\n                    </Flex>\n                    <Flex gap=\"xxs\">\n                      {/*<div> to apply gap */}\n                      <div>{getBaseImage(record.image)}</div>\n                      {record.architecture}\n                    </Flex>\n                  </Flex>\n                </Tag>\n              );\n            },\n          },\n          {\n            title: t('session.SessionType'),\n            dataIndex: 'type',\n            render: (value) => {\n              return <Tag color={_.get(typeTagColor, value)}>{value}</Tag>;\n            },\n          },\n          ...(baiClient.is_admin || !!baiClient._config.hideAgents\n            ? [\n                {\n                  title: t('session.Agents'),\n                  dataIndex: 'agents',\n                  render(value: string[]) {\n                    return _.map(value, (agent) => {\n                      return agent;\n                    });\n                  },\n                },\n              ]\n            : []),\n        ]}\n        // @ts-ignore\n        dataSource={(compute_session_list?.items || []).filter(filter)}\n        // dataSource={_.filter(compute_session_list?.items || [], () => {})}\n        // pagination={{\n\n        // }}\n        {...tableProps}\n      />\n    </>\n  );\n};\n\nexport default SessionList;\n","// This icon file is generated automatically.\nvar PoweroffOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M705.6 124.9a8 8 0 00-11.6 7.2v64.2c0 5.5 2.9 10.6 7.5 13.6a352.2 352.2 0 0162.2 49.8c32.7 32.8 58.4 70.9 76.3 113.3a355 355 0 0127.9 138.7c0 48.1-9.4 94.8-27.9 138.7a355.92 355.92 0 01-76.3 113.3 353.06 353.06 0 01-113.2 76.4c-43.8 18.6-90.5 28-138.5 28s-94.7-9.4-138.5-28a353.06 353.06 0 01-113.2-76.4A355.92 355.92 0 01184 650.4a355 355 0 01-27.9-138.7c0-48.1 9.4-94.8 27.9-138.7 17.9-42.4 43.6-80.5 76.3-113.3 19-19 39.8-35.6 62.2-49.8 4.7-2.9 7.5-8.1 7.5-13.6V132c0-6-6.3-9.8-11.6-7.2C178.5 195.2 82 339.3 80 506.3 77.2 745.1 272.5 943.5 511.2 944c239 .5 432.8-193.3 432.8-432.4 0-169.2-97-315.7-238.4-386.7zM480 560h64c4.4 0 8-3.6 8-8V88c0-4.4-3.6-8-8-8h-64c-4.4 0-8 3.6-8 8v464c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"poweroff\", \"theme\": \"outlined\" };\nexport default PoweroffOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PoweroffOutlinedSvg from \"@ant-design/icons-svg/es/asn/PoweroffOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PoweroffOutlined = function PoweroffOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PoweroffOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(PoweroffOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'PoweroffOutlined';\n}\nexport default RefIcon;","import AvailableResourcesCard from '../components/AvailableResourcesCard';\nimport Flex from '../components/Flex';\nimport SessionList from '../components/SessionList';\nimport {\n  useCurrentProjectValue,\n  useSuspendedBackendaiClient,\n  useWebUINavigate,\n} from '../hooks';\nimport { useCurrentKeyPairResourcePolicyLazyLoadQuery } from '../hooks/hooksUsingRelay';\nimport { PoweroffOutlined, ThunderboltTwoTone } from '@ant-design/icons';\nimport { Alert, Button, Card, Segmented, Typography, theme } from 'antd';\nimport React, { PropsWithChildren, Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst RUNNINGS = [\n  'RUNNING',\n  'RESTARTING',\n  'TERMINATING',\n  'PENDING',\n  'SCHEDULED',\n  'PREPARING',\n  'PULLING',\n];\nconst TAB_STATUS_MAP = {\n  running: RUNNINGS,\n  interactive: RUNNINGS,\n  batch: RUNNINGS,\n  inference: RUNNINGS,\n  finished: ['TERMINATED', 'CANCELLED'],\n  others: ['TERMINATING', 'ERROR'],\n  default: RUNNINGS,\n};\n\ntype TabKey =\n  | 'running'\n  | 'interactive'\n  | 'batch'\n  | 'inference'\n  | 'finished'\n  | 'others'\n  | 'default';\nconst SessionListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const webuiNavigate = useWebUINavigate();\n\n  const [selectedTab, setSelectedTab] = useState<TabKey>('running');\n  const [selectedGeneration, setSelectedGeneration] = useState<\n    'current' | 'next'\n  >('next');\n\n  const [{ keypair, keypairResourcePolicy }] =\n    useCurrentKeyPairResourcePolicyLazyLoadQuery();\n  // console.log(compute_session_list?.items[0].);\n  return (\n    <Flex direction=\"column\" align=\"stretch\" gap={'sm'}>\n      <Alert\n        message={\n          <Flex gap={'md'}>\n            <Typography.Text>\n              This is{' '}\n              {selectedGeneration === 'current'\n                ? 'current version'\n                : 'NEXT generation'}{' '}\n              of session list. you can switch anytime.\n            </Typography.Text>\n            <Segmented\n              options={[\n                {\n                  label: 'Current',\n                  value: 'current',\n                },\n                {\n                  label: (\n                    <Typography.Text\n                      style={{\n                        color:\n                          selectedGeneration === 'next'\n                            ? token.colorPrimary\n                            : undefined,\n                      }}\n                    >\n                      Next\n                    </Typography.Text>\n                  ),\n                  value: 'next',\n                  icon: (\n                    // <ThunderboltFilled style={{ color: token.colorPrimary }} />\n                    <ThunderboltTwoTone twoToneColor={token.colorWarning} />\n                  ),\n                },\n              ]}\n              value={selectedGeneration}\n              // @ts-ignore\n              onChange={(x) => setSelectedGeneration(x)}\n            />\n          </Flex>\n        }\n        type=\"info\"\n        showIcon\n      />\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{\n          display: selectedGeneration === 'next' ? 'flex' : 'none',\n        }}\n        gap={'sm'}\n      >\n        <AvailableResourcesCard />\n        <Card\n          bodyStyle={{\n            padding: 0,\n          }}\n          tabList={[\n            {\n              key: 'running',\n              label: (\n                <>\n                  {t('session.Running') +\n                    ` (${keypair.concurrency_used}/${keypairResourcePolicy.max_concurrent_sessions === 1000000 ? '∞' : keypairResourcePolicy.max_concurrent_sessions})`}\n                  {/* <Tooltip><InfoCircleOutlined/></Tooltip> */}\n                </>\n              ),\n            },\n            {\n              key: 'interactive',\n              label: t('session.Interactive'),\n            },\n            {\n              key: 'batch',\n              label: t('session.Batch'),\n            },\n            ...(baiClient.supports('inference-workload')\n              ? [\n                  {\n                    key: 'inference',\n                    label: t('session.Inference'),\n                  },\n                ]\n              : []),\n            {\n              key: 'finished',\n              label: t('session.Finished'),\n            },\n            {\n              key: 'others',\n              label: t('session.Others'),\n            },\n          ]}\n          activeTabKey={selectedTab}\n          onTabChange={(key) => setSelectedTab(key as TabKey)}\n          tabBarExtraContent={\n            <Flex direction=\"row\" gap={'sm'}>\n              {/* <Tooltip title={t(\"session.exportCSV\")}>\n                    <Button icon={<DownloadOutlined />} type=\"text\" />\n                  </Tooltip> */}\n              {/* @ts-ignore */}\n              <Button\n                type=\"primary\"\n                icon={<PoweroffOutlined />}\n                onClick={() => {\n                  webuiNavigate('/session/start');\n                }}\n              >\n                START\n              </Button>\n            </Flex>\n          }\n        >\n          {children}\n          <Flex direction=\"column\" align=\"stretch\">\n            <Suspense fallback={<div>loading..</div>}>\n              <Flex\n                // style={{\n                //   marginLeft: -1,\n                //   marginRight: -1,\n                // }}\n                direction=\"column\"\n                align=\"stretch\"\n              >\n                <SessionList\n                  projectId={curProject.id}\n                  // bordered\n                  style={{\n                    marginTop: 1,\n                  }}\n                  status={\n                    TAB_STATUS_MAP[selectedTab] || TAB_STATUS_MAP['default']\n                  }\n                  filter={(session) => {\n                    if (\n                      ['interactive', 'batch', 'inference'].includes(\n                        selectedTab,\n                      )\n                    ) {\n                      return session?.type?.toLowerCase() === selectedTab;\n                    }\n                    return true;\n                  }}\n                  extraFetchKey={selectedTab}\n                />\n              </Flex>\n            </Suspense>\n          </Flex>\n        </Card>\n      </Flex>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{\n          display: selectedGeneration === 'next' ? 'none' : 'flex',\n        }}\n      >\n        {/* @ts-ignore */}\n        <backend-ai-session-view\n          class=\"page\"\n          name=\"job\"\n          active={selectedGeneration !== 'next' ? true : null}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default SessionListPage;\n","// This icon file is generated automatically.\nvar ThunderboltTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M695.4 164.1H470.8L281.2 491.5h157.4l-60.3 241 319.8-305.1h-211z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M848.1 359.3H627.8L825.9 109c4.1-5.3.4-13-6.3-13H436.1c-2.8 0-5.5 1.5-6.9 4L170.1 547.5c-3.1 5.3.7 12 6.9 12h174.4L262 917.1c-1.9 7.8 7.5 13.3 13.3 7.7L853.6 373c5.2-4.9 1.7-13.7-5.5-13.7zM378.3 732.5l60.3-241H281.2l189.6-327.4h224.6L487.1 427.4h211L378.3 732.5z\", \"fill\": primaryColor } }] }; }, \"name\": \"thunderbolt\", \"theme\": \"twotone\" };\nexport default ThunderboltTwoTone;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ThunderboltTwoToneSvg from \"@ant-design/icons-svg/es/asn/ThunderboltTwoTone\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar ThunderboltTwoTone = function ThunderboltTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: ThunderboltTwoToneSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(ThunderboltTwoTone);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'ThunderboltTwoTone';\n}\nexport default RefIcon;"],"names":["useIntervalValue","calculator","delay","triggerKey","result","setResult","useState","useEffect","callback","savedCallback","useRef","current","id","setInterval","_savedCallback$curren","call","clearInterval","useInterval","newResult","_ref","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","v25","hash","title","valueLabel","percent","infoTooltip","token","theme","useToken","_jsxs","Flex","gap","children","style","padding","border","borderRadius","width","backgroundColor","colorBgContainerDisabled","direction","align","_jsx","height","concat","position","left","top","colorSuccess","opacity","zIndex","overflow","justify","Typography","Text","Tooltip","InfoCircleOutlined","AvailableResourcesCard","_iSizeToSize","_iSizeToSize2","_resourceLimits$mem","_iSizeToSize3","currentProject","useCurrentProjectValue","selectedResourceGroup","setSelectedResourceGroup","deferredSelectedResourceGroup","useDeferredValue","remaining","resourceLimits","resourceGroupResourceSize","useResourceLimitAndRemaining","currentProjectName","name","currentResourceGroup","console","log","mem","Card","ResourceGroupSelect","showSearch","autoSelectDefault","minWidth","value","onChange","v","loading","popupMatchSelectWidth","QuestionCircleOutlined","extra","Button","icon","ReloadOutlined","type","ResourceAvailableGageBar","cpu","max","iSizeToSize","number","numberFixed","sessionFrgmt","sessionNameList","onRename","baiClient","useSuspendedBackendaiClient","session","useFragment","_SessionInfoCellFragment","require","mutation","useTanMutation","mutationFn","newName","sessionId","APIMajorVersion","session_id","rename","formRef","t","useTranslation","editing","setEditing","optimisticName","setOptimisticName","editable","includes","arguments","length","undefined","isRunningStatus","status","isPreparing","email","user_email","isPendingRename","isLoading","Form","ref","Item","margin","rules","required","pattern","message","validator","form","_","String","Promise","reject","Error","resolve","Input","autoFocus","onPressEnter","save","_formRef$current","validateFields","then","_ref2","mutate","onSuccess","onError","error","catch","onKeyUp","e","key","maxWidth","ellipsis","tooltip","overlayInnerStyle","EditOutlined","color","colorLink","onClick","_formRef$current2","setFieldsValue","GroupOutlined","props","React","AntdIcon","_extends","GroupOutlinedSvg","_status","limit","currentPage","pageSize","projectId","filter","extraFetchKey","tableProps","fetchKey","updateFetchKey","useUpdatableState","deferredMergedFetchKey","getImageAliasName","getBaseVersion","getBaseImage","useBackendAIImageMetaData","supports","compute_session_list","useLazyLoadQuery","_SessionListQuery","offset","join","group_id","skipClusterSize","fetchPolicy","statusTagColor","RESTARTING","PREPARING","PULLING","RUNNING","PENDING","SCHEDULED","ERROR","statusInfoTagColor","scheduled","typeTagColor","INTERACTIVE","BATCH","INFERENCE","_Fragment","Table","scroll","x","columns","render","record","index","SessionInfoCell","items","Date","toISOString","fixed","dataIndex","status_info","DoubleTag","values","label","Tag","FolderOutlined","mountedFolder","colorTextDisabled","scaling_group","occupied_slots","JSON","parse","ResourceNumber","opts","shmem","resource_opts","item","localeStringDate","toLocaleString","BAIIntervalText","utils","elapsedTime","terminated_at","ImageMetaIcon","image","architecture","is_admin","_config","hideAgents","agent","dataSource","PoweroffOutlined","PoweroffOutlinedSvg","RUNNINGS","TAB_STATUS_MAP","running","interactive","batch","inference","finished","others","default","curProject","webuiNavigate","useWebUINavigate","selectedTab","setSelectedTab","selectedGeneration","setSelectedGeneration","keypair","keypairResourcePolicy","useCurrentKeyPairResourcePolicyLazyLoadQuery","Alert","Segmented","options","colorPrimary","ThunderboltTwoTone","twoToneColor","colorWarning","showIcon","display","bodyStyle","tabList","concurrency_used","max_concurrent_sessions","activeTabKey","onTabChange","tabBarExtraContent","Suspense","fallback","SessionList","marginTop","_session$type","toLowerCase","class","active","primaryColor","secondaryColor","ThunderboltTwoToneSvg"],"sourceRoot":""}