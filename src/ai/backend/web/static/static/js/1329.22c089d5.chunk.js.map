{"version":3,"file":"static/js/1329.22c089d5.chunk.js","mappings":"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","sources":["__generated__/FileUploadManagerQuery.graphql.ts","components/FileUploadManager.tsx","__generated__/FolderExplorerModalQuery.graphql.ts","__generated__/FolderExplorerHeaderFragment.graphql.ts","components/FolderExplorerHeader.tsx","__generated__/VFolderNodeDescriptionPermissionRefreshQuery.graphql.ts","__generated__/VFolderNodeDescriptionFragment.graphql.ts","__generated__/useVirtualFolderNodePathFragment.graphql.ts","hooks/useVirtualFolderNodePath.ts","components/VirtualFolderNodeItems/VirtualFolderPath.tsx","components/VFolderNodeDescription.tsx","__generated__/useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery.graphql.ts","__generated__/useMergedAllowedStorageHostPermission_KeypairQuery.graphql.ts","hooks/useMergedAllowedStorageHostPermission.ts","components/FolderExplorerModal.tsx"],"sourcesContent":["/**\n * @generated SignedSource<<4fd862927d80e3a68ed0b64141ce3ac5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type FileUploadManagerQuery$variables = {\n  vfolderGlobalId: string;\n};\nexport type FileUploadManagerQuery$data = {\n  readonly vfolder_node: {\n    readonly name: string;\n  } | null | undefined;\n};\nexport type FileUploadManagerQuery = {\n  response: FileUploadManagerQuery$data;\n  variables: FileUploadManagerQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"vfolderGlobalId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"vfolderGlobalId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"FileUploadManagerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"RequiredField\",\n            \"field\": (v2/*: any*/),\n            \"action\": \"THROW\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"FileUploadManagerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"da162cec4ce77cdb6fcdd31a87d2f135\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"FileUploadManagerQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query FileUploadManagerQuery(\\n  $vfolderGlobalId: String!\\n) {\\n  vfolder_node(id: $vfolderGlobalId) {\\n    name\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"1f3a6bd97dae542b3c85605ab9a61d03\";\n\nexport default node;\n","import { useSetBAINotification } from '../hooks/useBAINotification';\nimport { useFolderExplorerOpener } from './FolderExplorerOpener';\nimport { theme, Typography } from 'antd';\nimport { RcFile } from 'antd/es/upload';\nimport {\n  BAIFlex,\n  BAILink,\n  toGlobalId,\n  useConnectedBAIClient,\n} from 'backend.ai-ui';\nimport { atom, useAtom, useSetAtom } from 'jotai';\nimport { atomFamily } from 'jotai/utils';\nimport _ from 'lodash';\nimport PQueue from 'p-queue';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { FileUploadManagerQuery } from 'src/__generated__/FileUploadManagerQuery.graphql';\nimport { useSuspendedBackendaiClient } from 'src/hooks';\nimport { useBAISettingUserState } from 'src/hooks/useBAISetting';\nimport * as tus from 'tus-js-client';\n\ntype uploadStartFunction = (callbacks?: {\n  onProgress?: (\n    bytesUploaded: number,\n    bytesTotal: number,\n    fileName: string,\n  ) => void;\n}) => Promise<{ name: string; bytes: number }>;\n\ntype UploadRequest = {\n  vFolderId: string;\n  vFolderName: string;\n  uploadFileInfo: Array<{ file: RcFile; startFunction: uploadStartFunction }>;\n};\n\ntype UploadStatusInfo = {\n  vFolderName: string;\n  pendingFiles: Array<string>;\n  completedFiles: Array<string>;\n  failedFiles: Array<string>;\n  completedBytes: number;\n  totalExpectedSize: number;\n};\ntype UploadStatusMap = {\n  [vFolderId: string]: UploadStatusInfo;\n};\n\nconst uploadRequestAtom = atom<Array<UploadRequest>>([]);\nconst uploadStatusAtom = atom<UploadStatusMap>({});\nconst uploadStatusAtomFamily = atomFamily((vFolderId: string) => {\n  return atom(\n    (get) => get(uploadStatusAtom)[vFolderId],\n    (get, set, newStatus: UploadStatusInfo) => {\n      const prev = get(uploadStatusAtom);\n      set(uploadStatusAtom, {\n        ...prev,\n        [vFolderId]: newStatus,\n      });\n    },\n  );\n});\n\nconst useUploadStatusAtomStatus = (\n  vFolderId: string,\n): [UploadStatusInfo, (newStatus: UploadStatusInfo) => void] => {\n  return useAtom(uploadStatusAtomFamily(vFolderId));\n};\n\nconst FileUploadManager: React.FC = () => {\n  'use memo';\n\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { upsertNotification, destroyNotification } = useSetBAINotification();\n  const { generateFolderPath } = useFolderExplorerOpener();\n  const [uploadRequests, setUploadRequests] = useAtom(uploadRequestAtom);\n  const [uploadStatus, setUploadStatus] = useAtom(uploadStatusAtom);\n  const [maxConcurrentUploads] = useBAISettingUserState(\n    'max_concurrent_uploads',\n  );\n  const queue = new PQueue({ concurrency: maxConcurrentUploads || 2 });\n\n  const pendingDeltaBytesRef = useRef<Record<string, number>>({});\n  const throttledUploadRequests = _.throttle(\n    (vFolderId: string, fileName: string) => {\n      const accumulatedDelta = pendingDeltaBytesRef.current[vFolderId] || 0;\n      pendingDeltaBytesRef.current[vFolderId] = 0;\n\n      setUploadStatus((prev) => {\n        const uploadedFilesCount = prev[vFolderId]?.completedFiles?.length || 0;\n        const totalUploadedFilesCount =\n          (prev[vFolderId]?.completedFiles?.length || 0) +\n          (prev[vFolderId]?.failedFiles?.length || 0) +\n          (prev[vFolderId]?.pendingFiles?.length || 0);\n\n        const totalExpectedSize = prev[vFolderId]?.totalExpectedSize || 0;\n        const currentCompletedBytes =\n          (prev[vFolderId]?.completedBytes || 0) + accumulatedDelta;\n\n        upsertNotification({\n          key: 'upload:' + vFolderId,\n          backgroundTask: {\n            status: 'pending',\n            percent:\n              totalExpectedSize > 0\n                ? (currentCompletedBytes / totalExpectedSize) * 100\n                : 0,\n            onChange: {\n              pending: {\n                description: (\n                  <BAIFlex direction=\"column\" align=\"start\">\n                    <Typography.Text>\n                      {t('explorer.UploadingFiles')} ( {uploadedFilesCount} /{' '}\n                      {totalUploadedFilesCount} )\n                    </Typography.Text>\n                    <Typography.Text\n                      ellipsis\n                      type=\"secondary\"\n                      style={{\n                        fontSize: token.fontSizeSM,\n                        maxWidth: '300px',\n                      }}\n                    >\n                      {fileName}\n                    </Typography.Text>\n                  </BAIFlex>\n                ),\n              },\n            },\n          },\n        });\n\n        return {\n          ...prev,\n          [vFolderId]: {\n            ...prev[vFolderId],\n            completedBytes: currentCompletedBytes,\n          },\n        };\n      });\n    },\n    200,\n    { leading: true, trailing: true },\n  );\n\n  useEffect(() => {\n    if (uploadRequests.length === 0 || !baiClient) return;\n\n    uploadRequests.forEach((uploadRequest) => {\n      const { vFolderId, vFolderName, uploadFileInfo } = uploadRequest;\n      const currUploadTotalSize = _.sumBy(\n        uploadFileInfo,\n        (info) => info.file.size,\n      );\n\n      setUploadStatus((prev) => {\n        const isFirstUpload = !prev[vFolderId];\n        const newTotalExpectedSize =\n          (prev[vFolderId]?.totalExpectedSize || 0) + currUploadTotalSize;\n        const currPct = isFirstUpload\n          ? 0\n          : ((prev[vFolderId]?.completedBytes || 0) / newTotalExpectedSize) *\n            100;\n\n        upsertNotification({\n          key: 'upload:' + vFolderId,\n          open: true,\n          message: (\n            <span>\n              {t('explorer.VFolder')}:&nbsp;\n              <BAILink\n                style={{\n                  fontWeight: 'normal',\n                }}\n                to={generateFolderPath(vFolderId)}\n                onClick={() => {\n                  destroyNotification('upload:' + vFolderId);\n                }}\n              >{`${vFolderName}`}</BAILink>\n            </span>\n          ),\n          backgroundTask: {\n            status: 'pending',\n            percent: currPct,\n            onChange: {\n              pending: t('explorer.ProcessingUpload'),\n            },\n          },\n          duration: 0,\n        });\n\n        return {\n          ...prev,\n          [vFolderId]: {\n            vFolderName,\n            pendingFiles: [\n              ...(prev[vFolderId]?.pendingFiles || []),\n              ...uploadFileInfo.map(\n                (info) => info.file.webkitRelativePath || info.file.name,\n              ),\n            ],\n            completedFiles: prev[vFolderId]?.completedFiles || [],\n            failedFiles: prev[vFolderId]?.failedFiles || [],\n            completedBytes: prev[vFolderId]?.completedBytes || 0,\n            totalExpectedSize: newTotalExpectedSize,\n          },\n        };\n      });\n\n      uploadFileInfo.forEach(({ file, startFunction }) => {\n        queue.add(async () => {\n          // Capture fileName before any async operations\n          const fileName = file.webkitRelativePath || file.name;\n          let previousBytesUploaded = 0;\n\n          try {\n            await startFunction({\n              onProgress: (bytesUploaded, _bytesTotal, fileName) => {\n                // Since bytesUploaded is cumulative, calculate delta from previous value\n                const deltaBytes = bytesUploaded - previousBytesUploaded;\n                previousBytesUploaded = bytesUploaded;\n                pendingDeltaBytesRef.current[vFolderId] =\n                  (pendingDeltaBytesRef.current[vFolderId] || 0) + deltaBytes;\n\n                throttledUploadRequests(vFolderId, fileName);\n              },\n            });\n\n            // Success case\n            throttledUploadRequests.flush();\n            delete pendingDeltaBytesRef.current[vFolderId];\n\n            setUploadStatus((prev) => ({\n              ...prev,\n              [vFolderId]: {\n                ...prev[vFolderId],\n                pendingFiles: prev[vFolderId].pendingFiles.filter(\n                  (f: string) => f !== fileName,\n                ),\n                completedFiles: [\n                  ...(prev[vFolderId]?.completedFiles || []),\n                  fileName,\n                ],\n              },\n            }));\n          } catch (error) {\n            // Error case - use the captured fileName regardless of error structure\n            throttledUploadRequests.flush();\n            delete pendingDeltaBytesRef.current[vFolderId];\n\n            setUploadStatus((prev) => ({\n              ...prev,\n              [vFolderId]: {\n                ...prev[vFolderId],\n                pendingFiles: prev[vFolderId].pendingFiles.filter(\n                  (f: string) => f !== fileName,\n                ),\n                failedFiles: [\n                  ...(prev[vFolderId]?.failedFiles || []),\n                  fileName,\n                ],\n              },\n            }));\n          }\n        });\n      });\n    });\n    setUploadRequests([]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uploadRequests]);\n\n  useEffect(() => {\n    Object.entries(uploadStatus).forEach(([vFolderId, status]) => {\n      if (!_.isEmpty(status?.pendingFiles)) return;\n\n      if (!_.isEmpty(status?.failedFiles)) {\n        upsertNotification({\n          key: 'upload:' + vFolderId,\n          open: true,\n          message: t('explorer.UploadFailed', {\n            folderName: status?.vFolderName,\n          }),\n          backgroundTask: {\n            status: 'rejected',\n            percent: 0,\n            onChange: {\n              rejected: t('explorer.FileUploadFailed', {\n                folderName: status?.vFolderName,\n              }),\n            },\n          },\n          extraDescription: _.join(status?.failedFiles, ', '),\n        });\n      } else if (!_.isEmpty(status?.completedFiles)) {\n        upsertNotification({\n          key: 'upload:' + vFolderId,\n          open: true,\n          message: (\n            <span>\n              {t('explorer.VFolder')}:&nbsp;\n              <BAILink\n                style={{\n                  fontWeight: 'normal',\n                }}\n                to={generateFolderPath(vFolderId)}\n                onClick={() => {\n                  destroyNotification('upload:' + vFolderId);\n                }}\n              >{`${status?.vFolderName}`}</BAILink>\n            </span>\n          ),\n          backgroundTask: {\n            status: 'resolved',\n            percent: 100,\n            onChange: {\n              resolved: t('explorer.SuccessfullyUploadedToFolder'),\n            },\n          },\n          duration: 3,\n        });\n        setUploadStatus((prev) => ({\n          ...prev,\n          [vFolderId]: {\n            ...prev[vFolderId],\n            completedFiles: [],\n            completedBytes: 0,\n            totalExpectedSize: 0,\n          },\n        }));\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uploadStatus]);\n\n  return null;\n};\n\nexport default FileUploadManager;\n\nexport const useFileUploadManager = (vFolderId: string) => {\n  'use memo';\n\n  const baiClient = useConnectedBAIClient();\n  const { t } = useTranslation();\n  const { upsertNotification } = useSetBAINotification();\n  const [uploadStatus, setUploadStatus] = useUploadStatusAtomStatus(vFolderId);\n  const setUploadRequests = useSetAtom(uploadRequestAtom);\n\n  const { vfolder_node } = useLazyLoadQuery<FileUploadManagerQuery>(\n    graphql`\n      query FileUploadManagerQuery($vfolderGlobalId: String!) {\n        vfolder_node(id: $vfolderGlobalId) {\n          name @required(action: THROW)\n        }\n      }\n    `,\n    {\n      vfolderGlobalId: toGlobalId('VirtualFolderNode', vFolderId),\n    },\n    {\n      fetchPolicy: vFolderId ? 'network-only' : 'store-only',\n    },\n  );\n\n  const validateUploadRequest = (\n    requestedFiles: Array<RcFile>,\n    vfolderId: string,\n  ) => {\n    const maxPossibleFileSize = baiClient._config.maxFileUploadSize;\n    const maxRequestFileSize = _.map(\n      requestedFiles,\n      (file) => file.size,\n    ).reduce((max, size) => Math.max(max, size), 0);\n\n    if (maxPossibleFileSize > 0 && maxRequestFileSize > maxPossibleFileSize) {\n      upsertNotification({\n        open: true,\n        key: 'upload:' + vfolderId,\n        message: t('explorer.UploadFailed', {\n          folderName: vfolder_node?.name ?? '',\n        }),\n        description: t('data.explorer.FileUploadSizeLimit'),\n        duration: 3,\n        toText: t('data.folders.OpenAFolder'),\n        to: {\n          search: new URLSearchParams({\n            folder: vfolderId,\n          }).toString(),\n        },\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const uploadFiles = async (\n    files: RcFile[],\n    vfolderId: string,\n    currentPath: string,\n  ) => {\n    if (!validateUploadRequest(files, vfolderId)) return;\n\n    const fileToUpload: Array<RcFile> = [];\n    const startUploadFunctionMap = _.map(files, (file) => {\n      fileToUpload.push(file);\n      return async (callbacks?: {\n        onProgress?: (\n          bytesUploaded: number,\n          bytesTotal: number,\n          fileName: string,\n        ) => void;\n      }) => {\n        const fileName = file.webkitRelativePath || file.name;\n\n        try {\n          const uploadPath = [currentPath, fileName].filter(Boolean).join('/');\n\n          const uploadUrl: string =\n            await baiClient.vfolder.create_upload_session(\n              uploadPath,\n              file,\n              vfolderId,\n            );\n\n          return await new Promise<{ name: string; bytes: number }>(\n            (resolve, reject) => {\n              try {\n                const upload = new tus.Upload(file, {\n                  endpoint: uploadUrl,\n                  uploadUrl: uploadUrl,\n                  retryDelays: [0, 3000, 5000, 10000, 20000],\n                  chunkSize: getOptimalChunkSize(file.size),\n                  storeFingerprintForResuming: false, // Disable localStorage storage\n                  metadata: {\n                    filename: file.name,\n                    filetype: file.type,\n                  },\n                  onProgress: (bytesUploaded, bytesTotal) => {\n                    callbacks?.onProgress?.(\n                      bytesUploaded,\n                      bytesTotal,\n                      fileName,\n                    );\n                  },\n                  onSuccess: () => {\n                    resolve({\n                      name: fileName,\n                      bytes: file.size,\n                    });\n                  },\n                  onError: (_error) => {\n                    // Always reject with consistent structure\n                    reject(new Error(`Upload failed for ${fileName}`));\n                  },\n                });\n                upload.start();\n              } catch (error) {\n                // Handle synchronous errors from tus.Upload constructor or start()\n                reject(\n                  new Error(`Failed to initialize upload for ${fileName}`),\n                );\n              }\n            },\n          );\n        } catch (error) {\n          // Handle API errors or any other errors\n          // Always throw with a consistent error message\n          throw new Error(`Failed to prepare upload for ${fileName}`);\n        }\n      };\n    });\n\n    const uploadRequestInfo: UploadRequest = {\n      vFolderId: vfolderId,\n      vFolderName: vfolder_node?.name ?? '',\n      uploadFileInfo: _.zipWith(\n        fileToUpload,\n        startUploadFunctionMap,\n        (file, startFunction) => ({\n          file,\n          startFunction,\n        }),\n      ),\n    };\n    setUploadRequests((prev) => [...prev, uploadRequestInfo]);\n  };\n\n  return {\n    uploadStatus,\n    setUploadStatus,\n    uploadFiles,\n  };\n};\n\nconst getOptimalChunkSize = (fileSize: number): number => {\n  const MB = 1024 * 1024;\n\n  if (fileSize >= 5 * 1024 * MB) {\n    return 200 * MB;\n  } else if (fileSize >= 1 * 1024 * MB) {\n    return 100 * MB;\n  } else if (fileSize >= 100 * MB) {\n    return 50 * MB;\n  } else {\n    return 15 * MB;\n  }\n};\n","/**\n * @generated SignedSource<<7865a9c04a9c9bb6ed8c4126bb3f43ba>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type FolderExplorerModalQuery$variables = {\n  vfolderGlobalId: string;\n};\nexport type FolderExplorerModalQuery$data = {\n  readonly vfolder_node: {\n    readonly group: string | null | undefined;\n    readonly host: string | null | undefined;\n    readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n    readonly unmanaged_path: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"FolderExplorerHeaderFragment\" | \"VFolderNameTitleNodeFragment\" | \"VFolderNodeDescriptionFragment\">;\n  } | null | undefined;\n};\nexport type FolderExplorerModalQuery = {\n  response: FolderExplorerModalQuery$data;\n  variables: FolderExplorerModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"vfolderGlobalId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"vfolderGlobalId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"group\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"unmanaged_path\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permissions\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"host\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"FolderExplorerModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"FolderExplorerHeaderFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"VFolderNodeDescriptionFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"VFolderNameTitleNodeFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"FolderExplorerModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"user\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"permission\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"status\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"user_email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"group_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"creator\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage_mode\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"ownership_type\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_files\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_size\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"created_at\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"last_used\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"num_files\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"cur_size\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"cloneable\",\n            \"storageKey\": null\n          },\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"8610785ad6909de4c0539cc2dd1aa871\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"FolderExplorerModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query FolderExplorerModalQuery(\\n  $vfolderGlobalId: String!\\n) {\\n  vfolder_node(id: $vfolderGlobalId) {\\n    group\\n    unmanaged_path @since(version: \\\"25.04.0\\\")\\n    permissions\\n    host\\n    ...FolderExplorerHeaderFragment\\n    ...VFolderNodeDescriptionFragment\\n    ...VFolderNameTitleNodeFragment\\n    id\\n  }\\n}\\n\\nfragment EditableVFolderNameFragment on VirtualFolderNode {\\n  id\\n  name\\n  user\\n  group\\n  status\\n}\\n\\nfragment FolderExplorerHeaderFragment on VirtualFolderNode {\\n  id\\n  user\\n  permission\\n  unmanaged_path @since(version: \\\"25.04.0\\\")\\n  ...VFolderNameTitleNodeFragment\\n  ...VFolderNodeIdenticonFragment\\n  ...EditableVFolderNameFragment\\n}\\n\\nfragment VFolderNameTitleNodeFragment on VirtualFolderNode {\\n  name\\n}\\n\\nfragment VFolderNodeDescriptionFragment on VirtualFolderNode {\\n  id\\n  host\\n  quota_scope_id\\n  user\\n  user_email\\n  group\\n  group_name\\n  creator\\n  usage_mode\\n  permission\\n  ownership_type\\n  max_files\\n  max_size\\n  created_at\\n  last_used\\n  num_files\\n  cur_size\\n  cloneable\\n  status\\n  permissions @since(version: \\\"24.09.0\\\")\\n  unmanaged_path @since(version: \\\"25.04.0\\\")\\n  ...VFolderPermissionCellFragment\\n  ...useVirtualFolderNodePathFragment\\n}\\n\\nfragment VFolderNodeIdenticonFragment on VirtualFolderNode {\\n  id\\n}\\n\\nfragment VFolderPermissionCellFragment on VirtualFolderNode {\\n  permissions\\n}\\n\\nfragment useVirtualFolderNodePathFragment on VirtualFolderNode {\\n  id\\n  host\\n  quota_scope_id\\n  user\\n  user_email\\n  group\\n  group_name\\n  creator\\n  usage_mode\\n  permission\\n  ownership_type\\n  max_files\\n  max_size\\n  created_at\\n  last_used\\n  num_files\\n  cur_size\\n  cloneable\\n  status\\n  permissions @since(version: \\\"24.09.0\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"21f3dea0f55bfb287970c707120d8bf8\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b2b12bec204e6b070a8941223acd7d3b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type FolderExplorerHeaderFragment$data = {\n  readonly id: string;\n  readonly permission: string | null | undefined;\n  readonly unmanaged_path: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EditableVFolderNameFragment\" | \"VFolderNameTitleNodeFragment\" | \"VFolderNodeIdenticonFragment\">;\n  readonly \" $fragmentType\": \"FolderExplorerHeaderFragment\";\n};\nexport type FolderExplorerHeaderFragment$key = {\n  readonly \" $data\"?: FolderExplorerHeaderFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"FolderExplorerHeaderFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"FolderExplorerHeaderFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"unmanaged_path\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderNameTitleNodeFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderNodeIdenticonFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"EditableVFolderNameFragment\"\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"b034e00d5b8454a58e6ebb66a4d821a1\";\n\nexport default node;\n","import { FolderExplorerHeaderFragment$key } from '../__generated__/FolderExplorerHeaderFragment.graphql';\nimport EditableVFolderName from './EditableVFolderName';\nimport VFolderNodeIdenticon from './VFolderNodeIdenticon';\nimport { Button, Tooltip, Image, Grid, theme, Typography } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport React, { LegacyRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useFragment } from 'react-relay';\n\ninterface FolderExplorerHeaderProps {\n  vfolderNodeFrgmt?: FolderExplorerHeaderFragment$key | null;\n  folderExplorerRef: LegacyRef<HTMLDivElement>;\n  titleStyle?: React.CSSProperties;\n}\n\nconst FolderExplorerHeader: React.FC<FolderExplorerHeaderProps> = ({\n  vfolderNodeFrgmt,\n  folderExplorerRef,\n  titleStyle,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { lg } = Grid.useBreakpoint();\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment FolderExplorerHeaderFragment on VirtualFolderNode {\n        id\n        user\n        permission\n        unmanaged_path @since(version: \"25.04.0\")\n        ...VFolderNameTitleNodeFragment\n        ...VFolderNodeIdenticonFragment\n        ...EditableVFolderNameFragment\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  return (\n    <BAIFlex\n      data-testid=\"folder-explorer-header\"\n      justify=\"between\"\n      gap={token.marginMD}\n      style={{ width: '100%' }}\n    >\n      <BAIFlex\n        data-testid=\"folder-explorer-title\"\n        gap={'xs'}\n        style={{ flex: 1, ...titleStyle }}\n      >\n        {vfolderNode ? (\n          <VFolderNodeIdenticon\n            vfolderNodeIdenticonFrgmt={vfolderNode}\n            style={{\n              fontSize: token.fontSizeHeading4,\n            }}\n          />\n        ) : (\n          <BAIFlex\n            style={{\n              borderColor: token.colorBorderSecondary,\n              borderWidth: 1,\n              borderStyle: 'solid',\n              width: token.fontSizeHeading3,\n              height: token.fontSizeHeading3,\n              borderRadius: token.borderRadius,\n            }}\n          />\n        )}\n        {vfolderNode && (\n          <EditableVFolderName\n            vfolderFrgmt={vfolderNode}\n            enableLink={false}\n            component={Typography.Title}\n            level={3}\n            style={{\n              margin: 0,\n              width: '100%',\n            }}\n            ellipsis\n            editable={{\n              triggerType: ['icon', 'text'],\n            }}\n            inputProps={{\n              size: 'large',\n            }}\n          />\n        )}\n      </BAIFlex>\n      <BAIFlex\n        data-testid=\"folder-explorer-actions\"\n        justify=\"end\"\n        gap={token.marginSM}\n      >\n        {!vfolderNode?.unmanaged_path ? (\n          <>\n            <Tooltip title={!lg && t('data.explorer.ExecuteFileBrowser')}>\n              <Button\n                icon={\n                  <Image\n                    width=\"18px\"\n                    src=\"/resources/icons/filebrowser.svg\"\n                    alt=\"File Browser\"\n                    preview={false}\n                  />\n                }\n                onClick={() =>\n                  // @ts-ignore\n                  folderExplorerRef.current?._executeFileBrowser()\n                }\n              >\n                {lg && t('data.explorer.ExecuteFileBrowser')}\n              </Button>\n            </Tooltip>\n            <Tooltip title={!lg && t('data.explorer.RunSSH/SFTPserver')}>\n              <Button\n                icon={\n                  <Image\n                    width=\"18px\"\n                    src=\"/resources/icons/sftp.png\"\n                    alt=\"SSH / SFTP\"\n                    preview={false}\n                  />\n                }\n                onClick={() => {\n                  // @ts-ignore\n                  folderExplorerRef.current?._executeSSHProxyAgent();\n                }}\n              >\n                {lg && t('data.explorer.RunSSH/SFTPserver')}\n              </Button>\n            </Tooltip>\n          </>\n        ) : null}\n      </BAIFlex>\n    </BAIFlex>\n  );\n};\n\nexport default FolderExplorerHeader;\n","/**\n * @generated SignedSource<<b08d2a6eb206a397bad8ea27d9db9ef7>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type VFolderNodeDescriptionPermissionRefreshQuery$variables = {\n  id: string;\n};\nexport type VFolderNodeDescriptionPermissionRefreshQuery$data = {\n  readonly vfolder_node: {\n    readonly permission: string | null | undefined;\n    readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  } | null | undefined;\n};\nexport type VFolderNodeDescriptionPermissionRefreshQuery = {\n  response: VFolderNodeDescriptionPermissionRefreshQuery$data;\n  variables: VFolderNodeDescriptionPermissionRefreshQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permission\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permissions\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3aee063a4b508648c2365ba6c7f0f44a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query VFolderNodeDescriptionPermissionRefreshQuery(\\n  $id: String!\\n) {\\n  vfolder_node(id: $id) {\\n    permission\\n    permissions\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"36063c8300310d9ef6c369b49127a2a2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<462af5f9df0e58aaa2ad869af29774cb>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type VFolderNodeDescriptionFragment$data = {\n  readonly cloneable: boolean | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly creator: string | null | undefined;\n  readonly cur_size: any | null | undefined;\n  readonly group: string | null | undefined;\n  readonly group_name: string | null | undefined;\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly last_used: string | null | undefined;\n  readonly max_files: number | null | undefined;\n  readonly max_size: any | null | undefined;\n  readonly num_files: number | null | undefined;\n  readonly ownership_type: string | null | undefined;\n  readonly permission: string | null | undefined;\n  readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  readonly quota_scope_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly unmanaged_path: string | null | undefined;\n  readonly usage_mode: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderPermissionCellFragment\" | \"useVirtualFolderNodePathFragment\">;\n  readonly \" $fragmentType\": \"VFolderNodeDescriptionFragment\";\n};\nexport type VFolderNodeDescriptionFragment$key = {\n  readonly \" $data\"?: VFolderNodeDescriptionFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderNodeDescriptionFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"VFolderNodeDescriptionFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"creator\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage_mode\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"ownership_type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cur_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cloneable\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permissions\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"unmanaged_path\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderPermissionCellFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"useVirtualFolderNodePathFragment\"\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f4ca4470ea635f85c8c346eed0a5fe8c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7a027844ee7c6caf9ae1cc064636660b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type useVirtualFolderNodePathFragment$data = {\n  readonly cloneable: boolean | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly creator: string | null | undefined;\n  readonly cur_size: any | null | undefined;\n  readonly group: string | null | undefined;\n  readonly group_name: string | null | undefined;\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly last_used: string | null | undefined;\n  readonly max_files: number | null | undefined;\n  readonly max_size: any | null | undefined;\n  readonly num_files: number | null | undefined;\n  readonly ownership_type: string | null | undefined;\n  readonly permission: string | null | undefined;\n  readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  readonly quota_scope_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly usage_mode: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentType\": \"useVirtualFolderNodePathFragment\";\n};\nexport type useVirtualFolderNodePathFragment$key = {\n  readonly \" $data\"?: useVirtualFolderNodePathFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"useVirtualFolderNodePathFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"useVirtualFolderNodePathFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"creator\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage_mode\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"ownership_type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cur_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cloneable\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permissions\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"439221036e87c57ca3ec1ce737e0cdf7\";\n\nexport default node;\n","import { useVirtualFolderNodePathFragment$key } from '../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { toLocalId } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport { graphql, useFragment } from 'react-relay';\n\nexport const useVirtualFolderPath = (\n  vfolderNodeFrgmt: useVirtualFolderNodePathFragment$key,\n) => {\n  const vfolderNode = useFragment(\n    graphql`\n      fragment useVirtualFolderNodePathFragment on VirtualFolderNode {\n        id\n        host\n        quota_scope_id\n        user\n        user_email\n        group\n        group_name\n        creator\n        usage_mode\n        permission\n        ownership_type\n        max_files\n        max_size\n        created_at\n        last_used\n        num_files\n        cur_size\n        cloneable\n        status\n        permissions @since(version: \"24.09.0\")\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  const [quotaScopeType, quotaScopeIdWithoutType] = _.split(\n    vfolderNode?.quota_scope_id,\n    ':',\n  );\n  const vfolderId = toLocalId(vfolderNode?.id);\n  const vfolderIdPrefix1 = vfolderId.slice(0, 2);\n  const vfolderIdPrefix2 = vfolderId.slice(2, 4);\n  const vfolderIdRest = vfolderId.slice(4);\n  const vfolderPath = `${quotaScopeIdWithoutType.replaceAll('-', '')}/${vfolderIdPrefix1}/${vfolderIdPrefix2}/${vfolderIdRest.replaceAll('-', '')}`;\n\n  return {\n    quotaScopeType,\n    quotaScopeIdWithoutType,\n    vfolderId,\n    vfolderIdPrefix1,\n    vfolderIdPrefix2,\n    vfolderIdRest,\n    vfolderPath,\n  };\n};\n","import { useVirtualFolderNodePathFragment$key } from '../../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { useVirtualFolderPath } from '../../hooks/useVirtualFolderNodePath';\nimport { theme } from 'antd';\nimport { BAIFlex, BAIText } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport React from 'react';\n\ninterface VirtualFolderPathProps {\n  vfolderNodeFrgmt: useVirtualFolderNodePathFragment$key;\n}\n\nconst VirtualFolderPath: React.FC<VirtualFolderPathProps> = ({\n  vfolderNodeFrgmt,\n}) => {\n  const {\n    quotaScopeType,\n    quotaScopeIdWithoutType,\n    vfolderId,\n    vfolderIdPrefix1,\n    vfolderIdPrefix2,\n    vfolderIdRest,\n  } = useVirtualFolderPath(vfolderNodeFrgmt);\n\n  const { token } = theme.useToken();\n\n  return (\n    <BAIFlex direction=\"row\" align=\"start\" justify=\"start\" wrap=\"wrap\" gap={3}>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        (root)\n      </BAIText>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        /\n      </BAIText>\n      <BAIFlex direction=\"column\" align=\"start\" justify=\"start\">\n        <BAIText\n          monospace\n          copyable={{\n            text: quotaScopeIdWithoutType,\n          }}\n          style={{ fontSize: '0.9em' }}\n        >\n          {_.truncate(quotaScopeIdWithoutType.replaceAll('-', ''), {\n            length: 15,\n          })}\n        </BAIText>\n        <BAIText\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n          }}\n        >\n          Quota Scope ID ({_.upperFirst(quotaScopeType)})\n        </BAIText>\n      </BAIFlex>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        /\n      </BAIText>\n      <BAIFlex direction=\"column\" align=\"start\" justify=\"start\">\n        <BAIFlex gap={3}>\n          <BAIText monospace style={{ fontSize: '0.9em' }}>\n            {vfolderIdPrefix1}\n          </BAIText>\n          <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n            /\n          </BAIText>\n          <BAIText monospace style={{ fontSize: '0.9em' }}>\n            {vfolderIdPrefix2}\n          </BAIText>\n          <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n            /\n          </BAIText>\n          <BAIText\n            monospace\n            copyable={{\n              text: vfolderId,\n            }}\n            style={{ fontSize: '0.9em' }}\n          >\n            {_.truncate(vfolderIdRest.replaceAll('-', ''), { length: 7 })}\n          </BAIText>\n        </BAIFlex>\n        <BAIText\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n          }}\n        >\n          VFolder ID\n        </BAIText>\n      </BAIFlex>\n    </BAIFlex>\n  );\n};\n\nexport default VirtualFolderPath;\n","import { VFolderNodeDescriptionFragment$key } from '../__generated__/VFolderNodeDescriptionFragment.graphql';\nimport { VFolderNodeDescriptionPermissionRefreshQuery } from '../__generated__/VFolderNodeDescriptionPermissionRefreshQuery.graphql';\nimport { useVirtualFolderNodePathFragment$key } from '../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { convertToDecimalUnit } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport { useVirtualFolderPath } from '../hooks/useVirtualFolderNodePath';\nimport BAISelect from './BAISelect';\nimport BAITag from './BAITag';\nimport { statusTagColor } from './VFolderNodes';\nimport VirtualFolderPath from './VirtualFolderNodeItems/VirtualFolderPath';\nimport { CheckCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport {\n  App,\n  Descriptions,\n  theme,\n  Typography,\n  type DescriptionsProps,\n} from 'antd';\nimport {\n  filterOutEmpty,\n  BAIUserUnionIcon,\n  toLocalId,\n  BAIFlex,\n  useErrorMessageResolver,\n} from 'backend.ai-ui';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  graphql,\n  fetchQuery,\n  useFragment,\n  useRelayEnvironment,\n} from 'react-relay';\n\ninterface VFolderNodeDescriptionProps extends DescriptionsProps {\n  vfolderNodeFrgmt: VFolderNodeDescriptionFragment$key;\n  onRequestRefresh?: () => void;\n}\n\nconst VFolderNodeDescription: React.FC<VFolderNodeDescriptionProps> = ({\n  vfolderNodeFrgmt,\n  onRequestRefresh,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n  const { getErrorMessage } = useErrorMessageResolver();\n\n  const relayEnv = useRelayEnvironment();\n  const currentProject = useCurrentProjectValue();\n  const baiClient = useSuspendedBackendaiClient();\n  const [currentUser] = useCurrentUserInfo();\n\n  const updateMutation = useTanMutation({\n    mutationFn: ({ permission, id }: { permission: string; id: string }) => {\n      return baiClient.vfolder.update_folder({ permission }, id);\n    },\n  });\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment VFolderNodeDescriptionFragment on VirtualFolderNode {\n        id\n        host\n        quota_scope_id\n        user\n        user_email\n        group\n        group_name\n        creator\n        usage_mode\n        permission\n        ownership_type\n        max_files\n        max_size\n        created_at\n        last_used\n        num_files\n        cur_size\n        cloneable\n        status\n        permissions @since(version: \"24.09.0\")\n        unmanaged_path @since(version: \"25.04.0\")\n        ...VFolderPermissionCellFragment\n        ...useVirtualFolderNodePathFragment\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  const { vfolderPath } = useVirtualFolderPath(\n    // Temporary type assertion to suppress TS error – not actually needed at runtime\n    vfolderNode as useVirtualFolderNodePathFragment$key,\n  );\n\n  const vfolderId = toLocalId(vfolderNode.id);\n\n  const items: DescriptionsProps['items'] = filterOutEmpty([\n    !vfolderNode?.unmanaged_path && {\n      key: 'path',\n      label: (\n        <Typography.Text\n          copyable={{\n            text: vfolderPath,\n          }}\n          style={{\n            color: token.colorTextLabel,\n          }}\n        >\n          {t('data.folders.Path')}\n        </Typography.Text>\n      ),\n      children: <VirtualFolderPath vfolderNodeFrgmt={vfolderNode} />,\n    },\n    {\n      key: 'status',\n      label: t('data.folders.Status'),\n      children: (\n        <BAITag\n          color={\n            vfolderNode.status\n              ? statusTagColor[\n                  vfolderNode.status as keyof typeof statusTagColor\n                ]\n              : undefined\n          }\n        >\n          {_.toUpper(vfolderNode.status || '')}\n        </BAITag>\n      ),\n    },\n    {\n      key: 'host',\n      label: t('data.Host'),\n      children: vfolderNode.host,\n    },\n    {\n      key: 'ownership_type',\n      label: t('data.folders.Ownership'),\n      children:\n        vfolderNode?.ownership_type === 'user' ? (\n          <BAIFlex gap={'xs'}>\n            <Typography.Text>{t('data.User')}</Typography.Text>\n            <UserOutlined style={{ color: token.colorTextTertiary }} />\n          </BAIFlex>\n        ) : (\n          <BAIFlex gap={'xs'}>\n            <Typography.Text>{t('data.Project')}</Typography.Text>\n            <BAIUserUnionIcon style={{ color: token.colorTextTertiary }} />\n          </BAIFlex>\n        ),\n    },\n    (vfolderNode?.user === currentUser.uuid ||\n      (baiClient.is_admin && vfolderNode?.group === currentProject?.id)) && {\n      key: 'permission',\n      label: t('data.folders.MountPermission'),\n      children: (\n        <BAISelect\n          defaultValue={\n            vfolderNode.permission === 'wd' ? 'rw' : vfolderNode.permission\n          }\n          options={[\n            { value: 'ro', label: t('data.ReadOnly') },\n            { value: 'rw', label: t('data.ReadWrite') },\n          ]}\n          onChange={(value) => {\n            updateMutation.mutate(\n              { permission: value, id: vfolderId },\n              {\n                onSuccess: () => {\n                  message.success(t('data.permission.PermissionModified'));\n                  document.dispatchEvent(\n                    new CustomEvent('backend-ai-folder-updated'),\n                  );\n\n                  // To update GraphQL relay node\n                  fetchQuery<VFolderNodeDescriptionPermissionRefreshQuery>(\n                    relayEnv,\n                    graphql`\n                      query VFolderNodeDescriptionPermissionRefreshQuery(\n                        $id: String!\n                      ) {\n                        vfolder_node(id: $id) {\n                          permission\n                          permissions\n                        }\n                      }\n                    `,\n                    {\n                      id: vfolderNode.id,\n                    },\n                  ).toPromise();\n                  onRequestRefresh?.();\n                },\n                onError: (error) => {\n                  message.error(getErrorMessage(error));\n                },\n              },\n            );\n          }}\n          popupMatchSelectWidth={false}\n        />\n      ),\n    },\n    {\n      key: 'owner',\n      label: t('data.folders.Owner'),\n      children:\n        vfolderNode?.user === currentUser?.uuid ||\n        (baiClient.is_admin && vfolderNode?.group === currentProject?.id) ? (\n          <BAIFlex justify=\"start\">\n            <CheckCircleOutlined />\n          </BAIFlex>\n        ) : null,\n    },\n    vfolderNode.user_email !== null && {\n      key: 'user_email',\n      label: t('data.User'),\n      children: (\n        <Typography.Text copyable>{vfolderNode.user_email}</Typography.Text>\n      ),\n    },\n    vfolderNode.group_name !== null && {\n      key: 'group_name',\n      label: t('data.Project'),\n      children: vfolderNode.group_name,\n    },\n    {\n      key: 'cloneable',\n      label: t('data.folders.Cloneable'),\n      children: vfolderNode.cloneable ? (\n        <BAIFlex justify=\"start\">\n          <CheckCircleOutlined />\n        </BAIFlex>\n      ) : null,\n    },\n    {\n      key: 'max_size',\n      label: t('data.folders.MaxSize'),\n      children: vfolderNode.max_size\n        ? convertToDecimalUnit(vfolderNode.max_size, 'g', 2)?.displayValue\n        : '∞',\n    },\n    {\n      key: 'usage',\n      label: t('data.UsageMode'),\n      children: vfolderNode.usage_mode,\n    },\n    {\n      key: 'created_at',\n      label: t('data.folders.CreatedAt'),\n      children: dayjs(vfolderNode.created_at).format('lll'),\n    },\n  ]);\n\n  return (\n    <Descriptions\n      bordered\n      column={1}\n      size=\"small\"\n      items={items}\n      styles={{\n        content: {\n          wordBreak: 'break-word',\n          overflowWrap: 'break-word',\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default VFolderNodeDescription;\n","/**\n * @generated SignedSource<<01f84eec24a9462f4d8a239a0f8488c5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery$variables = {\n  domainName?: string | null | undefined;\n  projectId: string;\n  resourcePolicyName?: string | null | undefined;\n};\nexport type useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery$data = {\n  readonly domain: {\n    readonly allowed_vfolder_hosts: string | null | undefined;\n  } | null | undefined;\n  readonly group: {\n    readonly allowed_vfolder_hosts: string | null | undefined;\n  } | null | undefined;\n  readonly keypair_resource_policy: {\n    readonly allowed_vfolder_hosts: string | null | undefined;\n  } | null | undefined;\n};\nexport type useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery = {\n  response: useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery$data;\n  variables: useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domainName\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"projectId\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"resourcePolicyName\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"allowed_vfolder_hosts\",\n    \"storageKey\": null\n  }\n],\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"domainName\"\n      }\n    ],\n    \"concreteType\": \"Domain\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"domain\",\n    \"plural\": false,\n    \"selections\": (v1/*: any*/),\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"domain_name\",\n        \"variableName\": \"domainName\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"id\",\n        \"variableName\": \"projectId\"\n      }\n    ],\n    \"concreteType\": \"Group\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"group\",\n    \"plural\": false,\n    \"selections\": (v1/*: any*/),\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"resourcePolicyName\"\n      }\n    ],\n    \"concreteType\": \"KeyPairResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"keypair_resource_policy\",\n    \"plural\": false,\n    \"selections\": (v1/*: any*/),\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f7d16150a7d77cb465733a2933a08261\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery(\\n  $domainName: String\\n  $projectId: UUID!\\n  $resourcePolicyName: String\\n) {\\n  domain(name: $domainName) {\\n    allowed_vfolder_hosts\\n  }\\n  group(id: $projectId, domain_name: $domainName) {\\n    allowed_vfolder_hosts\\n  }\\n  keypair_resource_policy(name: $resourcePolicyName) {\\n    allowed_vfolder_hosts\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"616594ca9d6c787458c32688c1a25b1f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0c48992dcb96317e2eeb05bd6a3f0b1a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type useMergedAllowedStorageHostPermission_KeypairQuery$variables = {\n  accessKey?: string | null | undefined;\n  domainName: string;\n};\nexport type useMergedAllowedStorageHostPermission_KeypairQuery$data = {\n  readonly keypair: {\n    readonly resource_policy: string;\n  };\n};\nexport type useMergedAllowedStorageHostPermission_KeypairQuery = {\n  response: useMergedAllowedStorageHostPermission_KeypairQuery$data;\n  variables: useMergedAllowedStorageHostPermission_KeypairQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"accessKey\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"domainName\"\n},\nv2 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"access_key\",\n    \"variableName\": \"accessKey\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"domain_name\",\n    \"variableName\": \"domainName\"\n  }\n],\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"useMergedAllowedStorageHostPermission_KeypairQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"RequiredField\",\n        \"field\": {\n          \"alias\": null,\n          \"args\": (v2/*: any*/),\n          \"concreteType\": \"KeyPair\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"keypair\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"RequiredField\",\n              \"field\": (v3/*: any*/),\n              \"action\": \"THROW\"\n            }\n          ],\n          \"storageKey\": null\n        },\n        \"action\": \"THROW\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"useMergedAllowedStorageHostPermission_KeypairQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v2/*: any*/),\n        \"concreteType\": \"KeyPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair\",\n        \"plural\": false,\n        \"selections\": [\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"ca4270af888b8158a6bbb4fe9dc305ca\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"useMergedAllowedStorageHostPermission_KeypairQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query useMergedAllowedStorageHostPermission_KeypairQuery(\\n  $domainName: String!\\n  $accessKey: String\\n) {\\n  keypair(domain_name: $domainName, access_key: $accessKey) {\\n    resource_policy\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"43280e755e9e0f52dcd74eb7aa29d60c\";\n\nexport default node;\n","import { useSuspendedBackendaiClient } from '.';\nimport { useSuspenseQuery } from '@tanstack/react-query';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery } from 'src/__generated__/useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery.graphql';\nimport { useMergedAllowedStorageHostPermission_KeypairQuery } from 'src/__generated__/useMergedAllowedStorageHostPermission_KeypairQuery.graphql';\n\nexport const useMergedAllowedStorageHostPermission = (\n  domain: string,\n  projectId: string,\n  userAccessKey: string,\n) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const { keypair } =\n    useLazyLoadQuery<useMergedAllowedStorageHostPermission_KeypairQuery>(\n      graphql`\n        query useMergedAllowedStorageHostPermission_KeypairQuery(\n          $domainName: String!\n          $accessKey: String\n        ) {\n          keypair(domain_name: $domainName, access_key: $accessKey)\n            @required(action: THROW) {\n            resource_policy @required(action: THROW)\n          }\n        }\n      `,\n      {\n        domainName: domain,\n        accessKey: userAccessKey,\n      },\n      {\n        fetchPolicy: 'store-or-network',\n      },\n    );\n  const mergedAllowedVFolderHosts =\n    useLazyLoadQuery<useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery>(\n      graphql`\n        query useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery(\n          $domainName: String\n          $projectId: UUID!\n          $resourcePolicyName: String\n        ) {\n          domain(name: $domainName) {\n            allowed_vfolder_hosts\n          }\n          group(id: $projectId, domain_name: $domainName) {\n            allowed_vfolder_hosts\n          }\n          keypair_resource_policy(name: $resourcePolicyName) {\n            allowed_vfolder_hosts\n          }\n        }\n      `,\n      {\n        domainName: domain,\n        projectId,\n        resourcePolicyName: keypair?.resource_policy,\n      },\n      {\n        fetchPolicy: 'store-or-network',\n      },\n    );\n\n  const allowedPermissionForDomainsByVolume = JSON.parse(\n    mergedAllowedVFolderHosts?.domain?.allowed_vfolder_hosts || '{}',\n  );\n  const allowedPermissionForGroupsByVolume = JSON.parse(\n    mergedAllowedVFolderHosts?.group?.allowed_vfolder_hosts || '{}',\n  );\n  const allowedPermissionForResourcePolicyByVolume = JSON.parse(\n    mergedAllowedVFolderHosts?.keypair_resource_policy?.allowed_vfolder_hosts ||\n      '{}',\n  );\n\n  const _mergeDedupe = (arr: any[]) => [\n    ...new Set([].concat(...arr.filter(Boolean))),\n  ];\n\n  const { data: vhostInfo } = useSuspenseQuery({\n    queryKey: ['vhostInfo'],\n    queryFn: async () => {\n      return await baiClient.vfolder.list_hosts();\n    },\n    staleTime: 1000 * 60 * 5,\n    gcTime: 0,\n  });\n  const unitedAllowedPermissionByVolume = Object.assign(\n    {},\n    ...vhostInfo.allowed.map((volume: string) => {\n      return {\n        [volume]: _mergeDedupe([\n          allowedPermissionForDomainsByVolume[volume],\n          allowedPermissionForGroupsByVolume[volume],\n          allowedPermissionForResourcePolicyByVolume[volume],\n        ]),\n      };\n    }),\n  );\n\n  return {\n    StorageHostPermissionByDomain: allowedPermissionForDomainsByVolume,\n    StorageHostPermissionByGroup: allowedPermissionForGroupsByVolume,\n    StorageHostPermissionByResourcePolicy:\n      allowedPermissionForResourcePolicyByVolume,\n    unitedAllowedPermissionByVolume,\n  };\n};\n","import { useFileUploadManager } from './FileUploadManager';\nimport FolderExplorerHeader from './FolderExplorerHeader';\nimport VFolderNodeDescription from './VFolderNodeDescription';\nimport { Alert, Divider, Grid, Splitter, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport { RcFile } from 'antd/es/upload';\nimport {\n  BAIFileExplorer,\n  BAIFlex,\n  BAIModal,\n  BAIModalProps,\n  toGlobalId,\n} from 'backend.ai-ui';\nimport _ from 'lodash';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { FolderExplorerModalQuery } from 'src/__generated__/FolderExplorerModalQuery.graphql';\nimport {\n  useCurrentDomainValue,\n  useFetchKey,\n  useSuspendedBackendaiClient,\n} from 'src/hooks';\nimport { useCurrentProjectValue } from 'src/hooks/useCurrentProject';\nimport { useMergedAllowedStorageHostPermission } from 'src/hooks/useMergedAllowedStorageHostPermission';\n\nconst useStyles = createStyles(({ css }) => ({\n  baiModalHeader: css`\n    .ant-modal-title {\n      width: 100%;\n    }\n  `,\n}));\n\nexport interface FolderExplorerElement extends HTMLDivElement {\n  _fetchVFolder: () => void;\n  _openDeleteMultipleFileDialog: () => void;\n  openMkdirDialog: () => void;\n  handleUpload: (name: 'file' | 'folder') => void;\n}\n\ninterface FolderExplorerProps extends BAIModalProps {\n  vfolderID: string;\n  onRequestClose: () => void;\n}\n\nconst FolderExplorerModal: React.FC<FolderExplorerProps> = ({\n  vfolderID,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { xl } = Grid.useBreakpoint();\n  const { styles } = useStyles();\n  const folderExplorerRef = useRef<FolderExplorerElement>(null);\n  const { uploadStatus, uploadFiles } = useFileUploadManager(vfolderID);\n  const [fetchKey, updateFetchKey] = useFetchKey();\n  const baiClient = useSuspendedBackendaiClient();\n  const currentDomain = useCurrentDomainValue();\n  const currentProject = useCurrentProjectValue();\n  const currentUserAccessKey = baiClient?._config?.accessKey;\n  const { unitedAllowedPermissionByVolume } =\n    useMergedAllowedStorageHostPermission(\n      currentDomain,\n      currentProject.id,\n      currentUserAccessKey,\n    );\n  const bodyRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (uploadStatus && _.isEmpty(uploadStatus?.pendingFiles)) {\n      updateFetchKey();\n    }\n  }, [uploadStatus, updateFetchKey]);\n\n  const { vfolder_node } = useLazyLoadQuery<FolderExplorerModalQuery>(\n    graphql`\n      query FolderExplorerModalQuery($vfolderGlobalId: String!) {\n        vfolder_node(id: $vfolderGlobalId) {\n          group\n          unmanaged_path @since(version: \"25.04.0\")\n          permissions\n          host\n          ...FolderExplorerHeaderFragment\n          ...VFolderNodeDescriptionFragment\n          ...VFolderNameTitleNodeFragment\n        }\n      }\n    `,\n    { vfolderGlobalId: toGlobalId('VirtualFolderNode', vfolderID) },\n    {\n      fetchPolicy: modalProps.open ? 'network-only' : 'store-only',\n    },\n  );\n\n  const hasDownloadContentPermission = _.includes(\n    unitedAllowedPermissionByVolume[vfolder_node?.host ?? ''],\n    'download-file',\n  );\n  const hasDeleteContentPermission = _.includes(\n    vfolder_node?.permissions,\n    'delete_content',\n  );\n  const hasWriteContentPermission = _.includes(\n    vfolder_node?.permissions,\n    'write_content',\n  );\n  // TODO: Skip permission check due to inaccurate API response. Update when API is fixed.\n  const hasNoPermissions = false;\n\n  const fileExplorerElement = vfolder_node?.unmanaged_path ? (\n    <Alert\n      message={t('explorer.NoExplorerSupportForUnmanagedFolder')}\n      showIcon\n    />\n  ) : !hasNoPermissions ? (\n    <BAIFileExplorer\n      targetVFolderId={vfolderID}\n      fetchKey={fetchKey}\n      onUpload={(files: RcFile[], currentPath: string) => {\n        uploadFiles(files, vfolderID, currentPath);\n      }}\n      enableDownload={hasDownloadContentPermission}\n      enableDelete={hasDeleteContentPermission}\n      enableWrite={hasWriteContentPermission}\n      tableProps={{\n        scroll: xl\n          ? { x: 'max-content' }\n          : { x: 'max-content', y: 'calc(100vh - 400px)' },\n      }}\n      style={{\n        paddingBottom: xl ? token.paddingLG : 0,\n      }}\n      fileDropContainerRef={bodyRef}\n    />\n  ) : null;\n\n  const vFolderDescriptionElement = vfolder_node ? (\n    <VFolderNodeDescription\n      vfolderNodeFrgmt={vfolder_node}\n      onRequestRefresh={() => {\n        folderExplorerRef.current?._fetchVFolder();\n      }}\n    />\n  ) : null;\n\n  return (\n    <BAIModal\n      className={styles.baiModalHeader}\n      width={'90%'}\n      centered\n      keyboard\n      destroyOnHidden\n      footer={null}\n      title={\n        vfolder_node ? (\n          <FolderExplorerHeader\n            titleStyle={{\n              zIndex: token.zIndexPopupBase + 2,\n            }}\n            vfolderNodeFrgmt={vfolder_node}\n            folderExplorerRef={folderExplorerRef}\n          />\n        ) : null\n      }\n      bodyProps={{\n        ref: bodyRef,\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <BAIFlex direction=\"column\" gap={'lg'} align=\"stretch\">\n        {!vfolder_node ? (\n          <Alert\n            message={t('explorer.FolderNotFoundOrNoAccess')}\n            type=\"error\"\n            showIcon\n          />\n        ) : hasNoPermissions ? (\n          <Alert message={t('explorer.NoPermissions')} type=\"error\" showIcon />\n        ) : currentProject?.id !== vfolder_node?.group &&\n          !!vfolder_node?.group ? (\n          <Alert message={t('data.NotInProject')} type=\"warning\" showIcon />\n        ) : null}\n\n        {xl ? (\n          <Splitter\n            // Force re-render component when xl breakpoint changes to reset panel sizes\n            // This ensures defaultSize is recalculated based on current screen size\n            key={xl ? 'large' : 'small'}\n            style={{\n              gap: token.size,\n              // maxHeight: 'calc(100vh - 220px)',\n            }}\n            layout={xl ? 'horizontal' : 'vertical'}\n          >\n            <Splitter.Panel resizable={false}>\n              {fileExplorerElement}\n            </Splitter.Panel>\n            <Splitter.Panel defaultSize={500}>\n              {vFolderDescriptionElement}\n            </Splitter.Panel>\n          </Splitter>\n        ) : (\n          <BAIFlex direction=\"column\" align=\"stretch\">\n            {fileExplorerElement}\n            <Divider\n              style={{\n                borderColor: token.colorBorderSecondary,\n              }}\n            />\n            {vFolderDescriptionElement}\n          </BAIFlex>\n        )}\n        <div style={{ display: 'none' }}>\n          {/* @ts-ignore  TODO: delete below after https://lablup.atlassian.net/browse/FR-1150 */}\n          <backend-ai-folder-explorer\n            ref={folderExplorerRef}\n            active\n            vfolderID={vfolderID}\n          />\n        </div>\n      </BAIFlex>\n    </BAIModal>\n  );\n};\n\nexport default FolderExplorerModal;\n"],"names":["node","v0","v1","v2","hash","uploadRequestAtom","atom","uploadStatusAtom","uploadStatusAtomFamily","atomFamily","vFolderId","get","set","newStatus","prev","FileUploadManager","t","useTranslation","token","theme","useToken","baiClient","useSuspendedBackendaiClient","upsertNotification","destroyNotification","useSetBAINotification","generateFolderPath","useFolderExplorerOpener","uploadRequests","setUploadRequests","useAtom","uploadStatus","setUploadStatus","maxConcurrentUploads","useBAISettingUserState","queue","PQueue","concurrency","pendingDeltaBytesRef","useRef","throttledUploadRequests","_","fileName","accumulatedDelta","current","_prev$vFolderId","_prev$vFolderId$compl","_prev$vFolderId2","_prev$vFolderId2$comp","_prev$vFolderId3","_prev$vFolderId3$fail","_prev$vFolderId4","_prev$vFolderId4$pend","_prev$vFolderId5","_prev$vFolderId6","uploadedFilesCount","completedFiles","length","totalUploadedFilesCount","failedFiles","pendingFiles","totalExpectedSize","currentCompletedBytes","completedBytes","key","backgroundTask","status","percent","onChange","pending","description","_jsxs","BAIFlex","direction","align","children","Typography","Text","_jsx","ellipsis","type","style","fontSize","fontSizeSM","maxWidth","leading","trailing","useEffect","forEach","uploadRequest","vFolderName","uploadFileInfo","currUploadTotalSize","info","file","size","_prev$vFolderId7","_prev$vFolderId8","_prev$vFolderId9","_prev$vFolderId0","_prev$vFolderId1","_prev$vFolderId10","isFirstUpload","newTotalExpectedSize","currPct","open","message","BAILink","fontWeight","to","onClick","duration","map","webkitRelativePath","name","_ref","startFunction","add","async","previousBytesUploaded","onProgress","bytesUploaded","_bytesTotal","deltaBytes","flush","_prev$vFolderId11","filter","f","error","_prev$vFolderId12","Object","entries","_ref2","resolved","folderName","rejected","extraDescription","useFileUploadManager","$","_c","useConnectedBAIClient","useUploadStatusAtomStatus","useSetAtom","t0","t1","t2","Symbol","for","_FileUploadManagerQuery","toGlobalId","vfolderGlobalId","t3","t4","fetchPolicy","vfolder_node","useLazyLoadQuery","t5","requestedFiles","vfolderId","maxPossibleFileSize","_config","maxFileUploadSize","maxRequestFileSize","_temp","reduce","_temp2","_vfolder_node$name","toText","search","URLSearchParams","folder","toString","validateUploadRequest","t6","files","vfolderId_0","currentPath","_vfolder_node$name2","fileToUpload","startUploadFunctionMap","file_0","push","uploadPath","Boolean","join","uploadUrl","vfolder","create_upload_session","Promise","resolve","reject","tus","endpoint","retryDelays","chunkSize","getOptimalChunkSize","storeFingerprintForResuming","metadata","filename","filetype","bytesTotal","_callbacks$onProgress","callbacks","call","onSuccess","bytes","onError","_error","Error","start","t8","t7","uploadRequestInfo","_temp3","uploadFiles","fileSize","MB","max","Math","file_1","v3","v4","v5","vfolderNodeFrgmt","folderExplorerRef","titleStyle","lg","Grid","useBreakpoint","vfolderNode","useFragment","_FolderExplorerHeaderFragment","justify","gap","marginMD","width","flex","VFolderNodeIdenticon","vfolderNodeIdenticonFrgmt","fontSizeHeading4","borderColor","colorBorderSecondary","borderWidth","borderStyle","fontSizeHeading3","height","borderRadius","EditableVFolderName","vfolderFrgmt","enableLink","component","Title","level","margin","editable","triggerType","inputProps","marginSM","unmanaged_path","_Fragment","Tooltip","title","Button","icon","Image","src","alt","preview","_folderExplorerRef$cu","_executeFileBrowser","_folderExplorerRef$cu2","_executeSSHProxyAgent","useVirtualFolderPath","_useVirtualFolderNodePathFragment","quotaScopeType","quotaScopeIdWithoutType","quota_scope_id","toLocalId","id","vfolderIdPrefix1","slice","vfolderIdPrefix2","vfolderIdRest","vfolderPath","replaceAll","wrap","BAIText","monospace","copyable","text","_convertToDecimalUnit","onRequestRefresh","props","App","useApp","getErrorMessage","useErrorMessageResolver","relayEnv","useRelayEnvironment","currentProject","useCurrentProjectValue","currentUser","useCurrentUserInfo","updateMutation","useTanMutation","mutationFn","permission","update_folder","_VFolderNodeDescriptionFragment","items","filterOutEmpty","label","color","colorTextLabel","VirtualFolderPath","BAITag","statusTagColor","undefined","host","ownership_type","UserOutlined","colorTextTertiary","BAIUserUnionIcon","user","uuid","is_admin","group","BAISelect","defaultValue","options","value","mutate","success","document","dispatchEvent","CustomEvent","fetchQuery","_VFolderNodeDescriptionPermissionRefreshQuery","toPromise","popupMatchSelectWidth","CheckCircleOutlined","user_email","group_name","cloneable","max_size","convertToDecimalUnit","displayValue","usage_mode","dayjs","created_at","format","Descriptions","bordered","column","styles","content","wordBreak","overflowWrap","useStyles","createStyles","css","baiModalHeader","_baiClient$_config","_vfolder_node$host","vfolderID","onRequestClose","modalProps","xl","fetchKey","updateFetchKey","useFetchKey","currentDomain","useCurrentDomainValue","currentUserAccessKey","accessKey","unitedAllowedPermissionByVolume","useMergedAllowedStorageHostPermission","domain","projectId","userAccessKey","_mergedAllowedVFolder","_mergedAllowedVFolder2","_mergedAllowedVFolder3","keypair","_useMergedAllowedStorageHostPermission_KeypairQuery","domainName","mergedAllowedVFolderHosts","_useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery","resourcePolicyName","resource_policy","allowedPermissionForDomainsByVolume","JSON","parse","allowed_vfolder_hosts","allowedPermissionForGroupsByVolume","allowedPermissionForResourcePolicyByVolume","keypair_resource_policy","data","vhostInfo","useSuspenseQuery","queryKey","queryFn","list_hosts","staleTime","gcTime","assign","allowed","volume","arr","Set","concat","StorageHostPermissionByDomain","StorageHostPermissionByGroup","StorageHostPermissionByResourcePolicy","bodyRef","_FolderExplorerModalQuery","hasDownloadContentPermission","hasDeleteContentPermission","permissions","hasWriteContentPermission","fileExplorerElement","Alert","showIcon","BAIFileExplorer","targetVFolderId","onUpload","enableDownload","enableDelete","enableWrite","tableProps","scroll","x","y","paddingBottom","paddingLG","fileDropContainerRef","vFolderDescriptionElement","VFolderNodeDescription","_fetchVFolder","BAIModal","className","centered","keyboard","destroyOnHidden","footer","FolderExplorerHeader","zIndex","zIndexPopupBase","bodyProps","ref","onCancel","Splitter","layout","Panel","resizable","defaultSize","Divider","display","active"],"sourceRoot":""}