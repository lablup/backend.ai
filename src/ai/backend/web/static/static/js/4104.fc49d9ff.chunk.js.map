{"version":3,"file":"static/js/4104.fc49d9ff.chunk.js","mappings":"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","sources":["../../node_modules/.pnpm/ai@4.1.61_react@19.0.0_zod@3.23.8/node_modules/ai/dist|lazy|/^.*child_process$/|groupOptions: {}|strict namespace object","components/Chat/__generated__/ChatCard_endpoint.graphql.ts","components/Chat/__generated__/ConversationQuery.graphql.ts","components/Chat/__generated__/EndpointSelectQuery.graphql.ts","components/FluentEmojiIcon.tsx","hooks/useAIAgent.ts","components/Chat/AIAgentSelect.tsx","components/Chat/EndpointSelect.tsx","components/Chat/ModelSelect.tsx","components/Chat/ChatHeader.tsx","components/Chat/ChatSender.tsx","components/Chat/ChatInput.tsx","hooks/useTokenizer.ts","components/Chat/ChatTokenCounter.tsx","components/Chat/CopyButton.tsx","components/Chat/ChatMessageContent.tsx","components/Chat/ChatMessage.tsx","components/Chat/ScrollBottomHandlerButton.tsx","components/Chat/VirtualChatMessageList.tsx","components/Chat/ChatMessages.tsx","components/Chat/CustomModelForm.tsx","components/Chat/ChatCard.tsx","components/Chat/Conversation.tsx","pages/ChatPage.tsx"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 29124;\nmodule.exports = webpackEmptyAsyncContext;","/**\n * @generated SignedSource<<01af96ad1015582b8979fc18dce37dfe>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ChatCard_endpoint$data = {\n  readonly endpoint_id: string | null | undefined;\n  readonly url: string | null | undefined;\n  readonly \" $fragmentType\": \"ChatCard_endpoint\";\n};\nexport type ChatCard_endpoint$key = {\n  readonly \" $data\"?: ChatCard_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ChatCard_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"url\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"b1ec3869b3c8db05d40a1d2089bf4681\";\n\nexport default node;\n","/**\n * @generated SignedSource<<8f20d1e196679a3f5fe122d7b345084a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs, Result } from \"relay-runtime\";\nexport type ConversationQuery$variables = {\n  endpointId: string;\n  isEmptyEndpointId: boolean;\n};\nexport type ConversationQuery$data = {\n  readonly endpoint: Result<{\n    readonly endpoint_id: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n  } | null | undefined, unknown>;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type ConversationQuery = {\n  response: ConversationQuery$data;\n  variables: ConversationQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isEmptyEndpointId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpointId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv3 = [\n  (v2/*: any*/),\n  {\n    \"args\": null,\n    \"kind\": \"FragmentSpread\",\n    \"name\": \"ChatCard_endpoint\"\n  }\n],\nv4 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 1\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"offset\",\n    \"value\": 0\n  }\n],\nv5 = [\n  (v2/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"url\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ConversationQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": {\n          \"alias\": null,\n          \"args\": (v1/*: any*/),\n          \"concreteType\": \"Endpoint\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"endpoint\",\n          \"plural\": false,\n          \"selections\": (v3/*: any*/),\n          \"storageKey\": null\n        },\n        \"to\": \"RESULT\"\n      },\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v3/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"endpoint_list(limit:1,offset:0)\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ConversationQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v5/*: any*/),\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v5/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"endpoint_list(limit:1,offset:0)\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"d7653723856ff846f2ffa7a4c6208108\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ConversationQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ConversationQuery(\\n  $endpointId: UUID!\\n  $isEmptyEndpointId: Boolean!\\n) {\\n  endpoint(endpoint_id: $endpointId) @skipOnClient(if: $isEmptyEndpointId) {\\n    endpoint_id\\n    ...ChatCard_endpoint\\n    id\\n  }\\n  endpoint_list(limit: 1, offset: 0) {\\n    items {\\n      endpoint_id\\n      ...ChatCard_endpoint\\n      id\\n    }\\n  }\\n}\\n\\nfragment ChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"19ab098027047c8f5d7ef3a879db277d\";\n\nexport default node;\n","/**\n * @generated SignedSource<<01b78d36601bdc40b4dc219e5f97b6b2>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointSelectQuery$variables = {\n  endpoint_id: string;\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n  skipEndpoint: boolean;\n};\nexport type EndpointSelectQuery$data = {\n  readonly endpoint: {\n    readonly endpoint_id: string | null | undefined;\n    readonly name: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n  } | null | undefined;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointSelectQuery = {\n  response: EndpointSelectQuery$data;\n  variables: EndpointSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpoint_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipEndpoint\"\n},\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv11 = {\n  \"args\": null,\n  \"kind\": \"FragmentSpread\",\n  \"name\": \"ChatCard_endpoint\"\n},\nv12 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpoint_id\"\n  }\n],\nv13 = [\n  (v8/*: any*/),\n  (v9/*: any*/),\n  (v10/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v3/*: any*/),\n      (v2/*: any*/),\n      (v4/*: any*/),\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v13/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v13/*: any*/),\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3e721bc4d82b8863ef87a9a37d052d0d\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n  $endpoint_id: UUID!\\n  $skipEndpoint: Boolean!\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      url\\n      ...ChatCard_endpoint\\n      id\\n    }\\n  }\\n  endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\\n    name\\n    endpoint_id\\n    ...ChatCard_endpoint\\n    id\\n  }\\n}\\n\\nfragment ChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"02cb33fa42cc8d8aa56c5ddd6542c548\";\n\nexport default node;\n","import * as fluentEmoji from '@iconify-json/fluent-emoji-flat';\nimport React from 'react';\n\nexport const FluentEmojiIcon: React.FC<{\n  name?: string;\n  height?: number;\n  width?: number;\n}> = ({ name, height, width }) => {\n  const icon = fluentEmoji.icons.icons[name ?? 'pure'];\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      height={height}\n      width={width}\n      role=\"img\"\n      dangerouslySetInnerHTML={{ __html: icon.body }}\n    />\n  );\n};\n","import { useUpdatableState } from '.';\nimport { useTanQuery } from './reactQueryAlias';\nimport { useCallback } from 'react';\n\nexport interface AIAgentMeta {\n  title: string;\n  avatar?: string;\n  background?: string;\n  descriptions?: string;\n  tags?: string[];\n}\n\nexport interface AIAgentConfig {\n  system_prompt: string;\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgentParams {\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stop?: string | string[];\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgent {\n  id: string;\n  endpoint: string;\n  endpoint_id: string;\n  config: AIAgentConfig;\n  meta: AIAgentMeta;\n  params?: AIAgentParams;\n}\n\nexport interface AIAgents {\n  agents: AIAgent[];\n}\n\nconst TIMEOUT_24_HOURS = 24 * 60 * 60 * 1000;\n\nexport const useAIAgent = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data: agentsData, isLoading } = useTanQuery<AIAgents>({\n    queryKey: ['useAgents', key],\n    queryFn: () => {\n      return fetch('resources/ai-agents.json').then((response) =>\n        response.json(),\n      );\n    },\n    staleTime: TIMEOUT_24_HOURS, // 24 hours\n  });\n\n  return {\n    agents: agentsData?.agents ?? [],\n    isLoading,\n    refresh: useCallback(() => checkUpdate(), [checkUpdate]),\n  };\n};\n","import { AIAgent } from '../../hooks/useAIAgent';\nimport Flex from '../Flex';\nimport { FluentEmojiIcon } from '../FluentEmojiIcon';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps, theme } from 'antd';\nimport React, { useState, useTransition } from 'react';\n\ninterface ChatAgentSelectProps extends Omit<SelectProps, 'options'> {\n  agents: AIAgent[];\n  selectedAgent?: AIAgent;\n}\n\nfunction makeAgentOptions(agents: AIAgent[], filter?: string) {\n  return agents\n    .map((agent) => ({\n      label: agent.meta.title,\n      value: agent.id,\n      ...agent,\n    }))\n    .filter((agent) => {\n      return agent.label.toLocaleLowerCase().includes(filter || '');\n    });\n}\n\nconst AIAgentSelect: React.FC<ChatAgentSelectProps> = ({\n  loading,\n  agents,\n  selectedAgent,\n  ...props\n}) => {\n  const { token } = theme.useToken();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<AIAgent>(props, {\n      valuePropName: 'value',\n      trigger: 'onChange',\n      defaultValue: props.value,\n    });\n\n  const [searchAgent, setSearchAgent] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  return (\n    <>\n      {selectedAgent && (\n        <Flex gap=\"xs\">\n          <FluentEmojiIcon\n            name={selectedAgent.meta.avatar}\n            height={token.sizeXL}\n            width={token.sizeXL}\n          />\n          <Select\n            showSearch\n            onSearch={(v) => {\n              startSearchTransition(() => {\n                setSearchAgent(v);\n              });\n            }}\n            filterOption={false}\n            loading={isSearchPending || loading}\n            options={makeAgentOptions(agents, searchAgent)}\n            value={controllableValue}\n            onChange={(v, agent) => {\n              setControllableValue(v, agent);\n            }}\n            popupMatchSelectWidth={false}\n          />\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default AIAgentSelect;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport {\n  EndpointSelectQuery,\n  EndpointSelectQuery$data,\n} from './__generated__/EndpointSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface EndpointSelectProps extends Omit<SelectProps, 'options'> {\n  fetchKey?: string;\n  lifecycleStageFilter?: LifecycleStage[];\n}\n\nexport type Endpoint = NonNullableItem<\n  EndpointSelectQuery$data['endpoint_list']\n>;\n\ntype LifecycleStage = 'created' | 'destroying' | 'destroyed';\n\nconst EndpointSelect: React.FC<EndpointSelectProps> = ({\n  fetchKey,\n  lifecycleStageFilter = ['created'],\n  loading,\n  ...selectPropsWithoutLoading\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(selectPropsWithoutLoading);\n  const [searchStr, setSearchStr] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  const lifecycleStageFilterStr = lifecycleStageFilter\n    .map((v) => `lifecycle_stage == \"${v}\"`)\n    .join(' | ');\n\n  const { endpoint_list, endpoint } = useLazyLoadQuery<EndpointSelectQuery>(\n    graphql`\n      query EndpointSelectQuery(\n        $offset: Int!\n        $limit: Int!\n        $projectID: UUID\n        $filter: String\n        $endpoint_id: UUID!\n        $skipEndpoint: Boolean!\n      ) {\n        endpoint_list(\n          offset: $offset\n          limit: $limit\n          project: $projectID\n          filter: $filter\n        ) {\n          total_count\n          items {\n            name\n            endpoint_id\n            url\n            ...ChatCard_endpoint\n          }\n        }\n        endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\n          name\n          endpoint_id\n          ...ChatCard_endpoint\n        }\n      }\n    `,\n    {\n      limit: 10,\n      offset: 0,\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? [lifecycleStageFilterStr, searchStr]\n            .filter(Boolean)\n            .map((v) => `(${v})`)\n            .join(' & ')\n        : undefined,\n      endpoint_id: controllableValue,\n      skipEndpoint: !controllableValue,\n    },\n    {\n      fetchKey: fetchKey,\n    },\n  );\n\n  const selectOptions = endpoint\n    ? _.map(\n        _.uniqBy(_.concat(endpoint_list?.items, endpoint), 'endpoint_id'),\n        (item) => {\n          return {\n            label: item?.name,\n            value: item?.endpoint_id,\n            endpoint: item,\n          };\n        },\n      )\n    : _.map(endpoint_list?.items, (item) => {\n        return {\n          label: item?.name,\n          value: item?.endpoint_id,\n          endpoint: item,\n        };\n      });\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectEndpoint')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      onSearch={(v) => {\n        startSearchTransition(() => {\n          setSearchStr(v && `name ilike \"%${v}%\"`);\n        });\n      }}\n      filterOption={false}\n      loading={isSearchPending || loading}\n      options={selectOptions}\n      {...selectPropsWithoutLoading}\n      // override value and onChange\n      value={controllableValue}\n      onChange={(v, option) => {\n        setControllableValue(v, _.castArray(option)?.[0].endpoint);\n      }}\n    />\n  );\n};\n\nexport default EndpointSelect;\n","import { BAIModel } from './ChatModel';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModelSelectProps extends SelectProps {\n  models?: Array<BAIModel>;\n  allowCustomModel?: boolean;\n}\n\nconst ModelSelect: React.FC<ModelSelectProps> = ({\n  models,\n  allowCustomModel,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectModel')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      options={_.concat(\n        allowCustomModel\n          ? [\n              {\n                label: 'Custom',\n                // @ts-ignore\n                value: 'custom',\n              },\n            ]\n          : [],\n        _.chain(models)\n          .groupBy('group')\n          .mapValues((ms) =>\n            _.map(ms, (m) => ({\n              label: m.label,\n              value: m.name,\n            })),\n          )\n          .map((v, k) => ({\n            label: k === 'undefined' ? 'Others' : k,\n            options: v,\n          }))\n          .value(),\n      )}\n      popupMatchSelectWidth={false}\n      {...selectProps}\n    />\n  );\n};\n\nexport default ModelSelect;\n","import { filterEmptyItem } from '../../helper';\nimport { useWebUINavigate } from '../../hooks';\nimport { AIAgent } from '../../hooks/useAIAgent';\nimport { useBAISettingUserState } from '../../hooks/useBAISetting';\nimport Flex from '../Flex';\nimport AIAgentSelect from './AIAgentSelect';\nimport { BAIModel, ChatLifecycleEventType, ChatType } from './ChatModel';\nimport EndpointSelect from './EndpointSelect';\nimport ModelSelect from './ModelSelect';\nimport {\n  ChatCard_endpoint$data,\n  ChatCard_endpoint$key,\n} from './__generated__/ChatCard_endpoint.graphql';\nimport { Message } from '@ai-sdk/react';\nimport { CloseOutlined, MoreOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Dropdown, Button, theme, MenuProps, Typography, Switch } from 'antd';\nimport { Scale as ScaleIcon, Eraser as EraserIcon } from 'lucide-react';\nimport React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface SyncSwitchProps {\n  sync: boolean;\n  onClick: (sync: boolean) => void;\n}\n\nconst SyncSwitch: React.FC<SyncSwitchProps> = ({ sync, onClick }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      {sync && (\n        <Typography.Text type=\"secondary\">\n          {t('chatui.SyncInput')}\n        </Typography.Text>\n      )}\n      <Switch checked={sync} onClick={onClick} />\n    </>\n  );\n};\n\ninterface ChatHeaderProps extends ChatLifecycleEventType {\n  chat: ChatType;\n  showCompareMenuItem?: boolean;\n  allowCustomModel?: boolean;\n  closable?: boolean;\n  models: BAIModel[];\n  modelId: string;\n  setModelId: (modelId: string) => void;\n  endpoint?: ChatCard_endpoint$data | null;\n  setEndpoint: (endpoint: ChatCard_endpoint$key) => void;\n  agents: AIAgent[];\n  agent?: AIAgent;\n  setAgent: (agent: AIAgent) => void;\n  sync: boolean;\n  setSync: (sync: boolean) => void;\n  fetchKey: string;\n  setMessages: (messages: Message[]) => void;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\n  chat,\n  showCompareMenuItem,\n  allowCustomModel,\n  closable,\n  models,\n  modelId,\n  setModelId,\n  endpoint,\n  setEndpoint,\n  agents,\n  agent,\n  setAgent,\n  sync,\n  setSync,\n  onRequestClose,\n  onCreateNewChat,\n  fetchKey,\n  setMessages,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const webuiNavigate = useWebUINavigate();\n\n  const [promisingEndpoint, setPromisingEndpoint] = useState(endpoint);\n\n  const items: MenuProps['items'] = filterEmptyItem([\n    showCompareMenuItem && {\n      key: 'compare',\n      label: t('chatui.CompareWithOtherModels'),\n      icon: <ScaleIcon />,\n      onClick: () => {\n        webuiNavigate(\n          `/serving?tab=chatting&endpointId=${endpoint?.endpoint_id}&modelId=${modelId}`,\n        );\n      },\n    },\n    showCompareMenuItem && {\n      type: 'divider',\n    },\n    {\n      key: 'clear',\n      label: t('chatui.DeleteChatHistory'),\n      icon: <EraserIcon />,\n      onClick: () => {\n        setMessages([]);\n      },\n    },\n    closable && {\n      type: 'divider',\n    },\n    closable && {\n      key: 'close',\n      danger: true,\n      label: t('chatui.DeleteChattingSession'),\n      icon: <CloseOutlined />,\n      onClick: () => {\n        onRequestClose?.(chat);\n      },\n    },\n  ]);\n\n  const [experimentalAIAgents] = useBAISettingUserState(\n    'experimental_ai_agents',\n  );\n\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"start\"\n      wrap=\"wrap\"\n      gap=\"xs\"\n      style={{\n        minHeight: '56px',\n        width: '100%',\n        paddingTop: token.paddingXS,\n        paddingBottom: token.paddingXS,\n      }}\n    >\n      <Flex\n        wrap=\"wrap\"\n        align=\"start\"\n        gap=\"xs\"\n        style={{\n          flexGrow: 1,\n          flexShrink: 1,\n          flexBasis: 'auto',\n        }}\n      >\n        {experimentalAIAgents && (\n          <AIAgentSelect\n            agents={agents}\n            selectedAgent={agent}\n            value={agent?.id}\n            onChange={(_, agent: any) => {\n              startTransition(() => {\n                setAgent(agent);\n              });\n            }}\n          />\n        )}\n        <EndpointSelect\n          fetchKey={fetchKey}\n          loading={promisingEndpoint?.endpoint_id !== endpoint?.endpoint_id}\n          onChange={(_, endpoint: any) => {\n            setPromisingEndpoint(endpoint);\n            startTransition(() => {\n              setEndpoint(endpoint);\n            });\n          }}\n          value={endpoint?.endpoint_id}\n          popupMatchSelectWidth={false}\n        />\n        <ModelSelect\n          models={models}\n          value={modelId}\n          onChange={(modelId) => {\n            startTransition(() => {\n              setModelId(modelId);\n            });\n          }}\n          allowCustomModel={allowCustomModel}\n        />\n      </Flex>\n      <Flex gap={'xs'}>\n        {closable && (\n          <SyncSwitch\n            sync={sync}\n            onClick={(checked) => {\n              startTransition(() => {\n                setSync(checked);\n              });\n            }}\n          />\n        )}\n        <Button onClick={() => onCreateNewChat?.()} icon={<PlusOutlined />} />\n        <Dropdown menu={{ items }} trigger={['click']}>\n          <Button\n            type=\"link\"\n            onClick={(e) => e.preventDefault()}\n            icon={<MoreOutlined />}\n            style={{ color: token.colorTextSecondary, width: token.sizeMS }}\n          />\n        </Dropdown>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatHeader;\n","import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\nimport {\n  Attachments,\n  AttachmentsProps,\n  Sender,\n  SenderProps,\n} from '@ant-design/x';\nimport { Attachment } from '@ant-design/x/es/attachments';\nimport { Badge, Button, GetRef, UploadProps } from 'antd';\nimport { isEmpty } from 'lodash';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ChageAttachmentsProps extends AttachmentsProps {\n  dropContainerRef: React.RefObject<HTMLElement | null>;\n}\n\nconst ChatAttachments: React.FC<ChageAttachmentsProps> = ({\n  items,\n  onChange,\n  dropContainerRef,\n  children,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Attachments\n      beforeUpload={() => false}\n      getDropContainer={() => dropContainerRef.current}\n      accept=\"image/*,text/*\"\n      items={items}\n      onChange={onChange}\n      placeholder={(type) =>\n        type === 'drop'\n          ? {\n              title: t('chatui.DropFileHere'),\n            }\n          : {\n              icon: <CloudUploadOutlined />,\n              title: t('chatui.UploadFiles'),\n              description: t('chatui.UploadFilesDescription'),\n            }\n      }\n    >\n      {children}\n    </Attachments>\n  );\n};\n\nexport type AttachmentChangeInfo = Parameters<\n  NonNullable<UploadProps['onChange']>\n>[0];\n\ninterface ChatSenderProps extends Omit<SenderProps, 'onChange'> {\n  loading?: boolean;\n  autoFocus?: boolean;\n  items?: Attachment[];\n  openAttachment?: boolean;\n  dropContainerRef: React.RefObject<HTMLDivElement | null>;\n  onInputChange?: (value: string) => void;\n  onInputSubmit?: () => void;\n  onInputCancel?: () => void;\n  onAttachmentChange?: (\n    attachment: 'prefix' | 'header',\n    info: AttachmentChangeInfo,\n  ) => void;\n  onAttachmentOpenChange?: (open: boolean) => void;\n}\n\nconst ChatSender: React.FC<ChatSenderProps> = ({\n  loading,\n  autoFocus,\n  items,\n  openAttachment,\n  dropContainerRef,\n  onInputChange,\n  onInputSubmit,\n  onInputCancel,\n  onAttachmentChange,\n  onAttachmentOpenChange,\n  ...senderProps\n}) => {\n  const { t } = useTranslation();\n\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\n\n  useEffect(() => {\n    if (autoFocus && senderRef.current) {\n      senderRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <Sender\n      style={{ flex: 1 }}\n      ref={senderRef}\n      {...senderProps}\n      loading={loading}\n      onChange={onInputChange}\n      onSubmit={onInputSubmit}\n      onCancel={onInputCancel}\n      submitType=\"enter\"\n      header={\n        <Sender.Header\n          closable={false}\n          title={t('chatui.Attachments')}\n          open={!!openAttachment && !isEmpty(items)}\n          onOpenChange={onAttachmentOpenChange}\n          styles={{\n            content: {\n              padding: 0,\n            },\n          }}\n        >\n          <ChatAttachments\n            items={items}\n            dropContainerRef={dropContainerRef}\n            onChange={(info) => onAttachmentChange?.('header', info)}\n          />\n        </Sender.Header>\n      }\n      prefix={\n        <ChatAttachments\n          items={items}\n          dropContainerRef={dropContainerRef}\n          onChange={(info) => onAttachmentChange?.('prefix', info)}\n        >\n          <Badge dot={!isEmpty(items) && !openAttachment}>\n            <Button type=\"text\" icon={<LinkOutlined />} />\n          </Badge>\n        </ChatAttachments>\n      }\n    />\n  );\n};\n\nexport default ChatSender;\n","import { createDataTransferFiles } from '../../helper';\nimport Flex from '../Flex';\nimport ChatSender, { AttachmentChangeInfo } from './ChatSender';\nimport { CreateMessage, Message } from '@ai-sdk/react';\nimport type { AttachmentsProps } from '@ant-design/x';\nimport { ChatRequestOptions } from 'ai';\nimport { theme } from 'antd';\nimport { atom, useAtom } from 'jotai';\nimport { isEmpty, isEqual, isUndefined } from 'lodash';\nimport React, { useCallback, useEffect, useId, useRef, useState } from 'react';\n\nconst synchronizedMessageState = atom<string>('');\nconst synchronizedAttachmentState = atom<AttachmentsProps['items']>();\nconst chatSubmitKeyInfoState = atom<{ id: string; key: string } | undefined>(\n  undefined,\n);\n\ninterface ChatRequest {\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n}\n\ninterface ChatInputProps extends ChatRequest {\n  sync: boolean;\n  input: string;\n  setInput: (input: string) => void;\n  stop: () => void;\n  append: (\n    message: Message | CreateMessage,\n    chatRequestOptions?: ChatRequestOptions,\n  ) => Promise<string | null | undefined>;\n  isLoading: boolean;\n}\n\nconst ChatInput: React.FC<ChatInputProps> = ({\n  sync,\n  input,\n  setInput,\n  stop,\n  append,\n  isLoading,\n}) => {\n  const { token } = theme.useToken();\n\n  const ChatInputStyle = {\n    background: '#ffffff',\n    borderTop: '1px solid #f0f0f0',\n    borderRadius: '0 0 8px 8px',\n    padding: token.paddingContentVertical,\n  };\n\n  const [isOpenAttachments, setIsOpenAttachments] = useState(false);\n  const [files, setFiles] = useState<AttachmentsProps['items']>([]);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  const [synchronizedMessage, setSynchronizedMessage] = useAtom(\n    synchronizedMessageState,\n  );\n\n  const [synchronizedAttachment, setSynchronizedAttachment] = useAtom(\n    synchronizedAttachmentState,\n  );\n\n  const [chatSubmitKeyInfo, setChatSubmitKeyInfo] = useAtom(\n    chatSubmitKeyInfoState,\n  );\n\n  const submitId = useId();\n  const submitKey =\n    chatSubmitKeyInfo?.id === submitId ? undefined : chatSubmitKeyInfo?.key;\n\n  const prevSyncRef = useRef(sync);\n  useEffect(() => {\n    if (prevSyncRef.current !== sync) {\n      setInput('');\n      prevSyncRef.current = sync;\n    }\n  }, [sync, setInput]);\n\n  useEffect(() => {\n    if (sync && !isUndefined(synchronizedMessage)) {\n      setInput(synchronizedMessage);\n    }\n  }, [synchronizedMessage, setInput, sync]);\n\n  const setFilesFromInputAttachment = (\n    inputAttachment: AttachmentsProps['items'],\n  ) => {\n    if (!isUndefined(inputAttachment) && !isEqual(files, inputAttachment)) {\n      setFiles(inputAttachment);\n      setIsOpenAttachments(true);\n    }\n  };\n\n  // If the `inputAttachment` prop exists, the `files` state has to follow it.\n  useEffect(() => {\n    setFilesFromInputAttachment(synchronizedAttachment);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [synchronizedAttachment]);\n\n  useEffect(() => {\n    if (!isUndefined(submitKey) && input) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitKey]);\n\n  const handleInputChange = useCallback(\n    (value: string) => {\n      setInput(value);\n      if (sync) {\n        setSynchronizedMessage(value);\n      }\n    },\n    [sync, setInput, setSynchronizedMessage],\n  );\n\n  const handleInputCancel = useCallback(() => {\n    stop();\n  }, [stop]);\n\n  const handleInputSubmit = useCallback(() => {\n    if (input || !isEmpty(files)) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n      setTimeout(() => {\n        setInput('');\n        setFiles([]);\n        setIsOpenAttachments(false);\n      }, 0);\n\n      setSynchronizedMessage('');\n      setSynchronizedAttachment([]);\n      if (sync) {\n        setChatSubmitKeyInfo({\n          id: submitId,\n          key: new Date().toString(),\n        });\n      }\n    }\n  }, [\n    input,\n    files,\n    append,\n    setSynchronizedMessage,\n    setSynchronizedAttachment,\n    sync,\n    setInput,\n    setChatSubmitKeyInfo,\n    submitId,\n  ]);\n\n  const handleAttachmentChange = useCallback(\n    (attachment: string, info: AttachmentChangeInfo) => {\n      const fileList = info.fileList;\n      setFiles(fileList);\n\n      if (attachment === 'prefix') {\n        setIsOpenAttachments(true);\n      }\n\n      if (sync) {\n        setSynchronizedAttachment(fileList);\n      }\n    },\n    [sync, setFiles, setIsOpenAttachments, setSynchronizedAttachment],\n  );\n\n  const handleAttachmentOpenChange = useCallback(\n    (open: boolean) => {\n      setIsOpenAttachments(open);\n    },\n    [setIsOpenAttachments],\n  );\n\n  return (\n    <>\n      <Flex style={ChatInputStyle} direction=\"column\" align=\"center\">\n        <ChatSender\n          placeholder=\"Say something...\"\n          autoFocus\n          value={input}\n          items={files}\n          openAttachment={isOpenAttachments}\n          dropContainerRef={cardRef}\n          loading={isLoading}\n          onInputChange={handleInputChange}\n          onInputSubmit={handleInputSubmit}\n          onInputCancel={handleInputCancel}\n          onAttachmentChange={handleAttachmentChange}\n          onAttachmentOpenChange={handleAttachmentOpenChange}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatInput;\n","import { startTransition, useEffect, useState } from 'react';\n\nexport const encodeAsync = async (str: string) => {\n  const { encode } = await import('gpt-tokenizer');\n\n  return encode(str).length;\n};\n\nexport const useTokenCount = (input: string = '') => {\n  const [value, setNum] = useState(0);\n\n  useEffect(() => {\n    startTransition(() => {\n      encodeAsync(input)\n        .then(setNum)\n        .catch(() => {\n          setNum(input.length);\n        });\n    });\n  }, [input]);\n\n  return value;\n};\n","import { useTokenCount } from '../../hooks/useTokenizer';\nimport Flex from '../Flex';\nimport { RocketOutlined } from '@ant-design/icons';\nimport { Message } from 'ai';\nimport { Typography } from 'antd';\nimport { Tag, theme } from 'antd';\nimport { map, last } from 'lodash';\nimport React, { useMemo } from 'react';\n\ninterface ChatTokenCounterProps {\n  input: string;\n  messages: Message[];\n  startTime: number | null;\n}\n\nconst ChatTokenCounter: React.FC<ChatTokenCounterProps> = ({\n  input,\n  messages,\n  startTime,\n}) => {\n  const { token } = theme.useToken();\n  const inputTokenCount = useTokenCount(input);\n  const allChatMessageString = useMemo(() => {\n    return map(messages, (message) => message?.content).join('');\n  }, [messages]);\n  const chatsTokenCount = useTokenCount(allChatMessageString);\n  const totalTokenCount = inputTokenCount + chatsTokenCount;\n  const lastAssistantMessageString = useMemo(() => {\n    const lastAssistantMessage = last(messages);\n    if (lastAssistantMessage?.role === 'assistant') {\n      return lastAssistantMessage?.content;\n    } else {\n      return '';\n    }\n  }, [messages]);\n\n  const lastAssistantTokenCount = useTokenCount(lastAssistantMessageString);\n  const tokenPerSecond = useMemo(() => {\n    return lastAssistantTokenCount > 0 && startTime\n      ? lastAssistantTokenCount / ((Date.now() - startTime) / 1000)\n      : 0;\n  }, [lastAssistantTokenCount, startTime]);\n\n  return (\n    <Flex justify=\"end\" align=\"end\" style={{ margin: token.marginSM }}>\n      <Tag>\n        <Flex gap={'xs'}>\n          <RocketOutlined />\n          <Flex gap={'xxs'}>\n            <Typography.Text>{tokenPerSecond.toFixed(2)}</Typography.Text>\n            <Typography.Text type=\"secondary\">tok/s</Typography.Text>\n          </Flex>\n          <Flex gap={'xxs'}>\n            <Typography.Text>{totalTokenCount}</Typography.Text>\n            <Typography.Text type=\"secondary\">total tokens</Typography.Text>\n          </Flex>\n        </Flex>\n      </Tag>\n    </Flex>\n  );\n};\n\nexport default ChatTokenCounter;\n","import { Button, ButtonProps, Tooltip } from 'antd';\nimport { CopyConfig } from 'antd/es/typography/Base';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface CopyButtonProps extends ButtonProps {\n  copyable?: Omit<CopyConfig, 'text'> & { text: string };\n  defaultIcon?: React.ReactNode;\n}\nconst CopyButton: React.FC<CopyButtonProps> = ({\n  copyable,\n  defaultIcon,\n  ...props\n}) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = async () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      const timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCopied]);\n\n  return (\n    <Tooltip\n      title={isCopied ? 'Copied!' : 'Copy'}\n      open={isCopied ? true : undefined}\n    >\n      <CopyToClipboard text={copyable?.text || ''} onCopy={handleCopy}>\n        <Button\n          icon={\n            isCopied ? <CheckIcon /> : defaultIcon ? defaultIcon : <CopyIcon />\n          }\n          {...props}\n        />\n      </CopyToClipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyButton;\n","import CopyButton from './CopyButton';\nimport { Card, Typography } from 'antd';\n// `rehype-katex` does not import the CSS file, so we need to import it manually.\nimport 'katex/dist/katex.min.css';\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport {\n  Prism as SyntaxHighlighter,\n  SyntaxHighlighterProps,\n} from 'react-syntax-highlighter';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nconst { Text } = Typography;\n\nconst ChatMessageContent: React.FC<{\n  children?: string;\n}> = ({ children }) => {\n  return (\n    <Markdown\n      remarkPlugins={[remarkGfm, remarkMath]}\n      rehypePlugins={[rehypeKatex]}\n      components={{\n        p({ node, ...props }) {\n          // @ts-ignore\n          return <p {...props} style={{ whiteSpace: 'pre-wrap' }} />;\n        },\n        code(props) {\n          const { children, className, node, ref, ...rest } = props;\n          const match = /language-(\\w+)/.exec(className || '');\n          const content = String(children).replace(/\\n$/, '');\n          return match ? (\n            <Card\n              title={\n                <Text style={{ fontWeight: 'normal' }} type=\"secondary\">\n                  {match[1]}\n                </Text>\n              }\n              type=\"inner\"\n              size=\"small\"\n              extra={\n                <CopyButton\n                  type=\"text\"\n                  copyable={{\n                    text: 's',\n                  }}\n                />\n              }\n              styles={{\n                body: { padding: 0 },\n                header: { margin: 0 },\n              }}\n            >\n              <div style={{ margin: '-0.5em 0', width: '100%' }}>\n                <CodeBlock\n                  ref={ref}\n                  {...rest}\n                  PreTag=\"div\"\n                  language={match[1]}\n                  style={oneLight}\n                  wrapLongLines\n                  wrapLines\n                >\n                  {content}\n                </CodeBlock>\n              </div>\n            </Card>\n          ) : (\n            <code {...rest} className={className}>\n              {/* @ts-ignore */}\n              {children}\n            </code>\n          );\n        },\n      }}\n    >\n      {children}\n    </Markdown>\n  );\n};\n\nconst X: React.FC<SyntaxHighlighterProps> = ({ children, ...props }) => {\n  return <SyntaxHighlighter {...props}>{children}</SyntaxHighlighter>;\n};\nconst CodeBlock = React.memo(X);\n\nexport default React.memo(ChatMessageContent);\n","import Flex from '../Flex';\n// ES 2015\nimport ChatMessageContent from './ChatMessageContent';\nimport { Message } from '@ai-sdk/react';\nimport { Attachments } from '@ant-design/x';\nimport { Avatar, theme, Image, Collapse, Typography, Spin } from 'antd';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport _ from 'lodash';\nimport React, { useDeferredValue } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst ChatMessage: React.FC<{\n  message: Message;\n  placement?: 'left' | 'right';\n  extra?: React.ReactNode;\n  enableExtraHover?: boolean;\n  containerStyle?: React.CSSProperties;\n  isStreaming?: boolean;\n  // avatar?:\n}> = ({\n  extra,\n  message,\n  placement = 'left',\n  containerStyle,\n  enableExtraHover,\n  isStreaming,\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const deferredReasoning = useDeferredValue(message.reasoning);\n  const deferredContent = useDeferredValue(message.content);\n\n  return (\n    <Flex\n      direction={placement === 'left' ? 'row' : 'row-reverse'}\n      justify={'start'}\n      align=\"baseline\"\n      style={{\n        marginLeft: placement === 'left' ? '0' : '15%',\n        marginRight: placement === 'right' ? '0' : 20,\n        ...containerStyle,\n      }}\n      gap={'sm'}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {message.role !== 'user' ? (\n        <Avatar\n          // icon={message.role === \"user\" ? \"🧑‍🦰\" : \"🤖\"}\n          icon={'🤖'}\n          style={{ fontSize: token.fontSizeHeading3 }}\n        />\n      ) : null}\n\n      <Flex\n        direction=\"column\"\n        align={placement === 'left' ? 'start' : 'end'}\n        wrap=\"wrap\"\n        style={{ flex: 1 }}\n        gap={'xs'}\n      >\n        {_.map(message.experimental_attachments, (attachment, index) =>\n          _.includes(attachment?.contentType, 'image/') ? (\n            <Flex\n              style={{\n                border: 'none',\n                textAlign: 'end',\n              }}\n              align=\"end\"\n            >\n              <Image\n                key={`${message?.id}-${index}`}\n                src={attachment?.url}\n                alt={attachment?.name}\n                style={{\n                  maxWidth: '50vw',\n                  maxHeight: '12vh',\n                  borderRadius: token.borderRadius,\n                }}\n              />\n            </Flex>\n          ) : (\n            <Attachments.FileCard\n              key={index}\n              item={{\n                uid: `${message?.id}-${index}`,\n                name: attachment?.name || attachment?.url,\n                type: attachment?.contentType,\n                description: attachment?.name,\n                url: attachment?.url,\n              }}\n            />\n          ),\n        )}\n        <Flex\n          align=\"stretch\"\n          direction=\"column\"\n          style={{\n            borderRadius: token.borderRadius,\n            borderColor: token.colorBorderSecondary,\n            borderWidth: token.lineWidth,\n            padding: '1em',\n            paddingTop: 0,\n            paddingBottom: 0,\n            backgroundColor:\n              message.role !== 'user'\n                ? token.colorBgContainer\n                : token.colorBgContainerDisabled,\n            maxWidth: '100%',\n            width: _.trim(message.reasoning) ? '100%' : 'auto',\n          }}\n        >\n          {_.trim(message.reasoning) && (\n            <Collapse\n              style={{\n                marginTop: token.margin,\n                width: '100%',\n              }}\n              items={[\n                {\n                  key: 'reasoning',\n                  label: _.isEmpty(deferredContent) ? (\n                    <Flex gap=\"xs\">\n                      <Typography.Text>{t('chatui.Thinking')}</Typography.Text>\n                      <Spin size=\"small\" />\n                    </Flex>\n                  ) : (\n                    <Typography.Text>\n                      {t('chatui.ViewReasoning')}\n                    </Typography.Text>\n                  ),\n                  children: (\n                    <ChatMessageContent>{deferredReasoning}</ChatMessageContent>\n                  ),\n                },\n              ]}\n            />\n          )}\n          <ChatMessageContent>\n            {deferredContent + (isStreaming ? '\\n●' : '')}\n          </ChatMessageContent>\n        </Flex>\n        <Flex\n          style={{\n            fontSize: token.fontSizeSM,\n            ...(enableExtraHover\n              ? {\n                  opacity: isHovered ? 1 : 0,\n                  transition: 'opacity 0.2s',\n                  transitionDelay: isHovered ? '0s' : '0.2s',\n                }\n              : {}),\n          }}\n        >\n          {extra}\n        </Flex>\n        {/* <Text\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n            opacity: isHovered ? 1 : 0,\n            transition: \"opacity 0.2s\",\n            transitionDelay: isHovered ? \"0s\" : \"0.2s\",\n          }}\n        >\n          {dayjs(message.createdAt)?.isSame(new Date(), \"day\")\n            ? dayjs(message.createdAt).format(\"LT\")\n            : dayjs(message.createdAt).format(\"L LT\")}\n        </Text> */}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatMessage;\n","import { useEventNotStable } from '../../hooks/useEventNotStable';\nimport { Button } from 'antd';\nimport { ArrowDownIcon } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface ScrollBottomHandlerButtonProps {\n  autoScroll?: boolean;\n  atBottom?: boolean;\n  lastMessageContent?: string;\n  onScrollToBottom: (type: 'click' | 'auto') => void;\n}\nconst ScrollBottomHandlerButton: React.FC<ScrollBottomHandlerButtonProps> = ({\n  autoScroll,\n  atBottom,\n  lastMessageContent,\n  ...props\n}) => {\n  const onScrollToBottom = useEventNotStable(props.onScrollToBottom);\n\n  useEffect(() => {\n    if (atBottom && autoScroll) {\n      onScrollToBottom?.('auto');\n    }\n  }, [atBottom, autoScroll, lastMessageContent, onScrollToBottom]);\n\n  return (\n    <Button\n      icon={<ArrowDownIcon />}\n      shape=\"circle\"\n      onClick={() => {\n        onScrollToBottom && onScrollToBottom('click');\n      }}\n    ></Button>\n  );\n};\n\nexport default ScrollBottomHandlerButton;\n","import Flex from '../Flex';\nimport ChatMessage from './ChatMessage';\nimport CopyButton from './CopyButton';\nimport ScrollBottomHandlerButton from './ScrollBottomHandlerButton';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport Compact from 'antd/es/space/Compact';\nimport _ from 'lodash';\nimport React, { useRef, useState } from 'react';\nimport { Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\n// import AutoScroll from '../AutoScroll';\n// import Item from '../ChatItem';\n\ninterface VirtualizedListProps {\n  messages: Array<Message>;\n  isStreaming?: boolean;\n}\nconst VirtualChatMessageList: React.FC<VirtualizedListProps> = ({\n  messages,\n  isStreaming,\n}) => {\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [atBottom, setAtBottom] = useState(true);\n  const { token } = theme.useToken();\n  // overscan should be 1.5 times the height of the window\n  const overscan = typeof window !== 'undefined' ? window.innerHeight * 1.5 : 0;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ height: '100%', flex: 1 }}\n    >\n      <Virtuoso\n        atBottomStateChange={setAtBottom}\n        atBottomThreshold={60}\n        computeItemKey={(_, item) => item.id}\n        data={messages}\n        followOutput={'auto'}\n        initialTopMostItemIndex={messages?.length - 1}\n        itemContent={(index, m) => {\n          return (\n            <ChatMessage\n              key={m.id}\n              message={m}\n              placement={m.role === 'user' ? 'right' : 'left'}\n              containerStyle={{\n                paddingLeft: token.paddingMD,\n                paddingRight: token.paddingMD,\n                paddingTop: index === 0 ? token.paddingMD : 0,\n                paddingBottom:\n                  index === messages.length - 1 ? token.paddingMD : 0,\n              }}\n              isStreaming={\n                m.role !== 'user' &&\n                isStreaming &&\n                index === messages.length - 1\n              }\n              enableExtraHover={m.role === 'user'}\n              extra={\n                m.role !== 'user' ? (\n                  <Compact>\n                    <CopyButton\n                      type=\"text\"\n                      size=\"small\"\n                      copyable={{\n                        text: m.content,\n                      }}\n                    />\n                    {/* <Button/> */}\n                    {/* <Button/> */}\n                  </Compact>\n                ) : (\n                  <Compact>{null}</Compact>\n                )\n              }\n            />\n          );\n        }}\n        overscan={overscan}\n        ref={virtuosoRef}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          right: '50%',\n          transform: 'translateX(+50%)',\n          bottom: token.marginSM,\n          opacity: atBottom ? 0 : 1,\n          transition: 'opacity 0.2s',\n          transitionDelay: atBottom ? '0s' : '0.2s',\n        }}\n      >\n        <ScrollBottomHandlerButton\n          atBottom={atBottom}\n          autoScroll={isStreaming}\n          onScrollToBottom={(type) => {\n            const virtuoso = virtuosoRef.current;\n            switch (type) {\n              case 'auto': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'auto',\n                  index: 'LAST',\n                });\n                break;\n              }\n              case 'click': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'smooth',\n                  index: 'LAST',\n                });\n                break;\n              }\n            }\n          }}\n          lastMessageContent={_.get(_.last(messages), 'content')}\n        />\n      </div>\n    </Flex>\n  );\n};\n\nexport default VirtualChatMessageList;\n","import Flex from '../Flex';\nimport PureChatTokenCounter from './ChatTokenCounter';\nimport VirtualChatMessageList from './VirtualChatMessageList';\nimport { Message } from '@ai-sdk/react';\nimport equal from 'fast-deep-equal';\nimport React, { memo } from 'react';\n\nconst ChatMessageList = memo(VirtualChatMessageList, (prevProps, nextProps) => {\n  if (!equal(prevProps.messages, nextProps.messages)) return false;\n  if (prevProps.isStreaming !== nextProps.isStreaming) return false;\n  return true;\n});\n\nconst ChatTokenCounter = memo(PureChatTokenCounter, (prevProps, nextProps) => {\n  if (prevProps.input !== nextProps.input) return false;\n  if (!equal(prevProps.messages, nextProps.messages)) return false;\n  if (prevProps.startTime !== nextProps.startTime) return false;\n  return true;\n});\n\ninterface ChatRequest {\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n}\n\ninterface ChatMessageProps extends ChatRequest {\n  messages: Message[];\n  input: string;\n  isLoading: boolean;\n  startTime: number | null;\n}\n\nconst ChatMessage: React.FC<ChatMessageProps> = ({\n  messages,\n  input,\n  isLoading,\n  startTime,\n}) => {\n  return (\n    <>\n      <ChatMessageList messages={messages} isStreaming={isLoading} />\n      <Flex direction=\"column\" align=\"end\">\n        <ChatTokenCounter\n          messages={messages}\n          input={input}\n          startTime={startTime}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatMessage;\n","import Flex from '../Flex';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport {\n  Alert,\n  Button,\n  ButtonProps,\n  Form,\n  FormInstance,\n  Input,\n  theme,\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ntype CustomModelFormProps = {\n  baseURL?: string;\n  token?: string;\n  allowCustomModel?: boolean;\n  alert?: React.ReactNode;\n  modelId?: string;\n  formRef: React.RefObject<FormInstance<any> | null>;\n};\n\nconst CustomModelForm: React.FC<CustomModelFormProps> = ({\n  baseURL,\n  token,\n  allowCustomModel,\n  alert,\n  modelId,\n  formRef,\n}) => {\n  const { token: themeToken } = theme.useToken();\n\n  return (\n    <Flex\n      direction=\"row\"\n      style={{\n        padding: themeToken.paddingSM,\n        paddingRight: themeToken.paddingContentHorizontalLG,\n        paddingLeft: themeToken.paddingContentHorizontalLG,\n        backgroundColor: themeToken.colorBgContainer,\n        // @FIXME: check the condition at the parent component\n        display: (allowCustomModel && modelId === 'custom' && 'flex') || 'none',\n      }}\n    >\n      <Form\n        ref={formRef}\n        layout=\"horizontal\"\n        size=\"small\"\n        requiredMark=\"optional\"\n        style={{ flex: 1 }}\n        key={baseURL}\n        initialValues={{\n          baseURL: baseURL,\n          token: token,\n        }}\n      >\n        {alert ? (\n          <div style={{ marginBottom: themeToken.size }}>{alert}</div>\n        ) : null}\n        <Form.Item\n          label=\"baseURL\"\n          name=\"baseURL\"\n          rules={[\n            {\n              type: 'url',\n            },\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input placeholder=\"https://domain/v1\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Model ID\"\n          name=\"modelId\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input placeholder=\"llm-model\" />\n        </Form.Item>\n        <Form.Item label=\"Token\" name=\"token\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Flex>\n  );\n};\n\ntype CustomModelAlertProp = {\n  onClick?: ButtonProps['onClick'];\n};\n\nconst CustomModelAlert: React.FC<CustomModelAlertProp> = ({ onClick }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Alert\n      type=\"warning\"\n      showIcon\n      message={t('chatui.CannotFindModel')}\n      action={\n        <Button icon={<ReloadOutlined />} onClick={onClick}>\n          {t('button.Refresh')}\n        </Button>\n      }\n    />\n  );\n};\n\nexport { CustomModelForm, CustomModelAlert };\n","import { useUpdatableState } from '../../hooks';\nimport { useSuspenseTanQuery } from '../../hooks/reactQueryAlias';\nimport { AIAgent, useAIAgent } from '../../hooks/useAIAgent';\nimport PureChatHeader from './ChatHeader';\nimport PureChatInput from './ChatInput';\nimport ChatMessages from './ChatMessages';\nimport {\n  BAIModel,\n  ChatLifecycleEventType,\n  ChatProviderType,\n  ChatType,\n  Model,\n} from './ChatModel';\nimport { CustomModelAlert, CustomModelForm } from './CustomModelForm';\nimport {\n  ChatCard_endpoint$data,\n  ChatCard_endpoint$key,\n} from './__generated__/ChatCard_endpoint.graphql';\nimport { createOpenAI } from '@ai-sdk/openai';\nimport { useChat } from '@ai-sdk/react';\nimport { extractReasoningMiddleware, streamText, wrapLanguageModel } from 'ai';\nimport { Alert, Card, CardProps, FormInstance } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport { isEmpty } from 'lodash';\nimport _ from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface ChatCardProps extends CardProps, ChatLifecycleEventType {\n  chat: ChatType;\n  selectedEndpoint: ChatCard_endpoint$key | null;\n  closable?: boolean;\n  fetchOnClient?: boolean;\n}\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatCard: css`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  body: css`\n    background-color: ${token.colorFillQuaternary};\n    border-radius: 0;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    height: 50%;\n    position: relative;\n  `,\n  actions: css`\n    padding-left: ${token.paddingContentHorizontal};\n    padding-right: ${token.paddingContentHorizontal};\n  `,\n  header: css`\n    zindex: 1;\n  `,\n  alert: css`\n    margin: ${token.marginSM};\n  `,\n}));\n\nfunction useEndpoint(selectedEndpoint?: ChatCard_endpoint$key | null) {\n  const [endpointKey, setEndpoint] = useState<ChatCard_endpoint$key | null>(\n    selectedEndpoint || null,\n  );\n  const endpoint = useFragment(\n    graphql`\n      fragment ChatCard_endpoint on Endpoint {\n        endpoint_id\n        url\n      }\n    `,\n    endpointKey,\n  );\n\n  return { endpoint, setEndpoint } as const;\n}\n\nfunction useModels(\n  provider: ChatProviderType,\n  fetchKey: string,\n  endpoint?: ChatCard_endpoint$data | null,\n) {\n  const { data: modelsResult } = useSuspenseTanQuery<{\n    data: Array<Model>;\n  }>({\n    queryKey: ['models', fetchKey, endpoint?.endpoint_id],\n    queryFn: () => {\n      return endpoint?.url\n        ? fetch(\n            new URL(\n              provider.basePath + '/models',\n              endpoint?.url ?? undefined,\n            ).toString(),\n          )\n            .then((res) => res.json())\n            .catch((e) => ({ data: [] }))\n        : Promise.resolve({ data: [] });\n    },\n  });\n\n  const models = _.map(modelsResult?.data, (m) => ({\n    id: m.id,\n    name: m.id,\n  })) as BAIModel[];\n\n  const selectedModelId = useMemo(\n    () =>\n      provider.modelId &&\n      _.includes(_.map(modelsResult?.data, 'id'), provider.modelId)\n        ? provider.modelId\n        : (modelsResult?.data?.[0]?.id ?? 'custom'),\n    [modelsResult?.data, provider.modelId],\n  );\n\n  const [modelId, setModelId] = useState<string>(selectedModelId);\n\n  useEffect(() => {\n    setModelId(selectedModelId);\n  }, [selectedModelId]);\n\n  return { models, modelId, setModelId } as const;\n}\n\nfunction useAgents(provider: ChatProviderType) {\n  const { agents } = useAIAgent();\n  const [agent, setAgent] = useState<AIAgent | undefined>(undefined);\n\n  const selectedAgent = useMemo(() => {\n    return agents.find((a) => a.id === provider.agentId);\n  }, [agents, provider.agentId]);\n\n  useEffect(() => {\n    setAgent(selectedAgent);\n  }, [selectedAgent]);\n\n  return { agents, agent, setAgent } as const;\n}\n\nconst ChatHeader = React.memo(PureChatHeader, (prev, next) => {\n  if (prev.modelId !== next.modelId) return false;\n  if (prev.endpoint !== next.endpoint) return false;\n  if (prev.agent !== next.agent) return false;\n  if (prev.fetchKey !== next.fetchKey) return false;\n  if (prev.sync !== next.sync) return false;\n  if (prev.closable !== next.closable) return false;\n  return true;\n});\n\nconst ChatInput = React.memo(PureChatInput, (prev, next) => {\n  if (prev.input !== next.input) return false;\n  if (prev.sync !== next.sync) return false;\n  if (prev.isLoading !== next.isLoading) return false;\n  return true;\n});\n\nconst ChatCard: React.FC<ChatCardProps> = ({\n  chat,\n  selectedEndpoint,\n  closable,\n  fetchOnClient,\n  onRequestClose,\n  onCreateNewChat,\n}) => {\n  const {\n    styles: { chatCard: chatCardStyle, alert: alertStyle, ...chatCardStyles },\n  } = useStyles();\n  const formRef = useRef<FormInstance>(null);\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  const { endpoint, setEndpoint } = useEndpoint(selectedEndpoint);\n  const { models, modelId, setModelId } = useModels(\n    chat.provider,\n    fetchKey,\n    endpoint,\n  );\n  const { agents, agent, setAgent } = useAgents(chat.provider);\n  const [sync, setSync] = useState(chat.sync);\n\n  const baseURL = endpoint?.url\n    ? new URL(chat.provider.basePath, endpoint?.url ?? undefined).toString()\n    : undefined;\n\n  const allowCustomModel = isEmpty(models);\n  const providerSettings = {\n    baseURL: allowCustomModel\n      ? formRef.current?.getFieldValue('baseURL')\n      : baseURL,\n    modelId: allowCustomModel\n      ? formRef.current?.getFieldValue('modelId')\n      : modelId,\n    apiKey: allowCustomModel\n      ? formRef.current?.getFieldValue('token')\n      : chat.provider.apiKey,\n  };\n\n  const {\n    error,\n    messages,\n    input,\n    setInput,\n    stop,\n    isLoading,\n    append,\n    setMessages,\n  } = useChat({\n    id: `${chat.id}-${endpoint?.endpoint_id}-${agent?.id ?? 'none'}-${modelId}`,\n    api: baseURL,\n    credentials: chat.provider.credentials,\n    body: {\n      modelId: modelId,\n    },\n    experimental_throttle: 100,\n    fetch: async (input, init) => {\n      if (fetchOnClient || modelId === 'custom') {\n        const body = JSON.parse(init?.body as string);\n        const provider = createOpenAI({\n          baseURL: providerSettings.baseURL,\n          apiKey: providerSettings.apiKey || 'dummy',\n        });\n        const result = streamText({\n          abortSignal: init?.signal || undefined,\n          model: wrapLanguageModel({\n            model: provider(providerSettings.modelId),\n            middleware: extractReasoningMiddleware({ tagName: 'think' }),\n          }),\n          messages: body?.messages,\n          system: agent ? (agent.config.system_prompt ?? '') : '',\n        });\n\n        setStartTime(Date.now());\n\n        return result.toDataStreamResponse({\n          sendReasoning: true,\n        });\n      } else {\n        return fetch(input, init);\n      }\n    },\n  });\n\n  return (\n    <Card\n      bordered\n      className={chatCardStyle}\n      classNames={chatCardStyles}\n      title={\n        <ChatHeader\n          chat={chat}\n          allowCustomModel={allowCustomModel}\n          models={models}\n          modelId={modelId}\n          setModelId={setModelId}\n          endpoint={endpoint}\n          setEndpoint={setEndpoint}\n          agents={agents}\n          agent={agent}\n          setAgent={setAgent}\n          sync={sync}\n          setSync={setSync}\n          fetchKey={fetchKey}\n          closable={closable}\n          onCreateNewChat={onCreateNewChat}\n          onRequestClose={onRequestClose}\n          setMessages={setMessages}\n        />\n      }\n    >\n      <CustomModelForm\n        modelId={modelId}\n        baseURL={baseURL}\n        formRef={formRef}\n        allowCustomModel={allowCustomModel}\n        alert={\n          formRef && (\n            <CustomModelAlert onClick={() => updateFetchKey(baseURL)} />\n          )\n        }\n      />\n      {!_.isEmpty(error?.message) ? (\n        <Alert\n          message={error?.message}\n          type=\"error\"\n          showIcon\n          className={alertStyle}\n          closable\n        />\n      ) : null}\n      <ChatMessages\n        messages={messages}\n        input={input}\n        isLoading={isLoading}\n        startTime={startTime}\n      />\n      <ChatInput\n        sync={sync}\n        input={input}\n        setInput={setInput}\n        stop={stop}\n        append={append}\n        isLoading={isLoading}\n      />\n    </Card>\n  );\n};\n\nexport default ChatCard;\n","import Flex from '../Flex';\nimport ChatCard from './ChatCard';\nimport { ChatProviderType, ChatType, ConversationType } from './ChatModel';\nimport { ConversationQuery } from './__generated__/ConversationQuery.graphql';\nimport { useDynamicList } from 'ahooks';\nimport { Card, Skeleton } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport { map } from 'lodash';\nimport { Suspense, useId } from 'react';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatView: css`\n    overflow: auto;\n    height: calc(100vh - 240px);\n  `,\n  skeleton: css`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  chatCard: css`\n    flex: 1;\n    overflow: 'hidden';\n  `,\n  conversation: css`\n    overflow: hidden;\n  `,\n}));\n\nexport type ConversationProps = {\n  conversation: ConversationType;\n  provider: ChatProviderType;\n};\n\nfunction useSelectedEndpoint(endpointId?: string) {\n  const { endpoint, endpoint_list } = useLazyLoadQuery<ConversationQuery>(\n    graphql`\n      query ConversationQuery(\n        $endpointId: UUID!\n        $isEmptyEndpointId: Boolean!\n      ) {\n        endpoint(endpoint_id: $endpointId)\n          @skipOnClient(if: $isEmptyEndpointId)\n          @catch {\n          endpoint_id\n          ...ChatCard_endpoint\n        }\n        endpoint_list(limit: 1, offset: 0) {\n          items {\n            endpoint_id\n            ...ChatCard_endpoint\n          }\n        }\n      }\n    `,\n    {\n      endpointId: endpointId || '',\n      isEmptyEndpointId: !endpointId,\n    },\n  );\n\n  return (endpoint.ok ? endpoint.value : endpoint_list?.items?.[0]) ?? null;\n}\n\nfunction createNewChat(\n  id: string,\n  conversationId: string,\n  provider: ChatProviderType,\n) {\n  return {\n    id,\n    conversationId,\n    label: 'Chat',\n    sync: true,\n    provider,\n  };\n}\n\nexport const Conversation: React.FC<ConversationProps> = ({\n  conversation,\n  provider,\n}) => {\n  const selectedEndpoint = useSelectedEndpoint(provider.endpointId);\n  const chat = createNewChat(useId(), conversation.id, provider);\n  const { list, remove, push } = useDynamicList<ChatType>([chat]);\n  const { styles } = useStyles();\n  return (\n    <Flex\n      className={styles.conversation}\n      direction=\"column\"\n      align=\"stretch\"\n      gap={'xs'}\n    >\n      <Flex\n        className={styles.chatView}\n        gap={'xs'}\n        direction=\"row\"\n        align=\"stretch\"\n      >\n        {map(list, (chat, index) => (\n          <Suspense\n            fallback={\n              <Card className={styles.skeleton} bordered>\n                <Skeleton active />\n              </Card>\n            }\n            key={index}\n          >\n            <ChatCard\n              className={styles.chatCard}\n              selectedEndpoint={selectedEndpoint}\n              chat={chat}\n              fetchOnClient\n              onRequestClose={() => remove(index)}\n              onCreateNewChat={() => {\n                push(\n                  createNewChat(\n                    list.length.toString(),\n                    conversation.id,\n                    provider,\n                  ),\n                );\n              }}\n              closable={list.length > 1}\n              key={index}\n            />\n          </Suspense>\n        ))}\n      </Flex>\n    </Flex>\n  );\n};\n","import BAICard from '../components/BAICard';\nimport {\n  ChatProviderType,\n  ConversationType,\n} from '../components/Chat/ChatModel';\nimport { Conversation } from '../components/Chat/Conversation';\nimport { t } from 'i18next';\nimport React, { useId } from 'react';\nimport { StringParam, useQueryParams } from 'use-query-params';\n\nconst ChatPageStyle = {\n  body: {\n    overflow: 'hidden',\n  },\n};\n\ntype ChatPageProps = {};\n\nconst ChatPage: React.FC<ChatPageProps> = () => {\n  const [{ endpointId, modelId, agentId }] = useQueryParams({\n    endpointId: StringParam,\n    agentId: StringParam,\n    modelId: StringParam,\n  });\n\n  const conversation: ConversationType = {\n    id: useId(),\n    label: t('webui.menu.Chat'),\n    chats: [],\n  };\n\n  const provider: ChatProviderType = {\n    basePath: 'v1',\n    agentId: agentId ?? undefined,\n    endpointId: endpointId ?? undefined,\n    modelId: modelId ?? undefined,\n  };\n\n  return (\n    <BAICard title={t('webui.menu.Chat')} styles={ChatPageStyle}>\n      <Conversation conversation={conversation} provider={provider} />\n    </BAICard>\n  );\n};\n\nexport default ChatPage;\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","node","v0","v1","v2","v3","v4","v5","hash","v6","v7","v8","v9","v10","v11","v12","v13","FluentEmojiIcon","_ref","name","height","width","icon","fluentEmoji","icons","_jsx","xmlns","viewBox","role","dangerouslySetInnerHTML","__html","body","useAIAgent","_agentsData$agents","key","checkUpdate","useUpdatableState","data","agentsData","isLoading","useTanQuery","queryKey","queryFn","fetch","response","json","staleTime","agents","refresh","useCallback","makeAgentOptions","filter","map","agent","label","meta","title","value","toLocaleLowerCase","includes","loading","selectedAgent","props","token","theme","useToken","controllableValue","setControllableValue","useControllableValue","valuePropName","trigger","defaultValue","searchAgent","setSearchAgent","useState","isSearchPending","startSearchTransition","useTransition","_Fragment","children","_jsxs","Flex","gap","avatar","sizeXL","Select","showSearch","onSearch","v","filterOption","options","onChange","popupMatchSelectWidth","fetchKey","lifecycleStageFilter","selectPropsWithoutLoading","t","useTranslation","baiClient","useSuspendedBackendaiClient","searchStr","setSearchStr","lifecycleStageFilterStr","join","endpoint_list","endpoint","useLazyLoadQuery","_EndpointSelectQuery","require","limit","offset","supports","Boolean","undefined","endpoint_id","skipEndpoint","selectOptions","_","items","item","placeholder","style","fontWeight","option","_$castArray","models","allowCustomModel","selectProps","groupBy","mapValues","ms","m","k","SyncSwitch","sync","onClick","Typography","Text","type","Switch","checked","_ref2","chat","showCompareMenuItem","closable","modelId","setModelId","setEndpoint","setAgent","setSync","onRequestClose","onCreateNewChat","setMessages","webuiNavigate","useWebUINavigate","promisingEndpoint","setPromisingEndpoint","filterEmptyItem","ScaleIcon","EraserIcon","danger","CloseOutlined","experimentalAIAgents","useBAISettingUserState","direction","justify","wrap","minHeight","paddingTop","paddingXS","paddingBottom","align","flexGrow","flexShrink","flexBasis","AIAgentSelect","startTransition","EndpointSelect","ModelSelect","Button","PlusOutlined","Dropdown","menu","preventDefault","MoreOutlined","color","colorTextSecondary","sizeMS","ChatAttachments","dropContainerRef","Attachments","beforeUpload","getDropContainer","current","accept","CloudUploadOutlined","description","autoFocus","openAttachment","onInputChange","onInputSubmit","onInputCancel","onAttachmentChange","onAttachmentOpenChange","senderProps","senderRef","useRef","useEffect","focus","Sender","flex","ref","onSubmit","onCancel","submitType","header","Header","open","isEmpty","onOpenChange","styles","content","padding","info","prefix","Badge","dot","LinkOutlined","synchronizedMessageState","atom","synchronizedAttachmentState","chatSubmitKeyInfoState","input","setInput","stop","append","ChatInputStyle","background","borderTop","borderRadius","paddingContentVertical","isOpenAttachments","setIsOpenAttachments","files","setFiles","cardRef","synchronizedMessage","setSynchronizedMessage","useAtom","synchronizedAttachment","setSynchronizedAttachment","chatSubmitKeyInfo","setChatSubmitKeyInfo","submitId","useId","submitKey","prevSyncRef","isUndefined","inputAttachment","isEqual","chatRequestOptions","experimental_attachments","createDataTransferFiles","handleInputChange","handleInputCancel","handleInputSubmit","setTimeout","Date","toString","handleAttachmentChange","attachment","fileList","handleAttachmentOpenChange","ChatSender","useTokenCount","arguments","length","setNum","async","encode","str","encodeAsync","catch","messages","startTime","inputTokenCount","allChatMessageString","useMemo","message","totalTokenCount","lastAssistantMessageString","lastAssistantMessage","last","lastAssistantTokenCount","tokenPerSecond","now","margin","marginSM","Tag","RocketOutlined","toFixed","copyable","defaultIcon","isCopied","setIsCopied","timeout","clearTimeout","Tooltip","CopyToClipboard","text","onCopy","CheckIcon","CopyIcon","ChatMessageContent","Markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","components","p","whiteSpace","className","rest","match","exec","String","replace","Card","size","extra","CopyButton","CodeBlock","PreTag","language","oneLight","wrapLongLines","wrapLines","X","_ref3","SyntaxHighlighter","React","dayjs","localizedFormat","relativeTime","placement","containerStyle","enableExtraHover","isStreaming","isHovered","setIsHovered","deferredReasoning","useDeferredValue","reasoning","deferredContent","marginLeft","marginRight","onMouseEnter","onMouseLeave","Avatar","fontSize","fontSizeHeading3","index","contentType","border","textAlign","Image","src","url","alt","maxWidth","maxHeight","FileCard","uid","borderColor","colorBorderSecondary","borderWidth","lineWidth","backgroundColor","colorBgContainer","colorBgContainerDisabled","Collapse","marginTop","Spin","fontSizeSM","opacity","transition","transitionDelay","autoScroll","atBottom","lastMessageContent","onScrollToBottom","useEventNotStable","ArrowDownIcon","shape","virtuosoRef","setAtBottom","overscan","window","innerHeight","Virtuoso","atBottomStateChange","atBottomThreshold","computeItemKey","followOutput","initialTopMostItemIndex","itemContent","ChatMessage","paddingLeft","paddingMD","paddingRight","Compact","position","right","transform","bottom","ScrollBottomHandlerButton","virtuoso","scrollToIndex","behavior","ChatMessageList","memo","VirtualChatMessageList","prevProps","nextProps","equal","ChatTokenCounter","PureChatTokenCounter","CustomModelForm","baseURL","alert","formRef","themeToken","paddingSM","paddingContentHorizontalLG","display","Form","layout","requiredMark","initialValues","marginBottom","Item","rules","required","Input","CustomModelAlert","Alert","showIcon","action","ReloadOutlined","useStyles","createStyles","css","chatCard","colorFillQuaternary","actions","paddingContentHorizontal","ChatHeader","PureChatHeader","prev","next","ChatInput","PureChatInput","_endpoint$url2","_formRef$current","_formRef$current2","_formRef$current3","_agent$id","selectedEndpoint","fetchOnClient","chatCardStyle","alertStyle","chatCardStyles","updateFetchKey","setStartTime","endpointKey","useFragment","_ChatCard_endpoint","useEndpoint","provider","modelsResult","useSuspenseTanQuery","_endpoint$url","URL","basePath","res","selectedModelId","_modelsResult$data$0$","_modelsResult$data","_modelsResult$data$","useModels","find","a","agentId","useAgents","providerSettings","getFieldValue","apiKey","error","useChat","api","credentials","experimental_throttle","init","_agent$config$system_","JSON","parse","createOpenAI","result","streamText","abortSignal","signal","model","wrapLanguageModel","middleware","extractReasoningMiddleware","tagName","system","config","system_prompt","toDataStreamResponse","sendReasoning","bordered","classNames","ChatMessages","chatView","skeleton","conversation","createNewChat","conversationId","Conversation","endpointId","_endpoint_list$items","_ConversationQuery","isEmptyEndpointId","ok","useSelectedEndpoint","list","remove","push","useDynamicList","Suspense","fallback","Skeleton","active","ChatCard","ChatPageStyle","overflow","ChatPage","useQueryParams","StringParam","chats","BAICard"],"sourceRoot":""}