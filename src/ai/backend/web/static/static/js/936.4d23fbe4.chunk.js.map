{"version":3,"file":"static/js/936.4d23fbe4.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/__generated__/DomainSelectorQuery.graphql.ts","components/__generated__/ProjectSelectorQuery.graphql.ts","components/__generated__/QuotaScopeCardFragment.graphql.ts","components/__generated__/QuotaScopeCardUnsetMutation.graphql.ts","components/__generated__/QuotaSettingModalFragment.graphql.ts","components/__generated__/QuotaSettingModalSetMutation.graphql.ts","components/__generated__/StorageHostResourcePanelFragment.graphql.ts","components/__generated__/StorageHostSettingsPanelQuery.graphql.ts","components/__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql.ts","components/__generated__/UserSelectorQuery.graphql.ts","helper/index.tsx","hooks/index.ts","components/StorageHostResourcePanel.tsx","components/DomainSelector.tsx","components/ProjectSelector.tsx","components/QuotaScopeCard.tsx","components/QuotaSettingModal.tsx","components/UserSelector.tsx","components/StorageHostSettingsPanel.tsx","pages/StorageHostSettingPage.tsx","pages/__generated__/StorageHostSettingPageQuery.graphql.ts"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  },\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === 'skipOnClient' &&\n      directive.argumentName === 'if'\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === 'true')\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, '');\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            '',\n          ),\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith('$') &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, 'g');\n        query = query.replace(pattern, '');\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || '',\n    variables,\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  //@ts-ignore\n  const result = await globalThis.backendaiclient?._wrapWithPromise(\n    reqInfo,\n    false,\n    null,\n    10000,\n    0,\n  );\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { ConfigProvider } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (path: string) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path: string) => {\n        dispatchEvent('moveTo', { path });\n      },\n    };\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <StyleProvider container={shadowRoot} cache={cache}>\n                      <Suspense fallback=\"\">\n                        <BrowserRouter>\n                          <RoutingEventHandler />\n                          {children}\n                        </BrowserRouter>\n                      </Suspense>\n                    </StyleProvider>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","/**\n * @generated SignedSource<<6ad571f958b08687b3fc333087b06e3d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type DomainSelectorQuery$variables = {};\nexport type DomainSelectorQuery$data = {\n  readonly domains: ReadonlyArray<{\n    readonly name: string | null;\n  } | null> | null;\n};\nexport type DomainSelectorQuery = {\n  response: DomainSelectorQuery$data;\n  variables: DomainSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Domain\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"domains\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": \"domains(is_active:true)\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"9df762094b74dc3eb8079edfcc73765f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DomainSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query DomainSelectorQuery {\\n  domains(is_active: true) {\\n    name\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c14d362fa40cf9a3cef5d1d71202cc5f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7501221e296c4d009f39d135d79c2589>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ProjectSelectorQuery$variables = {\n  domain_name?: string | null;\n};\nexport type ProjectSelectorQuery$data = {\n  readonly projects: ReadonlyArray<{\n    readonly id: any | null;\n    readonly is_active: boolean | null;\n    readonly name: string | null;\n    readonly resource_policy: string | null;\n  } | null> | null;\n};\nexport type ProjectSelectorQuery = {\n  response: ProjectSelectorQuery$data;\n  variables: ProjectSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domain_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": \"projects\",\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"domain_name\",\n        \"variableName\": \"domain_name\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Group\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"groups\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"is_active\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"resource_policy\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"eecad68ff1a08d753ce22ff2c5136c26\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectSelectorQuery(\\n  $domain_name: String\\n) {\\n  projects: groups(domain_name: $domain_name, is_active: true) {\\n    id\\n    is_active\\n    name\\n    resource_policy\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"2845b31197571f750613f64207ded239\";\n\nexport default node;\n","/**\n * @generated SignedSource<<fa8655d02b2a4ba957bcfae08413c711>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaScopeCardFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n    readonly usage_bytes: any | null;\n  };\n  readonly id: string;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n  readonly \" $fragmentType\": \"QuotaScopeCardFragment\";\n};\nexport type QuotaScopeCardFragment$key = {\n  readonly \" $data\"?: QuotaScopeCardFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaScopeCardFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"usage_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"QuotaSettingModalFragment\"\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"78fe420c92ce5b9c8d5c133d1f9c389f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c9ef98a65aa188713d0d68772c0d71d0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeCardUnsetMutation$variables = {\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaScopeCardUnsetMutation$data = {\n  readonly unset_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: string;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaScopeCardUnsetMutation = {\n  response: QuotaScopeCardUnsetMutation$data;\n  variables: QuotaScopeCardUnsetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"quota_scope_id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"storage_host_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"UnsetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"unset_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"338836966362b14e823520f40fa56a73\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaScopeCardUnsetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n) {\\n  unset_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"272001cc642518fb66015dcc367b9f65\";\n\nexport default node;\n","/**\n * @generated SignedSource<<74b0722713082f1859b11fb47fd59383>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaSettingModalFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n  };\n  readonly id: string;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentType\": \"QuotaSettingModalFragment\";\n};\nexport type QuotaSettingModalFragment$key = {\n  readonly \" $data\"?: QuotaSettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaSettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1c5ad8315a2d78cb376e7436dc6a8627\";\n\nexport default node;\n","/**\n * @generated SignedSource<<6333e8d3a5761c3d9dfece0047077e91>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeInput = {\n  hard_limit_bytes?: any | null;\n};\nexport type QuotaSettingModalSetMutation$variables = {\n  props: QuotaScopeInput;\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaSettingModalSetMutation$data = {\n  readonly set_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: string;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaSettingModalSetMutation = {\n  response: QuotaSettingModalSetMutation$data;\n  variables: QuotaSettingModalSetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"SetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"set_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"d337cab9be9523bfde2bfb7d6bed595b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaSettingModalSetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $props: QuotaScopeInput!\\n) {\\n  set_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name, props: $props) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e8509b3174920c1dd917ece91d41161\";\n\nexport default node;\n","/**\n * @generated SignedSource<<43d4063d6d35b79d500b74f0832dea56>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostResourcePanelFragment$data = {\n  readonly backend: string | null;\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly path: string | null;\n  readonly usage: any | null;\n  readonly \" $fragmentType\": \"StorageHostResourcePanelFragment\";\n};\nexport type StorageHostResourcePanelFragment$key = {\n  readonly \" $data\"?: StorageHostResourcePanelFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostResourcePanelFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"backend\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"path\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"30a1b4101eeb2fae45385780dbc0ddcc\";\n\nexport default node;\n","/**\n * @generated SignedSource<<cc5385d4435185bd015bd7a7fc10a82a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanelQuery$variables = {\n  quota_scope_id: string;\n  skipQuotaScope: boolean;\n  storage_host_name: string;\n};\nexport type StorageHostSettingsPanelQuery$data = {\n  readonly quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\" | \"QuotaSettingModalFragment\">;\n  } | null;\n};\nexport type StorageHostSettingsPanelQuery = {\n  response: StorageHostSettingsPanelQuery$data;\n  variables: StorageHostSettingsPanelQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipQuotaScope\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"quota_scope_id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"storage_host_name\",\n    \"variableName\": \"storage_host_name\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaSettingModalFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaScopeCardFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"quota_scope_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"storage_host_name\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"QuotaDetails\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"details\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hard_limit_bytes\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"usage_bytes\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"378699d92e64ba9559bfbe8e533d6c6a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingsPanelQuery(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $skipQuotaScope: Boolean!\\n) {\\n  quota_scope(storage_host_name: $storage_host_name, quota_scope_id: $quota_scope_id) @skip(if: $skipQuotaScope) {\\n    ...QuotaSettingModalFragment\\n    ...QuotaScopeCardFragment\\n    id\\n  }\\n}\\n\\nfragment QuotaScopeCardFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n    usage_bytes\\n  }\\n  ...QuotaSettingModalFragment\\n}\\n\\nfragment QuotaSettingModalFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"ef16372a7f5bf0c1844a65d4b63fe4d9\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7acd4325686b832afcb8cccb2a539ff6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$data = {\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly \" $fragmentType\": \"StorageHostSettingsPanel_storageVolumeFrgmt\";\n};\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$key = {\n  readonly \" $data\"?: StorageHostSettingsPanel_storageVolumeFrgmt$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"2f9e5e6060806e6f9265e5cbbd325afe\";\n\nexport default node;\n","/**\n * @generated SignedSource<<bf0b4cbded1569190cc46f94e0dca86c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserSelectorQuery$variables = {\n  filter?: string | null;\n  limit: number;\n  offset: number;\n};\nexport type UserSelectorQuery$data = {\n  readonly user_list: {\n    readonly items: ReadonlyArray<{\n      readonly email: string | null;\n      readonly id: string | null;\n      readonly is_active: boolean | null;\n      readonly resource_policy: string | null;\n    } | null>;\n  } | null;\n};\nexport type UserSelectorQuery = {\n  response: UserSelectorQuery$data;\n  variables: UserSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"filter\",\n        \"variableName\": \"filter\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"limit\",\n        \"variableName\": \"limit\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"offset\",\n        \"variableName\": \"offset\"\n      }\n    ],\n    \"concreteType\": \"UserList\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_list\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"items\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"is_active\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"resource_policy\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f552e13a727e58f49a7a7e49a466d4d2\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSelectorQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $filter: String\\n) {\\n  user_list(limit: $limit, offset: $offset, filter: $filter, is_active: true) {\\n    items {\\n      id\\n      is_active\\n      email\\n      resource_policy\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"323d93fb2d8eb4ee2d1d3677121f9ad2\";\n\nexport default node;\n","import { useSuspendedBackendaiClient } from '../hooks';\n\nexport const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/,\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client?.newSignedRequest(method, url, body, null);\n  return client?._wrapWithPromise(request);\n};\n\nexport const useBaiSignedRequestWithPromise = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return ({\n    method,\n    url,\n    body = null,\n  }: {\n    method: string;\n    url: string;\n    body?: any;\n  }) =>\n    baiSignedRequestWithPromise({\n      method,\n      url,\n      body,\n      client: baiClient,\n    });\n};\n\n/**\n * Convert file size with binary unit to human readable unit and value\n *\n * @param {number} bytes\n * @param {number} decimalPoint decimal point set to 2 as a default\n * @return {string} converted file size to human readable value\n */\nexport const humanReadableDecimalSize = (bytes = 0, decimalPoint = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = Math.pow(10, 3);\n  decimalPoint = decimalPoint < 0 ? 0 : decimalPoint;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  let i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) + ' ' + sizes[i]\n  );\n};\n\nexport const humanReadableBinarySize = (\n  bytes = 0,\n  decimalPoint = 2,\n  compact = false,\n) => {\n  if (!bytes) return 0;\n  if (typeof bytes === 'string') bytes = parseInt(bytes);\n  const k = Math.pow(2, 10);\n  let i;\n  let unitList;\n  decimalPoint = decimalPoint < 0 || compact ? 0 : decimalPoint;\n  i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  if (compact) {\n    unitList = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei'];\n  } else {\n    unitList = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB'];\n  }\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) +\n    ' ' +\n    unitList[i]\n  );\n};\n\nexport function bytesToBinarySize(\n  bytes: number,\n  targetUnit?: 'Bytes' | 'KiB' | 'MiB' | 'GiB' | 'TiB' | 'PiB' | 'EiB',\n): {\n  number: number;\n  unit: string;\n} {\n  const sizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB'];\n  if (bytes === 0)\n    return {\n      number: 0,\n      unit: 'Bytes',\n    };\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return {\n    number: parseFloat((bytes / Math.pow(1024, i)).toFixed(2)),\n    unit: sizes[i],\n  };\n}\n\n/**\n * Change date of any type to human readable date time.\n *\n * @param {Date} d   - string or DateTime object to convert\n * @return {Date}   - Formatted date / time to be human-readable text.\n */\nexport const _humanReadableTime = (date: string) => {\n  return new Date(date).toUTCString();\n};\n\nexport const GBToBytes = (value = 0) => {\n  const gigabyte = Math.pow(10, 9);\n  return Math.round(gigabyte * value);\n};\n\nexport const bytesToGB = (\n  bytes: number,\n  decimalPoint = 2,\n  nullStr: string = '-',\n) => {\n  if (bytes === null || bytes === undefined) return nullStr;\n  if (!bytes) return bytes;\n  return (bytes / 10 ** 9).toFixed(decimalPoint);\n};\n\nexport function iSizeToSize(\n  size: string,\n  targetSizeUnit?: string,\n  fixed: number = 2,\n): {\n  number: number;\n  numberFixed: string;\n  unit: string;\n  numberUnit: string;\n} {\n  const sizes = ['B', 'K', 'M', 'G', 'T', 'P', 'E'];\n  const sizeUnit = size.slice(-1).toUpperCase();\n  const sizeValue = parseFloat(size.slice(0, -1));\n  const sizeIndex = sizes.indexOf(sizeUnit);\n  if (sizeIndex === -1 || isNaN(sizeValue)) {\n    throw new Error('Invalid size format');\n  }\n  const bytes = sizeValue * Math.pow(1024, sizeIndex);\n  const targetIndex = targetSizeUnit\n    ? sizes.indexOf(targetSizeUnit.toUpperCase())\n    : sizeIndex;\n  const targetBytes = bytes / Math.pow(1024, targetIndex);\n  const numberFixed = targetBytes.toFixed(fixed);\n  return {\n    number: targetBytes,\n    numberFixed,\n    unit: sizes[targetIndex],\n    numberUnit: `${numberFixed}${sizes[targetIndex]}`,\n  };\n}\n\nexport type QuotaScopeType = 'project' | 'user';\nexport const addQuotaScopeTypePrefix = (type: QuotaScopeType, str: string) => {\n  if (str === '' || str === undefined) return '';\n  if (str.startsWith(`${type}:`)) return str;\n  return `${type}:${str}`;\n};\n\nexport const usageIndicatorColor = (percentage: number) => {\n  return percentage < 70\n    ? 'rgba(58, 178, 97, 1)'\n    : percentage < 90\n    ? 'rgb(223, 179, 23)'\n    : '#ef5350';\n};\n\nexport const maskString = (\n  value = '',\n  maskChar = '*',\n  startFrom = 0,\n  maskLength = 0,\n) => {\n  // clamp mask length\n  maskLength =\n    startFrom + maskLength > value.length ? value.length : maskLength;\n  return (\n    value.substring(0, startFrom) +\n    maskChar.repeat(maskLength) +\n    value.substring(startFrom + maskLength, value.length)\n  );\n};\n\nexport const offset_to_cursor = (offset: number): string => {\n  return window.btoa(`arrayconnection:${offset}`);\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { useQuery } from 'react-query';\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener('backend-ai-connected', listener);\n    return () => {\n      document.removeEventListener('backend-ai-connected', listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener('backend-ai-group-changed', listener);\n    return () => {\n      document.removeEventListener('backend-ai-group-changed', listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      '',\n      '',\n      api_endpoint,\n      'SESSION',\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, 'Backend.AI Console.');\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: 'backendai-client-for-suspense',\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === 'undefined' ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener('backend-ai-connected', listener);\n          };\n          document.addEventListener('backend-ai-connected', listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: 'backendai-metadata-for-suspense',\n    queryFn: () => {\n      return fetch('resources/image_metadata.json')\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          },\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: '',\n        tags: [],\n      };\n    }\n    const specs = imageName.split('/');\n\n    const [key, tag] = (specs[2] || specs[1]).split(':');\n    const tags = tag.split('-');\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = 'resources/icons/') => {\n        if (!imageName) return 'default.png';\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key]?.icon !== undefined\n            ? metadata?.imageInfo[key]?.icon\n            : 'default.png')\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n","import { humanReadableDecimalSize, usageIndicatorColor } from '../helper/index';\nimport { StorageHostResourcePanelFragment$key } from './__generated__/StorageHostResourcePanelFragment.graphql';\nimport { Progress, Descriptions, Typography, Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst StorageHostResourcePanel: React.FC<{\n  storageVolumeFrgmt: StorageHostResourcePanelFragment$key | null;\n}> = ({ storageVolumeFrgmt: resourceFrgmt }) => {\n  const { t } = useTranslation();\n\n  const resource = useFragment(\n    graphql`\n      fragment StorageHostResourcePanelFragment on StorageVolume {\n        id\n        backend\n        capabilities\n        path\n        usage\n      }\n    `,\n    resourceFrgmt,\n  );\n\n  const parsedUsage = JSON.parse(resource?.usage || '{}');\n  const usedBytes = parsedUsage?.used_bytes;\n  const capacityBytes = parsedUsage?.capacity_bytes;\n  const usageRatio = capacityBytes > 0 ? usedBytes / capacityBytes : 0;\n  const storageUsage = {\n    used_bytes: usedBytes,\n    capacity_bytes: capacityBytes,\n    percent: Number((usageRatio * 100).toFixed(1)),\n  };\n\n  return (\n    <Descriptions size=\"small\" bordered column={3}>\n      <Descriptions.Item label={t('storageHost.Usage')} span={3}>\n        {storageUsage?.percent < 100 ? (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            strokeColor={usageIndicatorColor(storageUsage?.percent)}\n          ></Progress>\n        ) : (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            status=\"exception\"\n          ></Progress>\n        )}\n        <Typography.Text type=\"secondary\">\n          {t('storageHost.Used')}:{' '}\n        </Typography.Text>\n        {humanReadableDecimalSize(storageUsage?.used_bytes)}\n        <Typography.Text type=\"secondary\">{' / '}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {t('storageHost.Total')}:{' '}\n        </Typography.Text>\n        {humanReadableDecimalSize(storageUsage?.capacity_bytes)}\n      </Descriptions.Item>\n      <Descriptions.Item label={t('agent.Endpoint')}>\n        {resource?.path}\n      </Descriptions.Item>\n      <Descriptions.Item label={t('agent.BackendType')}>\n        {resource?.backend}\n      </Descriptions.Item>\n      <Descriptions.Item label={t('agent.Capabilities')}>\n        {_.map(resource?.capabilities, (cap) => (\n          <Tag key={cap}>{cap}</Tag>\n        ))}\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default StorageHostResourcePanel;\n","import { DomainSelectorQuery } from './__generated__/DomainSelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends SelectProps {\n  onSelectDomain?: (project: any) => void;\n}\nconst DomainSelector: React.FC<Props> = ({\n  onSelectDomain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { domains } = useLazyLoadQuery<DomainSelectorQuery>(\n    graphql`\n      query DomainSelectorQuery {\n        domains(is_active: true) {\n          name\n        }\n      }\n    `,\n    {},\n    {\n      fetchPolicy: 'store-and-network',\n    },\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectDomain?.(option);\n      }}\n      placeholder={t('storageHost.quotaSettings.SelectDomain')}\n      {...selectProps}\n    >\n      {_.map(domains, (domain) => {\n        return (\n          <Select.Option key={domain?.name} domainName={domain?.name}>\n            {domain?.name}\n          </Select.Option>\n        );\n      })}\n      ;\n    </Select>\n  );\n};\n\nexport default DomainSelector;\n","import { ProjectSelectorQuery } from './__generated__/ProjectSelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends SelectProps {\n  onSelectProject?: (project: any) => void;\n  domain: string;\n}\n\nconst ProjectSelector: React.FC<Props> = ({\n  onSelectProject,\n  domain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { projects } = useLazyLoadQuery<ProjectSelectorQuery>(\n    graphql`\n      query ProjectSelectorQuery($domain_name: String) {\n        projects: groups(domain_name: $domain_name, is_active: true) {\n          id\n          is_active\n          name\n          resource_policy\n        }\n      }\n    `,\n    {\n      domain_name: domain,\n    },\n    {\n      fetchPolicy: 'store-and-network',\n    },\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectProject?.(option);\n      }}\n      placeholder={t('storageHost.quotaSettings.SelectProject')}\n      {...selectProps}\n    >\n      {_.map(projects, (project) => {\n        return (\n          <Select.Option\n            key={project?.id}\n            projectId={project?.id}\n            projectResourcePolicy={project?.resource_policy}\n          >\n            {project?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default ProjectSelector;\n","import { bytesToGB } from '../helper/index';\nimport Flex from './Flex';\nimport { QuotaScopeCardFragment$key } from './__generated__/QuotaScopeCardFragment.graphql';\nimport { QuotaScopeCardUnsetMutation } from './__generated__/QuotaScopeCardUnsetMutation.graphql';\nimport { EditFilled, PlusOutlined, CloseOutlined } from '@ant-design/icons';\nimport {\n  CardProps,\n  Table,\n  Button,\n  Popconfirm,\n  message,\n  Empty,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ninterface Props extends CardProps {\n  quotaScopeFrgmt: QuotaScopeCardFragment$key | null;\n  showAddButtonWhenEmpty: boolean;\n  onClickEdit: () => void;\n}\nconst QuotaScopeCard: React.FC<Props> = ({\n  quotaScopeFrgmt,\n  showAddButtonWhenEmpty,\n  onClickEdit,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const quota_scope = useFragment(\n    graphql`\n      fragment QuotaScopeCardFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n          usage_bytes\n        }\n        ...QuotaSettingModalFragment\n      }\n    `,\n    quotaScopeFrgmt,\n  );\n\n  const [commitUnsetQuotaScope, isInFlightCommitUnsetQuotaScope] =\n    useMutation<QuotaScopeCardUnsetMutation>(graphql`\n      mutation QuotaScopeCardUnsetMutation(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n      ) {\n        unset_quota_scope(\n          quota_scope_id: $quota_scope_id\n          storage_host_name: $storage_host_name\n        ) {\n          quota_scope {\n            id\n            quota_scope_id\n            storage_host_name\n            details {\n              hard_limit_bytes\n            }\n          }\n        }\n      }\n    `);\n\n  const selectProjectOrUserFirst = (\n    <Empty\n      style={{ width: '100%' }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={<div>{t('storageHost.quotaSettings.SelectFirst')}</div>}\n    />\n  );\n\n  const addQuotaConfigsWhenEmpty = (\n    <Empty\n      style={{ width: '100%' }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={\n        <>\n          <div style={{ margin: 10 }}>\n            {t('storageHost.quotaSettings.ClickSettingButton')}\n          </div>\n          <Button\n            icon={<PlusOutlined />}\n            onClick={() => onClickEdit && onClickEdit()}\n          >\n            {t('storageHost.quotaSettings.AddQuotaConfigs')}\n          </Button>\n        </>\n      }\n    />\n  );\n\n  return (\n    <Table\n      bordered\n      rowKey=\"id\"\n      columns={[\n        {\n          title: t('storageHost.quotaSettings.QuotaScopeId'),\n          dataIndex: 'quota_scope_id',\n          key: 'quota_scope_id',\n          render: (value) => <code>{value}</code>,\n        },\n        {\n          title: t('storageHost.HardLimit') + ' (GB)',\n          dataIndex: ['details', 'hard_limit_bytes'],\n          key: 'hard_limit_bytes',\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t('storageHost.Usage') + ' (GB)',\n          dataIndex: ['details', 'usage_bytes'],\n          key: 'usage_bytes',\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t('general.Control'),\n          key: 'control',\n          render: () => (\n            <Flex gap={token.marginSM}>\n              <Button\n                icon={<EditFilled />}\n                onClick={() => onClickEdit && onClickEdit()}\n              >\n                {t('button.Edit')}\n              </Button>\n              <Popconfirm\n                title={t('storageHost.quotaSettings.UnsetCustomSettings')}\n                description={t(\n                  'storageHost.quotaSettings.ConfirmUnsetCustomQuota',\n                )}\n                placement=\"bottom\"\n                onConfirm={() => {\n                  if (quota_scope) {\n                    commitUnsetQuotaScope({\n                      variables: {\n                        quota_scope_id: quota_scope.quota_scope_id,\n                        storage_host_name: quota_scope.storage_host_name,\n                      },\n                      onCompleted() {\n                        message.success(\n                          t(\n                            'storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated',\n                          ),\n                        );\n                      },\n                      onError(error) {\n                        message.error(error?.message);\n                      },\n                    });\n                  }\n                }}\n              >\n                <Button\n                  loading={isInFlightCommitUnsetQuotaScope}\n                  danger\n                  icon={<CloseOutlined />}\n                >\n                  {t('button.Unset')}\n                </Button>\n              </Popconfirm>\n            </Flex>\n          ),\n        },\n      ]}\n      dataSource={quota_scope ? [quota_scope] : []}\n      locale={{\n        emptyText: showAddButtonWhenEmpty\n          ? addQuotaConfigsWhenEmpty\n          : selectProjectOrUserFirst,\n      }}\n      pagination={false}\n    />\n  );\n};\n\nexport default QuotaScopeCard;\n","import { GBToBytes, bytesToGB } from '../helper';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { QuotaSettingModalFragment$key } from './__generated__/QuotaSettingModalFragment.graphql';\nimport { QuotaSettingModalSetMutation } from './__generated__/QuotaSettingModalSetMutation.graphql';\nimport { Form, Input, message } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  quotaScopeFrgmt?: QuotaSettingModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst QuotaSettingModal: React.FC<Props> = ({\n  quotaScopeFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const quotaScope = useFragment(\n    graphql`\n      fragment QuotaSettingModalFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n        }\n      }\n    `,\n    quotaScopeFrgmt,\n  );\n\n  const [commitSetQuotaScope, isInFlightCommitSetQuotaScope] =\n    useMutation<QuotaSettingModalSetMutation>(graphql`\n      mutation QuotaSettingModalSetMutation(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $props: QuotaScopeInput!\n      ) {\n        set_quota_scope(\n          quota_scope_id: $quota_scope_id\n          storage_host_name: $storage_host_name\n          props: $props\n        ) {\n          quota_scope {\n            id\n            quota_scope_id\n            storage_host_name\n            details {\n              hard_limit_bytes\n            }\n          }\n        }\n      }\n    `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      commitSetQuotaScope({\n        variables: {\n          quota_scope_id: quotaScope?.quota_scope_id || '',\n          storage_host_name: quotaScope?.storage_host_name || '',\n          props: {\n            hard_limit_bytes: GBToBytes(values?.hard_limit_bytes),\n          },\n        },\n        onCompleted(response) {\n          if (response?.set_quota_scope?.quota_scope?.id) {\n            message.success(\n              t('storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated'),\n            );\n          } else {\n            message.error(t('dialog.ErrorOccurred'));\n          }\n          onRequestClose();\n        },\n        onError(error) {\n          console.log(error);\n          message.error(error?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      {...baiModalProps}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitSetQuotaScope}\n      onCancel={onRequestClose}\n      title={t('storageHost.quotaSettings.QuotaSettings')}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ marginBottom: 40, marginTop: 20 }}\n      >\n        <Form.Item\n          name=\"hard_limit_bytes\"\n          label={t('storageHost.HardLimit')}\n          initialValue={bytesToGB(quotaScope?.details?.hard_limit_bytes)}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t('storageHost.quotaSettings.AllowNumberAndDot') ||\n                'Allows numbers and .(dot) only',\n            },\n          ]}\n        >\n          <Input\n            addonAfter=\"GB\"\n            type=\"number\"\n            step={0.25}\n            style={{ width: '70%' }}\n          />\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default QuotaSettingModal;\n","import { UserSelectorQuery } from './__generated__/UserSelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends SelectProps {\n  onSelectUser: (user: any) => void;\n}\n\nconst UserSelector: React.FC<Props> = ({ onSelectUser, ...selectProps }) => {\n  const { t } = useTranslation();\n  const [search, setSearch] = useState<string>('');\n  const deferredSearch = useDeferredValue(search);\n  const { user_list } = useLazyLoadQuery<UserSelectorQuery>(\n    graphql`\n      query UserSelectorQuery($limit: Int!, $offset: Int!, $filter: String) {\n        user_list(\n          limit: $limit\n          offset: $offset\n          filter: $filter\n          is_active: true\n        ) {\n          items {\n            id\n            is_active\n            email\n            resource_policy\n          }\n        }\n      }\n    `,\n    {\n      limit: 150,\n      offset: 0,\n      filter:\n        deferredSearch?.length === 0\n          ? null\n          : 'email ilike \"%' + deferredSearch + '%\"',\n    },\n    {\n      fetchPolicy: 'store-and-network',\n    },\n  );\n  return (\n    <Select\n      filterOption={false}\n      searchValue={search}\n      loading={deferredSearch !== search}\n      onSearch={(value) => {\n        setSearch(value);\n      }}\n      onChange={(value) => {\n        onSelectUser(\n          _.find(user_list?.items, (user) => {\n            return user?.email === value;\n          }),\n        );\n      }}\n      showSearch\n      placeholder={t('storageHost.quotaSettings.SelectUser')}\n      options={_.map(user_list?.items, (user) => {\n        return {\n          value: user?.email,\n          label: user?.email,\n        };\n      }).sort((a, b) => (a.value && b.value && a.value > b.value ? 1 : -1))}\n      {...selectProps}\n    />\n  );\n};\n\nexport default UserSelector;\n","import { QuotaScopeType, addQuotaScopeTypePrefix } from '../helper/index';\nimport { useCurrentDomainValue, useUpdatableState } from '../hooks';\nimport DomainSelector from './DomainSelector';\nimport Flex from './Flex';\nimport ProjectSelector from './ProjectSelector';\nimport QuotaScopeCard from './QuotaScopeCard';\nimport QuotaSettingModal from './QuotaSettingModal';\nimport UserSelector from './UserSelector';\nimport { StorageHostSettingsPanelQuery } from './__generated__/StorageHostSettingsPanelQuery.graphql';\nimport { StorageHostSettingsPanel_storageVolumeFrgmt$key } from './__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql';\nimport { useToggle } from 'ahooks';\nimport { Card, Form, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useLazyLoadQuery } from 'react-relay';\n\ninterface StorageHostSettingsPanelProps {\n  extraFetchKey?: string;\n  storageVolumeFrgmt: StorageHostSettingsPanel_storageVolumeFrgmt$key | null;\n}\nconst StorageHostSettingsPanel: React.FC<StorageHostSettingsPanelProps> = ({\n  storageVolumeFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const storageVolume = useFragment(\n    graphql`\n      fragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\n        id\n        capabilities\n      }\n    `,\n    storageVolumeFrgmt,\n  );\n\n  const [isPending, startTransition] = useTransition();\n  const currentDomain = useCurrentDomainValue();\n  const [currentSettingType, setCurrentSettingType] =\n    useState<QuotaScopeType>('user');\n\n  const [selectedDomainName, setSelectedDomainName] =\n    useState<string>(currentDomain);\n  const [selectedProjectId, setSelectedProjectId] = useState<string>();\n  useState<string>();\n  const [selectedUserId, setSelectedUserId] = useState<string>();\n  const [selectedUserEmail, setSelectedUserEmail] = useState<string>();\n  useState<string>();\n\n  const quotaScopeId = addQuotaScopeTypePrefix(\n    currentSettingType,\n    (currentSettingType === 'project' ? selectedProjectId : selectedUserId) ||\n      '',\n  );\n\n  const [isOpenQuotaSettingModal, { toggle: toggleQuotaSettingModal }] =\n    useToggle(false);\n  const [fetchKey] = useUpdatableState('default');\n\n  const { quota_scope } = useLazyLoadQuery<StorageHostSettingsPanelQuery>(\n    graphql`\n      query StorageHostSettingsPanelQuery(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $skipQuotaScope: Boolean!\n      ) {\n        quota_scope(\n          storage_host_name: $storage_host_name\n          quota_scope_id: $quota_scope_id\n        ) @skip(if: $skipQuotaScope) {\n          ...QuotaSettingModalFragment\n          ...QuotaScopeCardFragment\n        }\n      }\n    `,\n    {\n      // quota scope\n      quota_scope_id: quotaScopeId,\n      skipQuotaScope: quotaScopeId === undefined || quotaScopeId === '',\n      storage_host_name: storageVolume?.id || '',\n    },\n    {\n      fetchPolicy: 'network-only',\n      fetchKey: fetchKey,\n    },\n  );\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Card\n        title={t('storageHost.QuotaSettings')}\n        tabList={[\n          {\n            key: 'user',\n            tab: t('storageHost.ForUser'),\n          },\n          {\n            key: 'project',\n            tab: t('storageHost.ForProject'),\n          },\n        ]}\n        activeTabKey={currentSettingType}\n        // eslint-disable-next-line\n        //@ts-ignore\n        onTabChange={(v) => {\n          startTransition(() => {\n            setCurrentSettingType(v as QuotaScopeType);\n          });\n        }}\n      >\n        <Flex justify=\"between\">\n          {currentSettingType === 'project' ? (\n            <Flex style={{ marginBottom: 10 }}>\n              <Form layout=\"inline\">\n                <Form.Item label={t('resourceGroup.Domain')}>\n                  <DomainSelector\n                    style={{ width: '20vw', marginRight: 10 }}\n                    value={selectedDomainName}\n                    onSelectDomain={(domain: any) => {\n                      startTransition(() => {\n                        setSelectedDomainName(domain?.domainName);\n                        setSelectedProjectId(undefined);\n                      });\n                    }}\n                  />\n                </Form.Item>\n                <Form.Item label={t('webui.menu.Project')}>\n                  <ProjectSelector\n                    style={{ width: '20vw' }}\n                    value={selectedProjectId}\n                    disabled={!selectedDomainName}\n                    domain={selectedDomainName || ''}\n                    onSelectProject={(project: any) => {\n                      startTransition(() => {\n                        setSelectedProjectId(project?.projectId);\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Form>\n            </Flex>\n          ) : (\n            <Form layout=\"inline\">\n              <Form.Item label={t('data.User')}>\n                <UserSelector\n                  style={{ width: '30vw', marginBottom: 10 }}\n                  value={selectedUserEmail}\n                  onSelectUser={(user) => {\n                    setSelectedUserEmail(user?.email);\n                    startTransition(() => {\n                      setSelectedUserId(user?.id);\n                    });\n                  }}\n                />\n              </Form.Item>\n            </Form>\n          )}\n        </Flex>\n        <Spin spinning={isPending}>\n          <QuotaScopeCard\n            quotaScopeFrgmt={quota_scope || null}\n            onClickEdit={() => {\n              toggleQuotaSettingModal();\n            }}\n            showAddButtonWhenEmpty={\n              (currentSettingType === 'project' && !!selectedProjectId) ||\n              (currentSettingType === 'user' && !!selectedUserId)\n            }\n          />\n        </Spin>\n        <QuotaSettingModal\n          open={isOpenQuotaSettingModal}\n          quotaScopeFrgmt={quota_scope || null}\n          onRequestClose={() => {\n            toggleQuotaSettingModal();\n          }}\n        />\n      </Card>\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingsPanel;\n","import { useWebComponentInfo } from '../components/DefaultProviders';\nimport Flex from '../components/Flex';\nimport StorageHostResourcePanel from '../components/StorageHostResourcePanel';\nimport StorageHostSettingsPanel from '../components/StorageHostSettingsPanel';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { StorageHostSettingPageQuery } from './__generated__/StorageHostSettingPageQuery.graphql';\nimport { Breadcrumb, Card, Empty, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface StorageHostSettingPageProps {\n  storageHostId: string;\n}\nconst StorageHostSettingPage: React.FC<StorageHostSettingPageProps> = ({\n  storageHostId,\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { moveTo } = useWebComponentInfo();\n  const { t } = useTranslation();\n  const { storage_volume } = useLazyLoadQuery<StorageHostSettingPageQuery>(\n    graphql`\n      query StorageHostSettingPageQuery($id: String) {\n        storage_volume(id: $id) {\n          id\n          capabilities\n          ...StorageHostResourcePanelFragment\n          ...StorageHostSettingsPanel_storageVolumeFrgmt\n        }\n      }\n    `,\n    {\n      id: storageHostId || '',\n    },\n  );\n\n  const isQuotaSupportedStorage =\n    storage_volume?.capabilities?.includes('quota') ?? false;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM, gap: token.margin }}\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: 'Resources',\n            onClick: (e) => {\n              e.preventDefault();\n              moveTo('/agent');\n            },\n            href: '/agent',\n          },\n          {\n            title: 'Storage setting',\n          },\n        ]}\n      ></Breadcrumb>\n      <Typography.Title level={3} style={{ margin: 0 }}>\n        {storageHostId || ''}\n      </Typography.Title>\n      <StorageHostResourcePanel storageVolumeFrgmt={storage_volume || null} />\n      {baiClient.supports('quota-scope') && (\n        <>\n          {isQuotaSupportedStorage ? (\n            <Suspense fallback={<div>loading...</div>}>\n              <StorageHostSettingsPanel\n                storageVolumeFrgmt={storage_volume || null}\n              />\n            </Suspense>\n          ) : (\n            <Card title={t('storageHost.QuotaSettings')}>\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={t('storageHost.QuotaDoesNotSupported')}\n              />\n            </Card>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingPage;\n","/**\n * @generated SignedSource<<283a752f4675b1e3d4fe6f0da7198984>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingPageQuery$variables = {\n  id?: string | null;\n};\nexport type StorageHostSettingPageQuery$data = {\n  readonly storage_volume: {\n    readonly capabilities: ReadonlyArray<string | null> | null;\n    readonly id: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\" | \"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n  } | null;\n};\nexport type StorageHostSettingPageQuery = {\n  response: StorageHostSettingPageQuery$data;\n  variables: StorageHostSettingPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"capabilities\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostResourcePanelFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"backend\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"path\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"821175f86743d9d81be2a55aca371919\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingPageQuery(\\n  $id: String\\n) {\\n  storage_volume(id: $id) {\\n    id\\n    capabilities\\n    ...StorageHostResourcePanelFragment\\n    ...StorageHostSettingsPanel_storageVolumeFrgmt\\n  }\\n}\\n\\nfragment StorageHostResourcePanelFragment on StorageVolume {\\n  id\\n  backend\\n  capabilities\\n  path\\n  usage\\n}\\n\\nfragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\\n  id\\n  capabilities\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"f6e77057e83b0449ef99e8918e794b24\";\n\nexport default node;\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","removeSkipOnClientDirective","query","variables","filteredVariables","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","text","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","document","addEventListener","removeEventListener","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","RelayEnvironmentProvider","environment","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","locale","ko_KR","en_US","theme","StyleProvider","container","Suspense","fallback","BrowserRouter","node","v0","hash","v1","v2","v3","newLineToBrElement","separatorRegExp","undefined","map","line","index","match","baiSignedRequestWithPromise","method","url","_ref$body","body","useBaiSignedRequestWithPromise","baiClient","useSuspendedBackendaiClient","_ref2","_ref2$body","humanReadableDecimalSize","bytes","decimalPoint","k","Math","pow","i","floor","log","round","parseFloat","toFixed","humanReadableBinarySize","compact","parseInt","unitList","GBToBytes","gigabyte","bytesToGB","iSizeToSize","size","targetSizeUnit","fixed","sizes","sizeUnit","slice","toUpperCase","sizeValue","sizeIndex","indexOf","isNaN","Error","targetIndex","targetBytes","numberFixed","number","unit","numberUnit","addQuotaScopeTypePrefix","type","usageIndicatorColor","percentage","maskString","maskChar","startFrom","maskLength","repeat","useUpdatableState","initialValue","_useState3","Date","toISOString","_useState4","setValue","newValue","useDateISOState","useCurrentDomainValue","_config","domainName","useCurrentProjectValue","_useState5","name","current_group","id","groupIds","_useState6","project","_setProject","listener","newProjectName","useAnonymousBackendaiClient","api_endpoint","clientConfig","BackendAIClientConfig","BackendAIClient","useQuery","queryKey","queryFn","Promise","resolve","ready","data","useBackendaiImageMetaData","metadata","fetch","then","response","json","getImageMeta","imageName","key","tags","specs","_split","_split2","getImageAliasName","imageInfo","getImageIcon","_metadata$imageInfo$k","_metadata$imageInfo$k2","icon","getImageTags","getBaseVersion","getBaseImage","resourceFrgmt","storageVolumeFrgmt","t","resource","useFragment","_StorageHostResourcePanelFragment","require","parsedUsage","JSON","parse","usage","usedBytes","used_bytes","capacityBytes","capacity_bytes","storageUsage","percent","Number","Descriptions","bordered","column","Item","label","span","Progress","strokeColor","status","Typography","Text","_","capabilities","cap","Tag","onSelectDomain","selectProps","_objectWithoutProperties","_excluded","domains","useLazyLoadQuery","_DomainSelectorQuery","fetchPolicy","Select","onChange","option","placeholder","domain","Option","onSelectProject","projects","_ProjectSelectorQuery","domain_name","projectId","projectResourcePolicy","resource_policy","quotaScopeFrgmt","showAddButtonWhenEmpty","onClickEdit","token","useToken","quota_scope","_QuotaScopeCardFragment","_useMutation","useMutation","_QuotaScopeCardUnsetMutation","_useMutation2","commitUnsetQuotaScope","isInFlightCommitUnsetQuotaScope","selectProjectOrUserFirst","Empty","style","width","image","PRESENTED_IMAGE_SIMPLE","description","addQuotaConfigsWhenEmpty","margin","Button","PlusOutlined","onClick","Table","rowKey","columns","title","dataIndex","render","Flex","gap","marginSM","EditFilled","Popconfirm","placement","onConfirm","quota_scope_id","storage_host_name","onCompleted","message","success","onError","error","loading","danger","CloseOutlined","dataSource","emptyText","pagination","_quotaScope$details","_ref$quotaScopeFrgmt","onRequestClose","baiModalProps","_Form$useForm","Form","useForm","form","quotaScope","_QuotaSettingModalFragment","_QuotaSettingModalSetMutation","commitSetQuotaScope","isInFlightCommitSetQuotaScope","BAIModal","zIndex","destroyOnClose","onOk","validateFields","values","props","hard_limit_bytes","_response$set_quota_s","_response$set_quota_s2","set_quota_scope","console","confirmLoading","onCancel","preserve","labelCol","wrapperCol","validateTrigger","marginBottom","marginTop","details","rules","Input","addonAfter","step","onSelectUser","search","setSearch","deferredSearch","useDeferredValue","user_list","_UserSelectorQuery","limit","offset","filter","filterOption","searchValue","onSearch","items","user","email","showSearch","options","sort","a","b","storageVolume","_StorageHostSettingsPanel_storageVolumeFrgmt","_useTransition","useTransition","_useTransition2","isPending","startTransition","currentDomain","currentSettingType","setCurrentSettingType","selectedDomainName","setSelectedDomainName","selectedProjectId","setSelectedProjectId","_useState7","_useState8","selectedUserId","setSelectedUserId","_useState9","_useState10","selectedUserEmail","setSelectedUserEmail","quotaScopeId","_useToggle","useToggle","_useToggle2","isOpenQuotaSettingModal","toggleQuotaSettingModal","toggle","_useUpdatableState","fetchKey","_StorageHostSettingsPanelQuery","skipQuotaScope","direction","align","Card","tabList","tab","activeTabKey","onTabChange","v","justify","layout","DomainSelector","marginRight","ProjectSelector","disabled","UserSelector","Spin","spinning","QuotaScopeCard","QuotaSettingModal","open","_storage_volume$capab","_storage_volume$capab2","storageHostId","storage_volume","_StorageHostSettingPageQuery","isQuotaSupportedStorage","includes","Breadcrumb","preventDefault","href","Title","level","StorageHostResourcePanel","supports","StorageHostSettingsPanel"],"sourceRoot":""}