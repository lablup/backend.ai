{"version":3,"file":"static/js/9449.23c49493.chunk.js","mappings":"4QAaO,MAAMA,EAETC,IAA0B,IAAzB,MAAEC,KAAUC,GAAOF,EACtBC,EAAQA,GAAS,GACjB,MAAO,EAAE,kBAAEE,EAAiB,eAAEC,EAAc,SAAEC,KAC5CC,EAAAA,EAAAA,MACF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,OAAQ,CACN,CACEC,MAAOL,EAASF,EAAkBF,IAClCU,MAAO,QAET,CACED,MAAON,EAAeH,GACtBU,MAAO,aAGPT,GACJ,EAuBOU,EAA8CC,IAGpD,IAHqD,MAC1DZ,KACGC,GACJW,EACCZ,EAAQA,GAAS,GACjB,MAAO,EAAE,aAAEa,EAAY,SAAET,KAAcC,EAAAA,EAAAA,MACvC,OAAOS,IAAAA,QAAUV,EAASS,EAAab,KAAW,MAChDM,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACL,MAAM,WAAYT,EAAKe,SACzBZ,EAASS,EAAab,KAE1B,EAMUiB,EAAoDC,IAG1D,IAH2D,MAChElB,KACGC,GACJiB,EACClB,EAAQA,GAAS,GACjB,MAAO,EAAE,gBAAEmB,EAAe,SAAEf,KAAcC,EAAAA,EAAAA,MAC1C,OAAOS,IAAAA,QAAUV,EAASe,EAAgBnB,KAAW,MACnDM,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACL,MAAM,WAAYT,EAAKe,SACzBG,EAAgBnB,IAEpB,EA4DGoB,EAGDC,IAAgB,IAAf,MAAErB,GAAOqB,EAEb,OADArB,EAAQA,GAAS,IAEfsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAP,SAAA,EACEV,EAAAA,EAAAA,KAACR,EAAgC,CAACE,MAAOA,KACzCM,EAAAA,EAAAA,KAACK,EAAa,CAACX,MAAOA,KACtBM,EAAAA,EAAAA,KAACW,EAAgB,CAACjB,MAAOA,MACxB,EAIP,EAAewB,EAAAA,KAAWJ,GAObK,EAAsCC,IAK5C,IAL6C,IAClDC,EAAG,OACHC,EAAM,iBACNC,KACG5B,GACJyB,EACCE,EAASA,GAAU,GACnB,MAAO,EAAE,QAAEE,EAAO,SAAE1B,KAAcC,EAAAA,EAAAA,MAC5B0B,EAAOD,EAAQH,EAAKC,GAC1B,OACEtB,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAP,SACGF,IAAAA,IAAMiB,GAAM,CAACJ,EAAqCK,KACjD,MAAMC,EAA2B,eAAZN,EAAIO,IACnBC,EAAa/B,EAASuB,EAAIO,IAAMP,EAAIS,OAC1C,OAAOtB,IAAAA,QACLqB,GACAE,EAAAA,EAAAA,IAAqBV,EAAIO,IAAMP,EAAIS,SAEnC9B,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAERsB,iBAAkBA,EAClBrB,OAAQ,CACN,CACEC,MAAOL,EAASuB,EAAIO,KACpBxB,MAAOuB,EAAe,OAAS,QAEjC,CACExB,MAAOkB,EAAIS,MACX1B,MAAOuB,EAAe,OAAS,UAT9BN,EAAIO,MAcX5B,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAAeL,MAAOuB,EAAe,OAAS,OAAOjB,UACvDV,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASV,EAAiBb,SACxCmB,GAD8CH,IADzCL,EAAIO,IAKf,KAEF,C,4JCrLP,MAyHA,EAzHqEnC,IAM9D,IAADyC,EAAA,IANgE,KACpEC,EAAI,eACJC,EAAc,QACdC,EAAO,iBACPC,KACGC,GACJ9C,EACC,MAAM+C,GAAUC,EAAAA,EAAAA,QAAqB,OAC/B,EAAEC,IAAMC,EAAAA,EAAAA,OACR,MAAEC,GAAUC,EAAAA,EAAMC,WAWlBC,EAAgBvC,IAAAA,IAAM6B,GAAUW,IACpC,MAA4B,kBAAjBA,EAAOC,MACT,CACL9C,MAAO6C,EAAOC,MACdnB,MAAOtB,IAAAA,SAAWwC,EAAOpB,MAEM,kBAAjBoB,EAAOC,OAAsB,UAAWD,EAAOC,MACxD,CACL9C,OAjB8B+C,EAiBDF,EAAOC,MAhB3B/B,EAAAA,SAAeiC,IAAID,EAAQvD,MAAMe,UAAW0C,IACvD,GAAqB,kBAAVA,EACT,OAAOA,CACT,KAcEtB,MAAOtB,IAAAA,SAAWwC,EAAOpB,MAGpB,CACLzB,WAAOkD,EACPvB,MAAOtB,IAAAA,SAAWwC,EAAOpB,MAvBKsB,KAyBlC,IAGF,OACElD,EAAAA,EAAAA,KAACsD,EAAAA,EAAQ,CACPL,MAAOP,EAAE,sBACTP,KAAMA,EACNoB,gBAAc,EACdC,UAAQ,EACRC,KAAMA,KAAO,IAADC,EACK,QAAfA,EAAAlB,EAAQmB,eAAO,IAAAD,GAAfA,EACIE,iBACDC,MAAM3D,IACLkC,EAAelC,EAAO,IAEvB4D,OAAM,QAAS,EAEpBC,SAAUA,KACR3B,GAAgB,KAEdG,EAAU7B,UAEdM,EAAAA,EAAAA,MAACgD,EAAAA,EAAI,CACHC,IAAKzB,EACL0B,UAAU,EACVC,cAAe,CACbC,mBAAiD,QAA/BlC,EAAE1B,IAAAA,IAAMuC,EAAe,gBAAQ,IAAAb,OAAA,EAA7BA,EAA+BmC,QAChDC,IAAe9D,IAAAA,SAAW8B,EAAkBgC,MAGjDC,OAAO,WAAU7D,SAAA,EAEjBV,EAAAA,EAAAA,KAACgE,EAAAA,EAAKQ,KAAI,CACRC,KAAK,cACLtE,MAAOuC,EAAE,+BACTgC,MAAO,CAAEC,aAAc,GAAIjE,UAE3BV,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CACJC,QAAQ7E,EAAAA,EAAAA,KAAC8E,EAAAA,EAAc,IACvBJ,MAAO,CAAEC,aAAc/B,EAAMmC,UAC7BC,YAAatC,EAAE,gCAGnB1C,EAAAA,EAAAA,KAACgE,EAAAA,EAAKQ,KAAI,CACRS,SAAO,EACPC,aAAcA,CAACC,EAAMC,IAAQD,EAAKE,cAAgBD,EAAIC,YAAY3E,SAEjE4E,IAAwB,IAAvB,cAAEC,GAAeD,EACjB,MAAME,EAAgBD,EAAc,eAChC/E,IAAAA,QAAU+E,EAAc,qBACxBlC,EAEEoC,EAAkBjF,IAAAA,IAAMuC,GAAgB2C,GAC5ClF,IAAAA,QAAUA,IAAAA,SAAWkF,EAAavF,QAAQwF,SACxCH,GAAiB,IAEfE,EACA,IACKA,EACHhB,MAAO,CACLkB,QAAS,WAInB,OACE5F,EAAAA,EAAAA,KAACgE,EAAAA,EAAKQ,KAAI,CACRC,KAAK,qBACLC,MAAO,CACLmB,OAAQ,IACRC,UAAW,QACXpF,UAEFV,EAAAA,EAAAA,KAAC+F,EAAAA,EAASC,MAAK,CACbC,QAASR,EACTf,MAAO,CAAEwB,cAAe,aAEhB,QAKX,C,gDC9Gf,MAAMC,EAAwB,WAC9B,IAAIC,EAAK,CACP,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,QACR,WAAc,OAGlB,MAAO,CACL,oBAAuB,GACvB,KAAQ,WACR,SAAY,KACZ,KAAQ,iCACR,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,SAChB,KAAQ,cACR,KAAQ,SACR,QAAU,EACV,WAAeA,EACf,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,SAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAeA,EACf,WAAc,OAGlB,KAAQ,YACR,YAAe,KAEjB,CA/C8B,GAiD7BD,EAAaE,KAAO,mCAErB,S,gDClDA,MAAMF,EAAyB,WAC/B,IAAIC,EAAK,CACP,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,OAGZE,EAAK,CACH,CACE,KAAQ,WACR,KAAQ,WACR,aAAgB,OAGpBC,EAAK,CACH,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,OAGlBC,EAAK,CACH,CACE,MAAS,KACT,KAASF,EACT,aAAgB,yBAChB,KAAQ,cACR,KAAQ,4BACR,QAAU,EACV,WAAeC,EACf,WAAc,MAEhB,CACE,MAAS,KACT,KAASD,EACT,aAAgB,kBAChB,KAAQ,cACR,KAAQ,qBACR,QAAU,EACV,WAAeC,EACf,WAAc,OAGlB,MAAO,CACL,SAAY,CACV,oBAAwBH,EACxB,KAAQ,WACR,SAAY,KACZ,KAAQ,4CACR,WAAeI,EACf,KAAQ,YACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAwBJ,EACxB,KAAQ,YACR,KAAQ,4CACR,WAAeI,GAEjB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,CAAC,EACb,KAAQ,4CACR,cAAiB,WACjB,KAAQ,kNAGZ,CA/E+B,GAiF9BL,EAAaE,KAAO,mCAErB,S,gDCtEA,MAAMF,EAAyB,WAC/B,IAAIC,EAAK,CACP,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,MAEhBE,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,OACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,iBACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,WACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,eACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,SACR,WAAc,MAEhBC,EAAK,CACH,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,QACR,WAAc,OAGlBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,aAAgB,SAChB,KAAQ,cACR,KAAQ,SACR,QAAU,EACV,WAAeD,EACf,WAAc,MAEhBE,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,yBACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,YACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,kBACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,aAAgB,SAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAeL,EACf,WAAc,MAEhBM,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,UACR,WAAc,MAEhB,MAAO,CACL,SAAY,CACV,oBAAuB,GACvB,KAAQ,WACR,SAAY,KACZ,KAAQ,2BACR,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,YAChB,KAAQ,cACR,KAAQ,oBACR,QAAU,EACV,WAAc,CACXd,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACD,CACE,KAAQ,KACR,KAAQ,iBACR,KAAQ,mCAGZ,WAAc,OAGlB,KAAQ,UACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAuB,GACvB,KAAQ,YACR,KAAQ,2BACR,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,aAAgB,YAChB,KAAQ,cACR,KAAQ,oBACR,QAAU,EACV,WAAc,CACXd,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,GAEH,WAAc,QAIpB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,CAAC,EACb,KAAQ,2BACR,cAAiB,QACjB,KAAQ,6pBAGZ,CAnM+B,GAqM9Bf,EAAaE,KAAO,mCAErB,S,kDCnOO,MAAMc,EAA8BC,IACzC,MAAO9E,EAAkB+E,IAAuBC,EAAAA,EAAAA,GAC9C,oBAAoBF,KAGtB,MAAO,CAAC9E,EAAkB+E,EAAoB,C,wLCHhD,MAiEA,EAjEsE5H,IAI/D,IAJgE,WACrE8H,EAAU,iBACVhG,KACGiG,GACJ/H,EACC,MAAMgI,GAASC,EAAAA,EAAAA,kBAAW,IAAAC,EAAAA,EAAAA,EAAAC,EAAC,OAazBL,IAEK,EAAE,SAAEzH,KAAcC,EAAAA,EAAAA,MAEzB,OACEC,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACC,UAAU,MAAMC,MAAM,QAAQC,IAAK,MAAMtH,SAC5CF,IAAAA,IAAY,OAANiH,QAAM,IAANA,OAAM,EAANA,EAAQhG,MAAOJ,IAAyC,IAAD4G,EAC5D,MAAMtG,EAAenB,IAAAA,SAAWa,EAAIO,IAAK,eAEnCsG,EAAWvG,EAGX,QAHuBsG,EACzBzH,IAAAA,KAAa,OAANiH,QAAM,IAANA,OAAM,EAANA,EAAQnG,OAAQ,CACrBM,IAAK,4CACL,IAAAqG,OAAA,EAFFA,EAEInG,MACJT,EAAIS,MACFD,EAAa/B,EAASuB,EAAIO,IAAMsG,GACtC,OAAO1H,IAAAA,QACLqB,GACAE,EAAAA,EAAAA,IAAqBV,EAAIO,IAAMsG,KAE/BlI,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAERsB,iBAAkBA,EAClBrB,OAAQ,CACN,CACEC,MAAOL,EAASuB,EAAIO,KACpBxB,MAAOuB,EAAe,OAAS6F,EAAepH,OAEhD,CACED,MAAe,OAAR+H,QAAQ,IAARA,EAAAA,EAAY,GACnB9H,MAAOuB,EAAe,OAAS6F,EAAepH,WAG9CoH,GAZCnG,EAAIO,MAeX5B,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAEFL,MAAOuB,EAAe,OAAS6F,EAAepH,MAAMM,SAEnDmB,GAHIR,EAAIO,IAKZ,KAEE,E,2KC7BX,MAgcA,EAhcyDnC,IAAmB,IAAD0I,EAAA,IAAjB,SAAEzH,GAAUjB,EACpE,MAAM,EAAEiD,IAAMC,EAAAA,EAAAA,OACR,MAAEC,GAAUC,EAAAA,EAAMC,YAClB,QAAEsF,GAAYC,EAAAA,EAAIC,SAClBC,GAAYC,EAAAA,EAAAA,MACZC,EACsC,QADdN,EACnB,OAATI,QAAS,IAATA,OAAS,EAATA,EAAWG,SAAS,8BAAsB,IAAAP,GAAAA,GAErCQ,GAA6BC,OAAQC,KAC1CC,EAAAA,EAAAA,MACKC,EAAkBC,IAA0BC,EAAAA,EAAAA,kBAC5CC,EAA6BC,IAClCC,EAAAA,EAAAA,IAAkB,kBACbC,EAAiBC,IAAsBC,EAAAA,EAAAA,aACvCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAA2BC,IAAyBV,EAAAA,EAAAA,kBACpD,EAAE,eAAEpJ,EAAc,cAAE+J,EAAa,aAAErJ,EAAY,SAAET,EAAQ,QAAE0B,KAChEzB,EAAAA,EAAAA,OAEI,kBAAE8J,IAAsBC,EAAAA,EAAAA,uBAAgB,IAAAC,EAAAA,EAAAA,EAAAnC,EAAA,OA2B5C,CAAC,EACD,CACEoC,YACkC,kBAAhCd,EACI,oBACA,eACNe,SAAUf,KAIPgB,GAAsBC,KAC3BC,EAAAA,EAAAA,kBAAW,IAAAC,EAAAA,EAAAA,EAAAzC,EAAA,QAeP0C,IAAsBC,EAAAA,EAAAA,UAC1B,IAAM/J,IAAAA,OAASqJ,GAAoBnK,GAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO8K,kBACpD,CAACX,IAGGY,IAAoBF,EAAAA,EAAAA,UAAQ,IACN,OAAnBD,SAAmB,IAAnBA,QAAmB,EAAnBA,GAAqBnH,KAAKzD,IACxB,CACLgL,UAAWjC,EAAgC,OAAL/I,QAAK,IAALA,OAAK,EAALA,EAAOgL,UAAiB,OAALhL,QAAK,IAALA,OAAK,EAALA,EAAO+E,KAChEkG,UAAUC,EAAAA,EAAAA,IAAiBlL,IAAU,GACrCmL,QAAa,OAALnL,QAAK,IAALA,OAAK,EAALA,EAAOmL,SAAU,GAEzBC,YAAajL,GAAe+K,EAAAA,EAAAA,IAAiBlL,IAAU,IACvDqL,UACO,OAALrL,QAAK,IAALA,GAAAA,EAAO2B,KAAY,OAAL3B,QAAK,IAALA,GAAAA,EAAO+E,KAAOmF,EAAclK,EAAM2B,IAAK3B,EAAM+E,MAAQ,GACrEpD,IACEG,GACO,OAAL9B,QAAK,IAALA,OAAK,EAALA,EAAO2B,MAAO,GACT,OAAL3B,QAAK,IAALA,OAAK,EAALA,EAAO4B,SACJ,GACPK,eAAmB,OAALjC,QAAK,IAALA,IAAAA,EAAO2B,OACoB,IAArC3B,EAAM2B,IAAI2J,QAAQ,cAItBC,cAAexC,EAAgC,OAAL/I,QAAK,IAALA,OAAK,EAALA,EAAOwL,gBAAkB,GACnEzJ,KAAMgH,EAAgC,OAAL/I,QAAK,IAALA,OAAK,EAALA,EAAO+B,KAAO,GAC/C0J,QAAS1C,EAAgC,OAAL/I,QAAK,IAALA,OAAK,EAALA,EAAOyL,QAAU,QAKxD,CAACb,KAEEc,IAAoBb,EAAAA,EAAAA,UAAQ,KAChC,GAAI/J,IAAAA,QAAUgJ,GAAc,OAAOc,GACnC,MAAMe,EAAS,IAAIC,OAAO,GAAG9K,IAAAA,aAAegJ,KAAgB,KAC5D,OAAOhJ,IAAAA,OAAS8J,IAAqB,CAAC5K,EAAO6L,IACpC/K,IAAAA,KAAOd,GAAO,CAACoC,EAAOF,KAC3B,GAAY,OAARA,EAAc,OAAO,EACzB,GAAI,CAAC,SAAU,eAAgB,YAAY+D,SAAS/D,GAClD,OAAOyJ,EAAOG,KAAKhL,IAAAA,SAAWsB,IAChC,MAAM2J,EAAkBhB,GAAkBc,IAAQ,CAAC,EAC7CG,EAAmBL,EAAOG,KAAKC,EAAgBX,aAC/Ca,EAAkBnL,IAAAA,KAAOiL,EAAgBV,WAAYjJ,GACzDuJ,EAAOG,KAAK1J,KAER8J,EAAWpL,IAAAA,KACfiL,EAAgBpK,KACfA,GAAQgK,EAAOG,KAAKnK,EAAIO,MAAQyJ,EAAOG,KAAKnK,EAAIS,SAE7C+J,IAAkBJ,EAAgB9J,cACpC0J,EAAOG,KAAK,cAEVM,EAAiBT,EAAOG,KAAKC,EAAgBf,WAAa,IAC1DqB,EAAgBV,EAAOG,KAAKC,EAAgBd,UAC5CqB,EAAYxL,IAAAA,KAChBiL,EAAgBhK,MACfJ,GACCgK,EAAOG,KAAKnK,EAAIO,MAAQyJ,EAAOG,KAAKnK,EAAIS,SAEtCmK,EAAeZ,EAAOG,KAAKC,EAAgBN,SAAW,IACtDe,EAAcb,EAAOG,KAAKC,EAAgBZ,QAChD,OACEa,GACAC,GACAC,GACAE,GACAD,GACAE,GACAC,GACAC,GACAC,CAAW,KAGf,GACD,CAAC1C,EAAaiB,GAAmBH,KAE9BjI,IAAuC8J,EAAAA,EAAAA,IAAgB,CAC3D,CACElJ,MAAOP,EAAE,6BACTd,IAAK,gBACLwK,OAASC,IACPrM,EAAAA,EAAAA,KAACsM,EAAAA,EAAWC,KAAI,CACdC,SAAU,CACRC,MAAM7B,EAAAA,EAAAA,IAAiByB,IAAQ,IAC/B3L,UAEFV,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,UACnCkK,EAAAA,EAAAA,IAAiByB,IAAQ,OAIhCK,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,KAAcjC,EAAAA,EAAAA,IAAiB+B,IAAI/B,EAAAA,EAAAA,IAAiBgC,IACtEE,MAAOlK,EAAMmK,UAEf,CACE9J,MAAOP,EAAE,wBACTsK,UAAW,WACXpL,IAAK,WACL8K,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,IAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGM,SAAW,OAADL,QAAC,IAADA,OAAC,EAADA,EAAGK,UAChDb,OAASK,IACPzM,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SAAE+L,KAG5C,CACExJ,MAAOP,EAAE,4BACTsK,UAAW,eACXpL,IAAK,eACL8K,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,IAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGO,aAAe,OAADN,QAAC,IAADA,OAAC,EAADA,EAAGM,cACpDd,OAASK,IACPzM,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SAAE+L,KAG5ChE,GAA4B,CAC1BxF,MAAOP,EAAE,yBACTd,IAAK,YACLoL,UAAW,YACXN,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,IAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGjC,UAAY,OAADkC,QAAC,IAADA,OAAC,EAADA,EAAGlC,WACjD0B,OAASK,IACPzM,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SAAE+L,KAG5ChE,GAA4B,CAC1BxF,MAAOP,EAAE,6BACTd,IAAK,kBACLoL,UAAW,kBACXN,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,IAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGzB,gBAAkB,OAAD0B,QAAC,IAADA,OAAC,EAADA,EAAG1B,iBACvDkB,OAASK,IACPzM,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SACnCZ,EAAS2M,MAIhBhE,GAA4B,CAC1BxF,MAAOP,EAAE,uBACTd,IAAK,UACLoL,UAAW,UACXN,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,IAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGxB,QAAU,OAADyB,QAAC,IAADA,OAAC,EAADA,EAAGzB,SAC/CiB,OAASK,IACPzM,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SAAE+L,KAG5ChE,GAA4B,CAC1BxF,MAAOP,EAAE,oBACTd,IAAK,OACLoL,UAAW,OACXZ,OAAQA,CAACK,EAA6CJ,KACpDrM,EAAAA,EAAAA,KAACmN,EAAsB,CACrB5F,WAAY8E,EACZ9K,iBAAkBiI,EAClBrJ,MAAO,OAKZsI,GAA4B,CAC3BxF,MAAOP,EAAE,yBACTd,IAAK,OACLoL,UAAW,OACXN,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,KAAcjC,EAAAA,EAAAA,IAAiB+B,IAAI/B,EAAAA,EAAAA,IAAiBgC,IACtER,OAASK,IACPzM,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SAAE+L,MAG3ChE,GAA4B,CAC3BxF,MAAOP,EAAE,uBACTd,IAAK,cACLoL,UAAW,cACXN,OAAQA,CAACC,EAAGC,KACVC,EAAAA,EAAAA,IACEhN,GAAe+K,EAAAA,EAAAA,IAAiB+B,IAAM,IACtC9M,GAAe+K,EAAAA,EAAAA,IAAiBgC,IAAM,KAE1CR,OAAQA,CAACK,EAAMJ,KACbrM,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SACnCb,GAAe+K,EAAAA,EAAAA,IAAiByB,IAAQ,QAI9C5D,GAA4B,CAC3BxF,MAAOP,EAAE,oBACTd,IAAK,YACLoL,UAAW,YACXN,OAAQA,CAACC,EAAGC,KACVC,EAAAA,EAAAA,IACEtM,GAAaqK,EAAAA,EAAAA,IAAiB+B,IAAM,IACpCpM,GAAaqK,EAAAA,EAAAA,IAAiBgC,IAAM,KAExCR,OAAQA,CAACK,EAAMJ,KACbrM,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SACnCZ,EAASS,GAAaqK,EAAAA,EAAAA,IAAiByB,IAAQ,SAIrD5D,GAA4B,CAC3BxF,MAAOP,EAAE,oBACTd,IAAK,MACLoL,UAAW,MACXN,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,IAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGtL,IAAM,OAADuL,QAAC,IAADA,OAAC,EAADA,EAAGvL,KAC3C+K,OAAQA,CAACK,EAAMJ,KACbrM,EAAAA,EAAAA,KAACmB,EAAAA,GAAS,CACRE,IAAKoL,EACLnL,OAAW,OAAH+K,QAAG,IAAHA,OAAG,EAAHA,EAAK/K,OACbC,iBAAkBiI,KAIxB,CACEvG,MAAOP,EAAE,sBACTsK,UAAW,SACXpL,IAAK,SACL8K,OAAQA,CAACC,EAAGC,KAAMC,EAAAA,EAAAA,IAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG9B,OAAS,OAAD+B,QAAC,IAADA,OAAC,EAADA,EAAG/B,QAC9CuB,OAASK,IACPzM,EAAAA,EAAAA,KAACsM,EAAAA,EAAWC,KAAI,CAACa,SAAU,CAAEC,SAAS,GAAQ3I,MAAO,CAAE4I,SAAU,KAAM5M,UACrEV,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACC,QAASuH,EAAY9I,SAAE+L,OAI9C,CACExJ,MAAOP,EAAE,mBACTd,IAAK,UACL2L,MAAO,QACPnB,OAAQA,CAACK,EAAMJ,KACbrM,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACC,UAAU,MAAMC,MAAM,UAAUyF,QAAQ,SAASxF,IAAI,MAAKtH,UAC9DV,EAAAA,EAAAA,KAACyN,EAAAA,EAAU,CACTxK,MAAOP,EAAE,iCACTgL,YAAahL,EAAE,iCACfiL,OAAO,SACPC,OAAQlL,EAAE,iBACVmL,UAAWA,KACF,OAAHxB,QAAG,IAAHA,GAAAA,EAAKyB,KACPxE,EAAmB+C,EAAIyB,GAAK5E,GAC5BgB,GAAqB,CACnB6D,UAAW,CACTD,GAAIzB,EAAIyB,IAEVE,WAAAA,CAAYC,EAAKC,GAAS,IAADC,EAAAC,EAYrBC,EARAC,EAHF,GACG9N,IAAAA,MAAW,OAAHyN,QAAG,IAAHA,OAAG,EAAHA,EAAKM,qBACV,OAAHN,QAAG,IAAHA,GAAuB,QAApBE,EAAHF,EAAKM,0BAAkB,IAAAJ,GAAvBA,EAAyBK,GAM5B,GACGhO,IAAAA,MAAW,OAAHyN,QAAG,IAAHA,OAAG,EAAHA,EAAKQ,4BACV,OAAHR,QAAG,IAAHA,GAA8B,QAA3BG,EAAHH,EAAKQ,iCAAyB,IAAAL,GAA9BA,EAAgCI,GAMnC,GAAIN,IAAgB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQQ,QAAS,EAA/B,CACE,MAAMC,EAAenO,IAAAA,IACnB0N,GACCU,GAAUA,EAAMxG,UAEnB,IAAK,MAAMwG,KAASD,EAClBvG,EAAQwG,MAAMA,EAAO,IAGzB,MAEA5F,GAAuB,KACrBG,GAAmC,IAErCf,EAAQyG,QACNnM,EAAE,wDAnBF0F,EAAQwG,MAAS,OAAHX,QAAG,IAAHA,GAA8B,QAA3BI,EAAHJ,EAAKQ,iCAAyB,IAAAJ,OAA3B,EAAHA,EAAgCS,UAR9C1G,EAAQwG,MAAS,OAAHX,QAAG,IAAHA,GAAuB,QAApBK,EAAHL,EAAKM,0BAAkB,IAAAD,OAApB,EAAHA,EAAyBQ,IA6B3C,EACAC,OAAAA,CAAQC,GACN5G,EAAQwG,MAAS,OAAHI,QAAG,IAAHA,OAAG,EAAHA,EAAK5G,QACrB,IAEJ,EACA1H,UAEFV,EAAAA,EAAAA,KAACiP,EAAAA,GAAM,CACLC,KAAK,OACLC,MAAMnP,EAAAA,EAAAA,KAACoP,EAAAA,EAAc,IACrBC,QAAM,EACNC,QACEnF,IACAd,KAAuB,OAAHgD,QAAG,IAAHA,OAAG,EAAHA,EAAKyB,IAAK5E,EAEhCqG,SACEpF,IACAd,KAAuB,OAAHgD,QAAG,IAAHA,OAAG,EAAHA,EAAKyB,IAAK5E,YASrC5G,GAAkB+E,KAAuBF,EAAAA,EAAAA,GAC9C,uBAGF,OACEnG,EAAAA,EAAAA,MAAC6G,EAAAA,EAAI,CAACC,UAAU,SAASC,MAAM,UAAUC,IAAK,KAAKtH,SAAA,EACjDM,EAAAA,EAAAA,MAAC6G,EAAAA,EAAI,CAACC,UAAU,SAASC,MAAM,UAASrH,SAAA,EACtCM,EAAAA,EAAAA,MAAC6G,EAAAA,EAAI,CAAC2F,QAAQ,MAAM9I,MAAO,CAAE8K,QAAS5M,EAAM6M,WAAazH,IAAI,KAAItH,SAAA,EAC/DV,EAAAA,EAAAA,KAAC4E,EAAAA,EAAK,CACJ8K,YAAU,EACV7K,QAAQ7E,EAAAA,EAAAA,KAAC8E,EAAAA,EAAc,IACvBE,YAAatC,EAAE,4BACfiN,SAAWC,IACTjG,GAAsB,IAAMF,EAAemG,EAAEC,OAAO/N,QAAO,EAE7D4C,MAAO,CACLoI,MAAO,QAGX9M,EAAAA,EAAAA,KAACiP,EAAAA,GAAM,CACLE,MAAMnP,EAAAA,EAAAA,KAAC8P,EAAAA,EAAc,IACrBR,QAASvG,EACTgH,QAASA,KACP/G,GAAuB,IAAMG,KAAoC,EACjEzI,SAEDgC,EAAE,wBAGP1C,EAAAA,EAAAA,KAACgQ,EAAAA,EAAQ,CACPC,WAAS,EACTX,QAAS5F,EACTrH,QACE7B,IAAAA,OACE6B,IACCW,IACExC,IAAAA,SAAW8B,GAAkB9B,IAAAA,SAAiB,OAANwC,QAAM,IAANA,OAAM,EAANA,EAAQpB,QAGvDsO,YAAYC,EAAAA,EAAAA,IAAmB/E,IAC/BgF,OAAO,KACPC,OAAQ,CAAEC,EAAG,eACbC,YAAY,KAEdvQ,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CACH2F,QAAQ,MACR9I,MAAO,CACL8K,QAAS5M,EAAM4N,YACf9P,UAEFV,EAAAA,EAAAA,KAACiP,EAAAA,GAAM,CACLC,KAAK,OACLC,MAAMnP,EAAAA,EAAAA,KAACyQ,EAAAA,EAAe,IACtBV,QAASA,KACPlH,GAA0B,UAKlC7I,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAwB,CACvBvO,KAAMwG,EACNvG,eAAiBlC,KACT,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQkE,qBACNiD,GACE7G,IAAAA,WACE6B,GAAQc,KAAKH,GAAWxC,IAAAA,SAAWwC,EAAOpB,OACpC,OAAN1B,QAAM,IAANA,OAAM,EAANA,EAAQkE,qBAGdyE,GAA0B,EAE5BxG,QAASA,GACTC,iBAAkBA,OAEf,E,qCCreX,MAAMqO,GAAWC,EAAAA,EAAAA,aAAYC,EAAAA,YAAa,SAsC1C,EApC0BC,KACxB,MAAM,EAAEpO,IAAMC,EAAAA,EAAAA,OACPoO,EAAWC,IAAgBC,EAAAA,EAAAA,eAAc,MAAON,GAEvD,OACE3Q,EAAAA,EAAAA,KAACkR,EAAAA,EAAI,CACHC,aAAcJ,EACdK,YAAaJ,EACbK,QAAS,CACP,CACEzP,IAAK,QACLzB,MAAOuC,EAAE,wBAGb4O,OAAQ,CACNC,KAAM,CACJ/B,QAAS,EACTgC,WAAY,EACZC,SAAU,WAEZ/Q,UAEFV,EAAAA,EAAAA,KAAC0R,EAAAA,SAAQ,CACPC,UACE3R,EAAAA,EAAAA,KAAC4R,EAAAA,EAAqB,CACpBlN,MAAO,CAAEmB,OAAQ,uBACjBgM,SAAS,UAEZnR,SAEc,UAAdqQ,IAAyB/Q,EAAAA,EAAAA,KAAC8R,EAAmB,OAE3C,C","sources":["components/ImageTags.tsx","components/TableColumnsSettingModal.tsx","components/__generated__/AliasedImageDoubleTagsFragment.graphql.ts","components/__generated__/CustomizedImageListForgetAndUntagMutation.graphql.ts","components/__generated__/CustomizedImageListQuery.graphql.ts","hooks/useHiddenColumnKeysSetting.tsx","components/AliasedImageDoubleTags.tsx","components/CustomizedImageList.tsx","pages/MyEnvironmentPage.tsx"],"sourcesContent":["import { preserveDotStartCase } from '../helper';\nimport { useBackendAIImageMetaData } from '../hooks';\nimport DoubleTag, { DoubleTagObjectValue } from './DoubleTag';\nimport Flex from './Flex';\nimport TextHighlighter from './TextHighlighter';\nimport { Tag, TagProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\ninterface ImageAliasNameAndBaseVersionTagsProps\n  extends Omit<DoubleTagObjectValue, 'label'> {\n  image: string | null;\n}\nexport const ImageAliasNameAndBaseVersionTags: React.FC<\n  ImageAliasNameAndBaseVersionTagsProps\n> = ({ image, ...props }) => {\n  image = image || '';\n  const [, { getImageAliasName, getBaseVersion, tagAlias }] =\n    useBackendAIImageMetaData();\n  return (\n    <DoubleTag\n      values={[\n        {\n          label: tagAlias(getImageAliasName(image)),\n          color: 'blue',\n        },\n        {\n          label: getBaseVersion(image),\n          color: 'green',\n        },\n      ]}\n      {...props}\n    />\n  );\n};\n\ninterface BaseVersionTagsProps extends TagProps {\n  image: string | null;\n}\nexport const BaseVersionTags: React.FC<BaseVersionTagsProps> = ({\n  image,\n  ...props\n}) => {\n  image = image || '';\n  const [, { getBaseVersion, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getBaseVersion(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {tagAlias(getBaseVersion(image))}\n    </Tag>\n  );\n};\n\ninterface BaseImageTagsProps extends TagProps {\n  image: string | null;\n}\nexport const BaseImageTags: React.FC<BaseImageTagsProps> = ({\n  image,\n  ...props\n}) => {\n  image = image || '';\n  const [, { getBaseImage, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getBaseImage(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {tagAlias(getBaseImage(image))}\n    </Tag>\n  );\n};\n\ninterface ArchitectureTagsProps extends TagProps {\n  image: string | null;\n}\nexport const ArchitectureTags: React.FC<ArchitectureTagsProps> = ({\n  image,\n  ...props\n}) => {\n  image = image || '';\n  const [, { getArchitecture, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getArchitecture(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {getArchitecture(image)}\n    </Tag>\n  );\n};\n\ninterface LangTagsProps extends TagProps {\n  image: string | null;\n}\nexport const LangTags: React.FC<LangTagsProps> = ({ image, ...props }) => {\n  image = image || '';\n  const [, { getImageLang, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getImageLang(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {tagAlias(getImageLang(image))}\n    </Tag>\n  );\n};\n\ninterface ConstraintTagsProps extends TagProps {\n  tag: string;\n  labels: { key: string; value: string }[];\n  highlightKeyword?: string;\n}\nexport const ConstraintTags: React.FC<ConstraintTagsProps> = ({\n  tag,\n  labels,\n  highlightKeyword,\n  ...props\n}) => {\n  labels = labels || [];\n  const [, { getConstraints }] = useBackendAIImageMetaData();\n  const constraints = getConstraints(tag, labels);\n  return (\n    <Flex direction=\"row\" align=\"start\">\n      {!_.isEmpty(constraints?.[0]) ? (\n        <Tag color=\"blue\" {...props}>\n          <TextHighlighter keyword={highlightKeyword}>\n            {constraints[0]}\n          </TextHighlighter>\n        </Tag>\n      ) : null}\n      {!_.isEmpty(constraints?.[1]) ? (\n        <DoubleTag\n          color=\"cyan\"\n          highlightKeyword={highlightKeyword}\n          values={[\n            {\n              label: 'Customized',\n              color: 'cyan',\n            },\n            {\n              label: constraints[1],\n              color: 'cyan',\n            },\n          ]}\n          {...props}\n        />\n      ) : null}\n    </Flex>\n  );\n};\n\nconst SessionKernelTags: React.FC<{\n  image: string | null;\n  border?: boolean;\n}> = ({ image }) => {\n  image = image || '';\n  return (\n    <>\n      <ImageAliasNameAndBaseVersionTags image={image} />\n      <BaseImageTags image={image} />\n      <ArchitectureTags image={image} />\n    </>\n  );\n};\n\nexport default React.memo(SessionKernelTags);\n\ninterface ImageTagsProps extends TagProps {\n  tag: string;\n  labels: Array<{ key: string; value: string }>;\n  highlightKeyword?: string;\n}\nexport const ImageTags: React.FC<ImageTagsProps> = ({\n  tag,\n  labels,\n  highlightKeyword,\n  ...props\n}) => {\n  labels = labels || [];\n  const [, { getTags, tagAlias }] = useBackendAIImageMetaData();\n  const tags = getTags(tag, labels);\n  return (\n    <>\n      {_.map(tags, (tag: { key: string; value: string }, index) => {\n        const isCustomized = tag.key === 'Customized';\n        const aliasedTag = tagAlias(tag.key + tag.value);\n        return _.isEqual(\n          aliasedTag,\n          preserveDotStartCase(tag.key + tag.value),\n        ) ? (\n          <DoubleTag\n            key={tag.key}\n            highlightKeyword={highlightKeyword}\n            values={[\n              {\n                label: tagAlias(tag.key),\n                color: isCustomized ? 'cyan' : 'blue',\n              },\n              {\n                label: tag.value,\n                color: isCustomized ? 'cyan' : 'blue',\n              },\n            ]}\n          />\n        ) : (\n          <Tag key={tag.key} color={isCustomized ? 'cyan' : 'blue'}>\n            <TextHighlighter keyword={highlightKeyword} key={index}>\n              {aliasedTag}\n            </TextHighlighter>\n          </Tag>\n        );\n      })}\n    </>\n  );\n};\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: Array<string>;\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  hiddenColumnKeys?: Array<string>;\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  hiddenColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = _.map(columns, (column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys: _.map(columnOptions, 'value')?.filter(\n            (columnKey) => !_.includes(hiddenColumnKeys, columnKey),\n          ),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = _.map(columnOptions, (columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","/**\n * @generated SignedSource<<c1c610dd0c0f2aca5aebe87816d8558b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type AliasedImageDoubleTagsFragment$data = {\n  readonly labels: ReadonlyArray<{\n    readonly key: string | null | undefined;\n    readonly value: string | null | undefined;\n  } | null | undefined> | null | undefined;\n  readonly tags: ReadonlyArray<{\n    readonly key: string | null | undefined;\n    readonly value: string | null | undefined;\n  } | null | undefined> | null | undefined;\n  readonly \" $fragmentType\": \"AliasedImageDoubleTagsFragment\";\n};\nexport type AliasedImageDoubleTagsFragment$key = {\n  readonly \" $data\"?: AliasedImageDoubleTagsFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"AliasedImageDoubleTagsFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"key\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"value\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"AliasedImageDoubleTagsFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KVPair\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"labels\",\n      \"plural\": true,\n      \"selections\": (v0/*: any*/),\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KVPair\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"tags\",\n      \"plural\": true,\n      \"selections\": (v0/*: any*/),\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ImageNode\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"2b63bd76dfdb73053e9561282c86cfaf\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7a2f9d1cd57d9fe6b07a51c64a7855e0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type CustomizedImageListForgetAndUntagMutation$variables = {\n  id: string;\n};\nexport type CustomizedImageListForgetAndUntagMutation$data = {\n  readonly forget_image_by_id: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n  readonly untag_image_from_registry: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type CustomizedImageListForgetAndUntagMutation = {\n  response: CustomizedImageListForgetAndUntagMutation$data;\n  variables: CustomizedImageListForgetAndUntagMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"image_id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"ok\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"msg\",\n    \"storageKey\": null\n  }\n],\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": (v1/*: any*/),\n    \"concreteType\": \"UntagImageFromRegistry\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"untag_image_from_registry\",\n    \"plural\": false,\n    \"selections\": (v2/*: any*/),\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": (v1/*: any*/),\n    \"concreteType\": \"ForgetImageById\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"forget_image_by_id\",\n    \"plural\": false,\n    \"selections\": (v2/*: any*/),\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"CustomizedImageListForgetAndUntagMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"CustomizedImageListForgetAndUntagMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"3d0221c84a9ba4d0ad6b24db69595451\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"CustomizedImageListForgetAndUntagMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation CustomizedImageListForgetAndUntagMutation(\\n  $id: String!\\n) {\\n  untag_image_from_registry(image_id: $id) {\\n    ok\\n    msg\\n  }\\n  forget_image_by_id(image_id: $id) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"834817943f871e95194a113d786f85a0\";\n\nexport default node;\n","/**\n * @generated SignedSource<<88e3f0edda76eaef9415cf9b5a734f70>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type CustomizedImageListQuery$variables = Record<PropertyKey, never>;\nexport type CustomizedImageListQuery$data = {\n  readonly customized_images: ReadonlyArray<{\n    readonly architecture: string | null | undefined;\n    readonly base_image_name: string | null | undefined;\n    readonly digest: string | null | undefined;\n    readonly humanized_name: string | null | undefined;\n    readonly id: string;\n    readonly labels: ReadonlyArray<{\n      readonly key: string | null | undefined;\n      readonly value: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly name: string | null | undefined;\n    readonly namespace: string | null | undefined;\n    readonly registry: string | null | undefined;\n    readonly supported_accelerators: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly tag: string | null | undefined;\n    readonly tags: ReadonlyArray<{\n      readonly key: string | null | undefined;\n      readonly value: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly version: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"AliasedImageDoubleTagsFragment\">;\n  } | null | undefined> | null | undefined;\n};\nexport type CustomizedImageListQuery = {\n  response: CustomizedImageListQuery$data;\n  variables: CustomizedImageListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"humanized_name\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"tag\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"registry\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"architecture\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"digest\",\n  \"storageKey\": null\n},\nv7 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"key\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"value\",\n    \"storageKey\": null\n  }\n],\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"KVPair\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"labels\",\n  \"plural\": true,\n  \"selections\": (v7/*: any*/),\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"supported_accelerators\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"namespace\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"base_image_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"KVPair\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"tags\",\n  \"plural\": true,\n  \"selections\": (v7/*: any*/),\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"version\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"CustomizedImageListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ImageNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"customized_images\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"AliasedImageDoubleTagsFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"CustomizedImageListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ImageNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"customized_images\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"9d2e928aef36de71b7da3ce796f74e22\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"CustomizedImageListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query CustomizedImageListQuery {\\n  customized_images {\\n    id\\n    name @deprecatedSince(version: \\\"24.12.0\\\")\\n    humanized_name\\n    tag\\n    registry\\n    architecture\\n    digest\\n    labels {\\n      key\\n      value\\n    }\\n    supported_accelerators\\n    namespace @since(version: \\\"24.12.0\\\")\\n    base_image_name @since(version: \\\"24.12.0\\\")\\n    tags @since(version: \\\"24.12.0\\\") {\\n      key\\n      value\\n    }\\n    version @since(version: \\\"24.12.0\\\")\\n    ...AliasedImageDoubleTagsFragment\\n  }\\n}\\n\\nfragment AliasedImageDoubleTagsFragment on ImageNode {\\n  labels {\\n    key\\n    value\\n  }\\n  tags @since(version: \\\"24.12.0\\\") {\\n    key\\n    value\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e0ff40aaf7c9d5c859389b31cd6762a\";\n\nexport default node;\n","import { useBAISettingUserState } from './useBAISetting';\n\ntype KnownSettingName =\n  | 'AgentList'\n  | 'AgentSummaryList'\n  | 'ContainerRegistryList'\n  | 'CustomizedImageList'\n  | 'ErrorLogList'\n  | 'ImageList'\n  | 'KeypairResourcePolicyList'\n  | 'ProjectResourcePolicyList'\n  | 'UserResourcePolicyList'\n  | 'EndpointListPage';\n\nexport const useHiddenColumnKeysSetting = (listName: KnownSettingName) => {\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useBAISettingUserState(\n    `hiddenColumnKeys.${listName}`,\n  );\n\n  return [hiddenColumnKeys, setHiddenColumnKeys] as const;\n};\n","import { preserveDotStartCase } from '../helper';\nimport { useBackendAIImageMetaData } from '../hooks';\nimport DoubleTag, { DoubleTagObjectValue } from './DoubleTag';\nimport Flex from './Flex';\nimport { AliasedImageDoubleTagsFragment$key } from './__generated__/AliasedImageDoubleTagsFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface AliasedImageDoubleTagsProps extends DoubleTagObjectValue {\n  imageFrgmt?: AliasedImageDoubleTagsFragment$key | null;\n  highlightKeyword?: string;\n}\n\nconst AliasedImageDoubleTags: React.FC<AliasedImageDoubleTagsProps> = ({\n  imageFrgmt,\n  highlightKeyword,\n  ...doubleTagProps\n}) => {\n  const images = useFragment(\n    graphql`\n      fragment AliasedImageDoubleTagsFragment on ImageNode {\n        labels {\n          key\n          value\n        }\n        tags @since(version: \"24.12.0\") {\n          key\n          value\n        }\n      }\n    `,\n    imageFrgmt,\n  );\n  const [, { tagAlias }] = useBackendAIImageMetaData();\n\n  return (\n    <Flex direction=\"row\" align=\"start\" gap={'xxs'}>\n      {_.map(images?.tags, (tag: { key: string; value: string }) => {\n        const isCustomized = _.includes(tag.key, 'customized_');\n        // If the tag is customized, we need to find the corresponding label instead of using the tag value (hash).\n        const tagValue = isCustomized\n          ? _.find(images?.labels, {\n              key: 'ai.backend.customized-image.name',\n            })?.value\n          : tag.value;\n        const aliasedTag = tagAlias(tag.key + tagValue);\n        return _.isEqual(\n          aliasedTag,\n          preserveDotStartCase(tag.key + tagValue),\n        ) ? (\n          <DoubleTag\n            key={tag.key}\n            highlightKeyword={highlightKeyword}\n            values={[\n              {\n                label: tagAlias(tag.key),\n                color: isCustomized ? 'cyan' : doubleTagProps.color,\n              },\n              {\n                label: tagValue ?? '',\n                color: isCustomized ? 'cyan' : doubleTagProps.color,\n              },\n            ]}\n            {...doubleTagProps}\n          />\n        ) : (\n          <Tag\n            key={tag.key}\n            color={isCustomized ? 'cyan' : doubleTagProps.color}\n          >\n            {aliasedTag}\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default AliasedImageDoubleTags;\n","import Flex from '../components/Flex';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport {\n  filterEmptyItem,\n  filterNonNullItems,\n  getImageFullName,\n  localeCompare,\n} from '../helper';\nimport {\n  useBackendAIImageMetaData,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\nimport { useHiddenColumnKeysSetting } from '../hooks/useHiddenColumnKeysSetting';\nimport AliasedImageDoubleTags from './AliasedImageDoubleTags';\nimport BAITable from './BAITable';\nimport { ImageTags } from './ImageTags';\nimport TextHighlighter from './TextHighlighter';\nimport { CustomizedImageListForgetAndUntagMutation } from './__generated__/CustomizedImageListForgetAndUntagMutation.graphql';\nimport {\n  CustomizedImageListQuery,\n  CustomizedImageListQuery$data,\n} from './__generated__/CustomizedImageListQuery.graphql';\nimport {\n  DeleteOutlined,\n  ReloadOutlined,\n  SearchOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { App, Button, Input, Popconfirm, theme, Typography } from 'antd';\nimport { AnyObject } from 'antd/es/_util/type';\nimport { ColumnsType, ColumnType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  useMemo,\n  useState,\n  useTransition,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery, useMutation } from 'react-relay';\n\nexport type CommittedImage = NonNullable<\n  CustomizedImageListQuery$data['customized_images']\n>[number];\n\nconst CustomizedImageList: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n  const baiClient = useSuspendedBackendaiClient();\n  const supportExtendedImageInfo =\n    baiClient?.supports('extended-image-info') ?? false;\n\n  const [visibleColumnSettingModal, { toggle: toggleColumnSettingModal }] =\n    useToggle();\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [customizedImageListFetchKey, updateCustomizedImageListFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [inFlightImageId, setInFlightImageId] = useState<string>();\n  const [imageSearch, setImageSearch] = useState('');\n  const [isPendingSearchTransition, startSearchTransition] = useTransition();\n  const [, { getBaseVersion, getBaseImages, getBaseImage, tagAlias, getTags }] =\n    useBackendAIImageMetaData();\n\n  const { customized_images } = useLazyLoadQuery<CustomizedImageListQuery>(\n    graphql`\n      query CustomizedImageListQuery {\n        customized_images {\n          id\n          name @deprecatedSince(version: \"24.12.0\")\n          humanized_name\n          tag\n          registry\n          architecture\n          digest\n          labels {\n            key\n            value\n          }\n          supported_accelerators\n          namespace @since(version: \"24.12.0\")\n          base_image_name @since(version: \"24.12.0\")\n          tags @since(version: \"24.12.0\") {\n            key\n            value\n          }\n          version @since(version: \"24.12.0\")\n          ...AliasedImageDoubleTagsFragment\n        }\n      }\n    `,\n    {},\n    {\n      fetchPolicy:\n        customizedImageListFetchKey === 'initial-fetch'\n          ? 'store-and-network'\n          : 'network-only',\n      fetchKey: customizedImageListFetchKey,\n    },\n  );\n\n  const [commitForgetAndUntag, isInflightForgetAndUntag] =\n    useMutation<CustomizedImageListForgetAndUntagMutation>(graphql`\n      mutation CustomizedImageListForgetAndUntagMutation($id: String!) {\n        untag_image_from_registry(image_id: $id) {\n          ok\n          msg\n        }\n        forget_image_by_id(image_id: $id) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  // Sort images by humanized_name to prevent the image list from jumping around when the images are updated\n  // TODO: after `images` query  supports sort order, we should remove this line\n  const defaultSortedImages = useMemo(\n    () => _.sortBy(customized_images, (image) => image?.humanized_name),\n    [customized_images],\n  );\n\n  const imageFilterValues = useMemo(() => {\n    return defaultSortedImages?.map((image) => {\n      return {\n        namespace: supportExtendedImageInfo ? image?.namespace : image?.name,\n        fullName: getImageFullName(image) || '',\n        digest: image?.digest || '',\n        // ------------ need only before 24.12.0 ------------\n        baseversion: getBaseVersion(getImageFullName(image) || ''),\n        baseimage:\n          image?.tag && image?.name ? getBaseImages(image.tag, image.name) : [],\n        tag:\n          getTags(\n            image?.tag || '',\n            image?.labels as Array<{ key: string; value: string }>,\n          ) || [],\n        isCustomized: image?.tag\n          ? image.tag.indexOf('customized') !== -1\n          : false,\n        // -------------------------------------------------\n        // ------------ need only after 24.12.0 ------------\n        baseImageName: supportExtendedImageInfo ? image?.base_image_name : '',\n        tags: supportExtendedImageInfo ? image?.tags : [],\n        version: supportExtendedImageInfo ? image?.version : '',\n        // -------------------------------------------------\n      };\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultSortedImages]);\n\n  const filteredImageData = useMemo(() => {\n    if (_.isEmpty(imageSearch)) return defaultSortedImages;\n    const regExp = new RegExp(`${_.escapeRegExp(imageSearch)}`, 'i');\n    return _.filter(defaultSortedImages, (image, idx) => {\n      return _.some(image, (value, key) => {\n        if (key === 'id') return false;\n        if (['digest', 'architecture', 'registry'].includes(key))\n          return regExp.test(_.toString(value));\n        const curFilterValues = imageFilterValues[idx] || {};\n        const baseVersionMatch = regExp.test(curFilterValues.baseversion);\n        const baseImagesMatch = _.some(curFilterValues.baseimage, (value) =>\n          regExp.test(value),\n        );\n        const tagMatch = _.some(\n          curFilterValues.tag,\n          (tag) => regExp.test(tag.key) || regExp.test(tag.value),\n        );\n        const customizedMatch = curFilterValues.isCustomized\n          ? regExp.test('customized')\n          : false;\n        const namespaceMatch = regExp.test(curFilterValues.namespace || '');\n        const fullNameMatch = regExp.test(curFilterValues.fullName);\n        const tagsMatch = _.some(\n          curFilterValues.tags,\n          (tag: { key: string; value: string }) =>\n            regExp.test(tag.key) || regExp.test(tag.value),\n        );\n        const versionMatch = regExp.test(curFilterValues.version || '');\n        const digestMatch = regExp.test(curFilterValues.digest);\n        return (\n          baseVersionMatch ||\n          baseImagesMatch ||\n          tagMatch ||\n          namespaceMatch ||\n          customizedMatch ||\n          fullNameMatch ||\n          tagsMatch ||\n          versionMatch ||\n          digestMatch\n        );\n      });\n    });\n  }, [imageSearch, imageFilterValues, defaultSortedImages]);\n\n  const columns: ColumnsType<CommittedImage> = filterEmptyItem([\n    {\n      title: t('environment.FullImagePath'),\n      key: 'fullImagePath',\n      render: (row) => (\n        <Typography.Text\n          copyable={{\n            text: getImageFullName(row) || '',\n          }}\n        >\n          <TextHighlighter keyword={imageSearch}>\n            {getImageFullName(row) || ''}\n          </TextHighlighter>\n        </Typography.Text>\n      ),\n      sorter: (a, b) => localeCompare(getImageFullName(a), getImageFullName(b)),\n      width: token.screenXS,\n    },\n    {\n      title: t('environment.Registry'),\n      dataIndex: 'registry',\n      key: 'registry',\n      sorter: (a, b) => localeCompare(a?.registry, b?.registry),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    {\n      title: t('environment.Architecture'),\n      dataIndex: 'architecture',\n      key: 'architecture',\n      sorter: (a, b) => localeCompare(a?.architecture, b?.architecture),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Namespace'),\n      key: 'namespace',\n      dataIndex: 'namespace',\n      sorter: (a, b) => localeCompare(a?.namespace, b?.namespace),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.BaseImageName'),\n      key: 'base_image_name',\n      dataIndex: 'base_image_name',\n      sorter: (a, b) => localeCompare(a?.base_image_name, b?.base_image_name),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>\n          {tagAlias(text)}\n        </TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Version'),\n      key: 'version',\n      dataIndex: 'version',\n      sorter: (a, b) => localeCompare(a?.version, b?.version),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Tags'),\n      key: 'tags',\n      dataIndex: 'tags',\n      render: (text: Array<{ key: string; value: string }>, row) => (\n        <AliasedImageDoubleTags\n          imageFrgmt={row}\n          highlightKeyword={imageSearch}\n          label={''}\n        />\n      ),\n    },\n\n    !supportExtendedImageInfo && {\n      title: t('environment.Namespace'),\n      key: 'name',\n      dataIndex: 'name',\n      sorter: (a, b) => localeCompare(getImageFullName(a), getImageFullName(b)),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Version'),\n      key: 'baseversion',\n      dataIndex: 'baseversion',\n      sorter: (a, b) =>\n        localeCompare(\n          getBaseVersion(getImageFullName(a) || ''),\n          getBaseVersion(getImageFullName(b) || ''),\n        ),\n      render: (text, row) => (\n        <TextHighlighter keyword={imageSearch}>\n          {getBaseVersion(getImageFullName(row) || '')}\n        </TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Base'),\n      key: 'baseimage',\n      dataIndex: 'baseimage',\n      sorter: (a, b) =>\n        localeCompare(\n          getBaseImage(getImageFullName(a) || ''),\n          getBaseImage(getImageFullName(b) || ''),\n        ),\n      render: (text, row) => (\n        <TextHighlighter keyword={imageSearch}>\n          {tagAlias(getBaseImage(getImageFullName(row) || ''))}\n        </TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Tags'),\n      key: 'tag',\n      dataIndex: 'tag',\n      sorter: (a, b) => localeCompare(a?.tag, b?.tag),\n      render: (text, row) => (\n        <ImageTags\n          tag={text}\n          labels={row?.labels as Array<{ key: string; value: string }>}\n          highlightKeyword={imageSearch}\n        />\n      ),\n    },\n    {\n      title: t('environment.Digest'),\n      dataIndex: 'digest',\n      key: 'digest',\n      sorter: (a, b) => localeCompare(a?.digest, b?.digest),\n      render: (text) => (\n        <Typography.Text ellipsis={{ tooltip: true }} style={{ maxWidth: 200 }}>\n          <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n        </Typography.Text>\n      ),\n    },\n    {\n      title: t('general.Control'),\n      key: 'control',\n      fixed: 'right',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\" justify=\"center\" gap=\"xxs\">\n          <Popconfirm\n            title={t('dialog.ask.DoYouWantToProceed')}\n            description={t('dialog.warning.CannotBeUndone')}\n            okType=\"danger\"\n            okText={t('button.Delete')}\n            onConfirm={() => {\n              if (row?.id) {\n                setInFlightImageId(row.id + customizedImageListFetchKey);\n                commitForgetAndUntag({\n                  variables: {\n                    id: row.id,\n                  },\n                  onCompleted(res, errors) {\n                    if (\n                      !_.isNil(res?.forget_image_by_id) &&\n                      !res?.forget_image_by_id?.ok\n                    ) {\n                      message.error(res?.forget_image_by_id?.msg);\n                      return;\n                    }\n\n                    if (\n                      !_.isNil(res?.untag_image_from_registry) &&\n                      !res?.untag_image_from_registry?.ok\n                    ) {\n                      message.error(res?.untag_image_from_registry?.msg);\n                      return;\n                    }\n\n                    if (errors && errors?.length > 0) {\n                      const errorMsgList = _.map(\n                        errors,\n                        (error) => error.message,\n                      );\n                      for (const error of errorMsgList) {\n                        message.error(error, 2.5);\n                      }\n                      return;\n                    }\n\n                    startRefetchTransition(() => {\n                      updateCustomizedImageListFetchKey();\n                    });\n                    message.success(\n                      t('environment.CustomizedImageSuccessfullyDeleted'),\n                    );\n                  },\n                  onError(err) {\n                    message.error(err?.message);\n                  },\n                });\n              }\n            }}\n          >\n            <Button\n              type=\"text\"\n              icon={<DeleteOutlined />}\n              danger\n              loading={\n                isInflightForgetAndUntag &&\n                inFlightImageId === row?.id + customizedImageListFetchKey\n              }\n              disabled={\n                isInflightForgetAndUntag &&\n                inFlightImageId !== row?.id + customizedImageListFetchKey\n              }\n            />\n          </Popconfirm>\n        </Flex>\n      ),\n    },\n  ]);\n\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useHiddenColumnKeysSetting(\n    'CustomizedImageList',\n  );\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\" gap={'xs'}>\n      <Flex direction=\"column\" align=\"stretch\">\n        <Flex justify=\"end\" style={{ padding: token.paddingSM }} gap=\"xs\">\n          <Input\n            allowClear\n            prefix={<SearchOutlined />}\n            placeholder={t('environment.SearchImages')}\n            onChange={(e) => {\n              startSearchTransition(() => setImageSearch(e.target.value));\n            }}\n            style={{\n              width: 200,\n            }}\n          />\n          <Button\n            icon={<ReloadOutlined />}\n            loading={isRefetchPending}\n            onClick={() => {\n              startRefetchTransition(() => updateCustomizedImageListFetchKey());\n            }}\n          >\n            {t('button.Refresh')}\n          </Button>\n        </Flex>\n        <BAITable\n          resizable\n          loading={isPendingSearchTransition}\n          columns={\n            _.filter(\n              columns,\n              (column) =>\n                !_.includes(hiddenColumnKeys, _.toString(column?.key)),\n            ) as ColumnType<AnyObject>[]\n          }\n          dataSource={filterNonNullItems(filteredImageData)}\n          rowKey=\"id\"\n          scroll={{ x: 'max-content' }}\n          pagination={false}\n        />\n        <Flex\n          justify=\"end\"\n          style={{\n            padding: token.paddingXXS,\n          }}\n        >\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            onClick={() => {\n              toggleColumnSettingModal();\n            }}\n          />\n        </Flex>\n      </Flex>\n      <TableColumnsSettingModal\n        open={visibleColumnSettingModal}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setHiddenColumnKeys(\n              _.difference(\n                columns.map((column) => _.toString(column.key)),\n                values?.selectedColumnKeys,\n              ),\n            );\n          toggleColumnSettingModal();\n        }}\n        columns={columns}\n        hiddenColumnKeys={hiddenColumnKeys}\n      />\n    </Flex>\n  );\n};\n\nexport default CustomizedImageList;\n","import CustomizedImageList from '../components/CustomizedImageList';\nimport FlexActivityIndicator from '../components/FlexActivityIndicator';\nimport Card from 'antd/es/card/Card';\nimport { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StringParam, useQueryParam, withDefault } from 'use-query-params';\n\nconst tabParam = withDefault(StringParam, 'image');\n\nconst MyEnvironmentPage = () => {\n  const { t } = useTranslation();\n  const [curTabKey, setCurTabKey] = useQueryParam('tab', tabParam);\n\n  return (\n    <Card\n      activeTabKey={curTabKey}\n      onTabChange={setCurTabKey}\n      tabList={[\n        {\n          key: 'image',\n          label: t('environment.Images'),\n        },\n      ]}\n      styles={{\n        body: {\n          padding: 0,\n          paddingTop: 1,\n          overflow: 'hidden',\n        },\n      }}\n    >\n      <Suspense\n        fallback={\n          <FlexActivityIndicator\n            style={{ height: 'calc(100vh - 145px)' }}\n            spinSize=\"large\"\n          />\n        }\n      >\n        {curTabKey === 'image' && <CustomizedImageList />}\n      </Suspense>\n    </Card>\n  );\n};\n\nexport default MyEnvironmentPage;\n"],"names":["ImageAliasNameAndBaseVersionTags","_ref","image","props","getImageAliasName","getBaseVersion","tagAlias","useBackendAIImageMetaData","_jsx","DoubleTag","values","label","color","BaseImageTags","_ref3","getBaseImage","_","Tag","children","ArchitectureTags","_ref4","getArchitecture","SessionKernelTags","_ref7","_jsxs","_Fragment","React","ImageTags","_ref8","tag","labels","highlightKeyword","getTags","tags","index","isCustomized","key","aliasedTag","value","preserveDotStartCase","TextHighlighter","keyword","_$map","open","onRequestClose","columns","hiddenColumnKeys","modalProps","formRef","useRef","t","useTranslation","token","theme","useToken","columnOptions","column","title","element","map","child","undefined","BAIModal","destroyOnClose","centered","onOk","_formRef$current","current","validateFields","then","catch","onCancel","Form","ref","preserve","initialValues","selectedColumnKeys","filter","columnKey","layout","Item","name","style","marginBottom","Input","prefix","SearchOutlined","marginSM","placeholder","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","columnOption","includes","display","height","overflowY","Checkbox","Group","options","flexDirection","node","v0","hash","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","useHiddenColumnKeysSetting","listName","setHiddenColumnKeys","useBAISettingUserState","imageFrgmt","doubleTagProps","images","useFragment","_AliasedImageDoubleTagsFragment","require","Flex","direction","align","gap","_$find","tagValue","_baiClient$supports","message","App","useApp","baiClient","useSuspendedBackendaiClient","supportExtendedImageInfo","supports","visibleColumnSettingModal","toggle","toggleColumnSettingModal","useToggle","isRefetchPending","startRefetchTransition","useTransition","customizedImageListFetchKey","updateCustomizedImageListFetchKey","useUpdatableState","inFlightImageId","setInFlightImageId","useState","imageSearch","setImageSearch","isPendingSearchTransition","startSearchTransition","getBaseImages","customized_images","useLazyLoadQuery","_CustomizedImageListQuery","fetchPolicy","fetchKey","commitForgetAndUntag","isInflightForgetAndUntag","useMutation","_CustomizedImageListForgetAndUntagMutation","defaultSortedImages","useMemo","humanized_name","imageFilterValues","namespace","fullName","getImageFullName","digest","baseversion","baseimage","indexOf","baseImageName","base_image_name","version","filteredImageData","regExp","RegExp","idx","test","curFilterValues","baseVersionMatch","baseImagesMatch","tagMatch","customizedMatch","namespaceMatch","fullNameMatch","tagsMatch","versionMatch","digestMatch","filterEmptyItem","render","row","Typography","Text","copyable","text","sorter","a","b","localeCompare","width","screenXS","dataIndex","registry","architecture","AliasedImageDoubleTags","ellipsis","tooltip","maxWidth","fixed","justify","Popconfirm","description","okType","okText","onConfirm","id","variables","onCompleted","res","errors","_res$forget_image_by_","_res$untag_image_from","_res$untag_image_from2","_res$forget_image_by_2","forget_image_by_id","ok","untag_image_from_registry","length","errorMsgList","error","success","msg","onError","err","Button","type","icon","DeleteOutlined","danger","loading","disabled","padding","paddingSM","allowClear","onChange","e","target","ReloadOutlined","onClick","BAITable","resizable","dataSource","filterNonNullItems","rowKey","scroll","x","pagination","paddingXXS","SettingOutlined","TableColumnsSettingModal","tabParam","withDefault","StringParam","MyEnvironmentPage","curTabKey","setCurTabKey","useQueryParam","Card","activeTabKey","onTabChange","tabList","styles","body","paddingTop","overflow","Suspense","fallback","FlexActivityIndicator","spinSize","CustomizedImageList"],"sourceRoot":""}