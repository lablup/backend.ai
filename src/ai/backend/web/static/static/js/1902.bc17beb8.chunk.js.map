{"version":3,"file":"static/js/1902.bc17beb8.chunk.js","mappings":"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","sources":["components/BAICard.tsx","components/Chat/__generated__/EndpointLLMChatCard_endpoint.graphql.ts","components/__generated__/EndpointSelectQuery.graphql.ts","components/EndpointSelect.tsx","hooks/useTokenizer.ts","components/Chat/ChatSender.tsx","components/Chat/ModelSelect.tsx","components/Chat/CopyButton.tsx","components/Chat/ChatMessageContent.tsx","components/Chat/ChatMessage.tsx","components/Chat/ScrollBottomHandlerButton.tsx","components/Chat/VirtualChatMessageList.tsx","components/Chat/LLMChatCard.tsx","components/Chat/EndpointLLMChatCard.tsx","pages/ChatPage.tsx","pages/__generated__/ChatPageQuery.graphql.ts"],"sourcesContent":["import { CloseCircleTwoTone, WarningTwoTone } from '@ant-design/icons';\nimport { Button, Card, CardProps, theme } from 'antd';\nimport _ from 'lodash';\nimport React, { ReactNode } from 'react';\n\nexport interface BAICardProps extends CardProps {\n  status?: 'success' | 'error' | 'warning' | 'default';\n  extraButtonTitle?: string | ReactNode;\n  showDivider?: boolean;\n  onClickExtraButton?: () => void;\n  ref?: React.LegacyRef<HTMLDivElement> | undefined;\n}\n\nconst BAICard: React.FC<BAICardProps> = ({\n  status = 'default',\n  extraButtonTitle,\n  onClickExtraButton,\n  extra,\n  style,\n  styles,\n  showDivider,\n  ...cardProps\n}) => {\n  const { token } = theme.useToken();\n  const _extra =\n    extra ||\n    (extraButtonTitle && (\n      <Button\n        type=\"link\"\n        icon={\n          status === 'error' ? (\n            <CloseCircleTwoTone twoToneColor={token.colorError} />\n          ) : status === 'warning' ? (\n            <WarningTwoTone twoToneColor={token.colorWarning} />\n          ) : undefined\n        }\n        onClick={onClickExtraButton}\n      >\n        {extraButtonTitle}\n      </Button>\n    )) ||\n    undefined;\n  return (\n    <Card\n      className={status === 'error' ? 'bai-card-error' : ''}\n      style={_.extend(style, {\n        borderColor:\n          status === 'error'\n            ? token.colorError\n            : status === 'warning'\n              ? token.colorWarning\n              : status === 'success'\n                ? token.colorSuccess\n                : style?.borderColor, // default\n      })}\n      styles={_.merge(\n        showDivider\n          ? {}\n          : {\n              header: {\n                borderBottom: 'none',\n              },\n              body: {\n                paddingTop: token.marginXS,\n              },\n            },\n        styles,\n      )}\n      extra={_extra}\n      {...cardProps}\n    />\n  );\n};\n\nexport default BAICard;\n","/**\n * @generated SignedSource<<8234055321a793d0c3c681ede81be380>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointLLMChatCard_endpoint$data = {\n  readonly endpoint_id: string | null | undefined;\n  readonly url: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointLLMChatCard_endpoint\";\n};\nexport type EndpointLLMChatCard_endpoint$key = {\n  readonly \" $data\"?: EndpointLLMChatCard_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointLLMChatCard_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"url\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"d5fbaab35efda649f9f7847ee51028b6\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b5cb52bf9518bc158683bbbd4337ae75>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointSelectQuery$variables = {\n  endpoint_id: string;\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n  skipEndpoint: boolean;\n};\nexport type EndpointSelectQuery$data = {\n  readonly endpoint: {\n    readonly endpoint_id: string | null | undefined;\n    readonly name: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n  } | null | undefined;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointSelectQuery = {\n  response: EndpointSelectQuery$data;\n  variables: EndpointSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpoint_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipEndpoint\"\n},\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv11 = {\n  \"args\": null,\n  \"kind\": \"FragmentSpread\",\n  \"name\": \"EndpointLLMChatCard_endpoint\"\n},\nv12 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpoint_id\"\n  }\n],\nv13 = [\n  (v8/*: any*/),\n  (v9/*: any*/),\n  (v10/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v3/*: any*/),\n      (v2/*: any*/),\n      (v4/*: any*/),\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v13/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v13/*: any*/),\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"4ed77e0d8d228a82aa36a46316bc28ca\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n  $endpoint_id: UUID!\\n  $skipEndpoint: Boolean!\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      url\\n      ...EndpointLLMChatCard_endpoint\\n      id\\n    }\\n  }\\n  endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\\n    name\\n    endpoint_id\\n    ...EndpointLLMChatCard_endpoint\\n    id\\n  }\\n}\\n\\nfragment EndpointLLMChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"bc98e0b499fc7a18b88e87841f5e6e47\";\n\nexport default node;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport {\n  EndpointSelectQuery,\n  EndpointSelectQuery$data,\n} from './__generated__/EndpointSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useState, useTransition } from 'react';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface EndpointSelectProps extends Omit<SelectProps, 'options'> {\n  fetchKey?: string;\n  lifecycleStageFilter?: LifecycleStage[];\n}\n\nexport type Endpoint = NonNullableItem<\n  EndpointSelectQuery$data['endpoint_list']\n>;\n\ntype LifecycleStage = 'created' | 'destroying' | 'destroyed';\n\nconst EndpointSelect: React.FC<EndpointSelectProps> = ({\n  fetchKey,\n  lifecycleStageFilter = ['created'],\n  loading,\n  ...selectPropsWithoutLoading\n}) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(selectPropsWithoutLoading);\n  const [searchStr, setSearchStr] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  const lifecycleStageFilterStr = lifecycleStageFilter\n    .map((v) => `lifecycle_stage == \"${v}\"`)\n    .join(' | ');\n\n  const { endpoint_list, endpoint } = useLazyLoadQuery<EndpointSelectQuery>(\n    graphql`\n      query EndpointSelectQuery(\n        $offset: Int!\n        $limit: Int!\n        $projectID: UUID\n        $filter: String\n        $endpoint_id: UUID!\n        $skipEndpoint: Boolean!\n      ) {\n        endpoint_list(\n          offset: $offset\n          limit: $limit\n          project: $projectID\n          filter: $filter\n        ) {\n          total_count\n          items {\n            name\n            endpoint_id\n            url\n            ...EndpointLLMChatCard_endpoint\n          }\n        }\n        endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\n          name\n          endpoint_id\n          ...EndpointLLMChatCard_endpoint\n        }\n      }\n    `,\n    {\n      limit: 10,\n      offset: 0,\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? [lifecycleStageFilterStr, searchStr]\n            .filter(Boolean)\n            .map((v) => `(${v})`)\n            .join(' & ')\n        : undefined,\n      endpoint_id: controllableValue,\n      skipEndpoint: !controllableValue,\n    },\n    {\n      fetchKey: fetchKey,\n    },\n  );\n\n  // useEffect(() => {\n  //   if (autoSelectDefault && _.isEmpty(controllableValue)) {\n  //     setControllableValue(\n  //       endpoint_list?.items?.[0]?.endpoint_id,\n  //       endpoint_list?.items?.[0],\n  //     );\n  //   }\n  // }, []);\n\n  const selectOptions = endpoint\n    ? _.map(\n        _.uniqBy(_.concat(endpoint_list?.items, endpoint), 'endpoint_id'),\n        (item) => {\n          return {\n            label: item?.name,\n            value: item?.endpoint_id,\n            endpoint: item,\n          };\n        },\n      )\n    : _.map(endpoint_list?.items, (item) => {\n        return {\n          label: item?.name,\n          value: item?.endpoint_id,\n          endpoint: item,\n        };\n      });\n\n  return (\n    <Select\n      showSearch\n      onSearch={(v) => {\n        startSearchTransition(() => {\n          setSearchStr(v && `name ilike \"%${v}%\"`);\n        });\n      }}\n      filterOption={false}\n      loading={isSearchPending || loading}\n      options={selectOptions}\n      {...selectPropsWithoutLoading}\n      // override value and onChange\n      value={controllableValue}\n      onChange={(v, option) => {\n        setControllableValue(v, _.castArray(option)?.[0].endpoint);\n      }}\n    />\n  );\n};\n\nexport default EndpointSelect;\n","import { startTransition, useEffect, useState } from 'react';\n\nexport const encodeAsync = async (str: string) => {\n  const { encode } = await import('gpt-tokenizer');\n\n  return encode(str).length;\n};\n\nexport const useTokenCount = (input: string = '') => {\n  const [value, setNum] = useState(0);\n\n  useEffect(() => {\n    startTransition(() => {\n      encodeAsync(input)\n        .then(setNum)\n        .catch(() => {\n          setNum(input.length);\n        });\n    });\n  }, [input]);\n\n  return value;\n};\n","import { Sender, SenderProps } from '@ant-design/x';\nimport { GetRef } from 'antd';\nimport { useEffect, useRef } from 'react';\n\ninterface ChatSenderProps extends SenderProps {\n  loading?: boolean;\n  autoFocus?: boolean;\n  onStop?: () => void;\n  onSend?: () => void;\n}\nconst ChatSender: React.FC<ChatSenderProps> = ({\n  style,\n  loading,\n  autoFocus,\n  onStop,\n  onSend,\n  ...senderProps\n}) => {\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\n\n  useEffect(() => {\n    if (autoFocus && senderRef.current) {\n      senderRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <Sender\n      ref={senderRef}\n      {...senderProps}\n      loading={loading}\n      onSubmit={() => {\n        onSend?.();\n      }}\n      onCancel={() => {\n        onStop?.();\n      }}\n      submitType=\"enter\"\n    />\n  );\n};\nexport default ChatSender;\n","import { BAIModel } from './LLMChatCard';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModelSelectProps extends SelectProps {\n  models?: Array<BAIModel>;\n  allowCustomModel?: boolean;\n}\n\nconst ModelSelect: React.FC<ModelSelectProps> = ({\n  models,\n  allowCustomModel,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectModel')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      options={_.concat(\n        allowCustomModel\n          ? [\n              {\n                label: 'Custom',\n                // @ts-ignore\n                value: 'custom',\n              },\n            ]\n          : [],\n        _.chain(models)\n          .groupBy('group')\n          .mapValues((ms) =>\n            _.map(ms, (m) => ({\n              label: m.label,\n              value: m.name,\n            })),\n          )\n          .map((v, k) => ({\n            label: k === 'undefined' ? 'Others' : k,\n            options: v,\n          }))\n          .value(),\n      )}\n      popupMatchSelectWidth={false}\n      {...selectProps}\n    />\n  );\n};\n\nexport default ModelSelect;\n","import { Button, ButtonProps, Tooltip } from 'antd';\nimport { CopyConfig } from 'antd/es/typography/Base';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface CopyButtonProps extends ButtonProps {\n  copyable?: Omit<CopyConfig, 'text'> & { text: string };\n  defaultIcon?: React.ReactNode;\n}\nconst CopyButton: React.FC<CopyButtonProps> = ({\n  copyable,\n  defaultIcon,\n  ...props\n}) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = async () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      const timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCopied]);\n\n  return (\n    <Tooltip\n      title={isCopied ? 'Copied!' : 'Copy'}\n      open={isCopied ? true : undefined}\n    >\n      <CopyToClipboard text={copyable?.text || ''} onCopy={handleCopy}>\n        <Button\n          icon={\n            isCopied ? <CheckIcon /> : defaultIcon ? defaultIcon : <CopyIcon />\n          }\n          {...props}\n        />\n      </CopyToClipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyButton;\n","import CopyButton from './CopyButton';\nimport { Card, Typography } from 'antd';\n// `rehype-katex` does not import the CSS file, so we need to import it manually.\nimport 'katex/dist/katex.min.css';\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport {\n  Prism as SyntaxHighlighter,\n  SyntaxHighlighterProps,\n} from 'react-syntax-highlighter';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nconst { Text } = Typography;\n\nconst ChatMessageContent: React.FC<{\n  children?: string;\n}> = ({ children }) => {\n  return (\n    <Markdown\n      remarkPlugins={[remarkGfm, remarkMath]}\n      rehypePlugins={[rehypeKatex]}\n      components={{\n        p({ node, ...props }) {\n          // @ts-ignore\n          return <p {...props} style={{ whiteSpace: 'pre-wrap' }} />;\n        },\n        code(props) {\n          const { children, className, node, ref, ...rest } = props;\n          const match = /language-(\\w+)/.exec(className || '');\n          const content = String(children).replace(/\\n$/, '');\n          return match ? (\n            <Card\n              title={\n                <Text style={{ fontWeight: 'normal' }} type=\"secondary\">\n                  {match[1]}\n                </Text>\n              }\n              type=\"inner\"\n              size=\"small\"\n              extra={\n                <CopyButton\n                  type=\"text\"\n                  copyable={{\n                    text: 's',\n                  }}\n                />\n              }\n              styles={{\n                body: { padding: 0 },\n                header: { margin: 0 },\n              }}\n            >\n              <div style={{ margin: '-0.5em 0', width: '100%' }}>\n                <CodeBlock\n                  ref={ref}\n                  {...rest}\n                  PreTag=\"div\"\n                  language={match[1]}\n                  style={oneLight}\n                  wrapLongLines\n                  wrapLines\n                >\n                  {content}\n                </CodeBlock>\n              </div>\n            </Card>\n          ) : (\n            <code {...rest} className={className}>\n              {/* @ts-ignore */}\n              {children}\n            </code>\n          );\n        },\n      }}\n    >\n      {children}\n    </Markdown>\n  );\n};\n\nconst X: React.FC<SyntaxHighlighterProps> = ({ children, ...props }) => {\n  return <SyntaxHighlighter {...props}>{children}</SyntaxHighlighter>;\n};\nconst CodeBlock = React.memo(X);\n\nexport default React.memo(ChatMessageContent);\n","import Flex from '../Flex';\n// ES 2015\nimport ChatMessageContent from './ChatMessageContent';\nimport { Message } from '@ai-sdk/react';\nimport { Attachments } from '@ant-design/x';\nimport { useThrottle } from 'ahooks';\nimport { Avatar, theme, Image, Collapse, Typography, Spin } from 'antd';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst ChatMessage: React.FC<{\n  message: Message;\n  placement?: 'left' | 'right';\n  extra?: React.ReactNode;\n  enableExtraHover?: boolean;\n  containerStyle?: React.CSSProperties;\n  isStreaming?: boolean;\n  // avatar?:\n}> = ({\n  extra,\n  message,\n  placement = 'left',\n  containerStyle,\n  enableExtraHover,\n  isStreaming,\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const throttledMessageReasoning = useThrottle(message.reasoning, {\n    wait: 50,\n  });\n  const throttledMessageContent = useThrottle(message.content, { wait: 50 });\n\n  return (\n    <Flex\n      direction={placement === 'left' ? 'row' : 'row-reverse'}\n      justify={'start'}\n      align=\"baseline\"\n      style={{\n        marginLeft: placement === 'left' ? '0' : '15%',\n        marginRight: placement === 'right' ? '0' : 20,\n        ...containerStyle,\n      }}\n      gap={'sm'}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {message.role !== 'user' ? (\n        <Avatar\n          // icon={message.role === \"user\" ? \"🧑‍🦰\" : \"🤖\"}\n          icon={'🤖'}\n          style={{ fontSize: token.fontSizeHeading3 }}\n        />\n      ) : null}\n\n      <Flex\n        direction=\"column\"\n        align={placement === 'left' ? 'start' : 'end'}\n        wrap=\"wrap\"\n        style={{ flex: 1 }}\n        gap={'xs'}\n      >\n        {_.map(message.experimental_attachments, (attachment, index) =>\n          _.includes(attachment?.contentType, 'image/') ? (\n            <Flex\n              style={{\n                border: 'none',\n                textAlign: 'end',\n              }}\n              align=\"end\"\n            >\n              <Image\n                key={`${message?.id}-${index}`}\n                src={attachment?.url}\n                alt={attachment?.name}\n                style={{\n                  maxWidth: '50vw',\n                  maxHeight: '12vh',\n                  borderRadius: token.borderRadius,\n                }}\n              />\n            </Flex>\n          ) : (\n            <Attachments.FileCard\n              key={index}\n              item={{\n                uid: `${message?.id}-${index}`,\n                name: attachment?.name || attachment?.url,\n                type: attachment?.contentType,\n                description: attachment?.name,\n                url: attachment?.url,\n              }}\n            />\n          ),\n        )}\n        <Flex\n          align=\"stretch\"\n          direction=\"column\"\n          style={{\n            borderRadius: token.borderRadius,\n            borderColor: token.colorBorderSecondary,\n            borderWidth: token.lineWidth,\n            padding: '1em',\n            paddingTop: 0,\n            paddingBottom: 0,\n            backgroundColor:\n              message.role !== 'user'\n                ? token.colorBgContainer\n                : token.colorBgContainerDisabled,\n            maxWidth: '100%',\n            width: _.trim(message.reasoning) ? '100%' : 'auto',\n          }}\n        >\n          {_.trim(message.reasoning) && (\n            <Collapse\n              style={{\n                marginTop: token.margin,\n                width: '100%',\n              }}\n              items={[\n                {\n                  key: 'reasoning',\n                  label: _.isEmpty(throttledMessageContent) ? (\n                    <Flex gap=\"xs\">\n                      <Typography.Text>{t('chatui.Thinking')}</Typography.Text>\n                      <Spin size=\"small\" />\n                    </Flex>\n                  ) : (\n                    <Typography.Text>\n                      {t('chatui.ViewReasoning')}\n                    </Typography.Text>\n                  ),\n                  children: (\n                    <ChatMessageContent>\n                      {throttledMessageReasoning}\n                    </ChatMessageContent>\n                  ),\n                },\n              ]}\n            />\n          )}\n          <ChatMessageContent>\n            {throttledMessageContent + (isStreaming ? '\\n●' : '')}\n          </ChatMessageContent>\n        </Flex>\n        <Flex\n          style={{\n            fontSize: token.fontSizeSM,\n            ...(enableExtraHover\n              ? {\n                  opacity: isHovered ? 1 : 0,\n                  transition: 'opacity 0.2s',\n                  transitionDelay: isHovered ? '0s' : '0.2s',\n                }\n              : {}),\n          }}\n        >\n          {extra}\n        </Flex>\n        {/* <Text\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n            opacity: isHovered ? 1 : 0,\n            transition: \"opacity 0.2s\",\n            transitionDelay: isHovered ? \"0s\" : \"0.2s\",\n          }}\n        >\n          {dayjs(message.createdAt)?.isSame(new Date(), \"day\")\n            ? dayjs(message.createdAt).format(\"LT\")\n            : dayjs(message.createdAt).format(\"L LT\")}\n        </Text> */}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatMessage;\n","import { useEventNotStable } from '../../hooks/useEventNotStable';\nimport { Button } from 'antd';\nimport { ArrowDownIcon } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface ScrollBottomHandlerButtonProps {\n  autoScroll?: boolean;\n  atBottom?: boolean;\n  lastMessageContent?: string;\n  onScrollToBottom: (type: 'click' | 'auto') => void;\n}\nconst ScrollBottomHandlerButton: React.FC<ScrollBottomHandlerButtonProps> = ({\n  autoScroll,\n  atBottom,\n  lastMessageContent,\n  ...props\n}) => {\n  const onScrollToBottom = useEventNotStable(props.onScrollToBottom);\n\n  useEffect(() => {\n    if (atBottom && autoScroll) {\n      onScrollToBottom?.('auto');\n    }\n  }, [atBottom, autoScroll, lastMessageContent, onScrollToBottom]);\n\n  return (\n    <Button\n      icon={<ArrowDownIcon />}\n      shape=\"circle\"\n      onClick={() => {\n        onScrollToBottom && onScrollToBottom('click');\n      }}\n    ></Button>\n  );\n};\n\nexport default ScrollBottomHandlerButton;\n","import Flex from '../Flex';\nimport ChatMessage from './ChatMessage';\nimport CopyButton from './CopyButton';\nimport ScrollBottomHandlerButton from './ScrollBottomHandlerButton';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport Compact from 'antd/es/space/Compact';\nimport _ from 'lodash';\nimport React, { useRef, useState } from 'react';\nimport { Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\n// import AutoScroll from '../AutoScroll';\n// import Item from '../ChatItem';\n\ninterface VirtualizedListProps {\n  messages: Array<Message>;\n  isStreaming?: boolean;\n}\nconst VirtualChatMessageList: React.FC<VirtualizedListProps> = ({\n  messages,\n  isStreaming,\n}) => {\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [atBottom, setAtBottom] = useState(true);\n  const { token } = theme.useToken();\n  // overscan should be 1.5 times the height of the window\n  const overscan = typeof window !== 'undefined' ? window.innerHeight * 1.5 : 0;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ height: '100%', flex: 1 }}\n    >\n      <Virtuoso\n        atBottomStateChange={setAtBottom}\n        atBottomThreshold={60}\n        computeItemKey={(_, item) => item.id}\n        data={messages}\n        followOutput={'auto'}\n        initialTopMostItemIndex={messages?.length - 1}\n        itemContent={(index, m) => {\n          return (\n            <ChatMessage\n              key={m.id}\n              message={m}\n              placement={m.role === 'user' ? 'right' : 'left'}\n              containerStyle={{\n                paddingLeft: token.paddingMD,\n                paddingRight: token.paddingMD,\n                paddingTop: index === 0 ? token.paddingMD : 0,\n                paddingBottom:\n                  index === messages.length - 1 ? token.paddingMD : 0,\n              }}\n              isStreaming={\n                m.role !== 'user' &&\n                isStreaming &&\n                index === messages.length - 1\n              }\n              enableExtraHover={m.role === 'user'}\n              extra={\n                m.role !== 'user' ? (\n                  <Compact>\n                    <CopyButton\n                      type=\"text\"\n                      size=\"small\"\n                      copyable={{\n                        text: m.content,\n                      }}\n                    />\n                    {/* <Button/> */}\n                    {/* <Button/> */}\n                  </Compact>\n                ) : (\n                  <Compact>{null}</Compact>\n                )\n              }\n            />\n          );\n        }}\n        overscan={overscan}\n        ref={virtuosoRef}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          right: '50%',\n          transform: 'translateX(+50%)',\n          bottom: token.marginSM,\n          opacity: atBottom ? 0 : 1,\n          transition: 'opacity 0.2s',\n          transitionDelay: atBottom ? '0s' : '0.2s',\n        }}\n      >\n        <ScrollBottomHandlerButton\n          atBottom={atBottom}\n          autoScroll={isStreaming}\n          onScrollToBottom={(type) => {\n            const virtuoso = virtuosoRef.current;\n            switch (type) {\n              case 'auto': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'auto',\n                  index: 'LAST',\n                });\n                break;\n              }\n              case 'click': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'smooth',\n                  index: 'LAST',\n                });\n                break;\n              }\n            }\n          }}\n          lastMessageContent={_.get(_.last(messages), 'content')}\n        />\n      </div>\n    </Flex>\n  );\n};\n\nexport default VirtualChatMessageList;\n","'use client';\n\nimport { createDataTransferFiles, filterEmptyItem } from '../../helper';\nimport { useWebUINavigate } from '../../hooks';\nimport { useTokenCount } from '../../hooks/useTokenizer';\nimport Flex from '../Flex';\nimport ChatSender from './ChatSender';\nimport ModelSelect from './ModelSelect';\nimport VirtualChatMessageList from './VirtualChatMessageList';\nimport { createOpenAI } from '@ai-sdk/openai';\nimport { useChat } from '@ai-sdk/react';\nimport {\n  CloudUploadOutlined,\n  DeleteOutlined,\n  LinkOutlined,\n  MoreOutlined,\n  RocketOutlined,\n} from '@ant-design/icons';\nimport { Attachments, AttachmentsProps, Sender } from '@ant-design/x';\nimport { useControllableValue } from 'ahooks';\nimport {\n  streamText,\n  extractReasoningMiddleware,\n  wrapLanguageModel,\n  ChatRequestOptions,\n} from 'ai';\nimport {\n  Alert,\n  Badge,\n  Button,\n  Card,\n  CardProps,\n  Dropdown,\n  Form,\n  FormInstance,\n  Input,\n  MenuProps,\n  Tag,\n  theme,\n  Typography,\n} from 'antd';\nimport _ from 'lodash';\nimport { Scale } from 'lucide-react';\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type BAIModel = {\n  id: string;\n  label?: string;\n  name?: string;\n  group?: string;\n  created?: string;\n  description?: string;\n};\ntype BAIAgent = {};\nexport interface LLMChatCardProps extends CardProps {\n  models?: Array<BAIModel>;\n  agents?: Array<BAIAgent>;\n  modelId?: string;\n  agentId?: string;\n  endpointId?: string;\n  baseURL?: string;\n  apiKey?: string;\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n  allowCustomModel?: boolean;\n  alert?: React.ReactNode;\n  leftExtra?: React.ReactNode;\n  inputMessage?: string;\n  inputAttachment?: AttachmentsProps['items'];\n  submitKey?: string;\n  onAgentChange?: (agentId: string) => void;\n  onModelChange?: (modelId: string) => void;\n  onInputChange?: (input: string) => void;\n  onAttachmentChange?: (attachment: AttachmentsProps['items']) => void;\n  onSubmitChange?: () => void;\n  showCompareMenuItem?: boolean;\n  modelToken?: string;\n}\n\nconst LLMChatCard: React.FC<LLMChatCardProps> = ({\n  models = [],\n  endpointId,\n  baseURL,\n  headers,\n  credentials,\n  apiKey,\n  fetchOnClient,\n  allowCustomModel,\n  alert,\n  leftExtra,\n  inputMessage,\n  inputAttachment,\n  submitKey,\n  onInputChange,\n  onAttachmentChange,\n  onSubmitChange,\n  showCompareMenuItem,\n  modelToken,\n  ...cardProps\n}) => {\n  const webuiNavigate = useWebUINavigate();\n  const [isOpenAttachments, setIsOpenAttachments] = useState(false);\n  const [files, setFiles] = useState<AttachmentsProps['items']>([]);\n\n  const [modelId, setModelId] = useControllableValue(cardProps, {\n    valuePropName: 'modelId',\n    trigger: 'onModelChange',\n    defaultValue: models?.[0]?.id,\n  });\n\n  const customModelFormRef = useRef<FormInstance>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  const {\n    messages,\n    error,\n    input,\n    setInput,\n    stop,\n    isLoading,\n    append,\n    setMessages,\n    // ...chatHelpers,\n  } = useChat({\n    api: baseURL,\n    headers,\n    credentials,\n    body: {\n      modelId: modelId,\n    },\n    fetch: async (input, init) => {\n      if (fetchOnClient || modelId === 'custom') {\n        const body = JSON.parse(init?.body as string);\n        const provider = createOpenAI({\n          baseURL: allowCustomModel\n            ? customModelFormRef.current?.getFieldValue('baseURL')\n            : baseURL,\n          apiKey:\n            (allowCustomModel\n              ? customModelFormRef.current?.getFieldValue('token')\n              : apiKey) || 'dummy',\n        });\n        const result = streamText({\n          abortSignal: init?.signal || undefined,\n          model: wrapLanguageModel({\n            model: provider(\n              allowCustomModel\n                ? customModelFormRef.current?.getFieldValue('modelId')\n                : modelId,\n            ),\n            middleware: extractReasoningMiddleware({ tagName: 'think' }),\n          }),\n          messages: body?.messages,\n        });\n        setStartTime(Date.now());\n        return result.toDataStreamResponse({\n          sendReasoning: true,\n        });\n      } else {\n        return fetch(input, init);\n      }\n    },\n  });\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  // If the `inputMessage` prop exists, the `input` state has to follow it.\n  useEffect(() => {\n    if (!_.isUndefined(inputMessage)) {\n      setInput(inputMessage);\n    }\n  }, [inputMessage, setInput]);\n\n  const setFilesFromInputAttachment = (\n    inputAttachment: AttachmentsProps['items'],\n  ) => {\n    if (!_.isUndefined(inputAttachment) && !_.isEqual(files, inputAttachment)) {\n      setFiles(inputAttachment);\n      setIsOpenAttachments(true);\n    }\n  };\n\n  // If the `inputAttachment` prop exists, the `files` state has to follow it.\n  useEffect(() => {\n    setFilesFromInputAttachment(inputAttachment);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputAttachment]);\n\n  useEffect(() => {\n    if (!_.isUndefined(submitKey) && input) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!_.isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitKey]);\n\n  const inputTokenCount = useTokenCount(input);\n\n  const allChatMessageString = useMemo(() => {\n    return _.map(messages, (message) => message?.content).join('');\n  }, [messages]);\n  const chatsTokenCount = useTokenCount(allChatMessageString);\n  const totalTokenCount = inputTokenCount + chatsTokenCount;\n\n  const lastAssistantMessageString = useMemo(() => {\n    const lastAssistantMessage = _.last(messages);\n    if (lastAssistantMessage?.role === 'assistant') {\n      return lastAssistantMessage?.content;\n    } else {\n      return '';\n    }\n  }, [messages]);\n\n  const lastAssistantTokenCount = useTokenCount(lastAssistantMessageString);\n  const tokenPerSecond = useMemo(() => {\n    return lastAssistantTokenCount > 0 && startTime\n      ? lastAssistantTokenCount / ((Date.now() - startTime) / 1000)\n      : 0;\n  }, [lastAssistantTokenCount, startTime]);\n\n  const items: MenuProps['items'] = filterEmptyItem([\n    showCompareMenuItem && {\n      key: 'compare',\n      label: t('chatui.CompareWithOtherModels'),\n      icon: <Scale />,\n      onClick: () => {\n        webuiNavigate(\n          `/serving?tab=chatting&endpointId=${endpointId}&modelId=${modelId}`,\n        );\n      },\n    },\n    showCompareMenuItem && {\n      type: 'divider',\n    },\n    {\n      key: 'clear',\n      danger: true,\n      label: t('chatui.DeleteChatHistory'),\n      icon: <DeleteOutlined />,\n      onClick: () => {\n        setMessages([]);\n      },\n    },\n  ]);\n\n  return (\n    <Card\n      ref={cardRef}\n      bordered\n      extra={\n        [\n          // <Checkbox key=\"sync\">Sync</Checkbox>,\n          // <Button key=\"setting\" type=\"text\" icon={<SlidersHorizontalIcon/>}></Button>,\n        ]\n      }\n      {...cardProps}\n      title={\n        <Flex direction=\"column\" align=\"stretch\" gap={'sm'}>\n          <Flex direction=\"row\" gap={'xs'}>\n            {/* <Select\n            options={[\n              {\n                label: \"Default Agent\",\n                value: \"default\",\n              },\n            ]}\n            value={\"default\"}\n            popupMatchSelectWidth={false}\n          ></Select> */}\n            {leftExtra}\n            <ModelSelect\n              models={models}\n              value={modelId}\n              onChange={setModelId}\n              allowCustomModel={allowCustomModel}\n            />\n            <Dropdown menu={{ items }} trigger={['click']}>\n              <Button\n                type=\"link\"\n                onClick={(e) => e.preventDefault()}\n                icon={<MoreOutlined />}\n                style={{ color: token.colorTextSecondary, width: token.sizeMS }}\n              />\n            </Dropdown>\n          </Flex>\n        </Flex>\n      }\n      style={{\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      styles={{\n        body: {\n          backgroundColor: token.colorFillQuaternary,\n          borderRadius: 0,\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 0,\n          height: '50%',\n          position: 'relative',\n        },\n        actions: {\n          paddingLeft: token.paddingContentHorizontal,\n          paddingRight: token.paddingContentHorizontal,\n        },\n        header: {\n          zIndex: 1,\n        },\n      }}\n      actions={[\n        <ChatSender\n          autoFocus\n          value={input}\n          placeholder=\"Say something...\"\n          header={\n            <Sender.Header\n              closable={false}\n              title={t('chatui.Attachments')}\n              open={!!isOpenAttachments && !_.isEmpty(files)}\n              onOpenChange={setIsOpenAttachments}\n              styles={{\n                content: {\n                  padding: 0,\n                },\n              }}\n            >\n              <Attachments\n                beforeUpload={() => false}\n                getDropContainer={() => cardRef.current}\n                accept=\"image/*,text/*\"\n                items={files}\n                onChange={({ fileList }) => {\n                  setFiles(fileList);\n                  onAttachmentChange?.(fileList);\n                }}\n                placeholder={(type) =>\n                  type === 'drop'\n                    ? {\n                        title: t('chatui.DropFileHere'),\n                      }\n                    : {\n                        icon: <CloudUploadOutlined />,\n                        title: t('chatui.UploadFiles'),\n                        description: t('chatui.UploadFilesDescription'),\n                      }\n                }\n              />\n            </Sender.Header>\n          }\n          prefix={\n            <Attachments\n              beforeUpload={() => false}\n              getDropContainer={() => cardRef.current}\n              accept=\"image/*,text/*\"\n              items={files}\n              onChange={({ fileList }) => {\n                setFiles(fileList);\n                onAttachmentChange?.(fileList);\n                setIsOpenAttachments(true);\n              }}\n              placeholder={(type) =>\n                type === 'drop'\n                  ? {\n                      title: t('chatui.DropFileHere'),\n                    }\n                  : {\n                      icon: <CloudUploadOutlined />,\n                      title: t('chatui.UploadFiles'),\n                      description: t('chatui.UploadFilesDescription'),\n                    }\n              }\n            >\n              <Badge dot={!_.isEmpty(files) && !isOpenAttachments}>\n                <Button type=\"text\" icon={<LinkOutlined />} />\n              </Badge>\n            </Attachments>\n          }\n          onChange={(v: string) => {\n            setInput(v);\n            if (onInputChange) {\n              onInputChange(v);\n            }\n          }}\n          loading={isLoading}\n          onStop={() => {\n            stop();\n          }}\n          onSend={() => {\n            if (input || !_.isEmpty(files)) {\n              const chatRequestOptions: ChatRequestOptions = {};\n              if (!_.isEmpty(files)) {\n                chatRequestOptions.experimental_attachments =\n                  createDataTransferFiles(files);\n              }\n              append(\n                {\n                  role: 'user',\n                  content: input,\n                },\n                chatRequestOptions,\n              );\n\n              setTimeout(() => {\n                setInput('');\n                setFiles([]);\n                setIsOpenAttachments(false);\n              }, 0);\n              onSubmitChange?.();\n            }\n          }}\n          style={{ flex: 1 }}\n        />,\n      ]}\n    >\n      <Flex\n        direction=\"row\"\n        style={{\n          padding: token.paddingSM,\n          paddingRight: token.paddingContentHorizontalLG,\n          paddingLeft: token.paddingContentHorizontalLG,\n          backgroundColor: token.colorBgContainer,\n          display:\n            (allowCustomModel && modelId === 'custom' && 'flex') || 'none',\n        }}\n      >\n        <Form\n          ref={customModelFormRef}\n          layout=\"horizontal\"\n          size=\"small\"\n          requiredMark=\"optional\"\n          style={{ flex: 1 }}\n          key={baseURL}\n          initialValues={{\n            baseURL: baseURL,\n            token: modelToken,\n          }}\n        >\n          {alert ? (\n            <div style={{ marginBottom: token.size }}>{alert}</div>\n          ) : null}\n          <Form.Item\n            label=\"baseURL\"\n            name=\"baseURL\"\n            rules={[\n              {\n                type: 'url',\n              },\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"https://domain/v1\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Model ID\"\n            name=\"modelId\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"llm-model\" />\n          </Form.Item>\n          <Form.Item label=\"Token\" name=\"token\">\n            <Input />\n          </Form.Item>\n        </Form>\n      </Flex>\n      {/* <ChatMessageList messages={messages}  /> */}\n      {!_.isEmpty(error?.message) ? (\n        <Alert\n          message={error?.message}\n          type=\"error\"\n          showIcon\n          style={{\n            margin: token.marginSM,\n          }}\n          closable\n        />\n      ) : null}\n      <VirtualChatMessageList messages={messages} isStreaming={isLoading} />\n      <Flex justify=\"end\" align=\"end\" style={{ margin: token.marginSM }}>\n        <Tag>\n          <Flex gap={'xs'}>\n            <RocketOutlined />\n            <Flex gap={'xxs'}>\n              <Typography.Text>{tokenPerSecond.toFixed(2)}</Typography.Text>\n              <Typography.Text type=\"secondary\">tok/s</Typography.Text>\n            </Flex>\n            <Flex gap={'xxs'}>\n              <Typography.Text>{totalTokenCount}</Typography.Text>\n              <Typography.Text type=\"secondary\">total tokens</Typography.Text>\n            </Flex>\n          </Flex>\n        </Tag>\n      </Flex>\n    </Card>\n  );\n};\n\nexport default LLMChatCard;\n","import { useUpdatableState } from '../../hooks';\nimport { useSuspenseTanQuery } from '../../hooks/reactQueryAlias';\nimport EndpointSelect from '../EndpointSelect';\nimport { Model } from './ChatUIModal';\nimport LLMChatCard, { BAIModel } from './LLMChatCard';\nimport { EndpointLLMChatCard_endpoint$key } from './__generated__/EndpointLLMChatCard_endpoint.graphql';\nimport { CloseOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { AttachmentsProps } from '@ant-design/x';\nimport { Alert, Button, CardProps, Popconfirm, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { atom, useAtom } from 'jotai';\nimport _ from 'lodash';\nimport React, { startTransition, useId, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst synchronizedMessageState = atom<string>('');\nconst synchronizedAttachmentState = atom<AttachmentsProps['items']>();\nconst chatSubmitKeyInfoState = atom<{ id: string; key: string } | undefined>(\n  undefined,\n);\n\ninterface EndpointLLMChatCardProps extends CardProps {\n  basePath?: string;\n  closable?: boolean;\n  defaultModelId?: string;\n  defaultEndpoint?: EndpointLLMChatCard_endpoint$key;\n  isSynchronous?: boolean;\n  onRequestClose?: () => void;\n  onModelChange?: (modelId: string) => void;\n}\n\nconst EndpointLLMChatCard: React.FC<EndpointLLMChatCardProps> = ({\n  basePath = 'v1',\n  closable,\n  defaultModelId,\n  defaultEndpoint,\n  isSynchronous,\n  onRequestClose,\n  onModelChange,\n  ...cardProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [endpointFrgmt, setEndpointFrgmt] =\n    useState<EndpointLLMChatCard_endpoint$key | null>(defaultEndpoint || null);\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointLLMChatCard_endpoint on Endpoint {\n        endpoint_id\n        url\n      }\n    `,\n    endpointFrgmt,\n  );\n  const [promisingEndpoint, setPromisingEndpoint] = useState(endpoint);\n\n  const [synchronizedMessage, setSynchronizedMessage] = useAtom(\n    synchronizedMessageState,\n  );\n  const [synchronizedAttachment, setSynchronizedAttachment] = useAtom(\n    synchronizedAttachmentState,\n  );\n\n  const [chatSubmitKeyInfo, setChatSubmitKeyInfo] = useAtom(\n    chatSubmitKeyInfoState,\n  );\n\n  const { data: modelsResult } = useSuspenseTanQuery<{\n    data: Array<Model>;\n  }>({\n    queryKey: ['models', fetchKey, endpoint?.endpoint_id],\n    queryFn: () => {\n      return endpoint?.url\n        ? fetch(\n            new URL(\n              basePath + '/models',\n              endpoint?.url ?? undefined,\n            ).toString(),\n          )\n            .then((res) => res.json())\n            .catch((e) => ({ data: [] }))\n        : Promise.resolve({ data: [] });\n    },\n  });\n\n  const models = _.map(modelsResult?.data, (m) => ({\n    id: m.id,\n    name: m.id,\n  })) as BAIModel[];\n\n  const submitId = useId();\n\n  return (\n    <LLMChatCard\n      {...cardProps}\n      baseURL={\n        endpoint?.url\n          ? new URL(basePath, endpoint?.url ?? undefined).toString()\n          : undefined\n      }\n      models={models}\n      fetchOnClient\n      leftExtra={\n        <EndpointSelect\n          placeholder={t('chatui.SelectEndpoint')}\n          style={{\n            fontWeight: 'normal',\n          }}\n          fetchKey={fetchKey}\n          showSearch\n          loading={promisingEndpoint?.endpoint_id !== endpoint?.endpoint_id}\n          onChange={(v, endpoint) => {\n            // TODO: fix type definitions\n            // @ts-ignore\n            setPromisingEndpoint(endpoint);\n            startTransition(() => {\n              // @ts-ignore\n              setEndpointFrgmt(endpoint);\n            });\n          }}\n          value={endpoint?.endpoint_id}\n          popupMatchSelectWidth={false}\n        />\n      }\n      modelId={\n        defaultModelId &&\n        _.includes(_.map(modelsResult?.data, 'id'), defaultModelId)\n          ? defaultModelId\n          : (modelsResult?.data?.[0]?.id ?? 'custom')\n      }\n      extra={\n        closable ? (\n          <Popconfirm\n            title={t('chatui.DeleteChattingSession')}\n            description={t('chatui.DeleteChattingSessionDescription')}\n            onConfirm={() => {\n              onRequestClose?.();\n            }}\n            okText={t('button.Delete')}\n            okButtonProps={{ danger: true }}\n          >\n            <Button\n              icon={<CloseOutlined />}\n              type=\"text\"\n              style={{ color: token.colorIcon }}\n            />\n          </Popconfirm>\n        ) : undefined\n      }\n      allowCustomModel={_.isEmpty(models)}\n      alert={\n        _.isEmpty(models) && (\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={t('chatui.CannotFindModel')}\n            action={\n              <Button\n                icon={<ReloadOutlined />}\n                onClick={() => {\n                  updateFetchKey();\n                }}\n              >\n                {t('button.Refresh')}\n              </Button>\n            }\n          />\n        )\n      }\n      inputMessage={isSynchronous ? synchronizedMessage : undefined}\n      onInputChange={(v) => {\n        setSynchronizedMessage(v);\n      }}\n      inputAttachment={isSynchronous ? synchronizedAttachment : undefined}\n      onAttachmentChange={(attachment) => {\n        setSynchronizedAttachment(attachment);\n      }}\n      submitKey={\n        chatSubmitKeyInfo?.id === submitId ? undefined : chatSubmitKeyInfo?.key\n      }\n      onSubmitChange={() => {\n        setSynchronizedMessage('');\n        setSynchronizedAttachment([]);\n        if (isSynchronous) {\n          setChatSubmitKeyInfo({\n            id: submitId,\n            key: new Date().toString(),\n          });\n        }\n      }}\n    />\n  );\n};\n\nexport default EndpointLLMChatCard;\n","import BAICard from '../components/BAICard';\nimport EndpointLLMChatCard from '../components/Chat/EndpointLLMChatCard';\nimport Flex from '../components/Flex';\nimport { ChatPageQuery } from './__generated__/ChatPageQuery.graphql';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useDynamicList } from 'ahooks';\nimport { Button, Card, Skeleton, Switch, theme, Typography } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { StringParam, useQueryParam } from 'use-query-params';\n\ninterface ChatPageProps {}\n\nconst ChatPage: React.FC<ChatPageProps> = ({ ...props }) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  // Set the initial list to have two items\n  const { list, remove, getKey, push } = useDynamicList(['0']);\n\n  const [isSynchronous, setSynchronous] = useState(false);\n\n  const [endpointId] = useQueryParam('endpointId', StringParam);\n  const [modelId] = useQueryParam('modelId', StringParam);\n  const isEmptyEndpointId = !endpointId;\n\n  const { endpoint, endpoint_list } = useLazyLoadQuery<ChatPageQuery>(\n    graphql`\n      query ChatPageQuery($endpointId: UUID!, $isEmptyEndpointId: Boolean!) {\n        endpoint(endpoint_id: $endpointId)\n          @skipOnClient(if: $isEmptyEndpointId) {\n          ...EndpointLLMChatCard_endpoint\n        }\n        endpoint_list(limit: 1, offset: 0) {\n          items {\n            ...EndpointLLMChatCard_endpoint\n          }\n        }\n      }\n    `,\n    {\n      endpointId: endpointId || '',\n      isEmptyEndpointId: isEmptyEndpointId,\n    },\n  );\n  return (\n    <BAICard\n      title={t('webui.menu.Chat')}\n      styles={{\n        body: {\n          padding: 0,\n          paddingTop: 1,\n          overflow: 'hidden',\n        },\n      }}\n      extra={\n        <Flex direction=\"row\" gap={'xs'} wrap=\"wrap\" style={{ flexShrink: 1 }}>\n          <Flex gap={'xs'}>\n            <Typography.Text type=\"secondary\">\n              {t('chatui.SyncInput')}\n            </Typography.Text>\n            <Switch\n              value={isSynchronous}\n              onClick={(v) => {\n                setSynchronous(v);\n              }}\n            />\n            <Button\n              onClick={() => {\n                push(new Date().toString());\n              }}\n              icon={<PlusOutlined />}\n            />\n          </Flex>\n        </Flex>\n      }\n    >\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex\n          gap={'xs'}\n          direction=\"row\"\n          style={{\n            margin: token.margin,\n            marginTop: 0,\n            overflow: 'auto',\n            height: 'calc(100vh - 215px)',\n          }}\n          align=\"stretch\"\n        >\n          {_.map(list, (__, index) => (\n            <Suspense\n              fallback={\n                <Card\n                  bordered\n                  style={{\n                    width: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <Skeleton active />\n                </Card>\n              }\n              key={getKey(index)}\n            >\n              <EndpointLLMChatCard\n                defaultModelId={\n                  index === 0 && endpoint && modelId ? modelId : undefined\n                }\n                defaultEndpoint={\n                  index === 0 && endpoint\n                    ? endpoint\n                    : endpoint_list?.items?.[0] || undefined\n                }\n                key={getKey(index)}\n                style={{ flex: 1 }}\n                onRequestClose={() => {\n                  remove(index);\n                }}\n                closable={list.length > 1}\n                isSynchronous={isSynchronous}\n              />\n            </Suspense>\n          ))}\n        </Flex>\n      </Flex>\n    </BAICard>\n  );\n};\n\nexport default ChatPage;\n","/**\n * @generated SignedSource<<877afcf81a5c5456cd6f0210e36bbae2>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ChatPageQuery$variables = {\n  endpointId: string;\n  isEmptyEndpointId: boolean;\n};\nexport type ChatPageQuery$data = {\n  readonly endpoint: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n  } | null | undefined;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type ChatPageQuery = {\n  response: ChatPageQuery$data;\n  variables: ChatPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isEmptyEndpointId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpointId\"\n  }\n],\nv2 = [\n  {\n    \"args\": null,\n    \"kind\": \"FragmentSpread\",\n    \"name\": \"EndpointLLMChatCard_endpoint\"\n  }\n],\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 1\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"offset\",\n    \"value\": 0\n  }\n],\nv4 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"endpoint_id\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"url\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v2/*: any*/),\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v2/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"endpoint_list(limit:1,offset:0)\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v4/*: any*/),\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v4/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"endpoint_list(limit:1,offset:0)\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b78052a376d66eed6b273f0ababb32fc\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ChatPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ChatPageQuery(\\n  $endpointId: UUID!\\n  $isEmptyEndpointId: Boolean!\\n) {\\n  endpoint(endpoint_id: $endpointId) @skipOnClient(if: $isEmptyEndpointId) {\\n    ...EndpointLLMChatCard_endpoint\\n    id\\n  }\\n  endpoint_list(limit: 1, offset: 0) {\\n    items {\\n      ...EndpointLLMChatCard_endpoint\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointLLMChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"83c2a6211dc82404eeaf586c3a040cbb\";\n\nexport default node;\n"],"names":["_ref","status","extraButtonTitle","onClickExtraButton","extra","style","styles","showDivider","cardProps","token","theme","useToken","_extra","_jsx","Button","type","icon","CloseCircleTwoTone","twoToneColor","colorError","WarningTwoTone","colorWarning","undefined","onClick","children","Card","className","_","borderColor","colorSuccess","header","borderBottom","body","paddingTop","marginXS","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","hash","fetchKey","lifecycleStageFilter","loading","selectPropsWithoutLoading","baiClient","useSuspendedBackendaiClient","controllableValue","setControllableValue","useControllableValue","searchStr","setSearchStr","useState","isSearchPending","startSearchTransition","useTransition","lifecycleStageFilterStr","map","v","join","endpoint_list","endpoint","useLazyLoadQuery","_EndpointSelectQuery","require","limit","offset","filter","supports","Boolean","endpoint_id","skipEndpoint","selectOptions","items","item","label","name","value","Select","showSearch","onSearch","filterOption","options","onChange","option","_$castArray","useTokenCount","input","arguments","length","setNum","useEffect","startTransition","async","encode","str","encodeAsync","then","catch","autoFocus","onStop","onSend","senderProps","senderRef","useRef","current","focus","Sender","ref","onSubmit","onCancel","submitType","models","allowCustomModel","selectProps","t","useTranslation","placeholder","fontWeight","groupBy","mapValues","ms","m","k","popupMatchSelectWidth","copyable","defaultIcon","props","isCopied","setIsCopied","timeout","setTimeout","clearTimeout","Tooltip","title","open","CopyToClipboard","text","onCopy","CheckIcon","CopyIcon","Text","Typography","ChatMessageContent","Markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","components","p","_ref2","whiteSpace","code","rest","match","exec","content","String","replace","size","CopyButton","padding","margin","width","CodeBlock","PreTag","language","oneLight","wrapLongLines","wrapLines","X","_ref3","SyntaxHighlighter","React","dayjs","localizedFormat","relativeTime","message","placement","containerStyle","enableExtraHover","isStreaming","isHovered","setIsHovered","throttledMessageReasoning","useThrottle","reasoning","wait","throttledMessageContent","_jsxs","Flex","direction","justify","align","marginLeft","marginRight","gap","onMouseEnter","onMouseLeave","role","Avatar","fontSize","fontSizeHeading3","wrap","flex","experimental_attachments","attachment","index","contentType","border","textAlign","Image","src","url","alt","maxWidth","maxHeight","borderRadius","id","Attachments","FileCard","uid","description","colorBorderSecondary","borderWidth","lineWidth","paddingBottom","backgroundColor","colorBgContainer","colorBgContainerDisabled","Collapse","marginTop","key","Spin","fontSizeSM","opacity","transition","transitionDelay","autoScroll","atBottom","lastMessageContent","onScrollToBottom","useEventNotStable","ArrowDownIcon","shape","messages","virtuosoRef","setAtBottom","overscan","window","innerHeight","height","Virtuoso","atBottomStateChange","atBottomThreshold","computeItemKey","data","followOutput","initialTopMostItemIndex","itemContent","ChatMessage","paddingLeft","paddingMD","paddingRight","Compact","position","right","transform","bottom","marginSM","ScrollBottomHandlerButton","virtuoso","scrollToIndex","behavior","_models$","endpointId","baseURL","headers","credentials","apiKey","fetchOnClient","alert","leftExtra","inputMessage","inputAttachment","submitKey","onInputChange","onAttachmentChange","onSubmitChange","showCompareMenuItem","modelToken","webuiNavigate","useWebUINavigate","isOpenAttachments","setIsOpenAttachments","files","setFiles","modelId","setModelId","valuePropName","trigger","defaultValue","customModelFormRef","cardRef","error","setInput","stop","isLoading","append","setMessages","useChat","api","fetch","init","_customModelFormRef$c","_customModelFormRef$c2","_customModelFormRef$c3","JSON","parse","provider","createOpenAI","getFieldValue","result","streamText","abortSignal","signal","model","wrapLanguageModel","middleware","extractReasoningMiddleware","tagName","setStartTime","Date","now","toDataStreamResponse","sendReasoning","startTime","setFilesFromInputAttachment","chatRequestOptions","createDataTransferFiles","inputTokenCount","allChatMessageString","useMemo","totalTokenCount","lastAssistantMessageString","lastAssistantMessage","lastAssistantTokenCount","tokenPerSecond","filterEmptyItem","Scale","danger","DeleteOutlined","bordered","ModelSelect","Dropdown","menu","e","preventDefault","MoreOutlined","color","colorTextSecondary","sizeMS","display","flexDirection","colorFillQuaternary","actions","paddingContentHorizontal","zIndex","ChatSender","Header","closable","onOpenChange","beforeUpload","getDropContainer","accept","fileList","CloudUploadOutlined","prefix","Badge","dot","LinkOutlined","paddingSM","paddingContentHorizontalLG","Form","layout","requiredMark","initialValues","marginBottom","Item","rules","required","Input","Alert","showIcon","VirtualChatMessageList","Tag","RocketOutlined","toFixed","synchronizedMessageState","atom","synchronizedAttachmentState","chatSubmitKeyInfoState","_endpoint$url2","_modelsResult$data$0$","_modelsResult$data","_modelsResult$data$","basePath","defaultModelId","defaultEndpoint","isSynchronous","onRequestClose","onModelChange","updateFetchKey","useUpdatableState","endpointFrgmt","setEndpointFrgmt","useFragment","_EndpointLLMChatCard_endpoint","promisingEndpoint","setPromisingEndpoint","synchronizedMessage","setSynchronizedMessage","useAtom","synchronizedAttachment","setSynchronizedAttachment","chatSubmitKeyInfo","setChatSubmitKeyInfo","modelsResult","useSuspenseTanQuery","queryKey","queryFn","_endpoint$url","URL","toString","res","json","Promise","resolve","submitId","useId","LLMChatCard","EndpointSelect","Popconfirm","onConfirm","okText","okButtonProps","CloseOutlined","colorIcon","action","ReloadOutlined","list","remove","getKey","push","useDynamicList","setSynchronous","useQueryParam","StringParam","isEmptyEndpointId","_ChatPageQuery","BAICard","overflow","flexShrink","Switch","PlusOutlined","paddingContentVertical","paddingContentHorizontalSM","__","_endpoint_list$items","Suspense","fallback","Skeleton","active","EndpointLLMChatCard"],"sourceRoot":""}