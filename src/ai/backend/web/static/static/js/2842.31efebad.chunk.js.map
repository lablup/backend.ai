{"version":3,"file":"static/js/2842.31efebad.chunk.js","mappings":"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","sources":["components/UserResourcePolicySelector.tsx","components/UserSettingModal.tsx","components/__generated__/UserResourcePolicySelectorQuery.graphql.ts","components/__generated__/UserSettingModalCreateMutation.graphql.ts","components/__generated__/UserSettingModalModifyMutation.graphql.ts","components/__generated__/UserSettingModalQuery.graphql.ts"],"sourcesContent":["import { localeCompare } from '../helper';\nimport { UserResourcePolicySelectorQuery } from './__generated__/UserResourcePolicySelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends SelectProps {\n  defaultValue?: string;\n}\n\nconst UserResourcePolicySelector: React.FC<Props> = ({ ...selectProps }) => {\n  const { t } = useTranslation();\n  const { user_resource_policies } =\n    useLazyLoadQuery<UserResourcePolicySelectorQuery>(\n      graphql`\n        query UserResourcePolicySelectorQuery {\n          user_resource_policies {\n            id\n            name\n            created_at\n            # follows version of https://github.com/lablup/backend.ai/pull/1993\n            # --------------- START --------------------\n            max_vfolder_count @since(version: \"23.09.6\")\n            max_session_count_per_model_session @since(version: \"23.09.10\")\n            max_quota_scope_size @since(version: \"23.09.2\")\n            # ---------------- END ---------------------\n            max_customized_image_count @since(version: \"24.03.0\")\n            ...UserResourcePolicySettingModalFragment\n          }\n        }\n      `,\n      {},\n      {\n        fetchPolicy: 'store-and-network',\n      },\n    );\n\n  return (\n    <Select\n      showSearch // user_resource_policy does not have filtering options\n      placeholder={t('credential.SelectPolicy')}\n      options={_.map(user_resource_policies, (policy) => {\n        return {\n          value: policy?.name,\n          label: policy?.name,\n        };\n      }).sort((a, b) => localeCompare(a?.label, b?.label))}\n      {...selectProps}\n    />\n  );\n};\n\nexport default UserResourcePolicySelector;\n","import {\n  useCurrentDomainValue,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\nimport { useCurrentUserRole, useTOTPSupported } from '../hooks/backendai';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport TOTPActivateModal from './TOTPActivateModal';\nimport UserResourcePolicySelector from './UserResourcePolicySelector';\nimport {\n  UserInput,\n  UserSettingModalCreateMutation,\n} from './__generated__/UserSettingModalCreateMutation.graphql';\nimport {\n  ModifyUserInput,\n  UserSettingModalModifyMutation,\n} from './__generated__/UserSettingModalModifyMutation.graphql';\nimport { UserSettingModalQuery } from './__generated__/UserSettingModalQuery.graphql';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport {\n  Form,\n  Input,\n  Select,\n  Switch,\n  message,\n  Typography,\n  FormInstance,\n  App,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from 'react-relay';\nimport { useLazyLoadQuery } from 'react-relay';\n\ntype UserStatus = {\n  [key: string]: string;\n};\nconst userStatus: UserStatus = {\n  active: 'Active',\n  inactive: 'Inactive',\n  'before-verification': 'Before Verification',\n  deleted: 'Deleted',\n};\n\ntype UserRole = {\n  [key: string]: string[];\n};\nconst permissionRangeOfRoleChanges: UserRole = {\n  superadmin: ['superadmin', 'admin', 'user', 'monitor'],\n  admin: ['admin', 'user', 'monitor'],\n};\n\ninterface UserSettingModalProps extends BAIModalProps {\n  extraFetchKey?: string;\n}\n\nconst UserSettingModal: React.FC<UserSettingModalProps> = ({\n  extraFetchKey = '',\n  ...baiModalProps\n}) => {\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    userEmail: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      userEmail: '',\n    };\n  }\n  const { open, userEmail } = parsedValue;\n\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { modal } = App.useApp();\n  const formRef = useRef<FormInstance>(null);\n\n  const currentUserRole = useCurrentUserRole();\n  const currentDomainName = useCurrentDomainValue();\n  const baiClient = useSuspendedBackendaiClient();\n  const sudoSessionEnabledSupported = baiClient?.supports(\n    'sudo-session-enabled',\n  );\n  const { isTOTPSupported, isLoading: isLoadingManagerSupportingTOTP } =\n    useTOTPSupported();\n  const [isOpenTOTPActivateModal, { toggle: toggleTOTPActivateModal }] =\n    useToggle(false);\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const deferredMergedFetchKey = useDeferredValue(fetchKey + extraFetchKey);\n\n  const { user } = useLazyLoadQuery<UserSettingModalQuery>(\n    graphql`\n      query UserSettingModalQuery(\n        $email: String\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n      ) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          resource_policy\n          # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n          # support from 23.09.0b1\n          # https://github.com/lablup/backend.ai/pull/1530\n          sudo_session_enabled\n            @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n          totp_activated @skipOnClient(if: $isNotSupportTotp)\n          ...TOTPActivateModalFragment\n        }\n      }\n    `,\n    {\n      email: userEmail ?? '',\n      isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n      isNotSupportTotp: !isTOTPSupported,\n    },\n    {\n      fetchKey: deferredMergedFetchKey,\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const [commitModifyUserSetting, isInFlightCommitModifyUserSetting] =\n    useMutation<UserSettingModalModifyMutation>(graphql`\n      mutation UserSettingModalModifyMutation(\n        $email: String!\n        $props: ModifyUserInput!\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n      ) {\n        modify_user(email: $email, props: $props) {\n          ok\n          msg\n          user {\n            id\n            email\n            username\n            need_password_change\n            full_name\n            description\n            status\n            domain_name\n            role\n            groups {\n              id\n              name\n            }\n            resource_policy\n            # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n            # support from 23.09.0b1\n            # https://github.com/lablup/backend.ai/pull/1530\n            sudo_session_enabled\n              @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n            totp_activated @skipOnClient(if: $isNotSupportTotp)\n            ...TOTPActivateModalFragment\n          }\n        }\n      }\n    `);\n\n  const [commitCreateUser, isInFlightCommitCreateUser] =\n    useMutation<UserSettingModalCreateMutation>(graphql`\n      mutation UserSettingModalCreateMutation(\n        $email: String!\n        $props: UserInput!\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n      ) {\n        create_user(email: $email, props: $props) {\n          ok\n          msg\n          user {\n            id\n            email\n            username\n            need_password_change\n            full_name\n            description\n            status\n            domain_name\n            role\n            groups {\n              id\n              name\n            }\n            resource_policy\n            sudo_session_enabled\n              @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n            totp_activated @skipOnClient(if: $isNotSupportTotp)\n            ...TOTPActivateModalFragment\n          }\n        }\n      }\n    `);\n\n  const mutationToRemoveTotp = useTanMutation({\n    mutationFn: (email: string) => {\n      return baiClient.remove_totp(email);\n    },\n  });\n\n  const INITIAL_VALUES = {\n    email: '',\n    username: '',\n    need_password_change: false,\n    full_name: '',\n    description: '',\n    status: 'active',\n    domain_name: currentDomainName,\n    role: 'user',\n    is_active: true,\n    resource_policy: 'default',\n  };\n\n  const handleOk = () => {\n    formRef.current\n      ?.validateFields()\n      .then(async (values) => {\n        if (user) {\n          const props: ModifyUserInput = _.omitBy(\n            _.omit(values, ['email', 'password_confirm']),\n            _.isEmpty,\n          );\n          commitModifyUserSetting({\n            variables: {\n              email: values?.email || '',\n              props: props,\n              isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n              isNotSupportTotp: !isTOTPSupported,\n            },\n            onCompleted: (res, errors) => {\n              if (!res?.modify_user?.ok) {\n                message.error(t('dialog.ErrorOccurred'));\n                console.error(res?.modify_user?.msg);\n                dispatchEvent('cancel', null);\n                return;\n              }\n              if (errors && errors.length > 0) {\n                const errorMsgList = _.map(errors, (error) => error.message);\n                for (const error of errorMsgList) {\n                  message.error(error, 2.5);\n                }\n                dispatchEvent('cancel', null);\n              }\n              message.success(t('environment.SuccessfullyModified'));\n              dispatchEvent('ok', null);\n            },\n            onError: (err) => {\n              message.error(t('dialog.ErrorOccurred'));\n              console.error(err);\n            },\n          });\n        } else {\n          const default_group_id = [\n            await baiClient.group\n              .list()\n              .then((res: any) => _.find(res.groups, { name: 'default' })?.id),\n          ];\n          const props: UserInput = {\n            ..._.omit(values, ['email', 'password_confirm']),\n            password: values.password,\n            need_password_change: values.need_password_change,\n            username: values?.username || _.split(values.email, '@')[0],\n            full_name: values?.full_name || _.split(values.email, '@')[0],\n            description:\n              values?.description ||\n              `${_.split(values.email, '@')[0]}'s Account`,\n            group_ids: default_group_id,\n          };\n          commitCreateUser({\n            variables: {\n              email: values?.email || '',\n              props: props,\n              isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n              isNotSupportTotp: !isTOTPSupported,\n            },\n            onCompleted: (res, errors) => {\n              if (!res?.create_user?.ok) {\n                message.error(\n                  res.create_user?.msg?.includes('already exists')\n                    ? t('credential.UserAccountCreatedError')\n                    : t('dialog.ErrorOccurred'),\n                );\n                console.error(res?.create_user?.msg);\n                dispatchEvent('cancel', null);\n                return;\n              }\n              if (errors && errors.length > 0) {\n                const errorMsgList = _.map(errors, (error) => error.message);\n                for (const error of errorMsgList) {\n                  message.error(error, 2.5);\n                }\n                dispatchEvent('cancel', null);\n              }\n              message.success(t('environment.SuccessfullyCreated'));\n              dispatchEvent('ok', null);\n            },\n            onError: (err) => {\n              message.error(t('dialog.ErrorOccurred'));\n              console.error(err);\n            },\n          });\n        }\n      })\n      .catch((e) => console.error(e));\n  };\n\n  return (\n    <BAIModal\n      open={open}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      centered\n      title={\n        user ? t('credential.ModifyUserDetail') : t('credential.CreateUser')\n      }\n      destroyOnClose\n      onOk={handleOk}\n      confirmLoading={\n        isInFlightCommitModifyUserSetting || isInFlightCommitCreateUser\n      }\n      {...baiModalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        labelCol={{ span: 10 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ marginBottom: 40, marginTop: token.marginMD }}\n        initialValues={user ? { ...user } : INITIAL_VALUES}\n      >\n        <Form.Item\n          name=\"email\"\n          label={t('credential.UserID')}\n          rules={[{ required: !user }, { type: 'email' }]}\n        >\n          <Input disabled={!!user} />\n        </Form.Item>\n        <Form.Item\n          name=\"username\"\n          label={t('credential.UserName')}\n          rules={[\n            {\n              max: 64,\n            },\n          ]}\n        >\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item\n          name=\"full_name\"\n          label={t('credential.FullName')}\n          rules={[\n            {\n              max: 64,\n            },\n          ]}\n        >\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={user ? t('general.NewPassword') : t('general.Password')}\n          rules={[\n            {\n              required: !user,\n            },\n            {\n              pattern: /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[_\\W]).{8,}$/,\n              message: t('webui.menu.InvalidPasswordMessage'),\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"password_confirm\"\n          dependencies={['password']}\n          label={\n            user\n              ? t('webui.menu.NewPasswordAgain')\n              : t('general.ConfirmPassword')\n          }\n          rules={[\n            {\n              required: !user,\n              message: '',\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value && !!getFieldValue('password')) {\n                  return Promise.reject(\n                    new Error(t('webui.menu.PleaseConfirmYourPassword')),\n                  );\n                }\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(t('environment.PasswordsDoNotMatch')),\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"description\"\n          label={t('credential.Description')}\n          rules={[{ max: 500 }]}\n        >\n          <Input.TextArea placeholder={t('maxLength.500chars')} />\n        </Form.Item>\n        <Form.Item name=\"status\" label={t('credential.UserStatus')}>\n          <Select\n            options={_.map(userStatus, (value, key) => {\n              return {\n                value: key,\n                label: value,\n              };\n            })}\n          />\n        </Form.Item>\n        {!!user?.role &&\n          !!currentUserRole &&\n          currentUserRole in permissionRangeOfRoleChanges && (\n            <Form.Item name=\"role\" label={t('credential.Role')}>\n              <Select\n                options={_.map(\n                  permissionRangeOfRoleChanges[currentUserRole],\n                  (item) => {\n                    return {\n                      value: item,\n                      label: item,\n                    };\n                  },\n                )}\n              />\n            </Form.Item>\n          )}\n        <Form.Item\n          name=\"need_password_change\"\n          label={t('credential.DescRequirePasswordChange')}\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n        {!!sudoSessionEnabledSupported && (\n          <Form.Item\n            name=\"sudo_session_enabled\"\n            label={t('credential.EnableSudoSession')}\n            valuePropName=\"checked\"\n          >\n            <Switch />\n          </Form.Item>\n        )}\n        {!!isTOTPSupported && (\n          <Form.Item\n            name=\"totp_activated\"\n            label={t('webui.menu.TotpActivated')}\n            valuePropName=\"checked\"\n            extra={\n              user?.email !== baiClient?.email && (\n                <Typography.Text\n                  type=\"secondary\"\n                  style={{ fontSize: token.fontSizeSM }}\n                >\n                  {t('credential.AdminCanOnlyRemoveTotp')}\n                </Typography.Text>\n              )\n            }\n          >\n            <Switch\n              loading={\n                isLoadingManagerSupportingTOTP || mutationToRemoveTotp.isPending\n              }\n              disabled={\n                user?.email !== baiClient?.email && !user?.totp_activated\n              }\n              onChange={(checked: boolean) => {\n                if (checked) {\n                  toggleTOTPActivateModal();\n                } else {\n                  if (user?.totp_activated) {\n                    formRef.current?.setFieldValue('totp_activated', true);\n                    modal.confirm({\n                      title: t('totp.TurnOffTotp'),\n                      icon: <ExclamationCircleFilled />,\n                      content: t('totp.ConfirmTotpRemovalBody'),\n                      okText: t('button.Yes'),\n                      okType: 'danger',\n                      cancelText: t('button.No'),\n                      onOk() {\n                        mutationToRemoveTotp.mutate(user?.email || '', {\n                          onSuccess: () => {\n                            message.success(t('totp.RemoveTotpSetupCompleted'));\n                            updateFetchKey();\n                            formRef.current?.setFieldValue(\n                              'totp_activated',\n                              false,\n                            );\n                          },\n                          onError: (err) => {\n                            console.log(err);\n                          },\n                        });\n                      },\n                      onCancel() {\n                        formRef.current?.setFieldValue('totp_activated', true);\n                      },\n                    });\n                  }\n                }\n              }}\n            />\n          </Form.Item>\n        )}\n        <Form.Item\n          name=\"resource_policy\"\n          label={t('resourcePolicy.ResourcePolicy')}\n          rules={[{ required: !user }]}\n        >\n          <UserResourcePolicySelector />\n        </Form.Item>\n      </Form>\n      {!!isTOTPSupported && (\n        <TOTPActivateModal\n          userFrgmt={user}\n          open={isOpenTOTPActivateModal}\n          onRequestClose={(success) => {\n            if (success) {\n              updateFetchKey();\n            } else {\n              formRef.current?.setFieldValue('totp_activated', false);\n            }\n            toggleTOTPActivateModal();\n          }}\n        />\n      )}\n    </BAIModal>\n  );\n};\n\nexport default UserSettingModal;\n","/**\n * @generated SignedSource<<5a3f1b563c8d280d909a65f68d7c6d22>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserResourcePolicySelectorQuery$variables = Record<PropertyKey, never>;\nexport type UserResourcePolicySelectorQuery$data = {\n  readonly user_resource_policies: ReadonlyArray<{\n    readonly created_at: string;\n    readonly id: string;\n    readonly max_customized_image_count: number | null | undefined;\n    readonly max_quota_scope_size: any | null | undefined;\n    readonly max_session_count_per_model_session: number | null | undefined;\n    readonly max_vfolder_count: number | null | undefined;\n    readonly name: string;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"UserResourcePolicySettingModalFragment\">;\n  } | null | undefined> | null | undefined;\n};\nexport type UserResourcePolicySelectorQuery = {\n  response: UserResourcePolicySelectorQuery$data;\n  variables: UserResourcePolicySelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_vfolder_count\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_session_count_per_model_session\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_quota_scope_size\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_customized_image_count\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicySelectorQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"UserResourcePolicySettingModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicySelectorQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policies\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"5c0bb0244594feb3fc33aadcac7ffb2f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicySelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserResourcePolicySelectorQuery {\\n  user_resource_policies {\\n    id\\n    name\\n    created_at\\n    max_vfolder_count @since(version: \\\"23.09.6\\\")\\n    max_session_count_per_model_session @since(version: \\\"23.09.10\\\")\\n    max_quota_scope_size @since(version: \\\"23.09.2\\\")\\n    max_customized_image_count @since(version: \\\"24.03.0\\\")\\n    ...UserResourcePolicySettingModalFragment\\n  }\\n}\\n\\nfragment UserResourcePolicySettingModalFragment on UserResourcePolicy {\\n  id\\n  name\\n  max_vfolder_count @since(version: \\\"23.09.6\\\")\\n  max_session_count_per_model_session @since(version: \\\"23.09.10\\\")\\n  max_quota_scope_size @since(version: \\\"23.09.2\\\")\\n  max_customized_image_count @since(version: \\\"24.03.0\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"df2a28e16edd8e8b4791053a89f9917f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<59a25ed3a99df29d2bc51279aa84b8b6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null | undefined> | null | undefined;\n  description?: string | null | undefined;\n  domain_name?: string;\n  full_name?: string | null | undefined;\n  group_ids?: ReadonlyArray<string | null | undefined> | null | undefined;\n  is_active?: boolean | null | undefined;\n  need_password_change: boolean;\n  password: string;\n  resource_policy?: string | null | undefined;\n  role?: string | null | undefined;\n  status?: string | null | undefined;\n  sudo_session_enabled?: boolean | null | undefined;\n  totp_activated?: boolean | null | undefined;\n  username: string;\n};\nexport type UserSettingModalCreateMutation$variables = {\n  email: string;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n  props: UserInput;\n};\nexport type UserSettingModalCreateMutation$data = {\n  readonly create_user: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n    readonly user: {\n      readonly description: string | null | undefined;\n      readonly domain_name: string | null | undefined;\n      readonly email: string | null | undefined;\n      readonly full_name: string | null | undefined;\n      readonly groups: ReadonlyArray<{\n        readonly id: string | null | undefined;\n        readonly name: string | null | undefined;\n      } | null | undefined> | null | undefined;\n      readonly id: string | null | undefined;\n      readonly need_password_change: boolean | null | undefined;\n      readonly resource_policy: string | null | undefined;\n      readonly role: string | null | undefined;\n      readonly status: string | null | undefined;\n      readonly sudo_session_enabled: boolean | null | undefined;\n      readonly totp_activated: boolean | null | undefined;\n      readonly username: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type UserSettingModalCreateMutation = {\n  response: UserSettingModalCreateMutation$data;\n  variables: UserSettingModalCreateMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportSudoSessionEnabled\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportTotp\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"props\",\n    \"variableName\": \"props\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ok\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"msg\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v7/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalCreateMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"CreateUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"create_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TOTPActivateModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v3/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalCreateMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"CreateUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"create_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b78883f2b7e7a10f064f61e031445525\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalCreateMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserSettingModalCreateMutation(\\n  $email: String!\\n  $props: UserInput!\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  create_user(email: $email, props: $props) {\\n    ok\\n    msg\\n    user {\\n      id\\n      email\\n      username\\n      need_password_change\\n      full_name\\n      description\\n      status\\n      domain_name\\n      role\\n      groups {\\n        id\\n        name\\n      }\\n      resource_policy\\n      sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n      totp_activated @skipOnClient(if: $isNotSupportTotp)\\n      ...TOTPActivateModalFragment\\n    }\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"da6a0b51b106d3285d157ffa3bae33e9\";\n\nexport default node;\n","/**\n * @generated SignedSource<<ad3ebe89479a7231d02890dfb4be1835>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModifyUserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null | undefined> | null | undefined;\n  description?: string | null | undefined;\n  domain_name?: string | null | undefined;\n  full_name?: string | null | undefined;\n  group_ids?: ReadonlyArray<string | null | undefined> | null | undefined;\n  is_active?: boolean | null | undefined;\n  main_access_key?: string | null | undefined;\n  need_password_change?: boolean | null | undefined;\n  password?: string | null | undefined;\n  resource_policy?: string | null | undefined;\n  role?: string | null | undefined;\n  status?: string | null | undefined;\n  sudo_session_enabled?: boolean | null | undefined;\n  totp_activated?: boolean | null | undefined;\n  username?: string | null | undefined;\n};\nexport type UserSettingModalModifyMutation$variables = {\n  email: string;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n  props: ModifyUserInput;\n};\nexport type UserSettingModalModifyMutation$data = {\n  readonly modify_user: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n    readonly user: {\n      readonly description: string | null | undefined;\n      readonly domain_name: string | null | undefined;\n      readonly email: string | null | undefined;\n      readonly full_name: string | null | undefined;\n      readonly groups: ReadonlyArray<{\n        readonly id: string | null | undefined;\n        readonly name: string | null | undefined;\n      } | null | undefined> | null | undefined;\n      readonly id: string | null | undefined;\n      readonly need_password_change: boolean | null | undefined;\n      readonly resource_policy: string | null | undefined;\n      readonly role: string | null | undefined;\n      readonly status: string | null | undefined;\n      readonly sudo_session_enabled: boolean | null | undefined;\n      readonly totp_activated: boolean | null | undefined;\n      readonly username: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type UserSettingModalModifyMutation = {\n  response: UserSettingModalModifyMutation$data;\n  variables: UserSettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportSudoSessionEnabled\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportTotp\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"props\",\n    \"variableName\": \"props\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ok\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"msg\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v7/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalModifyMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TOTPActivateModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v3/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalModifyMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3c14d927cc4b33a11b36b4164a99b4b3\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserSettingModalModifyMutation(\\n  $email: String!\\n  $props: ModifyUserInput!\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  modify_user(email: $email, props: $props) {\\n    ok\\n    msg\\n    user {\\n      id\\n      email\\n      username\\n      need_password_change\\n      full_name\\n      description\\n      status\\n      domain_name\\n      role\\n      groups {\\n        id\\n        name\\n      }\\n      resource_policy\\n      sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n      totp_activated @skipOnClient(if: $isNotSupportTotp)\\n      ...TOTPActivateModalFragment\\n    }\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"bc8377f1ce18b00d8a7a4eacc523d362\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5b529bc111a502b96a0889cd7eaedf41>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserSettingModalQuery$variables = {\n  email?: string | null | undefined;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n};\nexport type UserSettingModalQuery$data = {\n  readonly user: {\n    readonly description: string | null | undefined;\n    readonly domain_name: string | null | undefined;\n    readonly email: string | null | undefined;\n    readonly full_name: string | null | undefined;\n    readonly groups: ReadonlyArray<{\n      readonly id: string | null | undefined;\n      readonly name: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly need_password_change: boolean | null | undefined;\n    readonly resource_policy: string | null | undefined;\n    readonly role: string | null | undefined;\n    readonly status: string | null | undefined;\n    readonly sudo_session_enabled: boolean | null | undefined;\n    readonly totp_activated: boolean | null | undefined;\n    readonly username: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n  } | null | undefined;\n};\nexport type UserSettingModalQuery = {\n  response: UserSettingModalQuery$data;\n  variables: UserSettingModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportSudoSessionEnabled\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportTotp\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"TOTPActivateModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"bac70fdc2febe6e71fe3e2e68dd70136\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSettingModalQuery(\\n  $email: String\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    resource_policy\\n    sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n    totp_activated @skipOnClient(if: $isNotSupportTotp)\\n    ...TOTPActivateModalFragment\\n    id\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"69a4050361fa30fd6cbc230a027ae19d\";\n\nexport default node;\n"],"names":["_ref","selectProps","t","useTranslation","user_resource_policies","useLazyLoadQuery","_UserResourcePolicySelectorQuery","require","fetchPolicy","_jsx","Select","showSearch","placeholder","options","_","policy","value","name","label","sort","a","b","localeCompare","userStatus","active","inactive","deleted","permissionRangeOfRoleChanges","superadmin","admin","extraFetchKey","baiModalProps","dispatchEvent","useWebComponentInfo","parsedValue","JSON","parse","error","open","userEmail","token","theme","useToken","modal","App","useApp","formRef","useRef","currentUserRole","useCurrentUserRole","currentDomainName","useCurrentDomainValue","baiClient","useSuspendedBackendaiClient","sudoSessionEnabledSupported","supports","isTOTPSupported","isLoading","isLoadingManagerSupportingTOTP","useTOTPSupported","isOpenTOTPActivateModal","toggle","toggleTOTPActivateModal","useToggle","fetchKey","updateFetchKey","useUpdatableState","deferredMergedFetchKey","useDeferredValue","user","_UserSettingModalQuery","email","isNotSupportSudoSessionEnabled","isNotSupportTotp","commitModifyUserSetting","isInFlightCommitModifyUserSetting","useMutation","_UserSettingModalModifyMutation","commitCreateUser","isInFlightCommitCreateUser","_UserSettingModalCreateMutation","mutationToRemoveTotp","useTanMutation","mutationFn","remove_totp","INITIAL_VALUES","username","need_password_change","full_name","description","status","domain_name","role","is_active","resource_policy","_jsxs","BAIModal","onCancel","centered","title","destroyOnClose","onOk","handleOk","_formRef$current","current","validateFields","then","async","props","values","variables","onCompleted","res","errors","_res$modify_user","_res$modify_user2","modify_user","ok","message","console","msg","length","errorMsgList","success","onError","err","default_group_id","group","list","_$find","groups","id","password","group_ids","_res$create_user","_res$create_user2","_res$create_user2$msg","_res$create_user3","create_user","includes","catch","e","confirmLoading","children","Form","ref","preserve","labelCol","span","wrapperCol","validateTrigger","style","marginBottom","marginTop","marginMD","initialValues","Item","rules","required","type","Input","disabled","max","pattern","Password","dependencies","_ref2","getFieldValue","validator","Promise","reject","Error","resolve","TextArea","key","item","valuePropName","Switch","extra","Typography","Text","fontSize","fontSizeSM","loading","isPending","totp_activated","onChange","checked","_formRef$current2","setFieldValue","confirm","icon","ExclamationCircleFilled","content","okText","okType","cancelText","mutate","onSuccess","_formRef$current3","log","_formRef$current4","UserResourcePolicySelector","TOTPActivateModal","userFrgmt","onRequestClose","_formRef$current5","node","v0","v1","v2","v3","v4","v5","v6","hash","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19"],"sourceRoot":""}