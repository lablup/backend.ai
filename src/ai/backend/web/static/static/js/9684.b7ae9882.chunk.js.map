{"version":3,"file":"static/js/9684.b7ae9882.chunk.js","mappings":"6QASA,MAwCA,EAxC2CA,IAA+B,IAA9B,MAAEC,KAAUC,GAAYF,EAClE,MAAMG,GAAYC,EAAAA,EAAAA,OACZ,MAAEC,GAAUC,EAAAA,EAAMC,YAChBC,KAAMC,IAAiBC,EAAAA,EAAAA,IAAoB,CACjDC,SAAU,CAAC,YAAa,UAAW,oBACnCC,QAASA,IACAT,EAAUU,QAAQC,qBAI7B,OAAQC,IAAAA,QAAUN,EAAaO,SA0B7B,IAzBAC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,aACEF,EAAAA,EAAAA,KAAA,OAAKhB,MAAO,CAAEmB,cAAgC,EAAlBf,EAAMgB,UAAgBC,UAChDL,EAAAA,EAAAA,KAACM,EAAAA,GAAQ,CACPC,QAAS,CACPC,UAAW,CACTC,EAAG,CACDC,MAAO,CACL1B,MAAO,CACL2B,UAAW,EACXR,aAAcf,EAAMgB,cAK5BC,SAGDb,EAAaO,QAAU,iBAI1Bd,GAIP,E,2DCxCH,MA6BA,EA7B8DF,IAEvD,IAAD6B,EAAA,OADDF,GACJ3B,EACC,MAAM8B,GAAcC,EAAAA,EAAAA,KAEdC,GAA2B,QAAZH,GADNI,EAAAA,EAAAA,YAAWC,EAAAA,GAAAA,eACE5B,aAAK,IAAAuB,OAAA,EAAZA,EAAcM,aAAc7B,EAAAA,EAAM8B,cAGjDC,EAAwB,CAC5BhC,MAAO,CAAEiC,cAHWC,EAAAA,EAAAA,KAGiBC,YAEvC,OACEvB,EAAAA,EAAAA,KAACiB,EAAAA,GAAc,IACTP,EACJrB,MAAO,IACD0B,EACAjB,IAAAA,MAAQ,CAAC,EAAc,OAAXe,QAAW,IAAXA,OAAW,EAAXA,EAAaW,KAAMJ,EAAuBV,EAAMrB,OAC5DS,IAAAA,MACE,CAAC,EACU,OAAXe,QAAW,IAAXA,OAAW,EAAXA,EAAaY,MACbL,EACAV,EAAMrB,OAEZ6B,UAAWH,EAAe1B,EAAAA,EAAM8B,cAAgB9B,EAAAA,EAAMqC,mBAExD,E,+ECfN,MAiMA,EAjM4BC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAChC,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MAER/C,GAAYC,EAAAA,EAAAA,MACZ+C,EAAyC,QAAhCN,EAAY,OAAT1C,QAAS,IAATA,GAAkB,QAAT2C,EAAT3C,EAAWiD,eAAO,IAAAN,OAAT,EAATA,EAAoBK,iBAAS,IAAAN,EAAAA,EAAI,GAC7CQ,EAA+C,QAAnCN,EAAY,OAAT5C,QAAS,IAATA,GAAkB,QAAT6C,EAAT7C,EAAWiD,eAAO,IAAAJ,OAAT,EAATA,EAAoBK,oBAAY,IAAAN,EAAAA,EAAI,GAEnDO,GAAgBC,EAAAA,EAAAA,OACfC,EAAmBC,IAAwBC,EAAAA,EAAAA,WAAkB,GAE9DC,GAAQC,EAAAA,EAAAA,IASX,CACD,CACEC,GAAI,eACJC,gBAAiB,OACjBC,QAAS,EACTC,WAAY,EACZC,aAAc,CAAE,EAAG,EAAG,EAAG,GACzBzD,KAAM,CACJ0D,SACEjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAiB,CAChBC,MAAOnB,EAAE,sBACT9B,YAAa8B,EAAE,0BACfoB,WAAYpB,EAAE,6BACdqB,MAAMrD,EAAAA,EAAAA,KAACsD,EAAAA,EAAiB,IACxBC,QAASA,IAAMf,GAAqB,OAK5C,CACEI,GAAI,eACJC,gBAAiB,MACjBC,QAAS,EACTC,WAAY,EACZC,aAAc,CAAE,EAAG,EAAG,EAAG,GACzBzD,KAAM,CACJ0D,SACEjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAiB,CAChBC,MAAOnB,EAAE,sBACT9B,YAAa8B,EAAE,0BACfoB,WAAYpB,EAAE,6BACdqB,MAAMrD,EAAAA,EAAAA,KAACwD,EAAAA,EAAmB,IAC1BD,QAASA,IAAMlB,EAAc,sBAKrC,CACEO,GAAI,oBACJC,gBAAiB,MACjBC,QAAS,EACTC,WAAY,EACZC,aAAc,CAAE,EAAG,EAAG,EAAG,GACzBzD,KAAM,CACJ0D,SACEjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAiB,CAChBC,MAAOnB,EAAE,2BACT9B,YAAa8B,EAAE,+BACfoB,WAAYpB,EAAE,6BACdqB,MAAMrD,EAAAA,EAAAA,KAACwD,EAAAA,EAAmB,IAC1BD,QAASA,KACP,MAGME,EAAS,IAAIC,gBACnBD,EAAOE,IAAI,OAAQ,KACnBF,EAAOE,IAAI,aAAcC,KAAKC,UAL+B,CAC3DC,YAAa,WAKfzB,EAAc,kBAAkBoB,EAAOM,aAAa,MAM9D7E,EAAUiD,QAAQ6B,oBAAsB,CACtCpB,GAAI,eACJE,QAAS,EACTD,gBAAiB,UACjBE,WAAY,EACZC,aAAc,CAAE,EAAG,EAAG,EAAG,GACzBzD,KAAM,CACJ0D,SACEjD,EAAAA,EAAAA,KAACiE,EAAsB,CAAA5D,UACrBL,EAAAA,EAAAA,KAACkD,EAAAA,EAAiB,CAChBC,MAAOnB,EAAE,sBACT9B,YAAa8B,EAAE,0BACfoB,WAAYpB,EAAE,6BACdqB,MAAMrD,EAAAA,EAAAA,KAACwD,EAAAA,EAAmB,IAC1BD,QAASA,IAAMlB,EAAc,0BA4CtC6B,QACAC,IACErE,IAAAA,SAAWoC,EAAWiC,EAAKtB,mBAC3B/C,IAAAA,SAAWsC,EAAc+B,EAAKtB,mBAGnC,OACEuB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAU,SAASC,IAAK,KAAMC,MAAM,UAASnE,SAAA,EAUjDL,EAAAA,EAAAA,KAACyE,EAAiB,CAACC,UAAQ,EAACC,UAAQ,IACnC7E,IAAAA,QAAU4C,KACT1C,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAAC2E,KAAK,OAAO1E,YAAa8B,EAAE,sBAAuB0C,UAAQ,KAEtE1E,EAAAA,EAAAA,KAAC6E,EAAAA,EAAG,CAACC,OAAQ,CAAC,GAAI,IAAIzE,SACnBP,IAAAA,IAAM4C,GAAO,CAACyB,EAAMY,KAEjB/E,EAAAA,EAAAA,KAACgF,EAAAA,EAAG,CAAeC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,IAAK,EAAE/E,UAC/CL,EAAAA,EAAAA,KAACqF,EAAAA,EAAI,CACHrG,MAAO,CAAEsG,OAAQ,KACjBC,OAAQ,CACNC,KAAM,CACJF,OAAQ,OACRG,QAAS,IAEXpF,SAED8D,EAAK5E,KAAK0D,WAVLkB,EAAKvB,SAgBrB5C,EAAAA,EAAAA,KAAC0F,EAAAA,EAAiB,CAChBC,KAAMpD,EACNqD,eAAiBC,IACfrD,GAAqB,GACjBqD,GACFxD,EAAc,QAChB,MAGC,C","sources":["components/AnnouncementAlert.tsx","components/ThemeSecondaryProvider.tsx","pages/StartPage.tsx"],"sourcesContent":["import { useSuspendedBackendaiClient } from '../hooks';\nimport { useSuspenseTanQuery } from '../hooks/reactQueryAlias';\nimport BAIAlert, { BAIAlertProps } from './BAIAlert';\nimport { theme } from 'antd';\nimport _ from 'lodash';\nimport Markdown from 'markdown-to-jsx';\nimport React from 'react';\n\ninterface Props extends BAIAlertProps {}\nconst AnnouncementAlert: React.FC<Props> = ({ style, ...otherProps }) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const { data: announcement } = useSuspenseTanQuery({\n    queryKey: ['baiClient', 'service', 'get_announcement'],\n    queryFn: () => {\n      return baiClient.service.get_announcement();\n    },\n  });\n\n  return !_.isEmpty(announcement.message) ? (\n    <BAIAlert\n      description={\n        <div style={{ marginBottom: token.marginSM * -1 }}>\n          <Markdown\n            options={{\n              overrides: {\n                p: {\n                  props: {\n                    style: {\n                      marginTop: 0,\n                      marginBottom: token.marginSM,\n                    },\n                  },\n                },\n              },\n            }}\n          >\n            {/* add dummy <p> to remove unnecessary margin bottom  */}\n            {announcement.message + '<p></p>'}\n          </Markdown>\n        </div>\n      }\n      {...otherProps}\n    />\n  ) : (\n    ''\n  );\n};\n\nexport default AnnouncementAlert;\n","import { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport usePrimaryColors from '../hooks/usePrimaryColors';\nimport { theme, ConfigProvider, ConfigProviderProps, ThemeConfig } from 'antd';\nimport _ from 'lodash';\nimport React, { useContext } from 'react';\n\nconst ThemeSecondaryProvider: React.FC<ConfigProviderProps> = ({\n  ...props\n}) => {\n  const themeConfig = useCustomThemeConfig();\n  const config = useContext(ConfigProvider.ConfigContext);\n  const isParentDark = config.theme?.algorithm === theme.darkAlgorithm;\n  const primaryColors = usePrimaryColors();\n\n  const additionalThemeConfig = {\n    token: { colorPrimary: primaryColors.secondary },\n  } as ThemeConfig;\n  return (\n    <ConfigProvider\n      {...props}\n      theme={{\n        ...(isParentDark\n          ? _.merge({}, themeConfig?.dark, additionalThemeConfig, props.theme)\n          : _.merge(\n              {},\n              themeConfig?.light,\n              additionalThemeConfig,\n              props.theme,\n            )),\n        algorithm: isParentDark ? theme.darkAlgorithm : theme.defaultAlgorithm,\n      }}\n    />\n  );\n};\n\nexport default ThemeSecondaryProvider;\n","import ActionItemContent from '../components/ActionItemContent';\nimport AnnouncementAlert from '../components/AnnouncementAlert';\nimport BAIAlert from '../components/BAIAlert';\nimport Flex from '../components/Flex';\nimport FolderCreateModal from '../components/FolderCreateModal';\nimport { MenuKeys } from '../components/MainLayout/WebUISider';\nimport ThemeSecondaryProvider from '../components/ThemeSecondaryProvider';\nimport { filterEmptyItem } from '../helper';\nimport { useSuspendedBackendaiClient, useWebUINavigate } from '../hooks';\nimport { SessionLauncherFormValue } from './SessionLauncherPage';\nimport { AppstoreAddOutlined, FolderAddOutlined } from '@ant-design/icons';\nimport { Card, Col, Row } from 'antd';\nimport _ from 'lodash';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst StartPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  const baiClient = useSuspendedBackendaiClient();\n  const blockList = baiClient?._config?.blockList ?? [];\n  const inactiveList = baiClient?._config?.inactiveList ?? [];\n\n  const webuiNavigate = useWebUINavigate();\n  const [isOpenCreateModal, setIsOpenCreateModal] = useState<boolean>(false);\n\n  const items = filterEmptyItem<{\n    id: string;\n    requiredMenuKey: MenuKeys;\n    rowSpan: number;\n    columnSpan: number;\n    columnOffset: Record<number, number>;\n    data: {\n      content: React.ReactNode;\n    };\n  }>([\n    {\n      id: 'createFolder',\n      requiredMenuKey: 'data',\n      rowSpan: 3,\n      columnSpan: 1,\n      columnOffset: { 6: 0, 4: 0 },\n      data: {\n        content: (\n          <ActionItemContent\n            title={t('start.CreateFolder')}\n            description={t('start.CreateFolderDesc')}\n            buttonText={t('start.button.CreateFolder')}\n            icon={<FolderAddOutlined />}\n            onClick={() => setIsOpenCreateModal(true)}\n          />\n        ),\n      },\n    },\n    {\n      id: 'startSession',\n      requiredMenuKey: 'job',\n      rowSpan: 3,\n      columnSpan: 1,\n      columnOffset: { 6: 1, 4: 1 },\n      data: {\n        content: (\n          <ActionItemContent\n            title={t('start.StartSession')}\n            description={t('start.StartSessionDesc')}\n            buttonText={t('start.button.StartSession')}\n            icon={<AppstoreAddOutlined />}\n            onClick={() => webuiNavigate('/session/start')}\n          />\n        ),\n      },\n    },\n    {\n      id: 'startBatchSession',\n      requiredMenuKey: 'job',\n      rowSpan: 3,\n      columnSpan: 1,\n      columnOffset: { 6: 2, 4: 2 },\n      data: {\n        content: (\n          <ActionItemContent\n            title={t('start.StartBatchSession')}\n            description={t('start.StartBatchSessionDesc')}\n            buttonText={t('start.button.StartSession')}\n            icon={<AppstoreAddOutlined />}\n            onClick={() => {\n              const launcherValue: DeepPartial<SessionLauncherFormValue> = {\n                sessionType: 'batch',\n              };\n              const params = new URLSearchParams();\n              params.set('step', '0');\n              params.set('formValues', JSON.stringify(launcherValue));\n              webuiNavigate(`/session/start?${params.toString()}`);\n            }}\n          />\n        ),\n      },\n    },\n    baiClient._config.enableModelFolders && {\n      id: 'modelService',\n      rowSpan: 3,\n      requiredMenuKey: 'serving',\n      columnSpan: 1,\n      columnOffset: { 6: 0, 4: 0 },\n      data: {\n        content: (\n          <ThemeSecondaryProvider>\n            <ActionItemContent\n              title={t('start.ModelService')}\n              description={t('start.ModelServiceDesc')}\n              buttonText={t('start.button.ModelService')}\n              icon={<AppstoreAddOutlined />}\n              onClick={() => webuiNavigate('/service/start')}\n            />\n          </ThemeSecondaryProvider>\n        ),\n      },\n    },\n    // {\n    //   id: 'startFromURL',\n    //   rowSpan: 3,\n    //   columnSpan: 1,\n    //   columnOffset: { 6: 1, 4: 1 },\n    //   data: {\n    //     content: (\n    //       <ThemeSecondaryProvider>\n    //         <ActionItemContent\n    //           title={t('start.StartFromURL')}\n    //           description={t('start.StartFromURLDesc')}\n    //           buttonText={t('start.button.StartNow')}\n    //           icon={<LinkOutlined />}\n    //           onClick={() => webuiNavigate('/import')}\n    //         />\n    //       </ThemeSecondaryProvider>\n    //     ),\n    //   },\n    // },\n    // {\n    //   id: 'startFromExample',\n    //   rowSpan: 3,\n    //   columnSpan: 1,\n    //   columnOffset: { 6:2, 4: 2 },\n    //   data: {\n    //     content: (\n    //       <ThemeSecondaryProvider>\n    //         <ActionItemContent\n    //           title={t('start.StartFromExample')}\n    //           description={t('start.StartFromExampleDesc')}\n    //           buttonText={t('start.button.StartNow')}\n    //           icon={<PlaySquareOutlined />}\n    //           onClick={() => webuiNavigate('/import')}\n    //         />\n    //       </ThemeSecondaryProvider>\n    //     ),\n    //   },\n    // },\n  ]).filter(\n    (item) =>\n      !_.includes(blockList, item.requiredMenuKey) &&\n      !_.includes(inactiveList, item.requiredMenuKey),\n  );\n\n  return (\n    <Flex direction=\"column\" gap={'md'} align=\"stretch\">\n      {/* <BAIBoard\n        items={items}\n        onItemsChange={(event) => {\n          // use spread operator to ignore readonly type error\n          const changedItems = [...event.detail.items];\n          setItems(changedItems);\n          setItemSettings(_.map(changedItems, (item) => _.omit(item, 'data')));\n        }}\n      /> */}\n      <AnnouncementAlert showIcon closable />\n      {_.isEmpty(items) && (\n        <BAIAlert type=\"info\" description={t('start.NoStartItems')} showIcon />\n      )}\n      <Row gutter={[16, 16]}>\n        {_.map(items, (item, idx) => {\n          return (\n            <Col key={item.id} xs={24} md={12} xl={6} xxl={4}>\n              <Card\n                style={{ height: 340 }}\n                styles={{\n                  body: {\n                    height: '100%',\n                    padding: 0,\n                  },\n                }}\n              >\n                {item.data.content}\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n      <FolderCreateModal\n        open={isOpenCreateModal}\n        onRequestClose={(response) => {\n          setIsOpenCreateModal(false);\n          if (response) {\n            webuiNavigate('/data');\n          }\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default StartPage;\n"],"names":["_ref","style","otherProps","baiClient","useSuspendedBackendaiClient","token","theme","useToken","data","announcement","useSuspenseTanQuery","queryKey","queryFn","service","get_announcement","_","message","_jsx","BAIAlert","description","marginBottom","marginSM","children","Markdown","options","overrides","p","props","marginTop","_config$theme","themeConfig","useCustomThemeConfig","isParentDark","useContext","ConfigProvider","algorithm","darkAlgorithm","additionalThemeConfig","colorPrimary","usePrimaryColors","secondary","dark","light","defaultAlgorithm","StartPage","_baiClient$_config$bl","_baiClient$_config","_baiClient$_config$in","_baiClient$_config2","t","useTranslation","blockList","_config","inactiveList","webuiNavigate","useWebUINavigate","isOpenCreateModal","setIsOpenCreateModal","useState","items","filterEmptyItem","id","requiredMenuKey","rowSpan","columnSpan","columnOffset","content","ActionItemContent","title","buttonText","icon","FolderAddOutlined","onClick","AppstoreAddOutlined","params","URLSearchParams","set","JSON","stringify","sessionType","toString","enableModelFolders","ThemeSecondaryProvider","filter","item","_jsxs","Flex","direction","gap","align","AnnouncementAlert","showIcon","closable","type","Row","gutter","idx","Col","xs","md","xl","xxl","Card","height","styles","body","padding","FolderCreateModal","open","onRequestClose","response"],"sourceRoot":""}