{"version":3,"file":"static/js/39.fcae7938.chunk.js","mappings":"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","sources":["components/DoubleTag.tsx","components/Flex.tsx","components/FlexActivityIndicator.tsx","components/ImageMetaIcon.tsx","components/__generated__/ImageEnvironmentSelectFormItemsQuery.graphql.ts","components/__generated__/ModelServiceSettingModal_endpoint.graphql.ts","helper/index.tsx","hooks/index.ts","hooks/reactQueryAlias.tsx","components/SliderInputFormItem.tsx","components/TextHighlighter.tsx","components/ImageEnvironmentSelectFormItems.tsx","components/ResourceGroupSelect.tsx","components/VFolderSelect.tsx","components/ServiceLauncherModal.tsx","components/ModelServiceSettingModal.tsx","pages/ServingListPage.tsx","pages/__generated__/ServingListPageQuery.graphql.ts"],"sourcesContent":["import { Tag } from \"antd\";\nimport Flex from \"./Flex\";\nimport _ from \"lodash\";\n\ntype ObjectValue = {\n  label: string;\n  color?: string;\n};\nconst DoubleTag: React.FC<{\n  values?: string[] | ObjectValue[];\n}> = ({ values = [] }) => {\n  if (values.length === 0) return null;\n  let objectValues: ObjectValue[];\n  if (_.isString(values[0])) {\n    objectValues = values.map((value) => ({\n      label: value as string,\n      color: \"blue\",\n    }));\n  } else {\n    objectValues = values as ObjectValue[];\n  }\n\n  return (\n    <Flex direction=\"row\">\n      {_.map(objectValues, (objValue, idx) => {\n        return (\n          <Tag\n            key={idx}\n            style={\n              _.last(objectValues) === objValue\n                ? undefined\n                : { margin: 0, marginRight: -1, zIndex: 1 }\n            }\n          >\n            {objValue.label}\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default DoubleTag;\n","import { theme } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\n\nexport interface FlexProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"dir\">,\n    PropsWithChildren {\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  justify?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  // | \"evenly\";\n  align?: \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n  gap?: number | \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nconst Flex: React.FC<FlexProps> = ({\n  direction = \"row\",\n  wrap = \"nowrap\",\n  justify = \"flex-start\",\n  align = \"center\",\n  gap = 0,\n  style,\n  children,\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferConst = [justify, align];\n  const transferConstStyle = transferConst?.map((el) => {\n    let tempTxt;\n    switch (el) {\n      case \"start\":\n        tempTxt = \"flex-start\";\n        break;\n      case \"end\":\n        tempTxt = \"flex-end\";\n        break;\n      case \"between\":\n        tempTxt = \"space-between\";\n        break;\n      case \"around\":\n        tempTxt = \"space-around\";\n        break;\n      default:\n        tempTxt = el;\n        break;\n    }\n\n    return tempTxt;\n  });\n  const flexStyle: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: direction,\n    flexWrap: wrap,\n    justifyContent: transferConstStyle[0],\n    alignItems: transferConstStyle[1],\n    ...style,\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"stretch\",\n        backgroundColor: \"transparent\",\n        border: \"0 solid black\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexBasis: \"auto\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        listStyle: \"none\",\n        margin: 0,\n        minHeight: 0,\n        minWidth: 0,\n        padding: 0,\n        position: \"relative\",\n        textDecoration: \"none\",\n        gap:\n          // @ts-ignore\n          typeof gap === \"string\" ? token[\"padding\" + gap.toUpperCase()] : gap,\n        ...flexStyle,\n      }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","import Flex, { FlexProps } from \"./Flex\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { Spin } from \"antd\";\nimport React from \"react\";\n\nconst FlexActivityIndicator: React.FC<FlexProps> = ({ style, children }) => {\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"center\"\n      align=\"center\"\n      style={{ width: \"100%\", height: \"100%\", ...style }}\n    >\n      <Spin indicator={<LoadingOutlined spin />} />\n      {children}\n    </Flex>\n  );\n};\n\nexport default FlexActivityIndicator;\n","import React from \"react\";\nimport { useBackendaiImageMetaData } from \"../hooks\";\n\nconst ImageMetaIcon: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n  alt?: string | null;\n}> = ({ image, style = {} }, bordered, alt = \"\") => {\n  const [, { getImageIcon }] = useBackendaiImageMetaData();\n\n  return (\n    <img\n      src={getImageIcon(image)}\n      style={{\n        width: \"1.5em\",\n        height: \"1.5em\",\n        ...style,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nexport default React.memo(ImageMetaIcon);\n","/**\n * @generated SignedSource<<7a44bb06b700bc6990b9f284967ae6c0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ImageEnvironmentSelectFormItemsQuery$variables = {\n  installed?: boolean | null;\n};\nexport type ImageEnvironmentSelectFormItemsQuery$data = {\n  readonly images: ReadonlyArray<{\n    readonly architecture: string | null;\n    readonly digest: string | null;\n    readonly humanized_name: string | null;\n    readonly installed: boolean | null;\n    readonly labels: ReadonlyArray<{\n      readonly key: string | null;\n      readonly value: string | null;\n    } | null> | null;\n    readonly name: string | null;\n    readonly registry: string | null;\n    readonly resource_limits: ReadonlyArray<{\n      readonly key: string | null;\n      readonly max: string | null;\n      readonly min: string | null;\n    } | null> | null;\n    readonly tag: string | null;\n  } | null> | null;\n};\nexport type ImageEnvironmentSelectFormItemsQuery = {\n  response: ImageEnvironmentSelectFormItemsQuery$data;\n  variables: ImageEnvironmentSelectFormItemsQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"installed\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"key\",\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"is_installed\",\n        \"variableName\": \"installed\"\n      }\n    ],\n    \"concreteType\": \"Image\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"images\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"humanized_name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"tag\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"registry\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"architecture\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"digest\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"installed\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ResourceLimit\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"resource_limits\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"min\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"KVPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"labels\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"value\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"ea71f4a3948d4742dd6bb11ef80a8300\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ImageEnvironmentSelectFormItemsQuery(\\n  $installed: Boolean\\n) {\\n  images(is_installed: $installed) {\\n    name\\n    humanized_name\\n    tag\\n    registry\\n    architecture\\n    digest\\n    installed\\n    resource_limits {\\n      key\\n      min\\n      max\\n    }\\n    labels {\\n      key\\n      value\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"33367bd6e1532b42b61629ef9d3dc46b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b2872924ef54e9c1706ca51d19289a4f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelServiceSettingModal_endpoint$data = {\n  readonly desired_session_count: number | null;\n  readonly endpoint_id: any | null;\n  readonly \" $fragmentType\": \"ModelServiceSettingModal_endpoint\";\n};\nexport type ModelServiceSettingModal_endpoint$key = {\n  readonly \" $data\"?: ModelServiceSettingModal_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelServiceSettingModal_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"desired_session_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"881f18324b27eba6ff0fcfb83ae241d2\";\n\nexport default node;\n","import { useSuspendedBackendaiClient } from \"../hooks\";\n\nexport const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client?.newSignedRequest(method, url, body, null);\n  return client?._wrapWithPromise(request);\n};\n\nexport const useBaiSignedRequestWithPromise = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return ({\n    method,\n    url,\n    body = null,\n  }: {\n    method: string;\n    url: string;\n    body?: any;\n  }) =>\n    baiSignedRequestWithPromise({\n      method,\n      url,\n      body,\n      client: baiClient,\n    });\n};\n\n/**\n * Convert file size with binary unit to human readable unit and value\n *\n * @param {number} bytes\n * @param {number} decimalPoint decimal point set to 2 as a default\n * @return {string} converted file size to human readable value\n */\nexport const _humanReadableDecimalSize = (bytes = 0, decimalPoint = 2) => {\n  if (bytes === 0) return \"0 Bytes\";\n  const k = Math.pow(10, 3);\n  decimalPoint = decimalPoint < 0 ? 0 : decimalPoint;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"];\n  let i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) + \" \" + sizes[i]\n  );\n};\n\nexport const _humanReadableBinarySize = (\n  bytes = 0,\n  decimalPoint = 2,\n  compact = false\n) => {\n  if (!bytes) return 0;\n  if (typeof bytes === \"string\") bytes = parseInt(bytes);\n  const k = Math.pow(2, 10);\n  let i;\n  let unitList;\n  decimalPoint = decimalPoint < 0 || compact ? 0 : decimalPoint;\n  i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  if (compact) {\n    unitList = [\"\", \"Ki\", \"Mi\", \"Gi\", \"Ti\", \"Pi\", \"Ei\"];\n  } else {\n    unitList = [\"Bytes\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\"];\n  }\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) +\n    \" \" +\n    unitList[i]\n  );\n};\n\nexport const GBToBytes = (value = 0) => {\n  const gigabyte = Math.pow(10, 9);\n  return Math.round(gigabyte * value);\n};\n\nexport const bytesToGB = (\n  bytes: number,\n  decimalPoint = 2,\n  nullStr: string = \"-\"\n) => {\n  if (bytes === null || bytes === undefined) return nullStr;\n  if (!bytes) return bytes;\n  return (bytes / 10 ** 9).toFixed(decimalPoint);\n};\n\nexport type QuotaScopeType = \"project\" | \"user\";\nexport const addQuotaScopeTypePrefix = (type: QuotaScopeType, str: string) => {\n  if (str === \"\" || str === undefined) return \"\";\n  if (str.startsWith(`${type}:`)) return str;\n  return `${type}:${str}`;\n};\n\nexport const usageIndicatorColor = (percentage: number) => {\n  return percentage < 70\n    ? \"rgba(58, 178, 97, 1)\"\n    : percentage < 90\n    ? \"rgb(223, 179, 23)\"\n    : \"#ef5350\";\n};\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener(\"backend-ai-group-changed\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-group-changed\", listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: \"backendai-metadata-for-suspense\",\n    queryFn: () => {\n      return fetch(\"resources/image_metadata.json\")\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          }\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: \"\",\n        tags: [],\n      };\n    }\n    const specs = imageName.split(\"/\");\n\n    const [key, tag] = (specs[2] || specs[1]).split(\":\");\n    const tags = tag.split(\"-\");\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = \"resources/icons/\") => {\n        if (!imageName) return \"default.png\";\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key].icon !== undefined\n            ? metadata?.imageInfo[key].icon\n            : \"default.png\")\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n","import { useQuery, useMutation } from \"react-query\";\n\nexport const useTanQuery = useQuery;\nexport const useTanMutation = useMutation;\n","import React from \"react\";\nimport {\n  InputNumber,\n  Slider,\n  Form,\n  SliderSingleProps,\n  InputNumberProps,\n} from \"antd\";\nimport Flex from \"./Flex\";\nimport { FormItemProps } from \"antd/lib/form/FormItem\";\nimport { NamePath } from \"antd/es/form/interface\";\nimport { SliderRangeProps } from \"antd/es/slider\";\n\ninterface SliderInputProps extends Omit<FormItemProps, \"name\"> {\n  min?: number;\n  max?: number;\n  step?: number;\n  name: NamePath;\n  inputNumberProps?: InputNumberProps;\n  sliderProps?: SliderSingleProps | SliderRangeProps;\n}\nconst SliderInputItem: React.FC<SliderInputProps> = ({\n  name,\n  min,\n  max,\n  step,\n  rules,\n  required,\n  inputNumberProps,\n  sliderProps,\n  ...formItemProps\n}) => {\n  return (\n    <Form.Item required={required} {...formItemProps}>\n      <Flex direction=\"row\" gap={\"md\"}>\n        <Flex direction=\"column\" align=\"stretch\" style={{ flex: 3 }}>\n          <Form.Item name={name} noStyle rules={rules}>\n            <Slider max={max} min={min} step={step} {...sliderProps} />\n          </Form.Item>\n        </Flex>\n        <Flex style={{ flex: 2 }}>\n          <Form.Item name={name} noStyle>\n            <InputNumber\n              max={max}\n              min={min}\n              step={step}\n              {...inputNumberProps}\n            />\n          </Form.Item>\n        </Flex>\n      </Flex>\n    </Form.Item>\n    // <Row justify=\"space-around\" align=\"middle\" gutter={20}>\n    //   <Col span={6}>\n    //     <p>Resource</p>\n    //   </Col>\n    //   <Col span={8}>\n    //     <Slider\n    //       min={minValue}\n    //       max={maxValue}\n    //       onChange={onChange}\n    //       value={typeof inputValue === \"number\" ? inputValue : 0}\n    //       step={0.01}\n    //     />\n    //   </Col>\n    //   <Col span={6}>\n    //     <InputNumber\n    //       min={minValue}\n    //       max={maxValue}\n    //       style={\n    //         {\n    //           /* use theme config */\n    //         }\n    //       }\n    //       step={0.01}\n    //       value={inputValue}\n    //       onChange={onChange}\n    //     />\n    //   </Col>\n    // </Row>\n  );\n};\n\nexport default SliderInputItem;\n","import React from \"react\";\n\ninterface TextHighlighterProps {\n  children: string;\n  keyword: string;\n  style?: React.CSSProperties;\n}\n\nconst TextHighlighter: React.FC<TextHighlighterProps> = ({\n  children,\n  keyword,\n  style,\n}) => {\n  const keyIndex = children.toLowerCase().indexOf(keyword?.toLowerCase());\n  return (\n    <span>\n      {children.substring(0, keyIndex)}\n      <b style={{ backgroundColor: \"orange\", color: \"black\", ...style }}>\n        {children.substring(keyIndex, keyIndex + keyword.length)}\n      </b>\n      {children.substring(keyIndex + keyword.length)}\n    </span>\n  );\n};\n\nexport default TextHighlighter;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport _ from \"lodash\";\nimport { Divider, Form, Input, Select } from \"antd\";\nimport { useBackendaiImageMetaData } from \"../hooks\";\nimport ImageMetaIcon from \"./ImageMetaIcon\";\nimport Flex from \"./Flex\";\nimport { useTranslation } from \"react-i18next\";\nimport TextHighlighter from \"./TextHighlighter\";\nimport DoubleTag from \"./DoubleTag\";\nimport {\n  ImageEnvironmentSelectFormItemsQuery,\n  ImageEnvironmentSelectFormItemsQuery$data,\n} from \"./__generated__/ImageEnvironmentSelectFormItemsQuery.graphql\";\n\nexport type Image = NonNullable<\n  NonNullable<ImageEnvironmentSelectFormItemsQuery$data>[\"images\"]\n>[0];\n\ntype ImageGroup = {\n  groupName: string;\n  environmentGroups: {\n    environmentName: string;\n    images: Image[];\n  }[];\n};\n\nexport type ImageEnvironmentFormInput = {\n  environments: {\n    environment: string;\n    version: string;\n    image: Image | undefined;\n  };\n};\n\ninterface ImageEnvironmentSelectFormItemsProps {\n  filter?: (image: Image) => boolean;\n}\n\nconst getImageFullName = (image: Image) => {\n  return image\n    ? `${image.registry}/${image.name}:${image.tag}@${image.architecture}`\n    : undefined;\n};\n\nconst ImageEnvironmentSelectFormItems: React.FC<\n  ImageEnvironmentSelectFormItemsProps\n> = ({ filter }) => {\n  const form = Form.useFormInstance<ImageEnvironmentFormInput>();\n  const currentEnvironmentsFormData = Form.useWatch(\"environments\", form);\n\n  const [environmentSearch, setEnvironmentSearch] = useState(\"\");\n  const [versionSearch, setVersionSearch] = useState(\"\");\n  const { t } = useTranslation();\n  const [metadata, { getImageMeta }] = useBackendaiImageMetaData();\n  const { images } = useLazyLoadQuery<ImageEnvironmentSelectFormItemsQuery>(\n    graphql`\n      query ImageEnvironmentSelectFormItemsQuery($installed: Boolean) {\n        images(is_installed: $installed) {\n          name\n          humanized_name\n          tag\n          registry\n          architecture\n          digest\n          installed\n          resource_limits {\n            key\n            min\n            max\n          }\n          labels {\n            key\n            value\n          }\n        }\n      }\n    `,\n    {\n      installed: true,\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n\n  // If not initial value, select first value\n  // auto select when relative field is changed\n  useEffect(() => {\n    // if not initial value, select first value\n    const nextEnvironmentName =\n      currentEnvironmentsFormData?.environment ||\n      imageGroups[0]?.environmentGroups[0]?.environmentName;\n\n    let nextEnvironmentGroup: ImageGroup[\"environmentGroups\"][0] | undefined;\n    _.find(imageGroups, (group) => {\n      return _.find(group.environmentGroups, (environment) => {\n        if (environment.environmentName === nextEnvironmentName) {\n          nextEnvironmentGroup = environment;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    });\n\n    // if current version does'nt exist in next environment group, select a version of the first image of next environment group\n    if (\n      !_.find(\n        nextEnvironmentGroup?.images,\n        (image) =>\n          currentEnvironmentsFormData?.version === getImageFullName(image)\n      )\n    ) {\n      const nextNewImage = nextEnvironmentGroup?.images[0];\n      if (nextNewImage) {\n        form.setFieldsValue({\n          environments: {\n            environment: nextEnvironmentName,\n            version: getImageFullName(nextNewImage),\n            image: nextNewImage,\n          },\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentEnvironmentsFormData?.environment]);\n\n  const imageGroups: ImageGroup[] = useMemo(\n    () =>\n      _.chain(images)\n        .filter(filter ? filter : () => true)\n        .groupBy((image) => {\n          // group by using `group` property of image info\n          return (\n            metadata?.imageInfo[getImageMeta(getImageFullName(image) || \"\").key]\n              ?.group || \"Custom Environments\"\n          );\n        })\n        .map((images, groupName) => {\n          return {\n            groupName,\n            environmentGroups: _.chain(images)\n              // sub group by using (environment) `name` property of image info\n              .groupBy((image) => {\n                return (\n                  metadata?.imageInfo[\n                    getImageMeta(getImageFullName(image) || \"\").key\n                  ]?.name || image?.name\n                );\n              })\n              .map((images, environmentName) => ({\n                environmentName,\n                images,\n              }))\n              .sortBy((item) => item.environmentName)\n              .value(),\n          };\n        })\n        .sortBy((item) => item.groupName)\n        .value(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [images, metadata, filter]\n  );\n\n  return (\n    <>\n      <Form.Item\n        name={[\"environments\", \"environment\"]}\n        label={`${t(\"session.launcher.Environments\")} / ${t(\n          \"session.launcher.Version\"\n        )}`}\n        rules={[{ required: true }]}\n        style={{ marginBottom: 10 }}\n      >\n        <Select\n          showSearch\n          autoClearSearchValue\n          labelInValue={false}\n          searchValue={environmentSearch}\n          onSearch={setEnvironmentSearch}\n          defaultActiveFirstOption={true}\n          optionLabelProp=\"label\"\n        >\n          {_.map(imageGroups, (group) => {\n            return (\n              <Select.OptGroup key={group.groupName} label={group.groupName}>\n                {_.map(group.environmentGroups, (environmentGroup) => {\n                  const firstImage = environmentGroup.images[0];\n                  return (\n                    <Select.Option\n                      key={environmentGroup.environmentName}\n                      value={environmentGroup.environmentName}\n                      label={\n                        <Flex direction=\"row\">\n                          <Flex direction=\"row\" align=\"center\" gap=\"xs\">\n                            <ImageMetaIcon\n                              image={getImageFullName(firstImage) || \"\"}\n                              style={{\n                                width: 15,\n                                height: 15,\n                              }}\n                            />\n                            {environmentGroup.environmentName}\n                          </Flex>\n                        </Flex>\n                      }\n                    >\n                      <Flex direction=\"row\" justify=\"between\">\n                        <Flex direction=\"row\" align=\"center\" gap=\"xs\">\n                          <ImageMetaIcon\n                            image={getImageFullName(firstImage) || \"\"}\n                            style={{\n                              width: 15,\n                              height: 15,\n                            }}\n                          />\n                          <TextHighlighter keyword={environmentSearch}>\n                            {environmentGroup.environmentName}\n                          </TextHighlighter>\n                        </Flex>\n                        <Flex direction=\"row\" gap=\"xs\">\n                          {/* <Tag>Multiarch</Tag> */}\n                        </Flex>\n                      </Flex>\n                    </Select.Option>\n                  );\n                })}\n              </Select.OptGroup>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        noStyle\n        shouldUpdate={(prev, cur) =>\n          prev.environments?.environments !== cur.environments?.environment\n        }\n      >\n        {({ getFieldValue }) => {\n          let selectedEnvironmentGroup:\n            | ImageGroup[\"environmentGroups\"][0]\n            | undefined;\n          _.find(imageGroups, (group) => {\n            return _.find(group.environmentGroups, (environment) => {\n              if (\n                environment.environmentName ===\n                getFieldValue(\"environments\")?.environment\n              ) {\n                selectedEnvironmentGroup = environment;\n                return true;\n              } else {\n                return false;\n              }\n            });\n          });\n          return (\n            <Form.Item\n              name={[\"environments\", \"version\"]}\n              rules={[{ required: true }]}\n            >\n              <Select\n                onChange={() => {}}\n                showSearch\n                searchValue={versionSearch}\n                onSearch={setVersionSearch}\n                autoClearSearchValue\n                optionLabelProp=\"label\"\n              >\n                {_.map(\n                  _.uniqBy(selectedEnvironmentGroup?.images, \"digest\"),\n                  (image) => {\n                    const [version, tag, requirements] = image?.tag?.split(\n                      \"-\"\n                    ) || [\"\", \"\", \"\"];\n                    return (\n                      <Select.Option\n                        key={image?.digest}\n                        value={getImageFullName(image)}\n                        label={[\n                          version,\n                          metadata?.tagAlias[tag],\n                          image?.architecture,\n                          metadata?.tagAlias[requirements]?.split(\":\")[1],\n                        ]\n                          .filter((v) => !!v)\n                          .join(\" / \")}\n                      >\n                        <Flex direction=\"row\">\n                          {version}\n                          <Divider type=\"vertical\" />\n                          {metadata?.tagAlias[tag]}\n                          <Divider type=\"vertical\" />\n                          {image?.architecture}\n                          <Divider type=\"vertical\" />\n                          {requirements && (\n                            <DoubleTag\n                              values={\n                                metadata?.tagAlias[requirements]?.split(\":\") ||\n                                []\n                              }\n                            />\n                          )}\n                        </Flex>\n                      </Select.Option>\n                    );\n                  }\n                )}\n              </Select>\n            </Form.Item>\n          );\n        }}\n      </Form.Item>\n      <Form.Item noStyle hidden name={[\"environments\", \"image\"]}>\n        <Input />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ImageEnvironmentSelectFormItems;\n","import { Select, SelectProps } from \"antd\";\nimport React, { startTransition, useEffect } from \"react\";\nimport _ from \"lodash\";\n// import { ResourceGroupSelectorQuery } from \"./__generated__/ResourceGroupSelectorQuery.graphql\";\nimport { useCurrentProjectValue, useUpdatableState } from \"../hooks\";\nimport { useBaiSignedRequestWithPromise } from \"../helper\";\nimport { useTanQuery } from \"../hooks/reactQueryAlias\";\n\ninterface ResourceGroupSelectorProps extends SelectProps {\n  projectId?: string;\n  autoSelectDefault?: boolean;\n  filter?: (projectName: string) => boolean;\n}\n\nconst ResourceGroupSelector: React.FC<ResourceGroupSelectorProps> = ({\n  projectId,\n  autoSelectDefault,\n  filter,\n  ...selectProps\n}) => {\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const currentProject = useCurrentProjectValue();\n  // const { group: project } = useLazyLoadQuery<ResourceGroupSelectorQuery>(\n  //   graphql`\n  //     query ResourceGroupSelectorQuery($projectId: UUID!) {\n  //       group(id: $projectId) {\n  //         id\n  //         scaling_groups\n  //       }\n  //     }\n  //   `,\n  //   {\n  //     projectId: projectId || currentProject.id,\n  //   }\n  // );\n\n  const [key, checkUpdate] = useUpdatableState(\"first\");\n\n  const { data } = useTanQuery({\n    queryKey: [\"ResourceGroupSelectorQuery\", key],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: \"GET\",\n        url: `/scaling-groups?group=${currentProject.name}`,\n      }) as Promise<{ scaling_groups: { name: string }[] }>;\n    },\n    staleTime: 0,\n  });\n  const resourceGroups = data?.scaling_groups || [];\n\n  const autoSelectedOption = resourceGroups[0]\n    ? {\n        label: resourceGroups[0].name,\n        value: resourceGroups[0].name,\n      }\n    : undefined;\n\n  useEffect(() => {\n    if (autoSelectDefault && autoSelectedOption) {\n      selectProps.onChange?.(autoSelectedOption.value, autoSelectedOption);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoSelectDefault]);\n  return (\n    <Select\n      defaultActiveFirstOption\n      defaultValue={autoSelectDefault ? autoSelectedOption : undefined}\n      onDropdownVisibleChange={(open) => {\n        if (open) {\n          startTransition(() => {\n            checkUpdate();\n          });\n        }\n      }}\n      {...selectProps}\n    >\n      {_.map(resourceGroups, (resourceGroup, idx) => {\n        return (\n          <Select.Option key={resourceGroup.name} value={resourceGroup.name}>\n            {resourceGroup.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default ResourceGroupSelector;\n","import { Select, SelectProps } from \"antd\";\nimport React, { startTransition, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { useCurrentProjectValue, useUpdatableState } from \"../hooks\";\nimport { useBaiSignedRequestWithPromise } from \"../helper\";\nimport { useTanQuery } from \"../hooks/reactQueryAlias\";\n\ntype VFolder = {\n  name: string;\n  id: string;\n  quota_scope_id: string;\n  host: string;\n  status: string;\n  usage_mode: string;\n  created_at: string;\n  is_owner: boolean;\n  permission: string;\n  user: null;\n  group: string;\n  creator: string;\n  user_email: null;\n  group_name: string;\n  ownership_type: string;\n  type: string;\n  cloneable: boolean;\n  max_files: number;\n  max_size: null | number;\n  cur_size: number;\n};\n\ninterface VFolderSelectProps extends SelectProps {\n  autoSelectDefault?: boolean;\n  filter?: (vFolder: VFolder) => boolean;\n}\n\nconst VFolderSelect: React.FC<VFolderSelectProps> = ({\n  filter,\n  autoSelectDefault,\n  ...selectProps\n}) => {\n  const currentProject = useCurrentProjectValue();\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  // const { vfolder_list } = useLazyLoadQuery<VFolderSelectQuery>(\n  //   graphql`\n  //     # query VFolderSelectQuery($group_id: UUID) {\n  //     query VFolderSelectQuery {\n  //       vfolder_list(limit: 20, offset: 0) {\n  //         # vfolder_list(limit: 20, offset: 0, group_id: $group_id) {\n  //         items {\n  //           id\n  //           name\n  //           status\n  //           usage_mode\n  //           ownership_type\n  //           user_email\n  //           group\n  //           group_name\n  //         }\n  //         total_count\n  //       }\n  //     }\n  //   `,\n  //   {\n  //     // group_id: currentProject.id,\n  //   },\n  //   {\n  //     fetchPolicy: \"store-and-network\",\n  //   }\n  // );\n  // console.log(\"vfolder_list\", vfolder_list);\n  const [key, checkUpdate] = useUpdatableState(\"first\");\n\n  const { data } = useTanQuery({\n    queryKey: [\"VFolderSelectQuery\", key],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: \"GET\",\n        url: `/folders?group_id=${currentProject.id}`,\n      }) as Promise<VFolder[]>;\n    },\n    staleTime: 0,\n  });\n\n  const filteredVFolders = filter ? _.filter(data, filter) : data;\n\n  const autoSelectedOption = _.first(filteredVFolders)\n    ? {\n        label: _.first(filteredVFolders)?.name,\n        value: _.first(filteredVFolders)?.name,\n      }\n    : undefined;\n  useEffect(() => {\n    if (autoSelectDefault && autoSelectedOption) {\n      selectProps.onChange?.(autoSelectedOption.value, autoSelectedOption);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoSelectDefault]);\n  return (\n    <Select\n      showSearch\n      {...selectProps}\n      onDropdownVisibleChange={(open) => {\n        if (open) {\n          startTransition(() => {\n            checkUpdate();\n          });\n        }\n      }}\n    >\n      {_.map(filteredVFolders, (vfolder) => {\n        return (\n          <Select.Option value={vfolder?.name}>{vfolder?.name}</Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default VFolderSelect;\n","import { Card, Form, Input, Modal, ModalProps, theme, Switch } from \"antd\";\nimport React, { Suspense } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport SliderInputItem from \"./SliderInputFormItem\";\nimport ImageEnvironmentSelectFormItems, {\n  Image,\n  ImageEnvironmentFormInput,\n} from \"./ImageEnvironmentSelectFormItems\";\nimport FlexActivityIndicator from \"./FlexActivityIndicator\";\nimport _ from \"lodash\";\nimport ResourceGroupSelect from \"./ResourceGroupSelect\";\nimport VFolderSelect from \"./VFolderSelect\";\nimport { useTanMutation } from \"../hooks/reactQueryAlias\";\nimport { useCurrentDomainValue } from \"../hooks\";\nimport { baiSignedRequestWithPromise } from \"../helper\";\n\ntype ClusterMode = \"single-node\" | \"multi-node\";\n\ninterface ServiceCreateConfigResourceOptsType {\n  shmem?: number | string;\n}\ninterface ServiceCreateConfigResourceType {\n  cpu: number | string;\n  mem: string;\n  \"cuda.device\"?: number | string;\n  \"cuda.shares\"?: number | string;\n}\n\ninterface ServiceCreateConfigType {\n  model: string;\n  model_version?: string;\n  model_mount_destination: string; // default == \"/models\"\n  environ: object; // environment variable\n  scaling_group: string;\n  resources: ServiceCreateConfigResourceType;\n  resource_opts?: ServiceCreateConfigResourceOptsType;\n}\ninterface ServiceCreateType {\n  name: string;\n  desired_session_count: number;\n  image: string;\n  arch: string;\n  group: string;\n  domain: string;\n  cluster_size: number;\n  cluster_mode: ClusterMode;\n  tag?: string;\n  startup_command?: string;\n  bootstrap_script?: string;\n  owner_access_key?: string;\n  open_to_public: boolean;\n  config: ServiceCreateConfigType;\n}\n\ninterface ServiceLauncherProps extends Omit<ModalProps, \"onOK\" | \"onCancel\"> {\n  extraP?: boolean;\n  onRequestClose: (success?: boolean) => void;\n}\ninterface ServiceLauncherFormInput extends ImageEnvironmentFormInput {\n  serviceName: string;\n  gpu: number;\n  cpu: number;\n  mem: number;\n  shmem: number;\n  resourceGroup: string;\n  vFolderName: string;\n  desiredRoutingCount: number;\n  openToPublic: boolean;\n}\n\nconst ServiceLauncherModal: React.FC<ServiceLauncherProps> = ({\n  extraP,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  // const [modalText, setModalText] = useState(\"Content of the modal\");\n  const currentDomain = useCurrentDomainValue();\n  const [form] = Form.useForm<ServiceLauncherFormInput>();\n\n  const mutationToCreateService = useTanMutation({\n    mutationFn: (values: ServiceLauncherFormInput) => {\n      const image: string = `${values.environments.image?.registry}/${values.environments.image?.name}:${values.environments.image?.tag}`;\n      const body: ServiceCreateType = {\n        name: values.serviceName,\n        desired_session_count: values.desiredRoutingCount,\n        image: image,\n        arch: values.environments.image?.architecture as string,\n        group: baiClient.current_group, // current Project Group,\n        domain: currentDomain, // current Domain Group,\n        cluster_size: 1, // FIXME: hardcoded. change it with option later\n        cluster_mode: \"single-node\", // FIXME: hardcoded. change it with option later\n        open_to_public: values.openToPublic,\n        config: {\n          model: values.vFolderName,\n          model_mount_destination: \"/models\", // FIXME: hardcoded. change it with option later\n          environ: {}, // FIXME: hardcoded. change it with option later\n          scaling_group: values.resourceGroup,\n          resources: {\n            cpu: values.cpu,\n            mem: values.mem + \"G\",\n            \"cuda.shares\": values.gpu,\n          },\n        },\n      };\n      if (values.shmem && values.shmem > 0) {\n        body[\"config\"].resource_opts = {\n          shmem: values.shmem,\n        };\n      }\n      return baiSignedRequestWithPromise({\n        method: \"POST\",\n        url: \"/services\",\n        body,\n        client: baiClient,\n      });\n    },\n  });\n  // const scalingGroupList = use;\n  // modelStorageList: Record<string, any>[];\n  // environmentList: Record<string, any>[];\n  // name?: string;\n  // cpu: number | string;\n  // mem: number | string;\n  // npu?: number | string;\n  // shmem?: number | string;\n\n  // Apply any operation after clicking OK button\n  const handleOk = () => {\n    // setModalText(\"Lorem Ipsum\");\n    // setConfirmLoading(true);\n    // // TODO: send request to start service to manager server\n    // setTimeout(() => {\n    //   setConfirmLoading(false);\n    // }, 2000);\n    form.validateFields().then((values) => {\n      mutationToCreateService.mutate(values, {\n        onSuccess: () => {\n          console.log(\"service created\");\n          onRequestClose(true);\n        },\n        onError: (error) => {\n          console.log(error);\n          // TODO: show error message\n        },\n      });\n      new Promise((resolve, reject) => {}).then(() => {\n        onRequestClose(true);\n      });\n    });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <Modal\n      title=\"Title\"\n      onOk={handleOk}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      maskClosable={false}\n      confirmLoading={mutationToCreateService.isLoading}\n      {...modalProps}\n    >\n      <Suspense fallback={<FlexActivityIndicator />}>\n        <Form\n          disabled={mutationToCreateService.isLoading}\n          form={form}\n          preserve={false}\n          layout=\"vertical\"\n          labelCol={{ span: 12 }}\n          initialValues={\n            {\n              cpu: 1,\n              gpu: 0,\n              mem: 0.25,\n              shmem: 0,\n              desiredRoutingCount: 1,\n            } as ServiceLauncherFormInput\n          }\n        >\n          <Form.Item\n            //TODO: i18n\n            label={\"Service Name\"}\n            name=\"serviceName\"\n            rules={[\n              {\n                max: 20,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"resourceGroup\"\n            label={t(\"session.ResourceGroup\")}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <ResourceGroupSelect autoSelectDefault />\n          </Form.Item>\n          <Form.Item name=\"openToPublic\" label=\"Open To Public\">\n            <Switch></Switch>\n          </Form.Item>\n          <Form.Item\n            name={\"vFolderName\"}\n            label={t(\"session.launcher.ModelStorageToMount\")}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <VFolderSelect\n              filter={(vf) => vf.usage_mode === \"model\"}\n              autoSelectDefault\n            />\n          </Form.Item>\n          <SliderInputItem\n            label={\"Desired Routing Count\"}\n            name=\"desiredRoutingCount\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            inputNumberProps={{\n              //TODO: change unit based on resource limit\n              addonAfter: \"#\",\n            }}\n            required\n          />\n          <Card\n            style={{\n              marginBottom: token.margin,\n            }}\n          >\n            <ImageEnvironmentSelectFormItems\n            // //TODO: test with real inference images\n            // filter={(image) => {\n            //   return !!_.find(image?.labels, (label) => {\n            //     return (\n            //       label?.key === \"ai.backend.role\" &&\n            //       label.value === \"INFERENCE\" //['COMPUTE', 'INFERENCE', 'SYSTEM']\n            //     );\n            //   });\n            // }}\n            />\n            <Form.Item\n              noStyle\n              shouldUpdate={(prev, cur) =>\n                prev.environments?.image?.digest !==\n                cur.environments?.image?.digest\n              }\n            >\n              {({ getFieldValue }) => {\n                // TODO: change min/max based on selected images resource limit and current user limit\n                const currentImage: Image =\n                  getFieldValue(\"environments\")?.image;\n\n                return (\n                  <>\n                    <SliderInputItem\n                      name={\"cpu\"}\n                      label={t(\"session.launcher.CPU\")}\n                      // tooltip={t(\"session.launcher.DescCPU\")}\n\n                      min={parseInt(\n                        _.find(\n                          currentImage?.resource_limits,\n                          (i) => i?.key === \"cpu\"\n                        )?.min || \"0\"\n                      )}\n                      max={parseInt(\n                        _.find(\n                          currentImage?.resource_limits,\n                          (i) => i?.key === \"cpu\"\n                        )?.max || \"100\"\n                      )}\n                      inputNumberProps={{\n                        addonAfter: t(\"session.launcher.Core\"),\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                    <SliderInputItem\n                      name={\"mem\"}\n                      label={t(\"session.launcher.Memory\")}\n                      // tooltip={t(\"session.launcher.DescMemory\")}\n                      max={30}\n                      inputNumberProps={{\n                        addonAfter: \"GB\",\n                      }}\n                      step={0.05}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                    <SliderInputItem\n                      name={\"shmem\"}\n                      label={t(\"session.launcher.SharedMemory\")}\n                      // tooltip={t(\"session.launcher.DescSharedMemory\")}\n                      max={30}\n                      step={0.1}\n                      inputNumberProps={{\n                        addonAfter: \"GB\",\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                    <SliderInputItem\n                      style={{ marginBottom: 0 }}\n                      name={\"gpu\"}\n                      label={t(\"session.launcher.AIAccelerator\")}\n                      // tooltip={t(\"session.launcher.DescAIAccelerator\")}\n                      max={30}\n                      step={0.1}\n                      inputNumberProps={{\n                        //TODO: change unit based on resource limit\n                        addonAfter: \"GPU\",\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                  </>\n                );\n              }}\n            </Form.Item>\n          </Card>\n        </Form>\n      </Suspense>\n    </Modal>\n  );\n};\n\nexport default ServiceLauncherModal;\n","import React from \"react\";\n\nimport { Form, InputNumber, Modal, ModalProps, theme } from \"antd\";\n// import { useTranslation } from \"react-i18next\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport { baiSignedRequestWithPromise } from \"../helper\";\nimport { useTanMutation } from \"../hooks/reactQueryAlias\";\nimport Flex from \"./Flex\";\nimport { useFragment } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { ModelServiceSettingModal_endpoint$key } from \"./__generated__/ModelServiceSettingModal_endpoint.graphql\";\n\ninterface Props extends ModalProps {\n  endpointFrgmt: ModelServiceSettingModal_endpoint$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface ServiceSettingFormInput {\n  desired_session_count: number;\n}\n\nconst ModelServiceSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  endpointFrgmt,\n  ...props\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  // const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment ModelServiceSettingModal_endpoint on Endpoint {\n        endpoint_id\n        desired_session_count\n      }\n    `,\n    endpointFrgmt\n  );\n\n  const mutationToUpdateService = useTanMutation({\n    mutationFn: (values: ServiceSettingFormInput) => {\n      const body = {\n        to: values.desired_session_count,\n      };\n      return baiSignedRequestWithPromise({\n        method: \"POST\",\n        url: `/services/${endpoint?.endpoint_id}/scale`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToUpdateService.mutate(values, {\n          onSuccess: () => {\n            console.log(\"service updated\");\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            console.log(error);\n            // TODO: show error message\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{\n        loading: mutationToUpdateService.isLoading,\n      }}\n      title={\"Edit Model Service\"} // TODO: translate needed\n    >\n      <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n        <Form\n          form={form}\n          preserve={false}\n          // labelCol={{ span: 12 }}\n          // wrapperCol={{ span: 6 }}\n          validateTrigger={[\"onChange\", \"onBlur\"]}\n          initialValues={{\n            desired_session_count: endpoint?.desired_session_count,\n          }}\n          style={{ marginBottom: token.marginLG, marginTop: token.margin }}\n        >\n          <Form.Item\n            name=\"desired_session_count\"\n            label=\"Desired Session Count\"\n            rules={[\n              {\n                pattern: /^[0-9]+$/,\n                message: \"Only Allows non-negative integers.\",\n              },\n            ]}\n          >\n            <InputNumber type=\"number\" min={0} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </Modal>\n  );\n};\n\nexport default ModelServiceSettingModal;\n","import {\n  Button,\n  ConfigProvider,\n  Modal,\n  Table,\n  Tabs,\n  Tag,\n  Typography,\n  theme,\n} from \"antd\";\nimport React, {\n  PropsWithChildren,\n  Suspense,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n} from \"react\";\nimport Flex from \"../components/Flex\";\nimport { useTranslation } from \"react-i18next\";\nimport ServiceLauncherModal from \"../components/ServiceLauncherModal\";\nimport {\n  useCurrentProjectValue,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from \"../hooks\";\nimport { baiSignedRequestWithPromise } from \"../helper\";\nimport { useTanMutation } from \"../hooks/reactQueryAlias\";\nimport ModelServiceSettingModal from \"../components/ModelServiceSettingModal\";\nimport { useRafInterval } from \"ahooks\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport {\n  ServingListPageQuery,\n  ServingListPageQuery$data,\n} from \"./__generated__/ServingListPageQuery.graphql\";\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\n// FIXME: need to apply filtering type of service later\ntype TabKey = \"services\"; //  \"running\" | \"finished\" | \"others\";\n\ntype Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<ServingListPageQuery$data>[\"endpoint_list\"]\n    >[\"items\"]\n  >[0]\n>;\n\nconst ServingListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenServiceLauncher, setIsOpenServiceLauncher] = useState(false);\n  const [selectedModelService, setSelectedModelService] = useState<Endpoint>();\n  const [isOpenModelServiceSettingModal, setIsOpenModelServiceSettingModal] =\n    useState(false);\n\n  // const [paginationState, setPaginationState] = useState<{\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [\n    isOpenModelServiceTerminatingModal,\n    setIsOpenModelServiceTerminatingModal,\n  ] = useState(false);\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState(\"initial-fetch\");\n  // FIXME: need to apply filtering type of service later\n  const [selectedTab, setSelectedTab] = useState<TabKey>(\"services\");\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    useLazyLoadQuery<ServingListPageQuery>(\n      graphql`\n        query ServingListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: \"name != 'koalpaca-test'\"\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              image\n              model\n              domain\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              ...ModelServiceSettingModal_endpoint\n            }\n          }\n        }\n      `,\n      {\n        offset: (paginationState.current - 1) * paginationState.pageSize,\n        limit: paginationState.pageSize,\n        projectID: curProject.id,\n      },\n      {\n        fetchPolicy:\n          servicesFetchKey === \"initial-fetch\"\n            ? \"store-and-network\"\n            : \"network-only\",\n        fetchKey: servicesFetchKey,\n      }\n    );\n\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, \"name\");\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation({\n    mutationFn: () => {\n      return baiSignedRequestWithPromise({\n        method: \"DELETE\",\n        url: \"/services/\" + selectedModelService?.endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n  // const { data, refetch } = useTanQuery({\n  //   queryKey: \"terminateModelService\",\n  //   queryFn: () => {\n  //     return baiSignedRequestWithPromise({\n  //       method: \"DELETE\",\n  //       url: \"/services/\" + selectedModelService?.id,\n  //       client: baiClient,\n  //     });\n  //   },\n  //   onSuccess: (res: any) => {\n  //     console.log(res);\n  //   },\n  //   onError: (err: any) => {\n  //     console.log(err);\n  //   },\n  //   enabled: false,\n  //   // for to render even this query fails\n  //   suspense: true,\n  // });\n\n  return (\n    <>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{ padding: token.padding, gap: token.margin }}\n      >\n        {/* <Card bordered title={t(\"summary.ResourceStatistics\")}>\n          <p>SessionList</p>\n        </Card> */}\n        {/* <Card bodyStyle={{ paddingTop: 0 }}> */}\n        <Flex direction=\"column\" align=\"stretch\">\n          <Flex style={{ flex: 1 }}>\n            <ConfigProvider\n              theme={{\n                algorithm: theme.darkAlgorithm,\n                components: {\n                  Tabs: {\n                    colorPrimary: \"#92E868\",\n                  },\n                },\n              }}\n            >\n              <Tabs\n                // type=\"card\"\n                activeKey={selectedTab}\n                onChange={(key) => setSelectedTab(key as TabKey)}\n                tabBarStyle={{ marginBottom: 0 }}\n                style={{\n                  width: \"100%\",\n                  backgroundColor: \"#2A2C30\",\n                  paddingLeft: token.paddingMD,\n                  paddingRight: token.paddingMD,\n                  borderTopLeftRadius: token.borderRadius,\n                  borderTopRightRadius: token.borderRadius,\n                }}\n                items={[\n                  { key: \"services\", label: t(\"modelService.Services\") },\n                  // FIXME: need to apply filtering type of service later\n                  // {\n                  //   key: \"running\",\n                  //   label: t(\"session.Running\"),\n                  // },\n                  // {\n                  //   key: \"finished\",\n                  //   label: t(\"session.Finished\"),\n                  // },\n                  // {\n                  //   key: \"others\",\n                  //   label: t(\"session.Others\"),\n                  // },\n                ]}\n                tabBarExtraContent={{\n                  right: (\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        setIsOpenServiceLauncher(true);\n                      }}\n                    >\n                      Start Service\n                    </Button>\n                  ),\n                }}\n              />\n            </ConfigProvider>\n            {/* <Button type=\"ghost\" icon={<MoreOutlined />} /> */}\n          </Flex>\n          {/* <Button type=\"primary\" icon={<PoweroffOutlined />}>\n          시작\n        </Button> */}\n\n          {/* @ts-ignore */}\n          {/* <backend-ai-session-launcher\n        location=\"session\"\n        id=\"session-launcher\"\n        active\n      /> */}\n          <Suspense fallback={<div>loading..</div>}>\n            {/* <ServingList\n              loading={isRefetchPending}\n              projectId={curProject.id}\n              status={[]}\n              extraFetchKey={\"\"}\n              dataSource={modelServiceList}\n              onClickEdit={(row) => {\n                setIsOpenModelServiceSettingModal(true);\n                setSelectedModelService(row);\n              }}\n              onClickTerminate={(row) => {\n                setIsOpenModelServiceTerminatingModal(true);\n                setSelectedModelService(row);\n              }}\n            /> */}\n            <Table\n              loading={isRefetchPending}\n              dataSource={(sortedEndpointList || []) as Endpoint[]}\n              columns={[\n                {\n                  title: \"Endpoint name\",\n                  dataIndex: \"endpoint_id\",\n                  fixed: \"left\",\n                  render: (endpoint_id, row) => (\n                    <Link to={\"/serving/\" + endpoint_id}>{row.name}</Link>\n                  ),\n                },\n                {\n                  title: \"Endpoint Id\",\n                  dataIndex: \"endpoint_id\",\n                  width: 310,\n                  render: (endpoint_id) => (\n                    <Typography.Text code>{endpoint_id}</Typography.Text>\n                  ),\n                },\n                {\n                  title: \"Controls\",\n                  dataIndex: \"controls\",\n                  render: (text, row) => (\n                    <Flex direction=\"row\" align=\"stretch\">\n                      <Button\n                        type=\"text\"\n                        icon={<SettingOutlined />}\n                        style={\n                          row.desired_session_count > 0\n                            ? {\n                                color: \"#29b6f6\",\n                              }\n                            : undefined\n                        }\n                        disabled={row.desired_session_count < 0}\n                        onClick={() => {\n                          setIsOpenModelServiceSettingModal(true);\n                          setSelectedModelService(row);\n                        }}\n                      />\n                      <Button\n                        type=\"text\"\n                        icon={\n                          <DeleteOutlined\n                            style={\n                              row.desired_session_count > 0\n                                ? {\n                                    color: token.colorError,\n                                  }\n                                : undefined\n                            }\n                          />\n                        }\n                        disabled={row.desired_session_count < 0}\n                        onClick={() => {\n                          setIsOpenModelServiceTerminatingModal(true);\n                          setSelectedModelService(row);\n                        }}\n                      />\n                    </Flex>\n                  ),\n                },\n                {\n                  title: \"Status\",\n                  dataIndex: \"status\",\n                  render: (text, row) => (\n                    <Tag\n                      color={applyStatusColor(\n                        row.desired_session_count > 0 ? \"RUNNING\" : \"TERMINATED\"\n                      )}\n                    >\n                      {row.desired_session_count > 0 ? \"RUNNING\" : \"TERMINATED\"}\n                    </Tag>\n                  ),\n                },\n                {\n                  title: \"Desired Session Count\",\n                  dataIndex: \"desired_session_count\",\n                  render: (desired_session_count) => {\n                    return desired_session_count < 0\n                      ? \"-\"\n                      : desired_session_count;\n                  },\n                },\n                {\n                  title: (\n                    <Flex direction=\"column\" align=\"start\">\n                      Routings Count\n                      <br />\n                      <Typography.Text\n                        type=\"secondary\"\n                        style={{ fontWeight: \"normal\" }}\n                      >\n                        (active/total)\n                      </Typography.Text>\n                    </Flex>\n                  ),\n                  // dataIndex: \"active_route_count\",\n                  render: (text, row) => {\n                    return (\n                      _.filter(row.routings, (r) => r?.status === \"healthy\")\n                        .length +\n                      \" / \" +\n                      row.routings?.length\n                    );\n                    // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n                  },\n                },\n                {\n                  title: \"Public\",\n                  render: (text, row) =>\n                    row.open_to_public ? (\n                      <CheckOutlined style={{ color: token.colorSuccess }} />\n                    ) : (\n                      <CloseOutlined\n                        style={{ color: token.colorTextSecondary }}\n                      />\n                    ),\n                },\n              ]}\n              pagination={false}\n              // pagination={{\n              //   pageSize: paginationState.pageSize,\n              //   current: paginationState.current,\n              //   total: modelServiceList?.total_count || 0,\n              //   showSizeChanger: true,\n              //   // showTotal(total, range) {\n              //   //   return `${range[0]}-${range[1]} of ${total}`;\n              //   // },\n              //   onChange(page, pageSize) {\n              //     startRefetchTransition(() => {\n              //       setPaginationState({\n              //         current: page,\n              //         pageSize: pageSize || 100,\n              //       });\n              //     });\n              //   },\n              // }}\n            />\n          </Suspense>\n        </Flex>\n      </Flex>\n      <Modal\n        open={isOpenModelServiceTerminatingModal}\n        // TODO: translation\n        title={t(\"dialog.title.LetsDouble-Check\")}\n        okButtonProps={{\n          loading: terminateModelServiceMutation.isLoading,\n        }}\n        onOk={() => {\n          // FIXME: any better idea for handling result?\n          terminateModelServiceMutation.mutate(undefined, {\n            onSuccess: (res) => {\n              startRefetchTransition(() => {\n                updateServicesFetchKey();\n              });\n              setIsOpenModelServiceTerminatingModal(false);\n            },\n            onError: (err) => {\n              console.log(\"terminateModelServiceMutation Error\", err);\n            },\n          });\n        }}\n        onCancel={() => {\n          setIsOpenModelServiceTerminatingModal(false);\n        }}\n      >\n        <Flex direction=\"column\" align=\"stretch\" justify=\"center\">\n          <p>\n            {\"You are about to terminate \" +\n              (selectedModelService?.name || \"\") +\n              \".\"}\n          </p>\n          <p>{t(\"dialog.ask.DoYouWantToProceed\")}</p>\n        </Flex>\n      </Modal>\n      <ModelServiceSettingModal\n        open={isOpenModelServiceSettingModal}\n        onRequestClose={(success) => {\n          setIsOpenModelServiceSettingModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n        endpointFrgmt={selectedModelService || null}\n      />\n      <ServiceLauncherModal\n        open={isOpenServiceLauncher}\n        onRequestClose={(success) => {\n          setIsOpenServiceLauncher(!isOpenServiceLauncher);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n      />\n    </>\n  );\n};\n\nconst applyStatusColor = (status = \"\") => {\n  let color = \"default\";\n  switch (status.toUpperCase()) {\n    case \"RUNNING\":\n      color = \"success\";\n      break;\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n  return color;\n};\n\nexport default ServingListPage;\n","/**\n * @generated SignedSource<<53d1957c9257f10aa696d12851115015>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingListPageQuery$variables = {\n  limit: number;\n  offset: number;\n  projectID?: any | null;\n};\nexport type ServingListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly desired_session_count: number;\n      readonly domain: string | null;\n      readonly endpoint_id: any | null;\n      readonly image: string | null;\n      readonly model: any | null;\n      readonly name: string | null;\n      readonly open_to_public: boolean | null;\n      readonly project: string | null;\n      readonly resource_group: string | null;\n      readonly resource_slots: any | null;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null;\n        readonly routing_id: any | null;\n        readonly session: any | null;\n        readonly status: string | null;\n        readonly traffic_ratio: number | null;\n      } | null> | null;\n      readonly url: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n    } | null>;\n    readonly total_count: number;\n  } | null;\n};\nexport type ServingListPageQuery = {\n  response: ServingListPageQuery$data;\n  variables: ServingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"filter\",\n    \"value\": \"name != 'koalpaca-test'\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v15/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v16/*: any*/),\n                  (v17/*: any*/),\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ModelServiceSettingModal_endpoint\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v16/*: any*/),\n                  (v17/*: any*/),\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v21/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"e8962b0b84d03682b80681663f7f0031\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ServingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ServingListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: \\\"name != 'koalpaca-test'\\\") {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      image\\n      model\\n      domain\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      ...ModelServiceSettingModal_endpoint\\n      id\\n    }\\n  }\\n}\\n\\nfragment ModelServiceSettingModal_endpoint on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"8c74706ec30c99bd1de50378d45b21bf\";\n\nexport default node;\n"],"names":["_ref","objectValues","_ref$values","values","length","_","map","value","label","color","_jsx","Flex","direction","children","objValue","idx","Tag","style","undefined","margin","marginRight","zIndex","_ref$direction","_ref$wrap","wrap","_ref$justify","justify","_ref$align","align","_ref$gap","gap","restProps","_objectWithoutProperties","_excluded","token","theme","transferConst","transferConstStyle","el","tempTxt","flexStyle","_objectSpread","display","flexDirection","flexWrap","justifyContent","alignItems","backgroundColor","border","boxSizing","flexBasis","flexShrink","listStyle","minHeight","minWidth","padding","position","textDecoration","toUpperCase","_jsxs","width","height","Spin","indicator","LoadingOutlined","spin","ImageMetaIcon","bordered","image","_ref$style","alt","arguments","_useBackendaiImageMet","useBackendaiImageMetaData","getImageIcon","_slicedToArray","src","React","node","v0","v1","v2","hash","newLineToBrElement","text","separatorRegExp","split","line","index","match","baiSignedRequestWithPromise","method","url","_ref$body","body","client","request","newSignedRequest","_wrapWithPromise","useBaiSignedRequestWithPromise","baiClient","useSuspendedBackendaiClient","_ref2","_ref2$body","_humanReadableDecimalSize","bytes","decimalPoint","k","Math","pow","i","floor","log","round","parseFloat","toFixed","GBToBytes","gigabyte","bytesToGB","addQuotaScopeTypePrefix","type","str","startsWith","concat","usageIndicatorColor","percentage","useUpdatableState","initialValue","_useState3","useState","Date","toISOString","_useState4","setValue","newValue","useDateISOState","useCurrentDomainValue","_config","domainName","useCurrentProjectValue","_useState5","name","current_group","id","groupIds","_useState6","project","_setProject","useEffect","listener","e","newProjectName","detail","document","addEventListener","removeEventListener","useAnonymousBackendaiClient","api_endpoint","useMemo","clientConfig","globalThis","BackendAIClientConfig","BackendAIClient","useQuery","queryKey","queryFn","Promise","resolve","backendaiclient","ready","retry","suspense","data","metadata","fetch","then","response","json","getImageMeta","imageName","key","tags","specs","_split","_split2","getImageAliasName","imageInfo","path","icon","getImageTags","getBaseVersion","getBaseImage","useTanQuery","useTanMutation","useMutation","min","max","step","rules","required","inputNumberProps","sliderProps","formItemProps","Form","flex","noStyle","Slider","InputNumber","keyword","keyIndex","toLowerCase","indexOf","substring","getImageFullName","registry","tag","architecture","filter","form","currentEnvironmentsFormData","_useState","_useState2","environmentSearch","setEnvironmentSearch","versionSearch","setVersionSearch","t","useTranslation","_useBackendaiImageMet2","images","useLazyLoadQuery","_ImageEnvironmentSelectFormItemsQuery","require","installed","fetchPolicy","_imageGroups$","_imageGroups$$environ","_nextEnvironmentGroup","nextEnvironmentGroup","nextEnvironmentName","environment","imageGroups","environmentGroups","environmentName","group","version","_nextEnvironmentGroup2","nextNewImage","setFieldsValue","environments","groupBy","_metadata$imageInfo$g","groupName","_metadata$imageInfo$g2","sortBy","item","_Fragment","marginBottom","Select","showSearch","autoClearSearchValue","labelInValue","searchValue","onSearch","defaultActiveFirstOption","optionLabelProp","environmentGroup","firstImage","TextHighlighter","shouldUpdate","prev","cur","_prev$environments","_cur$environments","_selectedEnvironmentG","selectedEnvironmentGroup","getFieldValue","_getFieldValue","onChange","_image$tag","_metadata$tagAlias$re","_metadata$tagAlias$re2","_ref3","_ref4","requirements","tagAlias","v","join","Divider","DoubleTag","digest","hidden","Input","projectId","autoSelectDefault","selectProps","baiRequestWithPromise","currentProject","_useUpdatableState","_useUpdatableState2","checkUpdate","staleTime","resourceGroups","scaling_groups","autoSelectedOption","_selectProps$onChange","call","defaultValue","onDropdownVisibleChange","open","startTransition","resourceGroup","_$first","_$first2","filteredVFolders","vfolder","extraP","onRequestClose","modalProps","currentDomain","_Form$useForm","mutationToCreateService","mutationFn","_values$environments$","_values$environments$2","_values$environments$3","_values$environments$4","serviceName","desired_session_count","desiredRoutingCount","arch","domain","cluster_size","cluster_mode","open_to_public","openToPublic","config","model","vFolderName","model_mount_destination","environ","scaling_group","resources","cpu","mem","gpu","shmem","resource_opts","Modal","title","onOk","validateFields","mutate","onSuccess","console","onError","error","reject","onCancel","destroyOnClose","maskClosable","confirmLoading","isLoading","Suspense","fallback","FlexActivityIndicator","disabled","preserve","layout","labelCol","span","initialValues","ResourceGroupSelect","Switch","VFolderSelect","vf","usage_mode","SliderInputItem","addonAfter","Card","ImageEnvironmentSelectFormItems","_prev$environments$im","_cur$environments$ima","_$find","_$find2","currentImage","parseInt","resource_limits","endpointFrgmt","props","endpoint","useFragment","_ModelServiceSettingModal_endpoint","mutationToUpdateService","to","endpoint_id","catch","err","okButtonProps","loading","validateTrigger","marginLG","marginTop","pattern","message","applyStatusColor","curProject","isOpenServiceLauncher","setIsOpenServiceLauncher","selectedModelService","setSelectedModelService","isOpenModelServiceSettingModal","setIsOpenModelServiceSettingModal","_useState7","current","pageSize","paginationState","_useTransition","useTransition","_useTransition2","isRefetchPending","startRefetchTransition","_useState9","_useState10","isOpenModelServiceTerminatingModal","setIsOpenModelServiceTerminatingModal","servicesFetchKey","updateServicesFetchKey","_useState11","_useState12","selectedTab","setSelectedTab","useRafInterval","startTransitionWithoutPendingState","modelServiceList","_ServingListPageQuery","offset","limit","projectID","fetchKey","endpoint_list","sortedEndpointList","items","terminateModelServiceMutation","ConfigProvider","algorithm","components","Tabs","colorPrimary","activeKey","tabBarStyle","paddingLeft","paddingMD","paddingRight","borderTopLeftRadius","borderRadius","borderTopRightRadius","tabBarExtraContent","right","Button","onClick","Table","dataSource","columns","dataIndex","fixed","render","row","Link","Typography","code","SettingOutlined","DeleteOutlined","colorError","fontWeight","_row$routings","routings","r","status","CheckOutlined","colorSuccess","CloseOutlined","colorTextSecondary","pagination","res","ModelServiceSettingModal","success","ServiceLauncherModal","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21"],"sourceRoot":""}