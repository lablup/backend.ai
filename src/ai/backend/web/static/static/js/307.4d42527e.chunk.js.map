{"version":3,"file":"static/js/307.4d42527e.chunk.js","mappings":"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","sources":["components/TableColumnsSettingModal.tsx","../node_modules/ahooks/es/useRafInterval/index.js","pages/ServingListPage.tsx","pages/__generated__/ServingListPageQuery.graphql.ts","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js"],"sourcesContent":["import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils';\nvar setRafInterval = function (callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setInterval(callback, delay)\n    };\n  }\n  var start = new Date().getTime();\n  var handle = {\n    id: 0\n  };\n  var loop = function () {\n    var current = new Date().getTime();\n    if (current - start >= delay) {\n      callback();\n      start = new Date().getTime();\n    }\n    handle.id = requestAnimationFrame(loop);\n  };\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\nvar clearRafInterval = function (handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearInterval(handle.id);\n  }\n  cancelAnimationFrame(handle.id);\n};\nfunction useRafInterval(fn, delay, options) {\n  var immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  var fnRef = useLatest(fn);\n  var timerRef = useRef();\n  useEffect(function () {\n    if (!isNumber(delay) || delay < 0) return;\n    if (immediate) {\n      fnRef.current();\n    }\n    timerRef.current = setRafInterval(function () {\n      fnRef.current();\n    }, delay);\n    return function () {\n      if (timerRef.current) {\n        clearRafInterval(timerRef.current);\n      }\n    };\n  }, [delay]);\n  var clear = useCallback(function () {\n    if (timerRef.current) {\n      clearRafInterval(timerRef.current);\n    }\n  }, []);\n  return clear;\n}\nexport default useRafInterval;","import BAIModal from '../components/BAIModal';\nimport EndpointOwnerInfo from '../components/EndpointOwnerInfo';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport Flex from '../components/Flex';\nimport ServiceLauncherModal from '../components/ServiceLauncherModal';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport { baiSignedRequestWithPromise } from '../helper';\nimport {\n  useCurrentProjectValue,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\n// import { getSortOrderByName } from '../hooks/reactPaginationQueryOptions';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport {\n  ServingListPageQuery,\n  ServingListPageQuery$data,\n} from './__generated__/ServingListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useRafInterval } from 'ahooks';\nimport { useLocalStorageState } from 'ahooks';\nimport { Button, Card, Table, Typography, theme, message } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  Suspense,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { Link } from 'react-router-dom';\n\n// FIXME: need to apply filtering type of service later\ntype TabKey = 'services'; //  \"running\" | \"finished\" | \"others\";\n\nexport type Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<ServingListPageQuery$data>['endpoint_list']\n    >['items']\n  >[0]\n>;\n\nconst ServingListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenServiceLauncher, setIsOpenServiceLauncher] = useState(false);\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [editingModelService, setEditingModelService] =\n    useState<Endpoint | null>(null);\n  const [terminatingModelService, setTerminatingModelService] =\n    useState<Endpoint | null>(null);\n\n  // const [paginationState, setPaginationState] = useState<{\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [isOpenModelServiceTerminatingModal, setIsOpenServiceTerminatingModal] =\n    useState(false);\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState('initial-fetch');\n  // FIXME: need to apply filtering type of service later\n  const [selectedTab] = useState<TabKey>('services');\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  const columns: ColumnsType<Endpoint> = [\n    {\n      title: t('modelService.EndpointName'),\n      dataIndex: 'endpoint_id',\n      key: 'endpointName',\n      fixed: 'left',\n      render: (endpoint_id, row) => (\n        <Link to={'/serving/' + endpoint_id}>{row.name}</Link>\n      ),\n    },\n    {\n      title: t('modelService.EndpointId'),\n      dataIndex: 'endpoint_id',\n      key: 'endpoint_id',\n      width: 310,\n      render: (endpoint_id) => (\n        <Typography.Text code>{endpoint_id}</Typography.Text>\n      ),\n    },\n    {\n      title: t('modelService.ServiceEndpoint'),\n      dataIndex: 'endpoint_id',\n      key: 'url',\n      render: (endpoint_id, row) =>\n        row.url ? (\n          <Typography.Link copyable href={row.url} target=\"_blank\">\n            {row.url}\n          </Typography.Link>\n        ) : (\n          '-'\n        ),\n    },\n    {\n      title: t('modelService.Controls'),\n      dataIndex: 'controls',\n      key: 'controls',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            style={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n                ? undefined\n                : {\n                    color: token.colorInfo,\n                  }\n            }\n            disabled={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n            }\n            onClick={() => {\n              setIsOpenServiceLauncher(!isOpenServiceLauncher);\n              setEditingModelService(row);\n            }}\n          />\n          <Button\n            type=\"text\"\n            icon={\n              <DeleteOutlined\n                style={\n                  row.desired_session_count < 0 ||\n                  row.status?.toLowerCase() === 'destroying'\n                    ? undefined\n                    : {\n                        color: token.colorError,\n                      }\n                }\n              />\n            }\n            disabled={\n              row.desired_session_count < 0 ||\n              row.status?.toLowerCase() === 'destroying'\n            }\n            onClick={() => {\n              setIsOpenServiceTerminatingModal(true);\n              setTerminatingModelService(row);\n            }}\n          />\n        </Flex>\n      ),\n    },\n    {\n      title: t('modelService.Status'),\n      key: 'status',\n      render: (text, row) => <EndpointStatusTag endpointFrgmt={row} />,\n    },\n    ...(baiClient.is_admin\n      ? [\n          {\n            title: t('modelService.Owner'),\n            // created_user_email is refered by EndpointOwnerInfoFragment\n            dataIndex: 'created_user_email',\n            key: 'session_owner',\n            render: (_: string, endpoint_info: Endpoint) => (\n              <EndpointOwnerInfo endpointFrgmt={endpoint_info} />\n            ),\n          },\n        ]\n      : []),\n    {\n      title: t('modelService.CreatedAt'),\n      dataIndex: 'created_at',\n      key: 'createdAt',\n      render: (created_at) => {\n        return dayjs(created_at).format('ll LT');\n      },\n      defaultSortOrder: 'descend',\n      sortDirections: ['descend', 'ascend', 'descend'],\n      sorter: (a, b) => {\n        const date1 = dayjs(a.created_at);\n        const date2 = dayjs(b.created_at);\n        return date1.diff(date2);\n      },\n    },\n    {\n      title: t('modelService.DesiredSessionCount'),\n      dataIndex: 'desired_session_count',\n      key: 'desiredSessionCount',\n      render: (desired_session_count) => {\n        return desired_session_count < 0 ? '-' : desired_session_count;\n      },\n    },\n    {\n      title: (\n        <Flex direction=\"column\" align=\"start\">\n          {t('modelService.RoutingsCount')}\n          <br />\n          <Typography.Text type=\"secondary\" style={{ fontWeight: 'normal' }}>\n            ({t('modelService.Active/Total')})\n          </Typography.Text>\n        </Flex>\n      ),\n      // dataIndex: \"active_route_count\",\n      key: 'routingCount',\n      render: (text, row) => {\n        return (\n          _.filter(row.routings, (r) => r?.status === 'HEALTHY').length +\n          ' / ' +\n          row.routings?.length\n        );\n        // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n      },\n    },\n    {\n      title: t('modelService.Public'),\n      key: 'public',\n      render: (text, row) =>\n        row.open_to_public ? (\n          <CheckOutlined style={{ color: token.colorSuccess }} />\n        ) : (\n          <CloseOutlined style={{ color: token.colorTextSecondary }} />\n        ),\n    },\n  ];\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.ServingListPage.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    // TODO: need to convert LazyLoadQuery to pagination query with option\n    useLazyLoadQuery<ServingListPageQuery>(\n      graphql`\n        query ServingListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: \"name != 'koalpaca-test'\"\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              model\n              domain\n              status\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              created_at @since(version: \"23.09.0\")\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              ...ServiceLauncherModalFragment\n              ...EndpointOwnerInfoFragment\n              ...EndpointStatusTagFragment\n            }\n          }\n        }\n      `,\n      {\n        offset: (paginationState.current - 1) * paginationState.pageSize,\n        limit: paginationState.pageSize,\n        projectID: curProject.id,\n      },\n      {\n        fetchPolicy:\n          servicesFetchKey === 'initial-fetch'\n            ? 'store-and-network'\n            : 'network-only',\n        fetchKey: servicesFetchKey,\n      },\n    );\n\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, 'name');\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation({\n    mutationFn: (endpoint_id: string) => {\n      return baiSignedRequestWithPromise({\n        method: 'DELETE',\n        url: '/services/' + endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n  // const { data, refetch } = useTanQuery({\n  //   queryKey: \"terminateModelService\",\n  //   queryFn: () => {\n  //     return baiSignedRequestWithPromise({\n  //       method: \"DELETE\",\n  //       url: \"/services/\" + editingModelService?.id,\n  //       client: baiClient,\n  //     });\n  //   },\n  //   onSuccess: (res: any) => {\n  //     console.log(res);\n  //   },\n  //   onError: (err: any) => {\n  //     console.log(err);\n  //   },\n  //   enabled: false,\n  //   // for to render even this query fails\n  //   suspense: true,\n  // });\n\n  return (\n    <>\n      <Flex direction=\"column\" align=\"stretch\" gap={'xs'}>\n        {/* <Card bordered title={t(\"summary.ResourceStatistics\")}>\n          <p>SessionList</p>\n        </Card> */}\n        {/* <Card bodyStyle={{ paddingTop: 0 }}> */}\n        <Flex direction=\"column\" align=\"stretch\">\n          <Card\n            tabList={[\n              { key: 'services', label: t('modelService.Services') },\n              // FIXME: need to apply filtering type of service later\n              // {\n              //   key: \"running\",\n              //   label: t(\"session.Running\"),\n              // },\n              // {\n              //   key: \"finished\",\n              //   label: t(\"session.Finished\"),\n              // },\n              // {\n              //   key: \"others\",\n              //   label: t(\"session.Others\"),\n              // },\n            ]}\n            activeTabKey={selectedTab}\n            tabBarExtraContent={\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  setIsOpenServiceLauncher(true);\n                }}\n              >\n                {t('modelService.StartService')}\n              </Button>\n            }\n            styles={{\n              body: {\n                padding: 0,\n                paddingTop: 1,\n              },\n            }}\n            // tabProps={{\n            //   size: 'middle',\n            // }}\n          >\n            <Suspense fallback={<div>loading..</div>}>\n              <Table\n                loading={isRefetchPending}\n                scroll={{ x: 'max-content' }}\n                rowKey={'endpoint_id'}\n                dataSource={(sortedEndpointList || []) as Endpoint[]}\n                columns={columns.filter((column) =>\n                  displayedColumnKeys?.includes(_.toString(column.key)),\n                )}\n\n                // pagination={{\n                //   pageSize: paginationState.pageSize,\n                //   current: paginationState.current,\n                //   total: modelServiceList?.total_count || 0,\n                //   showSizeChanger: true,\n                //   // showTotal(total, range) {\n                //   //   return `${range[0]}-${range[1]} of ${total}`;\n                //   // },\n                //   onChange(page, pageSize) {\n                //     startRefetchTransition(() => {\n                //       setPaginationState({\n                //         current: page,\n                //         pageSize: pageSize || 100,\n                //       });\n                //     });\n                //   },\n                // }}\n              />\n              <Flex\n                justify=\"end\"\n                style={{\n                  padding: token.paddingXXS,\n                }}\n              >\n                <Button\n                  type=\"text\"\n                  icon={<SettingOutlined />}\n                  onClick={() => {\n                    setIsOpenColumnsSetting(true);\n                  }}\n                />\n              </Flex>\n            </Suspense>\n          </Card>\n          {/* <Tabs\n            // type=\"card\"\n            activeKey={selectedTab}\n            onChange={(key) => setSelectedTab(key as TabKey)}\n            tabBarStyle={{ marginBottom: 0 }}\n            style={{\n              width: '100%',\n            }}\n            items={[\n              { key: 'services', label: t('modelService.Services') },\n              // FIXME: need to apply filtering type of service later\n              // {\n              //   key: \"running\",\n              //   label: t(\"session.Running\"),\n              // },\n              // {\n              //   key: \"finished\",\n              //   label: t(\"session.Finished\"),\n              // },\n              // {\n              //   key: \"others\",\n              //   label: t(\"session.Others\"),\n              // },\n            ]}\n            tabBarExtraContent={{\n              right: (\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    setIsOpenServiceLauncher(true);\n                  }}\n                >\n                  {t('modelService.StartService')}\n                </Button>\n              ),\n            }}\n          />\n          <Suspense fallback={<div>loading..</div>}>\n            <Table\n              loading={isRefetchPending}\n              scroll={{ x: 'max-content' }}\n              rowKey={'endpoint_id'}\n              dataSource={(sortedEndpointList || []) as Endpoint[]}\n              columns={columns.filter(\n                (column) =>\n                  displayedColumnKeys?.includes(_.toString(column.key)),\n              )}\n              pagination={false}\n              // pagination={{\n              //   pageSize: paginationState.pageSize,\n              //   current: paginationState.current,\n              //   total: modelServiceList?.total_count || 0,\n              //   showSizeChanger: true,\n              //   // showTotal(total, range) {\n              //   //   return `${range[0]}-${range[1]} of ${total}`;\n              //   // },\n              //   onChange(page, pageSize) {\n              //     startRefetchTransition(() => {\n              //       setPaginationState({\n              //         current: page,\n              //         pageSize: pageSize || 100,\n              //       });\n              //     });\n              //   },\n              // }}\n            />\n          </Suspense> */}\n        </Flex>\n      </Flex>\n      <BAIModal\n        open={isOpenModelServiceTerminatingModal}\n        title={t('dialog.title.LetsDouble-Check')}\n        okButtonProps={{\n          loading: terminateModelServiceMutation.isLoading,\n        }}\n        onOk={() => {\n          // FIXME: any better idea for handling result?\n          terminateModelServiceMutation.mutate(\n            terminatingModelService?.endpoint_id || '',\n            {\n              onSuccess: (res) => {\n                startRefetchTransition(() => {\n                  updateServicesFetchKey();\n                });\n                setIsOpenServiceTerminatingModal(\n                  !isOpenModelServiceTerminatingModal,\n                );\n                // FIXME: temporally refer to mutate input to message\n                message.success(\n                  t('modelService.ServiceTerminated', {\n                    name: terminatingModelService?.name,\n                  }),\n                );\n              },\n              onError: (err) => {\n                console.log(err);\n                message.error(t('modelService.FailedToTerminateService'));\n              },\n            },\n          );\n        }}\n        onCancel={() => {\n          setIsOpenServiceTerminatingModal(!isOpenModelServiceTerminatingModal);\n        }}\n      >\n        <Flex direction=\"column\" align=\"stretch\" justify=\"center\">\n          <p>\n            {t('modelService.YouAreAboutToTerminate') +\n              (terminatingModelService?.name || '') +\n              '.'}\n          </p>\n          <p>{t('dialog.ask.DoYouWantToProceed')}</p>\n        </Flex>\n      </BAIModal>\n      <ServiceLauncherModal\n        open={isOpenServiceLauncher}\n        endpointFrgmt={editingModelService || null}\n        onCancel={() => {\n          setEditingModelService(null);\n          setIsOpenServiceLauncher(!isOpenServiceLauncher);\n        }}\n        onRequestClose={(success) => {\n          setIsOpenServiceLauncher(!isOpenServiceLauncher);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n      />\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(!isOpenColumnsSetting);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </>\n  );\n};\n\nexport default ServingListPage;\n","/**\n * @generated SignedSource<<203698a4834d74a1571e801f67c048d1>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingListPageQuery$variables = {\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n};\nexport type ServingListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly desired_session_count: number;\n      readonly domain: string | null | undefined;\n      readonly endpoint_id: string | null | undefined;\n      readonly model: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly open_to_public: boolean | null | undefined;\n      readonly project: string | null | undefined;\n      readonly resource_group: string | null | undefined;\n      readonly resource_slots: any | null | undefined;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null | undefined;\n        readonly routing_id: string | null | undefined;\n        readonly session: string | null | undefined;\n        readonly status: string | null | undefined;\n        readonly traffic_ratio: number | null | undefined;\n      } | null | undefined> | null | undefined;\n      readonly status: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\" | \"EndpointStatusTagFragment\" | \"ServiceLauncherModalFragment\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type ServingListPageQuery = {\n  response: ServingListPageQuery$data;\n  variables: ServingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"filter\",\n    \"value\": \"name != 'koalpaca-test'\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"key\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v16/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v17/*: any*/),\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v9/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ServiceLauncherModalFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointOwnerInfoFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointStatusTagFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v17/*: any*/),\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v9/*: any*/),\n                  (v21/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"resource_opts\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"cluster_mode\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"cluster_size\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ImageNode\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"image_object\",\n                \"plural\": false,\n                \"selections\": [\n                  (v5/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"humanized_name\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"tag\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"registry\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"architecture\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"is_local\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"digest\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"ResourceLimit\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"resource_limits\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v22/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"min\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"max\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"KVPair\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"labels\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v22/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"value\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"size_bytes\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"supported_accelerators\",\n                    \"storageKey\": null\n                  },\n                  (v21/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v21/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"created_user_email\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"session_owner_email\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"6962d5d48c0c3c0c478cfeeaae1f63e7\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ServingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ServingListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: \\\"name != 'koalpaca-test'\\\") {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      model\\n      domain\\n      status\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      created_at @since(version: \\\"23.09.0\\\")\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      ...ServiceLauncherModalFragment\\n      ...EndpointOwnerInfoFragment\\n      ...EndpointStatusTagFragment\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointOwnerInfoFragment on Endpoint {\\n  id\\n  created_user_email @since(version: \\\"23.09.8\\\")\\n  session_owner_email @since(version: \\\"23.09.8\\\")\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\\nfragment ServiceLauncherModalFragment on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n  resource_group\\n  resource_slots\\n  resource_opts\\n  cluster_mode\\n  cluster_size\\n  open_to_public\\n  model\\n  image_object @since(version: \\\"23.09.9\\\") {\\n    name\\n    humanized_name\\n    tag\\n    registry\\n    architecture\\n    is_local\\n    digest\\n    resource_limits {\\n      key\\n      min\\n      max\\n    }\\n    labels {\\n      key\\n      value\\n    }\\n    size_bytes\\n    supported_accelerators\\n    id\\n  }\\n  name\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"99a738a4bb1e6636dd1f5f78e9828377\";\n\nexport default node;\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(DeleteOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'DeleteOutlined';\n}\nexport default RefIcon;"],"names":["_ref","open","onRequestClose","columns","displayedColumnKeys","modalProps","formRef","useRef","t","useTranslation","token","theme","useToken","columnOptions","map","column","title","label","value","_","key","element","React","props","children","child","undefined","_jsx","BAIModal","destroyOnClose","centered","onOk","_formRef$current","current","validateFields","then","values","catch","onCancel","_jsxs","Form","ref","preserve","initialValues","selectedColumnKeys","columnOption","layout","Item","name","style","marginBottom","Input","prefix","SearchOutlined","marginSM","placeholder","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","includes","display","height","overflowY","Checkbox","Group","options","flexDirection","clearRafInterval","handle","id","cancelAnimationFrame","clearInterval","fn","delay","immediate","fnRef","useLatest","timerRef","useEffect","isNumber","callback","requestAnimationFrame","setInterval","start","Date","getTime","loop","setRafInterval","useCallback","baiClient","useSuspendedBackendaiClient","curProject","useCurrentProjectValue","isOpenServiceLauncher","setIsOpenServiceLauncher","useState","isOpenColumnsSetting","setIsOpenColumnsSetting","editingModelService","setEditingModelService","terminatingModelService","setTerminatingModelService","paginationState","pageSize","isRefetchPending","startRefetchTransition","useTransition","isOpenModelServiceTerminatingModal","setIsOpenServiceTerminatingModal","servicesFetchKey","updateServicesFetchKey","useUpdatableState","selectedTab","dataIndex","fixed","render","endpoint_id","row","Link","to","width","Typography","Text","code","url","copyable","href","target","text","_row$status","_row$status2","_row$status3","_row$status4","Flex","direction","align","Button","type","icon","SettingOutlined","desired_session_count","status","toLowerCase","color","colorInfo","disabled","onClick","DeleteOutlined","colorError","EndpointStatusTag","endpointFrgmt","is_admin","endpoint_info","EndpointOwnerInfo","created_at","dayjs","format","defaultSortOrder","sortDirections","sorter","a","b","date1","date2","diff","fontWeight","_row$routings","routings","r","length","open_to_public","CheckOutlined","colorSuccess","CloseOutlined","colorTextSecondary","setDisplayedColumnKeys","useLocalStorageState","defaultValue","useRafInterval","startTransitionWithoutPendingState","endpoint_list","modelServiceList","useLazyLoadQuery","_ServingListPageQuery","require","offset","limit","projectID","fetchPolicy","fetchKey","sortedEndpointList","items","terminateModelServiceMutation","useTanMutation","mutationFn","baiSignedRequestWithPromise","method","client","_Fragment","gap","Card","tabList","activeTabKey","tabBarExtraContent","styles","body","padding","paddingTop","Suspense","fallback","Table","loading","scroll","x","rowKey","dataSource","filter","justify","paddingXXS","okButtonProps","isLoading","mutate","onSuccess","res","message","success","onError","err","console","log","error","ServiceLauncherModal","TableColumnsSettingModal","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","hash","AntdIcon","_extends","DeleteOutlinedSvg"],"sourceRoot":""}