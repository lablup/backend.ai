{"version":3,"file":"static/js/936.34b45298.chunk.js","mappings":"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","sources":["helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/Flex.tsx","components/__generated__/DomainSelectorQuery.graphql.ts","components/__generated__/ProjectSelectorQuery.graphql.ts","components/__generated__/QuotaScopeCardFragment.graphql.ts","components/__generated__/QuotaScopeCardUnsetMutation.graphql.ts","components/__generated__/QuotaSettingModalFragment.graphql.ts","components/__generated__/QuotaSettingModalSetMutation.graphql.ts","components/__generated__/StorageHostResourcePanelFragment.graphql.ts","components/__generated__/StorageHostSettingsPanelQuery.graphql.ts","components/__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql.ts","components/__generated__/UserSelectorQuery.graphql.ts","helper/index.tsx","hooks/index.ts","components/StorageHostResourcePanel.tsx","components/ProjectSelector.tsx","components/DomainSelector.tsx","components/UserSelector.tsx","components/QuotaScopeCard.tsx","components/QuotaSettingModal.tsx","components/StorageHostSettingsPanel.tsx","pages/StorageHostSettingPage.tsx","pages/__generated__/StorageHostSettingPageQuery.graphql.ts"],"sourcesContent":["function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  }\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === \"skipOnClient\" &&\n      directive.argumentName === \"if\"\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === \"true\")\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, \"\");\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            \"\"\n          )\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith(\"$\") &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, \"g\");\n        query = query.replace(pattern, \"\");\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from \"relay-runtime\";\n// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from \"./helper/graphql-transformer\";\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || \"\",\n    variables\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    \"POST\",\n    \"/admin/gql\",\n    reqBody\n  );\n\n  //@ts-ignore\n  const result = await globalThis.backendaiclient?._wrapWithPromise(\n    reqInfo,\n    false,\n    null,\n    10000,\n    0\n  );\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { RelayEnvironmentProvider } from \"react-relay\";\nimport { StyleProvider, createCache } from \"@ant-design/cssinjs\";\nimport { ConfigProvider } from \"antd\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactWebComponentProps } from \"../helper/react-to-webcomponent\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\n\nimport en_US from \"antd/locale/en_US\";\nimport ko_KR from \"antd/locale/ko_KR\";\nimport { RelayEnvironment } from \"../RelayEnvironment\";\nimport { useCustomThemeConfig } from \"../helper/customThemeConfig\";\n\n// @ts-ignore\nimport rawFixAntCss from \"../fix_antd.css?raw\";\nimport { BrowserRouter, useNavigate } from \"react-router-dom\";\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps[\"value\"];\n  dispatchEvent: ReactWebComponentProps[\"dispatchEvent\"];\n  moveTo: (path: string) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: \"/resources/i18n/{{lng}}.json\",\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get(\"current_language\") || \"en\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get(\"current_language\")\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || \"en\";\n      i18n?.changeLanguage(lang);\n    };\n    window.addEventListener(\"langChanged\", handler);\n    return () => window.removeEventListener(\"langChanged\", handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path: string) => {\n        dispatchEvent(\"moveTo\", { path });\n      },\n    };\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      if (triggerNode?.parentNode) {\n                        return triggerNode.parentNode;\n                      }\n                      return shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={\"ko\" === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <StyleProvider container={shadowRoot} cache={cache}>\n                      <Suspense fallback=\"\">\n                        <BrowserRouter>\n                          <RoutingEventHandler />\n                          {children}\n                        </BrowserRouter>\n                      </Suspense>\n                    </StyleProvider>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener(\"react-navigate\", handleNavigate);\n\n    return () => {\n      document.removeEventListener(\"react-navigate\", handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import { theme } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\n\nexport interface FlexProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"dir\">,\n    PropsWithChildren {\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  justify?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  // | \"evenly\";\n  align?: \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n  gap?: number | \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nconst Flex: React.FC<FlexProps> = ({\n  direction = \"row\",\n  wrap = \"nowrap\",\n  justify = \"flex-start\",\n  align = \"center\",\n  gap = 0,\n  style,\n  children,\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferConst = [justify, align];\n  const transferConstStyle = transferConst?.map((el) => {\n    let tempTxt;\n    switch (el) {\n      case \"start\":\n        tempTxt = \"flex-start\";\n        break;\n      case \"end\":\n        tempTxt = \"flex-end\";\n        break;\n      case \"between\":\n        tempTxt = \"space-between\";\n        break;\n      case \"around\":\n        tempTxt = \"space-around\";\n        break;\n      default:\n        tempTxt = el;\n        break;\n    }\n\n    return tempTxt;\n  });\n  const flexStyle: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: direction,\n    flexWrap: wrap,\n    justifyContent: transferConstStyle[0],\n    alignItems: transferConstStyle[1],\n    ...style,\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"stretch\",\n        backgroundColor: \"transparent\",\n        border: \"0 solid black\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexBasis: \"auto\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        listStyle: \"none\",\n        margin: 0,\n        minHeight: 0,\n        minWidth: 0,\n        padding: 0,\n        position: \"relative\",\n        textDecoration: \"none\",\n        gap:\n          // @ts-ignore\n          typeof gap === \"string\" ? token[\"padding\" + gap.toUpperCase()] : gap,\n        ...flexStyle,\n      }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","/**\n * @generated SignedSource<<6ad571f958b08687b3fc333087b06e3d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type DomainSelectorQuery$variables = {};\nexport type DomainSelectorQuery$data = {\n  readonly domains: ReadonlyArray<{\n    readonly name: string | null;\n  } | null> | null;\n};\nexport type DomainSelectorQuery = {\n  response: DomainSelectorQuery$data;\n  variables: DomainSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Domain\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"domains\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": \"domains(is_active:true)\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"9df762094b74dc3eb8079edfcc73765f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DomainSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query DomainSelectorQuery {\\n  domains(is_active: true) {\\n    name\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c14d362fa40cf9a3cef5d1d71202cc5f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7501221e296c4d009f39d135d79c2589>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ProjectSelectorQuery$variables = {\n  domain_name?: string | null;\n};\nexport type ProjectSelectorQuery$data = {\n  readonly projects: ReadonlyArray<{\n    readonly id: any | null;\n    readonly is_active: boolean | null;\n    readonly name: string | null;\n    readonly resource_policy: string | null;\n  } | null> | null;\n};\nexport type ProjectSelectorQuery = {\n  response: ProjectSelectorQuery$data;\n  variables: ProjectSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domain_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": \"projects\",\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"domain_name\",\n        \"variableName\": \"domain_name\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Group\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"groups\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"is_active\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"resource_policy\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"eecad68ff1a08d753ce22ff2c5136c26\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectSelectorQuery(\\n  $domain_name: String\\n) {\\n  projects: groups(domain_name: $domain_name, is_active: true) {\\n    id\\n    is_active\\n    name\\n    resource_policy\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"2845b31197571f750613f64207ded239\";\n\nexport default node;\n","/**\n * @generated SignedSource<<fa8655d02b2a4ba957bcfae08413c711>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaScopeCardFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n    readonly usage_bytes: any | null;\n  };\n  readonly id: string;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n  readonly \" $fragmentType\": \"QuotaScopeCardFragment\";\n};\nexport type QuotaScopeCardFragment$key = {\n  readonly \" $data\"?: QuotaScopeCardFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaScopeCardFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"usage_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"QuotaSettingModalFragment\"\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"78fe420c92ce5b9c8d5c133d1f9c389f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c9ef98a65aa188713d0d68772c0d71d0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeCardUnsetMutation$variables = {\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaScopeCardUnsetMutation$data = {\n  readonly unset_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: string;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaScopeCardUnsetMutation = {\n  response: QuotaScopeCardUnsetMutation$data;\n  variables: QuotaScopeCardUnsetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"quota_scope_id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"storage_host_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"UnsetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"unset_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"338836966362b14e823520f40fa56a73\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaScopeCardUnsetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n) {\\n  unset_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"272001cc642518fb66015dcc367b9f65\";\n\nexport default node;\n","/**\n * @generated SignedSource<<74b0722713082f1859b11fb47fd59383>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaSettingModalFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n  };\n  readonly id: string;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentType\": \"QuotaSettingModalFragment\";\n};\nexport type QuotaSettingModalFragment$key = {\n  readonly \" $data\"?: QuotaSettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaSettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1c5ad8315a2d78cb376e7436dc6a8627\";\n\nexport default node;\n","/**\n * @generated SignedSource<<6333e8d3a5761c3d9dfece0047077e91>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeInput = {\n  hard_limit_bytes?: any | null;\n};\nexport type QuotaSettingModalSetMutation$variables = {\n  props: QuotaScopeInput;\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaSettingModalSetMutation$data = {\n  readonly set_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: string;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaSettingModalSetMutation = {\n  response: QuotaSettingModalSetMutation$data;\n  variables: QuotaSettingModalSetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"SetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"set_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"d337cab9be9523bfde2bfb7d6bed595b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaSettingModalSetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $props: QuotaScopeInput!\\n) {\\n  set_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name, props: $props) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e8509b3174920c1dd917ece91d41161\";\n\nexport default node;\n","/**\n * @generated SignedSource<<43d4063d6d35b79d500b74f0832dea56>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostResourcePanelFragment$data = {\n  readonly backend: string | null;\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly path: string | null;\n  readonly usage: any | null;\n  readonly \" $fragmentType\": \"StorageHostResourcePanelFragment\";\n};\nexport type StorageHostResourcePanelFragment$key = {\n  readonly \" $data\"?: StorageHostResourcePanelFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostResourcePanelFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"backend\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"path\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"30a1b4101eeb2fae45385780dbc0ddcc\";\n\nexport default node;\n","/**\n * @generated SignedSource<<cc5385d4435185bd015bd7a7fc10a82a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanelQuery$variables = {\n  quota_scope_id: string;\n  skipQuotaScope: boolean;\n  storage_host_name: string;\n};\nexport type StorageHostSettingsPanelQuery$data = {\n  readonly quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\" | \"QuotaSettingModalFragment\">;\n  } | null;\n};\nexport type StorageHostSettingsPanelQuery = {\n  response: StorageHostSettingsPanelQuery$data;\n  variables: StorageHostSettingsPanelQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipQuotaScope\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"quota_scope_id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"storage_host_name\",\n    \"variableName\": \"storage_host_name\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaSettingModalFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaScopeCardFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"quota_scope_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"storage_host_name\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"QuotaDetails\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"details\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hard_limit_bytes\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"usage_bytes\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"378699d92e64ba9559bfbe8e533d6c6a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingsPanelQuery(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $skipQuotaScope: Boolean!\\n) {\\n  quota_scope(storage_host_name: $storage_host_name, quota_scope_id: $quota_scope_id) @skip(if: $skipQuotaScope) {\\n    ...QuotaSettingModalFragment\\n    ...QuotaScopeCardFragment\\n    id\\n  }\\n}\\n\\nfragment QuotaScopeCardFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n    usage_bytes\\n  }\\n  ...QuotaSettingModalFragment\\n}\\n\\nfragment QuotaSettingModalFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"ef16372a7f5bf0c1844a65d4b63fe4d9\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7acd4325686b832afcb8cccb2a539ff6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$data = {\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly \" $fragmentType\": \"StorageHostSettingsPanel_storageVolumeFrgmt\";\n};\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$key = {\n  readonly \" $data\"?: StorageHostSettingsPanel_storageVolumeFrgmt$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"2f9e5e6060806e6f9265e5cbbd325afe\";\n\nexport default node;\n","/**\n * @generated SignedSource<<bf0b4cbded1569190cc46f94e0dca86c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserSelectorQuery$variables = {\n  filter?: string | null;\n  limit: number;\n  offset: number;\n};\nexport type UserSelectorQuery$data = {\n  readonly user_list: {\n    readonly items: ReadonlyArray<{\n      readonly email: string | null;\n      readonly id: string | null;\n      readonly is_active: boolean | null;\n      readonly resource_policy: string | null;\n    } | null>;\n  } | null;\n};\nexport type UserSelectorQuery = {\n  response: UserSelectorQuery$data;\n  variables: UserSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"filter\",\n        \"variableName\": \"filter\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"limit\",\n        \"variableName\": \"limit\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"offset\",\n        \"variableName\": \"offset\"\n      }\n    ],\n    \"concreteType\": \"UserList\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_list\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"items\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"is_active\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"resource_policy\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f552e13a727e58f49a7a7e49a466d4d2\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSelectorQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $filter: String\\n) {\\n  user_list(limit: $limit, offset: $offset, filter: $filter, is_active: true) {\\n    items {\\n      id\\n      is_active\\n      email\\n      resource_policy\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"323d93fb2d8eb4ee2d1d3677121f9ad2\";\n\nexport default node;\n","import { useSuspendedBackendaiClient } from \"../hooks\";\n\nexport const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client?.newSignedRequest(method, url, body, null);\n  return client?._wrapWithPromise(request);\n};\n\nexport const useBaiSignedRequestWithPromise = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return ({\n    method,\n    url,\n    body = null,\n  }: {\n    method: string;\n    url: string;\n    body?: any;\n  }) =>\n    baiSignedRequestWithPromise({\n      method,\n      url,\n      body,\n      client: baiClient,\n    });\n};\n\n/**\n * Convert file size with binary unit to human readable unit and value\n *\n * @param {number} bytes\n * @param {number} decimalPoint decimal point set to 2 as a default\n * @return {string} converted file size to human readable value\n */\nexport const _humanReadableDecimalSize = (bytes = 0, decimalPoint = 2) => {\n  if (bytes === 0) return \"0 Bytes\";\n  const k = Math.pow(10, 3);\n  decimalPoint = decimalPoint < 0 ? 0 : decimalPoint;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"];\n  let i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) + \" \" + sizes[i]\n  );\n};\n\nexport const _humanReadableBinarySize = (\n  bytes = 0,\n  decimalPoint = 2,\n  compact = false\n) => {\n  if (!bytes) return 0;\n  if (typeof bytes === \"string\") bytes = parseInt(bytes);\n  const k = Math.pow(2, 10);\n  let i;\n  let unitList;\n  decimalPoint = decimalPoint < 0 || compact ? 0 : decimalPoint;\n  i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  if (compact) {\n    unitList = [\"\", \"Ki\", \"Mi\", \"Gi\", \"Ti\", \"Pi\", \"Ei\"];\n  } else {\n    unitList = [\"Bytes\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\"];\n  }\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) +\n    \" \" +\n    unitList[i]\n  );\n};\n\nexport const GBToBytes = (value = 0) => {\n  const gigabyte = Math.pow(10, 9);\n  return Math.round(gigabyte * value);\n};\n\nexport const bytesToGB = (\n  bytes: number,\n  decimalPoint = 2,\n  nullStr: string = \"-\"\n) => {\n  if (bytes === null || bytes === undefined) return nullStr;\n  if (!bytes) return bytes;\n  return (bytes / 10 ** 9).toFixed(decimalPoint);\n};\n\nexport type QuotaScopeType = \"project\" | \"user\";\nexport const addQuotaScopeTypePrefix = (type: QuotaScopeType, str: string) => {\n  if (str === \"\" || str === undefined) return \"\";\n  if (str.startsWith(`${type}:`)) return str;\n  return `${type}:${str}`;\n};\n\nexport const usageIndicatorColor = (percentage: number) => {\n  return percentage < 70\n    ? \"rgba(58, 178, 97, 1)\"\n    : percentage < 90\n    ? \"rgb(223, 179, 23)\"\n    : \"#ef5350\";\n};\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener(\"backend-ai-group-changed\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-group-changed\", listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: \"backendai-metadata-for-suspense\",\n    queryFn: () => {\n      return fetch(\"resources/image_metadata.json\")\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          }\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: \"\",\n        tags: [],\n      };\n    }\n    const specs = imageName.split(\"/\");\n\n    const [key, tag] = (specs[2] || specs[1]).split(\":\");\n    const tags = tag.split(\"-\");\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = \"resources/icons/\") => {\n        if (!imageName) return \"default.png\";\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key].icon !== undefined\n            ? metadata?.imageInfo[key].icon\n            : \"default.png\")\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n","import { useFragment } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { StorageHostResourcePanelFragment$key } from \"./__generated__/StorageHostResourcePanelFragment.graphql\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport { Progress, Descriptions, Typography, Tag } from \"antd\";\n\nimport {\n  _humanReadableDecimalSize,\n  usageIndicatorColor,\n} from \"../helper/index\";\nimport _ from \"lodash\";\n\nconst StorageHostResourcePanel: React.FC<{\n  storageVolumeFrgmt: StorageHostResourcePanelFragment$key | null;\n}> = ({ storageVolumeFrgmt: resourceFrgmt }) => {\n  const { t } = useTranslation();\n\n  const resource = useFragment(\n    graphql`\n      fragment StorageHostResourcePanelFragment on StorageVolume {\n        id\n        backend\n        capabilities\n        path\n        usage\n      }\n    `,\n    resourceFrgmt\n  );\n\n  const parsedUsage = JSON.parse(resource?.usage || \"{}\");\n  const usedBytes = parsedUsage?.used_bytes;\n  const capacityBytes = parsedUsage?.capacity_bytes;\n  const usageRatio = capacityBytes > 0 ? usedBytes / capacityBytes : 0;\n  const storageUsage = {\n    used_bytes: usedBytes,\n    capacity_bytes: capacityBytes,\n    percent: Number((usageRatio * 100).toFixed(1)),\n  };\n\n  return (\n    <Descriptions size=\"small\" bordered column={3}>\n      <Descriptions.Item label={t(\"storageHost.Usage\")} span={3}>\n        {storageUsage?.percent < 100 ? (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            strokeColor={usageIndicatorColor(storageUsage?.percent)}\n          ></Progress>\n        ) : (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            status=\"exception\"\n          ></Progress>\n        )}\n        <Typography.Text type=\"secondary\">\n          {t(\"storageHost.Used\")}:{\" \"}\n        </Typography.Text>\n        {_humanReadableDecimalSize(storageUsage?.used_bytes)}\n        <Typography.Text type=\"secondary\">{\" / \"}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {t(\"storageHost.Total\")}:{\" \"}\n        </Typography.Text>\n        {_humanReadableDecimalSize(storageUsage?.capacity_bytes)}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.Endpoint\")}>\n        {resource?.path}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.BackendType\")}>\n        {resource?.backend}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.Capabilities\")}>\n        {_.map(resource?.capabilities, (cap) => (\n          <Tag key={cap}>{cap}</Tag>\n        ))}\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default StorageHostResourcePanel;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { ProjectSelectorQuery } from \"./__generated__/ProjectSelectorQuery.graphql\";\n\nimport _ from \"lodash\";\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props extends SelectProps {\n  onSelectProject?: (project: any) => void;\n  domain: string;\n}\n\nconst ProjectSelector: React.FC<Props> = ({\n  onSelectProject,\n  domain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { projects } = useLazyLoadQuery<ProjectSelectorQuery>(\n    graphql`\n      query ProjectSelectorQuery($domain_name: String) {\n        projects: groups(domain_name: $domain_name, is_active: true) {\n          id\n          is_active\n          name\n          resource_policy\n        }\n      }\n    `,\n    {\n      domain_name: domain,\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectProject?.(option);\n      }}\n      placeholder={t(\"storageHost.quotaSettings.SelectProject\")}\n      {...selectProps}\n    >\n      {_.map(projects, (project) => {\n        return (\n          <Select.Option\n            key={project?.id}\n            projectId={project?.id}\n            projectResourcePolicy={project?.resource_policy}\n          >\n            {project?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default ProjectSelector;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { DomainSelectorQuery } from \"./__generated__/DomainSelectorQuery.graphql\";\n\nimport _ from \"lodash\";\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props extends SelectProps {\n  onSelectDomain?: (project: any) => void;\n}\nconst DomainSelector: React.FC<Props> = ({\n  onSelectDomain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { domains } = useLazyLoadQuery<DomainSelectorQuery>(\n    graphql`\n      query DomainSelectorQuery {\n        domains(is_active: true) {\n          name\n        }\n      }\n    `,\n    {},\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectDomain?.(option);\n      }}\n      placeholder={t(\"storageHost.quotaSettings.SelectDomain\")}\n      {...selectProps}\n    >\n      {_.map(domains, (domain) => {\n        return (\n          <Select.Option key={domain?.name} domainName={domain?.name}>\n            {domain?.name}\n          </Select.Option>\n        );\n      })}\n      ;\n    </Select>\n  );\n};\n\nexport default DomainSelector;\n","import React, { useDeferredValue, useState } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { UserSelectorQuery } from \"./__generated__/UserSelectorQuery.graphql\";\n\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\n\ninterface Props extends SelectProps {\n  onSelectUser: (user: any) => void;\n}\n\nconst UserSelector: React.FC<Props> = ({ onSelectUser, ...selectProps }) => {\n  const { t } = useTranslation();\n  const [search, setSearch] = useState<string>(\"\");\n  const deferredSearch = useDeferredValue(search);\n  const { user_list } = useLazyLoadQuery<UserSelectorQuery>(\n    graphql`\n      query UserSelectorQuery($limit: Int!, $offset: Int!, $filter: String) {\n        user_list(\n          limit: $limit\n          offset: $offset\n          filter: $filter\n          is_active: true\n        ) {\n          items {\n            id\n            is_active\n            email\n            resource_policy\n          }\n        }\n      }\n    `,\n    {\n      limit: 150,\n      offset: 0,\n      filter:\n        deferredSearch?.length === 0\n          ? null\n          : 'email ilike \"%' + deferredSearch + '%\"',\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      filterOption={false}\n      searchValue={search}\n      loading={deferredSearch !== search}\n      onSearch={(value) => {\n        setSearch(value);\n      }}\n      onChange={(value) => {\n        onSelectUser(\n          _.find(user_list?.items, (user) => {\n            return user?.email === value;\n          })\n        );\n      }}\n      showSearch\n      placeholder={t(\"storageHost.quotaSettings.SelectUser\")}\n      options={_.map(user_list?.items, (user) => {\n        return {\n          value: user?.email,\n          label: user?.email,\n        };\n      }).sort((a, b) => (a.value && b.value && a.value > b.value ? 1 : -1))}\n      {...selectProps}\n    />\n  );\n};\n\nexport default UserSelector;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { QuotaScopeCardUnsetMutation } from \"./__generated__/QuotaScopeCardUnsetMutation.graphql\";\n\nimport {\n  CardProps,\n  Table,\n  Button,\n  Popconfirm,\n  message,\n  Empty,\n  theme,\n} from \"antd\";\nimport { EditFilled, PlusOutlined, CloseOutlined } from \"@ant-design/icons\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { bytesToGB } from \"../helper/index\";\nimport { QuotaScopeCardFragment$key } from \"./__generated__/QuotaScopeCardFragment.graphql\";\nimport Flex from \"./Flex\";\n\ninterface Props extends CardProps {\n  quotaScopeFrgmt: QuotaScopeCardFragment$key | null;\n  showAddButtonWhenEmpty: boolean;\n  onClickEdit: () => void;\n}\nconst QuotaScopeCard: React.FC<Props> = ({\n  quotaScopeFrgmt,\n  showAddButtonWhenEmpty,\n  onClickEdit,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const quota_scope = useFragment(\n    graphql`\n      fragment QuotaScopeCardFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n          usage_bytes\n        }\n        ...QuotaSettingModalFragment\n      }\n    `,\n    quotaScopeFrgmt\n  );\n\n  const [commitUnsetQuotaScope, isInFlightCommitUnsetQuotaScope] =\n    useMutation<QuotaScopeCardUnsetMutation>(\n      graphql`\n        mutation QuotaScopeCardUnsetMutation(\n          $quota_scope_id: String!\n          $storage_host_name: String!\n        ) {\n          unset_quota_scope(\n            quota_scope_id: $quota_scope_id\n            storage_host_name: $storage_host_name\n          ) {\n            quota_scope {\n              id\n              quota_scope_id\n              storage_host_name\n              details {\n                hard_limit_bytes\n              }\n            }\n          }\n        }\n      `\n    );\n\n  const selectProjectOrUserFirst = (\n    <Empty\n      style={{ width: \"100%\" }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={<div>{t(\"storageHost.quotaSettings.SelectFirst\")}</div>}\n    />\n  );\n\n  const addQuotaConfigsWhenEmpty = (\n    <Empty\n      style={{ width: \"100%\" }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={\n        <>\n          <div style={{ margin: 10 }}>\n            {t(\"storageHost.quotaSettings.ClickSettingButton\")}\n          </div>\n          <Button\n            icon={<PlusOutlined />}\n            onClick={() => onClickEdit && onClickEdit()}\n          >\n            {t(\"storageHost.quotaSettings.AddQuotaConfigs\")}\n          </Button>\n        </>\n      }\n    />\n  );\n\n  return (\n    <Table\n      bordered\n      rowKey=\"id\"\n      columns={[\n        {\n          title: t(\"storageHost.quotaSettings.QuotaScopeId\"),\n          dataIndex: \"quota_scope_id\",\n          key: \"quota_scope_id\",\n          render: (value) => <code>{value}</code>,\n        },\n        {\n          title: t(\"storageHost.HardLimit\") + \" (GB)\",\n          dataIndex: [\"details\", \"hard_limit_bytes\"],\n          key: \"hard_limit_bytes\",\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t(\"storageHost.Usage\") + \" (GB)\",\n          dataIndex: [\"details\", \"usage_bytes\"],\n          key: \"usage_bytes\",\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t(\"general.Control\"),\n          key: \"control\",\n          render: () => (\n            <Flex gap={token.marginSM}>\n              <Button\n                icon={<EditFilled />}\n                onClick={() => onClickEdit && onClickEdit()}\n              >\n                {t(\"button.Edit\")}\n              </Button>\n              <Popconfirm\n                title={t(\"storageHost.quotaSettings.UnsetCustomSettings\")}\n                description={t(\n                  \"storageHost.quotaSettings.ConfirmUnsetCustomQuota\"\n                )}\n                placement=\"bottom\"\n                onConfirm={() => {\n                  if (quota_scope) {\n                    commitUnsetQuotaScope({\n                      variables: {\n                        quota_scope_id: quota_scope.quota_scope_id,\n                        storage_host_name: quota_scope.storage_host_name,\n                      },\n                      onCompleted() {\n                        message.success(\n                          t(\n                            \"storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated\"\n                          )\n                        );\n                      },\n                      onError(error) {\n                        message.error(error?.message);\n                      },\n                    });\n                  }\n                }}\n              >\n                <Button\n                  loading={isInFlightCommitUnsetQuotaScope}\n                  danger\n                  icon={<CloseOutlined />}\n                >\n                  {t(\"button.Unset\")}\n                </Button>\n              </Popconfirm>\n            </Flex>\n          ),\n        },\n      ]}\n      dataSource={quota_scope ? [quota_scope] : []}\n      locale={{\n        emptyText: showAddButtonWhenEmpty\n          ? addQuotaConfigsWhenEmpty\n          : selectProjectOrUserFirst,\n      }}\n      pagination={false}\n    />\n  );\n};\n\nexport default QuotaScopeCard;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { QuotaSettingModalFragment$key } from \"./__generated__/QuotaSettingModalFragment.graphql\";\nimport { QuotaSettingModalSetMutation } from \"./__generated__/QuotaSettingModalSetMutation.graphql\";\n\nimport { Modal, ModalProps, Form, Input, message } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { GBToBytes, bytesToGB } from \"../helper\";\n\ninterface Props extends ModalProps {\n  quotaScopeFrgmt?: QuotaSettingModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst QuotaSettingModal: React.FC<Props> = ({\n  quotaScopeFrgmt = null,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const quotaScope = useFragment(\n    graphql`\n      fragment QuotaSettingModalFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n        }\n      }\n    `,\n    quotaScopeFrgmt\n  );\n\n  const [commitSetQuotaScope, isInFlightCommitSetQuotaScope] =\n    useMutation<QuotaSettingModalSetMutation>(graphql`\n      mutation QuotaSettingModalSetMutation(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $props: QuotaScopeInput!\n      ) {\n        set_quota_scope(\n          quota_scope_id: $quota_scope_id\n          storage_host_name: $storage_host_name\n          props: $props\n        ) {\n          quota_scope {\n            id\n            quota_scope_id\n            storage_host_name\n            details {\n              hard_limit_bytes\n            }\n          }\n        }\n      }\n    `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      commitSetQuotaScope({\n        variables: {\n          quota_scope_id: quotaScope?.quota_scope_id || \"\",\n          storage_host_name: quotaScope?.storage_host_name || \"\",\n          props: {\n            hard_limit_bytes: GBToBytes(values?.hard_limit_bytes),\n          },\n        },\n        onCompleted(response) {\n          if (response?.set_quota_scope?.quota_scope?.id) {\n            message.success(\n              t(\"storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated\")\n            );\n          } else {\n            message.error(t(\"dialog.ErrorOccurred\"));\n          }\n          onRequestClose();\n        },\n        onError(error) {\n          console.log(error);\n          message.error(error?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitSetQuotaScope}\n      onCancel={onRequestClose}\n      title={t(\"storageHost.quotaSettings.QuotaSettings\")}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        style={{ marginBottom: 40, marginTop: 20 }}\n      >\n        <Form.Item\n          name=\"hard_limit_bytes\"\n          label={t(\"storageHost.HardLimit\")}\n          initialValue={bytesToGB(quotaScope?.details?.hard_limit_bytes)}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t(\"storageHost.quotaSettings.AllowNumberAndDot\") ||\n                \"Allows numbers and .(dot) only\",\n            },\n          ]}\n        >\n          <Input\n            addonAfter=\"GB\"\n            type=\"number\"\n            step={0.25}\n            style={{ width: \"70%\" }}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default QuotaSettingModal;\n","import React, { useState, useTransition } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { QuotaScopeType, addQuotaScopeTypePrefix } from \"../helper/index\";\n\nimport { Card, Form, Spin } from \"antd\";\n\nimport Flex from \"./Flex\";\nimport ProjectSelector from \"./ProjectSelector\";\nimport DomainSelector from \"./DomainSelector\";\nimport UserSelector from \"./UserSelector\";\nimport QuotaScopeCard from \"./QuotaScopeCard\";\nimport { useFragment, useLazyLoadQuery } from \"react-relay\";\n\nimport graphql from \"babel-plugin-relay/macro\";\nimport { StorageHostSettingsPanel_storageVolumeFrgmt$key } from \"./__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql\";\nimport { StorageHostSettingsPanelQuery } from \"./__generated__/StorageHostSettingsPanelQuery.graphql\";\nimport QuotaSettingModal from \"./QuotaSettingModal\";\nimport { useToggle } from \"ahooks\";\nimport { useCurrentDomainValue, useUpdatableState } from \"../hooks\";\n\ninterface StorageHostSettingsPanelProps {\n  extraFetchKey?: string;\n  storageVolumeFrgmt: StorageHostSettingsPanel_storageVolumeFrgmt$key | null;\n}\nconst StorageHostSettingsPanel: React.FC<StorageHostSettingsPanelProps> = ({\n  storageVolumeFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const storageVolume = useFragment(\n    graphql`\n      fragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\n        id\n        capabilities\n      }\n    `,\n    storageVolumeFrgmt\n  );\n\n  const [isPending, startTransition] = useTransition();\n  const currentDomain = useCurrentDomainValue();\n  const [currentSettingType, setCurrentSettingType] =\n    useState<QuotaScopeType>(\"user\");\n\n  const [selectedDomainName, setSelectedDomainName] =\n    useState<string>(currentDomain);\n  const [selectedProjectId, setSelectedProjectId] = useState<string>();\n  useState<string>();\n  const [selectedUserId, setSelectedUserId] = useState<string>();\n  const [selectedUserEmail, setSelectedUserEmail] = useState<string>();\n  useState<string>();\n\n  const quotaScopeId = addQuotaScopeTypePrefix(\n    currentSettingType,\n    (currentSettingType === \"project\" ? selectedProjectId : selectedUserId) ||\n      \"\"\n  );\n\n  const [isOpenQuotaSettingModal, { toggle: toggleQuotaSettingModal }] =\n    useToggle(false);\n  const [fetchKey] = useUpdatableState(\"default\");\n\n  const { quota_scope } = useLazyLoadQuery<StorageHostSettingsPanelQuery>(\n    graphql`\n      query StorageHostSettingsPanelQuery(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $skipQuotaScope: Boolean!\n      ) {\n        quota_scope(\n          storage_host_name: $storage_host_name\n          quota_scope_id: $quota_scope_id\n        ) @skip(if: $skipQuotaScope) {\n          ...QuotaSettingModalFragment\n          ...QuotaScopeCardFragment\n        }\n      }\n    `,\n    {\n      // quota scope\n      quota_scope_id: quotaScopeId,\n      skipQuotaScope: quotaScopeId === undefined || quotaScopeId === \"\",\n      storage_host_name: storageVolume?.id || \"\",\n    },\n    {\n      fetchPolicy: \"network-only\",\n      fetchKey: fetchKey,\n    }\n  );\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Card\n        title={t(\"storageHost.QuotaSettings\")}\n        tabList={[\n          {\n            key: \"user\",\n            tab: t(\"storageHost.ForUser\"),\n          },\n          {\n            key: \"project\",\n            tab: t(\"storageHost.ForProject\"),\n          },\n        ]}\n        activeTabKey={currentSettingType}\n        // eslint-disable-next-line\n        //@ts-ignore\n        onTabChange={(v) => {\n          startTransition(() => {\n            setCurrentSettingType(v as QuotaScopeType);\n          });\n        }}\n      >\n        <Flex justify=\"between\">\n          {currentSettingType === \"project\" ? (\n            <Flex style={{ marginBottom: 10 }}>\n              <Form layout=\"inline\">\n                <Form.Item label={t(\"resourceGroup.Domain\")}>\n                  <DomainSelector\n                    style={{ width: \"20vw\", marginRight: 10 }}\n                    value={selectedDomainName}\n                    onSelectDomain={(domain: any) => {\n                      startTransition(() => {\n                        setSelectedDomainName(domain?.domainName);\n                        setSelectedProjectId(undefined);\n                      });\n                    }}\n                  />\n                </Form.Item>\n                <Form.Item label={t(\"webui.menu.Project\")}>\n                  <ProjectSelector\n                    style={{ width: \"20vw\" }}\n                    value={selectedProjectId}\n                    disabled={!selectedDomainName}\n                    domain={selectedDomainName || \"\"}\n                    onSelectProject={(project: any) => {\n                      startTransition(() => {\n                        setSelectedProjectId(project?.projectId);\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Form>\n            </Flex>\n          ) : (\n            <Form layout=\"inline\">\n              <Form.Item label={t(\"data.User\")}>\n                <UserSelector\n                  style={{ width: \"30vw\", marginBottom: 10 }}\n                  value={selectedUserEmail}\n                  onSelectUser={(user) => {\n                    setSelectedUserEmail(user?.email);\n                    startTransition(() => {\n                      setSelectedUserId(user?.id);\n                    });\n                  }}\n                />\n              </Form.Item>\n            </Form>\n          )}\n        </Flex>\n        <Spin spinning={isPending}>\n          <QuotaScopeCard\n            quotaScopeFrgmt={quota_scope || null}\n            onClickEdit={() => {\n              toggleQuotaSettingModal();\n            }}\n            showAddButtonWhenEmpty={\n              (currentSettingType === \"project\" && !!selectedProjectId) ||\n              (currentSettingType === \"user\" && !!selectedUserId)\n            }\n          />\n        </Spin>\n        <QuotaSettingModal\n          open={isOpenQuotaSettingModal}\n          quotaScopeFrgmt={quota_scope || null}\n          onRequestClose={() => {\n            toggleQuotaSettingModal();\n          }}\n        />\n      </Card>\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingsPanel;\n","import React, { Suspense } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { StorageHostSettingPageQuery } from \"./__generated__/StorageHostSettingPageQuery.graphql\";\n\nimport { Breadcrumb, Card, Empty, Typography, theme } from \"antd\";\nimport Flex from \"../components/Flex\";\nimport StorageHostResourcePanel from \"../components/StorageHostResourcePanel\";\nimport StorageHostSettingsPanel from \"../components/StorageHostSettingsPanel\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport { useWebComponentInfo } from \"../components/DefaultProviders\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface StorageHostSettingPageProps {\n  storageHostId: string;\n}\nconst StorageHostSettingPage: React.FC<StorageHostSettingPageProps> = ({\n  storageHostId,\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { moveTo } = useWebComponentInfo();\n  const { t } = useTranslation();\n  const { storage_volume } = useLazyLoadQuery<StorageHostSettingPageQuery>(\n    graphql`\n      query StorageHostSettingPageQuery($id: String) {\n        storage_volume(id: $id) {\n          id\n          capabilities\n          ...StorageHostResourcePanelFragment\n          ...StorageHostSettingsPanel_storageVolumeFrgmt\n        }\n      }\n    `,\n    {\n      id: storageHostId || \"\",\n    }\n  );\n\n  const isQuotaSupportedStorage =\n    storage_volume?.capabilities?.includes(\"quota\") ?? false;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM, gap: token.margin }}\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: \"Resources\",\n            onClick: (e) => {\n              e.preventDefault();\n              moveTo(\"/agent\");\n            },\n            href: \"/agent\",\n          },\n          {\n            title: \"Storage setting\",\n          },\n        ]}\n      ></Breadcrumb>\n      <Typography.Title level={3} style={{ margin: 0 }}>\n        {storageHostId || \"\"}\n      </Typography.Title>\n      <StorageHostResourcePanel storageVolumeFrgmt={storage_volume || null} />\n      {baiClient.supports(\"quota-scope\") && (\n        <>\n          {isQuotaSupportedStorage ? (\n            <Suspense fallback={<div>loading...</div>}>\n              <StorageHostSettingsPanel\n                storageVolumeFrgmt={storage_volume || null}\n              />\n            </Suspense>\n          ) : (\n            <Card title={t(\"storageHost.QuotaSettings\")}>\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={t(\"storageHost.QuotaDoesNotSupported\")}\n              />\n            </Card>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingPage;\n","/**\n * @generated SignedSource<<283a752f4675b1e3d4fe6f0da7198984>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingPageQuery$variables = {\n  id?: string | null;\n};\nexport type StorageHostSettingPageQuery$data = {\n  readonly storage_volume: {\n    readonly capabilities: ReadonlyArray<string | null> | null;\n    readonly id: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\" | \"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n  } | null;\n};\nexport type StorageHostSettingPageQuery = {\n  response: StorageHostSettingPageQuery$data;\n  variables: StorageHostSettingPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"capabilities\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostResourcePanelFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"backend\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"path\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"821175f86743d9d81be2a55aca371919\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingPageQuery(\\n  $id: String\\n) {\\n  storage_volume(id: $id) {\\n    id\\n    capabilities\\n    ...StorageHostResourcePanelFragment\\n    ...StorageHostSettingsPanel_storageVolumeFrgmt\\n  }\\n}\\n\\nfragment StorageHostResourcePanelFragment on StorageVolume {\\n  id\\n  backend\\n  capabilities\\n  path\\n  usage\\n}\\n\\nfragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\\n  id\\n  capabilities\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"f6e77057e83b0449ef99e8918e794b24\";\n\nexport default node;\n"],"names":["removeSkipOnClientDirective","query","variables","filteredVariables","_objectSpread","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","fetchFn","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","text","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","subscribeFn","store","Store","RecordSource","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","document","addEventListener","removeEventListener","children","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","_jsx","_Fragment","RelayEnvironmentProvider","environment","_jsxs","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","StyleProvider","container","Suspense","fallback","BrowserRouter","_ref$direction","direction","_ref$wrap","_ref$justify","justify","_ref$align","align","_ref$gap","gap","style","restProps","_objectWithoutProperties","_excluded","token","transferConst","transferConstStyle","map","el","tempTxt","flexStyle","display","flexDirection","flexWrap","justifyContent","alignItems","backgroundColor","border","boxSizing","flexBasis","flexShrink","listStyle","margin","minHeight","minWidth","padding","position","textDecoration","toUpperCase","node","v0","hash","v1","v2","v3","newLineToBrElement","separatorRegExp","undefined","line","index","match","baiSignedRequestWithPromise","method","url","_ref$body","body","useBaiSignedRequestWithPromise","baiClient","useSuspendedBackendaiClient","_ref2","_ref2$body","_humanReadableDecimalSize","bytes","decimalPoint","k","Math","pow","i","floor","log","round","parseFloat","toFixed","GBToBytes","gigabyte","bytesToGB","addQuotaScopeTypePrefix","type","usageIndicatorColor","percentage","useUpdatableState","initialValue","_useState3","Date","toISOString","_useState4","setValue","newValue","useDateISOState","useCurrentDomainValue","_config","domainName","useCurrentProjectValue","_useState5","name","current_group","id","groupIds","_useState6","project","_setProject","listener","newProjectName","useAnonymousBackendaiClient","api_endpoint","clientConfig","BackendAIClientConfig","BackendAIClient","useQuery","queryKey","queryFn","Promise","resolve","ready","data","useBackendaiImageMetaData","metadata","fetch","then","response","json","getImageMeta","imageName","key","tags","specs","_split","_split2","getImageAliasName","imageInfo","getImageIcon","icon","getImageTags","getBaseVersion","getBaseImage","resourceFrgmt","storageVolumeFrgmt","t","resource","useFragment","_StorageHostResourcePanelFragment","require","parsedUsage","JSON","parse","usage","usedBytes","used_bytes","capacityBytes","capacity_bytes","storageUsage","percent","Number","Descriptions","size","bordered","column","label","span","Progress","strokeColor","status","Typography","_","capabilities","cap","Tag","onSelectProject","domain","selectProps","projects","useLazyLoadQuery","_ProjectSelectorQuery","domain_name","fetchPolicy","Select","onChange","option","placeholder","projectId","projectResourcePolicy","resource_policy","onSelectDomain","domains","_DomainSelectorQuery","onSelectUser","search","setSearch","deferredSearch","useDeferredValue","user_list","_UserSelectorQuery","limit","offset","filter","filterOption","searchValue","loading","onSearch","items","user","email","showSearch","options","sort","a","b","quotaScopeFrgmt","showAddButtonWhenEmpty","onClickEdit","quota_scope","_QuotaScopeCardFragment","_useMutation","useMutation","_QuotaScopeCardUnsetMutation","_useMutation2","commitUnsetQuotaScope","isInFlightCommitUnsetQuotaScope","selectProjectOrUserFirst","Empty","width","image","description","addQuotaConfigsWhenEmpty","Button","PlusOutlined","onClick","Table","rowKey","columns","title","dataIndex","render","Flex","marginSM","EditFilled","Popconfirm","placement","onConfirm","quota_scope_id","storage_host_name","onCompleted","message","onError","error","danger","CloseOutlined","dataSource","emptyText","pagination","_quotaScope$details","_ref$quotaScopeFrgmt","onRequestClose","props","_Form$useForm","Form","form","quotaScope","_QuotaSettingModalFragment","_QuotaSettingModalSetMutation","commitSetQuotaScope","isInFlightCommitSetQuotaScope","Modal","zIndex","destroyOnClose","onOk","validateFields","values","hard_limit_bytes","_response$set_quota_s","_response$set_quota_s2","set_quota_scope","console","confirmLoading","onCancel","preserve","labelCol","wrapperCol","validateTrigger","marginBottom","marginTop","details","rules","Input","addonAfter","step","storageVolume","_StorageHostSettingsPanel_storageVolumeFrgmt","_useTransition","useTransition","_useTransition2","isPending","startTransition","currentDomain","currentSettingType","setCurrentSettingType","selectedDomainName","setSelectedDomainName","selectedProjectId","setSelectedProjectId","_useState7","_useState8","selectedUserId","setSelectedUserId","_useState9","_useState10","selectedUserEmail","setSelectedUserEmail","quotaScopeId","_useToggle","useToggle","_useToggle2","isOpenQuotaSettingModal","toggleQuotaSettingModal","toggle","_useUpdatableState","fetchKey","_StorageHostSettingsPanelQuery","skipQuotaScope","Card","tabList","tab","activeTabKey","onTabChange","v","layout","DomainSelector","marginRight","ProjectSelector","disabled","UserSelector","Spin","spinning","QuotaScopeCard","QuotaSettingModal","open","_storage_volume$capab","_storage_volume$capab2","storageHostId","storage_volume","_StorageHostSettingPageQuery","isQuotaSupportedStorage","includes","Breadcrumb","preventDefault","href","level","StorageHostResourcePanel","supports","StorageHostSettingsPanel"],"sourceRoot":""}