{"version":3,"file":"static/js/478.8c8fd27b.chunk.js","mappings":"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","sources":["components/Flex.tsx","components/Information.tsx","helper/index.tsx","hooks/index.ts"],"sourcesContent":["import { theme } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\n\ninterface FlexProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"dir\">,\n    PropsWithChildren {\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  justify?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  // | \"evenly\";\n  align?: \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n  gap?: number | \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nconst Flex: React.FC<FlexProps> = ({\n  direction = \"row\",\n  wrap = \"nowrap\",\n  justify = \"flex-start\",\n  align = \"center\",\n  gap = 0,\n  style,\n  children,\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferConst = [justify, align];\n  const transferConstStyle = transferConst.map((el) => {\n    let tempTxt;\n    switch (el) {\n      case \"start\":\n        tempTxt = \"flex-start\";\n        break;\n      case \"end\":\n        tempTxt = \"flex-end\";\n        break;\n      case \"between\":\n        tempTxt = \"space-between\";\n        break;\n      case \"around\":\n        tempTxt = \"space-around\";\n        break;\n      default:\n        tempTxt = el;\n        break;\n    }\n\n    return tempTxt;\n  });\n  const flexStyle: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: direction,\n    flexWrap: wrap,\n    justifyContent: transferConstStyle[0],\n    alignItems: transferConstStyle[1],\n    ...style,\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"stretch\",\n        backgroundColor: \"transparent\",\n        border: \"0 solid black\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexBasis: \"auto\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        listStyle: \"none\",\n        margin: 0,\n        minHeight: 0,\n        minWidth: 0,\n        padding: 0,\n        position: \"relative\",\n        textDecoration: \"none\",\n        gap:\n          // @ts-ignore\n          typeof gap === \"string\" ? token[\"padding\" + gap.toUpperCase()] : gap,\n        ...flexStyle,\n      }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","import { ReactNode } from \"react\";\nimport { CheckOutlined, WarningOutlined } from \"@ant-design/icons\";\nimport {\n  Descriptions,\n  Typography,\n  Tag,\n  Card,\n  theme,\n  DescriptionsProps,\n  Spin,\n  Row,\n  Col,\n} from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport Flex from \"./Flex\";\nimport { useQuery } from \"react-query\";\nimport { newLineToBrElement } from \"../helper\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\n\nconst DescriptionLabel: React.FC<{\n  title: string;\n  subtitle?: ReactNode | string | null;\n}> = ({ title, subtitle }) => {\n  // const { token } = theme.useToken();\n  return (\n    <Flex direction=\"column\" align=\"start\">\n      <Typography.Text strong>{title}</Typography.Text>\n      {subtitle && (\n        <Typography.Text type=\"secondary\">{subtitle}</Typography.Text>\n      )}\n    </Flex>\n  );\n};\n\nconst DoubleTag: React.FC<{\n  label: string;\n  value: string;\n}> = ({ label, value }) => {\n  return (\n    <Flex direction=\"row\">\n      <Tag style={{ margin: 0, marginRight: -1, zIndex: 1 }}>{label}</Tag>\n      <Tag color=\"green\">{value}</Tag>\n    </Flex>\n  );\n};\n\ninterface InformationProps {}\nconst Information: React.FC<InformationProps> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const baiClient = useSuspendedBackendaiClient();\n\n  let { data: licenseInfo, isLoading: isLoadingLicenseInfo } = useQuery<{\n    valid: boolean;\n    type: string;\n    licensee: string;\n    key: string;\n    expiration: string;\n  }>(\n    \"licenseInfo\",\n    () => {\n      return baiClient.enterprise.getLicense();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    }\n  );\n\n  if (!licenseInfo) {\n    licenseInfo = {\n      valid: false,\n      type: t(\"information.CannotRead\"),\n      licensee: t(\"information.CannotRead\"),\n      key: t(\"information.CannotRead\"),\n      expiration: t(\"information.CannotRead\"),\n    };\n  }\n\n  const columnSetting: DescriptionsProps[\"column\"] = {\n    xxl: 4,\n    xl: 4,\n    lg: 2,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM, gap: token.margin }}\n    >\n      <Row gutter={[token.margin, token.margin]}>\n        <Col xs={24} xxl={12}>\n          <Card\n            style={{\n              height: \"100%\",\n            }}\n          >\n            <Descriptions\n              title={t(\"information.Core\")}\n              bordered\n              column={columnSetting}\n            >\n              <Descriptions.Item\n                label={\n                  <DescriptionLabel title={t(\"information.ManagerVersion\")} />\n                }\n              >\n                <Flex\n                  direction=\"column\"\n                  style={{ gap: token.marginXXS }}\n                  align=\"start\"\n                >\n                  Backend.AI {baiClient.managerVersion}\n                  <DoubleTag\n                    label={t(\"information.Installation\")}\n                    value={baiClient.managerVersion}\n                  />\n                  {/* TODO: get manager_version_latest  */}\n                  {/* <DoubleTag\n                label={t(\"information.LatestRelease\")}\n                value={\"manager_version_latest\"}\n              /> */}\n                </Flex>\n              </Descriptions.Item>\n              <Descriptions.Item\n                label={<DescriptionLabel title={t(\"information.APIVersion\")} />}\n              >\n                {baiClient.apiVersion}\n              </Descriptions.Item>\n            </Descriptions>\n          </Card>\n        </Col>\n        <Col xs={24} xxl={12}>\n          <Card>\n            <Descriptions\n              title={t(\"information.Security\")}\n              bordered\n              column={columnSetting}\n            >\n              <Descriptions.Item\n                label={\n                  <DescriptionLabel\n                    title={t(\"information.DefaultAdministratorAccountChanged\")}\n                    subtitle={t(\n                      \"information.DescDefaultAdministratorAccountChanged\"\n                    )}\n                  />\n                }\n              >\n                {/* TODO: accountChanged  */}\n                {true ? (\n                  <CheckOutlined title=\"Yes\" />\n                ) : (\n                  <WarningOutlined style={{ color: \"red\" }} title=\"No\" />\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item\n                label={\n                  <DescriptionLabel\n                    title={t(\"information.UsesSSL\")}\n                    subtitle={t(\"information.DescUsesSSL\")}\n                  />\n                }\n              >\n                {baiClient?._config.endpoint.startsWith(\"https:\") ? (\n                  <CheckOutlined title=\"Yes\" />\n                ) : (\n                  <WarningOutlined style={{ color: \"red\" }} title=\"No\" />\n                )}\n              </Descriptions.Item>\n            </Descriptions>\n          </Card>\n        </Col>\n      </Row>\n\n      <Card>\n        <Descriptions\n          title={t(\"information.Component\")}\n          bordered\n          column={{ xxl: 4, xl: 2, lg: 2, md: 1, sm: 1, xs: 1 }}\n        >\n          <Descriptions.Item\n            label={\n              <DescriptionLabel\n                title={t(\"information.DockerVersion\")}\n                subtitle={t(\"information.DescDockerVersion\")}\n              />\n            }\n          >\n            <Tag>{t(\"information.Compatible\")}</Tag>\n          </Descriptions.Item>\n          <Descriptions.Item\n            label={\n              <DescriptionLabel\n                title={t(\"information.PostgreSQLVersion\")}\n                subtitle={t(\"information.DescPostgreSQLVersion\")}\n              />\n            }\n          >\n            <Tag>{t(\"information.Compatible\")}</Tag>\n          </Descriptions.Item>\n          <Descriptions.Item\n            label={\n              <DescriptionLabel\n                title={t(\"information.ETCDVersion\")}\n                subtitle={t(\"information.DescETCDVersion\")}\n              />\n            }\n          >\n            <Tag>{t(\"information.Compatible\")}</Tag>\n          </Descriptions.Item>\n          <Descriptions.Item\n            label={\n              <DescriptionLabel\n                title={t(\"information.RedisVersion\")}\n                subtitle={newLineToBrElement(t(\"information.DescRedisVersion\"))}\n              />\n            }\n          >\n            <Tag>{t(\"information.Compatible\")}</Tag>\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n      <Card>\n        <Spin spinning={isLoadingLicenseInfo}>\n          <Descriptions\n            title={t(\"information.License\")}\n            bordered\n            column={{\n              xxl: 2,\n              xl: 2,\n              lg: 2,\n              md: 1,\n              sm: 1,\n              xs: 1,\n            }}\n          >\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.IsLicenseValid\")}\n                  subtitle={t(\"information.DescIsLicenseValid\")}\n                />\n              }\n            >\n              {licenseInfo.valid ? (\n                <CheckOutlined />\n              ) : (\n                <WarningOutlined style={{ color: \"red\" }} />\n              )}\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.LicenseType\")}\n                  subtitle={newLineToBrElement(\n                    t(\"information.DescLicenseType\")\n                  )}\n                />\n              }\n            >\n              <Tag>\n                {licenseInfo.type === \"fixed\"\n                  ? t(\"information.FixedLicense\")\n                  : t(\"information.DynamicLicense\")}\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.Licensee\")}\n                  subtitle={t(\"information.DescLicensee\")}\n                />\n              }\n            >\n              <Tag>{licenseInfo.licensee}</Tag>\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.LicenseKey\")}\n                  subtitle={t(\"information.DescLicenseKey\")}\n                />\n              }\n            >\n              <Tag>{licenseInfo.key}</Tag>\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.Expiration\")}\n                  subtitle={t(\"information.DescExpiration\")}\n                />\n              }\n            >\n              <Tag>{licenseInfo.expiration}</Tag>\n            </Descriptions.Item>\n          </Descriptions>\n        </Spin>\n      </Card>\n    </Flex>\n  );\n};\n\nexport default Information;\n","export const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client.newSignedRequest(method, url, body, null);\n  return client._wrapWithPromise(request);\n};\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n"],"names":["_ref","_ref$direction","direction","_ref$wrap","wrap","_ref$justify","justify","_ref$align","align","_ref$gap","gap","style","children","restProps","_objectWithoutProperties","_excluded","token","theme","transferConstStyle","map","el","tempTxt","flexStyle","_objectSpread","display","flexDirection","flexWrap","justifyContent","alignItems","_jsx","backgroundColor","border","boxSizing","flexBasis","flexShrink","listStyle","margin","minHeight","minWidth","padding","position","textDecoration","toUpperCase","DescriptionLabel","title","subtitle","_jsxs","Flex","Typography","strong","type","DoubleTag","_ref2","label","value","Tag","marginRight","zIndex","color","t","useTranslation","baiClient","useSuspendedBackendaiClient","_useQuery","useQuery","enterprise","getLicense","suspense","licenseInfo","data","isLoadingLicenseInfo","isLoading","valid","licensee","key","expiration","columnSetting","xxl","xl","lg","md","sm","xs","marginSM","Row","gutter","Col","Card","height","Descriptions","bordered","column","marginXXS","managerVersion","apiVersion","CheckOutlined","_config","endpoint","startsWith","WarningOutlined","newLineToBrElement","Spin","spinning","text","separatorRegExp","arguments","length","undefined","split","line","index","match","baiSignedRequestWithPromise","method","url","_ref$body","body","client","request","newSignedRequest","_wrapWithPromise","useAnonymousBackendaiClient","api_endpoint","useMemo","clientConfig","globalThis","BackendAIClientConfig","BackendAIClient","queryKey","queryFn","Promise","resolve","backendaiclient","ready","document","addEventListener","listener","removeEventListener","retry"],"sourceRoot":""}