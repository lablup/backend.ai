{"version":3,"file":"static/js/556.a75e59da.chunk.js","mappings":"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","sources":["helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/UserInfoModal.tsx","components/__generated__/UserInfoModalQuery.graphql.ts","hooks/index.ts"],"sourcesContent":["function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  }\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === \"skipOnClient\" &&\n      directive.argumentName === \"if\"\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === \"true\")\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, \"\");\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            \"\"\n          )\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith(\"$\") &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, \"g\");\n        query = query.replace(pattern, \"\");\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from \"relay-runtime\";\n// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from \"./helper/graphql-transformer\";\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || \"\",\n    variables\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    \"POST\",\n    \"/admin/gql\",\n    reqBody\n  );\n\n  //@ts-ignore\n  const result = await globalThis.backendaiclient?._wrapWithPromise(\n    reqInfo,\n    false,\n    null,\n    10000,\n    0\n  );\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { RelayEnvironmentProvider } from \"react-relay\";\nimport { StyleProvider, createCache } from \"@ant-design/cssinjs\";\nimport { ConfigProvider } from \"antd\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactWebComponentProps } from \"../helper/react-to-webcomponent\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\n\nimport en_US from \"antd/locale/en_US\";\nimport ko_KR from \"antd/locale/ko_KR\";\nimport { RelayEnvironment } from \"../RelayEnvironment\";\nimport { useCustomThemeConfig } from \"../helper/customThemeConfig\";\n\n// @ts-ignore\nimport rawFixAntCss from \"../fix_antd.css?raw\";\nimport { BrowserRouter, useNavigate } from \"react-router-dom\";\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps[\"value\"];\n  dispatchEvent: ReactWebComponentProps[\"dispatchEvent\"];\n  moveTo: (path: string) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: \"/resources/i18n/{{lng}}.json\",\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get(\"current_language\") || \"en\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get(\"current_language\")\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || \"en\";\n      i18n?.changeLanguage(lang);\n    };\n    window.addEventListener(\"langChanged\", handler);\n    return () => window.removeEventListener(\"langChanged\", handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path: string) => {\n        dispatchEvent(\"moveTo\", { path });\n      },\n    };\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={\"ko\" === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <StyleProvider container={shadowRoot} cache={cache}>\n                      <Suspense fallback=\"\">\n                        <BrowserRouter>\n                          <RoutingEventHandler />\n                          {children}\n                        </BrowserRouter>\n                      </Suspense>\n                    </StyleProvider>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener(\"react-navigate\", handleNavigate);\n\n    return () => {\n      document.removeEventListener(\"react-navigate\", handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useQuery } from \"react-query\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { UserInfoModalQuery } from \"./__generated__/UserInfoModalQuery.graphql\";\n\nimport {\n  Modal,\n  ModalProps,\n  Descriptions,\n  DescriptionsProps,\n  Button,\n  Tag,\n  Spin,\n} from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useWebComponentInfo } from \"./DefaultProviders\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport _ from \"lodash\";\n\ninterface Props extends ModalProps {}\n\nconst UserInfoModal: React.FC<Props> = ({ ...modalProps }) => {\n  const { t } = useTranslation();\n\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    userEmail: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || \"\");\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      userEmail: \"\",\n    };\n  }\n  const { open, userEmail } = parsedValue;\n\n  const baiClient = useSuspendedBackendaiClient();\n  let totpSupported = false;\n  let {\n    data: isManagerSupportingTOTP,\n    isLoading: isLoadingManagerSupportingTOTP,\n  } = useQuery(\n    \"isManagerSupportingTOTP\",\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    }\n  );\n  totpSupported = baiClient?.supports(\"2FA\") && isManagerSupportingTOTP;\n\n  const { user } = useLazyLoadQuery<UserInfoModalQuery>(\n    graphql`\n      query UserInfoModalQuery($email: String, $isTOTPSupported: Boolean!) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          totp_activated @include(if: $isTOTPSupported)\n        }\n      }\n    `,\n    {\n      email: userEmail,\n      isTOTPSupported: totpSupported ?? false,\n    }\n  );\n\n  const columnSetting: DescriptionsProps[\"column\"] = {\n    xxl: 1,\n    xl: 1,\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <Modal\n      open={open}\n      onCancel={() => {\n        dispatchEvent(\"cancel\", null);\n      }}\n      centered\n      title={t(\"credential.UserDetail\")}\n      footer={[\n        <Button\n          key=\"ok\"\n          type=\"primary\"\n          onClick={() => {\n            dispatchEvent(\"cancel\", null);\n          }}\n        >\n          {t(\"button.OK\")}\n        </Button>,\n      ]}\n      {...modalProps}\n    >\n      <br />\n      <Descriptions\n        size=\"small\"\n        column={columnSetting}\n        title={t(\"credential.Information\")}\n        labelStyle={{ width: \"50%\" }}\n      >\n        <Descriptions.Item label={t(\"credential.UserID\")}>\n          {user?.email}\n        </Descriptions.Item>\n        <Descriptions.Item label={t(\"credential.UserName\")}>\n          {user?.username}\n        </Descriptions.Item>\n        <Descriptions.Item label={t(\"credential.FullName\")}>\n          {user?.full_name}\n        </Descriptions.Item>\n        <Descriptions.Item label={t(\"credential.DescActiveUser\")}>\n          {user?.status === \"active\" ? t(\"button.Yes\") : t(\"button.No\")}\n        </Descriptions.Item>\n        <Descriptions.Item label={t(\"credential.DescRequirePasswordChange\")}>\n          {user?.need_password_change ? t(\"button.Yes\") : t(\"button.No\")}\n        </Descriptions.Item>\n        {totpSupported && (\n          <Descriptions.Item label={t(\"webui.menu.TotpActivated\")}>\n            <Spin spinning={isLoadingManagerSupportingTOTP}>\n              {user?.totp_activated ? t(\"button.Yes\") : t(\"button.No\")}\n            </Spin>\n          </Descriptions.Item>\n        )}\n      </Descriptions>\n      <br />\n      <Descriptions\n        size=\"small\"\n        column={columnSetting}\n        title={t(\"credential.Association\")}\n        labelStyle={{ width: \"50%\" }}\n      >\n        <Descriptions.Item label={t(\"credential.Domain\")}>\n          {user?.domain_name}\n        </Descriptions.Item>\n        <Descriptions.Item label={t(\"credential.Role\")}>\n          {user?.role}\n        </Descriptions.Item>\n      </Descriptions>\n      <br />\n      <Descriptions\n        title={t(\"credential.ProjectAndGroup\")}\n        labelStyle={{ width: \"50%\" }}\n      >\n        <Descriptions.Item>\n          {_.map(user?.groups, (group) => {\n            return <Tag key={group?.id}>{group?.name}</Tag>;\n          })}\n        </Descriptions.Item>\n      </Descriptions>\n    </Modal>\n  );\n};\n\nexport default UserInfoModal;\n","/**\n * @generated SignedSource<<15e4d04bc0285c8729d6d3ffd37aad53>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserInfoModalQuery$variables = {\n  email?: string | null;\n  isTOTPSupported: boolean;\n};\nexport type UserInfoModalQuery$data = {\n  readonly user: {\n    readonly description: string | null;\n    readonly domain_name: string | null;\n    readonly email: string | null;\n    readonly full_name: string | null;\n    readonly groups: ReadonlyArray<{\n      readonly id: any | null;\n      readonly name: string | null;\n    } | null> | null;\n    readonly need_password_change: boolean | null;\n    readonly role: string | null;\n    readonly status: string | null;\n    readonly totp_activated?: boolean | null;\n    readonly username: string | null;\n  } | null;\n};\nexport type UserInfoModalQuery = {\n  response: UserInfoModalQuery$data;\n  variables: UserInfoModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isTOTPSupported\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"condition\": \"isTOTPSupported\",\n  \"kind\": \"Condition\",\n  \"passingValue\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ]\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"0df215d9d53a960adda4cd628fa40661\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserInfoModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserInfoModalQuery(\\n  $email: String\\n  $isTOTPSupported: Boolean!\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    totp_activated @include(if: $isTOTPSupported)\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"ebbace65870261723ee661def143e3e8\";\n\nexport default node;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener(\"backend-ai-group-changed\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-group-changed\", listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: \"backendai-metadata-for-suspense\",\n    queryFn: () => {\n      return fetch(\"resources/image_metadata.json\")\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          }\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: \"\",\n        tags: [],\n      };\n    }\n    const specs = imageName.split(\"/\");\n\n    const [key, tag] = (specs[2] || specs[1]).split(\":\");\n    const tags = tag.split(\"-\");\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = \"resources/icons/\") => {\n        if (!imageName) return \"default.png\";\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key]?.icon !== undefined\n            ? metadata?.imageInfo[key]?.icon\n            : \"default.png\")\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n"],"names":["removeSkipOnClientDirective","query","variables","filteredVariables","_objectSpread","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","fetchFn","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","text","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","subscribeFn","store","Store","RecordSource","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","document","addEventListener","removeEventListener","children","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","_jsx","_Fragment","RelayEnvironmentProvider","environment","_jsxs","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","locale","ko_KR","en_US","theme","StyleProvider","container","Suspense","fallback","BrowserRouter","_totpSupported","parsedValue","modalProps","Object","assign","_objectDestructuringEmpty","t","_useWebComponentInfo","JSON","parse","error","open","userEmail","totpSupported","_parsedValue","baiClient","useSuspendedBackendaiClient","_useQuery","useQuery","isManagerSupportingTOTP","data","isLoadingManagerSupportingTOTP","isLoading","supports","user","useLazyLoadQuery","_UserInfoModalQuery","require","email","isTOTPSupported","columnSetting","xxl","xl","lg","md","sm","xs","Modal","onCancel","centered","title","footer","Button","type","onClick","Descriptions","size","column","labelStyle","width","label","username","full_name","status","need_password_change","Spin","spinning","totp_activated","domain_name","role","_","groups","group","Tag","name","id","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","hash","useUpdatableState","initialValue","_useState3","Date","toISOString","_useState4","setValue","newValue","useDateISOState","useCurrentDomainValue","_config","domainName","useCurrentProjectValue","_useState5","current_group","groupIds","_useState6","project","_setProject","listener","newProjectName","useAnonymousBackendaiClient","api_endpoint","clientConfig","BackendAIClientConfig","BackendAIClient","queryKey","queryFn","Promise","resolve","ready","useBackendaiImageMetaData","metadata","fetch","then","response","json","getImageMeta","imageName","key","tags","specs","_split","_split2","getImageAliasName","imageInfo","getImageIcon","_metadata$imageInfo$k","_metadata$imageInfo$k2","undefined","icon","getImageTags","getBaseVersion","getBaseImage"],"sourceRoot":""}