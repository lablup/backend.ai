{"version":3,"file":"static/js/217.28d85faf.chunk.js","mappings":"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","sources":["components/DoubleTag.tsx","components/ImageEnvironmentSelectFormItems.tsx","components/ImageMetaIcon.tsx","components/ResourceNumber.tsx","components/SliderInputFormItem.tsx","components/TextHighlighter.tsx","components/__generated__/ImageEnvironmentSelectFormItemsQuery.graphql.ts","hooks/backendai.tsx"],"sourcesContent":["import Flex from './Flex';\nimport { Tag } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\nexport type DoubleTagObjectValue = {\n  label: ValueType;\n  color?: string;\n};\n\ntype ValueType = string | React.ReactNode;\nconst DoubleTag: React.FC<{\n  values?: ValueType[] | DoubleTagObjectValue[];\n}> = ({ values = [] }) => {\n  if (values.length === 0) return null;\n  let objectValues: DoubleTagObjectValue[];\n  if (\n    values[0] &&\n    (typeof values[0] === 'string' || React.isValidElement(values[0]))\n  ) {\n    objectValues = values.map(\n      (value) =>\n        ({\n          label: value,\n          color: 'blue',\n        }) as DoubleTagObjectValue,\n    );\n  } else {\n    objectValues = values as DoubleTagObjectValue[];\n  }\n\n  return (\n    <Flex direction=\"row\">\n      {_.map(objectValues, (objValue, idx) => {\n        return (\n          <Tag\n            key={idx}\n            style={\n              _.last(objectValues) === objValue\n                ? undefined\n                : { margin: 0, marginRight: -1 }\n            }\n            color={objValue.color}\n          >\n            {objValue.label}\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default DoubleTag;\n","import {\n  useBackendaiImageMetaData,\n  useSuspendedBackendaiClient,\n} from '../hooks';\nimport DoubleTag from './DoubleTag';\nimport Flex from './Flex';\nimport ImageMetaIcon from './ImageMetaIcon';\nimport TextHighlighter from './TextHighlighter';\nimport {\n  ImageEnvironmentSelectFormItemsQuery,\n  ImageEnvironmentSelectFormItemsQuery$data,\n} from './__generated__/ImageEnvironmentSelectFormItemsQuery.graphql';\nimport { Divider, Form, Input, RefSelectProps, Select, Tag, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nexport type Image = NonNullable<\n  NonNullable<ImageEnvironmentSelectFormItemsQuery$data>['images']\n>[0];\n\ntype ImageGroup = {\n  groupName: string;\n  environmentGroups: {\n    environmentName: string;\n    displayName: string;\n    prefix?: string;\n    images: Image[];\n  }[];\n};\n\nexport type ImageEnvironmentFormInput = {\n  environments: {\n    environment: string;\n    version: string;\n    image: Image | undefined;\n  };\n};\n\ninterface ImageEnvironmentSelectFormItemsProps {\n  filter?: (image: Image) => boolean;\n  showPrivate?: boolean;\n}\n\nconst getImageFullName = (image: Image) => {\n  return image\n    ? `${image.registry}/${image.name}:${image.tag}@${image.architecture}`\n    : undefined;\n};\n\nfunction compareVersions(version1: string, version2: string): number {\n  const v1 = version1.split('.').map(Number);\n  const v2 = version2.split('.').map(Number);\n\n  for (let i = 0; i < Math.max(v1.length, v2.length); i++) {\n    const num1 = v1[i] || 0;\n    const num2 = v2[i] || 0;\n\n    if (num1 > num2) {\n      return 1;\n    } else if (num1 < num2) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\nconst isPrivateImage = (image: Image) => {\n  return _.some(image?.labels, (label) => {\n    return (\n      label?.key === 'ai.backend.features' &&\n      label?.value?.split(' ').includes('private')\n    );\n  });\n};\n\nconst ImageEnvironmentSelectFormItems: React.FC<\n  ImageEnvironmentSelectFormItemsProps\n> = ({ filter, showPrivate }) => {\n  // TODO: fix below without useSuspendedBackendaiClient\n  // Before fetching on relay environment, BAI client should be ready\n  useSuspendedBackendaiClient();\n\n  const form = Form.useFormInstance<ImageEnvironmentFormInput>();\n  Form.useWatch('environments', { form, preserve: true });\n\n  const [environmentSearch, setEnvironmentSearch] = useState('');\n  const [versionSearch, setVersionSearch] = useState('');\n  const { t } = useTranslation();\n  const [metadata, { getImageMeta }] = useBackendaiImageMetaData();\n  const { token } = theme.useToken();\n\n  const envSelectRef = useRef<RefSelectProps>(null);\n  const versionSelectRef = useRef<RefSelectProps>(null);\n\n  const { images } = useLazyLoadQuery<ImageEnvironmentSelectFormItemsQuery>(\n    graphql`\n      query ImageEnvironmentSelectFormItemsQuery($installed: Boolean) {\n        images(is_installed: $installed) {\n          name\n          humanized_name\n          tag\n          registry\n          architecture\n          digest\n          installed\n          resource_limits {\n            key\n            min\n            max\n          }\n          labels {\n            key\n            value\n          }\n        }\n      }\n    `,\n    {\n      installed: true,\n    },\n    {\n      fetchPolicy: 'store-and-network',\n    },\n  );\n\n  // console.log('nextEnvironmentName form', form.getFieldValue('environments'));\n  // console.log('nextEnvironmentName form', currentEnvironmentsFormData);\n  // If not initial value, select first value\n  // auto select when relative field is changed\n  useEffect(() => {\n    // if not initial value, select first value\n    const nextEnvironmentName =\n      form.getFieldValue('environments')?.environment ||\n      imageGroups[0]?.environmentGroups[0]?.environmentName;\n\n    let nextEnvironmentGroup: ImageGroup['environmentGroups'][0] | undefined;\n    _.find(imageGroups, (group) => {\n      return _.find(group.environmentGroups, (environment) => {\n        if (environment.environmentName === nextEnvironmentName) {\n          nextEnvironmentGroup = environment;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    });\n\n    // if current version does'nt exist in next environment group, select a version of the first image of next environment group\n    if (\n      !_.find(\n        nextEnvironmentGroup?.images,\n        (image) =>\n          form.getFieldValue('environments')?.version ===\n          getImageFullName(image),\n      )\n    ) {\n      const nextNewImage = nextEnvironmentGroup?.images[0];\n      if (nextNewImage) {\n        form.setFieldsValue({\n          environments: {\n            environment: nextEnvironmentName,\n            version: getImageFullName(nextNewImage),\n            image: nextNewImage,\n          },\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form.getFieldValue('environments')?.environment]);\n\n  const imageGroups: ImageGroup[] = useMemo(\n    () =>\n      _.chain(images)\n        .filter((image) => {\n          return (\n            (showPrivate ? true : !isPrivateImage(image)) &&\n            (filter ? filter(image) : true)\n          );\n        })\n        .groupBy((image) => {\n          // group by using `group` property of image info\n          return (\n            metadata?.imageInfo[getImageMeta(getImageFullName(image) || '').key]\n              ?.group || 'Custom Environments'\n          );\n        })\n        .map((images, groupName) => {\n          return {\n            groupName,\n            environmentGroups: _.chain(images)\n              // sub group by using (environment) `name` property of image info\n              .groupBy((image) => {\n                return (\n                  // metadata?.imageInfo[\n                  //   getImageMeta(getImageFullName(image) || \"\").key\n                  // ]?.name || image?.name\n                  image?.name\n                );\n              })\n              .map((images, environmentName) => ({\n                environmentName,\n                displayName:\n                  metadata?.imageInfo[environmentName.split('/')?.[1]]?.name ||\n                  environmentName,\n                prefix: environmentName.split('/')?.[0],\n                images: images.sort((a, b) =>\n                  compareVersions(\n                    // latest version comes first\n                    b?.tag?.split('-')?.[0] ?? '',\n                    a?.tag?.split('-')?.[0] ?? '',\n                  ),\n                ),\n              }))\n              .sortBy((item) => item.displayName)\n              .value(),\n          };\n        })\n        .sortBy((item) => item.groupName)\n        .value(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [images, metadata, filter, showPrivate],\n  );\n\n  // support search image by full name\n  const { fullNameMatchedImage } = useMemo(() => {\n    let fullNameMatchedImage: Image | undefined;\n    let fullNameMatchedImageGroup:\n      | ImageGroup['environmentGroups'][0]\n      | undefined;\n    if (environmentSearch.length) {\n      _.chain(\n        imageGroups\n          .flatMap((group) => group.environmentGroups)\n          .find((envGroup) => {\n            fullNameMatchedImageGroup = envGroup;\n            fullNameMatchedImage = _.find(envGroup.images, (image) => {\n              return getImageFullName(image) === environmentSearch;\n            });\n            return !!fullNameMatchedImage;\n          }),\n      ).value();\n    }\n    return {\n      fullNameMatchedImage,\n      fullNameMatchedImageGroup,\n    };\n  }, [environmentSearch, imageGroups]);\n\n  return (\n    <>\n      <Form.Item\n        name={['environments', 'environment']}\n        label={`${t('session.launcher.Environments')} / ${t(\n          'session.launcher.Version',\n        )}`}\n        rules={[{ required: true }]}\n        style={{ marginBottom: 10 }}\n      >\n        <Select\n          ref={envSelectRef}\n          showSearch\n          // autoClearSearchValue\n          labelInValue={false}\n          searchValue={environmentSearch}\n          onSearch={setEnvironmentSearch}\n          defaultActiveFirstOption={true}\n          optionLabelProp=\"label\"\n          optionFilterProp=\"filterValue\"\n          onChange={(value) => {\n            if (fullNameMatchedImage) {\n              form.setFieldsValue({\n                environments: {\n                  environment: fullNameMatchedImage?.name || '',\n                  version: getImageFullName(fullNameMatchedImage),\n                  image: fullNameMatchedImage,\n                },\n              });\n            }\n          }}\n        >\n          {fullNameMatchedImage ? (\n            <Select.Option\n              value={fullNameMatchedImage?.name}\n              filterValue={getImageFullName(fullNameMatchedImage)}\n            >\n              <Flex\n                direction=\"row\"\n                align=\"center\"\n                gap=\"xs\"\n                style={{ display: 'inline-flex' }}\n              >\n                <ImageMetaIcon\n                  image={getImageFullName(fullNameMatchedImage) || ''}\n                  style={{\n                    width: 15,\n                    height: 15,\n                  }}\n                />\n                {getImageFullName(fullNameMatchedImage)}\n              </Flex>\n            </Select.Option>\n          ) : (\n            _.map(imageGroups, (group) => {\n              return (\n                <Select.OptGroup key={group.groupName} label={group.groupName}>\n                  {_.map(group.environmentGroups, (environmentGroup) => {\n                    const firstImage = environmentGroup.images[0];\n                    const currentMetaImageInfo =\n                      metadata?.imageInfo[\n                        environmentGroup.environmentName.split('/')?.[1]\n                      ];\n\n                    const extraFilterValues: string[] = [];\n                    let environmentPrefixTag = null;\n                    if (\n                      environmentGroup.prefix &&\n                      !['lablup', 'cloud', 'stable'].includes(\n                        environmentGroup.prefix,\n                      )\n                    ) {\n                      extraFilterValues.push(environmentGroup.prefix);\n                      environmentPrefixTag = (\n                        <Tag color=\"purple\">\n                          <TextHighlighter keyword={environmentSearch}>\n                            {environmentGroup.prefix}\n                          </TextHighlighter>\n                        </Tag>\n                      );\n                    }\n\n                    const tagsFromMetaImageInfoLabel = _.map(\n                      currentMetaImageInfo?.label,\n                      (label) => {\n                        if (\n                          _.isUndefined(label.category) &&\n                          label.tag &&\n                          label.color\n                        ) {\n                          extraFilterValues.push(label.tag);\n                          return (\n                            <Tag color={label.color} key={label.tag}>\n                              <TextHighlighter\n                                keyword={environmentSearch}\n                                key={label.tag}\n                              >\n                                {label.tag}\n                              </TextHighlighter>\n                            </Tag>\n                          );\n                        }\n                        return null;\n                      },\n                    );\n                    return (\n                      <Select.Option\n                        key={environmentGroup.environmentName}\n                        value={environmentGroup.environmentName}\n                        filterValue={\n                          environmentGroup.displayName +\n                          '\\t' +\n                          extraFilterValues.join('\\t')\n                        }\n                        label={\n                          <Flex\n                            direction=\"row\"\n                            align=\"center\"\n                            gap=\"xs\"\n                            style={{ display: 'inline-flex' }}\n                          >\n                            <ImageMetaIcon\n                              image={getImageFullName(firstImage) || ''}\n                              style={{\n                                width: 15,\n                                height: 15,\n                              }}\n                            />\n                            {environmentGroup.displayName}\n                          </Flex>\n                        }\n                      >\n                        <Flex direction=\"row\" justify=\"between\">\n                          <Flex direction=\"row\" align=\"center\" gap=\"xs\">\n                            <ImageMetaIcon\n                              image={getImageFullName(firstImage) || ''}\n                              style={{\n                                width: 15,\n                                height: 15,\n                              }}\n                            />\n                            <TextHighlighter keyword={environmentSearch}>\n                              {environmentGroup.displayName}\n                            </TextHighlighter>\n                          </Flex>\n                          {environmentPrefixTag}\n                          {tagsFromMetaImageInfoLabel}\n                        </Flex>\n                      </Select.Option>\n                    );\n                  })}\n                </Select.OptGroup>\n              );\n            })\n          )}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        noStyle\n        shouldUpdate={(prev, cur) =>\n          prev.environments?.environment !== cur.environments?.environment\n        }\n      >\n        {({ getFieldValue }) => {\n          let selectedEnvironmentGroup:\n            | ImageGroup['environmentGroups'][0]\n            | undefined;\n          _.find(imageGroups, (group) => {\n            return _.find(group.environmentGroups, (environment) => {\n              if (\n                environment.environmentName ===\n                getFieldValue('environments')?.environment\n              ) {\n                selectedEnvironmentGroup = environment;\n                return true;\n              } else {\n                return false;\n              }\n            });\n          });\n          return (\n            <Form.Item\n              name={['environments', 'version']}\n              rules={[{ required: true }]}\n            >\n              <Select\n                ref={versionSelectRef}\n                onChange={(value) => {\n                  const selectedImage = _.find(images, (image) => {\n                    return getImageFullName(image) === value;\n                  });\n                  form.setFieldValue(['environments', 'image'], selectedImage);\n                }}\n                showSearch\n                searchValue={versionSearch}\n                onSearch={setVersionSearch}\n                // autoClearSearchValue\n                optionFilterProp=\"filterValue\"\n                optionLabelProp=\"label\"\n                dropdownRender={(menu) => (\n                  <>\n                    <Flex\n                      style={{\n                        fontWeight: token.fontWeightStrong,\n                        paddingLeft: token.paddingSM,\n                      }}\n                    >\n                      {t('session.launcher.Version')}\n                      <Divider type=\"vertical\" />\n                      {t('session.launcher.Base')}\n                      <Divider type=\"vertical\" />\n                      {t('session.launcher.Architecture')}\n                      <Divider type=\"vertical\" />\n                      {t('session.launcher.Requirements')}\n                    </Flex>\n                    <Divider style={{ margin: '8px 0' }} />\n                    {menu}\n                  </>\n                )}\n              >\n                {_.map(\n                  _.uniqBy(selectedEnvironmentGroup?.images, 'digest'),\n\n                  (image) => {\n                    const [version, tag, ...requirements] = image?.tag?.split(\n                      '-',\n                    ) || ['', '', ''];\n\n                    let tagAlias = metadata?.tagAlias[tag];\n                    if (!tagAlias) {\n                      for (const [key, replaceString] of Object.entries(\n                        metadata?.tagReplace || {},\n                      )) {\n                        const pattern = new RegExp(key);\n                        if (pattern.test(tag)) {\n                          tagAlias = tag?.replace(pattern, replaceString);\n                        }\n                      }\n                      if (!tagAlias) {\n                        tagAlias = tag;\n                      }\n                    }\n\n                    const extraFilterValues: string[] = [];\n                    const requirementTags =\n                      requirements.length > 0 ? (\n                        <Flex\n                          direction=\"row\"\n                          wrap=\"wrap\"\n                          style={{\n                            flex: 1,\n                          }}\n                          gap={'xxs'}\n                        >\n                          {_.map(requirements, (requirement, idx) => (\n                            <DoubleTag\n                              key={idx}\n                              values={\n                                metadata?.tagAlias[requirement]\n                                  ?.split(':')\n                                  .map((str) => {\n                                    extraFilterValues.push(str);\n                                    return (\n                                      <TextHighlighter\n                                        keyword={versionSearch}\n                                        key={str}\n                                      >\n                                        {str}\n                                      </TextHighlighter>\n                                    );\n                                  }) || requirements\n                              }\n                            />\n                          ))}\n                        </Flex>\n                      ) : (\n                        '-'\n                      );\n                    return (\n                      <Select.Option\n                        key={image?.digest}\n                        value={getImageFullName(image)}\n                        filterValue={[\n                          version,\n                          tagAlias,\n                          image?.architecture,\n                          ...extraFilterValues,\n                        ].join('\\t')}\n                        label={[\n                          version,\n                          tagAlias,\n                          image?.architecture,\n                          requirements.length > 0\n                            ? requirements.join(', ')\n                            : '-',\n                        ].join(' | ')}\n                      >\n                        <Flex direction=\"row\">\n                          <TextHighlighter keyword={versionSearch}>\n                            {version}\n                          </TextHighlighter>\n                          <Divider type=\"vertical\" />\n                          <TextHighlighter keyword={versionSearch}>\n                            {tagAlias}\n                          </TextHighlighter>\n                          <Divider type=\"vertical\" />\n                          <TextHighlighter keyword={versionSearch}>\n                            {image?.architecture}\n                          </TextHighlighter>\n                          <Divider type=\"vertical\" />\n                          {requirementTags}\n                        </Flex>\n                      </Select.Option>\n                    );\n                  },\n                )}\n              </Select>\n            </Form.Item>\n          );\n        }}\n      </Form.Item>\n      <Form.Item noStyle hidden name={['environments', 'image']}>\n        <Input />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ImageEnvironmentSelectFormItems;\n","import { useBackendaiImageMetaData } from '../hooks';\nimport React from 'react';\n\nconst ImageMetaIcon: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n  alt?: string | null;\n}> = ({ image, style = {} }, bordered, alt = '') => {\n  const [, { getImageIcon }] = useBackendaiImageMetaData();\n\n  return (\n    <img\n      src={getImageIcon(image)}\n      style={{\n        width: '1em',\n        height: '1em',\n        ...style,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nexport default React.memo(ImageMetaIcon);\n","import { iSizeToSize } from '../helper';\nimport Flex from './Flex';\nimport { Tooltip, Typography, theme } from 'antd';\nimport React, { ReactElement } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type ResourceTypeKey =\n  | 'cpu'\n  | 'mem'\n  | 'cuda.device'\n  | 'cuda.shares'\n  | 'rocm.device'\n  | 'tpu.device'\n  | 'ipu.device'\n  | 'atom.device'\n  | 'warboy.device';\n\nexport const ACCELERATOR_UNIT_MAP: {\n  [key: string]: string;\n} = {\n  'cuda.device': 'GPU',\n  'cuda.shares': 'FGPU',\n  'rocm.device': 'GPU',\n  'tpu.device': 'TPU',\n  'ipu.device': 'IPU',\n  'atom.device': 'ATOM',\n  'warboy.device': 'Warboy',\n};\n\nexport type ResourceOpts = {\n  shmem?: number;\n};\ninterface Props {\n  type: ResourceTypeKey;\n  extra?: ReactElement;\n  opts?: ResourceOpts;\n  value: string;\n  hideTooltip?: boolean;\n}\n\ntype ResourceTypeInfo<V> = {\n  [key in string]: V;\n};\nconst ResourceNumber: React.FC<Props> = ({\n  type,\n  value: amount,\n  extra,\n  opts,\n  hideTooltip = false,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const units: ResourceTypeInfo<string> = {\n    cpu: t('session.core'),\n    mem: 'GiB',\n    ...ACCELERATOR_UNIT_MAP,\n  };\n\n  return (\n    <Flex direction=\"row\" gap=\"xxs\">\n      <ResourceTypeIcon type={type} showTooltip={!hideTooltip} />\n      <Typography.Text>\n        {units[type] === 'GiB'\n          ? Number(iSizeToSize(amount + 'b', 'g', 3)?.numberFixed).toString()\n          : units[type] === 'FGPU'\n          ? parseFloat(amount).toFixed(2)\n          : amount}\n      </Typography.Text>\n      <Typography.Text type=\"secondary\">{units[type]}</Typography.Text>\n      {type === 'mem' && opts?.shmem && opts?.shmem > 0 ? (\n        <Typography.Text\n          type=\"secondary\"\n          style={{ fontSize: token.fontSizeSM }}\n        >\n          (SHM: {iSizeToSize(opts.shmem + 'b', 'g', 2)?.numberFixed}\n          GiB)\n        </Typography.Text>\n      ) : null}\n      {extra}\n    </Flex>\n  );\n};\n\nconst MWCIconWrap: React.FC<{ size?: number; children: string }> = ({\n  size = 16,\n  children,\n}) => {\n  return (\n    // @ts-ignore\n    <mwc-icon\n      style={{\n        '--mdc-icon-size': `${size + 2}px`,\n        width: size,\n        height: size,\n      }}\n    >\n      {children}\n      {/* @ts-ignore */}\n    </mwc-icon>\n  );\n};\ninterface AccTypeIconProps\n  extends Omit<React.ImgHTMLAttributes<HTMLImageElement>, 'src'> {\n  type: ResourceTypeKey;\n  showIcon?: boolean;\n  showUnit?: boolean;\n  showTooltip?: boolean;\n  size?: number;\n}\nexport const ResourceTypeIcon: React.FC<AccTypeIconProps> = ({\n  type,\n  size = 16,\n  showIcon = true,\n  showUnit = true,\n  showTooltip = true,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const resourceTypeIconSrcMap: ResourceTypeInfo<\n    [ReactElement | string, string]\n  > = {\n    cpu: [\n      <MWCIconWrap size={size}>developer_board</MWCIconWrap>,\n      t('session.core'),\n    ],\n    mem: [<MWCIconWrap size={size}>memory</MWCIconWrap>, 'GiB'],\n    'cuda.device': ['/resources/icons/file_type_cuda.svg', 'GPU'],\n    'cuda.shares': ['/resources/icons/file_type_cuda.svg', 'FGPU'],\n    'rocm.device': ['/resources/icons/ROCm.png', 'GPU'],\n    'tpu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'TPU'],\n    'ipu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'IPU'],\n    'atom.device': ['/resources/icons/rebel.svg', 'ATOM'],\n    'warboy.device': ['/resources/icons/furiosa.svg', 'Warboy'],\n  };\n\n  const content =\n    typeof resourceTypeIconSrcMap[type]?.[0] === 'string' ? (\n      <img\n        {...props}\n        style={{\n          height: size,\n          alignSelf: 'center',\n          ...(props.style || {}),\n        }}\n        // @ts-ignore\n        src={resourceTypeIconSrcMap[type]?.[0] || ''}\n        alt={type}\n      />\n    ) : (\n      <Flex style={{ width: 16, height: 16 }}>\n        {resourceTypeIconSrcMap[type]?.[0] || type}\n      </Flex>\n    );\n\n  return showTooltip ? (\n    // <Tooltip title={showTooltip ? `${type} (${resourceTypeIconSrcMap[type][1]})` : undefined}>\n    <Tooltip title={type}>{content}</Tooltip>\n  ) : (\n    <Flex style={{ pointerEvents: 'none' }}>{content}</Flex>\n  );\n};\n\nexport default ResourceNumber;\n","import Flex from './Flex';\nimport {\n  InputNumber,\n  Slider,\n  Form,\n  SliderSingleProps,\n  InputNumberProps,\n} from 'antd';\nimport { NamePath } from 'antd/es/form/interface';\nimport { SliderRangeProps } from 'antd/es/slider';\nimport { FormItemProps } from 'antd/lib/form/FormItem';\nimport React from 'react';\n\ninterface SliderInputProps extends Omit<FormItemProps, 'name'> {\n  min?: number;\n  max?: number;\n  step?: number;\n  name: NamePath;\n  inputNumberProps?: InputNumberProps;\n  sliderProps?: SliderSingleProps | SliderRangeProps;\n  disabled?: boolean;\n}\nconst SliderInputItem: React.FC<SliderInputProps> = ({\n  name,\n  min,\n  max,\n  step,\n  rules,\n  required,\n  inputNumberProps,\n  sliderProps,\n  initialValue,\n  disabled,\n  ...formItemProps\n}) => {\n  return (\n    <Form.Item required={required} {...formItemProps}>\n      <Flex direction=\"row\" gap={'md'}>\n        <Flex direction=\"column\" align=\"stretch\" style={{ flex: 3 }}>\n          <Form.Item\n            name={name}\n            noStyle\n            rules={rules}\n            initialValue={initialValue}\n            label={formItemProps.label}\n          >\n            <Slider\n              max={max}\n              min={min}\n              step={step}\n              disabled={disabled}\n              {...sliderProps}\n            />\n          </Form.Item>\n        </Flex>\n        <Flex\n          style={{ flex: 2, minWidth: 130 }}\n          align=\"stretch\"\n          direction=\"column\"\n        >\n          <Form.Item\n            name={name}\n            noStyle\n            rules={rules}\n            initialValue={initialValue}\n            label={formItemProps.label}\n          >\n            <InputNumber\n              max={max}\n              min={min}\n              step={step}\n              onStep={(value, info) => {\n                console.log(value, info);\n              }}\n              disabled={disabled}\n              {...inputNumberProps}\n            />\n          </Form.Item>\n        </Flex>\n      </Flex>\n    </Form.Item>\n    // <Row justify=\"space-around\" align=\"middle\" gutter={20}>\n    //   <Col span={6}>\n    //     <p>Resource</p>\n    //   </Col>\n    //   <Col span={8}>\n    //     <Slider\n    //       min={minValue}\n    //       max={maxValue}\n    //       onChange={onChange}\n    //       value={typeof inputValue === \"number\" ? inputValue : 0}\n    //       step={0.01}\n    //     />\n    //   </Col>\n    //   <Col span={6}>\n    //     <InputNumber\n    //       min={minValue}\n    //       max={maxValue}\n    //       style={\n    //         {\n    //           /* use theme config */\n    //         }\n    //       }\n    //       step={0.01}\n    //       value={inputValue}\n    //       onChange={onChange}\n    //     />\n    //   </Col>\n    // </Row>\n  );\n};\n\nexport default SliderInputItem;\n","import { theme } from 'antd';\nimport React from 'react';\n\ninterface TextHighlighterProps {\n  children?: string | null;\n  keyword: string;\n  style?: React.CSSProperties;\n}\n\nconst TextHighlighter: React.FC<TextHighlighterProps> = ({\n  children,\n  keyword,\n  style,\n}) => {\n  if (!children) return null;\n\n  const keyIndex = children.toLowerCase().indexOf(keyword?.toLowerCase());\n  const { token } = theme.useToken() || '#F1A239';\n  return keyIndex >= 0 ? (\n    <span>\n      {children.substring(0, keyIndex)}\n      <span style={{ backgroundColor: token.colorWarningHover, ...style }}>\n        {children.substring(keyIndex, keyIndex + keyword.length)}\n      </span>\n      {children.substring(keyIndex + keyword.length)}\n    </span>\n  ) : (\n    <span>{children}</span>\n  );\n};\n\nexport default TextHighlighter;\n","/**\n * @generated SignedSource<<7a44bb06b700bc6990b9f284967ae6c0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ImageEnvironmentSelectFormItemsQuery$variables = {\n  installed?: boolean | null;\n};\nexport type ImageEnvironmentSelectFormItemsQuery$data = {\n  readonly images: ReadonlyArray<{\n    readonly architecture: string | null;\n    readonly digest: string | null;\n    readonly humanized_name: string | null;\n    readonly installed: boolean | null;\n    readonly labels: ReadonlyArray<{\n      readonly key: string | null;\n      readonly value: string | null;\n    } | null> | null;\n    readonly name: string | null;\n    readonly registry: string | null;\n    readonly resource_limits: ReadonlyArray<{\n      readonly key: string | null;\n      readonly max: string | null;\n      readonly min: string | null;\n    } | null> | null;\n    readonly tag: string | null;\n  } | null> | null;\n};\nexport type ImageEnvironmentSelectFormItemsQuery = {\n  response: ImageEnvironmentSelectFormItemsQuery$data;\n  variables: ImageEnvironmentSelectFormItemsQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"installed\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"key\",\n  \"storageKey\": null\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"is_installed\",\n        \"variableName\": \"installed\"\n      }\n    ],\n    \"concreteType\": \"Image\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"images\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"humanized_name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"tag\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"registry\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"architecture\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"digest\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"installed\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ResourceLimit\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"resource_limits\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"min\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"KVPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"labels\",\n        \"plural\": true,\n        \"selections\": [\n          (v1/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"value\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"ea71f4a3948d4742dd6bb11ef80a8300\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ImageEnvironmentSelectFormItemsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ImageEnvironmentSelectFormItemsQuery(\\n  $installed: Boolean\\n) {\\n  images(is_installed: $installed) {\\n    name\\n    humanized_name\\n    tag\\n    registry\\n    architecture\\n    digest\\n    installed\\n    resource_limits {\\n      key\\n      min\\n      max\\n    }\\n    labels {\\n      key\\n      value\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"33367bd6e1532b42b61629ef9d3dc46b\";\n\nexport default node;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '.';\nimport { maskString, useBaiSignedRequestWithPromise } from '../helper';\nimport { useTanMutation, useTanQuery } from './reactQueryAlias';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\n\nexport interface QuotaScope {\n  id: string;\n  quota_scope_id: string;\n  storage_host_name: string;\n  details: {\n    hard_limit_bytes: number | null;\n    usage_bytes: number | null;\n    usage_count: number | null;\n  };\n}\n\nexport const useResourceSlots = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n  const baiClient = useSuspendedBackendaiClient();\n  const { data: resourceSlots } = useTanQuery<{\n    cpu?: string;\n    mem?: string;\n    'cuda.shares'?: string;\n    'cuda.device'?: string;\n    'rocm.device'?: string;\n    'tpu.device'?: string;\n    'ipu.device'?: string;\n    'atom.device'?: string;\n    'warboy.device'?: string;\n  }>({\n    queryKey: ['useResourceSlots', key],\n    queryFn: () => {\n      return baiClient.get_resource_slots();\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n\nexport const useResourceSlotsByResourceGroup = (name?: string) => {\n  const [key, checkUpdate] = useUpdatableState('first');\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const { data: resourceSlots } = useTanQuery<{\n    cpu: string;\n    mem: string;\n    'cuda.shares': string;\n    'cuda.device': string;\n    'rocm.device': string;\n    'ipu.device': string;\n    'atom.device': string;\n    'warboy.device': string;\n    [key: string]: string;\n  }>({\n    queryKey: ['useResourceSlots', name, key],\n    queryFn: () => {\n      // return baiClient.get_resource_slots();\n      if (_.isEmpty(name)) {\n        return;\n      } else {\n        return baiRequestWithPromise({\n          method: 'GET',\n          url: `/config/resource-slots/details?sgroup=${name}`,\n        });\n      }\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n\ninterface UserInfo {\n  full_name: string;\n  email: string;\n}\n\ntype mutationOptions<T> = {\n  onSuccess?: (value: T) => void;\n  onError?: (error: any) => void;\n};\n\nexport const useCurrentUserInfo = () => {\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [userInfo, _setUserInfo] = useState<UserInfo>({\n    full_name: baiClient.full_name,\n    email: baiClient.email,\n  });\n\n  const getUsername = () => {\n    let name: string =\n      _.trim(userInfo.full_name).length > 0\n        ? userInfo.full_name\n        : userInfo.email;\n    // mask username only when the configuration is enabled\n    if (baiClient._config.maskUserInfo) {\n      const maskStartIdx = 2;\n      const emailPattern =\n        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      const isEmail: boolean = emailPattern.test(name);\n      const maskLength = isEmail\n        ? name.split('@')[0].length - maskStartIdx\n        : name.length - maskStartIdx;\n      name = maskString(name, '*', maskStartIdx, maskLength);\n    }\n    return name;\n  };\n\n  useEffect(() => {\n    const handler = (e: any) => {\n      if (baiClient.supports('change-user-name')) {\n        const input = e.detail;\n        _setUserInfo((v) => ({\n          ...v,\n          full_name: input,\n        }));\n      }\n    };\n    document.addEventListener('current-user-info-changed', handler);\n    return () => {\n      document.removeEventListener('current-user-info-changed', handler);\n    };\n  }, [baiClient]);\n\n  const mutationToUpdateUserFullName = useTanMutation({\n    mutationFn: (values: { email: string; full_name: string }) => {\n      return baiClient.update_full_name(values.email, values.full_name);\n    },\n  });\n  const mutationToUpdateUserPassword = useTanMutation({\n    mutationFn: (values: {\n      old_password: string;\n      new_password: string;\n      new_password2: string;\n    }) => {\n      return baiClient.update_password(\n        values.old_password,\n        values.new_password,\n        values.new_password2,\n      );\n    },\n  });\n\n  return [\n    {\n      ...userInfo,\n      username: getUsername(),\n      isPendingMutation:\n        mutationToUpdateUserFullName.isLoading ||\n        mutationToUpdateUserPassword.isLoading,\n    },\n    {\n      updateFullName: (\n        newFullName: string,\n        options?: mutationOptions<string>,\n      ) => {\n        mutationToUpdateUserFullName.mutate(\n          {\n            full_name: newFullName,\n            email: baiClient.email,\n          },\n          {\n            onSuccess: () => {\n              options?.onSuccess && options.onSuccess(newFullName);\n              document.dispatchEvent(\n                new CustomEvent('current-user-info-changed', {\n                  detail: newFullName,\n                }),\n              );\n              _setUserInfo((v) => ({\n                ...v,\n                full_name: newFullName,\n              }));\n            },\n            onError: (error: any) => {\n              options?.onError && options.onError(error);\n            },\n          },\n        );\n      },\n      updatePassword: (\n        params: {\n          old_password: string;\n          new_password: string;\n          new_password2: string;\n        },\n        options?: mutationOptions<undefined>,\n      ) => {\n        mutationToUpdateUserPassword.mutate(params, {\n          onSuccess: () => {\n            options?.onSuccess && options.onSuccess(undefined);\n          },\n          onError: (error: any) => {\n            options?.onError && options.onError(error);\n          },\n        });\n      },\n    },\n  ] as const;\n};\n"],"names":["_ref","objectValues","_ref$values","values","length","React","map","value","label","color","_jsx","Flex","direction","children","_","objValue","idx","Tag","style","undefined","margin","marginRight","getImageFullName","image","concat","registry","name","tag","architecture","_form$getFieldValue3","filter","showPrivate","useSuspendedBackendaiClient","form","Form","useFormInstance","useWatch","preserve","_useState","useState","_useState2","_slicedToArray","environmentSearch","setEnvironmentSearch","_useState3","_useState4","versionSearch","setVersionSearch","t","useTranslation","_useBackendaiImageMet","useBackendaiImageMetaData","_useBackendaiImageMet2","metadata","getImageMeta","token","theme","useToken","envSelectRef","useRef","versionSelectRef","images","useLazyLoadQuery","_ImageEnvironmentSelectFormItemsQuery","require","installed","fetchPolicy","useEffect","_form$getFieldValue","_imageGroups$","_imageGroups$$environ","_nextEnvironmentGroup","nextEnvironmentGroup","nextEnvironmentName","getFieldValue","environment","imageGroups","environmentGroups","environmentName","group","_form$getFieldValue2","version","_nextEnvironmentGroup2","nextNewImage","setFieldsValue","environments","useMemo","labels","_label$value","key","split","includes","isPrivateImage","groupBy","_metadata$imageInfo$g","imageInfo","groupName","_metadata$imageInfo$e","_environmentName$spli","_environmentName$spli2","displayName","prefix","sort","a","b","_b$tag$split$","_b$tag","_b$tag$split","_a$tag$split$","_a$tag","_a$tag$split","version1","version2","v1","Number","v2","i","Math","max","num1","num2","compareVersions","sortBy","item","_useMemo","fullNameMatchedImage","fullNameMatchedImageGroup","flatMap","find","envGroup","_jsxs","_Fragment","Item","rules","required","marginBottom","Select","ref","showSearch","labelInValue","searchValue","onSearch","defaultActiveFirstOption","optionLabelProp","optionFilterProp","onChange","Option","filterValue","align","gap","display","ImageMetaIcon","width","height","OptGroup","environmentGroup","_environmentGroup$env","firstImage","currentMetaImageInfo","extraFilterValues","environmentPrefixTag","push","TextHighlighter","keyword","tagsFromMetaImageInfoLabel","category","join","justify","noStyle","shouldUpdate","prev","cur","_prev$environments","_cur$environments","_ref2","_selectedEnvironmentG","selectedEnvironmentGroup","_getFieldValue","selectedImage","setFieldValue","dropdownRender","menu","fontWeight","fontWeightStrong","paddingLeft","paddingSM","Divider","type","_image$tag","_ref3","_ref4","_toArray","requirements","slice","tagAlias","_i","_Object$entries","Object","entries","tagReplace","_Object$entries$_i","replaceString","pattern","RegExp","test","replace","requirementTags","wrap","flex","requirement","_metadata$tagAlias$re","DoubleTag","str","digest","hidden","Input","bordered","_ref$style","alt","arguments","getImageIcon","src","_objectSpread","ACCELERATOR_UNIT_MAP","MWCIconWrap","_ref2$size","size","ResourceTypeIcon","_resourceTypeIconSrcM","_resourceTypeIconSrcM2","_resourceTypeIconSrcM3","_ref3$size","_ref3$showTooltip","showIcon","showUnit","showTooltip","props","_objectWithoutProperties","_excluded","resourceTypeIconSrcMap","cpu","mem","content","alignSelf","Tooltip","title","pointerEvents","_iSizeToSize","_iSizeToSize2","amount","extra","opts","_ref$hideTooltip","hideTooltip","units","Typography","Text","iSizeToSize","numberFixed","toString","parseFloat","toFixed","shmem","fontSize","fontSizeSM","min","step","inputNumberProps","sliderProps","initialValue","disabled","formItemProps","Slider","minWidth","InputNumber","onStep","info","console","log","keyIndex","toLowerCase","indexOf","substring","backgroundColor","colorWarningHover","node","v0","hash","useResourceSlots","_useUpdatableState","useUpdatableState","_useUpdatableState2","checkUpdate","baiClient","useTanQuery","queryKey","queryFn","get_resource_slots","staleTime","data","refresh","useCurrentUserInfo","full_name","email","userInfo","_setUserInfo","handler","e","supports","input","detail","v","document","addEventListener","removeEventListener","mutationToUpdateUserFullName","useTanMutation","mutationFn","update_full_name","mutationToUpdateUserPassword","update_password","old_password","new_password","new_password2","username","_config","maskUserInfo","maskLength","maskString","getUsername","isPendingMutation","isLoading","updateFullName","newFullName","options","mutate","onSuccess","dispatchEvent","CustomEvent","onError","error","updatePassword","params"],"sourceRoot":""}