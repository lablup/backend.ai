{"version":3,"file":"static/js/345.8d5f7c3d.chunk.js","mappings":"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","sources":["components/KeypairInfoModal.tsx","components/__generated__/KeypairInfoModalQuery.graphql.ts"],"sourcesContent":["/**\n @license\n Copyright (c) 2015-2024 Lablup Inc. All rights reserved.\n */\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { KeypairInfoModalQuery } from './__generated__/KeypairInfoModalQuery.graphql';\nimport { Button, Table, Typography, Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface KeypairInfoModalProps extends BAIModalProps {\n  onRequestClose: () => void;\n}\n\nconst KeypairInfoModal: React.FC<KeypairInfoModalProps> = ({\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const [userInfo] = useCurrentUserInfo();\n  const baiClient = useSuspendedBackendaiClient();\n  const { data: keypairs } = useTanQuery({\n    queryKey: ['baiClient.keypair.list', baiModalProps.open], // refetch on open state\n    queryFn: () => {\n      return baiModalProps.open\n        ? baiClient.keypair\n            .list(\n              userInfo.email,\n              ['access_key', 'secret_key', 'is_active'],\n              true,\n            )\n            .then((res: any) => res.keypairs)\n        : null;\n    },\n    suspense: false,\n    staleTime: 0,\n    cacheTime: 0,\n  });\n\n  const supportMainAccessKey = baiClient?.supports('main-access-key');\n\n  const { user } = useLazyLoadQuery<KeypairInfoModalQuery>(\n    graphql`\n      query KeypairInfoModalQuery($email: String) {\n        user(email: $email) {\n          email\n          main_access_key @since(version: \"23.09.7\")\n        }\n      }\n    `,\n    {\n      email: userInfo.email,\n    },\n  );\n\n  return (\n    <BAIModal\n      {...baiModalProps}\n      title={t('usersettings.MyKeypairInfo')}\n      centered\n      onCancel={onRequestClose}\n      destroyOnClose\n      width={'auto'}\n      footer={[\n        <Button\n          key=\"keypairInfoClose\"\n          onClick={() => {\n            onRequestClose();\n          }}\n        >\n          {t('button.Close')}\n        </Button>,\n      ]}\n    >\n      <Table\n        scroll={{ x: 'max-content' }}\n        rowKey={'access_key'}\n        dataSource={keypairs}\n        columns={[\n          {\n            title: '#',\n            fixed: 'left',\n            render: (id, record, index) => {\n              ++index;\n              return index;\n            },\n            showSorterTooltip: false,\n            rowScope: 'row',\n          },\n          {\n            title: t('general.AccessKey'),\n            key: 'accessKey',\n            dataIndex: 'access_key',\n            fixed: 'left',\n            render: (value) => (\n              <Flex direction=\"column\" align=\"start\">\n                <Typography.Text ellipsis copyable>\n                  {value}\n                </Typography.Text>\n                {supportMainAccessKey && value === user?.main_access_key && (\n                  <Tag color=\"#457b3b\">{t('credential.MainAccessKey')}</Tag>\n                )}\n              </Flex>\n            ),\n          },\n          {\n            title: t('general.SecretKey'),\n            key: 'secretKey',\n            dataIndex: 'secret_key',\n            fixed: 'left',\n            render: (value) => (\n              <Typography.Text ellipsis copyable>\n                {value}\n              </Typography.Text>\n            ),\n          },\n        ]}\n      />\n    </BAIModal>\n  );\n};\n\nexport default KeypairInfoModal;\n","/**\n * @generated SignedSource<<fcbc696bf6b56fc8ceadb3bc9a3cead5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type KeypairInfoModalQuery$variables = {\n  email?: string | null | undefined;\n};\nexport type KeypairInfoModalQuery$data = {\n  readonly user: {\n    readonly email: string | null | undefined;\n    readonly main_access_key: string | null | undefined;\n  } | null | undefined;\n};\nexport type KeypairInfoModalQuery = {\n  response: KeypairInfoModalQuery$data;\n  variables: KeypairInfoModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"main_access_key\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"KeypairInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"KeypairInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"352a943226b02e137a3fcd32fa0ae22a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"KeypairInfoModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query KeypairInfoModalQuery(\\n  $email: String\\n) {\\n  user(email: $email) {\\n    email\\n    main_access_key @since(version: \\\"23.09.7\\\")\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"70097c005c8abc07e233048a68db1273\";\n\nexport default node;\n"],"names":["_ref","onRequestClose","baiModalProps","t","useTranslation","userInfo","useCurrentUserInfo","baiClient","useSuspendedBackendaiClient","data","keypairs","useTanQuery","queryKey","open","queryFn","keypair","list","email","then","res","suspense","staleTime","cacheTime","supportMainAccessKey","supports","user","useLazyLoadQuery","_KeypairInfoModalQuery","require","_jsx","BAIModal","title","centered","onCancel","destroyOnClose","width","footer","Button","onClick","children","Table","scroll","x","rowKey","dataSource","columns","fixed","render","id","record","index","showSorterTooltip","rowScope","key","dataIndex","value","_jsxs","Flex","direction","align","Typography","Text","ellipsis","copyable","main_access_key","Tag","color","node","v0","v1","v2","v3","hash"],"sourceRoot":""}