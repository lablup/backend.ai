{"version":3,"file":"static/js/896.120e24f8.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/TOTPActivateModal.tsx","components/__generated__/TOTPActivateModalFragment.graphql.ts"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","import { parse, print, visit } from 'graphql';\n\n// Delete nodes in enter\n// Remove unnecessary arguments or directives in leave\nexport function manipulateGraphQLQueryWithClientDirectives(\n  query: string,\n  variables: any = {},\n  isCompatibleWith: (version: string) => boolean,\n) {\n  const ast = parse(query);\n  let newAst = visit(ast, {\n    Field: {\n      enter(node) {\n        if (\n          node?.directives?.find((directive) => {\n            const directiveName = directive.name.value;\n            const firstArgName = directive.arguments?.[0].name.value;\n            // @ts-ignore\n            const firstArgValue = directive.arguments?.[0].value?.value;\n            const arg = directive.arguments?.[0];\n\n            if (directiveName === 'since' && firstArgName === 'version') {\n              if (isCompatibleWith(firstArgValue)) {\n                return true;\n              }\n            } else if (\n              directiveName === 'deprecatedSince' &&\n              firstArgName === 'version'\n            ) {\n              const version =\n                arg?.value.kind === 'StringValue'\n                  ? arg?.value.value\n                  : // @ts-ignore\n                    variables[arg?.value.name.value];\n\n              if (!isCompatibleWith(version)) {\n                return true;\n              }\n            } else if (\n              directiveName === 'skipOnClient' &&\n              firstArgName === 'if'\n            ) {\n              if (arg?.value.kind === 'BooleanValue' && arg.value.value) {\n                return true;\n              }\n\n              if (\n                arg?.value.kind === 'Variable' &&\n                variables[arg.value.name.value]\n              ) {\n                return true;\n              }\n            }\n            return false;\n          })\n        ) {\n          return null;\n        }\n      },\n      leave(node) {\n        // when field has a empty selectionSet, delete it\n        if (\n          node.selectionSet &&\n          node.selectionSet.kind === 'SelectionSet' &&\n          node.selectionSet.selections?.length === 0\n        ) {\n          return null;\n        }\n      },\n    },\n    Directive: {\n      // delete all onClient directives\n      leave(directive) {\n        const directiveName = directive.name.value;\n        if (\n          ['since', 'deprecatedSince', 'skipOnClient'].includes(directiveName)\n        ) {\n          return null;\n        }\n      },\n    },\n  });\n\n  // count used variables\n  const usedVariables: {\n    [key: string]: number;\n  } = {};\n  visit(newAst, {\n    Variable(node) {\n      usedVariables[node.name.value] =\n        (usedVariables[node.name.value] || 0) + 1;\n    },\n  });\n\n  // delete unused variables\n  newAst = visit(newAst, {\n    VariableDefinition: {\n      enter(variableDefinition) {\n        if (usedVariables[variableDefinition.variable.name.value] <= 1) {\n          return null;\n        }\n      },\n    },\n  });\n\n  return print(newAst);\n}\n","// import { createClient } from \"graphql-ws\";\nimport { manipulateGraphQLQueryWithClientDirectives } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  //@ts-ignore\n  if (globalThis.backendaiclient === undefined) {\n    // If globalThis.backendaiclient is not defined, wait for the backend-ai-connected event.\n    await new Promise((resolve) => {\n      const onBackendAIConnected = () => {\n        // When the backend-ai-connected event occurs, remove the event listener and execute the function.\n        document.removeEventListener(\n          'backend-ai-connected',\n          onBackendAIConnected,\n        );\n        resolve(undefined);\n      };\n      document.addEventListener('backend-ai-connected', onBackendAIConnected);\n    });\n  }\n\n  const transformedQuery = manipulateGraphQLQueryWithClientDirectives(\n    request.text || '',\n    variables,\n    (version) => {\n      // @ts-ignore\n      return !globalThis.backendaiclient?.isManagerVersionCompatibleWith(\n        version,\n      );\n    },\n  );\n\n  const reqBody = {\n    query: transformedQuery,\n    variables: variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  const result =\n    //@ts-ignore\n    (await globalThis.backendaiclient\n      ?._wrapWithPromise(reqInfo, false, null, 10000, 0)\n      .catch((err: any) => {\n        // console.log(err);\n      })) || {};\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { App, ConfigProvider } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport localeData from 'dayjs/plugin/localeData';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport weekday from 'dayjs/plugin/weekday';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\n\ndayjs.extend(weekday);\ndayjs.extend(localeData);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (\n    path: string,\n    params?: {\n      [key in string]?: boolean | string | number;\n    },\n  ) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n    react: {\n      transSupportBasicHtmlNodes: true,\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'span', 'code', 'p'],\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // For changing locale globally, use dayjs.locale instead of dayjs().locale\n    dayjs.locale(lang);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n      // For changing locale globally, use dayjs.locale instead of dayjs().locale\n      dayjs.locale(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path, params) => {\n        dispatchEvent('moveTo', { path, params: params });\n      },\n    } as WebComponentContextType;\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return triggerNode?.parentNode || shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <App>\n                      <StyleProvider container={shadowRoot} cache={cache}>\n                        <Suspense fallback=\"\">\n                          <BrowserRouter>\n                            <QueryParamProvider\n                              adapter={ReactRouter6Adapter}\n                              options={\n                                {\n                                  // searchStringToObject: queryString.parse,\n                                  // objectToSearchString: queryString.stringify,\n                                }\n                              }\n                            >\n                              <RoutingEventHandler />\n                              {children}\n                            </QueryParamProvider>\n                          </BrowserRouter>\n                        </Suspense>\n                      </StyleProvider>\n                    </App>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { TOTPActivateModalFragment$key } from './__generated__/TOTPActivateModalFragment.graphql';\nimport { QRCode, Typography, Input, theme, Form, message, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useFragment } from 'react-relay';\n\ntype TOTPActivateFormInput = {\n  otp: number;\n};\n\ninterface Props extends BAIModalProps {\n  userFrgmt?: TOTPActivateModalFragment$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst TOTPActivateModal: React.FC<Props> = ({\n  userFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<TOTPActivateFormInput>();\n\n  const user = useFragment(\n    graphql`\n      fragment TOTPActivateModalFragment on User {\n        email\n        totp_activated @skipOnClient(if: $isNotSupportTotp)\n      }\n    `,\n    userFrgmt,\n  );\n\n  const baiClient = useSuspendedBackendaiClient();\n  let initializedTotp = useQuery<{\n    totp_key: string;\n    totp_uri: string;\n  }>({\n    queryKey: ['initialize_totp', baiClient?.email, baiModalProps.open],\n    queryFn: () => {\n      return user?.email === baiClient?.email &&\n        !user?.totp_activated &&\n        baiModalProps.open\n        ? baiClient.initialize_totp()\n        : null;\n    },\n    suspense: false,\n    staleTime: 0,\n    cacheTime: 0,\n  });\n\n  const mutationToActivateTotp = useTanMutation({\n    mutationFn: (values: TOTPActivateFormInput) => {\n      return baiClient.activate_totp(values.otp);\n    },\n  });\n\n  const _onOk = () => {\n    form.validateFields().then((values) => {\n      mutationToActivateTotp.mutate(values, {\n        onSuccess: () => {\n          message.success(t('totp.TotpSetupCompleted'));\n          onRequestClose(true);\n        },\n        onError: () => {\n          message.error(t('totp.InvalidTotpCode'));\n        },\n      });\n      new Promise((resolve, reject) => {}).then(() => {\n        onRequestClose(true);\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      title={t('webui.menu.SetupTotp')}\n      maskClosable={false}\n      confirmLoading={mutationToActivateTotp.isLoading}\n      onOk={_onOk}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      style={{ zIndex: 1 }}\n      {...baiModalProps}\n    >\n      {initializedTotp.isLoading ? (\n        <Flex justify=\"center\" direction=\"row\">\n          <Spin />\n        </Flex>\n      ) : !initializedTotp.data ? (\n        <Flex justify=\"center\" direction=\"row\">\n          {t('totp.TotpSetupNotAvailable')}\n        </Flex>\n      ) : (\n        <Form\n          preserve={false}\n          form={form}\n          validateTrigger={['onChange', 'onBlur']}\n        >\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <QRCode value={initializedTotp.data.totp_uri} />\n          </Flex>\n          {t('totp.ScanQRToEnable')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Typography.Text copyable code>\n              {initializedTotp.data.totp_key}\n            </Typography.Text>\n          </Flex>\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Form.Item required name=\"otp\">\n              <Input\n                maxLength={6}\n                allowClear\n                placeholder=\"000000\"\n                style={{ maxWidth: 120 }}\n              />\n            </Form.Item>\n          </Flex>\n        </Form>\n      )}\n    </BAIModal>\n  );\n};\n\nexport default TOTPActivateModal;\n","/**\n * @generated SignedSource<<84ef114f996ea8a63ee4526fc5d27953>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type TOTPActivateModalFragment$data = {\n  readonly email: string | null;\n  readonly totp_activated: boolean | null;\n  readonly \" $fragmentType\": \"TOTPActivateModalFragment\";\n};\nexport type TOTPActivateModalFragment$key = {\n  readonly \" $data\"?: TOTPActivateModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"isNotSupportTotp\"\n    }\n  ],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"TOTPActivateModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"User\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f5da6b3094f7d70bef9373d9c907955c\";\n\nexport default node;\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","manipulateGraphQLQueryWithClientDirectives","query","variables","arguments","length","undefined","isCompatibleWith","ast","parse","newAst","visit","Field","enter","node","_node$directives","directives","find","directive","_directive$arguments","_directive$arguments2","_directive$arguments3","_directive$arguments4","directiveName","name","value","firstArgName","firstArgValue","arg","version","kind","leave","_node$selectionSet$se","selectionSet","selections","Directive","includes","usedVariables","Variable","VariableDefinition","variableDefinition","variable","print","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai2","_globalThis$backendai3","transformedQuery","reqBody","reqInfo","result","wrap","_context","prev","next","globalThis","backendaiclient","Promise","resolve","document","addEventListener","onBackendAIConnected","removeEventListener","text","_globalThis$backendai","isManagerVersionCompatibleWith","newSignedRequest","_wrapWithPromise","catch","err","t0","sent","abrupt","stop","_x","_x2","apply","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","dayjs","weekday","localeData","localizedFormat","relativeTime","utc","timezone","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","react","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","replace","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","_slicedToArray","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","params","RelayEnvironmentProvider","environment","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","App","StyleProvider","container","Suspense","fallback","BrowserRouter","QueryParamProvider","adapter","ReactRouter6Adapter","options","_ref$userFrgmt","userFrgmt","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","t","token","useToken","_Form$useForm","Form","useForm","form","user","useFragment","_TOTPActivateModalFragment","require","baiClient","useSuspendedBackendaiClient","initializedTotp","useQuery","queryKey","email","open","queryFn","totp_activated","initialize_totp","staleTime","cacheTime","mutationToActivateTotp","useTanMutation","mutationFn","values","activate_totp","otp","BAIModal","title","maskClosable","confirmLoading","isLoading","onOk","validateFields","then","mutate","onSuccess","message","success","onError","error","reject","onCancel","style","zIndex","Flex","justify","direction","Spin","data","preserve","validateTrigger","margin","marginSM","gap","QRCode","totp_uri","Typography","Text","copyable","code","totp_key","Item","required","Input","maxLength","allowClear","placeholder","maxWidth"],"sourceRoot":""}