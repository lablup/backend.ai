{"version":3,"file":"static/js/540.c51503fa.chunk.js","mappings":"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","sources":["components/DefaultProviders.tsx","components/Flex.tsx","components/ResetPasswordRequired.tsx","helper/index.tsx","hooks/index.ts"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { StyleProvider, createCache } from \"@ant-design/cssinjs\";\nimport { ConfigProvider } from \"antd\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactWebComponentProps } from \"../helper/react-to-webcomponent\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\n\nimport en_US from \"antd/locale/en_US\";\nimport ko_KR from \"antd/locale/ko_KR\";\nimport { useCustomThemeConfig } from \"../helper/customThemeConfig\";\n\n// @ts-ignore\nimport rawFixAntCss from \"../fix_antd.css?raw\";\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps[\"value\"];\n  dispatchEvent: ReactWebComponentProps[\"dispatchEvent\"];\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: \"/resources/i18n/{{lng}}.json\",\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get(\"current_language\") || \"en\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis.backendaioptions.get(\"current_language\")\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n.changeLanguage(lang), 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e.detail.lang);\n      //@ts-ignore\n      const lang: string = e.detail?.lang || \"en\";\n      i18n.changeLanguage(lang);\n    };\n    window.addEventListener(\"langChanged\", handler);\n    return () => window.removeEventListener(\"langChanged\", handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n    };\n  }, [value, dispatchEvent]);\n  return (\n    <React.StrictMode>\n      <style>\n        {styles}\n        {rawFixAntCss}\n      </style>\n      <QueryClientProvider client={queryClient}>\n        <ShadowRootContext.Provider value={shadowRoot}>\n          <WebComponentContext.Provider value={componentValues}>\n            <ConfigProvider\n              // @ts-ignore\n              getPopupContainer={(triggerNode) => {\n                if (triggerNode?.parentNode) {\n                  return triggerNode.parentNode;\n                }\n                return shadowRoot;\n              }}\n              //TODO: apply other supported locales\n              locale={\"ko\" === lang ? ko_KR : en_US}\n              theme={themeConfig}\n            >\n              <StyleProvider container={shadowRoot} cache={cache}>\n                {children}\n              </StyleProvider>\n            </ConfigProvider>\n          </WebComponentContext.Provider>\n        </ShadowRootContext.Provider>\n      </QueryClientProvider>\n    </React.StrictMode>\n  );\n};\n\nexport default DefaultProviders;\n","import { theme } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\n\ninterface FlexProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"dir\">,\n    PropsWithChildren {\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  justify?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  // | \"evenly\";\n  align?: \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n  gap?: number | \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nconst Flex: React.FC<FlexProps> = ({\n  direction = \"row\",\n  wrap = \"nowrap\",\n  justify = \"flex-start\",\n  align = \"center\",\n  gap = 0,\n  style,\n  children,\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferConst = [justify, align];\n  const transferConstStyle = transferConst.map((el) => {\n    let tempTxt;\n    switch (el) {\n      case \"start\":\n        tempTxt = \"flex-start\";\n        break;\n      case \"end\":\n        tempTxt = \"flex-end\";\n        break;\n      case \"between\":\n        tempTxt = \"space-between\";\n        break;\n      case \"around\":\n        tempTxt = \"space-around\";\n        break;\n      default:\n        tempTxt = el;\n        break;\n    }\n\n    return tempTxt;\n  });\n  const flexStyle: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: direction,\n    flexWrap: wrap,\n    justifyContent: transferConstStyle[0],\n    alignItems: transferConstStyle[1],\n    ...style,\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"stretch\",\n        backgroundColor: \"transparent\",\n        border: \"0 solid black\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexBasis: \"auto\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        listStyle: \"none\",\n        margin: 0,\n        minHeight: 0,\n        minWidth: 0,\n        padding: 0,\n        position: \"relative\",\n        textDecoration: \"none\",\n        gap:\n          // @ts-ignore\n          typeof gap === \"string\" ? token[\"padding\" + gap.toUpperCase()] : gap,\n        ...flexStyle,\n      }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","import { Button, Form, Modal, Typography, Input, theme } from \"antd\";\nimport { useWebComponentInfo } from \"./DefaultProviders\";\nimport Flex from \"./Flex\";\nimport { useTranslation } from \"react-i18next\";\nimport { WarningTwoTone } from \"@ant-design/icons\";\nimport { useMutation as useTanMutation } from \"react-query\";\nimport { useAnonymousBackendaiClient } from \"../hooks\";\nimport { baiSignedRequestWithPromise } from \"../helper\";\nimport { useEffect } from \"react\";\n\n// src/components/backend-ai-common-utils.ts\nexport const passwordPattern = /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[_\\W]).{8,}$/;\n\nconst ResetPasswordRequired = () => {\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    currentPassword: string;\n    username: string;\n    api_endpoint: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || \"\");\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      currentPassword: \"\",\n      username: \"\",\n      api_endpoint: \"\",\n    };\n  }\n  const { open, currentPassword, username, api_endpoint } = parsedValue;\n\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<{\n    newPassword: string;\n    confirm: string;\n  }>();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (open) {\n      form.resetFields();\n    }\n  }, [open, form]);\n\n  const anonymousBaiClient = useAnonymousBackendaiClient({ api_endpoint });\n\n  const mutation = useTanMutation({\n    mutationFn: (body: {\n      username: string;\n      current_password: string;\n      new_password: string;\n    }) => {\n      return baiSignedRequestWithPromise({\n        method: \"POST\",\n        url: \"/server/update-password-no-auth\",\n        body,\n        client: anonymousBaiClient,\n      });\n    },\n  });\n\n  const onSubmit = () => {\n    form.validateFields().then((values) => {\n      mutation.mutate(\n        {\n          username: username,\n          current_password: currentPassword,\n          new_password: values.newPassword,\n        },\n        {\n          onSuccess(data, variables, context) {\n            dispatchEvent(\"ok\", null);\n          },\n          onError(error, variables, context) {},\n        }\n      );\n    });\n  };\n\n  return (\n    <Modal\n      open={open}\n      centered\n      mask={false}\n      onCancel={() => {\n        dispatchEvent(\"cancel\", null);\n      }}\n      keyboard={false}\n      maskClosable={false}\n      footer={null}\n      width={450}\n      destroyOnClose={true}\n      forceRender\n    >\n      <Flex\n        direction=\"column\"\n        justify=\"start\"\n        align=\"stretch\"\n        gap={\"md\"}\n        style={{\n          alignSelf: \"stretch\",\n          paddingTop: token.paddingMD,\n          paddingBottom: token.paddingMD,\n        }}\n      >\n        <Typography.Title level={3} style={{ margin: 0 }}>\n          <WarningTwoTone twoToneColor={token.colorWarning} />{\" \"}\n          {t(\"webui.menu.PleaseChangeYourPassword\")}\n        </Typography.Title>\n        {t(\"webui.menu.YouMushChangeYourPassword\")}\n        <Form\n          form={form}\n          layout=\"vertical\"\n          initialValues={{\n            currentPassword: currentPassword,\n          }}\n          disabled={mutation.isLoading}\n        >\n          <Form.Item\n            name=\"newPassword\"\n            label={t(\"webui.menu.NewPassword\")}\n            rules={[\n              {\n                required: true,\n              },\n              {\n                pattern: passwordPattern,\n                message: t(\"webui.menu.InvalidPasswordMessage\").toString(),\n              },\n              () => ({\n                validator(_, value) {\n                  if (currentPassword === value) {\n                    return Promise.reject(\n                      new Error(\n                        t(\"webui.menu.NewPasswordCannotBeSame\").toString()\n                      )\n                    );\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm\"\n            label={t(\"webui.menu.NewPasswordAgain\")}\n            dependencies={[\"newPassword\"]}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"newPassword\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(t(\"environment.PasswordsDoNotMatch\").toString())\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password onPressEnter={onSubmit} />\n          </Form.Item>\n        </Form>\n        <Button type=\"primary\" onClick={onSubmit} loading={mutation.isLoading}>\n          {t(\"webui.menu.Update\")}\n        </Button>\n      </Flex>\n    </Modal>\n  );\n};\n\nexport default ResetPasswordRequired;\n","export const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client.newSignedRequest(method, url, body, null);\n  return client._wrapWithPromise(request);\n};\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n"],"names":["WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","globalThis","_globalThis$backendai","backendaioptions","get","fallbackLng","interpolation","escapeValue","_ref","children","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","_slicedToArray","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","e","_e$detail","detail","window","addEventListener","removeEventListener","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","_jsxs","_jsx","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","StyleProvider","container","_ref$direction","direction","_ref$wrap","wrap","_ref$justify","justify","_ref$align","align","_ref$gap","gap","style","restProps","_objectWithoutProperties","_excluded","token","transferConstStyle","map","el","tempTxt","flexStyle","_objectSpread","display","flexDirection","flexWrap","justifyContent","alignItems","backgroundColor","border","boxSizing","flexBasis","flexShrink","listStyle","margin","minHeight","minWidth","padding","position","textDecoration","toUpperCase","passwordPattern","parsedValue","_useWebComponentInfo","JSON","parse","error","open","currentPassword","username","api_endpoint","_parsedValue","_Form$useForm","Form","form","t","resetFields","anonymousBaiClient","useAnonymousBackendaiClient","mutation","useTanMutation","mutationFn","body","baiSignedRequestWithPromise","method","url","onSubmit","validateFields","then","values","mutate","current_password","new_password","newPassword","onSuccess","data","variables","context","onError","Modal","centered","mask","onCancel","keyboard","maskClosable","footer","width","destroyOnClose","forceRender","Flex","alignSelf","paddingTop","paddingMD","paddingBottom","Typography","level","WarningTwoTone","twoToneColor","colorWarning","layout","initialValues","disabled","isLoading","name","label","rules","required","pattern","message","toString","validator","_","Promise","reject","Error","resolve","hasFeedback","Input","dependencies","getFieldValue","onPressEnter","Button","type","onClick","loading","newLineToBrElement","text","separatorRegExp","arguments","length","undefined","split","line","index","match","_ref$body","request","newSignedRequest","_wrapWithPromise","clientConfig","BackendAIClientConfig","BackendAIClient","useSuspendedBackendaiClient","useQuery","queryKey","queryFn","backendaiclient","ready","document","listener"],"sourceRoot":""}