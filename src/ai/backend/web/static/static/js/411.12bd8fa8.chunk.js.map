{"version":3,"file":"static/js/411.12bd8fa8.chunk.js","mappings":"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","sources":["components/Chat/__generated__/ChatCardQuery.graphql.ts","components/Chat/__generated__/ChatHeader_Endpoint.graphql.ts","components/Chat/__generated__/EndpointSelectQuery.graphql.ts","components/Chat/__generated__/EndpointSelectValueQuery.graphql.ts","components/Chat/__generated__/EndpointTokenSelectQuery.graphql.ts","components/FluentEmojiIcon.tsx","hooks/useAIAgent.ts","components/Chat/AIAgentSelect.tsx","components/Chat/ChatParametersSliders.tsx","components/TotalFooter.tsx","components/Chat/EndpointSelect.tsx","hooks/usePaginatedQuery.ts","components/Chat/ModelSelect.tsx","components/Chat/ChatHeader.tsx","components/Chat/ChatSender.tsx","components/Chat/ChatInput.tsx","hooks/useTokenizer.ts","components/Chat/ChatTokenCounter.tsx","components/Chat/ChatMessageContainer.tsx","components/Chat/CopyButton.tsx","hooks/useHighlight.ts","components/Chat/SyntaxHighight.tsx","components/Chat/ChatMessageContent.tsx","components/Chat/ChatMessage.tsx","components/Chat/AssistantChatMesssage.tsx","components/Chat/ScrollBottomHandlerButton.tsx","components/Chat/VirtualChatMessageList.tsx","components/Chat/UserChatMesssage.tsx","components/Chat/ChatMessages.tsx","components/Chat/EndpointTokenSelect.tsx","components/Chat/CustomModelForm.tsx","components/Chat/ChatCard.tsx","components/Chat/ChatModel.tsx","components/Chat/Conversation.tsx","pages/ChatPage.tsx","pages/__generated__/ChatPageQuery.graphql.ts"],"sourcesContent":["/**\n * @generated SignedSource<<e5d693125b3adaa1a4eae699dd1aee12>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs, Result } from \"relay-runtime\";\nexport type ChatCardQuery$variables = {\n  endpointId: string;\n};\nexport type ChatCardQuery$data = {\n  readonly endpoint: Result<{\n    readonly endpoint_id: string | null | undefined;\n    readonly url: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ChatHeader_Endpoint\">;\n  } | null | undefined, unknown>;\n};\nexport type ChatCardQuery = {\n  response: ChatCardQuery$data;\n  variables: ChatCardQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpointId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ChatCardQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": {\n          \"alias\": null,\n          \"args\": (v1/*: any*/),\n          \"concreteType\": \"Endpoint\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"endpoint\",\n          \"plural\": false,\n          \"selections\": [\n            (v2/*: any*/),\n            (v3/*: any*/),\n            {\n              \"args\": null,\n              \"kind\": \"FragmentSpread\",\n              \"name\": \"ChatHeader_Endpoint\"\n            }\n          ],\n          \"storageKey\": null\n        },\n        \"to\": \"RESULT\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ChatCardQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"6e2c7cca467d32f74de4ddf840a8f08a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ChatCardQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ChatCardQuery(\\n  $endpointId: UUID!\\n) {\\n  endpoint(endpoint_id: $endpointId) {\\n    endpoint_id\\n    url\\n    ...ChatHeader_Endpoint\\n    id\\n  }\\n}\\n\\nfragment ChatHeader_Endpoint on Endpoint {\\n  endpoint_id\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"5ff3fd270fca0bac7779be279e93341e\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c53946a820e47295c1530ab5d02ed807>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ChatHeader_Endpoint$data = {\n  readonly endpoint_id: string | null | undefined;\n  readonly \" $fragmentType\": \"ChatHeader_Endpoint\";\n};\nexport type ChatHeader_Endpoint$key = {\n  readonly \" $data\"?: ChatHeader_Endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ChatHeader_Endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ChatHeader_Endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"baa41c02cf67330c6bf4313d43280faa\";\n\nexport default node;\n","/**\n * @generated SignedSource<<082ee34999eb1cf06d1c21de59385e0d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type EndpointSelectQuery$variables = {\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n};\nexport type EndpointSelectQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string;\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointSelectQuery = {\n  response: EndpointSelectQuery$data;\n  variables: EndpointSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v7/*: any*/),\n                \"action\": \"NONE\"\n              },\n              (v8/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v1/*: any*/),\n      (v3/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"aae5f818f3d7f1a77dce26a43ed1ead6\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      url\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"75cd9e15a8e37c564ec047492c6798b3\";\n\nexport default node;\n","/**\n * @generated SignedSource<<a9b0e2dcfa6a989d5e9e95f31d87b20d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type EndpointSelectValueQuery$variables = {\n  endpoint_id: string;\n};\nexport type EndpointSelectValueQuery$data = {\n  readonly endpoint: {\n    readonly endpoint_id: string;\n    readonly name: string | null | undefined;\n    readonly url: string | null | undefined;\n  } | null | undefined;\n};\nexport type EndpointSelectValueQuery = {\n  response: EndpointSelectValueQuery$data;\n  variables: EndpointSelectValueQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpoint_id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpoint_id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectValueQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"kind\": \"RequiredField\",\n            \"field\": (v3/*: any*/),\n            \"action\": \"NONE\"\n          },\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectValueQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"305b4336fc43ab460edf54efa95ff116\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectValueQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectValueQuery(\\n  $endpoint_id: UUID!\\n) {\\n  endpoint(endpoint_id: $endpoint_id) {\\n    name\\n    endpoint_id\\n    url\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"5f7c6954ddf84a211dc8428e86004300\";\n\nexport default node;\n","/**\n * @generated SignedSource<<715fa760caad46a2fadd8e35e197b7ac>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { Result } from \"relay-runtime\";\nexport type EndpointTokenSelectQuery$variables = {\n  endpointId: string;\n  isEmptyEndpointId: boolean;\n};\nexport type EndpointTokenSelectQuery$data = {\n  readonly endpoint_token_list: Result<{\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly id: string | null | undefined;\n      readonly token: string;\n      readonly valid_until: string | null | undefined;\n    } | null | undefined>;\n  } | null | undefined, unknown>;\n};\nexport type EndpointTokenSelectQuery = {\n  response: EndpointTokenSelectQuery$data;\n  variables: EndpointTokenSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"endpointId\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isEmptyEndpointId\"\n  }\n],\nv1 = {\n  \"alias\": null,\n  \"args\": [\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"endpoint_id\",\n      \"variableName\": \"endpointId\"\n    },\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"limit\",\n      \"value\": 100\n    },\n    {\n      \"kind\": \"Literal\",\n      \"name\": \"offset\",\n      \"value\": 0\n    }\n  ],\n  \"concreteType\": \"EndpointTokenList\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"endpoint_token_list\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"EndpointToken\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"items\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"id\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"token\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"created_at\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"valid_until\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": (v1/*: any*/),\n        \"to\": \"RESULT\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"selections\": [\n      (v1/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"f8777131f4094de086beaa0e11d6ae09\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointTokenSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointTokenSelectQuery(\\n  $endpointId: UUID!\\n  $isEmptyEndpointId: Boolean!\\n) {\\n  endpoint_token_list(offset: 0, limit: 100, endpoint_id: $endpointId) @skipOnClient(if: $isEmptyEndpointId) {\\n    items {\\n      id\\n      token\\n      created_at\\n      valid_until\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"839fdaad7009de6f1d8dc79de4e35a3d\";\n\nexport default node;\n","import * as fluentEmoji from '@iconify-json/fluent-emoji-flat';\nimport React from 'react';\n\nexport const FluentEmojiIcon: React.FC<{\n  name?: string;\n  height?: number;\n  width?: number;\n}> = ({ name, height, width }) => {\n  const icon = fluentEmoji.icons.icons[name ?? 'pure'];\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      height={height}\n      width={width}\n      role=\"img\"\n      dangerouslySetInnerHTML={{ __html: icon.body }}\n    />\n  );\n};\n","import { useUpdatableState } from '.';\nimport { useTanQuery } from './reactQueryAlias';\nimport { useCallback } from 'react';\n\nexport interface AIAgentMeta {\n  title: string;\n  avatar?: string;\n  background?: string;\n  descriptions?: string;\n  tags?: string[];\n}\n\nexport interface AIAgentConfig {\n  system_prompt: string;\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgentParams {\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stop?: string | string[];\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgent {\n  id: string;\n  endpoint: string;\n  endpoint_id: string;\n  config: AIAgentConfig;\n  meta: AIAgentMeta;\n  params?: AIAgentParams;\n}\n\nexport interface AIAgents {\n  agents: AIAgent[];\n}\n\nconst TIMEOUT_24_HOURS = 24 * 60 * 60 * 1000;\n\nexport const useAIAgent = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data: agentsData, isLoading } = useTanQuery<AIAgents>({\n    queryKey: ['useAgents', key],\n    queryFn: () => {\n      return fetch('resources/ai-agents.json').then((response) =>\n        response.json(),\n      );\n    },\n    staleTime: TIMEOUT_24_HOURS, // 24 hours\n  });\n\n  return {\n    agents: agentsData?.agents ?? [],\n    isLoading,\n    refresh: useCallback(() => checkUpdate(), [checkUpdate]),\n  };\n};\n","import { AIAgent, useAIAgent } from '../../hooks/useAIAgent';\nimport Flex from '../Flex';\nimport { FluentEmojiIcon } from '../FluentEmojiIcon';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps, theme } from 'antd';\nimport React, { useState, useTransition } from 'react';\n\ninterface ChatAgentSelectProps extends Omit<SelectProps, 'options'> {}\n\nfunction makeAgentOptions(agents: AIAgent[], filter?: string) {\n  return agents\n    .map((agent) => ({\n      label: agent.meta.title,\n      value: agent.id,\n      ...agent,\n    }))\n    .filter((agent) => {\n      return agent.label.toLocaleLowerCase().includes(filter || '');\n    });\n}\n\nconst AIAgentSelect: React.FC<ChatAgentSelectProps> = ({\n  loading,\n  ...props\n}) => {\n  const { token } = theme.useToken();\n  const [controllableValue, setControllableValue] = useControllableValue(props);\n\n  const [searchAgent, setSearchAgent] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  const { agents } = useAIAgent();\n  const selectedAgent = agents.find((agent) => agent.id === controllableValue);\n\n  return (\n    <>\n      {selectedAgent && (\n        <Flex gap=\"xs\">\n          <FluentEmojiIcon\n            name={selectedAgent.meta.avatar}\n            height={token.sizeXL}\n            width={token.sizeXL}\n          />\n          <Select\n            showSearch\n            onSearch={(v) => {\n              startSearchTransition(() => {\n                setSearchAgent(v);\n              });\n            }}\n            filterOption={false}\n            loading={isSearchPending || loading}\n            options={makeAgentOptions(agents, searchAgent)}\n            value={controllableValue}\n            onChange={(v, agent) => {\n              setControllableValue(v, agent);\n            }}\n            popupMatchSelectWidth={false}\n          />\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default AIAgentSelect;\n","import InputNumberWithSlider from '../InputNumberWithSlider';\nimport QuestionIconWithTooltip from '../QuestionIconWithTooltip';\nimport type { ChatParameters } from './ChatModel';\nimport {\n  ConfigProvider,\n  Divider,\n  Flex,\n  Form,\n  Switch,\n  theme,\n  Typography,\n} from 'antd';\nimport { t } from 'i18next';\nimport { useRef, useState } from 'react';\n\ntype ChatParameterChangeEventHandler = (event: {\n  id: string;\n  value: number;\n}) => void;\n\ninterface ChatParameterSliderData {\n  label: string;\n  max: number;\n  min: number;\n  step: number;\n  value?: number;\n  description?: string;\n}\n\ninterface ChatParameterSliderFormItemProps extends ChatParameterSliderData {\n  id: string;\n  onChange?: ChatParameterChangeEventHandler;\n}\n\nconst ChatParameterSliderFormItem = ({\n  id,\n  label,\n  max,\n  min,\n  step,\n  description,\n  disabled,\n}: ChatParameterSliderFormItemProps & { disabled: boolean }) => {\n  const { token } = theme.useToken();\n  return (\n    <Form.Item\n      label={\n        <Flex justify=\"between\" style={{ width: '240px' }}>\n          <Flex gap={'xxs'}>\n            <Typography.Text\n              style={{\n                fontSize: token.fontSizeSM,\n                marginRight: token.marginXXS,\n              }}\n            >\n              {label}\n            </Typography.Text>\n            {description && (\n              <QuestionIconWithTooltip title={description} trigger=\"hover\" />\n            )}\n          </Flex>\n        </Flex>\n      }\n      name={id}\n    >\n      <InputNumberWithSlider\n        disabled={disabled}\n        min={min}\n        max={max}\n        step={step ?? null}\n      />\n    </Form.Item>\n  );\n};\n\nconst chatParameters: Record<string, ChatParameterSliderData> = {\n  maxTokens: {\n    label: 'Max Tokens',\n    min: 50,\n    max: 16384,\n    step: 1,\n    description: t('chatui.chat.parameter.MaxTokens'),\n  },\n  temperature: {\n    label: 'Temperature',\n    min: 0.0,\n    max: 1,\n    step: 0.01,\n    description: t('chatui.chat.parameter.Temperature'),\n  },\n  topP: {\n    label: 'Top P',\n    min: 0.0,\n    max: 1,\n    step: 0.01,\n    description: t('chatui.chat.parameter.TopP'),\n  },\n  topK: {\n    label: 'Top K',\n    min: 1,\n    max: 500,\n    step: 1,\n    description: t('chatui.chat.parameter.TopK'),\n  },\n  frequencyPenalty: {\n    label: 'Frequency Penalty',\n    min: 0,\n    max: 2,\n    step: 0.01,\n    description: t('chatui.chat.parameter.FrequencyPenalty'),\n  },\n  presencePenalty: {\n    label: 'Presence Penalty',\n    min: 0,\n    max: 2,\n    step: 0.01,\n    description: t('chatui.chat.parameter.PresencePenalty'),\n  },\n};\n\nconst defaultChatParameters = {\n  maxTokens: 4096,\n  temperature: 0.7,\n  topP: 1,\n  topK: 1,\n  frequencyPenalty: 1,\n  presencePenalty: 1,\n};\n\nexport const ChatParametersSliders = ({\n  parameters,\n  onChangeParameter,\n}: {\n  parameters: ChatParameters;\n  onChangeParameter: (\n    usingParameters: boolean,\n    parameters: ChatParameters,\n  ) => void;\n}) => {\n  const { token } = theme.useToken();\n  const [enabled, setEnabled] = useState(false);\n  const currentParameters = useRef<ChatParameters>(\n    Object.keys(parameters).length > 0 ? parameters : defaultChatParameters,\n  );\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Form: {\n            verticalLabelPadding: 0,\n            itemMarginBottom: token.marginXXS,\n          },\n        },\n      }}\n    >\n      <Form\n        size=\"small\"\n        layout=\"vertical\"\n        initialValues={\n          Object.keys(parameters).length > 0\n            ? parameters\n            : defaultChatParameters\n        }\n        onValuesChange={(values) => {\n          currentParameters.current = {\n            ...currentParameters.current,\n            ...values,\n          };\n          onChangeParameter(enabled, {\n            ...currentParameters.current,\n          });\n        }}\n      >\n        <Flex align=\"center\" justify=\"space-between\">\n          <Typography.Text\n            style={{ fontSize: token.fontSizeLG, marginLeft: token.marginXXS }}\n          >\n            {t('chatui.chat.parameter.Title')}\n          </Typography.Text>\n          <Switch\n            checked={enabled}\n            onChange={() => {\n              setEnabled(!enabled);\n              onChangeParameter(!enabled, {\n                ...currentParameters.current,\n              });\n            }}\n          />\n        </Flex>\n        <Divider\n          style={{\n            marginBlock: token.marginSM,\n          }}\n        />\n        {Object.entries(chatParameters).map(([id, params]) => (\n          <ChatParameterSliderFormItem\n            disabled={!enabled}\n            key={id}\n            id={id}\n            {...params}\n          />\n        ))}\n      </Form>\n    </ConfigProvider>\n  );\n};\n","import Flex from './Flex';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { theme, Typography } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst TotalFooter: React.FC<{\n  loading?: boolean;\n  total?: number;\n}> = ({ loading, total }) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  return (\n    <Flex justify=\"end\" gap={'xs'}>\n      {loading ? (\n        <LoadingOutlined\n          spin\n          style={{\n            color: token.colorTextSecondary,\n          }}\n        />\n      ) : (\n        <div />\n      )}\n      <Typography.Text type=\"secondary\">\n        {t('general.TotalItems', {\n          total: total,\n        })}\n      </Typography.Text>\n    </Flex>\n  );\n};\n\nexport default TotalFooter;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport { useLazyPaginatedQuery } from '../../hooks/usePaginatedQuery';\nimport BAISelect from '../BAISelect';\nimport TotalFooter from '../TotalFooter';\nimport {\n  EndpointSelectQuery,\n  EndpointSelectQuery$data,\n} from './__generated__/EndpointSelectQuery.graphql';\nimport { EndpointSelectValueQuery } from './__generated__/EndpointSelectValueQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { GetRef, SelectProps, Skeleton } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nexport type Endpoint = NonNullable<\n  NonNullableItem<EndpointSelectQuery$data['endpoint_list']>\n>;\n\nexport interface EndpointSelectProps\n  extends Omit<SelectProps, 'options' | 'labelInValue'> {\n  fetchKey?: string;\n  lifecycleStageFilter?: LifecycleStage[];\n}\n\ntype LifecycleStage = 'created' | 'destroying' | 'destroyed';\n\nconst EndpointSelect: React.FC<EndpointSelectProps> = ({\n  fetchKey,\n  lifecycleStageFilter = ['created'],\n  loading,\n  ...selectPropsWithoutLoading\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const [controllableValue, setControllableValue] = useControllableValue<\n    string | undefined\n  >(selectPropsWithoutLoading);\n  const [controllableOpen, setControllableOpen] = useControllableValue<boolean>(\n    selectPropsWithoutLoading,\n    {\n      valuePropName: 'open',\n      trigger: 'onDropdownVisibleChange',\n    },\n  );\n  const deferredOpen = useDeferredValue(controllableOpen);\n  const [searchStr, setSearchStr] = useState<string>();\n  const deferredSearchStr = useDeferredValue(searchStr);\n\n  const selectRef = useRef<GetRef<typeof BAISelect> | null>(null);\n\n  const lifecycleStageFilterStr = lifecycleStageFilter\n    .map((v) => `lifecycle_stage == \"${v}\"`)\n    .join(' | ');\n\n  const { endpoint: selectedEndpoint } =\n    useLazyLoadQuery<EndpointSelectValueQuery>(\n      graphql`\n        query EndpointSelectValueQuery($endpoint_id: UUID!) {\n          endpoint(endpoint_id: $endpoint_id) {\n            name\n            endpoint_id @required(action: NONE)\n            url\n          }\n        }\n      `,\n      {\n        endpoint_id: controllableValue ?? '',\n      },\n      {\n        // to skip the query when controllableValue is empty\n        fetchPolicy: controllableValue ? 'store-or-network' : 'store-only',\n      },\n    );\n\n  const {\n    paginationData,\n    result: { endpoint_list },\n    loadNext,\n    isLoadingNext,\n  } = useLazyPaginatedQuery<\n    EndpointSelectQuery,\n    NonNullable<\n      EndpointSelectQuery['response']['endpoint_list']\n    >['items'][number]\n  >(\n    graphql`\n      query EndpointSelectQuery(\n        $offset: Int!\n        $limit: Int!\n        $projectID: UUID\n        $filter: String\n      ) {\n        endpoint_list(\n          offset: $offset\n          limit: $limit\n          project: $projectID\n          filter: $filter\n        ) {\n          total_count\n          items {\n            name\n            endpoint_id @required(action: NONE)\n            url\n          }\n        }\n      }\n    `,\n    {\n      limit: 10,\n    },\n    {\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? [\n            lifecycleStageFilterStr,\n            deferredSearchStr\n              ? `name ilike \"%${deferredSearchStr}%\"`\n              : undefined,\n          ]\n            .filter(Boolean)\n            .map((v) => `(${v})`)\n            .join(' & ')\n        : undefined,\n    },\n    // TODO: skip fetch when the option popover is closed\n    {\n      fetchKey,\n      fetchPolicy: deferredOpen ? 'network-only' : 'store-only',\n    },\n    {\n      getTotal: (result) => result.endpoint_list?.total_count,\n      getItem: (result) => result.endpoint_list?.items,\n      getId: (item) => item?.endpoint_id,\n    },\n  );\n\n  const selectOptions = _.map(paginationData, (item) => {\n    return {\n      label: item?.name,\n      value: item?.endpoint_id,\n      endpoint: item,\n    };\n  });\n\n  const [optimisticValueWithLabel, setOptimisticValueWithLabel] = useState(\n    selectedEndpoint\n      ? {\n          label: selectedEndpoint?.name || undefined,\n          value: selectedEndpoint?.endpoint_id || undefined,\n        }\n      : {\n          label: controllableValue,\n          value: controllableValue,\n        },\n  );\n\n  const isValueMatched = searchStr === deferredSearchStr;\n  useEffect(() => {\n    if (isValueMatched) {\n      // Scroll dropdown to top position when search completes (search value matches deferred value)\n      // This ensures users see the top results immediately after search processing\n      selectRef.current?.scrollTo(0);\n    }\n  }, [isValueMatched]);\n  return (\n    <BAISelect\n      ref={selectRef}\n      placeholder={t('chatui.SelectEndpoint')}\n      style={{\n        minWidth: 100,\n      }}\n      showSearch\n      searchValue={searchStr}\n      onSearch={(v) => {\n        setSearchStr(v);\n      }}\n      // TODO: Need to make it work properly when autoClearSearchValue is not specified\n      autoClearSearchValue\n      filterOption={false}\n      loading={searchStr !== deferredSearchStr || loading}\n      options={selectOptions}\n      {...selectPropsWithoutLoading}\n      // override value and onChange\n      labelInValue // use labelInValue to display the selected option label\n      // @ts-ignore\n      value={optimisticValueWithLabel}\n      onChange={(v, option) => {\n        // @ts-ignore\n        setOptimisticValueWithLabel(v);\n        setControllableValue(v.value, _.castArray(option)?.[0].endpoint);\n        selectPropsWithoutLoading.onChange?.(v.value || '', option);\n      }}\n      endReached={() => {\n        loadNext();\n      }}\n      open={controllableOpen}\n      onDropdownVisibleChange={setControllableOpen}\n      notFoundContent={\n        _.isUndefined(paginationData) ? (\n          // For the first loading options\n          <Skeleton.Input active size=\"small\" block />\n        ) : undefined\n      }\n      footer={\n        _.isNumber(endpoint_list?.total_count) &&\n        endpoint_list.total_count > 0 ? (\n          <TotalFooter\n            loading={isLoadingNext}\n            total={endpoint_list?.total_count}\n          />\n        ) : undefined\n      }\n    />\n  );\n};\n\nexport default EndpointSelect;\n","import { useEventNotStable } from './useEventNotStable';\nimport _ from 'lodash';\nimport { useState, useTransition, useMemo, useRef, useEffect } from 'react';\nimport { GraphQLTaggedNode, useLazyLoadQuery } from 'react-relay';\nimport { OperationType } from 'relay-runtime';\n\ntype extraOptions<Result, ItemType> = {\n  getItem: (result: Result) => any;\n  getTotal: (result: Result) => number | undefined;\n  getId: (item: ItemType) => string | undefined | null;\n};\nexport function useLazyPaginatedQuery<\n  T extends OperationType & {\n    variables: { limit: number; offset: number };\n  },\n  ItemType,\n>(\n  query: GraphQLTaggedNode,\n  initialPaginationVariables: Pick<T['variables'], 'limit'>,\n  otherVariables: Omit<Partial<T['variables']>, 'limit' | 'offset'>,\n  options: Parameters<typeof useLazyLoadQuery<T>>[2],\n  { getItem, getId, getTotal }: extraOptions<T['response'], ItemType>,\n) {\n  const previousResult = useRef<T['response'][]>([]);\n  const [isLoadingNext, startLoadingNextTransition] = useTransition();\n\n  // limit doesn't change after the first render\n  const [limit] = useState(initialPaginationVariables.limit);\n  const [offset, setOffset] = useState(0);\n\n  const previousOtherVariablesRef = useRef(otherVariables);\n\n  const isNewOtherVariables = !_.isEqual(\n    previousOtherVariablesRef.current,\n    otherVariables,\n  );\n\n  // Fetch the initial data using useLazyLoadQuery\n  const result = useLazyLoadQuery<T>(\n    query,\n    {\n      limit: isNewOtherVariables ? initialPaginationVariables.limit : limit,\n      offset: isNewOtherVariables ? 0 : offset,\n      ...otherVariables,\n    },\n    options,\n  );\n\n  const data = useMemo(() => {\n    const items = getItem(result);\n    if (isNewOtherVariables) {\n      previousResult.current = [];\n    }\n    return items\n      ? _.uniqBy([...previousResult.current, ...items], getId)\n      : undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [result]);\n\n  const hasNext = offset + limit < (getTotal(result) as number);\n\n  const loadNext = useEventNotStable(() => {\n    if (isLoadingNext || !hasNext) return;\n    previousResult.current = data || [];\n    startLoadingNextTransition(() => {\n      const nextOffset = offset + limit;\n      setOffset(nextOffset);\n    });\n  });\n\n  useEffect(() => {\n    // Reset the offset and limit when otherVariables change after success rendering\n    if (isNewOtherVariables) {\n      previousOtherVariablesRef.current = otherVariables;\n      setOffset(0);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isNewOtherVariables]);\n\n  return {\n    paginationData: data,\n    result,\n    loadNext,\n    hasNext,\n    isLoadingNext,\n  };\n}\n","import { BAIModel } from './ChatModel';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModelSelectProps extends SelectProps {\n  models?: Array<BAIModel>;\n}\n\nconst ModelSelect: React.FC<ModelSelectProps> = ({\n  models,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectModel')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      options={_.chain(models)\n        .groupBy('group')\n        .mapValues((ms) =>\n          _.map(ms, (m) => ({\n            label: m.label,\n            value: m.name,\n          })),\n        )\n        .map((v, k) => ({\n          label: k === 'undefined' ? 'Others' : k,\n          options: v,\n        }))\n        .value()}\n      popupMatchSelectWidth={false}\n      {...selectProps}\n    />\n  );\n};\n\nexport default ModelSelect;\n","import { filterEmptyItem } from '../../helper';\nimport { useWebUINavigate } from '../../hooks';\nimport { AIAgent } from '../../hooks/useAIAgent';\nimport { useBAISettingUserState } from '../../hooks/useBAISetting';\nimport Flex from '../Flex';\nimport AIAgentSelect from './AIAgentSelect';\nimport { BAIModel, ChatParameters } from './ChatModel';\nimport { ChatParametersSliders } from './ChatParametersSliders';\nimport EndpointSelect, { EndpointSelectProps } from './EndpointSelect';\nimport ModelSelect from './ModelSelect';\nimport { ChatHeader_Endpoint$key } from './__generated__/ChatHeader_Endpoint.graphql';\nimport {\n  CloseOutlined,\n  ControlOutlined,\n  MoreOutlined,\n  PlusOutlined,\n} from '@ant-design/icons';\nimport {\n  Dropdown,\n  Button,\n  theme,\n  MenuProps,\n  Typography,\n  Switch,\n  Popover,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { isEmpty } from 'lodash';\nimport { Scale as ScaleIcon, Eraser as EraserIcon } from 'lucide-react';\nimport React, { startTransition, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface SyncSwitchProps {\n  sync: boolean;\n  onClick: (sync: boolean) => void;\n}\n\nconst SyncSwitch: React.FC<SyncSwitchProps> = ({ sync, onClick }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      {sync && (\n        <Typography.Text type=\"secondary\">\n          {t('chatui.SyncInput')}\n        </Typography.Text>\n      )}\n      <Switch checked={sync} onClick={onClick} />\n    </>\n  );\n};\n\ninterface ChatHeaderProps {\n  showCompareMenuItem?: boolean;\n  closable?: boolean;\n  models: BAIModel[];\n  modelId: string;\n  onChangeModel: (modelId: string) => void;\n  endpointFrgmt?: ChatHeader_Endpoint$key | null;\n  onChangeEndpoint: EndpointSelectProps['onChange'];\n  agents: AIAgent[];\n  agent?: AIAgent;\n  onChangeAgent: (agent: AIAgent) => void;\n  sync: boolean;\n  onChangeSync: (sync: boolean) => void;\n  fetchKey: string;\n  onClickDeleteChatHistory?: () => void;\n  onClickClose?: () => void;\n  onClickCreate?: () => void;\n  parameters: ChatParameters;\n  usingParameters: boolean;\n  onChangeParameter: (\n    usingParameters: boolean,\n    parameters: ChatParameters,\n  ) => void;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\n  showCompareMenuItem,\n  closable,\n  models,\n  modelId,\n  onChangeModel,\n  endpointFrgmt,\n  onChangeEndpoint,\n  agent,\n  onChangeAgent,\n  sync,\n  onChangeSync,\n  onClickClose,\n  onClickCreate,\n  fetchKey,\n  onClickDeleteChatHistory,\n  parameters,\n  usingParameters,\n  onChangeParameter,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const webuiNavigate = useWebUINavigate();\n\n  const [isPendingEndpointTransition, startEndpointTransition] =\n    useTransition();\n  const [isPendingAgentTransition, startAgentTransition] = useTransition();\n\n  // Using fragment instead of just endpoint_id to support future EndpointSelect extensions\n  const endpoint = useFragment(\n    graphql`\n      fragment ChatHeader_Endpoint on Endpoint {\n        endpoint_id\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const items: MenuProps['items'] = filterEmptyItem([\n    showCompareMenuItem && {\n      key: 'compare',\n      label: t('chatui.CompareWithOtherModels'),\n      icon: <ScaleIcon />,\n      onClick: () => {\n        webuiNavigate(\n          `/serving?tab=chatting&endpointId=${endpoint?.endpoint_id}&modelId=${modelId}`,\n        );\n      },\n    },\n    showCompareMenuItem && {\n      type: 'divider',\n    },\n    {\n      key: 'clear',\n      label: t('chatui.DeleteChatHistory'),\n      icon: <EraserIcon />,\n      onClick: () => {\n        onClickDeleteChatHistory?.();\n      },\n    },\n    closable && {\n      type: 'divider',\n    },\n    closable && {\n      key: 'close',\n      danger: true,\n      label: t('chatui.DeleteChattingSession'),\n      icon: <CloseOutlined />,\n      onClick: () => {\n        onClickClose?.();\n      },\n    },\n  ]);\n\n  const [experimentalAIAgents] = useBAISettingUserState(\n    'experimental_ai_agents',\n  );\n\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"start\"\n      wrap=\"wrap\"\n      gap=\"xs\"\n      style={{\n        minHeight: '56px',\n        width: '100%',\n        paddingTop: token.paddingXS,\n        paddingBottom: token.paddingXS,\n      }}\n    >\n      <Flex\n        wrap=\"wrap\"\n        align=\"start\"\n        gap=\"xs\"\n        style={{\n          flexGrow: 1,\n          flexShrink: 1,\n          flexBasis: 'auto',\n        }}\n      >\n        {experimentalAIAgents && (\n          <AIAgentSelect\n            loading={isPendingAgentTransition}\n            value={agent?.id}\n            onChange={(_, agent: any) => {\n              startAgentTransition(() => {\n                onChangeAgent(agent);\n              });\n            }}\n          />\n        )}\n        <EndpointSelect\n          fetchKey={fetchKey}\n          loading={isPendingEndpointTransition}\n          onChange={(id) => {\n            startEndpointTransition(() => {\n              onChangeEndpoint?.(id);\n            });\n          }}\n          value={endpoint?.endpoint_id}\n          popupMatchSelectWidth={false}\n        />\n        {!isEmpty(models) && (\n          <ModelSelect\n            models={models}\n            value={modelId}\n            onChange={(modelId) => {\n              startTransition(() => {\n                onChangeModel(modelId);\n              });\n            }}\n          />\n        )}\n      </Flex>\n      <Flex gap={'xs'}>\n        {closable && (\n          <SyncSwitch\n            sync={sync}\n            onClick={(checked) => {\n              startTransition(() => {\n                onChangeSync(checked);\n              });\n            }}\n          />\n        )}\n        <Popover\n          content={\n            <ChatParametersSliders\n              parameters={parameters}\n              onChangeParameter={(usingParameters, parameters) => {\n                startTransition(() => {\n                  onChangeParameter(usingParameters, parameters);\n                });\n              }}\n            />\n          }\n          trigger=\"click\"\n          placement=\"bottom\"\n          style={{\n            padding: token.paddingXS,\n          }}\n        >\n          <Button\n            icon={\n              <ControlOutlined\n                style={{\n                  color: usingParameters ? token.colorPrimary : undefined,\n                }}\n              />\n            }\n          />\n        </Popover>\n        <Button onClick={() => onClickCreate?.()} icon={<PlusOutlined />} />\n        <Dropdown menu={{ items }} trigger={['click']}>\n          <Button\n            type=\"link\"\n            onClick={(e) => e.preventDefault()}\n            icon={<MoreOutlined />}\n            style={{ color: token.colorTextSecondary, width: token.sizeMS }}\n          />\n        </Dropdown>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatHeader;\n","import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\nimport {\n  Attachments,\n  AttachmentsProps,\n  Sender,\n  SenderProps,\n} from '@ant-design/x';\nimport { Attachment } from '@ant-design/x/es/attachments';\nimport { Badge, Button, GetRef, UploadProps } from 'antd';\nimport { isEmpty } from 'lodash';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChatAttachmentsProps {\n  dropContainerRef: React.RefObject<HTMLElement | null>;\n}\n\nconst ChatAttachments: React.FC<ChatAttachmentsProps & AttachmentsProps> = ({\n  items,\n  onChange,\n  dropContainerRef,\n  children,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Attachments\n      beforeUpload={() => false}\n      getDropContainer={() => dropContainerRef.current}\n      accept=\"image/*,text/*\"\n      items={items}\n      onChange={onChange}\n      placeholder={(type) =>\n        type === 'drop'\n          ? {\n              title: t('chatui.DropFileHere'),\n            }\n          : {\n              icon: <CloudUploadOutlined />,\n              title: t('chatui.UploadFiles'),\n              description: t('chatui.UploadFilesDescription'),\n            }\n      }\n    >\n      {children}\n    </Attachments>\n  );\n};\n\nexport type AttachmentChangeInfo = Parameters<\n  NonNullable<UploadProps['onChange']>\n>[0];\n\ninterface ChatSenderProps\n  extends Omit<SenderProps, 'onChange'>,\n    ChatAttachmentsProps {\n  loading?: boolean;\n  autoFocus?: boolean;\n  items?: Attachment[];\n  openAttachment?: boolean;\n  onInputChange?: (value: string) => void;\n  onInputSubmit?: () => void;\n  onInputCancel?: () => void;\n  onAttachmentChange?: (\n    attachment: 'prefix' | 'header',\n    info: AttachmentChangeInfo,\n  ) => void;\n  onAttachmentOpenChange?: (open: boolean) => void;\n}\n\nconst ChatSender: React.FC<ChatSenderProps> = ({\n  loading,\n  autoFocus,\n  items,\n  openAttachment,\n  dropContainerRef,\n  onInputChange,\n  onInputSubmit,\n  onInputCancel,\n  onAttachmentChange,\n  onAttachmentOpenChange,\n  ...senderProps\n}) => {\n  const { t } = useTranslation();\n\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\n\n  useEffect(() => {\n    if (autoFocus && senderRef.current) {\n      senderRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <Sender\n      style={{ flex: 1 }}\n      ref={senderRef}\n      {...senderProps}\n      loading={loading}\n      onChange={onInputChange}\n      onSubmit={onInputSubmit}\n      onCancel={onInputCancel}\n      submitType=\"enter\"\n      header={\n        <Sender.Header\n          closable={false}\n          title={t('chatui.Attachments')}\n          open={!!openAttachment && !isEmpty(items)}\n          onOpenChange={onAttachmentOpenChange}\n          styles={{\n            content: {\n              padding: 0,\n            },\n          }}\n        >\n          <ChatAttachments\n            items={items}\n            dropContainerRef={dropContainerRef}\n            onChange={(info) => onAttachmentChange?.('header', info)}\n          />\n        </Sender.Header>\n      }\n      prefix={\n        <ChatAttachments\n          items={items}\n          dropContainerRef={dropContainerRef}\n          onChange={(info) => onAttachmentChange?.('prefix', info)}\n        >\n          <Badge dot={!isEmpty(items) && !openAttachment}>\n            <Button type=\"text\" icon={<LinkOutlined />} />\n          </Badge>\n        </ChatAttachments>\n      }\n    />\n  );\n};\n\nexport default ChatSender;\n","import { createDataTransferFiles } from '../../helper';\nimport Flex from '../Flex';\nimport ChatSender, {\n  AttachmentChangeInfo,\n  ChatAttachmentsProps,\n} from './ChatSender';\nimport { CreateMessage, Message } from '@ai-sdk/react';\nimport type { AttachmentsProps } from '@ant-design/x';\nimport { ChatRequestOptions } from 'ai';\nimport { theme } from 'antd';\nimport { atom, useAtom } from 'jotai';\nimport { isEmpty, isEqual, isUndefined } from 'lodash';\nimport React, { useCallback, useEffect, useId, useRef, useState } from 'react';\n\nconst synchronizedMessageState = atom<string>('');\nconst synchronizedAttachmentState = atom<AttachmentsProps['items']>();\nconst chatSubmitKeyInfoState = atom<{ id: string; key: string } | undefined>(\n  undefined,\n);\n\ninterface ChatRequest {\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n}\n\ninterface ChatInputProps extends ChatRequest, ChatAttachmentsProps {\n  sync: boolean;\n  input: string;\n  setInput: (input: string) => void;\n  stop: () => void;\n  append: (\n    message: Message | CreateMessage,\n    chatRequestOptions?: ChatRequestOptions,\n  ) => Promise<string | null | undefined>;\n  isStreaming: boolean;\n  disabled?: boolean;\n}\n\nconst ChatInput: React.FC<ChatInputProps> = ({\n  sync,\n  input,\n  setInput,\n  stop,\n  append,\n  isStreaming,\n  disabled,\n  dropContainerRef,\n}) => {\n  const { token } = theme.useToken();\n\n  const ChatInputStyle = {\n    borderTop: `1px solid ${token.colorBorderSecondary}`,\n    padding: token.paddingContentVertical,\n  };\n\n  const [isOpenAttachments, setIsOpenAttachments] = useState(false);\n  const [files, setFiles] = useState<AttachmentsProps['items']>([]);\n\n  const [synchronizedMessage, setSynchronizedMessage] = useAtom(\n    synchronizedMessageState,\n  );\n\n  const [synchronizedAttachment, setSynchronizedAttachment] = useAtom(\n    synchronizedAttachmentState,\n  );\n\n  const [chatSubmitKeyInfo, setChatSubmitKeyInfo] = useAtom(\n    chatSubmitKeyInfoState,\n  );\n\n  const submitId = useId();\n  const submitKey =\n    chatSubmitKeyInfo?.id === submitId ? undefined : chatSubmitKeyInfo?.key;\n\n  const prevSyncRef = useRef(sync);\n  useEffect(() => {\n    if (prevSyncRef.current !== sync) {\n      setInput('');\n      prevSyncRef.current = sync;\n    }\n  }, [sync, setInput]);\n\n  useEffect(() => {\n    if (sync && !isUndefined(synchronizedMessage)) {\n      setInput(synchronizedMessage);\n    }\n  }, [synchronizedMessage, setInput, sync]);\n\n  const setFilesFromInputAttachment = (\n    inputAttachment: AttachmentsProps['items'],\n  ) => {\n    if (!isUndefined(inputAttachment) && !isEqual(files, inputAttachment)) {\n      setFiles(inputAttachment);\n      setIsOpenAttachments(true);\n    }\n  };\n\n  // If the `inputAttachment` prop exists, the `files` state has to follow it.\n  useEffect(() => {\n    setFilesFromInputAttachment(synchronizedAttachment);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [synchronizedAttachment]);\n\n  useEffect(() => {\n    if (!isUndefined(submitKey) && input) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitKey]);\n\n  const handleInputChange = useCallback(\n    (value: string) => {\n      setInput(value);\n      if (sync) {\n        setSynchronizedMessage(value);\n      }\n    },\n    [sync, setInput, setSynchronizedMessage],\n  );\n\n  const handleInputCancel = useCallback(() => {\n    stop();\n  }, [stop]);\n\n  const handleInputSubmit = useCallback(() => {\n    if (input || !isEmpty(files)) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n      setTimeout(() => {\n        setInput('');\n        setFiles([]);\n        setIsOpenAttachments(false);\n      }, 0);\n\n      setSynchronizedMessage('');\n      setSynchronizedAttachment([]);\n      if (sync) {\n        setChatSubmitKeyInfo({\n          id: submitId,\n          key: new Date().toString(),\n        });\n      }\n    }\n  }, [\n    input,\n    files,\n    append,\n    setSynchronizedMessage,\n    setSynchronizedAttachment,\n    sync,\n    setInput,\n    setChatSubmitKeyInfo,\n    submitId,\n  ]);\n\n  const handleAttachmentChange = useCallback(\n    (attachment: string, info: AttachmentChangeInfo) => {\n      const fileList = info.fileList;\n      setFiles(fileList);\n\n      if (attachment === 'prefix') {\n        setIsOpenAttachments(true);\n      }\n\n      if (sync) {\n        setSynchronizedAttachment(fileList);\n      }\n    },\n    [sync, setFiles, setIsOpenAttachments, setSynchronizedAttachment],\n  );\n\n  const handleAttachmentOpenChange = useCallback(\n    (open: boolean) => {\n      setIsOpenAttachments(open);\n    },\n    [setIsOpenAttachments],\n  );\n\n  return (\n    <>\n      <Flex style={ChatInputStyle} direction=\"column\" align=\"center\">\n        <ChatSender\n          disabled={disabled}\n          placeholder=\"Say something...\"\n          autoFocus\n          value={input}\n          items={files}\n          openAttachment={isOpenAttachments}\n          dropContainerRef={dropContainerRef}\n          loading={isStreaming}\n          onInputChange={handleInputChange}\n          onInputSubmit={handleInputSubmit}\n          onInputCancel={handleInputCancel}\n          onAttachmentChange={handleAttachmentChange}\n          onAttachmentOpenChange={handleAttachmentOpenChange}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatInput;\n","import { startTransition, useEffect, useState } from 'react';\n\nexport const encodeAsync = async (str: string) => {\n  const { encode } = await import('gpt-tokenizer');\n\n  return encode(str).length;\n};\n\nexport const useTokenCount = (input: string = '') => {\n  const [value, setNum] = useState(0);\n\n  useEffect(() => {\n    startTransition(() => {\n      encodeAsync(input)\n        .then(setNum)\n        .catch(() => {\n          setNum(input.length);\n        });\n    });\n  }, [input]);\n\n  return value;\n};\n","import { useTokenCount } from '../../hooks/useTokenizer';\nimport Flex from '../Flex';\nimport { RocketOutlined } from '@ant-design/icons';\nimport { Message } from 'ai';\nimport { Typography } from 'antd';\nimport { Tag, theme } from 'antd';\nimport { map, last } from 'lodash';\nimport React, { useMemo } from 'react';\n\ninterface ChatTokenCounterProps {\n  input: string;\n  messages: Message[];\n  startTime: number | null;\n}\n\nconst ChatTokenCounter: React.FC<ChatTokenCounterProps> = ({\n  input,\n  messages,\n  startTime,\n}) => {\n  const { token } = theme.useToken();\n  const inputTokenCount = useTokenCount(input);\n  const allChatMessageString = useMemo(() => {\n    return map(messages, (message) => message?.content).join('');\n  }, [messages]);\n  const chatsTokenCount = useTokenCount(allChatMessageString);\n  const totalTokenCount = inputTokenCount + chatsTokenCount;\n  const lastAssistantMessageString = useMemo(() => {\n    const lastAssistantMessage = last(messages);\n    if (lastAssistantMessage?.role === 'assistant') {\n      return lastAssistantMessage?.content;\n    } else {\n      return '';\n    }\n  }, [messages]);\n\n  const lastAssistantTokenCount = useTokenCount(lastAssistantMessageString);\n  const tokenPerSecond = useMemo(() => {\n    return lastAssistantTokenCount > 0 && startTime\n      ? lastAssistantTokenCount / ((Date.now() - startTime) / 1000)\n      : 0;\n  }, [lastAssistantTokenCount, startTime]);\n\n  return (\n    <Flex justify=\"end\" align=\"end\" style={{ margin: token.marginSM }}>\n      <Tag>\n        <Flex gap={'xs'}>\n          <RocketOutlined />\n          <Flex gap={'xxs'}>\n            <Typography.Text>{tokenPerSecond.toFixed(2)}</Typography.Text>\n            <Typography.Text type=\"secondary\">tok/s</Typography.Text>\n          </Flex>\n          <Flex gap={'xxs'}>\n            <Typography.Text>{totalTokenCount}</Typography.Text>\n            <Typography.Text type=\"secondary\">total tokens</Typography.Text>\n          </Flex>\n        </Flex>\n      </Tag>\n    </Flex>\n  );\n};\n\nexport default ChatTokenCounter;\n","import Flex, { FlexProps } from '../Flex';\nimport { Avatar, theme } from 'antd';\nimport React, { memo } from 'react';\n\nexport type ChatMessagePlacement = {\n  top?: boolean;\n  left?: boolean;\n  right?: boolean;\n  bottom?: boolean;\n};\n\nexport interface ChatMessageContainerProps extends FlexProps {\n  placement?: ChatMessagePlacement;\n  containerStyle?: React.CSSProperties;\n  avatar?: React.ReactNode;\n  children?: React.ReactNode;\n}\n\nexport const ChatMessageContainer: React.FC<ChatMessageContainerProps> = memo(\n  ({ children, placement = {}, avatar, onMouseEnter, onMouseLeave }) => {\n    const { token } = theme.useToken();\n\n    return (\n      <Flex\n        direction={placement.left ? 'row' : 'row-reverse'}\n        justify={'start'}\n        align=\"baseline\"\n        style={{\n          marginLeft: placement.left ? 0 : '15%',\n          marginRight: placement.right ? 0 : 20,\n          paddingLeft: token.paddingMD,\n          paddingRight: token.paddingMD,\n          paddingTop: placement.top ? token.paddingMD : 0,\n          paddingBottom: placement.bottom ? token.paddingMD : 0,\n        }}\n        gap={'sm'}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Avatar icon={avatar} style={{ fontSize: token.fontSizeHeading3 }} />\n        <Flex\n          direction=\"column\"\n          align={placement.left ? 'start' : 'end'}\n          wrap=\"wrap\"\n          style={{ flex: 1 }}\n          gap={'xs'}\n        >\n          {children}\n        </Flex>\n      </Flex>\n    );\n  },\n);\n\nChatMessageContainer.displayName = 'ChatMessageContainer';\n","import { Button, ButtonProps, Tooltip } from 'antd';\nimport { CopyConfig } from 'antd/es/typography/Base';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface CopyButtonProps extends ButtonProps {\n  copyable?: Omit<CopyConfig, 'text'> & { text: string };\n  defaultIcon?: React.ReactNode;\n}\nconst CopyButton: React.FC<CopyButtonProps> = ({\n  copyable,\n  defaultIcon,\n  ...props\n}) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = async () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      const timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCopied]);\n\n  return (\n    <Tooltip\n      title={isCopied ? 'Copied!' : 'Copy'}\n      open={isCopied ? true : undefined}\n    >\n      <CopyToClipboard text={copyable?.text || ''} onCopy={handleCopy}>\n        <Button\n          icon={\n            isCopied ? <CheckIcon /> : defaultIcon ? defaultIcon : <CopyIcon />\n          }\n          {...props}\n        />\n      </CopyToClipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyButton;\n","import { useThemeMode } from 'antd-style';\nimport { useMemo } from 'react';\nimport { codeToHtml } from 'shiki';\nimport useSWR from 'swr';\nimport { Md5 } from 'ts-md5';\n\nexport const FALLBACK_LANG = 'txt';\n\nexport const useHighlight = (text: string, lang: string) => {\n  const { isDarkMode } = useThemeMode();\n  const language = lang.toLowerCase();\n  const matchedLanguage = languageMap[language] ? language : FALLBACK_LANG;\n  const key = useMemo(() => Md5.hashStr(text), [text]);\n\n  return useSWR(\n    [matchedLanguage, isDarkMode ? 'd' : 'l', key].join('-'),\n    async () => {\n      try {\n        return codeToHtml(text, {\n          lang: matchedLanguage,\n          theme: isDarkMode ? 'github-dark' : 'github-light',\n        });\n      } catch (error) {\n        console.error('shiki Highlight error:', error);\n        return text;\n      }\n    },\n  );\n};\n\nconst languageMap: Record<string, boolean> = {\n  abap: true,\n  'actionscript-3': true,\n  ada: true,\n  apache: true,\n  apex: true,\n  apl: true,\n  applescript: true,\n  ara: true,\n  asm: true,\n  astro: true,\n  awk: true,\n  ballerina: true,\n  bat: true,\n  beancount: true,\n  berry: true,\n  bibtex: true,\n  bicep: true,\n  blade: true,\n  c: true,\n  cadence: true,\n  clarity: true,\n  clojure: true,\n  cmake: true,\n  cobol: true,\n  codeql: true,\n  coffee: true,\n  cpp: true,\n  crystal: true,\n  csharp: true,\n  css: true,\n  cue: true,\n  cypher: true,\n  d: true,\n  dart: true,\n  dax: true,\n  diff: true,\n  docker: true,\n  'dream-maker': true,\n  elixir: true,\n  elm: true,\n  erb: true,\n  erlang: true,\n  fish: true,\n  fsharp: true,\n  gdresource: true,\n  gdscript: true,\n  gdshader: true,\n  gherkin: true,\n  'git-commit': true,\n  'git-rebase': true,\n  'glimmer-js': true,\n  'glimmer-ts': true,\n  glsl: true,\n  gnuplot: true,\n  go: true,\n  graphql: true,\n  groovy: true,\n  hack: true,\n  haml: true,\n  handlebars: true,\n  haskell: true,\n  hcl: true,\n  hjson: true,\n  hlsl: true,\n  html: true,\n  http: true,\n  imba: true,\n  ini: true,\n  java: true,\n  javascript: true,\n  'jinja-html': true,\n  jison: true,\n  json: true,\n  json5: true,\n  jsonc: true,\n  jsonl: true,\n  jsonnet: true,\n  jssm: true,\n  jsx: true,\n  julia: true,\n  kotlin: true,\n  kusto: true,\n  latex: true,\n  less: true,\n  liquid: true,\n  lisp: true,\n  logo: true,\n  lua: true,\n  make: true,\n  markdown: true,\n  marko: true,\n  matlab: true,\n  mdc: true,\n  mdx: true,\n  mermaid: true,\n  mojo: true,\n  narrat: true,\n  nextflow: true,\n  nginx: true,\n  nim: true,\n  nix: true,\n  'objective-c': true,\n  'objective-cpp': true,\n  ocaml: true,\n  pascal: true,\n  perl: true,\n  php: true,\n  plsql: true,\n  postcss: true,\n  powerquery: true,\n  powershell: true,\n  prisma: true,\n  prolog: true,\n  proto: true,\n  pug: true,\n  puppet: true,\n  purescript: true,\n  python: true,\n  r: true,\n  raku: true,\n  razor: true,\n  reg: true,\n  rel: true,\n  riscv: true,\n  rst: true,\n  ruby: true,\n  rust: true,\n  sas: true,\n  sass: true,\n  scala: true,\n  scheme: true,\n  scss: true,\n  shaderlab: true,\n  shellscript: true,\n  shellsession: true,\n  smalltalk: true,\n  solidity: true,\n  sparql: true,\n  splunk: true,\n  sql: true,\n  'ssh-config': true,\n  stata: true,\n  stylus: true,\n  svelte: true,\n  swift: true,\n  'system-verilog': true,\n  tasl: true,\n  tcl: true,\n  tex: true,\n  toml: true,\n  tsx: true,\n  turtle: true,\n  twig: true,\n  typescript: true,\n  v: true,\n  vb: true,\n  verilog: true,\n  vhdl: true,\n  viml: true,\n  vue: true,\n  'vue-html': true,\n  vyper: true,\n  wasm: true,\n  wenyan: true,\n  wgsl: true,\n  wolfram: true,\n  xml: true,\n  xsl: true,\n  yaml: true,\n  zenscript: true,\n  zig: true,\n  bash: true,\n  batch: true,\n  be: true,\n  'c#': true,\n  cdc: true,\n  clj: true,\n  cmd: true,\n  console: true,\n  cql: true,\n  cs: true,\n  dockerfile: true,\n  erl: true,\n  'f#': true,\n  fs: true,\n  fsl: true,\n  gjs: true,\n  gts: true,\n  hbs: true,\n  hs: true,\n  jade: true,\n  js: true,\n  kql: true,\n  makefile: true,\n  md: true,\n  nar: true,\n  nf: true,\n  objc: true,\n  perl6: true,\n  properties: true,\n  ps: true,\n  ps1: true,\n  py: true,\n  ql: true,\n  rb: true,\n  rs: true,\n  sh: true,\n  shader: true,\n  shell: true,\n  spl: true,\n  styl: true,\n  ts: true,\n  vim: true,\n  vimscript: true,\n  vy: true,\n  yml: true,\n  zsh: true,\n  文言: true,\n};\n","import { useHighlight } from '../../hooks/useHighlight';\nimport { HTMLAttributes, memo } from 'react';\n\nexport interface SyntaxHighlighterProps extends HTMLAttributes<HTMLDivElement> {\n  children: string;\n  language: string;\n}\n\nexport const SyntaxHighlighter = memo<SyntaxHighlighterProps>(\n  ({ children, language }) => {\n    const { data, isLoading } = useHighlight(children, language);\n\n    return (\n      <>\n        {isLoading || !data ? (\n          <pre>\n            <code style={{ whiteSpace: 'pre-wrap' }}>{children}</code>\n          </pre>\n        ) : (\n          <div dangerouslySetInnerHTML={{ __html: data as string }} dir=\"ltr\" />\n        )}\n      </>\n    );\n  },\n);\n\nSyntaxHighlighter.displayName = 'SyntaxHighlighter';\n","import Flex from '../Flex';\nimport CopyButton from './CopyButton';\nimport { SyntaxHighlighter, SyntaxHighlighterProps } from './SyntaxHighight';\nimport { theme, Typography } from 'antd';\n// `rehype-katex` does not import the CSS file, so we need to import it manually.\nimport 'katex/dist/katex.min.css';\nimport { marked } from 'marked';\nimport React, { memo, useCallback, useMemo } from 'react';\nimport Markdown from 'react-markdown';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nconst { Text } = Typography;\n\nfunction parseMarkdownIntoBlocks(markdown: string): string[] {\n  const tokens = marked.lexer(markdown);\n  return tokens.map((token) => token.raw);\n}\n\nconst CodeBlock = memo<SyntaxHighlighterProps>(({ children, ...props }) => (\n  <SyntaxHighlighter {...props}>{children}</SyntaxHighlighter>\n));\n\nCodeBlock.displayName = 'CodeBlock';\n\nconst CodeHead = memo<{ lang: string; extra?: React.ReactNode }>(\n  ({ lang, extra }) => {\n    const { token } = theme.useToken();\n\n    return (\n      <Flex\n        style={{\n          margin: 0,\n          minHeight: 38,\n          padding: `0 ${token.paddingSM}px`,\n          background: 'rgba(0, 0, 0, 0.02)',\n          width: '100%',\n        }}\n      >\n        <Flex\n          style={{\n            display: 'inline-block',\n            flex: '1',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          <Text style={{ fontWeight: 'normal' }} type=\"secondary\">\n            {lang}\n          </Text>\n        </Flex>\n        <Flex>{extra}</Flex>\n      </Flex>\n    );\n  },\n);\n\nCodeHead.displayName = 'CodeHead';\n\nconst ChatMessageContentBlock = memo<{ block?: string; isStreaming?: boolean }>(\n  ({ block, isStreaming }) => {\n    const renderCode = useCallback(\n      (props: any) => {\n        const { children, className, node, ref, ...rest } = props;\n        const match = /language-(\\w+)/.exec(className || '');\n        const content = String(children ?? '').replace(/\\n$/, '');\n        const { token } = theme.useToken();\n\n        return match ? (\n          <Flex\n            direction={'column'}\n            style={{\n              border: '1px solid #f0f0f0',\n              margin: '0',\n              padding: '0',\n              borderRadius: token.borderRadiusLG,\n              overflow: 'hidden',\n            }}\n          >\n            <CodeHead\n              lang={match[1]}\n              extra={\n                <CopyButton\n                  type=\"text\"\n                  copyable={{ text: content ?? '' }}\n                  style={{\n                    display: isStreaming ? 'none' : 'block',\n                  }}\n                />\n              }\n            />\n            <Flex\n              style={{\n                width: '100%',\n                padding: token.paddingSM,\n                borderRadius: `0 0 ${token.borderRadiusLG}px ${token.borderRadiusLG}px`,\n                margin: '-0.5em 0',\n                overflow: 'scroll',\n              }}\n            >\n              <CodeBlock\n                {...rest}\n                PreTag=\"div\"\n                language={match[1]}\n                style={oneLight}\n                wrapLongLines\n                wrapLines\n              >\n                {content}\n              </CodeBlock>\n            </Flex>\n          </Flex>\n        ) : (\n          <Flex\n            style={{\n              width: '100%',\n              padding: token.paddingSM,\n              borderRadius: `0 0 ${token.borderRadiusLG}px ${token.borderRadiusLG}px`,\n              margin: '-0.5em 0',\n              overflow: 'scroll',\n            }}\n          >\n            <code\n              {...rest}\n              style={{ whiteSpace: 'pre-wrap' }}\n              className={className}\n            >\n              {/* @ts-ignore */}\n              {children}\n            </code>\n          </Flex>\n        );\n      },\n      [isStreaming],\n    );\n\n    const renderParagraph = useCallback(({ node, ...props }: any) => {\n      return <p {...props} style={{ whiteSpace: 'pre-wrap' }} />;\n    }, []);\n\n    return (\n      <Markdown\n        remarkPlugins={[remarkGfm, remarkMath]}\n        rehypePlugins={[rehypeKatex]}\n        components={{ p: renderParagraph, code: renderCode }}\n      >\n        {block}\n      </Markdown>\n    );\n  },\n);\n\nChatMessageContentBlock.displayName = 'ChatMessageContentBlock';\n\nconst ChatMessageContent: React.FC<{\n  children?: string;\n  isStreaming?: boolean;\n}> = ({ children, isStreaming }) => {\n  const blocks = useMemo(\n    () => parseMarkdownIntoBlocks(children ?? ''),\n    [children],\n  );\n\n  return blocks.map((block, index) => (\n    <ChatMessageContentBlock\n      block={block}\n      key={`block_${index}`}\n      isStreaming={isStreaming}\n    />\n  ));\n};\n\nChatMessageContent.displayName = 'ChatMessageContent';\n\nexport default memo(ChatMessageContent);\n","import Flex from '../Flex';\nimport {\n  ChatMessageContainer,\n  ChatMessagePlacement,\n} from './ChatMessageContainer';\n// ES 2015\nimport ChatMessageContent from './ChatMessageContent';\nimport { Message } from '@ai-sdk/react';\nimport { Attachments } from '@ant-design/x';\nimport { theme, Image, Collapse, Typography, Spin } from 'antd';\nimport _ from 'lodash';\nimport React, { memo } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChatMessageProps {\n  message: Message;\n  placement?: ChatMessagePlacement;\n  extra?: React.ReactNode;\n  enableExtraHover?: boolean;\n  isStreaming?: boolean;\n  avatar?: React.ReactNode;\n}\n\nconst ChatMessage: React.FC<ChatMessageProps> = ({\n  extra,\n  message,\n  placement,\n  enableExtraHover,\n  isStreaming,\n  avatar,\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const { content, reasoning } = message;\n\n  return (\n    <ChatMessageContainer\n      placement={placement}\n      avatar={avatar}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {_.map(message.experimental_attachments, (attachment, index) =>\n        _.includes(attachment?.contentType, 'image/') ? (\n          <Flex\n            style={{\n              border: 'none',\n              textAlign: 'end',\n            }}\n            align=\"end\"\n          >\n            <Image\n              key={`${message?.id}-${index}`}\n              src={attachment?.url}\n              alt={attachment?.name}\n              style={{\n                maxWidth: '50vw',\n                maxHeight: '12vh',\n                borderRadius: token.borderRadius,\n              }}\n            />\n          </Flex>\n        ) : (\n          <Attachments.FileCard\n            key={index}\n            item={{\n              uid: `${message?.id}-${index}`,\n              name: attachment?.name || attachment?.url,\n              type: attachment?.contentType,\n              description: attachment?.name,\n              url: attachment?.url,\n            }}\n          />\n        ),\n      )}\n      <Flex\n        align=\"stretch\"\n        direction=\"column\"\n        style={{\n          borderRadius: token.borderRadius,\n          borderColor: token.colorBorderSecondary,\n          borderWidth: token.lineWidth,\n          padding: '1em',\n          paddingTop: 0,\n          paddingBottom: 0,\n          backgroundColor:\n            message.role !== 'user'\n              ? token.colorBgContainer\n              : token.colorBgContainerDisabled,\n          maxWidth: '100%',\n          width: _.trim(message.reasoning) ? '100%' : 'auto',\n        }}\n      >\n        {_.trim(message.reasoning) && (\n          <Collapse\n            style={{\n              marginTop: token.margin,\n              width: '100%',\n            }}\n            items={[\n              {\n                key: 'reasoning',\n                label: _.isEmpty(content) ? (\n                  <Flex gap=\"xs\">\n                    <Typography.Text>{t('chatui.Thinking')}</Typography.Text>\n                    <Spin size=\"small\" />\n                  </Flex>\n                ) : (\n                  <Typography.Text>{t('chatui.ViewReasoning')}</Typography.Text>\n                ),\n                children: (\n                  <ChatMessageContent isStreaming={isStreaming}>\n                    {reasoning}\n                  </ChatMessageContent>\n                ),\n              },\n            ]}\n          />\n        )}\n        <ChatMessageContent isStreaming={isStreaming}>\n          {content + (isStreaming ? '\\n' : '')}\n        </ChatMessageContent>\n      </Flex>\n      <Flex\n        style={{\n          fontSize: token.fontSizeSM,\n          ...(enableExtraHover\n            ? {\n                opacity: isHovered ? 1 : 0,\n                transition: 'opacity 0.2s',\n                transitionDelay: isHovered ? '0s' : '0.2s',\n              }\n            : {}),\n        }}\n      >\n        {extra}\n      </Flex>\n    </ChatMessageContainer>\n  );\n};\n\nexport default memo(ChatMessage);\n","import ChatMessage, { ChatMessageProps } from './ChatMessage';\nimport CopyButton from './CopyButton';\nimport Compact from 'antd/es/space/Compact';\n\nexport const AssistantChatMessage: React.FC<ChatMessageProps> = ({\n  message,\n  isStreaming,\n  placement,\n}) => {\n  return (\n    <ChatMessage\n      key={message.id}\n      message={message}\n      placement={{ ...placement, left: true }}\n      isStreaming={isStreaming}\n      enableExtraHover={false}\n      extra={\n        <Compact>\n          <CopyButton\n            type=\"text\"\n            size=\"small\"\n            copyable={{\n              text: message.content,\n            }}\n            style={{\n              display: isStreaming ? 'none' : 'block',\n            }}\n          />\n        </Compact>\n      }\n      avatar={'🤖'}\n    />\n  );\n};\n","import { useEventNotStable } from '../../hooks/useEventNotStable';\nimport { Button } from 'antd';\nimport { ArrowDownIcon } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface ScrollBottomHandlerButtonProps {\n  autoScroll?: boolean;\n  atBottom?: boolean;\n  onScrollToBottom: (type: 'click' | 'auto') => void;\n}\nconst ScrollBottomHandlerButton: React.FC<ScrollBottomHandlerButtonProps> = ({\n  autoScroll,\n  atBottom,\n  ...props\n}) => {\n  const onScrollToBottom = useEventNotStable(props.onScrollToBottom);\n\n  useEffect(() => {\n    if (atBottom && autoScroll) {\n      onScrollToBottom?.('auto');\n    }\n  }, [atBottom, autoScroll, onScrollToBottom]);\n\n  return (\n    <Button\n      icon={<ArrowDownIcon />}\n      shape=\"circle\"\n      onClick={() => {\n        onScrollToBottom && onScrollToBottom('click');\n      }}\n    ></Button>\n  );\n};\n\nexport default ScrollBottomHandlerButton;\n","import Flex from '../Flex';\nimport { AssistantChatMessage } from './AssistantChatMesssage';\nimport ScrollBottomHandlerButton from './ScrollBottomHandlerButton';\nimport { UserChatMessage } from './UserChatMesssage';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\ninterface VirtualizedListProps {\n  messages: Array<Message>;\n  isStreaming?: boolean;\n}\n\nconst ChatMessageRenders = {\n  user: UserChatMessage,\n  assistant: AssistantChatMessage,\n  system: AssistantChatMessage,\n  data: AssistantChatMessage,\n};\n\nconst VirtualChatMessageList: React.FC<VirtualizedListProps> = ({\n  messages,\n  isStreaming,\n}) => {\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [atBottom, setAtBottom] = useState(true);\n  const { token } = theme.useToken();\n\n  // overscan should be 1.5 times the height of the window\n  const overscan = typeof window !== 'undefined' ? window.innerHeight * 1.5 : 0;\n\n  const itemContent = useCallback(\n    (index: number, message: Message) => {\n      const RenderChatMessage = ChatMessageRenders[message.role];\n\n      return (\n        <>\n          <RenderChatMessage\n            key={message.id}\n            message={message}\n            isStreaming={isStreaming ?? false}\n            placement={{\n              top: index === 0,\n              bottom: index === messages.length - 1,\n            }}\n          />\n        </>\n      );\n    },\n    [isStreaming, messages.length],\n  );\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ height: '100%', flex: 1 }}\n    >\n      <Virtuoso\n        atBottomStateChange={setAtBottom}\n        atBottomThreshold={60}\n        computeItemKey={(_, item) => item.id}\n        data={messages}\n        followOutput={'auto'}\n        initialTopMostItemIndex={messages?.length - 1}\n        itemContent={itemContent}\n        overscan={overscan}\n        ref={virtuosoRef}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          right: '50%',\n          transform: 'translateX(+50%)',\n          bottom: token.marginSM,\n          opacity: atBottom ? 0 : 1,\n          transition: 'opacity 0.2s',\n          transitionDelay: atBottom ? '0s' : '0.2s',\n        }}\n      >\n        <ScrollBottomHandlerButton\n          atBottom={atBottom}\n          autoScroll={isStreaming}\n          onScrollToBottom={(type) => {\n            const virtuoso = virtuosoRef.current;\n            switch (type) {\n              case 'auto': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'auto',\n                  index: 'LAST',\n                });\n                break;\n              }\n              case 'click': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'smooth',\n                  index: 'LAST',\n                });\n                break;\n              }\n            }\n          }}\n        />\n      </div>\n    </Flex>\n  );\n};\n\nexport default VirtualChatMessageList;\n","import ChatMessage from './ChatMessage';\nimport type { ChatMessagePlacement } from './ChatMessageContainer';\nimport { Message } from '@ai-sdk/react';\nimport Compact from 'antd/es/space/Compact';\n\ninterface UserChatMessageProps {\n  message: Message;\n  isStreaming: boolean;\n  placement?: ChatMessagePlacement;\n}\n\nexport const UserChatMessage: React.FC<UserChatMessageProps> = ({\n  message,\n  isStreaming,\n  placement,\n}) => {\n  return (\n    <ChatMessage\n      key={message.id}\n      message={message}\n      placement={{ ...placement, right: true }}\n      isStreaming={isStreaming}\n      enableExtraHover={true}\n      extra={<Compact>{null}</Compact>}\n      avatar={'🧑‍🦰'}\n    />\n  );\n};\n","import Flex from '../Flex';\nimport PureChatTokenCounter from './ChatTokenCounter';\nimport VirtualChatMessageList from './VirtualChatMessageList';\nimport { Message } from '@ai-sdk/react';\nimport React, { memo } from 'react';\n\nconst ChatMessageList = memo(VirtualChatMessageList);\n\nconst ChatTokenCounter = memo(PureChatTokenCounter);\n\ninterface ChatRequest {\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n}\n\ninterface ChatMessageProps extends ChatRequest {\n  messages: Message[];\n  input: string;\n  isStreaming: boolean;\n  startTime: number | null;\n}\n\nconst ChatMessages: React.FC<ChatMessageProps> = ({\n  messages,\n  input,\n  isStreaming,\n  startTime,\n}) => {\n  return (\n    <>\n      <ChatMessageList messages={messages} isStreaming={isStreaming} />\n      <Flex direction=\"column\" align=\"end\">\n        <ChatTokenCounter\n          messages={messages}\n          input={input}\n          startTime={startTime}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatMessages;\n","import type {\n  EndpointTokenSelectQuery,\n  EndpointTokenSelectQuery$data,\n} from './__generated__/EndpointTokenSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Input, Select } from 'antd';\nimport type { SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport { castArray, sortBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nfunction sortEndpointTokenList(\n  endpointTokenListData: EndpointTokenSelectQuery$data['endpoint_token_list'],\n) {\n  if (!endpointTokenListData.ok) return [];\n\n  const now = dayjs();\n  return sortBy(endpointTokenListData.value?.items, 'created_at').map(\n    (item) => ({\n      label: item?.token,\n      value: item?.token,\n      disabled: !dayjs(item?.valid_until).tz().isAfter(now),\n    }),\n  );\n}\n\ninterface EndpointTokenSelectProps extends Omit<SelectProps, 'options'> {\n  endpointId?: string | null;\n}\n\nconst EndpointTokenSelect: React.FC<EndpointTokenSelectProps> = ({\n  endpointId,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(props);\n\n  const { endpoint_token_list } = useLazyLoadQuery<EndpointTokenSelectQuery>(\n    graphql`\n      query EndpointTokenSelectQuery(\n        $endpointId: UUID!\n        $isEmptyEndpointId: Boolean!\n      ) {\n        endpoint_token_list(offset: 0, limit: 100, endpoint_id: $endpointId)\n          @skipOnClient(if: $isEmptyEndpointId)\n          @catch {\n          items {\n            id\n            token\n            created_at\n            valid_until\n          }\n        }\n      }\n    `,\n    {\n      endpointId: endpointId || '',\n      isEmptyEndpointId: !endpointId,\n    },\n  );\n\n  const selectOptions = useMemo(\n    () => sortEndpointTokenList(endpoint_token_list),\n    [endpoint_token_list],\n  );\n\n  return selectOptions.length <= 0 ? (\n    <Input onChange={(e) => setControllableValue(e.target.value)} />\n  ) : (\n    <Select\n      placeholder={t('chatui.SelectToken')}\n      style={{\n        fontWeight: 'normal',\n        width: '200px',\n      }}\n      options={selectOptions}\n      value={controllableValue}\n      onChange={(_, option) => {\n        setControllableValue(castArray(option)?.[0].value ?? '');\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default EndpointTokenSelect;\n","import Flex from '../Flex';\nimport EndpointTokenSelect from './EndpointTokenSelect';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { Alert, Button, Form, Input, theme } from 'antd';\nimport type { FormInstance } from 'antd';\nimport { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type CustomModelFormValues = {\n  baseURL?: string;\n  token?: string;\n};\n\ntype CustomModelFormProps = {\n  baseURL?: string;\n  token?: string;\n  endpointId?: string | null;\n  loading: boolean;\n  onSubmit?: (formData: CustomModelFormValues) => void;\n};\n\nfunction parseBaseURL(baseURL?: string) {\n  const { origin, pathname } = new URL(baseURL || '');\n  return {\n    origin: `${origin}/`,\n    pathname: pathname.replace(/^\\//, ''),\n  };\n}\n\nconst CustomModelForm: React.FC<CustomModelFormProps> = ({\n  baseURL,\n  token,\n  endpointId,\n  loading,\n  onSubmit,\n}) => {\n  const { t } = useTranslation();\n  const { token: themeToken } = theme.useToken();\n  const formRef = useRef<FormInstance>(null);\n\n  const { origin, pathname: basePath } = parseBaseURL(baseURL);\n\n  return (\n    <Flex\n      direction=\"row\"\n      style={{\n        padding: themeToken.paddingSM,\n        paddingRight: themeToken.paddingContentHorizontalLG,\n        paddingLeft: themeToken.paddingContentHorizontalLG,\n        backgroundColor: themeToken.colorBgContainer,\n      }}\n    >\n      <Form\n        ref={formRef}\n        layout=\"horizontal\"\n        size=\"small\"\n        requiredMark=\"optional\"\n        style={{ flex: 1 }}\n        key={baseURL}\n        initialValues={{\n          basePath: basePath,\n          token: token,\n        }}\n      >\n        <div style={{ marginBottom: themeToken.size }}>\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={t('chatui.CannotFindModel')}\n          />\n        </div>\n        <Form.Item label={t('modelService.BasePath')} name=\"basePath\">\n          <Input\n            placeholder=\"v1\"\n            addonBefore={origin}\n            defaultValue={basePath}\n          />\n        </Form.Item>\n        <Form.Item label={t('modelService.Token')} name=\"token\">\n          <EndpointTokenSelect loading={loading} endpointId={endpointId} />\n        </Form.Item>\n        <Button\n          icon={<ReloadOutlined />}\n          loading={loading}\n          onClick={() => {\n            onSubmit?.({\n              baseURL: new URL(\n                formRef.current?.getFieldValue('basePath') ?? '',\n                origin,\n              ).toString(),\n              token: formRef.current?.getFieldValue('token'),\n            });\n          }}\n        >\n          {t('button.RefreshModelInformation')}\n        </Button>\n      </Form>\n    </Flex>\n  );\n};\n\nexport { CustomModelForm };\n","import { useUpdatableState } from '../../hooks';\nimport { useSuspenseTanQuery } from '../../hooks/reactQueryAlias';\nimport { useAIAgent } from '../../hooks/useAIAgent';\nimport PureChatHeader from './ChatHeader';\nimport PureChatInput from './ChatInput';\nimport ChatMessages from './ChatMessages';\nimport {\n  BAIModel,\n  ChatLifecycleEventType,\n  ChatProviderType,\n  ChatType,\n  getAIErrorMessage,\n  Model,\n} from './ChatModel';\nimport { CustomModelForm } from './CustomModelForm';\nimport { ChatCardQuery } from './__generated__/ChatCardQuery.graphql';\nimport { createOpenAI } from '@ai-sdk/openai';\nimport { useChat } from '@ai-sdk/react';\nimport { extractReasoningMiddleware, streamText, wrapLanguageModel } from 'ai';\nimport { Alert, App, Card, CardProps } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useTransition,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface ChatCardProps extends CardProps, ChatLifecycleEventType {\n  chat: ChatType;\n  onUpdateChat?: (partialChat: DeepPartial<ChatType>) => void;\n  closable?: boolean;\n  fetchOnClient?: boolean;\n  defaultEndpointId?: string;\n}\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatCard: css`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  body: css`\n    background-color: ${token.colorFillQuaternary};\n    border-radius: 0;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    height: 50%;\n    position: relative;\n  `,\n  actions: css`\n    padding-left: ${token.paddingContentHorizontal};\n    padding-right: ${token.paddingContentHorizontal};\n  `,\n  header: css`\n    zindex: 1;\n  `,\n  alert: css`\n    margin: ${token.marginSM};\n  `,\n}));\n\nfunction createModelsURL(baseURL: string) {\n  const { origin, port, pathname: path } = new URL(baseURL.trim());\n  const host = port.length > 0 ? `${origin}:${port}` : origin;\n  const normalizedPath = path === '/' ? '/models' : `${path}/models`;\n\n  return new URL(normalizedPath, host).toString();\n}\n\nfunction useModels(\n  provider: ChatProviderType,\n  fetchKey: string,\n  baseURL?: string,\n) {\n  const { t } = useTranslation();\n  const getModelsErrorMessage = (status?: number) => {\n    switch (status) {\n      case 401:\n        return t('error.UnauthorizedToken');\n      case 404:\n        return t('error.NotFoundBasePath');\n      case 500:\n        return t('error.InternalServerError');\n      case 503:\n        return t('error.ServiceUnavailable');\n      case -1:\n      default:\n        return t('error.UnknownError');\n    }\n  };\n\n  const { data: modelsResult } = useSuspenseTanQuery<{\n    data: Array<Model>;\n    error?: number;\n  }>({\n    queryKey: ['models', fetchKey, baseURL, provider.apiKey],\n    queryFn: async () => {\n      if (!baseURL) {\n        return { data: [] };\n      }\n\n      const url = createModelsURL(baseURL);\n      const authToken = provider.apiKey;\n      const res = await fetch(url, {\n        headers: {\n          Authorization: authToken ? `Bearer ${authToken}` : '',\n        },\n      }).catch((e) => {\n        return {\n          ok: false,\n          status: -1,\n        } as const;\n      });\n\n      if (res.ok) {\n        return await res.json();\n      } else {\n        return { data: [], error: res?.status };\n      }\n    },\n  });\n\n  const models = _.map(modelsResult?.data || [], (m) => ({\n    id: m.id,\n    name: m.id,\n  })) as BAIModel[];\n\n  const modelId = useMemo(\n    () =>\n      provider.modelId &&\n      _.includes(_.map(modelsResult?.data || [], 'id'), provider.modelId)\n        ? provider.modelId\n        : (modelsResult?.data?.[0]?.id ?? 'custom'),\n    [modelsResult?.data, provider.modelId],\n  );\n\n  const modelsError =\n    modelsResult.error && getModelsErrorMessage(modelsResult.error);\n\n  return {\n    models,\n    modelId,\n    modelsError,\n  } as const;\n}\n\nconst ChatHeader = PureChatHeader;\n\nconst ChatInput = React.memo(PureChatInput);\n\nfunction createBaseURL(basePath: string, endpointUrl?: string | null) {\n  try {\n    return endpointUrl ? new URL(basePath, endpointUrl).toString() : undefined;\n  } catch {\n    console.error('Invalid base URL:', basePath, 'endpointUrl', endpointUrl);\n  }\n}\n\nconst ChatCard: React.FC<ChatCardProps> = ({\n  chat,\n  onUpdateChat,\n  closable,\n  fetchOnClient,\n  onRequestClose,\n  onCreateNewChat,\n}) => {\n  const { t } = useTranslation();\n  const { message: appMessage } = App.useApp();\n  const endpointResult = useLazyLoadQuery<ChatCardQuery>(\n    graphql`\n      query ChatCardQuery($endpointId: UUID!) {\n        endpoint(endpoint_id: $endpointId) @catch {\n          endpoint_id\n          url\n          ...ChatHeader_Endpoint\n        }\n      }\n    `,\n    {\n      endpointId: chat.provider.endpointId || '',\n    },\n    {\n      fetchPolicy: chat.provider.endpointId ? 'store-or-network' : 'store-only',\n    },\n  );\n  const endpoint = endpointResult.endpoint.ok\n    ? endpointResult.endpoint.value\n    : null;\n  const {\n    styles: { chatCard: chatCardStyle, alert: alertStyle, ...chatCardStyles },\n  } = useStyles();\n  const [isPendingUpdate, startUpdateTransition] = useTransition();\n\n  const dropContainerRef = useRef<HTMLDivElement>(null);\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  const baseURL = createBaseURL(chat.provider.basePath, endpoint?.url);\n  const { models, modelId, modelsError } = useModels(\n    chat.provider,\n    fetchKey,\n    baseURL,\n  );\n  const { agents } = useAIAgent();\n  const agent = agents.find((a) => a.id === chat.provider.agentId);\n\n  const {\n    error,\n    messages,\n    input,\n    setInput,\n    stop,\n    status,\n    append,\n    setMessages,\n  } = useChat({\n    id: `${chat.id}-${endpoint?.endpoint_id}-${agent?.id ?? 'none'}-${modelId}`,\n    api: baseURL,\n    credentials: chat.provider.credentials,\n    body: {\n      modelId: modelId,\n    },\n    experimental_throttle: 50,\n    fetch: async (input, init) => {\n      if (fetchOnClient || modelId === 'custom') {\n        const body = JSON.parse(init?.body as string);\n        const provider = createOpenAI({\n          baseURL: baseURL,\n          apiKey: chat.provider.apiKey || 'dummy',\n        });\n        const result = streamText({\n          abortSignal: init?.signal || undefined,\n          model: wrapLanguageModel({\n            model: provider(modelId),\n            middleware: extractReasoningMiddleware({ tagName: 'think' }),\n          }),\n          messages: body?.messages,\n          system: agent ? (agent.config.system_prompt ?? '') : '',\n          ...(chat.usingParameters ? chat.parameters : {}),\n        });\n\n        setStartTime(Date.now());\n\n        return result.toDataStreamResponse({\n          sendReasoning: true,\n          getErrorMessage: (error) => {\n            return getAIErrorMessage(error);\n          },\n        });\n      }\n\n      return fetch(input, init);\n    },\n  });\n\n  const isStreaming = status === 'streaming' || status === 'submitted';\n\n  useEffect(() => {\n    // prevent to show the error message as failed fetching in the first time\n    if (modelsError && fetchKey !== 'first') {\n      appMessage.error(`Error fetching models: ${modelsError}`, 5);\n    }\n  }, [modelsError, fetchKey, appMessage]);\n\n  return (\n    <Card\n      variant=\"outlined\"\n      className={chatCardStyle}\n      classNames={chatCardStyles}\n      title={\n        <ChatHeader\n          // model\n          models={models}\n          modelId={modelId}\n          onChangeModel={(modelId) => {\n            onUpdateChat?.({\n              provider: {\n                modelId,\n              },\n            });\n          }}\n          // agent\n          agents={agents}\n          agent={agent}\n          onChangeAgent={(agent) => {\n            onUpdateChat?.({\n              provider: {\n                agentId: agent.id,\n                endpointId: agent.endpoint_id,\n              },\n            });\n          }}\n          // endpoint\n          endpointFrgmt={endpoint}\n          onChangeEndpoint={(endpointId) => {\n            onUpdateChat?.({\n              provider: {\n                endpointId,\n              },\n            });\n          }}\n          // sync\n          sync={chat.sync}\n          onChangeSync={(sync) => {\n            onUpdateChat?.({\n              sync,\n            });\n          }}\n          // others\n          fetchKey={fetchKey}\n          closable={closable}\n          onClickCreate={onCreateNewChat}\n          onClickClose={() => {\n            onRequestClose?.(chat);\n          }}\n          onClickDeleteChatHistory={() => {\n            setMessages([]);\n          }}\n          parameters={chat.parameters}\n          usingParameters={chat.usingParameters}\n          onChangeParameter={(usingParameters, parameters) => {\n            onUpdateChat?.({\n              usingParameters,\n              parameters,\n            });\n          }}\n        />\n      }\n      ref={dropContainerRef}\n    >\n      {baseURL && endpoint && _.isEmpty(models) && (\n        <CustomModelForm\n          baseURL={baseURL}\n          token={chat.provider.apiKey}\n          endpointId={endpoint?.endpoint_id}\n          loading={isPendingUpdate}\n          onSubmit={(data) => {\n            startUpdateTransition(() => {\n              updateFetchKey();\n              onUpdateChat?.({\n                ...chat,\n                provider: {\n                  ...chat.provider,\n                  baseURL: data.baseURL,\n                  apiKey: data.token,\n                },\n              });\n            });\n          }}\n        />\n      )}\n      {!_.isEmpty(error?.message) ? (\n        <Alert\n          message={error?.message}\n          type=\"error\"\n          showIcon\n          className={alertStyle}\n          closable\n        />\n      ) : null}\n      {!baseURL ? (\n        <Alert\n          message={t('error.InvalidBaseURL')}\n          type=\"error\"\n          showIcon\n          className={alertStyle}\n          closable\n        />\n      ) : null}\n      <ChatMessages\n        messages={messages}\n        input={input}\n        isStreaming={isStreaming}\n        startTime={startTime}\n      />\n      <ChatInput\n        disabled={!baseURL}\n        sync={chat.sync}\n        input={input}\n        setInput={setInput}\n        stop={stop}\n        append={append}\n        isStreaming={isStreaming}\n        dropContainerRef={dropContainerRef}\n      />\n    </Card>\n  );\n};\n\nexport default ChatCard;\n","import { AIAgent } from '../../hooks/useAIAgent';\nimport { APICallError } from 'ai';\n\nexport type ChatProviderType = {\n  baseURL?: string;\n  basePath: string;\n  agentId?: string;\n  endpointId?: string;\n  modelId?: string;\n  apiKey?: string;\n  credentials?: RequestCredentials;\n};\n\nexport interface ChatParameters {\n  maxTokens: number;\n  temperature: number;\n  topP: number;\n  topK: number;\n  frequencyPenalty: number;\n  presencePenalty: number;\n}\n\nexport type ChatType = {\n  id: string;\n  conversationId: string;\n  label: string;\n  sync: boolean;\n  provider: ChatProviderType;\n  usingParameters: boolean;\n  parameters: ChatParameters;\n  agent?: AIAgent;\n};\n\nexport type ConversationType = {\n  id: string;\n  label: string;\n  chats: ChatType[];\n};\n\nexport interface ChatLifecycleEventType {\n  onRequestClose?: (chat: ChatType) => void;\n  onCreateNewChat?: () => void;\n}\n\ninterface ModelPermission {\n  id: string;\n  object: string;\n  created: number;\n  allow_create_engine: boolean;\n  allow_sampling: boolean;\n  allow_logprobs: boolean;\n  allow_search_indices: boolean;\n  allow_view: boolean;\n  allow_fine_tuning: boolean;\n  organization: string;\n  group: string | null;\n  is_blocking: boolean;\n}\n\nexport interface Model {\n  id: string;\n  object: string;\n  created: number;\n  owned_by: string;\n  root: string;\n  parent: string | null;\n  max_model_len: number;\n  permission: ModelPermission[];\n}\n\nexport type BAIModel = {\n  id: string;\n  label?: string;\n  name?: string;\n  group?: string;\n  created?: string;\n  description?: string;\n};\n\nexport function getAIErrorMessage(error: unknown): string {\n  try {\n    if (APICallError.isInstance(error)) {\n      if (!error.responseBody) {\n        return error.message;\n      }\n\n      const errorBody = JSON.parse(error.responseBody || '{}');\n\n      return errorBody.message;\n    } else if (error instanceof Error) {\n      return error.message;\n    } else if (typeof error === 'string') {\n      return error;\n    }\n  } catch {}\n\n  return 'Unknown error:' + error;\n}\n","import Flex from '../Flex';\nimport ChatCard from './ChatCard';\nimport {\n  ChatParameters,\n  ChatProviderType,\n  ChatType,\n  ConversationType,\n} from './ChatModel';\nimport { useDynamicList } from 'ahooks';\nimport { Card, Skeleton } from 'antd';\nimport { createStyles } from 'antd-style';\nimport _ from 'lodash';\nimport { map } from 'lodash';\nimport { Suspense, useId } from 'react';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatView: css`\n    overflow: auto;\n    height: calc(100vh - 240px);\n  `,\n  skeleton: css`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  chatCard: css`\n    flex: 1;\n    overflow: 'hidden';\n  `,\n  conversation: css`\n    overflow: hidden;\n  `,\n}));\n\nexport type ConversationProps = {\n  conversation: ConversationType;\n  provider: ChatProviderType;\n};\n\nconst defaultChatParameters = {\n  maxTokens: 4096,\n  temperature: 0.7,\n  topP: 1,\n  topK: 1,\n  frequencyPenalty: 1,\n  presencePenalty: 1,\n};\n\nfunction createNewChat(\n  id: string,\n  conversationId: string,\n  provider: ChatProviderType,\n  parameters: ChatParameters,\n) {\n  return {\n    id,\n    conversationId,\n    label: 'Chat',\n    sync: true,\n    provider,\n    usingParameters: false,\n    parameters,\n  };\n}\n\nexport const Conversation: React.FC<ConversationProps> = ({\n  conversation,\n  provider,\n}) => {\n  const defaultChat = createNewChat(\n    useId(),\n    conversation.id,\n    provider,\n    defaultChatParameters,\n  );\n  const { list, remove, push, replace } = useDynamicList<ChatType>([\n    defaultChat,\n  ]);\n  const { styles } = useStyles();\n  return (\n    <Flex\n      className={styles.conversation}\n      direction=\"column\"\n      align=\"stretch\"\n      gap={'xs'}\n    >\n      <Flex\n        className={styles.chatView}\n        gap={'xs'}\n        direction=\"row\"\n        align=\"stretch\"\n      >\n        {map(list, (chat, index) => (\n          <Suspense\n            fallback={\n              <Card className={styles.skeleton} variant=\"outlined\">\n                <Skeleton active />\n              </Card>\n            }\n            key={chat.id}\n          >\n            <ChatCard\n              className={styles.chatCard}\n              chat={chat}\n              onUpdateChat={(newChatProperties) => {\n                const mergedChat = _.merge({}, chat, newChatProperties);\n                replace(index, mergedChat);\n              }}\n              fetchOnClient\n              onRequestClose={() => remove(index)}\n              onCreateNewChat={() => {\n                push(\n                  createNewChat(\n                    list.length.toString(),\n                    conversation.id,\n                    chat.provider,\n                    defaultChatParameters,\n                  ),\n                );\n              }}\n              closable={list.length > 1}\n            />\n          </Suspense>\n        ))}\n      </Flex>\n    </Flex>\n  );\n};\n","import BAICard from '../components/BAICard';\nimport {\n  ChatProviderType,\n  ConversationType,\n} from '../components/Chat/ChatModel';\nimport { Conversation } from '../components/Chat/Conversation';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { ChatPageQuery } from './__generated__/ChatPageQuery.graphql';\nimport graphql from 'babel-plugin-relay/macro';\nimport { t } from 'i18next';\nimport React, { useId } from 'react';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { StringParam, useQueryParams } from 'use-query-params';\n\nconst ChatPageStyle = {\n  body: {\n    overflow: 'hidden',\n  },\n};\n\ntype ChatPageProps = {};\n\nfunction useDefaultEndpointId() {\n  const baiClient = useSuspendedBackendaiClient();\n  const { endpoint_list } = useLazyLoadQuery<ChatPageQuery>(\n    graphql`\n      query ChatPageQuery($filter: String) {\n        endpoint_list(limit: 1, offset: 0, filter: $filter) {\n          items {\n            endpoint_id\n          }\n        }\n      }\n    `,\n    {\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? 'lifecycle_stage == \"created\"'\n        : undefined,\n    },\n  );\n\n  return endpoint_list?.items[0]?.endpoint_id || undefined;\n}\n\nconst ChatPage: React.FC<ChatPageProps> = () => {\n  const [{ endpointId, modelId, agentId }] = useQueryParams({\n    endpointId: StringParam,\n    agentId: StringParam,\n    modelId: StringParam,\n  });\n\n  const defaultEndpointId = useDefaultEndpointId();\n\n  const conversation: ConversationType = {\n    id: useId(),\n    label: t('webui.menu.Chat'),\n    chats: [],\n  };\n\n  const provider: ChatProviderType = {\n    basePath: 'v1',\n    agentId: agentId ?? undefined,\n    endpointId: endpointId ?? defaultEndpointId ?? undefined,\n    modelId: modelId ?? undefined,\n  };\n\n  return (\n    <BAICard title={t('webui.menu.Chat')} styles={ChatPageStyle}>\n      <Conversation conversation={conversation} provider={provider} />\n    </BAICard>\n  );\n};\n\nexport default ChatPage;\n","/**\n * @generated SignedSource<<52124f4a9df40dc678d068524dbcfceb>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ChatPageQuery$variables = {\n  filter?: string | null | undefined;\n};\nexport type ChatPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type ChatPageQuery = {\n  response: ChatPageQuery$data;\n  variables: ChatPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"filter\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 1\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"offset\",\n    \"value\": 0\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ChatPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"763e262ee50ff2487754885efebacb90\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ChatPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ChatPageQuery(\\n  $filter: String\\n) {\\n  endpoint_list(limit: 1, offset: 0, filter: $filter) {\\n    items {\\n      endpoint_id\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"81b9bb8d9bd90410dd13088b30f18dc2\";\n\nexport default node;\n"],"names":["node","v0","v1","v2","v3","hash","v4","v5","v6","v7","v8","FluentEmojiIcon","_ref","name","height","width","icon","fluentEmoji","icons","_jsx","xmlns","viewBox","role","dangerouslySetInnerHTML","__html","body","useAIAgent","_agentsData$agents","key","checkUpdate","useUpdatableState","data","agentsData","isLoading","useTanQuery","queryKey","queryFn","fetch","then","response","json","staleTime","agents","refresh","useCallback","makeAgentOptions","filter","map","agent","label","meta","title","value","id","toLocaleLowerCase","includes","loading","props","token","theme","useToken","controllableValue","setControllableValue","useControllableValue","searchAgent","setSearchAgent","useState","isSearchPending","startSearchTransition","useTransition","selectedAgent","find","_Fragment","children","_jsxs","Flex","gap","avatar","sizeXL","Select","showSearch","onSearch","v","filterOption","options","onChange","popupMatchSelectWidth","ChatParameterSliderFormItem","max","min","step","description","disabled","Form","Item","justify","style","Typography","Text","fontSize","fontSizeSM","marginRight","marginXXS","QuestionIconWithTooltip","trigger","InputNumberWithSlider","chatParameters","maxTokens","t","temperature","topP","topK","frequencyPenalty","presencePenalty","defaultChatParameters","ChatParametersSliders","_ref2","parameters","onChangeParameter","enabled","setEnabled","currentParameters","useRef","Object","keys","length","ConfigProvider","components","verticalLabelPadding","itemMarginBottom","size","layout","initialValues","onValuesChange","values","current","align","fontSizeLG","marginLeft","Switch","checked","Divider","marginBlock","marginSM","entries","_ref3","params","total","useTranslation","LoadingOutlined","spin","color","colorTextSecondary","type","fetchKey","lifecycleStageFilter","selectPropsWithoutLoading","baiClient","useSuspendedBackendaiClient","controllableOpen","setControllableOpen","valuePropName","deferredOpen","useDeferredValue","searchStr","setSearchStr","deferredSearchStr","selectRef","lifecycleStageFilterStr","join","endpoint","selectedEndpoint","useLazyLoadQuery","_EndpointSelectValueQuery","require","endpoint_id","fetchPolicy","paginationData","result","endpoint_list","loadNext","isLoadingNext","query","initialPaginationVariables","otherVariables","getItem","getId","getTotal","previousResult","startLoadingNextTransition","limit","offset","setOffset","previousOtherVariablesRef","isNewOtherVariables","_","useMemo","items","undefined","hasNext","useEventNotStable","useEffect","useLazyPaginatedQuery","_EndpointSelectQuery","supports","Boolean","_result$endpoint_list","total_count","_result$endpoint_list2","item","selectOptions","optimisticValueWithLabel","setOptimisticValueWithLabel","isValueMatched","_selectRef$current","scrollTo","BAISelect","ref","placeholder","minWidth","searchValue","autoClearSearchValue","labelInValue","option","_$castArray","_selectPropsWithoutLo","call","endReached","open","onDropdownVisibleChange","notFoundContent","Skeleton","Input","active","block","footer","TotalFooter","models","selectProps","fontWeight","groupBy","mapValues","ms","m","k","SyncSwitch","sync","onClick","showCompareMenuItem","closable","modelId","onChangeModel","endpointFrgmt","onChangeEndpoint","onChangeAgent","onChangeSync","onClickClose","onClickCreate","onClickDeleteChatHistory","usingParameters","webuiNavigate","useWebUINavigate","isPendingEndpointTransition","startEndpointTransition","isPendingAgentTransition","startAgentTransition","useFragment","_ChatHeader_Endpoint","filterEmptyItem","ScaleIcon","EraserIcon","danger","CloseOutlined","experimentalAIAgents","useBAISettingUserState","direction","wrap","minHeight","paddingTop","paddingXS","paddingBottom","flexGrow","flexShrink","flexBasis","AIAgentSelect","EndpointSelect","isEmpty","ModelSelect","startTransition","Popover","content","placement","padding","Button","ControlOutlined","colorPrimary","PlusOutlined","Dropdown","menu","e","preventDefault","MoreOutlined","sizeMS","ChatAttachments","dropContainerRef","Attachments","beforeUpload","getDropContainer","accept","CloudUploadOutlined","autoFocus","openAttachment","onInputChange","onInputSubmit","onInputCancel","onAttachmentChange","onAttachmentOpenChange","senderProps","senderRef","focus","Sender","flex","onSubmit","onCancel","submitType","header","Header","onOpenChange","styles","info","prefix","Badge","dot","LinkOutlined","synchronizedMessageState","atom","synchronizedAttachmentState","chatSubmitKeyInfoState","input","setInput","stop","append","isStreaming","ChatInputStyle","borderTop","colorBorderSecondary","paddingContentVertical","isOpenAttachments","setIsOpenAttachments","files","setFiles","synchronizedMessage","setSynchronizedMessage","useAtom","synchronizedAttachment","setSynchronizedAttachment","chatSubmitKeyInfo","setChatSubmitKeyInfo","submitId","useId","submitKey","prevSyncRef","isUndefined","inputAttachment","isEqual","chatRequestOptions","experimental_attachments","createDataTransferFiles","handleInputChange","handleInputCancel","handleInputSubmit","setTimeout","Date","toString","handleAttachmentChange","attachment","fileList","handleAttachmentOpenChange","ChatSender","useTokenCount","arguments","setNum","async","encode","str","encodeAsync","catch","messages","startTime","inputTokenCount","allChatMessageString","message","totalTokenCount","lastAssistantMessageString","lastAssistantMessage","last","lastAssistantTokenCount","tokenPerSecond","now","margin","Tag","RocketOutlined","toFixed","ChatMessageContainer","memo","onMouseEnter","onMouseLeave","left","right","paddingLeft","paddingMD","paddingRight","top","bottom","Avatar","fontSizeHeading3","displayName","copyable","defaultIcon","isCopied","setIsCopied","timeout","clearTimeout","Tooltip","CopyToClipboard","text","onCopy","CheckIcon","CopyIcon","languageMap","abap","ada","apache","apex","apl","applescript","ara","asm","astro","awk","ballerina","bat","beancount","berry","bibtex","bicep","blade","c","cadence","clarity","clojure","cmake","cobol","codeql","coffee","cpp","crystal","csharp","css","cue","cypher","d","dart","dax","diff","docker","elixir","elm","erb","erlang","fish","fsharp","gdresource","gdscript","gdshader","gherkin","glsl","gnuplot","go","graphql","groovy","hack","haml","handlebars","haskell","hcl","hjson","hlsl","html","http","imba","ini","java","javascript","jison","json5","jsonc","jsonl","jsonnet","jssm","jsx","julia","kotlin","kusto","latex","less","liquid","lisp","logo","lua","make","markdown","marko","matlab","mdc","mdx","mermaid","mojo","narrat","nextflow","nginx","nim","nix","ocaml","pascal","perl","php","plsql","postcss","powerquery","powershell","prisma","prolog","proto","pug","puppet","purescript","python","r","raku","razor","reg","rel","riscv","rst","ruby","rust","sas","sass","scala","scheme","scss","shaderlab","shellscript","shellsession","smalltalk","solidity","sparql","splunk","sql","stata","stylus","svelte","swift","tasl","tcl","tex","toml","tsx","turtle","twig","typescript","vb","verilog","vhdl","viml","vue","vyper","wasm","wenyan","wgsl","wolfram","xml","xsl","yaml","zenscript","zig","bash","batch","be","cdc","clj","cmd","console","cql","cs","dockerfile","erl","fs","fsl","gjs","gts","hbs","hs","jade","js","kql","makefile","md","nar","nf","objc","perl6","properties","ps","ps1","py","ql","rb","rs","sh","shader","shell","spl","styl","ts","vim","vimscript","vy","yml","zsh","文言","SyntaxHighlighter","language","useHighlight","lang","isDarkMode","useThemeMode","toLowerCase","matchedLanguage","Md5","hashStr","useSWR","codeToHtml","error","whiteSpace","dir","CodeBlock","CodeHead","extra","paddingSM","background","display","overflow","textOverflow","ChatMessageContentBlock","renderCode","className","rest","match","exec","String","replace","border","borderRadius","borderRadiusLG","CopyButton","PreTag","oneLight","wrapLongLines","wrapLines","renderParagraph","_ref4","Markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","p","code","ChatMessageContent","_ref5","parseMarkdownIntoBlocks","marked","lexer","raw","index","ChatMessage","enableExtraHover","isHovered","setIsHovered","reasoning","contentType","textAlign","Image","src","url","alt","maxWidth","maxHeight","FileCard","uid","borderColor","borderWidth","lineWidth","backgroundColor","colorBgContainer","colorBgContainerDisabled","Collapse","marginTop","Spin","opacity","transition","transitionDelay","AssistantChatMessage","Compact","autoScroll","atBottom","onScrollToBottom","ArrowDownIcon","shape","ChatMessageRenders","user","assistant","system","virtuosoRef","setAtBottom","overscan","window","innerHeight","itemContent","RenderChatMessage","Virtuoso","atBottomStateChange","atBottomThreshold","computeItemKey","followOutput","initialTopMostItemIndex","position","transform","ScrollBottomHandlerButton","virtuoso","scrollToIndex","behavior","ChatMessageList","VirtualChatMessageList","ChatTokenCounter","PureChatTokenCounter","endpointId","endpoint_token_list","_EndpointTokenSelectQuery","isEmptyEndpointId","endpointTokenListData","_endpointTokenListDat","ok","dayjs","sortBy","valid_until","tz","isAfter","sortEndpointTokenList","target","_castArray$0$value","_castArray","castArray","CustomModelForm","baseURL","themeToken","formRef","origin","pathname","basePath","URL","parseBaseURL","paddingContentHorizontalLG","requiredMark","marginBottom","Alert","showIcon","addonBefore","defaultValue","EndpointTokenSelect","ReloadOutlined","_formRef$current$getF","_formRef$current","_formRef$current2","getFieldValue","useStyles","createStyles","chatCard","colorFillQuaternary","actions","paddingContentHorizontal","alert","useModels","provider","modelsResult","useSuspenseTanQuery","apiKey","port","path","trim","host","createModelsURL","authToken","res","headers","Authorization","status","_modelsResult$data$0$","_modelsResult$data","_modelsResult$data$","modelsError","getModelsErrorMessage","ChatHeader","PureChatHeader","ChatInput","React","PureChatInput","_agent$id","chat","onUpdateChat","fetchOnClient","onRequestClose","onCreateNewChat","appMessage","App","useApp","endpointResult","_ChatCardQuery","chatCardStyle","alertStyle","chatCardStyles","isPendingUpdate","startUpdateTransition","updateFetchKey","setStartTime","endpointUrl","createBaseURL","a","agentId","setMessages","useChat","api","credentials","experimental_throttle","init","_agent$config$system_","JSON","parse","createOpenAI","streamText","abortSignal","signal","model","wrapLanguageModel","middleware","extractReasoningMiddleware","tagName","config","system_prompt","toDataStreamResponse","sendReasoning","getErrorMessage","APICallError","isInstance","responseBody","Error","getAIErrorMessage","Card","variant","classNames","ChatMessages","chatView","skeleton","conversation","createNewChat","conversationId","Conversation","defaultChat","list","remove","push","useDynamicList","Suspense","fallback","ChatCard","newChatProperties","mergedChat","ChatPageStyle","ChatPage","useQueryParams","StringParam","defaultEndpointId","_endpoint_list$items$","_ChatPageQuery","useDefaultEndpointId","chats","BAICard"],"sourceRoot":""}