{"version":3,"file":"static/js/230.46e20d97.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","../node_modules/@ant-design/icons-svg/es/asn/WarningTwoTone.js","../node_modules/@ant-design/icons/es/icons/WarningTwoTone.js","components/ResetPasswordRequired.tsx","components/TOTPActivateModal.tsx","components/UserProfileSettingModal.tsx","components/__generated__/TOTPActivateModalFragment.graphql.ts","components/__generated__/UserProfileSettingModalQuery.graphql.ts","hooks/backendai.tsx"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  },\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === 'skipOnClient' &&\n      directive.argumentName === 'if'\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === 'true')\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, '');\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            '',\n          ),\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith('$') &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, 'g');\n        query = query.replace(pattern, '');\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || '',\n    variables,\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  const result =\n    //@ts-ignore\n    (await globalThis.backendaiclient\n      ?._wrapWithPromise(reqInfo, false, null, 10000, 0)\n      .catch((err: any) => {\n        // console.log(err);\n      })) || {};\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { App, ConfigProvider } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport localeData from 'dayjs/plugin/localeData';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport weekday from 'dayjs/plugin/weekday';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\n\ndayjs.extend(weekday);\ndayjs.extend(localeData);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (\n    path: string,\n    params?: {\n      [key in string]?: boolean | string | number;\n    },\n  ) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n    react: {\n      transSupportBasicHtmlNodes: true,\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'span', 'code', 'p'],\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // For changing locale globally, use dayjs.locale instead of dayjs().locale\n    dayjs.locale(lang);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n      // For changing locale globally, use dayjs.locale instead of dayjs().locale\n      dayjs.locale(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path, params) => {\n        dispatchEvent('moveTo', { path, params: params });\n      },\n    } as WebComponentContextType;\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return triggerNode?.parentNode || shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <App>\n                      <StyleProvider container={shadowRoot} cache={cache}>\n                        <Suspense fallback=\"\">\n                          <BrowserRouter>\n                            <QueryParamProvider\n                              adapter={ReactRouter6Adapter}\n                              options={\n                                {\n                                  // searchStringToObject: queryString.parse,\n                                  // objectToSearchString: queryString.stringify,\n                                }\n                              }\n                            >\n                              <RoutingEventHandler />\n                              {children}\n                            </QueryParamProvider>\n                          </BrowserRouter>\n                        </Suspense>\n                      </StyleProvider>\n                    </App>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","// This icon file is generated automatically.\nvar WarningTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M172.2 828.1h679.6L512 239.9 172.2 828.1zM560 720a48.01 48.01 0 01-96 0 48.01 48.01 0 0196 0zm-16-304v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z\", \"fill\": primaryColor } }] }; }, \"name\": \"warning\", \"theme\": \"twotone\" };\nexport default WarningTwoTone;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport WarningTwoToneSvg from \"@ant-design/icons-svg/es/asn/WarningTwoTone\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar WarningTwoTone = function WarningTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: WarningTwoToneSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  WarningTwoTone.displayName = 'WarningTwoTone';\n}\nexport default /*#__PURE__*/React.forwardRef(WarningTwoTone);","import { baiSignedRequestWithPromise } from '../helper';\nimport { useAnonymousBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport Flex from './Flex';\nimport { WarningTwoTone } from '@ant-design/icons';\nimport { Button, Form, Modal, Typography, Input, theme } from 'antd';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// src/components/backend-ai-common-utils.ts\nexport const passwordPattern = /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[_\\W]).{8,}$/;\n\nconst ResetPasswordRequired = () => {\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    currentPassword: string;\n    username: string;\n    api_endpoint: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      currentPassword: '',\n      username: '',\n      api_endpoint: '',\n    };\n  }\n  const { open, currentPassword, username, api_endpoint } = parsedValue;\n\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<{\n    newPassword: string;\n    confirm: string;\n  }>();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (open) {\n      form.resetFields();\n    }\n  }, [open, form]);\n\n  const anonymousBaiClient = useAnonymousBackendaiClient({ api_endpoint });\n\n  const mutation = useTanMutation({\n    mutationFn: (body: {\n      username: string;\n      current_password: string;\n      new_password: string;\n    }) => {\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: '/server/update-password-no-auth',\n        body,\n        client: anonymousBaiClient,\n      });\n    },\n  });\n\n  const onSubmit = () => {\n    form.validateFields().then((values) => {\n      mutation.mutate(\n        {\n          username: username,\n          current_password: currentPassword,\n          new_password: values.newPassword,\n        },\n        {\n          onSuccess(data, variables, context) {\n            dispatchEvent('ok', null);\n          },\n          onError(error, variables, context) {},\n        },\n      );\n    });\n  };\n\n  return (\n    <Modal\n      open={open}\n      centered\n      mask={false}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      keyboard={false}\n      maskClosable={false}\n      footer={null}\n      width={450}\n      destroyOnClose={true}\n      forceRender\n    >\n      <Flex\n        direction=\"column\"\n        justify=\"start\"\n        align=\"stretch\"\n        gap={'md'}\n        style={{\n          alignSelf: 'stretch',\n          paddingTop: token.paddingMD,\n          paddingBottom: token.paddingMD,\n        }}\n      >\n        <Typography.Title level={3} style={{ margin: 0 }}>\n          <WarningTwoTone twoToneColor={token.colorWarning} />{' '}\n          {t('webui.menu.PleaseChangeYourPassword')}\n        </Typography.Title>\n        {t('webui.menu.YouMushChangeYourPassword')}\n        <Form\n          form={form}\n          layout=\"vertical\"\n          initialValues={{\n            currentPassword: currentPassword,\n          }}\n          disabled={mutation.isLoading}\n        >\n          <Form.Item\n            name=\"newPassword\"\n            label={t('webui.menu.NewPassword')}\n            rules={[\n              {\n                required: true,\n              },\n              {\n                pattern: passwordPattern,\n                message: t('webui.menu.InvalidPasswordMessage').toString(),\n              },\n              () => ({\n                validator(_, value) {\n                  if (currentPassword === value) {\n                    return Promise.reject(\n                      new Error(\n                        t('webui.menu.NewPasswordCannotBeSame').toString(),\n                      ),\n                    );\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm\"\n            label={t('webui.menu.NewPasswordAgain')}\n            dependencies={['newPassword']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('newPassword') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(t('environment.PasswordsDoNotMatch').toString()),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password onPressEnter={onSubmit} />\n          </Form.Item>\n        </Form>\n        <Button type=\"primary\" onClick={onSubmit} loading={mutation.isLoading}>\n          {t('webui.menu.Update')}\n        </Button>\n      </Flex>\n    </Modal>\n  );\n};\n\nexport default ResetPasswordRequired;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { TOTPActivateModalFragment$key } from './__generated__/TOTPActivateModalFragment.graphql';\nimport { QRCode, Typography, Input, theme, Form, message, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useFragment } from 'react-relay';\n\ntype TOTPActivateFormInput = {\n  otp: number;\n};\n\ninterface Props extends BAIModalProps {\n  userFrgmt?: TOTPActivateModalFragment$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst TOTPActivateModal: React.FC<Props> = ({\n  userFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<TOTPActivateFormInput>();\n\n  const user = useFragment(\n    graphql`\n      fragment TOTPActivateModalFragment on User {\n        email\n        totp_activated @skipOnClient(if: $isNotSupportTotp)\n      }\n    `,\n    userFrgmt,\n  );\n\n  const baiClient = useSuspendedBackendaiClient();\n  let initializedTotp = useQuery<{\n    totp_key: string;\n    totp_uri: string;\n  }>({\n    queryKey: ['initialize_totp', baiClient?.email, baiModalProps.open],\n    queryFn: () => {\n      return user?.email === baiClient?.email &&\n        !user?.totp_activated &&\n        baiModalProps.open\n        ? baiClient.initialize_totp()\n        : null;\n    },\n    suspense: false,\n    staleTime: 0,\n    cacheTime: 0,\n  });\n\n  const mutationToActivateTotp = useTanMutation({\n    mutationFn: (values: TOTPActivateFormInput) => {\n      return baiClient.activate_totp(values.otp);\n    },\n  });\n\n  const _onOk = () => {\n    form.validateFields().then((values) => {\n      mutationToActivateTotp.mutate(values, {\n        onSuccess: () => {\n          message.success(t('totp.TotpSetupCompleted'));\n          onRequestClose(true);\n        },\n        onError: () => {\n          message.error(t('totp.InvalidTotpCode'));\n        },\n      });\n      new Promise((resolve, reject) => {}).then(() => {\n        onRequestClose(true);\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      title={t('webui.menu.SetupTotp')}\n      maskClosable={false}\n      confirmLoading={mutationToActivateTotp.isLoading}\n      onOk={_onOk}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      style={{ zIndex: 1 }}\n      {...baiModalProps}\n    >\n      {initializedTotp.isLoading ? (\n        <Flex justify=\"center\" direction=\"row\">\n          <Spin />\n        </Flex>\n      ) : !initializedTotp.data ? (\n        <Flex justify=\"center\" direction=\"row\">\n          {t('totp.TotpSetupNotAvailable')}\n        </Flex>\n      ) : (\n        <Form\n          preserve={false}\n          form={form}\n          validateTrigger={['onChange', 'onBlur']}\n        >\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <QRCode value={initializedTotp.data.totp_uri} />\n          </Flex>\n          {t('totp.ScanQRToEnable')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Typography.Text copyable code>\n              {initializedTotp.data.totp_key}\n            </Typography.Text>\n          </Flex>\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Form.Item required name=\"otp\">\n              <Input\n                maxLength={6}\n                allowClear\n                placeholder=\"000000\"\n                style={{ maxWidth: 120 }}\n              />\n            </Form.Item>\n          </Flex>\n        </Form>\n      )}\n    </BAIModal>\n  );\n};\n\nexport default TOTPActivateModal;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanQuery, useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal from './BAIModal';\nimport { passwordPattern } from './ResetPasswordRequired';\nimport TOTPActivateModal from './TOTPActivateModal';\n// @ts-ignore\nimport customCSS from './UserProfileSettingModal.css?raw';\nimport { UserProfileSettingModalQuery } from './__generated__/UserProfileSettingModalQuery.graphql';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { Modal, ModalProps, Input, Form, Select, message, Switch } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends ModalProps {\n  onRequestClose: (success?: boolean) => void;\n}\n\ntype UserProfileFormValues = {\n  full_name: string;\n  originalPassword?: string;\n  newPasswordConfirm?: string;\n  newPassword?: string;\n  access_key?: string;\n  secret_key?: string;\n  totp_activated: boolean;\n};\n\nconst UserProfileSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm<UserProfileFormValues>();\n  const [messageApi, contextHolder] = message.useMessage();\n  const [modal, modalContextHolder] = Modal.useModal();\n  const [isOpenTOTPActivateModal, { toggle: toggleTOTPActivateModal }] =\n    useToggle(false);\n  const baiClient = useSuspendedBackendaiClient();\n\n  const { data: isManagerSupportingTOTP } = useTanQuery(\n    'isManagerSupportingTOTP',\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      suspense: true,\n    },\n  );\n  const totpSupported = baiClient.supports('2FA') && isManagerSupportingTOTP;\n\n  const [userInfo, userMutations] = useCurrentUserInfo();\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const deferredMergedFetchKey = useDeferredValue(fetchKey);\n\n  const { user } = useLazyLoadQuery<UserProfileSettingModalQuery>(\n    graphql`\n      query UserProfileSettingModalQuery(\n        $email: String!\n        $isNotSupportTotp: Boolean!\n      ) {\n        user(email: $email) {\n          id\n          totp_activated @skipOnClient(if: $isNotSupportTotp)\n          ...TOTPActivateModalFragment\n        }\n      }\n    `,\n    {\n      email: userInfo.email,\n      isNotSupportTotp: !totpSupported,\n    },\n    {\n      fetchPolicy: 'network-only',\n      fetchKey: deferredMergedFetchKey,\n    },\n  );\n\n  const { data: keyPairs } = useTanQuery<\n    {\n      secret_key: string;\n      access_key: string;\n    }[]\n  >(\n    'baiClient.keypair.list',\n    () => {\n      return baiClient.keypair\n        .list(userInfo.email, ['access_key', 'secret_key'], true)\n        .then((res: any) => res.keypairs);\n    },\n    {\n      suspense: true,\n    },\n  );\n\n  const mutationToRemoveTotp = useTanMutation({\n    mutationFn: () => {\n      return baiClient.remove_totp();\n    },\n  });\n\n  const onSubmit = () => {\n    form.validateFields().then((values) => {\n      userMutations.updateFullName(values.full_name, {\n        onSuccess: (newFullName) => {\n          if (newFullName !== userInfo.full_name) {\n            messageApi.open({\n              type: 'success',\n              content: t('webui.menu.FullnameUpdated'),\n            });\n          }\n\n          if (\n            values.newPassword &&\n            values.newPasswordConfirm &&\n            values.originalPassword\n          ) {\n            userMutations.updatePassword(\n              {\n                new_password: values.newPassword,\n                new_password2: values.newPasswordConfirm,\n                old_password: values.originalPassword,\n              },\n              {\n                onSuccess: () => {\n                  messageApi.open({\n                    type: 'success',\n                    content: t('webui.menu.PasswordUpdated'),\n                  });\n                  onRequestClose(true);\n                },\n                onError: (e) => {\n                  messageApi.open({\n                    type: 'error',\n                    content: e.message,\n                  });\n                },\n              },\n            );\n          } else {\n            onRequestClose(true);\n          }\n        },\n        onError: (e) => {\n          messageApi.open({\n            type: 'error',\n            content: e.message,\n          });\n        },\n      });\n    });\n  };\n\n  return (\n    <>\n      <style>{customCSS}</style>\n      <BAIModal\n        {...baiModalProps}\n        okText={t('webui.menu.Update')}\n        cancelText={t('webui.menu.Cancel')}\n        onCancel={() => {\n          onRequestClose();\n        }}\n        confirmLoading={userInfo.isPendingMutation}\n        onOk={() => onSubmit()}\n        centered\n        destroyOnClose\n        title={t('webui.menu.MyAccountInformation')}\n      >\n        <Form\n          layout=\"horizontal\"\n          labelCol={{ span: 8 }}\n          form={form}\n          initialValues={{\n            full_name: userInfo.full_name,\n            totp_activated: user?.totp_activated || false,\n            access_key: keyPairs?.[0].access_key,\n          }}\n          preserve={false}\n        >\n          <Form.Item\n            name=\"full_name\"\n            label={t('webui.menu.FullName')}\n            rules={[\n              () => ({\n                validator(_, value) {\n                  if (value && value.length < 65) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(t('webui.menu.FullNameInvalid')),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item name=\"access_key\" label={t('general.AccessKey')}>\n            <Select\n              options={_.map(keyPairs, (keyPair) => ({\n                value: keyPair.access_key,\n              }))}\n              // onSelect={onSelectAccessKey}\n            ></Select>\n          </Form.Item>\n          <Form.Item\n            label={t('general.SecretKey')}\n            shouldUpdate={(prev, next) => prev.access_key !== next.access_key}\n          >\n            {({ getFieldValue }) => (\n              <Input.Password\n                value={\n                  _.find(keyPairs, ['access_key', getFieldValue('access_key')])\n                    ?.secret_key\n                }\n                className=\"disabled_style_readonly\"\n                readOnly\n              />\n            )}\n          </Form.Item>\n          <Form.Item\n            name=\"originalPassword\"\n            label={t('webui.menu.OriginalPassword')}\n            rules={[\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (\n                    !value &&\n                    (getFieldValue('newPassword') ||\n                      getFieldValue('newPasswordConfirm'))\n                  ) {\n                    return Promise.reject(\n                      new Error(t('webui.menu.InputOriginalPassword')),\n                    );\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n            dependencies={['newPassword', 'newPasswordConfirm']}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            name=\"newPassword\"\n            label={t('webui.menu.NewPassword')}\n            rules={[\n              {\n                pattern: passwordPattern,\n                message: t('webui.menu.InvalidPasswordMessage'),\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            name=\"newPasswordConfirm\"\n            label={t('webui.menu.NewPasswordAgain')}\n            dependencies={['newPassword']}\n            rules={[\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('newPassword') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(t('webui.menu.NewPasswordMismatch')),\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          {!!totpSupported && (\n            <Form.Item\n              name=\"totp_activated\"\n              label={t('webui.menu.TotpActivated')}\n              valuePropName=\"checked\"\n            >\n              <Switch\n                onChange={(checked: boolean) => {\n                  if (checked) {\n                    toggleTOTPActivateModal();\n                  } else {\n                    if (user?.totp_activated) {\n                      form.setFieldValue('totp_activated', true);\n                      modal.confirm({\n                        title: t('totp.TurnOffTotp'),\n                        icon: <ExclamationCircleFilled />,\n                        content: t('totp.ConfirmTotpRemovalBody'),\n                        okText: t('button.Yes'),\n                        okType: 'danger',\n                        cancelText: t('button.No'),\n                        onOk() {\n                          mutationToRemoveTotp.mutate(undefined, {\n                            onSuccess: () => {\n                              message.success(\n                                t('totp.RemoveTotpSetupCompleted'),\n                              );\n                              updateFetchKey();\n                              form.setFieldValue('totp_activated', false);\n                            },\n                            onError: (error: any) => {\n                              message.error(error.message);\n                            },\n                          });\n                        },\n                        onCancel() {\n                          form.setFieldValue('totp_activated', true);\n                        },\n                      });\n                    }\n                  }\n                }}\n              />\n            </Form.Item>\n          )}\n        </Form>\n        {!!totpSupported && (\n          <TOTPActivateModal\n            userFrgmt={user}\n            open={isOpenTOTPActivateModal}\n            onRequestClose={(success) => {\n              if (success) {\n                updateFetchKey();\n              } else {\n                form.setFieldValue('totp_activated', false);\n              }\n              toggleTOTPActivateModal();\n            }}\n          />\n        )}\n      </BAIModal>\n      {contextHolder}\n      {modalContextHolder}\n    </>\n  );\n};\n\nexport default UserProfileSettingModal;\n","/**\n * @generated SignedSource<<84ef114f996ea8a63ee4526fc5d27953>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type TOTPActivateModalFragment$data = {\n  readonly email: string | null;\n  readonly totp_activated: boolean | null;\n  readonly \" $fragmentType\": \"TOTPActivateModalFragment\";\n};\nexport type TOTPActivateModalFragment$key = {\n  readonly \" $data\"?: TOTPActivateModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"isNotSupportTotp\"\n    }\n  ],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"TOTPActivateModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"User\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f5da6b3094f7d70bef9373d9c907955c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2c0e08c01e860fb4e78a264e42a1eeb1>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserProfileSettingModalQuery$variables = {\n  email: string;\n  isNotSupportTotp: boolean;\n};\nexport type UserProfileSettingModalQuery$data = {\n  readonly user: {\n    readonly id: string | null;\n    readonly totp_activated: boolean | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n  } | null;\n};\nexport type UserProfileSettingModalQuery = {\n  response: UserProfileSettingModalQuery$data;\n  variables: UserProfileSettingModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportTotp\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserProfileSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"TOTPActivateModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserProfileSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"email\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b0c9773ff4a3e759f0f9822463daa757\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserProfileSettingModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserProfileSettingModalQuery(\\n  $email: String!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  user(email: $email) {\\n    id\\n    totp_activated @skipOnClient(if: $isNotSupportTotp)\\n    ...TOTPActivateModalFragment\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c87e74dfaa01d51a1697e67df81e101b\";\n\nexport default node;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '.';\nimport { maskString } from '../helper';\nimport { useTanMutation, useTanQuery } from './reactQueryAlias';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\n\nexport interface QuotaScope {\n  id: string;\n  quota_scope_id: string;\n  storage_host_name: string;\n  details: {\n    hard_limit_bytes: number | null;\n    usage_bytes: number | null;\n    usage_count: number | null;\n  };\n}\n\nexport const useResourceSlots = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n  // const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const baiClient = useSuspendedBackendaiClient();\n  const { data: resourceSlots } = useTanQuery<{\n    cpu?: string;\n    mem?: string;\n    'cuda.shares'?: string;\n    'cuda.device'?: string;\n  }>({\n    queryKey: ['useResourceSlots', key],\n    queryFn: () => {\n      return baiClient.get_resource_slots();\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n\ninterface UserInfo {\n  full_name: string;\n  email: string;\n}\n\ntype mutationOptions<T> = {\n  onSuccess?: (value: T) => void;\n  onError?: (error: any) => void;\n};\n\nexport const useCurrentUserInfo = () => {\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [userInfo, _setUserInfo] = useState<UserInfo>({\n    full_name: baiClient.full_name,\n    email: baiClient.email,\n  });\n\n  const getUsername = () => {\n    let name: string =\n      _.trim(userInfo.full_name).length > 0\n        ? userInfo.full_name\n        : userInfo.email;\n    // mask username only when the configuration is enabled\n    if (baiClient._config.maskUserInfo) {\n      const maskStartIdx = 2;\n      const emailPattern =\n        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      const isEmail: boolean = emailPattern.test(name);\n      const maskLength = isEmail\n        ? name.split('@')[0].length - maskStartIdx\n        : name.length - maskStartIdx;\n      name = maskString(name, '*', maskStartIdx, maskLength);\n    }\n    return name;\n  };\n\n  useEffect(() => {\n    const handler = (e: any) => {\n      if (baiClient.supports('change-user-name')) {\n        const input = e.detail;\n        _setUserInfo((v) => ({\n          ...v,\n          full_name: input,\n        }));\n      }\n    };\n    document.addEventListener('current-user-info-changed', handler);\n    return () => {\n      document.removeEventListener('current-user-info-changed', handler);\n    };\n  }, [baiClient]);\n\n  const mutationToUpdateUserFullName = useTanMutation({\n    mutationFn: (values: { email: string; full_name: string }) => {\n      return baiClient.update_full_name(values.email, values.full_name);\n    },\n  });\n  const mutationToUpdateUserPassword = useTanMutation({\n    mutationFn: (values: {\n      old_password: string;\n      new_password: string;\n      new_password2: string;\n    }) => {\n      return baiClient.update_password(\n        values.old_password,\n        values.new_password,\n        values.new_password2,\n      );\n    },\n  });\n\n  return [\n    {\n      ...userInfo,\n      username: getUsername(),\n      isPendingMutation:\n        mutationToUpdateUserFullName.isLoading ||\n        mutationToUpdateUserPassword.isLoading,\n    },\n    {\n      updateFullName: (\n        newFullName: string,\n        options?: mutationOptions<string>,\n      ) => {\n        mutationToUpdateUserFullName.mutate(\n          {\n            full_name: newFullName,\n            email: baiClient.email,\n          },\n          {\n            onSuccess: () => {\n              options?.onSuccess && options.onSuccess(newFullName);\n              document.dispatchEvent(\n                new CustomEvent('current-user-info-changed', {\n                  detail: newFullName,\n                }),\n              );\n              _setUserInfo((v) => ({\n                ...v,\n                full_name: newFullName,\n              }));\n            },\n            onError: (error: any) => {\n              options?.onError && options.onError(error);\n            },\n          },\n        );\n      },\n      updatePassword: (\n        params: {\n          old_password: string;\n          new_password: string;\n          new_password2: string;\n        },\n        options?: mutationOptions<undefined>,\n      ) => {\n        mutationToUpdateUserPassword.mutate(params, {\n          onSuccess: () => {\n            options?.onSuccess && options.onSuccess(undefined);\n          },\n          onError: (error: any) => {\n            options?.onError && options.onError(error);\n          },\n        });\n      },\n    },\n  ] as const;\n};\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","removeSkipOnClientDirective","query","variables","filteredVariables","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","text","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","catch","err","t0","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","dayjs","weekday","localeData","localizedFormat","relativeTime","utc","timezone","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","react","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","document","addEventListener","removeEventListener","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","params","RelayEnvironmentProvider","environment","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","App","StyleProvider","container","Suspense","fallback","BrowserRouter","QueryParamProvider","adapter","ReactRouter6Adapter","options","primaryColor","secondaryColor","WarningTwoTone","props","ref","AntdIcon","_extends","icon","WarningTwoToneSvg","passwordPattern","parsedValue","_useWebComponentInfo","JSON","parse","error","open","currentPassword","username","api_endpoint","_parsedValue","token","useToken","_Form$useForm","Form","useForm","form","t","resetFields","anonymousBaiClient","useAnonymousBackendaiClient","mutation","useTanMutation","mutationFn","body","baiSignedRequestWithPromise","method","url","onSubmit","validateFields","then","values","mutate","current_password","new_password","newPassword","onSuccess","data","context","onError","mask","onCancel","keyboard","maskClosable","footer","width","destroyOnClose","forceRender","Flex","direction","justify","align","gap","style","alignSelf","paddingTop","paddingMD","paddingBottom","Typography","Title","level","margin","twoToneColor","colorWarning","layout","initialValues","disabled","isLoading","Item","name","label","rules","required","message","toString","validator","_","Promise","reject","Error","resolve","hasFeedback","Input","Password","dependencies","getFieldValue","onPressEnter","Button","type","onClick","loading","_ref$userFrgmt","userFrgmt","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","user","useFragment","_TOTPActivateModalFragment","require","baiClient","useSuspendedBackendaiClient","initializedTotp","useQuery","queryKey","email","queryFn","totp_activated","initialize_totp","staleTime","cacheTime","mutationToActivateTotp","activate_totp","otp","BAIModal","title","confirmLoading","onOk","success","zIndex","Spin","preserve","validateTrigger","marginSM","QRCode","totp_uri","Text","copyable","code","totp_key","maxLength","allowClear","placeholder","maxWidth","_message$useMessage","useMessage","_message$useMessage2","messageApi","contextHolder","_Modal$useModal","useModal","_Modal$useModal2","modal","modalContextHolder","_useToggle","useToggle","_useToggle2","isOpenTOTPActivateModal","toggleTOTPActivateModal","toggle","isManagerSupportingTOTP","useTanQuery","totpSupported","supports","_useCurrentUserInfo","useCurrentUserInfo","_useCurrentUserInfo2","userInfo","userMutations","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","deferredMergedFetchKey","useDeferredValue","useLazyLoadQuery","_UserProfileSettingModalQuery","isNotSupportTotp","fetchPolicy","keyPairs","keypair","list","res","keypairs","mutationToRemoveTotp","remove_totp","okText","cancelText","isPendingMutation","updateFullName","full_name","newFullName","content","newPasswordConfirm","originalPassword","updatePassword","new_password2","old_password","labelCol","span","access_key","Select","keyPair","shouldUpdate","_ref2","_$find","secret_key","readOnly","_ref3","_ref4","valuePropName","Switch","onChange","checked","setFieldValue","confirm","ExclamationCircleFilled","okType","undefined","TOTPActivateModal","node","v0","v1","v2","v3","hash","useResourceSlots","key","checkUpdate","get_resource_slots","refresh","_setUserInfo","input","v","mutationToUpdateUserFullName","update_full_name","mutationToUpdateUserPassword","update_password","_config","maskUserInfo","maskLength","test","maskString","getUsername","CustomEvent"],"sourceRoot":""}