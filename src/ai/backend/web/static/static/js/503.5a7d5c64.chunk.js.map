{"version":3,"file":"static/js/503.5a7d5c64.chunk.js","mappings":"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","sources":["components/DoubleTag.tsx","components/ImageMetaIcon.tsx","components/SessionListColums/__generated__/SessionInfoCellFragment.graphql.ts","components/__generated__/SessionListQuery.graphql.ts","components/SessionListColums/SessionInfoCell.tsx","../node_modules/@ant-design/icons-svg/es/asn/GroupOutlined.js","../node_modules/@ant-design/icons/es/icons/GroupOutlined.js","components/SessionList.tsx","../node_modules/@ant-design/icons-svg/es/asn/ThunderboltTwoTone.js","../node_modules/@ant-design/icons/es/icons/ThunderboltTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/PoweroffOutlined.js","../node_modules/@ant-design/icons/es/icons/PoweroffOutlined.js","pages/SessionListPage.tsx"],"sourcesContent":["import Flex from './Flex';\nimport { Tag } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\nexport type DoubleTagObjectValue = {\n  label: ValueType;\n  color?: string;\n};\n\ntype ValueType = string | React.ReactNode;\nconst DoubleTag: React.FC<{\n  values?: ValueType[] | DoubleTagObjectValue[];\n}> = ({ values = [] }) => {\n  if (values.length === 0) return null;\n  let objectValues: DoubleTagObjectValue[];\n  if (\n    values[0] &&\n    (typeof values[0] === 'string' || React.isValidElement(values[0]))\n  ) {\n    objectValues = values.map(\n      (value) =>\n        ({\n          label: value,\n          color: 'blue',\n        }) as DoubleTagObjectValue,\n    );\n  } else {\n    objectValues = values as DoubleTagObjectValue[];\n  }\n\n  return (\n    <Flex direction=\"row\">\n      {_.map(objectValues, (objValue, idx) => {\n        return (\n          <Tag\n            key={idx}\n            style={\n              _.last(objectValues) === objValue\n                ? undefined\n                : { margin: 0, marginRight: -1 }\n            }\n            color={objValue.color}\n          >\n            {objValue.label}\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default DoubleTag;\n","import { useBackendAIImageMetaData } from '../hooks';\nimport React from 'react';\n\nconst ImageMetaIcon: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n  alt?: string | null;\n}> = ({ image, style = {} }, bordered, alt = '') => {\n  const [, { getImageIcon }] = useBackendAIImageMetaData();\n\n  return (\n    <img\n      src={getImageIcon(image)}\n      style={{\n        width: '1em',\n        height: '1em',\n        ...style,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nexport default React.memo(ImageMetaIcon);\n","/**\n * @generated SignedSource<<936640a1ef059e696b33a2390463d2b3>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionInfoCellFragment$data = {\n  readonly id: string | null;\n  readonly image: string | null;\n  readonly name: string | null;\n  readonly session_id: string | null;\n  readonly status: string | null;\n  readonly user_email: string | null;\n  readonly \" $fragmentType\": \"SessionInfoCellFragment\";\n};\nexport type SessionInfoCellFragment$key = {\n  readonly \" $data\"?: SessionInfoCellFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionInfoCellFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionInfoCellFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"image\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSession\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"93f8cd0d4b47d24ea281955be0ad792b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<d7f82dfab5990afa14f51ad0ef895eb8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionListQuery$variables = {\n  ak?: string | null;\n  group_id?: string | null;\n  limit: number;\n  offset: number;\n  skipClusterSize: boolean;\n  status?: string | null;\n};\nexport type SessionListQuery$data = {\n  readonly compute_session_list: {\n    readonly items: ReadonlyArray<{\n      readonly access_key: string | null;\n      readonly agents: ReadonlyArray<string | null> | null;\n      readonly architecture: string | null;\n      readonly cluster_size: number | null;\n      readonly created_at: string | null;\n      readonly id: string | null;\n      readonly image: string | null;\n      readonly mounts: ReadonlyArray<string | null> | null;\n      readonly name: string | null;\n      readonly occupied_slots: any | null;\n      readonly resource_opts: any | null;\n      readonly scaling_group: string | null;\n      readonly service_ports: any | null;\n      readonly session_id: string | null;\n      readonly starts_at: string | null;\n      readonly status: string | null;\n      readonly status_info: string | null;\n      readonly terminated_at: string | null;\n      readonly type: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"SessionInfoCellFragment\">;\n    } | null>;\n  } | null;\n};\nexport type SessionListQuery = {\n  response: SessionListQuery$data;\n  variables: SessionListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"ak\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"group_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipClusterSize\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"status\"\n},\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"access_key\",\n    \"variableName\": \"ak\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"group_id\",\n    \"variableName\": \"group_id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"status\",\n    \"variableName\": \"status\"\n  }\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"type\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session_id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"architecture\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"terminated_at\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status_info\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"service_ports\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"mounts\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"occupied_slots\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_opts\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"access_key\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"starts_at\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"scaling_group\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"agents\",\n  \"storageKey\": null\n},\nv25 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"cluster_size\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"SessionListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"ComputeSessionList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ComputeSession\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/),\n              (v21/*: any*/),\n              (v22/*: any*/),\n              (v23/*: any*/),\n              (v24/*: any*/),\n              (v25/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"SessionInfoCellFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v5/*: any*/),\n      (v4/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"SessionListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"ComputeSessionList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ComputeSession\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/),\n              (v21/*: any*/),\n              (v22/*: any*/),\n              (v23/*: any*/),\n              (v24/*: any*/),\n              (v25/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"user_email\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"83e3fabcd47538a643850d50617579a5\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"SessionListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query SessionListQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $ak: String\\n  $group_id: String\\n  $status: String\\n  $skipClusterSize: Boolean!\\n) {\\n  compute_session_list(limit: $limit, offset: $offset, access_key: $ak, group_id: $group_id, status: $status) {\\n    items {\\n      id\\n      type\\n      session_id\\n      name\\n      image\\n      architecture\\n      created_at\\n      terminated_at\\n      status\\n      status_info\\n      service_ports\\n      mounts\\n      occupied_slots\\n      resource_opts\\n      access_key\\n      starts_at\\n      scaling_group\\n      agents\\n      cluster_size @skipOnClient(if: $skipClusterSize)\\n      ...SessionInfoCellFragment\\n    }\\n  }\\n}\\n\\nfragment SessionInfoCellFragment on ComputeSession {\\n  id\\n  session_id\\n  name\\n  status\\n  user_email\\n  image\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b0859dbf2946abcb56ec83ac42d76781\";\n\nexport default node;\n","import {\n  // useBackendaiImageMetaData,\n  useSuspendedBackendaiClient,\n} from '../../hooks';\nimport { useTanMutation } from '../../hooks/reactQueryAlias';\nimport Flex from '../Flex';\nimport { SessionInfoCellFragment$key } from './__generated__/SessionInfoCellFragment.graphql';\nimport { EditOutlined } from '@ant-design/icons';\nimport { Button, Form, FormInstance, Input, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst isRunningStatus = (status: string = '') => {\n  return [\n    'RUNNING',\n    'RESTARTING',\n    'TERMINATING',\n    'PENDING',\n    'SCHEDULED',\n    'PREPARING',\n    'PULLING',\n  ].includes(status);\n};\n\nconst isPreparing = (status: string = '') => {\n  return ['RESTARTING', 'PREPARING', 'PULLING'].includes(status);\n};\n\nconst SessionInfoCell: React.FC<{\n  sessionFrgmt: SessionInfoCellFragment$key;\n  sessionNameList: string[];\n  onRename?: () => void;\n}> = ({ sessionFrgmt, sessionNameList, onRename }) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const session = useFragment(\n    graphql`\n      fragment SessionInfoCellFragment on ComputeSession {\n        id\n        session_id\n        name\n        status\n        user_email\n        image\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  // const metadata = useBackendaiImageMetaData();\n\n  const mutation = useTanMutation({\n    mutationFn: (newName: string) => {\n      const sessionId =\n        baiClient.APIMajorVersion < 5 ? session.name : session.session_id;\n      return baiClient.rename(sessionId, newName);\n    },\n  });\n\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n\n  const [editing, setEditing] = useState(false);\n  const [optimisticName, setOptimisticName] = useState(session.name);\n  const editable =\n    isRunningStatus(session.status || undefined) &&\n    !isPreparing(session.status || undefined) &&\n    baiClient.email === session.user_email;\n\n  const save = () => {\n    formRef.current\n      ?.validateFields()\n      .then(({ name }) => {\n        setEditing(false);\n        setOptimisticName(name);\n        mutation.mutate(name, {\n          onSuccess: (result) => {\n            onRename && onRename();\n          },\n          onError: (error) => {\n            setOptimisticName(session.name);\n          },\n        });\n      })\n      .catch(() => {});\n  };\n\n  const isPendingRename = mutation.isLoading || optimisticName !== session.name;\n\n  // sessions[objectKey].icon = this._getKernelIcon(session.image);\n  //         sessions[objectKey].sessionTags = this._getKernelInfo(session.image);\n  return (\n    <Form ref={formRef}>\n      {editing ? (\n        <Form.Item\n          style={{ margin: 0 }}\n          name={'name'}\n          rules={[\n            {\n              required: true,\n            },\n            {\n              max: 64,\n            },\n            {\n              pattern: /^(?:[a-zA-Z0-9][-a-zA-Z0-9._]{2,}[a-zA-Z0-9])?$/,\n              message: t('session.Validation.EnterValidSessionName'),\n            },\n            () => ({\n              validator(_, value) {\n                if (sessionNameList.includes(String(value))) {\n                  return Promise.reject(\n                    new Error(t('session.Validation.SessionNameAlreadyExist')),\n                  );\n                }\n                return Promise.resolve();\n              },\n            }),\n          ]}\n        >\n          <Input\n            autoFocus\n            onPressEnter={() => save()}\n            onKeyUp={(e) => {\n              if (e.key === 'Escape') setEditing(false);\n            }}\n          />\n        </Form.Item>\n      ) : (\n        <Flex style={{ maxWidth: 250 }}>\n          <Typography.Text\n            ellipsis={{\n              tooltip: { overlayInnerStyle: { width: 'max-content' } },\n            }}\n            style={{ opacity: isPendingRename ? 0.5 : 1 }}\n          >\n            {optimisticName}\n          </Typography.Text>\n          {editable && (\n            <Button\n              loading={isPendingRename}\n              type=\"text\"\n              icon={<EditOutlined />}\n              style={{ color: token.colorLink }}\n              onClick={() => {\n                formRef.current?.setFieldsValue({\n                  name: session.name,\n                });\n                setEditing(true);\n              }}\n            ></Button>\n          )}\n        </Flex>\n      )}\n    </Form>\n  );\n};\n\nexport default SessionInfoCell;\n","// This icon file is generated automatically.\nvar GroupOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M912 820.1V203.9c28-9.9 48-36.6 48-67.9 0-39.8-32.2-72-72-72-31.3 0-58 20-67.9 48H203.9C194 84 167.3 64 136 64c-39.8 0-72 32.2-72 72 0 31.3 20 58 48 67.9v616.2C84 830 64 856.7 64 888c0 39.8 32.2 72 72 72 31.3 0 58-20 67.9-48h616.2c9.9 28 36.6 48 67.9 48 39.8 0 72-32.2 72-72 0-31.3-20-58-48-67.9zM888 112c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zM136 912c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-752c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm704 680H184V184h656v656zm48 72c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M288 474h448c8.8 0 16-7.2 16-16V282c0-8.8-7.2-16-16-16H288c-8.8 0-16 7.2-16 16v176c0 8.8 7.2 16 16 16zm56-136h336v64H344v-64zm-56 420h448c8.8 0 16-7.2 16-16V566c0-8.8-7.2-16-16-16H288c-8.8 0-16 7.2-16 16v176c0 8.8 7.2 16 16 16zm56-136h336v64H344v-64z\" } }] }, \"name\": \"group\", \"theme\": \"outlined\" };\nexport default GroupOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport GroupOutlinedSvg from \"@ant-design/icons-svg/es/asn/GroupOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar GroupOutlined = function GroupOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: GroupOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  GroupOutlined.displayName = 'GroupOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(GroupOutlined);","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useBackendAIImageMetaData } from '../hooks';\nimport DoubleTag from './DoubleTag';\nimport Flex from './Flex';\nimport ImageMetaIcon from './ImageMetaIcon';\nimport ResourceNumber from './ResourceNumber';\nimport SessionInfoCell from './SessionListColums/SessionInfoCell';\nimport { SessionListQuery } from './__generated__/SessionListQuery.graphql';\nimport { FolderOutlined, GroupOutlined } from '@ant-design/icons';\nimport { Table, TableProps, Tag, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ntype Session = NonNullable<\n  SessionListQuery['response']['compute_session_list']\n>['items'][0];\ninterface SessionListProps extends Omit<TableProps<any>, 'dataSource'> {\n  status?: string[];\n  limit?: number;\n  currentPage?: number;\n  pageSize?: number;\n  projectId?: string;\n  filter: (item: Session) => boolean;\n  extraFetchKey?: string;\n}\n\nconst SessionList: React.FC<SessionListProps> = ({\n  status = [],\n  limit = 50,\n  currentPage = 1,\n  pageSize = 50,\n  projectId,\n  filter,\n  extraFetchKey = '',\n  ...tableProps\n}) => {\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const deferredMergedFetchKey = useDeferredValue(fetchKey + extraFetchKey);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [, { getImageAliasName, getBaseVersion, getBaseImage }] =\n    useBackendAIImageMetaData();\n\n  if (\n    !baiClient.supports('avoid-hol-blocking') &&\n    status.includes('SCHEDULED')\n  ) {\n    status = status.filter((e) => e !== 'SCHEDULED');\n  }\n\n  const { compute_session_list } = useLazyLoadQuery<SessionListQuery>(\n    graphql`\n      query SessionListQuery(\n        $limit: Int!\n        $offset: Int!\n        $ak: String\n        $group_id: String\n        $status: String\n        $skipClusterSize: Boolean!\n      ) {\n        compute_session_list(\n          limit: $limit\n          offset: $offset\n          access_key: $ak\n          group_id: $group_id\n          status: $status\n        ) {\n          items {\n            id\n            type\n            session_id\n            name\n            image\n            architecture\n            created_at\n            terminated_at\n            status\n            status_info\n            service_ports\n            mounts\n            occupied_slots\n            resource_opts\n            access_key\n            starts_at\n            scaling_group\n            agents\n            image\n            cluster_size @skipOnClient(if: $skipClusterSize)\n            ...SessionInfoCellFragment\n          }\n        }\n      }\n    `,\n    {\n      limit: pageSize,\n      offset: (currentPage - 1) * pageSize,\n      status: status?.join(','),\n      group_id: projectId,\n\n      // skipOnClients\n      skipClusterSize: !baiClient.supports('multi-container'),\n    },\n    {\n      fetchKey: deferredMergedFetchKey,\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const statusTagColor = {\n    //prepare\n    RESTARTING: 'blue',\n    PREPARING: 'blue',\n    PULLING: 'blue',\n    //running\n    RUNNING: 'green',\n    PENDING: 'green',\n    SCHEDULED: 'green',\n    //error\n    ERROR: 'red',\n    //finished return undefined\n  };\n\n  const statusInfoTagColor = {\n    'idle-timeout': 'green',\n    'user-requested': 'green',\n    scheduled: 'green',\n    'self-terminated': 'green',\n    'no-available-instances': 'red',\n    'failed-to-start': 'red',\n    'creation-failed': 'red',\n  };\n\n  const typeTagColor = {\n    INTERACTIVE: 'green',\n    BATCH: 'darkgreen',\n    INFERENCE: 'blue',\n  };\n\n  return (\n    <>\n      <Table\n        scroll={{ x: 'max-content' }}\n        columns={[\n          {\n            title: t('session.SessionInfo'),\n            render(value, record, index) {\n              return (\n                <SessionInfoCell\n                  key={record.session_id}\n                  sessionFrgmt={record}\n                  sessionNameList={_.map(\n                    (compute_session_list?.items || []).filter(filter) || [],\n                    'name',\n                  )}\n                  onRename={() => {\n                    updateFetchKey(\n                      record.session_id + new Date().toISOString(),\n                    );\n                  }}\n                />\n              );\n            },\n            fixed: 'left',\n          },\n          {\n            title: t('session.Status'),\n            dataIndex: 'status',\n            render(value, record) {\n              return (\n                <>\n                  {record.status_info !== '' ? (\n                    <DoubleTag\n                      values={[\n                        { label: value, color: _.get(statusTagColor, value) },\n                        {\n                          label: record.status_info,\n                          color: _.get(statusInfoTagColor, record.status_info),\n                        },\n                      ]}\n                    />\n                  ) : (\n                    <Tag color={_.get(statusTagColor, value)}>{value}</Tag>\n                  )}\n                </>\n              );\n            },\n          },\n          {\n            title: t('general.Control'),\n          },\n          {\n            title: t('session.Configuration'),\n            dataIndex: 'mounts',\n            render(value, record) {\n              return (\n                <>\n                  {value.length > 0 ? (\n                    <Flex gap=\"xxs\" style={{ width: 200 }}>\n                      <FolderOutlined />\n                      <Typography.Text\n                        ellipsis={{\n                          tooltip: {\n                            overlayInnerStyle: { width: 'max-content' },\n                            title: _.map(value, (mountedFolder) => {\n                              return <div>{mountedFolder}</div>;\n                            }),\n                          },\n                        }}\n                      >\n                        {value.join(', ')}\n                      </Typography.Text>\n                    </Flex>\n                  ) : (\n                    <Flex gap=\"xxs\" style={{ color: token.colorTextDisabled }}>\n                      <FolderOutlined />\n                      No mount\n                    </Flex>\n                  )}\n                  <Flex gap=\"xxs\">\n                    <GroupOutlined />\n                    {record.scaling_group}\n                  </Flex>\n                  <Flex gap=\"xxs\">\n                    {record.occupied_slots &&\n                      _.map(\n                        JSON.parse(record.occupied_slots),\n                        (value, type) => {\n                          return (\n                            <ResourceNumber\n                              key={type}\n                              // @ts-ignore\n                              type={type}\n                              value={_.toString(value)}\n                              opts={{\n                                shmem: _.sum(\n                                  _.map(\n                                    JSON.parse(record.resource_opts),\n                                    (item) => {\n                                      return item.shmem;\n                                    },\n                                  ),\n                                ),\n                              }}\n                            />\n                          );\n                        },\n                      )}\n                  </Flex>\n                </>\n              );\n            },\n          },\n          {\n            title: t('session.Usage'),\n          },\n          {\n            title: t('session.Reservation'),\n            dataIndex: 'created_at',\n            render(value, record) {\n              const localeStringDate = new Date(value).toLocaleString();\n              const elapsedTime = baiClient.utils.elapsedTime(\n                value,\n                record.terminated_at,\n              );\n              return (\n                <Flex direction=\"column\" gap=\"xs\">\n                  {localeStringDate}\n                  <DoubleTag values={[t('session.ElapsedTime'), elapsedTime]} />\n                </Flex>\n              );\n            },\n          },\n          {\n            title: t('session.EnvironmentInfo'),\n            render: (record) => {\n              return (\n                <Tag color=\"gold\">\n                  <Flex direction=\"column\">\n                    <Flex gap=\"xxs\">\n                      <ImageMetaIcon image={record.image} />\n                      {/*<div> to apply gap */}\n                      <div>{getImageAliasName(record.image)}</div>\n                      {getBaseVersion(record.image)}\n                    </Flex>\n                    <Flex gap=\"xxs\">\n                      {/*<div> to apply gap */}\n                      <div>{getBaseImage(record.image)}</div>\n                      {record.architecture}\n                    </Flex>\n                  </Flex>\n                </Tag>\n              );\n            },\n          },\n          {\n            title: t('session.SessionType'),\n            dataIndex: 'type',\n            render: (value) => {\n              return <Tag color={_.get(typeTagColor, value)}>{value}</Tag>;\n            },\n          },\n          ...(baiClient.is_admin || !!baiClient._config.hideAgents\n            ? [\n                {\n                  title: t('session.Agent'),\n                  dataIndex: 'agents',\n                  render(value: string[]) {\n                    return _.map(value, (agent) => {\n                      return agent;\n                    });\n                  },\n                },\n              ]\n            : []),\n        ]}\n        // @ts-ignore\n        dataSource={(compute_session_list?.items || []).filter(filter)}\n        // dataSource={_.filter(compute_session_list?.items || [], () => {})}\n        // pagination={{\n\n        // }}\n        {...tableProps}\n      />\n    </>\n  );\n};\n\nexport default SessionList;\n","// This icon file is generated automatically.\nvar ThunderboltTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M695.4 164.1H470.8L281.2 491.5h157.4l-60.3 241 319.8-305.1h-211z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M848.1 359.3H627.8L825.9 109c4.1-5.3.4-13-6.3-13H436.1c-2.8 0-5.5 1.5-6.9 4L170.1 547.5c-3.1 5.3.7 12 6.9 12h174.4L262 917.1c-1.9 7.8 7.5 13.3 13.3 7.7L853.6 373c5.2-4.9 1.7-13.7-5.5-13.7zM378.3 732.5l60.3-241H281.2l189.6-327.4h224.6L487.1 427.4h211L378.3 732.5z\", \"fill\": primaryColor } }] }; }, \"name\": \"thunderbolt\", \"theme\": \"twotone\" };\nexport default ThunderboltTwoTone;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport ThunderboltTwoToneSvg from \"@ant-design/icons-svg/es/asn/ThunderboltTwoTone\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar ThunderboltTwoTone = function ThunderboltTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: ThunderboltTwoToneSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ThunderboltTwoTone.displayName = 'ThunderboltTwoTone';\n}\nexport default /*#__PURE__*/React.forwardRef(ThunderboltTwoTone);","// This icon file is generated automatically.\nvar PoweroffOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M705.6 124.9a8 8 0 00-11.6 7.2v64.2c0 5.5 2.9 10.6 7.5 13.6a352.2 352.2 0 0162.2 49.8c32.7 32.8 58.4 70.9 76.3 113.3a355 355 0 0127.9 138.7c0 48.1-9.4 94.8-27.9 138.7a355.92 355.92 0 01-76.3 113.3 353.06 353.06 0 01-113.2 76.4c-43.8 18.6-90.5 28-138.5 28s-94.7-9.4-138.5-28a353.06 353.06 0 01-113.2-76.4A355.92 355.92 0 01184 650.4a355 355 0 01-27.9-138.7c0-48.1 9.4-94.8 27.9-138.7 17.9-42.4 43.6-80.5 76.3-113.3 19-19 39.8-35.6 62.2-49.8 4.7-2.9 7.5-8.1 7.5-13.6V132c0-6-6.3-9.8-11.6-7.2C178.5 195.2 82 339.3 80 506.3 77.2 745.1 272.5 943.5 511.2 944c239 .5 432.8-193.3 432.8-432.4 0-169.2-97-315.7-238.4-386.7zM480 560h64c4.4 0 8-3.6 8-8V88c0-4.4-3.6-8-8-8h-64c-4.4 0-8 3.6-8 8v464c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"poweroff\", \"theme\": \"outlined\" };\nexport default PoweroffOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PoweroffOutlinedSvg from \"@ant-design/icons-svg/es/asn/PoweroffOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PoweroffOutlined = function PoweroffOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PoweroffOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  PoweroffOutlined.displayName = 'PoweroffOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(PoweroffOutlined);","import Flex from '../components/Flex';\nimport SessionList from '../components/SessionList';\nimport { useCurrentProjectValue, useSuspendedBackendaiClient } from '../hooks';\nimport { PoweroffOutlined, ThunderboltTwoTone } from '@ant-design/icons';\nimport { Alert, Button, Segmented, Tabs, Typography, theme } from 'antd';\nimport React, { PropsWithChildren, Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n\nconst RUNNINGS = [\n  'RUNNING',\n  'RESTARTING',\n  'TERMINATING',\n  'PENDING',\n  'SCHEDULED',\n  'PREPARING',\n  'PULLING',\n];\nconst TAB_STATUS_MAP = {\n  running: RUNNINGS,\n  interactive: RUNNINGS,\n  batch: RUNNINGS,\n  inference: RUNNINGS,\n  finished: ['TERMINATED', 'CANCELLED'],\n  others: ['TERMINATING', 'ERROR'],\n  default: RUNNINGS,\n};\n\ntype TabKey =\n  | 'running'\n  | 'interactive'\n  | 'batch'\n  | 'inference'\n  | 'finished'\n  | 'others'\n  | 'default';\nconst SessionListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const navigate = useNavigate();\n\n  const [selectedTab, setSelectedTab] = useState<TabKey>('running');\n  const [selectedGeneration, setSelectedGeneration] = useState<\n    'current' | 'next'\n  >('next');\n\n  // console.log(compute_session_list?.items[0].);\n  return (\n    <>\n      <Alert\n        message={\n          <Flex gap={'md'}>\n            <Typography.Text>\n              This is{' '}\n              {selectedGeneration === 'current'\n                ? 'current version'\n                : 'NEXT generation'}{' '}\n              of session list. you can switch anytime.\n            </Typography.Text>\n            <Segmented\n              options={[\n                {\n                  label: 'Current',\n                  value: 'current',\n                },\n                {\n                  label: (\n                    <Typography.Text\n                      style={{\n                        color:\n                          selectedGeneration === 'next'\n                            ? token.colorPrimary\n                            : undefined,\n                      }}\n                    >\n                      Next\n                    </Typography.Text>\n                  ),\n                  value: 'next',\n                  icon: (\n                    // <ThunderboltFilled style={{ color: token.colorPrimary }} />\n                    <ThunderboltTwoTone twoToneColor={token.colorWarning} />\n                  ),\n                },\n              ]}\n              value={selectedGeneration}\n              // @ts-ignore\n              onChange={(x) => setSelectedGeneration(x)}\n            />\n          </Flex>\n        }\n        type=\"warning\"\n        banner\n        style={{ marginTop: -14, marginLeft: -14, marginRight: -14 }}\n      />\n      {selectedGeneration === 'next' ? (\n        <Flex\n          direction=\"column\"\n          align=\"stretch\"\n          style={{ padding: token.padding, gap: token.margin }}\n        >\n          {children}\n          {/* <Card bordered title={t(\"summary.ResourceStatistics\")}>\n            <p>SessionList</p>\n          </Card> */}\n\n          {/* <Card bodyStyle={{ paddingTop: 0 }}> */}\n          <Flex direction=\"column\" align=\"stretch\">\n            <Flex style={{ flex: 1 }}>\n              <Tabs\n                // type=\"card\"\n                activeKey={selectedTab}\n                onChange={(key) => setSelectedTab(key as TabKey)}\n                tabBarStyle={{ marginBottom: 0 }}\n                style={{\n                  width: '100%',\n                  paddingLeft: token.paddingMD,\n                  paddingRight: token.paddingMD,\n                  borderTopLeftRadius: token.borderRadius,\n                  borderTopRightRadius: token.borderRadius,\n                }}\n                items={[\n                  {\n                    key: 'running',\n                    label: t('session.Running'),\n                  },\n                  {\n                    key: 'interactive',\n                    label: t('session.Interactive'),\n                  },\n                  {\n                    key: 'batch',\n                    label: t('session.Batch'),\n                  },\n                  ...(baiClient.supports('inference-workload')\n                    ? [\n                        {\n                          key: 'inference',\n                          label: t('session.Inference'),\n                        },\n                      ]\n                    : []),\n                  {\n                    key: 'finished',\n                    label: t('session.Finished'),\n                  },\n                  {\n                    key: 'others',\n                    label: t('session.Others'),\n                  },\n                ]}\n                tabBarExtraContent={{\n                  right: (\n                    <Flex direction=\"row\" gap={'sm'}>\n                      {/* <Tooltip title={t(\"session.exportCSV\")}>\n                        <Button icon={<DownloadOutlined />} type=\"text\" />\n                      </Tooltip> */}\n                      {/* @ts-ignore */}\n                      <Button\n                        type=\"primary\"\n                        icon={<PoweroffOutlined />}\n                        onClick={() => {\n                          navigate('/session/start');\n                        }}\n                      >\n                        START\n                      </Button>\n                    </Flex>\n                  ),\n                }}\n              />\n              {/* <Button type=\"text\" icon={<MoreOutlined />} /> */}\n            </Flex>\n            {/* <Button type=\"primary\" icon={<PoweroffOutlined />}>\n            시작\n          </Button> */}\n\n            {/* @ts-ignore */}\n            {/* <backend-ai-session-launcher\n          location=\"session\"\n          id=\"session-launcher\"\n          active\n        /> */}\n            <Suspense fallback={<div>loading..</div>}>\n              <SessionList\n                projectId={curProject.id}\n                status={\n                  TAB_STATUS_MAP[selectedTab] || TAB_STATUS_MAP['default']\n                }\n                filter={(session) => {\n                  if (\n                    ['interactive', 'batch', 'inference'].includes(selectedTab)\n                  ) {\n                    return session?.type?.toLowerCase() === selectedTab;\n                  }\n                  return true;\n                }}\n                extraFetchKey={selectedTab}\n              />\n            </Suspense>\n          </Flex>\n        </Flex>\n      ) : (\n        <>\n          {/* @ts-ignore */}\n          <backend-ai-session-view class=\"page\" name=\"job\" active />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SessionListPage;\n"],"names":["_ref","objectValues","_ref$values","values","length","React","map","value","label","color","_jsx","Flex","direction","children","_","objValue","idx","Tag","style","undefined","margin","marginRight","ImageMetaIcon","bordered","image","_ref$style","alt","arguments","_useBackendAIImageMet","useBackendAIImageMetaData","getImageIcon","_slicedToArray","src","_objectSpread","width","height","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","v25","hash","sessionFrgmt","sessionNameList","onRename","baiClient","useSuspendedBackendaiClient","token","theme","useToken","session","useFragment","_SessionInfoCellFragment","require","mutation","useTanMutation","mutationFn","newName","sessionId","APIMajorVersion","name","session_id","rename","formRef","useRef","t","useTranslation","_useState","useState","_useState2","editing","setEditing","_useState3","_useState4","optimisticName","setOptimisticName","editable","includes","isRunningStatus","status","isPreparing","email","user_email","isPendingRename","isLoading","Form","ref","Item","rules","required","max","pattern","message","validator","String","Promise","reject","Error","resolve","Input","autoFocus","onPressEnter","_formRef$current","current","validateFields","then","_ref2","mutate","onSuccess","result","onError","error","catch","save","onKeyUp","e","key","_jsxs","maxWidth","Typography","Text","ellipsis","tooltip","overlayInnerStyle","opacity","Button","loading","type","icon","EditOutlined","colorLink","onClick","_formRef$current2","setFieldsValue","GroupOutlined","props","AntdIcon","_extends","GroupOutlinedSvg","_status","_ref$status","_ref$currentPage","limit","currentPage","_ref$pageSize","pageSize","projectId","filter","_ref$extraFetchKey","extraFetchKey","tableProps","_objectWithoutProperties","_excluded","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","deferredMergedFetchKey","useDeferredValue","_useBackendAIImageMet3","getImageAliasName","getBaseVersion","getBaseImage","supports","compute_session_list","useLazyLoadQuery","_SessionListQuery","offset","join","group_id","skipClusterSize","fetchPolicy","statusTagColor","RESTARTING","PREPARING","PULLING","RUNNING","PENDING","SCHEDULED","ERROR","statusInfoTagColor","scheduled","typeTagColor","INTERACTIVE","BATCH","INFERENCE","_Fragment","Table","scroll","x","columns","title","render","record","index","SessionInfoCell","items","Date","toISOString","fixed","dataIndex","status_info","DoubleTag","gap","FolderOutlined","mountedFolder","colorTextDisabled","scaling_group","occupied_slots","JSON","parse","ResourceNumber","opts","shmem","resource_opts","item","localeStringDate","toLocaleString","elapsedTime","utils","terminated_at","architecture","concat","_toConsumableArray","is_admin","_config","hideAgents","agent","dataSource","primaryColor","secondaryColor","ThunderboltTwoTone","ThunderboltTwoToneSvg","PoweroffOutlined","PoweroffOutlinedSvg","RUNNINGS","TAB_STATUS_MAP","running","interactive","batch","inference","finished","others","default","curProject","useCurrentProjectValue","navigate","useNavigate","selectedTab","setSelectedTab","selectedGeneration","setSelectedGeneration","Alert","Segmented","options","colorPrimary","twoToneColor","colorWarning","onChange","banner","marginTop","marginLeft","align","padding","flex","Tabs","activeKey","tabBarStyle","marginBottom","paddingLeft","paddingMD","paddingRight","borderTopLeftRadius","borderRadius","borderTopRightRadius","tabBarExtraContent","right","Suspense","fallback","SessionList","id","_session$type","toLowerCase","class","active"],"sourceRoot":""}