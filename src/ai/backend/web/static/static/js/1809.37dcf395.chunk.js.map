{"version":3,"file":"static/js/1809.37dcf395.chunk.js","mappings":"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","sources":["components/__generated__/EndpointSelectQuery.graphql.ts","components/lablupTalkativotUI/ChatInput.tsx","components/lablupTalkativotUI/ModelSelect.tsx","components/lablupTalkativotUI/CopyButton.tsx","components/lablupTalkativotUI/ChatMessageContent.tsx","components/lablupTalkativotUI/ChatMessage.tsx","components/lablupTalkativotUI/ScrollBottomHandlerButton.tsx","components/lablupTalkativotUI/VirtualChatMessageList.tsx","components/lablupTalkativotUI/LLMChatCard.tsx","components/EndpointSelect.tsx","components/lablupTalkativotUI/EndpointLLMChatCard.tsx","components/lablupTalkativotUI/LLMPlaygroundPage.tsx","components/lablupTalkativotUI/__generated__/EndpointLLMChatCard_endpoint.graphql.ts","components/lablupTalkativotUI/__generated__/LLMPlaygroundPageQuery.graphql.ts","hooks/reactPaginationQueryOptions.tsx","../node_modules/ahooks/es/useUpdate/index.js","../node_modules/ahooks/es/useControllableValue/index.js","../node_modules/antd/es/popconfirm/style/index.js","../node_modules/antd/es/popconfirm/PurePanel.js","../node_modules/antd/es/popconfirm/index.js"],"sourcesContent":["/**\n * @generated SignedSource<<8bc09a1467aeb24b197bc99ebc81f2e2>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointSelectQuery$variables = {\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n};\nexport type EndpointSelectQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointSelectQuery = {\n  response: EndpointSelectQuery$data;\n  variables: EndpointSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointLLMChatCard_endpoint\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"a527832d0e20b466499e844d3bb1cd38\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      url\\n      ...EndpointLLMChatCard_endpoint\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointLLMChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"9371630d1c6953eebbc69ad5ab6c05cc\";\n\nexport default node;\n","import { Button, Input, Space } from 'antd';\nimport { InputProps, InputRef } from 'antd/es/input';\nimport { SendIcon, SquareIcon } from 'lucide-react';\nimport React, { useRef, useEffect } from 'react';\n\nconst { Compact } = Space;\n\ninterface ChatInputProps extends InputProps {\n  loading?: boolean;\n  autoFocus?: boolean;\n  onStop?: () => void;\n  onSend?: () => void;\n}\nconst ChatInput: React.FC<ChatInputProps> = ({\n  style,\n  loading,\n  autoFocus,\n  onStop,\n  onSend,\n  ...inputProps\n}) => {\n  const inputRef = useRef<InputRef>(null);\n\n  useEffect(() => {\n    if (autoFocus && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <Compact\n      style={{\n        width: '100%',\n        ...style,\n      }}\n    >\n      <Input\n        ref={inputRef}\n        {...inputProps}\n        onPressEnter={(e) => {\n          if (!loading) {\n            onSend && onSend();\n          }\n          // e.preventDefault();\n        }}\n      />\n      <Button\n        htmlType={'button'}\n        icon={loading ? <SquareIcon /> : <SendIcon />}\n        onClick={() => {\n          if (loading) {\n            onStop && onStop();\n          } else {\n            onSend && onSend();\n          }\n        }}\n      />\n    </Compact>\n  );\n};\n\nexport default ChatInput;\n","import { BAIModel } from './LLMChatCard';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModelSelectProps extends SelectProps {\n  models?: Array<BAIModel>;\n  allowCustomModel?: boolean;\n}\n\nconst ModelSelect: React.FC<ModelSelectProps> = ({\n  models,\n  allowCustomModel,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectModel')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      options={_.concat(\n        allowCustomModel\n          ? [\n              {\n                label: 'Custom',\n                // @ts-ignore\n                value: 'custom',\n              },\n            ]\n          : [],\n        _.chain(models)\n          .groupBy('group')\n          .mapValues((ms) =>\n            _.map(ms, (m) => ({\n              label: m.label,\n              value: m.name,\n            })),\n          )\n          .map((v, k) => ({\n            label: k === 'undefined' ? 'Others' : k,\n            options: v,\n          }))\n          .value(),\n      )}\n      popupMatchSelectWidth={false}\n      {...selectProps}\n    />\n  );\n};\n\nexport default ModelSelect;\n","import { Button, ButtonProps, Tooltip } from 'antd';\nimport { CopyConfig } from 'antd/es/typography/Base';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface CopyButtonProps extends ButtonProps {\n  copyable?: Omit<CopyConfig, 'text'> & { text: string };\n}\nconst CopyButton: React.FC<CopyButtonProps> = ({ copyable, ...props }) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = async () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      const timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCopied]);\n\n  return (\n    <Tooltip\n      title={isCopied ? 'Copied!' : 'Copy'}\n      open={isCopied ? true : undefined}\n    >\n      <CopyToClipboard text={copyable?.text || ''} onCopy={handleCopy}>\n        <Button icon={isCopied ? <CheckIcon /> : <CopyIcon />} {...props} />\n      </CopyToClipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyButton;\n","import CopyButton from './CopyButton';\nimport { Card, Typography } from 'antd';\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport {\n  Prism as SyntaxHighlighter,\n  SyntaxHighlighterProps,\n} from 'react-syntax-highlighter';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst { Text } = Typography;\n\nconst ChatMessageContent: React.FC<{\n  children?: string;\n}> = ({ children }) => {\n  return (\n    <Markdown\n      components={{\n        code(props) {\n          const { children, className, node, ref, ...rest } = props;\n          const match = /language-(\\w+)/.exec(className || '');\n          const content = String(children).replace(/\\n$/, '');\n          return match ? (\n            <Card\n              title={\n                <Text style={{ fontWeight: 'normal' }} type=\"secondary\">\n                  {match[1]}\n                </Text>\n              }\n              type=\"inner\"\n              size=\"small\"\n              extra={\n                <CopyButton\n                  type=\"text\"\n                  copyable={{\n                    text: 's',\n                  }}\n                />\n              }\n              styles={{\n                body: { padding: 0 },\n                header: { margin: 0 },\n              }}\n            >\n              <div style={{ margin: '-0.5em 0', width: '100%' }}>\n                <CodeBlock\n                  ref={ref}\n                  {...rest}\n                  PreTag=\"div\"\n                  language={match[1]}\n                  style={oneLight}\n                  wrapLongLines\n                  wrapLines\n                >\n                  {content}\n                </CodeBlock>\n              </div>\n            </Card>\n          ) : (\n            <code {...rest} className={className}>\n              {children}\n            </code>\n          );\n        },\n      }}\n    >\n      {children}\n    </Markdown>\n  );\n};\n\nconst X: React.FC<SyntaxHighlighterProps> = ({ children, ...props }) => {\n  return <SyntaxHighlighter {...props}>{children}</SyntaxHighlighter>;\n};\nconst CodeBlock = React.memo(X);\n\nexport default React.memo(ChatMessageContent);\n","import Flex from '../Flex';\n// ES 2015\nimport ChatMessageContent from './ChatMessageContent';\nimport { Message } from '@ai-sdk/react';\nimport { useThrottle } from 'ahooks';\nimport { Avatar, theme } from 'antd';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport React from 'react';\nimport { useState } from 'react';\n\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst ChatMessage: React.FC<{\n  message: Message;\n  placement?: 'left' | 'right';\n  extra?: React.ReactNode;\n  enableExtraHover?: boolean;\n  containerStyle?: React.CSSProperties;\n  isStreaming?: boolean;\n  // avatar?:\n}> = ({\n  extra,\n  message,\n  placement = 'left',\n  containerStyle,\n  enableExtraHover,\n  isStreaming,\n}) => {\n  const { token } = theme.useToken();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const throttledMessageContent = useThrottle(message.content, { wait: 50 });\n  return (\n    <Flex\n      direction={placement === 'left' ? 'row' : 'row-reverse'}\n      justify={'start'}\n      align=\"baseline\"\n      style={{\n        marginLeft: placement === 'left' ? '0' : '15%',\n        marginRight: placement === 'right' ? '0' : 20,\n        ...containerStyle,\n      }}\n      gap={'sm'}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {message.role !== 'user' ? (\n        <Avatar\n          // icon={message.role === \"user\" ? \"🧑‍🦰\" : \"🤖\"}\n          icon={'🤖'}\n          style={{ fontSize: token.fontSizeHeading3 }}\n        />\n      ) : null}\n\n      <Flex\n        direction=\"column\"\n        align={placement === 'left' ? 'start' : 'end'}\n        wrap=\"wrap\"\n        style={{ flex: 1 }}\n        gap={'xxs'}\n      >\n        <Flex\n          align=\"stretch\"\n          direction=\"column\"\n          style={{\n            borderRadius: token.borderRadius,\n            borderColor: token.colorBorderSecondary,\n            borderWidth: token.lineWidth,\n            padding: '1em',\n            paddingTop: 0,\n            paddingBottom: 0,\n            backgroundColor:\n              message.role !== 'user'\n                ? token.colorBgContainer\n                : token.colorBgContainerDisabled,\n            width: '100%',\n          }}\n        >\n          <ChatMessageContent>\n            {throttledMessageContent + (isStreaming ? '\\n●' : '')}\n          </ChatMessageContent>\n        </Flex>\n        <Flex\n          style={{\n            fontSize: token.fontSizeSM,\n            ...(enableExtraHover\n              ? {\n                  opacity: isHovered ? 1 : 0,\n                  transition: 'opacity 0.2s',\n                  transitionDelay: isHovered ? '0s' : '0.2s',\n                }\n              : {}),\n          }}\n        >\n          {extra}\n        </Flex>\n        {/* <Text\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n            opacity: isHovered ? 1 : 0,\n            transition: \"opacity 0.2s\",\n            transitionDelay: isHovered ? \"0s\" : \"0.2s\",\n          }}\n        >\n          {dayjs(message.createdAt)?.isSame(new Date(), \"day\")\n            ? dayjs(message.createdAt).format(\"LT\")\n            : dayjs(message.createdAt).format(\"L LT\")}\n        </Text> */}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatMessage;\n","import { useEventNotStable } from '../../hooks/useEventNotStable';\nimport { Button } from 'antd';\nimport { ArrowDownIcon } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface ScrollBottomHandlerButtonProps {\n  autoScroll?: boolean;\n  atBottom?: boolean;\n  lastMessageContent?: string;\n  onScrollToBottom: (type: 'click' | 'auto') => void;\n}\nconst ScrollBottomHandlerButton: React.FC<ScrollBottomHandlerButtonProps> = ({\n  autoScroll,\n  atBottom,\n  lastMessageContent,\n  ...props\n}) => {\n  const onScrollToBottom = useEventNotStable(props.onScrollToBottom);\n\n  useEffect(() => {\n    if (atBottom && autoScroll) {\n      onScrollToBottom?.('auto');\n    }\n  }, [atBottom, autoScroll, lastMessageContent, onScrollToBottom]);\n\n  return (\n    <Button\n      icon={<ArrowDownIcon />}\n      shape=\"circle\"\n      onClick={() => {\n        onScrollToBottom && onScrollToBottom('click');\n      }}\n    ></Button>\n  );\n};\n\nexport default ScrollBottomHandlerButton;\n","import Flex from '../Flex';\nimport ChatMessage from './ChatMessage';\nimport CopyButton from './CopyButton';\nimport ScrollBottomHandlerButton from './ScrollBottomHandlerButton';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport Compact from 'antd/es/space/Compact';\nimport React, { useRef, useState } from 'react';\nimport { Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\n// import AutoScroll from '../AutoScroll';\n// import Item from '../ChatItem';\n\ninterface VirtualizedListProps {\n  messages: Array<Message>;\n  isStreaming?: boolean;\n}\nconst VirtualChatMessageList: React.FC<VirtualizedListProps> = ({\n  messages,\n  isStreaming,\n}) => {\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [atBottom, setAtBottom] = useState(true);\n  const { token } = theme.useToken();\n  // overscan should be 1.5 times the height of the window\n  const overscan = typeof window !== 'undefined' ? window.innerHeight * 1.5 : 0;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ height: '100%', flex: 1 }}\n    >\n      <Virtuoso\n        atBottomStateChange={setAtBottom}\n        atBottomThreshold={60}\n        computeItemKey={(_, item) => item.id}\n        data={messages}\n        followOutput={'auto'}\n        initialTopMostItemIndex={messages?.length - 1}\n        itemContent={(index, m) => {\n          return (\n            <ChatMessage\n              key={m.id}\n              message={m}\n              placement={m.role === 'user' ? 'right' : 'left'}\n              containerStyle={{\n                paddingLeft: token.paddingMD,\n                paddingRight: token.paddingMD,\n                paddingTop: index === 0 ? token.paddingMD : 0,\n                paddingBottom:\n                  index === messages.length - 1 ? token.paddingMD : 0,\n              }}\n              isStreaming={\n                m.role !== 'user' &&\n                isStreaming &&\n                index === messages.length - 1\n              }\n              enableExtraHover={m.role === 'user'}\n              extra={\n                m.role !== 'user' ? (\n                  <Compact>\n                    <CopyButton\n                      type=\"text\"\n                      size=\"small\"\n                      copyable={{\n                        text: m.content,\n                      }}\n                    />\n                    {/* <Button/> */}\n                    {/* <Button/> */}\n                  </Compact>\n                ) : (\n                  <Compact>{null}</Compact>\n                )\n              }\n            />\n          );\n        }}\n        overscan={overscan}\n        ref={virtuosoRef}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          right: '50%',\n          transform: 'translateX(+50%)',\n          bottom: token.marginSM,\n          opacity: atBottom ? 0 : 1,\n          transition: 'opacity 0.2s',\n          transitionDelay: atBottom ? '0s' : '0.2s',\n        }}\n      >\n        <ScrollBottomHandlerButton\n          atBottom={atBottom}\n          autoScroll={isStreaming}\n          onScrollToBottom={(type) => {\n            const virtuoso = virtuosoRef.current;\n            switch (type) {\n              case 'auto': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'auto',\n                  index: 'LAST',\n                });\n                break;\n              }\n              case 'click': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'smooth',\n                  index: 'LAST',\n                });\n                break;\n              }\n            }\n          }}\n          lastMessageContent={messages[messages.length - 1]?.content}\n        />\n      </div>\n    </Flex>\n  );\n};\n\nexport default VirtualChatMessageList;\n","'use client';\n\nimport Flex from '../Flex';\nimport ChatInput from './ChatInput';\nimport ModelSelect from './ModelSelect';\nimport VirtualChatMessageList from './VirtualChatMessageList';\nimport { createOpenAI } from '@ai-sdk/openai';\nimport { useChat } from '@ai-sdk/react';\nimport { DeleteOutlined, MoreOutlined } from '@ant-design/icons';\nimport { useControllableValue } from 'ahooks';\nimport { streamText } from 'ai';\nimport {\n  Alert,\n  Button,\n  Card,\n  CardProps,\n  Dropdown,\n  Form,\n  FormInstance,\n  Input,\n  MenuProps,\n  theme,\n} from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type BAIModel = {\n  id: string;\n  label?: string;\n  name?: string;\n  group?: string;\n  created?: string;\n  description?: string;\n};\ntype BAIAgent = {};\nexport interface LLMChatCardProps extends CardProps {\n  models?: Array<BAIModel>;\n  agents?: Array<BAIAgent>;\n  modelId?: string;\n  agentId?: string;\n  baseURL?: string;\n  apiKey?: string;\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n  allowCustomModel?: boolean;\n  alert?: React.ReactNode;\n  leftExtra?: React.ReactNode;\n  inputMessage?: string;\n  submitKey?: string;\n  onAgentChange?: (agentId: string) => void;\n  onModelChange?: (modelId: string) => void;\n  onInputChange?: (input: string) => void;\n  onSubmitChange?: () => void;\n}\n\nconst LLMChatCard: React.FC<LLMChatCardProps> = ({\n  models = [],\n  baseURL,\n  headers,\n  credentials,\n  apiKey,\n  fetchOnClient,\n  allowCustomModel,\n  alert,\n  leftExtra,\n  inputMessage,\n  submitKey,\n  onInputChange,\n  onSubmitChange,\n  ...cardProps\n}) => {\n  const [modelId, setModelId] = useControllableValue(cardProps, {\n    valuePropName: 'modelId',\n    trigger: 'onModelChange',\n    defaultValue: models?.[0]?.id,\n  });\n\n  const customModelFormRef = useRef<FormInstance>(null);\n\n  // const [userInput, setUserInput] = useControllableValue(cardProps,{\n  //   valuePropName: \"userInput\",\n  //   trigger: \"onChangeUserInput\",\n  // });\n\n  // useControllableValue(cardProps, {\n  //   valuePropName: \"agentId\",\n  //   trigger: \"onAgentChange\",\n  // });\n\n  const {\n    messages,\n    error,\n    input,\n    setInput,\n    handleInputChange,\n    stop,\n    isLoading,\n    append,\n    setMessages,\n    // ...chatHelpers\n  } = useChat({\n    api: baseURL,\n    headers,\n    credentials,\n    body: {\n      modelId: modelId,\n    },\n    streamMode: 'stream-data',\n    fetch: (input, init) => {\n      if (fetchOnClient || modelId === 'custom') {\n        const body = JSON.parse(init?.body as string);\n        const provider = createOpenAI({\n          baseURL: allowCustomModel\n            ? customModelFormRef.current?.getFieldValue('baseURL')\n            : baseURL,\n          apiKey:\n            (allowCustomModel\n              ? customModelFormRef.current?.getFieldValue('token')\n              : apiKey) || 'dummy',\n        });\n        return streamText({\n          abortSignal: init?.signal || undefined,\n          model: provider(\n            allowCustomModel\n              ? customModelFormRef.current?.getFieldValue('modelId')\n              : modelId,\n          ),\n          messages: body?.messages,\n        }).then((result) => {\n          return result.toAIStreamResponse();\n        });\n      } else {\n        return fetch(input, init);\n      }\n    },\n  });\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n\n  // If the `inputMessage` prop exists, the `input` state has to follow it.\n  useEffect(() => {\n    if (!_.isUndefined(inputMessage)) {\n      setInput(inputMessage);\n    }\n  }, [inputMessage, setInput]);\n\n  useEffect(() => {\n    if (!_.isUndefined(submitKey) && input) {\n      append({\n        role: 'user',\n        content: input,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitKey]);\n\n  const items: MenuProps['items'] = [\n    {\n      key: 'clear',\n      danger: true,\n      label: t('chatui.DeleteChatHistory'),\n      icon: <DeleteOutlined />,\n      onClick: () => {\n        setMessages([]);\n      },\n    },\n  ];\n\n  return (\n    <Card\n      bordered\n      extra={\n        [\n          // <Checkbox key=\"sync\">Sync</Checkbox>,\n          // <Button key=\"setting\" type=\"text\" icon={<SlidersHorizontalIcon/>}></Button>,\n        ]\n      }\n      {...cardProps}\n      title={\n        <Flex direction=\"column\" align=\"stretch\" gap={'sm'}>\n          <Flex direction=\"row\" gap={'xs'}>\n            {/* <Select\n            options={[\n              {\n                label: \"Default Agent\",\n                value: \"default\",\n              },\n            ]}\n            value={\"default\"}\n            popupMatchSelectWidth={false}\n          ></Select> */}\n            {leftExtra}\n            <ModelSelect\n              models={models}\n              value={modelId}\n              onChange={setModelId}\n              allowCustomModel={allowCustomModel}\n            />\n            <Dropdown menu={{ items }} trigger={['click']}>\n              <Button\n                type=\"link\"\n                onClick={(e) => e.preventDefault()}\n                icon={<MoreOutlined />}\n                style={{ color: token.colorTextSecondary, width: token.sizeMS }}\n              />\n            </Dropdown>\n          </Flex>\n        </Flex>\n      }\n      style={{\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      styles={{\n        body: {\n          backgroundColor: token.colorFillQuaternary,\n          borderRadius: 0,\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 0,\n          height: '50%',\n          position: 'relative',\n        },\n        actions: {\n          paddingLeft: token.paddingContentHorizontal,\n          paddingRight: token.paddingContentHorizontal,\n        },\n        header: {\n          zIndex: 1,\n        },\n      }}\n      actions={[\n        <ChatInput\n          autoFocus\n          value={input}\n          placeholder=\"Say something...\"\n          onChange={(v) => {\n            handleInputChange(v);\n            if (onInputChange) {\n              onInputChange(v.target.value);\n            }\n          }}\n          loading={isLoading}\n          onStop={() => {\n            stop();\n          }}\n          onSend={() => {\n            if (input) {\n              append({\n                role: 'user',\n                content: input,\n              });\n              setTimeout(() => {\n                setInput('');\n              }, 0);\n              if (onSubmitChange) {\n                onSubmitChange();\n              }\n            }\n          }}\n        />,\n      ]}\n    >\n      <Flex\n        direction=\"row\"\n        style={{\n          padding: token.paddingSM,\n          paddingRight: token.paddingContentHorizontalLG,\n          paddingLeft: token.paddingContentHorizontalLG,\n          backgroundColor: token.colorBgContainer,\n          display:\n            (allowCustomModel && modelId === 'custom' && 'flex') || 'none',\n        }}\n      >\n        <Form\n          ref={customModelFormRef}\n          layout=\"horizontal\"\n          size=\"small\"\n          requiredMark=\"optional\"\n          style={{ flex: 1 }}\n          key={baseURL}\n          initialValues={{\n            baseURL: baseURL,\n          }}\n        >\n          {alert ? (\n            <div style={{ marginBottom: token.size }}>{alert}</div>\n          ) : null}\n          <Form.Item\n            label=\"baseURL\"\n            name=\"baseURL\"\n            rules={[\n              {\n                type: 'url',\n              },\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"https://domain/v1\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Model ID\"\n            name=\"modelId\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input placeholder=\"llm-model\" />\n          </Form.Item>\n          <Form.Item label=\"Token\" name=\"token\">\n            <Input />\n          </Form.Item>\n        </Form>\n      </Flex>\n      {/* <ChatMessageList messages={messages}  /> */}\n      {!_.isEmpty((error as any)?.responseBody) ? (\n        <Alert\n          message={(error as any)?.responseBody}\n          type=\"error\"\n          showIcon\n          style={{\n            margin: token.marginSM,\n          }}\n          closable\n        />\n      ) : null}\n      <VirtualChatMessageList messages={messages} isStreaming={isLoading} />\n    </Card>\n  );\n};\n\nexport default LLMChatCard;\n","import { useBAIPaginationOptionState } from '../hooks/reactPaginationQueryOptions';\nimport {\n  EndpointSelectQuery,\n  EndpointSelectQuery$data,\n} from './__generated__/EndpointSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface EndpointSelectProps extends Omit<SelectProps, 'options'> {\n  fetchKey?: string;\n}\n\nexport type Endpoint = NonNullableItem<\n  EndpointSelectQuery$data['endpoint_list']\n>;\n\nconst EndpointSelect: React.FC<EndpointSelectProps> = ({\n  fetchKey,\n  ...selectProps\n}) => {\n  const { baiPaginationOption } = useBAIPaginationOptionState({\n    current: 1,\n    pageSize: 100,\n  });\n  const { endpoint_list } = useLazyLoadQuery<EndpointSelectQuery>(\n    graphql`\n      query EndpointSelectQuery($offset: Int!, $limit: Int!, $projectID: UUID) {\n        endpoint_list(offset: $offset, limit: $limit, project: $projectID) {\n          total_count\n          items {\n            name\n            endpoint_id\n            url\n            ...EndpointLLMChatCard_endpoint\n          }\n        }\n      }\n    `,\n    {\n      limit: baiPaginationOption.limit,\n      offset: baiPaginationOption.offset,\n    },\n    {\n      fetchKey: fetchKey,\n    },\n  );\n  const [controllableValue, setControllableValue] =\n    useControllableValue(selectProps);\n\n  // useEffect(() => {\n  //   if (autoSelectDefault && _.isEmpty(controllableValue)) {\n  //     setControllableValue(\n  //       endpoint_list?.items?.[0]?.endpoint_id,\n  //       endpoint_list?.items?.[0],\n  //     );\n  //   }\n  // }, []);\n\n  return (\n    <Select\n      showSearch\n      optionFilterProp=\"label\"\n      {...selectProps}\n      options={_.map(endpoint_list?.items, (item) => {\n        return {\n          label: item?.name,\n          value: item?.endpoint_id,\n          endpoint: item,\n        };\n      })}\n      value={controllableValue}\n      onChange={(v, option) => {\n        setControllableValue(v, _.castArray(option)?.[0].endpoint);\n      }}\n    />\n  );\n};\n\nexport default EndpointSelect;\n","import { useSuspenseTanQuery } from '../../hooks/reactQueryAlias';\nimport EndpointSelect from '../EndpointSelect';\nimport { Model } from './ChatUIModal';\nimport LLMChatCard, { BAIModel } from './LLMChatCard';\nimport { EndpointLLMChatCard_endpoint$key } from './__generated__/EndpointLLMChatCard_endpoint.graphql';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Alert, Button, CardProps, Popconfirm, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { atom, useAtom } from 'jotai';\nimport _ from 'lodash';\nimport React, { startTransition, useId, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst synchronizedMessageState = atom<string>('');\nconst chatSubmitKeyInfoState = atom<{ id: string; key: string } | undefined>(\n  undefined,\n);\n\ninterface EndpointLLMChatCardProps extends CardProps {\n  basePath?: string;\n  closable?: boolean;\n  defaultEndpoint?: EndpointLLMChatCard_endpoint$key;\n  fetchKey?: string;\n  isSynchronous?: boolean;\n  onRequestClose?: () => void;\n  onModelChange?: (modelId: string) => void;\n}\n\nconst EndpointLLMChatCard: React.FC<EndpointLLMChatCardProps> = ({\n  basePath = 'v1',\n  closable,\n  defaultEndpoint,\n  fetchKey,\n  isSynchronous,\n  onRequestClose,\n  onModelChange,\n  ...cardProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [endpointFrgmt, setEndpointFrgmt] =\n    useState<EndpointLLMChatCard_endpoint$key | null>(defaultEndpoint || null);\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointLLMChatCard_endpoint on Endpoint {\n        endpoint_id\n        url\n      }\n    `,\n    endpointFrgmt,\n  );\n  const [promisingEndpoint, setPromisingEndpoint] = useState(endpoint);\n\n  const [synchronizedMessage, setSynchronizedMessage] = useAtom(\n    synchronizedMessageState,\n  );\n\n  const [chatSubmitKeyInfo, setChatSubmitKeyInfo] = useAtom(\n    chatSubmitKeyInfoState,\n  );\n\n  const { data: modelsResult } = useSuspenseTanQuery<{\n    data: Array<Model>;\n  }>({\n    queryKey: ['models', fetchKey, endpoint?.endpoint_id],\n    queryFn: () => {\n      return endpoint?.url\n        ? fetch(\n            new URL(\n              basePath + '/models',\n              endpoint?.url ?? undefined,\n            ).toString(),\n          )\n            .then((res) => res.json())\n            .catch((e) => ({ data: [] }))\n        : Promise.resolve({ data: [] });\n    },\n  });\n\n  const models = _.map(modelsResult?.data, (m) => ({\n    id: m.id,\n    name: m.id,\n  })) as BAIModel[];\n\n  const submitId = useId();\n\n  return (\n    <LLMChatCard\n      {...cardProps}\n      baseURL={\n        endpoint?.url\n          ? new URL(basePath, endpoint?.url ?? undefined).toString()\n          : undefined\n      }\n      models={models}\n      fetchOnClient\n      leftExtra={\n        <EndpointSelect\n          placeholder={t('chatui.SelectEndpoint')}\n          style={{\n            fontWeight: 'normal',\n          }}\n          fetchKey={fetchKey}\n          showSearch\n          loading={promisingEndpoint?.endpoint_id !== endpoint?.endpoint_id}\n          onChange={(v, endpoint) => {\n            // TODO: fix type definitions\n            // @ts-ignore\n            setPromisingEndpoint(endpoint);\n            startTransition(() => {\n              // @ts-ignore\n              setEndpointFrgmt(endpoint);\n            });\n          }}\n          value={endpoint?.endpoint_id}\n          popupMatchSelectWidth={false}\n        />\n      }\n      modelId={modelsResult?.data?.[0]?.id ?? 'custom'}\n      extra={\n        closable ? (\n          <Popconfirm\n            title={t('chatui.DeleteChattingSession')}\n            description={t('chatui.DeleteChattingSessionDescription')}\n            onConfirm={() => {\n              onRequestClose?.();\n            }}\n            okText={t('button.Delete')}\n            okButtonProps={{ danger: true }}\n          >\n            <Button\n              icon={<CloseOutlined />}\n              type=\"text\"\n              style={{ color: token.colorIcon }}\n            />\n          </Popconfirm>\n        ) : undefined\n      }\n      allowCustomModel={_.isEmpty(models)}\n      alert={\n        _.isEmpty(models) && (\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={t('chatui.CannotFindModel')}\n          />\n        )\n      }\n      inputMessage={isSynchronous ? synchronizedMessage : undefined}\n      onInputChange={(v) => {\n        setSynchronizedMessage(v);\n      }}\n      submitKey={\n        chatSubmitKeyInfo?.id === submitId ? undefined : chatSubmitKeyInfo?.key\n      }\n      onSubmitChange={() => {\n        setSynchronizedMessage('');\n        if (isSynchronous) {\n          setChatSubmitKeyInfo({\n            id: submitId,\n            key: new Date().toString(),\n          });\n        }\n      }}\n    />\n  );\n};\n\nexport default EndpointLLMChatCard;\n","import Flex from '../Flex';\nimport EndpointLLMChatCard from './EndpointLLMChatCard';\nimport { LLMPlaygroundPageQuery } from './__generated__/LLMPlaygroundPageQuery.graphql';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useDynamicList } from 'ahooks';\nimport { Button, Card, Skeleton, Switch, theme, Typography } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface LLMPlaygroundPageProps {}\n\nconst LLMPlaygroundPage: React.FC<LLMPlaygroundPageProps> = ({ ...props }) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  // Set the initial list to have two items\n  const { list, remove, getKey, push } = useDynamicList(['0', '1']);\n\n  const [isSynchronous, setSynchronous] = useState(false);\n\n  const { endpoint_list } = useLazyLoadQuery<LLMPlaygroundPageQuery>(\n    graphql`\n      query LLMPlaygroundPageQuery {\n        endpoint_list(limit: 1, offset: 0) {\n          items {\n            ...EndpointLLMChatCard_endpoint\n          }\n        }\n      }\n    `,\n    {},\n  );\n  return (\n    <>\n      <Flex direction=\"column\" align=\"stretch\">\n        <Flex\n          direction=\"row\"\n          justify=\"between\"\n          wrap=\"wrap\"\n          gap={'xs'}\n          style={{\n            padding: token.paddingContentVertical,\n            paddingLeft: token.paddingContentHorizontalSM,\n            paddingRight: token.paddingContentHorizontalSM,\n          }}\n        >\n          <Flex direction=\"column\" align=\"start\">\n            <Typography.Text style={{ margin: 0, padding: 0 }}>\n              LLM Playground\n            </Typography.Text>\n          </Flex>\n          <Flex\n            direction=\"row\"\n            gap={'xs'}\n            wrap=\"wrap\"\n            style={{ flexShrink: 1 }}\n          >\n            <Flex gap={'xs'}>\n              <Typography.Text type=\"secondary\">\n                {t('chatui.SyncInput')}\n              </Typography.Text>\n              <Switch\n                value={isSynchronous}\n                onClick={(v) => {\n                  setSynchronous(v);\n                }}\n              />\n              <Button\n                onClick={() => {\n                  push(new Date().toString());\n                }}\n                icon={<PlusOutlined />}\n              />\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          gap={'xs'}\n          style={{\n            margin: token.margin,\n            marginTop: 0,\n            overflow: 'auto',\n            height: 'calc(100vh - 215px)',\n          }}\n          align=\"stretch\"\n        >\n          {_.map(list, (__, index) => (\n            <Suspense\n              fallback={\n                <Card style={{ flex: 1 }}>\n                  <Skeleton active />\n                </Card>\n              }\n              key={getKey(index)}\n            >\n              <EndpointLLMChatCard\n                defaultEndpoint={endpoint_list?.items?.[0] || undefined}\n                key={getKey(index)}\n                style={{ flex: 1 }}\n                onRequestClose={() => {\n                  remove(index);\n                }}\n                closable={list.length > 1}\n                isSynchronous={isSynchronous}\n              />\n            </Suspense>\n          ))}\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default LLMPlaygroundPage;\n","/**\n * @generated SignedSource<<ae4d7a41def0458f1871a818801cca09>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointLLMChatCard_endpoint$data = {\n  readonly endpoint_id: string | null | undefined;\n  readonly url: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointLLMChatCard_endpoint\";\n};\nexport type EndpointLLMChatCard_endpoint$key = {\n  readonly \" $data\"?: EndpointLLMChatCard_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointLLMChatCard_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"url\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"d5fbaab35efda649f9f7847ee51028b6\";\n\nexport default node;\n","/**\n * @generated SignedSource<<4d2005c7a2f6f0738c70e26c0c040a56>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type LLMPlaygroundPageQuery$variables = Record<PropertyKey, never>;\nexport type LLMPlaygroundPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointLLMChatCard_endpoint\">;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type LLMPlaygroundPageQuery = {\n  response: LLMPlaygroundPageQuery$data;\n  variables: LLMPlaygroundPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 1\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"offset\",\n    \"value\": 0\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"LLMPlaygroundPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointLLMChatCard_endpoint\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"endpoint_list(limit:1,offset:0)\"\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"LLMPlaygroundPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"endpoint_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"url\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"endpoint_list(limit:1,offset:0)\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"54bc258ef687e79f7de52ce23fdff394\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"LLMPlaygroundPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query LLMPlaygroundPageQuery {\\n  endpoint_list(limit: 1, offset: 0) {\\n    items {\\n      ...EndpointLLMChatCard_endpoint\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointLLMChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b72a92e9309dc6b18f2a791e535ea05b\";\n\nexport default node;\n","// import { offset_to_cursor } from \"../helper\";\nimport { LazyLoadQueryOptions } from '../helper/types';\nimport { SorterResult } from 'antd/lib/table/interface';\nimport _ from 'lodash';\nimport { useState } from 'react';\nimport {\n  fetchQuery,\n  GraphQLTaggedNode,\n  useRelayEnvironment,\n} from 'react-relay';\nimport {\n  ArrayParam,\n  NumberParam,\n  ObjectParam,\n  StringParam,\n  useQueryParams,\n} from 'use-query-params';\n\nexport type SorterInterface = Pick<SorterResult<any>, 'field' | 'order'>;\n\nexport const antdSorterResultToOrder = (\n  sorter: SorterInterface | SorterInterface[],\n) => {\n  const sorterArray = _.castArray(sorter).filter((s) => s.field);\n\n  return _.filter(\n    _.map(sorterArray, (s) =>\n      _.isNull(s.order)\n        ? undefined\n        : `${_.snakeCase(s.field as string).toUpperCase()}_${\n            s.order === 'ascend' ? 'ASC' : 'DESC'\n          }`,\n    ),\n  );\n};\n\nexport const orderToAntdSorterResult = (order: string[]) => {\n  return _.map(order, (o) => {\n    const names = o.split('_');\n    const orderKey = names.pop();\n    const field = _.camelCase(names.join('_'));\n    return {\n      field,\n      order: (orderKey === 'ASC' ? 'ascend' : 'descend') as\n        | 'ascend'\n        | 'descend'\n        | null,\n    };\n  });\n};\n\nexport const getSortOrderByName = (order: string[], name: string) => {\n  const sorterResult = orderToAntdSorterResult(order);\n  const sorter = _.find(sorterResult, (s) => s.field === name);\n  return sorter?.order;\n};\n\nexport const useRelayPaginationQueryOptions = <\n  // Q, N,\n  O,\n  F,\n>({\n  query,\n  defaultVariables,\n  getVariables = ({ page, pageSize, order, filter }) => {\n    return {\n      first: pageSize,\n      //   after: page > 1 ? offset_to_cursor((page - 1) * pageSize - 1) : undefined,\n      order: order,\n      filter: filter,\n    };\n  },\n}: {\n  query: GraphQLTaggedNode;\n  defaultVariables: {\n    page: number;\n    pageSize: number;\n    order: O[];\n    filter?: F;\n    // sorter?: SorterResult<N>[];\n  };\n  getVariables?: (params: {\n    page: number;\n    pageSize: number;\n    order: O[];\n    filter?: F;\n  }) => any;\n}) => {\n  const [isPending, setIsPending] = useState(false);\n\n  const [params, setParams] = useQueryParams({\n    page: NumberParam,\n    pageSize: NumberParam,\n    order: ArrayParam,\n    filter: ObjectParam,\n  });\n\n  const page = params.page || defaultVariables.page;\n  const pageSize = params.pageSize || defaultVariables.pageSize;\n  //TODO: not use as\n  const order = (params.order || defaultVariables.order) as O[];\n  const filter = (params.filter || defaultVariables.filter) as F;\n\n  const relayEnvironment = useRelayEnvironment();\n\n  const [refreshedQueryOptions, setRefreshedQueryOptions] =\n    useState<LazyLoadQueryOptions>({\n      fetchKey: 0,\n      fetchPolicy: 'store-and-network',\n    });\n\n  const prevLocationRef = window.location.href;\n  const refresh = (\n    newPage: number = defaultVariables.page,\n    newPageSize: number = defaultVariables.pageSize,\n    // sorter: SorterResult<N>[],\n    newOrder: O[] = defaultVariables.order,\n    newFilter: F | undefined = defaultVariables.filter,\n    options?: {\n      withoutPendingStatus: boolean;\n    },\n  ) => {\n    if (options?.withoutPendingStatus !== true) {\n      setIsPending(true);\n    }\n    fetchQuery<any>(\n      relayEnvironment,\n      query,\n      getVariables({\n        page: newPage,\n        pageSize: newPageSize,\n        order: newOrder,\n        filter: newFilter,\n      }),\n    ).subscribe({\n      complete: () => {\n        if (window.location.href !== prevLocationRef) return;\n        setIsPending(false);\n        setParams({\n          page: newPage,\n          pageSize: newPageSize,\n          // eslint-disable-next-line\n          order: newOrder as [], // TODO: not use as []\n          // eslint-disable-next-line\n          filter: newFilter as {}, // TODO: not use as {}\n        });\n        setRefreshedQueryOptions((prev) => ({\n          ...prev,\n          fetchPolicy: 'store-only',\n          fetchKey: new Date().toISOString(),\n        }));\n      },\n    });\n  };\n\n  const variables = getVariables({\n    page,\n    pageSize,\n    order,\n    filter,\n  });\n\n  return [\n    {\n      refreshedQueryOptions,\n      page,\n      pageSize,\n      order,\n      isPending,\n      variables,\n      filter,\n      //   after: page > 1 ? offset_to_cursor((page - 1) * pageSize - 1) : undefined,\n    },\n    {\n      refresh,\n    },\n  ] as const;\n};\n\nexport const useBAIPaginationQueryOptions = ({\n  query,\n  defaultVariables,\n  getVariables = ({ page, pageSize, order, filter }) => {\n    return {\n      limit: pageSize,\n      offset: page > 1 ? (page - 1) * pageSize : 0,\n      filter: filter,\n      order: order,\n    };\n  },\n}: {\n  query: GraphQLTaggedNode;\n  defaultVariables: {\n    page: number;\n    pageSize: number;\n    order?: string;\n    filter?: string;\n  };\n  getVariables?: (params: {\n    page: number;\n    pageSize: number;\n    order?: string;\n    filter?: string;\n  }) => any;\n}) => {\n  const [params, setParams] = useQueryParams({\n    page: NumberParam,\n    pageSize: NumberParam,\n    filter: StringParam,\n    order: StringParam,\n  });\n  const page = params.page || defaultVariables.page;\n  const pageSize = params.pageSize || defaultVariables.pageSize;\n  const order = params.order || defaultVariables.order;\n  const filter = params.filter || defaultVariables.filter;\n\n  const relayEnvironment = useRelayEnvironment();\n\n  const [refreshedQueryOptions, setRefreshedQueryOptions] =\n    useState<LazyLoadQueryOptions>({\n      fetchKey: 0,\n      fetchPolicy: 'store-and-network',\n    });\n\n  const prevLocationRef = window.location.href;\n  const refresh = (\n    newPage: number = defaultVariables.page,\n    newPageSize: number = defaultVariables.pageSize,\n    newOrder: string | undefined = defaultVariables.order,\n    newFilter: string | undefined = defaultVariables.filter,\n  ) => {\n    fetchQuery<any>(\n      relayEnvironment,\n      query,\n      getVariables({\n        page: newPage,\n        pageSize: newPageSize,\n        order: newOrder,\n        filter: newFilter,\n      }),\n    ).subscribe({\n      complete: () => {\n        if (window.location.href !== prevLocationRef) return;\n        setParams({\n          page: newPage,\n          pageSize: newPageSize,\n          order: newOrder,\n          filter: newFilter,\n        });\n        setRefreshedQueryOptions((prev) => ({\n          ...prev,\n          fetchPolicy: 'store-only',\n          fetchKey: new Date().toISOString(),\n        }));\n      },\n    });\n  };\n\n  const variables = getVariables({\n    page,\n    pageSize,\n    order,\n    filter,\n  });\n\n  return [\n    {\n      refreshedQueryOptions,\n      page,\n      pageSize,\n      order,\n      variables,\n      filter,\n    },\n    {\n      refresh,\n    },\n  ] as const;\n};\n\ninterface BAIPaginationOption {\n  limit: number;\n  offset: number;\n  // filter?: string;\n  // order?: string;\n}\ninterface AntdBasicPaginationOption {\n  pageSize: number;\n  current: number;\n}\n\ninterface InitialPaginationOption\n  extends AntdBasicPaginationOption,\n    Omit<BAIPaginationOption, 'limit' | 'offset'> {}\nexport const useBAIPaginationOptionState = (\n  initialOptions: InitialPaginationOption,\n): {\n  baiPaginationOption: BAIPaginationOption;\n  tablePaginationOption: AntdBasicPaginationOption;\n  setTablePaginationOption: (pagination: AntdBasicPaginationOption) => void;\n} => {\n  const [options, setOptions] =\n    useState<AntdBasicPaginationOption>(initialOptions);\n  return {\n    baiPaginationOption: {\n      limit: options.pageSize,\n      offset:\n        options.current > 1 ? (options.current - 1) * options.pageSize : 0,\n    },\n    tablePaginationOption: {\n      pageSize: options.pageSize,\n      current: options.current,\n    },\n    setTablePaginationOption: (pagination) => {\n      if (!_.isEqual(pagination, options)) {\n        setOptions((current) => ({\n          ...current,\n          ...pagination,\n        }));\n      }\n    },\n  };\n};\n","import { __read } from \"tslib\";\nimport { useCallback, useState } from 'react';\nvar useUpdate = function () {\n  var _a = __read(useState({}), 2),\n    setState = _a[1];\n  return useCallback(function () {\n    return setState({});\n  }, []);\n};\nexport default useUpdate;","import { __read, __spreadArray } from \"tslib\";\nimport { useMemo, useRef } from 'react';\nimport { isFunction } from '../utils';\nimport useMemoizedFn from '../useMemoizedFn';\nimport useUpdate from '../useUpdate';\nfunction useControllableValue(props, options) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  var defaultValue = options.defaultValue,\n    _a = options.defaultValuePropName,\n    defaultValuePropName = _a === void 0 ? 'defaultValue' : _a,\n    _b = options.valuePropName,\n    valuePropName = _b === void 0 ? 'value' : _b,\n    _c = options.trigger,\n    trigger = _c === void 0 ? 'onChange' : _c;\n  var value = props[valuePropName];\n  var isControlled = props.hasOwnProperty(valuePropName);\n  var initialValue = useMemo(function () {\n    if (isControlled) {\n      return value;\n    }\n    if (props.hasOwnProperty(defaultValuePropName)) {\n      return props[defaultValuePropName];\n    }\n    return defaultValue;\n  }, []);\n  var stateRef = useRef(initialValue);\n  if (isControlled) {\n    stateRef.current = value;\n  }\n  var update = useUpdate();\n  function setState(v) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var r = isFunction(v) ? v(stateRef.current) : v;\n    if (!isControlled) {\n      stateRef.current = r;\n      update();\n    }\n    if (props[trigger]) {\n      props[trigger].apply(props, __spreadArray([r], __read(args), false));\n    }\n  }\n  return [stateRef.current, useMemoizedFn(setState)];\n}\nexport default useControllableValue;","import { genStyleHooks } from '../../theme/internal';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    zIndexPopup,\n    colorText,\n    colorWarning,\n    marginXXS,\n    marginXS,\n    fontSize,\n    fontWeightStrong,\n    colorTextHeading\n  } = token;\n  return {\n    [componentCls]: {\n      zIndex: zIndexPopup,\n      [`&${antCls}-popover`]: {\n        fontSize\n      },\n      [`${componentCls}-message`]: {\n        marginBottom: marginXS,\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'start',\n        [`> ${componentCls}-message-icon ${iconCls}`]: {\n          color: colorWarning,\n          fontSize,\n          lineHeight: 1,\n          marginInlineEnd: marginXS\n        },\n        [`${componentCls}-title`]: {\n          fontWeight: fontWeightStrong,\n          color: colorTextHeading,\n          '&:only-child': {\n            fontWeight: 'normal'\n          }\n        },\n        [`${componentCls}-description`]: {\n          marginTop: marginXXS,\n          color: colorText\n        }\n      },\n      [`${componentCls}-buttons`]: {\n        textAlign: 'end',\n        whiteSpace: 'nowrap',\n        button: {\n          marginInlineStart: marginXS\n        }\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    zIndexPopupBase\n  } = token;\n  return {\n    zIndexPopup: zIndexPopupBase + 60\n  };\n};\nexport default genStyleHooks('Popconfirm', token => genBaseStyle(token), prepareComponentToken, {\n  resetStyle: false\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport ActionButton from '../_util/ActionButton';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/buttonHelpers';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport defaultLocale from '../locale/en_US';\nimport PopoverPurePanel from '../popover/PurePanel';\nimport useStyle from './style';\nexport const Overlay = props => {\n  const {\n    prefixCls,\n    okButtonProps,\n    cancelButtonProps,\n    title,\n    description,\n    cancelText,\n    okText,\n    okType = 'primary',\n    icon = /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n    showCancel = true,\n    close,\n    onConfirm,\n    onCancel,\n    onPopupClick\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const [contextLocale] = useLocale('Popconfirm', defaultLocale.Popconfirm);\n  const titleNode = getRenderPropValue(title);\n  const descriptionNode = getRenderPropValue(description);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-inner-content`,\n    onClick: onPopupClick\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-message`\n  }, icon && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-message-icon`\n  }, icon), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-message-text`\n  }, titleNode && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-title`\n  }, titleNode), descriptionNode && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-description`\n  }, descriptionNode))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-buttons`\n  }, showCancel && ( /*#__PURE__*/React.createElement(Button, Object.assign({\n    onClick: onCancel,\n    size: \"small\"\n  }, cancelButtonProps), cancelText || (contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.cancelText))), /*#__PURE__*/React.createElement(ActionButton, {\n    buttonProps: Object.assign(Object.assign({\n      size: 'small'\n    }, convertLegacyProps(okType)), okButtonProps),\n    actionFn: onConfirm,\n    close: close,\n    prefixCls: getPrefixCls('btn'),\n    quitOnNullishReturnValue: true,\n    emitEvent: true\n  }, okText || (contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.okText))));\n};\nconst PurePanel = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      placement,\n      className,\n      style\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"placement\", \"className\", \"style\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('popconfirm', customizePrefixCls);\n  const [wrapCSSVar] = useStyle(prefixCls);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(PopoverPurePanel, {\n    placement: placement,\n    className: classNames(prefixCls, className),\n    style: style,\n    content: /*#__PURE__*/React.createElement(Overlay, Object.assign({\n      prefixCls: prefixCls\n    }, restProps))\n  }));\n};\nexport default PurePanel;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport PurePanel, { Overlay } from './PurePanel';\nimport useStyle from './style';\nconst InternalPopconfirm = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n      prefixCls: customizePrefixCls,\n      placement = 'top',\n      trigger = 'click',\n      okType = 'primary',\n      icon = /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n      children,\n      overlayClassName,\n      onOpenChange,\n      onVisibleChange\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"placement\", \"trigger\", \"okType\", \"icon\", \"children\", \"overlayClassName\", \"onOpenChange\", \"onVisibleChange\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const [open, setOpen] = useMergedState(false, {\n    value: (_a = props.open) !== null && _a !== void 0 ? _a : props.visible,\n    defaultValue: (_b = props.defaultOpen) !== null && _b !== void 0 ? _b : props.defaultVisible\n  });\n  const settingOpen = (value, e) => {\n    setOpen(value, true);\n    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(value);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(value, e);\n  };\n  const close = e => {\n    settingOpen(false, e);\n  };\n  const onConfirm = e => {\n    var _a;\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(this, e);\n  };\n  const onCancel = e => {\n    var _a;\n    settingOpen(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(this, e);\n  };\n  const onInternalOpenChange = (value, e) => {\n    const {\n      disabled = false\n    } = props;\n    if (disabled) {\n      return;\n    }\n    settingOpen(value, e);\n  };\n  const prefixCls = getPrefixCls('popconfirm', customizePrefixCls);\n  const overlayClassNames = classNames(prefixCls, overlayClassName);\n  const [wrapCSSVar] = useStyle(prefixCls);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(Popover, Object.assign({}, omit(restProps, ['title']), {\n    trigger: trigger,\n    placement: placement,\n    onOpenChange: onInternalOpenChange,\n    open: open,\n    ref: ref,\n    overlayClassName: overlayClassNames,\n    content: /*#__PURE__*/React.createElement(Overlay, Object.assign({\n      okType: okType,\n      icon: icon\n    }, props, {\n      prefixCls: prefixCls,\n      close: close,\n      onConfirm: onConfirm,\n      onCancel: onCancel\n    })),\n    \"data-popover-inject\": true\n  }), children));\n});\nconst Popconfirm = InternalPopconfirm;\n// We don't care debug panel\n/* istanbul ignore next */\nPopconfirm._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  Popconfirm.displayName = 'Popconfirm';\n}\nexport default Popconfirm;"],"names":["node","v0","v1","v2","v3","v4","v5","v6","v7","hash","Compact","Space","_ref","style","loading","autoFocus","onStop","onSend","inputProps","inputRef","useRef","useEffect","current","focus","_jsxs","width","children","_jsx","Input","ref","onPressEnter","e","Button","htmlType","icon","SquareIcon","SendIcon","onClick","models","allowCustomModel","selectProps","t","useTranslation","Select","placeholder","fontWeight","showSearch","options","_","label","value","groupBy","mapValues","ms","m","name","map","v","k","popupMatchSelectWidth","copyable","props","isCopied","setIsCopied","useState","timeout","setTimeout","clearTimeout","Tooltip","title","open","undefined","CopyToClipboard","text","onCopy","async","CheckIcon","CopyIcon","Text","Typography","ChatMessageContent","Markdown","components","code","className","rest","match","exec","content","String","replace","Card","type","size","extra","CopyButton","styles","body","padding","header","margin","CodeBlock","PreTag","language","oneLight","wrapLongLines","wrapLines","X","_ref2","SyntaxHighlighter","React","dayjs","localizedFormat","relativeTime","message","placement","containerStyle","enableExtraHover","isStreaming","token","theme","useToken","isHovered","setIsHovered","throttledMessageContent","useThrottle","wait","Flex","direction","justify","align","marginLeft","marginRight","gap","onMouseEnter","onMouseLeave","role","Avatar","fontSize","fontSizeHeading3","wrap","flex","borderRadius","borderColor","colorBorderSecondary","borderWidth","lineWidth","paddingTop","paddingBottom","backgroundColor","colorBgContainer","colorBgContainerDisabled","fontSizeSM","opacity","transition","transitionDelay","autoScroll","atBottom","lastMessageContent","onScrollToBottom","useEventNotStable","ArrowDownIcon","shape","_messages","messages","virtuosoRef","setAtBottom","overscan","window","innerHeight","height","Virtuoso","atBottomStateChange","atBottomThreshold","computeItemKey","item","id","data","followOutput","initialTopMostItemIndex","length","itemContent","index","ChatMessage","paddingLeft","paddingMD","paddingRight","position","right","transform","bottom","marginSM","ScrollBottomHandlerButton","virtuoso","scrollToIndex","behavior","_models$","baseURL","headers","credentials","apiKey","fetchOnClient","alert","leftExtra","inputMessage","submitKey","onInputChange","onSubmitChange","cardProps","modelId","setModelId","useControllableValue","valuePropName","trigger","defaultValue","customModelFormRef","error","input","setInput","handleInputChange","stop","isLoading","append","setMessages","useChat","api","streamMode","fetch","init","_customModelFormRef$c","_customModelFormRef$c2","_customModelFormRef$c3","JSON","parse","provider","createOpenAI","getFieldValue","streamText","abortSignal","signal","model","then","result","toAIStreamResponse","items","key","danger","DeleteOutlined","bordered","ModelSelect","onChange","Dropdown","menu","preventDefault","MoreOutlined","color","colorTextSecondary","sizeMS","display","flexDirection","colorFillQuaternary","actions","paddingContentHorizontal","zIndex","ChatInput","target","paddingSM","paddingContentHorizontalLG","Form","layout","requiredMark","initialValues","marginBottom","Item","rules","required","responseBody","Alert","showIcon","closable","VirtualChatMessageList","fetchKey","baiPaginationOption","useBAIPaginationOptionState","pageSize","endpoint_list","useLazyLoadQuery","_EndpointSelectQuery","require","limit","offset","controllableValue","setControllableValue","optionFilterProp","endpoint_id","endpoint","option","_$castArray","synchronizedMessageState","atom","chatSubmitKeyInfoState","_endpoint$url2","_modelsResult$data$0$","_modelsResult$data","_modelsResult$data$","basePath","defaultEndpoint","isSynchronous","onRequestClose","onModelChange","endpointFrgmt","setEndpointFrgmt","useFragment","_EndpointLLMChatCard_endpoint","promisingEndpoint","setPromisingEndpoint","synchronizedMessage","setSynchronizedMessage","useAtom","chatSubmitKeyInfo","setChatSubmitKeyInfo","modelsResult","useSuspenseTanQuery","queryKey","queryFn","_endpoint$url","url","URL","toString","res","json","catch","Promise","resolve","submitId","useId","LLMChatCard","EndpointSelect","startTransition","Popconfirm","description","onConfirm","okText","okButtonProps","CloseOutlined","colorIcon","Date","list","remove","getKey","push","useDynamicList","setSynchronous","_LLMPlaygroundPageQuery","_Fragment","paddingContentVertical","paddingContentHorizontalSM","flexShrink","Switch","PlusOutlined","marginTop","overflow","__","_endpoint_list$items","Suspense","fallback","Skeleton","active","EndpointLLMChatCard","initialOptions","setOptions","tablePaginationOption","setTablePaginationOption","pagination","setState","__read","useCallback","_a","defaultValuePropName","_b","_c","isControlled","hasOwnProperty","initialValue","useMemo","stateRef","update","useUpdate","useMemoizedFn","args","_i","arguments","r","isFunction","apply","__spreadArray","genStyleHooks","componentCls","iconCls","antCls","zIndexPopup","colorText","colorWarning","marginXXS","marginXS","fontWeightStrong","colorTextHeading","flexWrap","alignItems","lineHeight","marginInlineEnd","textAlign","whiteSpace","button","marginInlineStart","genBaseStyle","zIndexPopupBase","resetStyle","__rest","s","p","Object","prototype","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","Overlay","prefixCls","cancelButtonProps","cancelText","okType","ExclamationCircleFilled","showCancel","close","onCancel","onPopupClick","getPrefixCls","ConfigContext","contextLocale","useLocale","defaultLocale","titleNode","getRenderPropValue","descriptionNode","assign","ActionButton","buttonProps","convertLegacyProps","actionFn","quitOnNullishReturnValue","emitEvent","customizePrefixCls","restProps","wrapCSSVar","useStyle","PopoverPurePanel","classNames","overlayClassName","onOpenChange","onVisibleChange","setOpen","useMergedState","visible","defaultOpen","defaultVisible","settingOpen","overlayClassNames","Popover","omit","onInternalOpenChange","disabled","_InternalPanelDoNotUseOrYouWillBeFired","PurePanel"],"sourceRoot":""}