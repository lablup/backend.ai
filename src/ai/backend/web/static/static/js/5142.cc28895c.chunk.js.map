{"version":3,"file":"static/js/5142.cc28895c.chunk.js","mappings":"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","sources":["components/BAIText.tsx","__generated__/LegacyFolderExplorerQuery.graphql.ts","components/FolderExplorerActions.tsx","__generated__/FolderExplorerHeaderFragment.graphql.ts","__generated__/VFolderNameTitleNodeFragment.graphql.ts","components/VFolderNameTitle.tsx","components/FolderExplorerHeader.tsx","__generated__/VFolderNodeDescriptionPermissionRefreshQuery.graphql.ts","__generated__/VFolderNodeDescriptionFragment.graphql.ts","__generated__/useVirtualFolderNodePathFragment.graphql.ts","hooks/useVirtualFolderNodePath.ts","components/VirtualFolderNodeItems/VirtualFolderPath.tsx","components/VFolderNodeDescription.tsx","components/LegacyFolderExplorer.tsx"],"sourcesContent":["import { Typography } from 'antd';\nimport type { TextProps as AntdTextProps } from 'antd/es/typography/Text';\nimport React from 'react';\n\nexport interface BAITextProps extends AntdTextProps {\n  monospace?: boolean;\n}\n\nconst BAIText: React.FC<BAITextProps> = ({\n  type,\n  style,\n  monospace,\n  children,\n  ...restProps\n}) => {\n  // If monospace prop is true, apply monospace font styling\n  if (monospace) {\n    return (\n      <Typography.Text\n        type={type}\n        {...restProps}\n        style={{\n          fontFamily: 'monospace',\n          ...style,\n        }}\n      >\n        {children}\n      </Typography.Text>\n    );\n  }\n\n  // For non-monospace text, pass all props directly to antd Text\n  return (\n    <Typography.Text type={type} style={style} {...restProps}>\n      {children}\n    </Typography.Text>\n  );\n};\n\nexport default BAIText;\n","/**\n * @generated SignedSource<<008f627c9bca318109876e218888b675>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type LegacyFolderExplorerQuery$variables = {\n  vfolderGlobalId: string;\n};\nexport type LegacyFolderExplorerQuery$data = {\n  readonly vfolder_node: {\n    readonly id: string;\n    readonly permission: string | null | undefined;\n    readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n    readonly unmanaged_path: string | null | undefined;\n    readonly user: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"FolderExplorerHeaderFragment\" | \"VFolderNameTitleNodeFragment\" | \"VFolderNodeDescriptionFragment\">;\n  } | null | undefined;\n};\nexport type LegacyFolderExplorerQuery = {\n  response: LegacyFolderExplorerQuery$data;\n  variables: LegacyFolderExplorerQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"vfolderGlobalId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"vfolderGlobalId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"user\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permission\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permissions\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"unmanaged_path\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"LegacyFolderExplorerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"FolderExplorerHeaderFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"VFolderNodeDescriptionFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"VFolderNameTitleNodeFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"LegacyFolderExplorerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"host\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"user_email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"group\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"group_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"creator\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage_mode\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"ownership_type\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_files\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_size\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"created_at\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"last_used\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"num_files\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"cur_size\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"cloneable\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"status\",\n            \"storageKey\": null\n          },\n          (v5/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"70bc60e3664edb7e845206f9f43f7a15\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"LegacyFolderExplorerQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query LegacyFolderExplorerQuery(\\n  $vfolderGlobalId: String!\\n) {\\n  vfolder_node(id: $vfolderGlobalId) @since(version: \\\"24.03.4\\\") {\\n    id\\n    user\\n    permission\\n    permissions\\n    unmanaged_path @since(version: \\\"25.04.0\\\")\\n    ...FolderExplorerHeaderFragment\\n    ...VFolderNodeDescriptionFragment\\n    ...VFolderNameTitleNodeFragment\\n  }\\n}\\n\\nfragment FolderExplorerHeaderFragment on VirtualFolderNode {\\n  id\\n  user\\n  permission\\n  unmanaged_path @since(version: \\\"25.04.0\\\")\\n  ...VFolderNameTitleNodeFragment\\n}\\n\\nfragment VFolderNameTitleNodeFragment on VirtualFolderNode {\\n  name\\n}\\n\\nfragment VFolderNodeDescriptionFragment on VirtualFolderNode {\\n  id\\n  host\\n  quota_scope_id\\n  user\\n  user_email\\n  group\\n  group_name\\n  creator\\n  usage_mode\\n  permission\\n  ownership_type\\n  max_files\\n  max_size\\n  created_at\\n  last_used\\n  num_files\\n  cur_size\\n  cloneable\\n  status\\n  permissions @since(version: \\\"24.09.0\\\")\\n  unmanaged_path @since(version: \\\"25.04.0\\\")\\n  ...VFolderPermissionCellFragment\\n  ...useVirtualFolderNodePathFragment\\n}\\n\\nfragment VFolderPermissionCellFragment on VirtualFolderNode {\\n  permissions\\n}\\n\\nfragment useVirtualFolderNodePathFragment on VirtualFolderNode {\\n  id\\n  host\\n  quota_scope_id\\n  user\\n  user_email\\n  group\\n  group_name\\n  creator\\n  usage_mode\\n  permission\\n  ownership_type\\n  max_files\\n  max_size\\n  created_at\\n  last_used\\n  num_files\\n  cur_size\\n  cloneable\\n  status\\n  permissions @since(version: \\\"24.09.0\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"fac0b3f862cf0dd7c3eed34c49dcb48f\";\n\nexport default node;\n","import { FolderExplorerElement } from './LegacyFolderExplorer';\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FolderAddOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\nimport { Button, Dropdown, Tooltip, theme } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport React, { RefObject } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FolderExplorerActionsProps {\n  isSelected: boolean;\n  isWritable: boolean;\n  folderExplorerRef: RefObject<FolderExplorerElement | null>;\n  size?: 'small' | 'default';\n}\n\nconst FolderExplorerActions: React.FC<FolderExplorerActionsProps> = ({\n  isSelected,\n  isWritable,\n  folderExplorerRef,\n  size = 'default',\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n\n  return (\n    <BAIFlex\n      justify=\"end\"\n      gap={token.marginSM}\n      style={{\n        right: 0,\n      }}\n    >\n      <Tooltip title={size === 'small' && t('button.Delete')}>\n        <Button\n          danger\n          disabled={!isSelected || !isWritable}\n          icon={<DeleteOutlined />}\n          onClick={() => {\n            folderExplorerRef.current?._openDeleteMultipleFileDialog();\n          }}\n        >\n          {size !== 'small' && t('button.Delete')}\n        </Button>\n      </Tooltip>\n      <Tooltip title={size === 'small' && t('button.Create')}>\n        <Button\n          disabled={!isWritable}\n          icon={<FileAddOutlined />}\n          onClick={() => {\n            folderExplorerRef.current?.openMkdirDialog();\n          }}\n        >\n          {size !== 'small' && t('button.Create')}\n        </Button>\n      </Tooltip>\n      <Dropdown\n        disabled={!isWritable}\n        menu={{\n          items: [\n            {\n              key: 'upload files',\n              label: t('data.explorer.UploadFiles'),\n              icon: <FileAddOutlined />,\n              onClick: () => {\n                folderExplorerRef.current?.handleUpload('file');\n              },\n            },\n            {\n              key: 'upload folder',\n              label: t('data.explorer.UploadFolder'),\n              icon: <FolderAddOutlined />,\n              onClick: () => {\n                folderExplorerRef.current?.handleUpload('folder');\n              },\n            },\n          ],\n        }}\n      >\n        <Tooltip title={size === 'small' && t('button.Upload')}>\n          <Button disabled={!isWritable} icon={<UploadOutlined />}>\n            {size !== 'small' && t('button.Upload')}\n          </Button>\n        </Tooltip>\n      </Dropdown>\n    </BAIFlex>\n  );\n};\n\nexport default FolderExplorerActions;\n","/**\n * @generated SignedSource<<8d1493f4510cf23db8b9cf1f125b758c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type FolderExplorerHeaderFragment$data = {\n  readonly id: string;\n  readonly permission: string | null | undefined;\n  readonly unmanaged_path: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderNameTitleNodeFragment\">;\n  readonly \" $fragmentType\": \"FolderExplorerHeaderFragment\";\n};\nexport type FolderExplorerHeaderFragment$key = {\n  readonly \" $data\"?: FolderExplorerHeaderFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"FolderExplorerHeaderFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"FolderExplorerHeaderFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"unmanaged_path\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderNameTitleNodeFragment\"\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"c06cb69b94eff82edbf4132158807449\";\n\nexport default node;\n","/**\n * @generated SignedSource<<9e3f4eb18a8d485a4e90592e0611445c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type VFolderNameTitleNodeFragment$data = {\n  readonly name: string | null | undefined;\n  readonly \" $fragmentType\": \"VFolderNameTitleNodeFragment\";\n};\nexport type VFolderNameTitleNodeFragment$key = {\n  readonly \" $data\"?: VFolderNameTitleNodeFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderNameTitleNodeFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"VFolderNameTitleNodeFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"0601031289a33a9a13a254362a2ee1ab\";\n\nexport default node;\n","import { VFolderNameTitleNodeFragment$key } from '../__generated__/VFolderNameTitleNodeFragment.graphql';\nimport { theme, Tooltip, Typography } from 'antd';\nimport { graphql, useFragment } from 'react-relay';\n\nconst VFolderNameTitle: React.FC<{\n  vfolderNodeFrgmt?: VFolderNameTitleNodeFragment$key | null;\n}> = ({ vfolderNodeFrgmt, ...props }) => {\n  const { token } = theme.useToken();\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment VFolderNameTitleNodeFragment on VirtualFolderNode {\n        name\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  return (\n    <Tooltip title={vfolderNode?.name} {...props}>\n      <Typography.Title\n        level={3}\n        style={{ marginTop: token.marginSM }}\n        ellipsis\n      >\n        {vfolderNode?.name}\n      </Typography.Title>\n    </Tooltip>\n  );\n};\n\nexport default VFolderNameTitle;\n","import { FolderExplorerHeaderFragment$key } from '../__generated__/FolderExplorerHeaderFragment.graphql';\nimport VFolderNameTitle from './VFolderNameTitle';\nimport { Button, Tooltip, Image, Skeleton, Grid, theme } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport React, { LegacyRef, Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useFragment } from 'react-relay';\n\ninterface FolderExplorerHeaderProps {\n  vfolderNodeFrgmt?: FolderExplorerHeaderFragment$key | null;\n  folderExplorerRef: LegacyRef<HTMLDivElement>;\n}\n\nconst FolderExplorerHeader: React.FC<FolderExplorerHeaderProps> = ({\n  vfolderNodeFrgmt,\n  folderExplorerRef,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { lg } = Grid.useBreakpoint();\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment FolderExplorerHeaderFragment on VirtualFolderNode {\n        id\n        user\n        permission\n        unmanaged_path @since(version: \"25.04.0\")\n        ...VFolderNameTitleNodeFragment\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  return (\n    <BAIFlex\n      data-testid=\"folder-explorer-header\"\n      justify=\"between\"\n      gap={token.marginMD}\n      style={{ width: '100%' }}\n    >\n      <BAIFlex\n        data-testid=\"folder-explorer-title\"\n        gap={token.marginMD}\n        style={{ flex: 1 }}\n      >\n        <Suspense fallback={<Skeleton.Input active />}>\n          <VFolderNameTitle vfolderNodeFrgmt={vfolderNode} />\n        </Suspense>\n      </BAIFlex>\n      <BAIFlex\n        data-testid=\"folder-explorer-actions\"\n        justify=\"end\"\n        gap={token.marginSM}\n        style={{\n          flex: lg ? 2 : 1,\n        }}\n      >\n        {!vfolderNode?.unmanaged_path ? (\n          <>\n            <Tooltip title={!lg && t('data.explorer.ExecuteFileBrowser')}>\n              <Button\n                icon={\n                  <Image\n                    width=\"18px\"\n                    src=\"/resources/icons/filebrowser.svg\"\n                    alt=\"File Browser\"\n                    preview={false}\n                  />\n                }\n                onClick={() =>\n                  // @ts-ignore\n                  folderExplorerRef.current?._executeFileBrowser()\n                }\n              >\n                {lg && t('data.explorer.ExecuteFileBrowser')}\n              </Button>\n            </Tooltip>\n            <Tooltip title={!lg && t('data.explorer.RunSSH/SFTPserver')}>\n              <Button\n                icon={\n                  <Image\n                    width=\"18px\"\n                    src=\"/resources/icons/sftp.png\"\n                    alt=\"SSH / SFTP\"\n                    preview={false}\n                  />\n                }\n                onClick={() => {\n                  // @ts-ignore\n                  folderExplorerRef.current?._executeSSHProxyAgent();\n                }}\n              >\n                {lg && t('data.explorer.RunSSH/SFTPserver')}\n              </Button>\n            </Tooltip>\n          </>\n        ) : null}\n      </BAIFlex>\n    </BAIFlex>\n  );\n};\n\nexport default FolderExplorerHeader;\n","/**\n * @generated SignedSource<<b08d2a6eb206a397bad8ea27d9db9ef7>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type VFolderNodeDescriptionPermissionRefreshQuery$variables = {\n  id: string;\n};\nexport type VFolderNodeDescriptionPermissionRefreshQuery$data = {\n  readonly vfolder_node: {\n    readonly permission: string | null | undefined;\n    readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  } | null | undefined;\n};\nexport type VFolderNodeDescriptionPermissionRefreshQuery = {\n  response: VFolderNodeDescriptionPermissionRefreshQuery$data;\n  variables: VFolderNodeDescriptionPermissionRefreshQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permission\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permissions\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3aee063a4b508648c2365ba6c7f0f44a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query VFolderNodeDescriptionPermissionRefreshQuery(\\n  $id: String!\\n) {\\n  vfolder_node(id: $id) {\\n    permission\\n    permissions\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"36063c8300310d9ef6c369b49127a2a2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<462af5f9df0e58aaa2ad869af29774cb>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type VFolderNodeDescriptionFragment$data = {\n  readonly cloneable: boolean | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly creator: string | null | undefined;\n  readonly cur_size: any | null | undefined;\n  readonly group: string | null | undefined;\n  readonly group_name: string | null | undefined;\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly last_used: string | null | undefined;\n  readonly max_files: number | null | undefined;\n  readonly max_size: any | null | undefined;\n  readonly num_files: number | null | undefined;\n  readonly ownership_type: string | null | undefined;\n  readonly permission: string | null | undefined;\n  readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  readonly quota_scope_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly unmanaged_path: string | null | undefined;\n  readonly usage_mode: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderPermissionCellFragment\" | \"useVirtualFolderNodePathFragment\">;\n  readonly \" $fragmentType\": \"VFolderNodeDescriptionFragment\";\n};\nexport type VFolderNodeDescriptionFragment$key = {\n  readonly \" $data\"?: VFolderNodeDescriptionFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderNodeDescriptionFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"VFolderNodeDescriptionFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"creator\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage_mode\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"ownership_type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cur_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cloneable\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permissions\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"unmanaged_path\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderPermissionCellFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"useVirtualFolderNodePathFragment\"\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f4ca4470ea635f85c8c346eed0a5fe8c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7a027844ee7c6caf9ae1cc064636660b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type useVirtualFolderNodePathFragment$data = {\n  readonly cloneable: boolean | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly creator: string | null | undefined;\n  readonly cur_size: any | null | undefined;\n  readonly group: string | null | undefined;\n  readonly group_name: string | null | undefined;\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly last_used: string | null | undefined;\n  readonly max_files: number | null | undefined;\n  readonly max_size: any | null | undefined;\n  readonly num_files: number | null | undefined;\n  readonly ownership_type: string | null | undefined;\n  readonly permission: string | null | undefined;\n  readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  readonly quota_scope_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly usage_mode: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentType\": \"useVirtualFolderNodePathFragment\";\n};\nexport type useVirtualFolderNodePathFragment$key = {\n  readonly \" $data\"?: useVirtualFolderNodePathFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"useVirtualFolderNodePathFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"useVirtualFolderNodePathFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"creator\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage_mode\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"ownership_type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cur_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cloneable\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permissions\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"439221036e87c57ca3ec1ce737e0cdf7\";\n\nexport default node;\n","import { useVirtualFolderNodePathFragment$key } from '../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { toLocalId } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport { graphql, useFragment } from 'react-relay';\n\nexport const useVirtualFolderPath = (\n  vfolderNodeFrgmt: useVirtualFolderNodePathFragment$key,\n) => {\n  const vfolderNode = useFragment(\n    graphql`\n      fragment useVirtualFolderNodePathFragment on VirtualFolderNode {\n        id\n        host\n        quota_scope_id\n        user\n        user_email\n        group\n        group_name\n        creator\n        usage_mode\n        permission\n        ownership_type\n        max_files\n        max_size\n        created_at\n        last_used\n        num_files\n        cur_size\n        cloneable\n        status\n        permissions @since(version: \"24.09.0\")\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  const [quotaScopeType, quotaScopeIdWithoutType] = _.split(\n    vfolderNode?.quota_scope_id,\n    ':',\n  );\n  const vfolderId = toLocalId(vfolderNode?.id);\n  const vfolderIdPrefix1 = vfolderId.slice(0, 2);\n  const vfolderIdPrefix2 = vfolderId.slice(2, 4);\n  const vfolderIdRest = [vfolderId.slice(4)];\n  const vfolderPath = `${quotaScopeIdWithoutType}/${vfolderIdPrefix1}/${vfolderIdPrefix2}/${vfolderIdRest}`;\n\n  return {\n    quotaScopeType,\n    quotaScopeIdWithoutType,\n    vfolderId,\n    vfolderIdPrefix1,\n    vfolderIdPrefix2,\n    vfolderIdRest,\n    vfolderPath,\n  };\n};\n","import { useVirtualFolderNodePathFragment$key } from '../../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { useVirtualFolderPath } from '../../hooks/useVirtualFolderNodePath';\nimport BAIText from '../BAIText';\nimport { theme } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport React from 'react';\n\ninterface VirtualFolderPathProps {\n  vfolderNodeFrgmt: useVirtualFolderNodePathFragment$key;\n}\n\nconst VirtualFolderPath: React.FC<VirtualFolderPathProps> = ({\n  vfolderNodeFrgmt,\n}) => {\n  const {\n    quotaScopeType,\n    quotaScopeIdWithoutType,\n    vfolderId,\n    vfolderIdPrefix1,\n    vfolderIdPrefix2,\n    vfolderIdRest,\n  } = useVirtualFolderPath(vfolderNodeFrgmt);\n\n  const { token } = theme.useToken();\n\n  return (\n    <BAIFlex direction=\"row\" align=\"start\" justify=\"start\" wrap=\"wrap\" gap={3}>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        (root)\n      </BAIText>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        /\n      </BAIText>\n      <BAIFlex direction=\"column\" align=\"start\" justify=\"start\">\n        <BAIText\n          monospace\n          copyable={{\n            text: quotaScopeIdWithoutType,\n          }}\n          style={{ fontSize: '0.9em' }}\n        >\n          {_.truncate(quotaScopeIdWithoutType, { length: 15 })}\n        </BAIText>\n        <BAIText\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n          }}\n        >\n          Quota Scope ID ({_.upperFirst(quotaScopeType)})\n        </BAIText>\n      </BAIFlex>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        /\n      </BAIText>\n      <BAIFlex direction=\"column\" align=\"start\" justify=\"start\">\n        <BAIFlex gap={3}>\n          <BAIText monospace style={{ fontSize: '0.9em' }}>\n            {vfolderIdPrefix1}\n          </BAIText>\n          <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n            /\n          </BAIText>\n          <BAIText monospace style={{ fontSize: '0.9em' }}>\n            {vfolderIdPrefix2}\n          </BAIText>\n          <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n            /\n          </BAIText>\n          <BAIText\n            monospace\n            copyable={{\n              text: vfolderId,\n            }}\n            style={{ fontSize: '0.9em' }}\n          >\n            {_.truncate(vfolderIdRest.join(''), { length: 7 })}\n          </BAIText>\n        </BAIFlex>\n        <BAIText\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n          }}\n        >\n          VFolder ID\n        </BAIText>\n      </BAIFlex>\n    </BAIFlex>\n  );\n};\n\nexport default VirtualFolderPath;\n","import { VFolderNodeDescriptionFragment$key } from '../__generated__/VFolderNodeDescriptionFragment.graphql';\nimport { VFolderNodeDescriptionPermissionRefreshQuery } from '../__generated__/VFolderNodeDescriptionPermissionRefreshQuery.graphql';\nimport { useVirtualFolderNodePathFragment$key } from '../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { convertToDecimalUnit } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport { usePainKiller } from '../hooks/usePainKiller';\nimport { useVirtualFolderPath } from '../hooks/useVirtualFolderNodePath';\nimport BAISelect from './BAISelect';\nimport BAITag from './BAITag';\nimport { statusTagColor } from './VFolderNodes';\nimport VirtualFolderPath from './VirtualFolderNodeItems/VirtualFolderPath';\nimport { CheckCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport {\n  App,\n  Descriptions,\n  theme,\n  Typography,\n  type DescriptionsProps,\n} from 'antd';\nimport {\n  filterOutEmpty,\n  BAIUserUnionIcon,\n  toLocalId,\n  BAIFlex,\n} from 'backend.ai-ui';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  graphql,\n  fetchQuery,\n  useFragment,\n  useRelayEnvironment,\n} from 'react-relay';\n\ninterface VFolderNodeDescriptionProps extends DescriptionsProps {\n  vfolderNodeFrgmt: VFolderNodeDescriptionFragment$key;\n  onRequestRefresh?: () => void;\n}\n\nconst VFolderNodeDescription: React.FC<VFolderNodeDescriptionProps> = ({\n  vfolderNodeFrgmt,\n  onRequestRefresh,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n\n  const relayEnv = useRelayEnvironment();\n  const currentProject = useCurrentProjectValue();\n  const painKiller = usePainKiller();\n  const baiClient = useSuspendedBackendaiClient();\n  const [currentUser] = useCurrentUserInfo();\n\n  const updateMutation = useTanMutation({\n    mutationFn: ({ permission, id }: { permission: string; id: string }) => {\n      return baiClient.vfolder.update_folder({ permission }, id);\n    },\n  });\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment VFolderNodeDescriptionFragment on VirtualFolderNode {\n        id\n        host\n        quota_scope_id\n        user\n        user_email\n        group\n        group_name\n        creator\n        usage_mode\n        permission\n        ownership_type\n        max_files\n        max_size\n        created_at\n        last_used\n        num_files\n        cur_size\n        cloneable\n        status\n        permissions @since(version: \"24.09.0\")\n        unmanaged_path @since(version: \"25.04.0\")\n        ...VFolderPermissionCellFragment\n        ...useVirtualFolderNodePathFragment\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  const { vfolderPath } = useVirtualFolderPath(\n    // Temporary type assertion to suppress TS error – not actually needed at runtime\n    vfolderNode as useVirtualFolderNodePathFragment$key,\n  );\n\n  const vfolderId = toLocalId(vfolderNode.id);\n\n  const items: DescriptionsProps['items'] = filterOutEmpty([\n    !vfolderNode?.unmanaged_path && {\n      key: 'path',\n      label: (\n        <Typography.Text\n          copyable={{\n            text: vfolderPath,\n          }}\n          style={{\n            color: token.colorTextLabel,\n          }}\n        >\n          {t('data.folders.Path')}\n        </Typography.Text>\n      ),\n      children: <VirtualFolderPath vfolderNodeFrgmt={vfolderNode} />,\n    },\n    {\n      key: 'status',\n      label: t('data.folders.Status'),\n      children: (\n        <BAITag\n          color={\n            vfolderNode.status\n              ? statusTagColor[\n                  vfolderNode.status as keyof typeof statusTagColor\n                ]\n              : undefined\n          }\n        >\n          {_.toUpper(vfolderNode.status || '')}\n        </BAITag>\n      ),\n    },\n    {\n      key: 'host',\n      label: t('data.Host'),\n      children: vfolderNode.host,\n    },\n    {\n      key: 'ownership_type',\n      label: t('data.folders.Ownership'),\n      children:\n        vfolderNode?.ownership_type === 'user' ? (\n          <BAIFlex gap={'xs'}>\n            <Typography.Text>{t('data.User')}</Typography.Text>\n            <UserOutlined style={{ color: token.colorTextTertiary }} />\n          </BAIFlex>\n        ) : (\n          <BAIFlex gap={'xs'}>\n            <Typography.Text>{t('data.Project')}</Typography.Text>\n            <BAIUserUnionIcon style={{ color: token.colorTextTertiary }} />\n          </BAIFlex>\n        ),\n    },\n    (vfolderNode?.user === currentUser.uuid ||\n      (baiClient.is_admin && vfolderNode?.group === currentProject?.id)) && {\n      key: 'permission',\n      label: t('data.folders.MountPermission'),\n      children: (\n        <BAISelect\n          defaultValue={\n            vfolderNode.permission === 'wd' ? 'rw' : vfolderNode.permission\n          }\n          options={[\n            { value: 'ro', label: t('data.ReadOnly') },\n            { value: 'rw', label: t('data.ReadWrite') },\n          ]}\n          onChange={(value) => {\n            updateMutation.mutate(\n              { permission: value, id: vfolderId },\n              {\n                onSuccess: () => {\n                  message.success(t('data.permission.PermissionModified'));\n                  document.dispatchEvent(\n                    new CustomEvent('backend-ai-folder-updated'),\n                  );\n\n                  // To update GraphQL relay node\n                  fetchQuery<VFolderNodeDescriptionPermissionRefreshQuery>(\n                    relayEnv,\n                    graphql`\n                      query VFolderNodeDescriptionPermissionRefreshQuery(\n                        $id: String!\n                      ) {\n                        vfolder_node(id: $id) {\n                          permission\n                          permissions\n                        }\n                      }\n                    `,\n                    {\n                      id: vfolderNode.id,\n                    },\n                  ).toPromise();\n                  onRequestRefresh?.();\n                },\n                onError: (error: { message: string }) => {\n                  message.error(painKiller.relieve(error?.message));\n                },\n              },\n            );\n          }}\n          popupMatchSelectWidth={false}\n        />\n      ),\n    },\n    {\n      key: 'owner',\n      label: t('data.folders.Owner'),\n      children:\n        vfolderNode?.user === currentUser?.uuid ||\n        (baiClient.is_admin && vfolderNode?.group === currentProject?.id) ? (\n          <BAIFlex justify=\"start\">\n            <CheckCircleOutlined />\n          </BAIFlex>\n        ) : null,\n    },\n    vfolderNode.user_email !== null && {\n      key: 'user_email',\n      label: t('data.User'),\n      children: (\n        <Typography.Text copyable>{vfolderNode.user_email}</Typography.Text>\n      ),\n    },\n    vfolderNode.group_name !== null && {\n      key: 'group_name',\n      label: t('data.Project'),\n      children: vfolderNode.group_name,\n    },\n    {\n      key: 'cloneable',\n      label: t('data.folders.Cloneable'),\n      children: vfolderNode.cloneable ? (\n        <BAIFlex justify=\"start\">\n          <CheckCircleOutlined />\n        </BAIFlex>\n      ) : null,\n    },\n    {\n      key: 'max_size',\n      label: t('data.folders.MaxSize'),\n      children: vfolderNode.max_size\n        ? convertToDecimalUnit(vfolderNode.max_size, 'g', 2)?.displayValue\n        : '∞',\n    },\n    {\n      key: 'usage',\n      label: t('data.UsageMode'),\n      children: vfolderNode.usage_mode,\n    },\n    {\n      key: 'created_at',\n      label: t('data.folders.CreatedAt'),\n      children: dayjs(vfolderNode.created_at).format('lll'),\n    },\n  ]);\n\n  return (\n    <Descriptions\n      bordered\n      column={1}\n      size=\"small\"\n      items={items}\n      styles={{\n        content: {\n          wordBreak: 'break-word',\n          overflowWrap: 'break-word',\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default VFolderNodeDescription;\n","import { LegacyFolderExplorerQuery } from '../__generated__/LegacyFolderExplorerQuery.graphql';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport FolderExplorerActions from './FolderExplorerActions';\nimport FolderExplorerHeader from './FolderExplorerHeader';\nimport VFolderNodeDescription from './VFolderNodeDescription';\nimport { Alert, Grid, Splitter, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport { toGlobalId, BAIFlex } from 'backend.ai-ui';\nimport { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  baiModalHeader: css`\n    .ant-modal-title {\n      width: 100%;\n      margin-right: ${token.marginXXL}px;\n    }\n  `,\n}));\n\ninterface LegacyFolderExplorerProps extends BAIModalProps {\n  vfolderID: string;\n  onRequestClose: () => void;\n}\nexport interface FolderExplorerElement extends HTMLDivElement {\n  _fetchVFolder: () => void;\n  _openDeleteMultipleFileDialog: () => void;\n  openMkdirDialog: () => void;\n  handleUpload: (name: 'file' | 'folder') => void;\n}\n\nconst LegacyFolderExplorer: React.FC<LegacyFolderExplorerProps> = ({\n  vfolderID,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { token } = theme.useToken();\n  const { styles } = useStyles();\n  const { xl } = Grid.useBreakpoint();\n\n  const { t } = useTranslation();\n  const [isWritable, setIsWritable] = useState<boolean>(false);\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  // TODO: Events are sent and received as normal,\n  // but the Lit Element is not rendered and the values inside are not available but ref is available.\n  const folderExplorerRef = useRef<FolderExplorerElement>(null);\n\n  // ensure the client is connected\n  useSuspendedBackendaiClient();\n  useEffect(() => {\n    const handleConnected = (e: any) => {\n      setIsWritable(e.detail || false);\n    };\n\n    const handleColumnSelected = (e: any) => {\n      setIsSelected(e.detail || false);\n    };\n\n    document.addEventListener('folderExplorer:connected', handleConnected);\n    document.addEventListener(\n      'folderExplorer:columnSelected',\n      handleColumnSelected,\n    );\n    return () => {\n      document.removeEventListener('folderExplorer:connected', handleConnected);\n      document.removeEventListener(\n        'folderExplorer:columnSelected',\n        handleColumnSelected,\n      );\n    };\n  }, []);\n\n  const { vfolder_node } = useLazyLoadQuery<LegacyFolderExplorerQuery>(\n    graphql`\n      query LegacyFolderExplorerQuery($vfolderGlobalId: String!) {\n        vfolder_node(id: $vfolderGlobalId) @since(version: \"24.03.4\") {\n          id\n          user\n          permission\n          permissions\n          unmanaged_path @since(version: \"25.04.0\")\n          ...FolderExplorerHeaderFragment\n          ...VFolderNodeDescriptionFragment\n          ...VFolderNameTitleNodeFragment\n        }\n      }\n    `,\n    {\n      vfolderGlobalId: toGlobalId('VirtualFolderNode', vfolderID),\n    },\n    {\n      fetchPolicy: modalProps.open ? 'network-only' : 'store-only',\n    },\n  );\n\n  // TODO: Skip permission check due to inaccurate API response. Update when API is fixed.\n  const hasNoPermissions = false;\n  // !vfolder_node || (vfolder_node.permissions?.length || 0) === 0;\n\n  const legacyFolderExplorerPane = vfolder_node && (\n    <BAIFlex direction=\"column\" align=\"stretch\">\n      {vfolder_node?.unmanaged_path ? (\n        <Alert\n          message={t('explorer.NoExplorerSupportForUnmanagedFolder')}\n          showIcon\n        />\n      ) : !hasNoPermissions ? (\n        <>\n          <FolderExplorerActions\n            isSelected={isSelected}\n            isWritable={isWritable}\n            folderExplorerRef={folderExplorerRef}\n            size={xl ? 'default' : 'small'}\n          />\n          {/* @ts-ignore */}\n          <backend-ai-folder-explorer\n            ref={folderExplorerRef}\n            active\n            vfolderID={vfolderID}\n          />\n        </>\n      ) : null}\n    </BAIFlex>\n  );\n\n  const vfolderDescription = vfolder_node && (\n    <VFolderNodeDescription\n      vfolderNodeFrgmt={vfolder_node}\n      onRequestRefresh={() => {\n        folderExplorerRef.current?._fetchVFolder();\n      }}\n    />\n  );\n\n  return (\n    <BAIModal\n      data-testid=\"folder-explorer\"\n      className={styles.baiModalHeader}\n      centered\n      width={'90%'}\n      destroyOnClose\n      footer={null}\n      title={\n        vfolder_node ? (\n          <FolderExplorerHeader\n            vfolderNodeFrgmt={vfolder_node}\n            folderExplorerRef={folderExplorerRef}\n          />\n        ) : null\n      }\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      {!vfolder_node ? (\n        <Alert\n          message={t('explorer.FolderNotFoundOrNoAccess')}\n          type=\"error\"\n          showIcon\n        />\n      ) : hasNoPermissions ? (\n        <Alert message={t('explorer.NoPermissions')} type=\"error\" showIcon />\n      ) : null}\n      {vfolder_node ? (\n        xl ? (\n          <Splitter\n            style={{\n              gap: token.size,\n              alignSelf: 'stretch',\n            }}\n          >\n            <Splitter.Panel resizable={false}>\n              {legacyFolderExplorerPane}\n            </Splitter.Panel>\n            <Splitter.Panel defaultSize={500} min={300} max={'40%'}>\n              {vfolderDescription}\n            </Splitter.Panel>\n          </Splitter>\n        ) : (\n          <BAIFlex direction=\"column\" align=\"stretch\" gap={'md'}>\n            {legacyFolderExplorerPane}\n            {vfolderDescription}\n          </BAIFlex>\n        )\n      ) : null}\n    </BAIModal>\n  );\n};\n\nexport default LegacyFolderExplorer;\n"],"names":["_ref","type","style","monospace","children","restProps","_jsx","Typography","Text","fontFamily","node","v0","v1","v2","v3","v4","v5","v6","hash","isSelected","isWritable","folderExplorerRef","size","token","theme","useToken","t","useTranslation","_jsxs","BAIFlex","justify","gap","marginSM","right","Tooltip","title","Button","danger","disabled","icon","DeleteOutlined","onClick","_folderExplorerRef$cu","current","_openDeleteMultipleFileDialog","FileAddOutlined","_folderExplorerRef$cu2","openMkdirDialog","Dropdown","menu","items","key","label","_folderExplorerRef$cu3","handleUpload","FolderAddOutlined","_folderExplorerRef$cu4","UploadOutlined","vfolderNodeFrgmt","props","vfolderNode","useFragment","_VFolderNameTitleNodeFragment","name","Title","level","marginTop","ellipsis","lg","Grid","useBreakpoint","_FolderExplorerHeaderFragment","marginMD","width","flex","Suspense","fallback","Skeleton","Input","active","VFolderNameTitle","unmanaged_path","_Fragment","Image","src","alt","preview","_executeFileBrowser","_executeSSHProxyAgent","useVirtualFolderPath","_useVirtualFolderNodePathFragment","quotaScopeType","quotaScopeIdWithoutType","_","quota_scope_id","vfolderId","toLocalId","id","vfolderIdPrefix1","slice","vfolderIdPrefix2","vfolderIdRest","vfolderPath","direction","align","wrap","BAIText","fontSize","copyable","text","length","fontSizeSM","join","_convertToDecimalUnit","onRequestRefresh","message","App","useApp","relayEnv","useRelayEnvironment","currentProject","useCurrentProjectValue","painKiller","usePainKiller","baiClient","useSuspendedBackendaiClient","currentUser","useCurrentUserInfo","updateMutation","useTanMutation","mutationFn","_ref2","permission","vfolder","update_folder","_VFolderNodeDescriptionFragment","filterOutEmpty","color","colorTextLabel","VirtualFolderPath","BAITag","status","statusTagColor","undefined","host","ownership_type","UserOutlined","colorTextTertiary","BAIUserUnionIcon","user","uuid","is_admin","group","BAISelect","defaultValue","options","value","onChange","mutate","onSuccess","success","document","dispatchEvent","CustomEvent","fetchQuery","_VFolderNodeDescriptionPermissionRefreshQuery","toPromise","onError","error","relieve","popupMatchSelectWidth","CheckCircleOutlined","user_email","group_name","cloneable","max_size","convertToDecimalUnit","displayValue","usage_mode","dayjs","created_at","format","Descriptions","bordered","column","styles","content","wordBreak","overflowWrap","useStyles","createStyles","css","baiModalHeader","marginXXL","vfolderID","onRequestClose","modalProps","xl","setIsWritable","useState","setIsSelected","useRef","useEffect","handleConnected","e","detail","handleColumnSelected","addEventListener","removeEventListener","vfolder_node","useLazyLoadQuery","_LegacyFolderExplorerQuery","vfolderGlobalId","toGlobalId","fetchPolicy","open","legacyFolderExplorerPane","Alert","showIcon","FolderExplorerActions","ref","vfolderDescription","VFolderNodeDescription","_fetchVFolder","BAIModal","className","centered","destroyOnClose","footer","FolderExplorerHeader","onCancel","Splitter","alignSelf","Panel","resizable","defaultSize","min","max"],"sourceRoot":""}