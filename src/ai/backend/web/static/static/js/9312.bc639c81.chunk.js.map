{"version":3,"file":"static/js/9312.bc639c81.chunk.js","mappings":"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","sources":["components/StorageSelect.tsx","components/UsageProgress.tsx","components/StorageStatusPanel.tsx","components/__generated__/StorageStatusPanelKeypairQuery.graphql.ts","components/__generated__/StorageStatusPanelQuery.graphql.ts","components/__generated__/UsageProgressFragment_usageFrgmt.graphql.ts"],"sourcesContent":["import { usageIndicatorColor } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport useControllableState from '../hooks/useControllableState';\nimport { useShadowRoot } from './DefaultProviders';\nimport Flex from './Flex';\nimport TextHighlighter from './TextHighlighter';\nimport { Select, SelectProps, Badge, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\n\nexport type VolumeInfo = {\n  id: string;\n  backend: string;\n  capabilities: string[];\n  usage: {\n    percentage: number;\n  };\n  sftp_scaling_groups: string[];\n};\ninterface Props extends Omit<SelectProps, 'value' | 'onChange'> {\n  autoSelectType?: 'usage' | 'default';\n  showUsageStatus?: boolean;\n  value?: string;\n  onChange?: (v?: string, vInfo?: VolumeInfo) => void;\n}\n// TODO: use React.forwardRef\nconst StorageSelect: React.FC<Props> = ({\n  autoSelectType,\n  showUsageStatus,\n  value,\n  onChange,\n  defaultValue,\n  searchValue,\n  onSearch,\n  ...partialSelectProps\n}) => {\n  const { t } = useTranslation();\n\n  const shadowRoot = useShadowRoot();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const { data: vhostInfo, isLoading: isLoadingVhostInfo } = useQuery<{\n    default: string;\n    allowed: Array<string>;\n    volume_info?: {\n      [key: string]: {\n        backend: string;\n        capabilities: string[];\n        usage: {\n          percentage: number;\n        };\n        sftp_scaling_groups: any[];\n      };\n    };\n  }>('vhostInfo', () => {\n    return baiClient.vfolder.list_hosts();\n  });\n\n  const [controllableState, setControllableState] = useControllableState({\n    value,\n    onChange,\n    defaultValue,\n  });\n  const [controllableSearchValue, setControllableSearchValue] =\n    useControllableState({ value: searchValue, onChange: onSearch });\n  useEffect(() => {\n    if (!autoSelectType) return;\n    let nextHost = vhostInfo?.default ?? vhostInfo?.allowed[0] ?? '';\n    if (autoSelectType === 'usage') {\n      const lowestUsageHost = _.minBy(\n        _.map(vhostInfo?.allowed, (host) => ({\n          host,\n          volume_info: vhostInfo?.volume_info?.[host],\n        })),\n        'volume_info.usage.percentage',\n      )?.host;\n      nextHost = lowestUsageHost || nextHost;\n    }\n    setControllableState(nextHost, {\n      id: nextHost,\n      ...(vhostInfo?.volume_info?.[nextHost] || {}),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [vhostInfo]);\n  return (\n    <Select\n      filterOption={true}\n      placeholder={t('data.SelectStorageHost')}\n      loading={isLoadingVhostInfo}\n      style={{\n        // TODO: not good to hardcode\n        minWidth: 165,\n      }}\n      value={controllableState}\n      onChange={(host) => {\n        setControllableState(host, {\n          id: host,\n          ...(vhostInfo?.volume_info?.[host] || {}),\n        });\n      }}\n      searchValue={controllableSearchValue}\n      onSearch={setControllableSearchValue}\n      optionLabelProp=\"value\"\n      options={_.map(vhostInfo?.allowed, (host) => ({\n        label: showUsageStatus ? (\n          <Flex align=\"center\" gap={'xs'}>\n            {vhostInfo?.volume_info?.[host]?.usage && (\n              <Tooltip\n                title={`${t('data.Host')} ${t('data.usage.Status')}:\n                ${\n                  vhostInfo?.volume_info[host]?.usage?.percentage < 70\n                    ? t('data.usage.Adequate')\n                    : vhostInfo?.volume_info[host]?.usage?.percentage < 90\n                      ? t('data.usage.Caution')\n                      : t('data.usage.Insufficient')\n                }`}\n                // @ts-ignore\n                getPopupContainer={() => shadowRoot}\n              >\n                <Badge\n                  color={usageIndicatorColor(\n                    vhostInfo?.volume_info[host]?.usage?.percentage,\n                  )}\n                />\n              </Tooltip>\n            )}\n            <TextHighlighter keyword={controllableSearchValue}>\n              {host}\n            </TextHighlighter>\n            {/* TODO: uncomment after implementing click action */}\n            {/* <Button type=\"link\" size=\"small\" icon={<InfoCircleOutlined />} /> */}\n          </Flex>\n        ) : (\n          host\n        ),\n        value: host,\n      }))}\n      {...partialSelectProps}\n    />\n  );\n};\n\nexport default StorageSelect;\n","import { bytesToGB, usageIndicatorColor } from '../helper';\nimport Flex from './Flex';\nimport { UsageProgressFragment_usageFrgmt$key } from './__generated__/UsageProgressFragment_usageFrgmt.graphql';\nimport { Progress, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst UsageProgress: React.FC<{\n  usageProgressFrgmt: UsageProgressFragment_usageFrgmt$key | null;\n}> = ({ usageProgressFrgmt: usageFrgmt }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const usage = useFragment(\n    graphql`\n      fragment UsageProgressFragment_usageFrgmt on QuotaScope {\n        details {\n          usage_bytes\n          hard_limit_bytes\n        }\n      }\n    `,\n    usageFrgmt,\n  );\n\n  const usageBytes = parseFloat(usage?.details?.usage_bytes) || 0;\n  const hardLimitBytes = parseFloat(usage?.details?.hard_limit_bytes) || 0;\n  const percent = (\n    hardLimitBytes > 0 ? ((usageBytes / hardLimitBytes) * 100)?.toFixed(2) : 0\n  ) as number;\n\n  return (\n    <Flex direction=\"column\">\n      <Progress\n        size={[180, 15]}\n        percent={percent}\n        strokeColor={usageIndicatorColor(percent)}\n        status={percent >= 100 ? 'exception' : 'normal'}\n      />\n      <Flex direction=\"row\" gap={token.marginXXS} style={{ fontSize: 12 }}>\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n          {t('data.Used')}:\n        </Typography.Text>\n        {bytesToGB(usage?.details?.usage_bytes)} GB\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n          {' / '}\n        </Typography.Text>\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n          {t('data.Limit')}:\n        </Typography.Text>\n        {bytesToGB(usage?.details?.hard_limit_bytes)} GB\n        {/* <Typography.Text type=\"secondary\">({percent} %)</Typography.Text> */}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default UsageProgress;\n","import { addQuotaScopeTypePrefix, usageIndicatorColor } from '../helper';\nimport { useCurrentDomainValue, useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport Flex from './Flex';\nimport FlexActivityIndicator from './FlexActivityIndicator';\nimport StorageSelect, { VolumeInfo } from './StorageSelect';\nimport UsageProgress from './UsageProgress';\nimport { StorageStatusPanelKeypairQuery } from './__generated__/StorageStatusPanelKeypairQuery.graphql';\nimport { StorageStatusPanelQuery } from './__generated__/StorageStatusPanelQuery.graphql';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport {\n  Progress,\n  Card,\n  Descriptions,\n  DescriptionsProps,\n  Typography,\n  Empty,\n  Divider,\n  Skeleton,\n  theme,\n  Tooltip,\n  Button,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst StorageStatusPanel: React.FC<{\n  fetchKey: string;\n}> = ({ fetchKey }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const currentProject = useCurrentProjectValue();\n\n  const [selectedVolumeInfo, setSelectedVolumeInfo] = useState<VolumeInfo>();\n  const deferredSelectedVolumeInfo = useDeferredValue(selectedVolumeInfo);\n  const deferredFetchKey = useDeferredValue(fetchKey);\n\n  const columnSetting: DescriptionsProps['column'] = {\n    xxl: 2,\n    xl: 2,\n    lg: 2,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  const isExcludedCount = (status: string) => {\n    return _.includes(\n      ['delete-ongoing', 'delete-complete', 'delete-error'],\n      status,\n    );\n  };\n\n  const { data: vfolders } = useQuery(\n    ['vfolders', { deferredFetchKey }],\n    () => {\n      return baiClient.vfolder.list(currentProject?.id);\n    },\n  );\n  const createdCount = vfolders?.filter(\n    (item: any) =>\n      item.is_owner &&\n      item.ownership_type === 'user' &&\n      !isExcludedCount(item.status),\n  ).length;\n  const projectFolderCount = vfolders?.filter(\n    (item: any) =>\n      item.ownership_type === 'group' && !isExcludedCount(item.status),\n  ).length;\n  const invitedCount = vfolders?.filter(\n    (item: any) =>\n      !item.is_owner &&\n      item.ownership_type === 'user' &&\n      !isExcludedCount(item.status),\n  ).length;\n\n  // TODO: Add resolver to enable subquery and modify to call useLazyLoadQuery only once.\n  const {\n    keypair,\n    user,\n    // currentProjectDetail\n  } = useLazyLoadQuery<StorageStatusPanelKeypairQuery>(\n    graphql`\n      query StorageStatusPanelKeypairQuery(\n        $domain_name: String\n        # $project_id: UUID!\n        $email: String\n        $access_key: String\n      ) {\n        keypair(domain_name: $domain_name, access_key: $access_key) {\n          resource_policy\n        }\n        # currentProjectDetail: group(domain_name: $domain_name, id: $project_id){\n        #   id\n        #   resource_policy @since(version: \"23.09.0\")\n        # }\n        user(domain_name: $domain_name, email: $email) {\n          id\n          # https://github.com/lablup/backend.ai/pull/1354\n          resource_policy @since(version: \"23.09.0\")\n        }\n      }\n    `,\n    {\n      domain_name: useCurrentDomainValue(),\n      email: baiClient?.email,\n      access_key: baiClient?._config.accessKey,\n      // project_id: currentProject.id,\n    },\n  );\n\n  const {\n    user_resource_policy,\n    keypair_resource_policy,\n    project_quota_scope,\n    user_quota_scope,\n  } = useLazyLoadQuery<StorageStatusPanelQuery>(\n    graphql`\n      query StorageStatusPanelQuery(\n        $user_RP_name: String\n        # $project_RP_name: String!\n        $keypair_resource_policy_name: String\n        $project_quota_scope_id: String!\n        $user_quota_scope_id: String!\n        $storage_host_name: String!\n        $skipQuotaScope: Boolean!\n      ) {\n        user_resource_policy(name: $user_RP_name) @since(version: \"23.09.6\") {\n          max_vfolder_count\n        }\n        # project_resource_policy(name: $project_RP_name) @since(version: \"23.09.1\") {\n        #   max_vfolder_count\n        # }\n        keypair_resource_policy(name: $keypair_resource_policy_name)\n          # use max_vfolder_count in keypair_resource_policy before adding max_vfolder_count in user_resource_policy\n          @deprecatedSince(version: \"23.09.4\") {\n          max_vfolder_count\n        }\n        project_quota_scope: quota_scope(\n          quota_scope_id: $project_quota_scope_id\n          storage_host_name: $storage_host_name\n        ) @skip(if: $skipQuotaScope) {\n          ...UsageProgressFragment_usageFrgmt\n        }\n        user_quota_scope: quota_scope(\n          quota_scope_id: $user_quota_scope_id\n          storage_host_name: $storage_host_name\n        ) @skip(if: $skipQuotaScope) {\n          ...UsageProgressFragment_usageFrgmt\n        }\n      }\n    `,\n    {\n      user_RP_name: user?.resource_policy,\n      // project_RP_name: currentProjectDetail?.resource_policy || \"\",\n      keypair_resource_policy_name: keypair?.resource_policy,\n      project_quota_scope_id: addQuotaScopeTypePrefix(\n        'project',\n        currentProject?.id,\n      ),\n      user_quota_scope_id: addQuotaScopeTypePrefix('user', user?.id || ''),\n      storage_host_name: deferredSelectedVolumeInfo?.id || '',\n      skipQuotaScope:\n        currentProject?.id === undefined ||\n        user?.id === undefined ||\n        !deferredSelectedVolumeInfo?.id,\n    },\n  );\n\n  // Support version:\n  // keypair resource policy < 23.09.4\n  // user resource policy, project resource policy >= 23.09.6\n  let maxVfolderCount;\n  if (\n    // manager version >= 23.09.6\n    baiClient?.supports('max-vfolder-count-in-user-and-project-resource-policy')\n  ) {\n    maxVfolderCount = user_resource_policy?.max_vfolder_count || 0;\n  } else {\n    maxVfolderCount = keypair_resource_policy?.max_vfolder_count || 0;\n  }\n\n  const numberOfFolderPercent =\n    maxVfolderCount || maxVfolderCount === 0\n      ? ((maxVfolderCount > 0\n          ? ((createdCount / maxVfolderCount) * 100)?.toFixed(2)\n          : 0) as number)\n      : null;\n  const descriptionItems: DescriptionsProps['items'] = [\n    {\n      key: 'totalFolders',\n      label: t('data.NumberOfFolders'),\n      children: (\n        <>\n          {numberOfFolderPercent || numberOfFolderPercent === 0 ? (\n            <Progress\n              size={[200, 15]}\n              percent={numberOfFolderPercent}\n              strokeColor={usageIndicatorColor(numberOfFolderPercent)}\n              style={{ width: '95%' }}\n              status={numberOfFolderPercent >= 100 ? 'exception' : 'normal'}\n            />\n          ) : null}\n          <Flex direction=\"row\" gap={token.marginXXS} wrap=\"wrap\">\n            <Typography.Text type=\"secondary\">\n              {t('data.Created')}:\n            </Typography.Text>\n            {createdCount}\n            {maxVfolderCount || maxVfolderCount === 0 ? (\n              <>\n                <Typography.Text type=\"secondary\">{' / '}</Typography.Text>\n                <Typography.Text type=\"secondary\">\n                  {t('data.Limit')}:\n                </Typography.Text>\n                {maxVfolderCount === 0 ? '∞' : maxVfolderCount}\n              </>\n            ) : null}\n          </Flex>\n          <Divider style={{ margin: '12px auto' }} />\n          <Flex direction=\"row\" wrap=\"wrap\" justify=\"between\">\n            <Flex gap={token.marginXXS}>\n              <Typography.Text type=\"secondary\">\n                {t('data.ProjectFolder')}:\n              </Typography.Text>\n              {projectFolderCount}\n            </Flex>\n            <Flex gap={token.marginXXS} style={{ marginRight: 30 }}>\n              <Typography.Text type=\"secondary\">\n                {t('data.Invited')}:\n              </Typography.Text>\n              {invitedCount}\n            </Flex>\n          </Flex>\n        </>\n      ),\n    },\n    {\n      key: 'quotaPerStorageVolume',\n      label: (\n        <div>\n          {t('data.QuotaPerStorageVolume')}\n          <Tooltip title={t('data.HostDetails')}>\n            <Button type=\"link\" icon={<InfoCircleOutlined />} />\n          </Tooltip>\n        </div>\n      ),\n      children: (\n        <>\n          <Flex\n            wrap=\"wrap\"\n            justify=\"between\"\n            direction=\"row\"\n            style={{ minWidth: '25vw' }}\n          >\n            <Typography.Text type=\"secondary\">{t('data.Host')}</Typography.Text>\n            <StorageSelect\n              value={selectedVolumeInfo?.id}\n              onChange={(__, vInfo) => {\n                setSelectedVolumeInfo(vInfo);\n              }}\n              autoSelectType=\"usage\"\n              showUsageStatus\n              showSearch\n              allowClear\n            />\n          </Flex>\n          {selectedVolumeInfo !== deferredSelectedVolumeInfo ? (\n            <FlexActivityIndicator style={{ minHeight: 120 }} />\n          ) : selectedVolumeInfo?.capabilities?.includes('quota') ? (\n            <>\n              <Flex\n                style={{ margin: '15px auto' }}\n                justify=\"between\"\n                wrap=\"wrap\"\n              >\n                <Typography.Text\n                  type=\"secondary\"\n                  style={{\n                    wordBreak: 'keep-all',\n                    wordWrap: 'break-word',\n                  }}\n                >\n                  {t('data.Project')}\n                  <br />({currentProject?.name})\n                </Typography.Text>\n                <UsageProgress\n                  usageProgressFrgmt={project_quota_scope || null}\n                />\n              </Flex>\n              <Flex justify=\"between\" wrap=\"wrap\">\n                <Typography.Text\n                  type=\"secondary\"\n                  style={{\n                    wordBreak: 'keep-all',\n                    wordWrap: 'break-word',\n                  }}\n                >\n                  {t('data.User')}\n                  <br />({baiClient?.email})\n                </Typography.Text>\n                <UsageProgress usageProgressFrgmt={user_quota_scope || null} />\n              </Flex>\n            </>\n          ) : (\n            <Empty\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n              description={t('storageHost.QuotaDoesNotSupported')}\n              style={{ margin: '25px auto' }}\n            />\n          )}\n        </>\n      ),\n    },\n    {\n      key: 'userQuotaScopeId',\n      label: t('data.userQuotaScopeId'),\n      children: (\n        <Typography.Text copyable>\n          {addQuotaScopeTypePrefix('user', user?.id || '')}\n        </Typography.Text>\n      ),\n    },\n  ];\n\n  return (\n    <Card size=\"small\" title={t('data.StorageStatus')}>\n      <Descriptions\n        bordered\n        column={columnSetting}\n        size=\"small\"\n        items={descriptionItems}\n      />\n    </Card>\n  );\n};\n\nexport const StorageStatusPanelFallback = () => {\n  const { t } = useTranslation();\n  return (\n    <Card size=\"small\" title={t('data.StorageStatus')}>\n      <Skeleton active />\n    </Card>\n  );\n};\n\nexport default StorageStatusPanel;\n","/**\n * @generated SignedSource<<b47dd33ae4a4620eac9b3aef7abb3aab>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type StorageStatusPanelKeypairQuery$variables = {\n  access_key?: string | null | undefined;\n  domain_name?: string | null | undefined;\n  email?: string | null | undefined;\n};\nexport type StorageStatusPanelKeypairQuery$data = {\n  readonly keypair: {\n    readonly resource_policy: string | null | undefined;\n  } | null | undefined;\n  readonly user: {\n    readonly id: string | null | undefined;\n    readonly resource_policy: string | null | undefined;\n  } | null | undefined;\n};\nexport type StorageStatusPanelKeypairQuery = {\n  response: StorageStatusPanelKeypairQuery$data;\n  variables: StorageStatusPanelKeypairQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"access_key\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"domain_name\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"domain_name\",\n  \"variableName\": \"domain_name\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"access_key\",\n    \"variableName\": \"access_key\"\n  },\n  (v3/*: any*/)\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": [\n    (v3/*: any*/),\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"email\",\n      \"variableName\": \"email\"\n    }\n  ],\n  \"concreteType\": \"User\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"user\",\n  \"plural\": false,\n  \"selections\": [\n    (v6/*: any*/),\n    (v5/*: any*/)\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageStatusPanelKeypairQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"KeyPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      (v7/*: any*/)\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageStatusPanelKeypairQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"KeyPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      (v7/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"95e9a2aff9ba76edfc0781be14e9263f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageStatusPanelKeypairQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageStatusPanelKeypairQuery(\\n  $domain_name: String\\n  $email: String\\n  $access_key: String\\n) {\\n  keypair(domain_name: $domain_name, access_key: $access_key) {\\n    resource_policy\\n    id\\n  }\\n  user(domain_name: $domain_name, email: $email) {\\n    id\\n    resource_policy @since(version: \\\"23.09.0\\\")\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"356fec51b64103fba9f667dba1713774\";\n\nexport default node;\n","/**\n * @generated SignedSource<<cff129ef4b9e726470daeb11085ecc8b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageStatusPanelQuery$variables = {\n  keypair_resource_policy_name?: string | null | undefined;\n  project_quota_scope_id: string;\n  skipQuotaScope: boolean;\n  storage_host_name: string;\n  user_RP_name?: string | null | undefined;\n  user_quota_scope_id: string;\n};\nexport type StorageStatusPanelQuery$data = {\n  readonly keypair_resource_policy: {\n    readonly max_vfolder_count: number | null | undefined;\n  } | null | undefined;\n  readonly project_quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"UsageProgressFragment_usageFrgmt\">;\n  } | null | undefined;\n  readonly user_quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"UsageProgressFragment_usageFrgmt\">;\n  } | null | undefined;\n  readonly user_resource_policy: {\n    readonly max_vfolder_count: number | null | undefined;\n  } | null | undefined;\n};\nexport type StorageStatusPanelQuery = {\n  response: StorageStatusPanelQuery$data;\n  variables: StorageStatusPanelQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"keypair_resource_policy_name\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipQuotaScope\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"user_RP_name\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"user_quota_scope_id\"\n},\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"user_RP_name\"\n  }\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_vfolder_count\",\n  \"storageKey\": null\n},\nv8 = [\n  (v7/*: any*/)\n],\nv9 = {\n  \"alias\": null,\n  \"args\": [\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"name\",\n      \"variableName\": \"keypair_resource_policy_name\"\n    }\n  ],\n  \"concreteType\": \"KeyPairResourcePolicy\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"keypair_resource_policy\",\n  \"plural\": false,\n  \"selections\": (v8/*: any*/),\n  \"storageKey\": null\n},\nv10 = {\n  \"kind\": \"Variable\",\n  \"name\": \"storage_host_name\",\n  \"variableName\": \"storage_host_name\"\n},\nv11 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"project_quota_scope_id\"\n  },\n  (v10/*: any*/)\n],\nv12 = [\n  {\n    \"args\": null,\n    \"kind\": \"FragmentSpread\",\n    \"name\": \"UsageProgressFragment_usageFrgmt\"\n  }\n],\nv13 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"user_quota_scope_id\"\n  },\n  (v10/*: any*/)\n],\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv15 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"QuotaDetails\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"details\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"usage_bytes\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"hard_limit_bytes\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  },\n  (v14/*: any*/)\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageStatusPanelQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policy\",\n        \"plural\": false,\n        \"selections\": (v8/*: any*/),\n        \"storageKey\": null\n      },\n      (v9/*: any*/),\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": \"project_quota_scope\",\n            \"args\": (v11/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": (v12/*: any*/),\n            \"storageKey\": null\n          },\n          {\n            \"alias\": \"user_quota_scope\",\n            \"args\": (v13/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": (v12/*: any*/),\n            \"storageKey\": null\n          }\n        ]\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v4/*: any*/),\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v5/*: any*/),\n      (v3/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageStatusPanelQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"UserResourcePolicy\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user_resource_policy\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          (v14/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      (v9/*: any*/),\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": \"project_quota_scope\",\n            \"args\": (v11/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": (v15/*: any*/),\n            \"storageKey\": null\n          },\n          {\n            \"alias\": \"user_quota_scope\",\n            \"args\": (v13/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": (v15/*: any*/),\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"05f25e3d87206ea4625cbb9710803f87\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageStatusPanelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageStatusPanelQuery(\\n  $user_RP_name: String\\n  $keypair_resource_policy_name: String\\n  $project_quota_scope_id: String!\\n  $user_quota_scope_id: String!\\n  $storage_host_name: String!\\n  $skipQuotaScope: Boolean!\\n) {\\n  user_resource_policy(name: $user_RP_name) @since(version: \\\"23.09.6\\\") {\\n    max_vfolder_count\\n    id\\n  }\\n  keypair_resource_policy(name: $keypair_resource_policy_name) @deprecatedSince(version: \\\"23.09.4\\\") {\\n    max_vfolder_count\\n  }\\n  project_quota_scope: quota_scope(quota_scope_id: $project_quota_scope_id, storage_host_name: $storage_host_name) @skip(if: $skipQuotaScope) {\\n    ...UsageProgressFragment_usageFrgmt\\n    id\\n  }\\n  user_quota_scope: quota_scope(quota_scope_id: $user_quota_scope_id, storage_host_name: $storage_host_name) @skip(if: $skipQuotaScope) {\\n    ...UsageProgressFragment_usageFrgmt\\n    id\\n  }\\n}\\n\\nfragment UsageProgressFragment_usageFrgmt on QuotaScope {\\n  details {\\n    usage_bytes\\n    hard_limit_bytes\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d68618805bf1551f1c28d57c12276539\";\n\nexport default node;\n","/**\n * @generated SignedSource<<4a8bd00c571ba1db42042d6a511d6c72>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UsageProgressFragment_usageFrgmt$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null | undefined;\n    readonly usage_bytes: any | null | undefined;\n  };\n  readonly \" $fragmentType\": \"UsageProgressFragment_usageFrgmt\";\n};\nexport type UsageProgressFragment_usageFrgmt$key = {\n  readonly \" $data\"?: UsageProgressFragment_usageFrgmt$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"UsageProgressFragment_usageFrgmt\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"UsageProgressFragment_usageFrgmt\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"usage_bytes\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1ba87b250f2a0161ecee7ba88d54c85c\";\n\nexport default node;\n"],"names":["_ref","autoSelectType","showUsageStatus","value","onChange","defaultValue","searchValue","onSearch","partialSelectProps","t","useTranslation","shadowRoot","useShadowRoot","baiClient","useSuspendedBackendaiClient","data","vhostInfo","isLoading","isLoadingVhostInfo","useQuery","vfolder","list_hosts","controllableState","setControllableState","useControllableState","controllableSearchValue","setControllableSearchValue","useEffect","_ref2","_vhostInfo$default","_vhostInfo$volume_inf2","nextHost","default","allowed","_$minBy","_","host","_vhostInfo$volume_inf","volume_info","id","_jsx","Select","filterOption","placeholder","loading","style","minWidth","_vhostInfo$volume_inf3","optionLabelProp","options","_vhostInfo$volume_inf4","_vhostInfo$volume_inf5","_vhostInfo$volume_inf6","_vhostInfo$volume_inf7","_vhostInfo$volume_inf8","_vhostInfo$volume_inf9","_vhostInfo$volume_inf10","_vhostInfo$volume_inf11","label","_jsxs","Flex","align","gap","children","usage","Tooltip","title","concat","percentage","getPopupContainer","Badge","color","usageIndicatorColor","TextHighlighter","keyword","_usage$details","_usage$details2","_usage$details3","_usage$details4","usageProgressFrgmt","usageFrgmt","token","theme","useToken","useFragment","_UsageProgressFragment_usageFrgmt","require","usageBytes","parseFloat","details","usage_bytes","hardLimitBytes","hard_limit_bytes","percent","toFixed","direction","Progress","size","strokeColor","status","marginXXS","fontSize","Typography","Text","type","bytesToGB","StorageStatusPanelFallback","Card","Skeleton","active","_selectedVolumeInfo$c","fetchKey","currentProject","useCurrentProjectValue","selectedVolumeInfo","setSelectedVolumeInfo","useState","deferredSelectedVolumeInfo","useDeferredValue","deferredFetchKey","isExcludedCount","vfolders","list","createdCount","filter","item","is_owner","ownership_type","length","projectFolderCount","invitedCount","keypair","user","useLazyLoadQuery","_StorageStatusPanelKeypairQuery","domain_name","useCurrentDomainValue","email","access_key","_config","accessKey","user_resource_policy","keypair_resource_policy","project_quota_scope","user_quota_scope","_StorageStatusPanelQuery","user_RP_name","resource_policy","keypair_resource_policy_name","project_quota_scope_id","addQuotaScopeTypePrefix","user_quota_scope_id","storage_host_name","skipQuotaScope","undefined","maxVfolderCount","supports","max_vfolder_count","numberOfFolderPercent","descriptionItems","key","_Fragment","width","wrap","Divider","margin","justify","marginRight","Button","icon","InfoCircleOutlined","StorageSelect","__","vInfo","showSearch","allowClear","FlexActivityIndicator","minHeight","capabilities","includes","wordBreak","wordWrap","name","UsageProgress","Empty","image","PRESENTED_IMAGE_SIMPLE","description","copyable","Descriptions","bordered","column","xxl","xl","lg","md","sm","xs","items","node","v0","v1","v2","v3","v4","v5","v6","v7","hash","v8","v9","v10","v11","v12","v13","v14","v15"],"sourceRoot":""}