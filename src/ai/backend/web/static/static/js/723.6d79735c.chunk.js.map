{"version":3,"file":"static/js/723.6d79735c.chunk.js","mappings":"+QAUA,MAoHA,EApHmCA,KACjC,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACRC,GAAUC,EAAAA,EAAAA,QAA2C,OACrD,MAAEC,EAAK,cAAEC,IAAkBC,EAAAA,EAAAA,uBACjC,IAAIC,EAKJ,IACEA,EAAcC,KAAKC,MAAML,GAAS,GACpC,CAAE,MAAOM,GACPH,EAAc,CACZI,MAAM,EACNC,wBAAyB,GACzBC,aAAc,GAElB,CAEA,MAAM,aAAEA,EAAY,KAAEF,EAAI,wBAAEC,GAA4BL,EAClDO,GAAgBC,EAAAA,EAAAA,IAA4B,CAChDF,kBAIAG,KAAMC,EAAe,UACrBC,EAAS,QACTC,EAAO,OACPC,IACEC,EAAAA,EAAAA,IASF,CACAC,WAAYC,IAA6B,IAA5B,mBAAEC,GAAoBD,EACjC,OAAOT,EAAcW,qBAAqB,CACxCD,sBACA,KAINE,EAAAA,EAAAA,YAAU,KACJf,GACFS,EAAO,CACLI,mBAAoBZ,GAExB,GACC,CAACD,EAAMS,EAAQR,IAElB,MAAMe,GAAyBN,EAAAA,EAAAA,IAO7B,CACAC,WAAaM,GACJd,EAAce,mBAAmBD,KA2B5C,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,MAAOhC,EAAE,wBACTiC,cAAc,EACdC,eAAgBP,EAAuBQ,UACvCxB,KAAMA,EACNyB,SAAUA,KACR/B,EAAc,SAAU,KAAK,EAE/BgC,gBAAc,EACdC,KAjCUC,KAAO,IAADC,EACH,QAAfA,EAAAtC,EAAQuC,eAAO,IAAAD,GAAfA,EACIE,iBACDC,MAAMf,IACLD,EAAuBP,OACrB,CACEwB,IAAKhB,EAAOgB,IACZpB,mBAAoBZ,GAEtB,CACEiC,UAAWA,KACTC,EAAAA,GAAQC,QAAQ/C,EAAE,4BAClBK,EAAc,KAAM,KAAK,EAE3B2C,QAASA,KACPF,EAAAA,GAAQpC,MAAMV,EAAE,wBAAwB,GAG7C,IAEFiD,OAAM,QAAS,EAchBC,SAAUhC,EAAUiC,UAEnBhC,GAA2B,OAAfF,QAAe,IAAfA,GAAAA,EAAiBmC,UAA4B,OAAfnC,QAAe,IAAfA,GAAAA,EAAiBoC,UAG1DvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAgB,CACfC,IAAKrD,EACLkD,SAAyB,OAAfnC,QAAe,IAAfA,OAAe,EAAfA,EAAiBmC,SAC3BC,SAAyB,OAAfpC,QAAe,IAAfA,OAAe,EAAfA,EAAiBoC,YAL7BvB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAAAL,SAAEnD,EAAE,iCAQF,C","sources":["components/TOTPActivateModalWithToken.tsx"],"sourcesContent":["import { useAnonymousBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal from './BAIModal';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport Flex from './Flex';\nimport { TOTPActivateForm, TOTPActivateFormData } from './TOTPActivateModal';\nimport { FormInstance, message } from 'antd';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst TOTPActivateModalWithToken = () => {\n  const { t } = useTranslation();\n  const formRef = useRef<FormInstance<TOTPActivateFormData>>(null);\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    totp_registration_token: string;\n    api_endpoint: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      totp_registration_token: '',\n      api_endpoint: '',\n    };\n  }\n\n  const { api_endpoint, open, totp_registration_token } = parsedValue;\n  const anonBaiClient = useAnonymousBackendaiClient({\n    api_endpoint,\n  });\n\n  const {\n    data: initializedTotp,\n    isSuccess,\n    isError,\n    mutate,\n  } = useTanMutation<\n    {\n      totp_key: string;\n      totp_uri: string;\n    },\n    null,\n    {\n      registration_token: string;\n    }\n  >({\n    mutationFn: ({ registration_token }) => {\n      return anonBaiClient.initialize_totp_anon({\n        registration_token,\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (open) {\n      mutate({\n        registration_token: totp_registration_token,\n      });\n    }\n  }, [open, mutate, totp_registration_token]);\n\n  const mutationToActivateTotp = useTanMutation<\n    {},\n    null,\n    {\n      registration_token: string;\n      otp: number;\n    }\n  >({\n    mutationFn: (values: TOTPActivateFormData) => {\n      return anonBaiClient.activate_totp_anon(values);\n    },\n  });\n\n  const _onOk = () => {\n    formRef.current\n      ?.validateFields()\n      .then((values) => {\n        mutationToActivateTotp.mutate(\n          {\n            otp: values.otp,\n            registration_token: totp_registration_token,\n          },\n          {\n            onSuccess: () => {\n              message.success(t('totp.TotpSetupCompleted'));\n              dispatchEvent('ok', null);\n            },\n            onError: () => {\n              message.error(t('totp.InvalidTotpCode'));\n            },\n          },\n        );\n      })\n      .catch(() => {});\n  };\n\n  return (\n    <BAIModal\n      title={t('webui.menu.SetupTotp')}\n      maskClosable={false}\n      confirmLoading={mutationToActivateTotp.isPending}\n      open={open}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      destroyOnClose\n      onOk={_onOk}\n      loading={!isSuccess}\n    >\n      {isError || !initializedTotp?.totp_uri || !initializedTotp?.totp_key ? (\n        <Flex>{t('totp.TotpSetupNotAvailable')}</Flex>\n      ) : (\n        <TOTPActivateForm\n          ref={formRef}\n          totp_uri={initializedTotp?.totp_uri}\n          totp_key={initializedTotp?.totp_key}\n        />\n      )}\n    </BAIModal>\n  );\n};\n\nexport default TOTPActivateModalWithToken;\n"],"names":["TOTPActivateModalWithToken","t","useTranslation","formRef","useRef","value","dispatchEvent","useWebComponentInfo","parsedValue","JSON","parse","error","open","totp_registration_token","api_endpoint","anonBaiClient","useAnonymousBackendaiClient","data","initializedTotp","isSuccess","isError","mutate","useTanMutation","mutationFn","_ref","registration_token","initialize_totp_anon","useEffect","mutationToActivateTotp","values","activate_totp_anon","_jsx","BAIModal","title","maskClosable","confirmLoading","isPending","onCancel","destroyOnClose","onOk","_onOk","_formRef$current","current","validateFields","then","otp","onSuccess","message","success","onError","catch","loading","children","totp_uri","totp_key","TOTPActivateForm","ref","Flex"],"sourceRoot":""}