{"version":3,"file":"static/js/1500.25080546.chunk.js","mappings":"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","sources":["components/ManageAppsModal.tsx","components/__generated__/ManageAppsModalMutation.graphql.ts"],"sourcesContent":["import { useSuspendedBackendaiClient } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport Flex from './Flex';\nimport { ImageFromEnvironment } from './ManageImageResourceLimitModal';\nimport { ManageAppsModalMutation } from './__generated__/ManageAppsModalMutation.graphql';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport {\n  Input,\n  Button,\n  Form,\n  message,\n  Typography,\n  App,\n  FormInstance,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useMutation } from 'react-relay';\n\nconst ManageAppsModal: React.FC<BAIModalProps> = ({ ...baiModalProps }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const formRef = React.useRef<FormInstance>(null);\n  const app = App.useApp();\n\n  const { token } = theme.useToken();\n\n  const {\n    parsedValue: { open, image, servicePorts },\n    dispatchEvent,\n  } = useWebComponentInfo<{\n    open?: boolean;\n    image: NonNullable<ImageFromEnvironment>; //TODO: This is not 100% same with Image type\n    servicePorts?: any;\n  }>();\n\n  const [commitModifyImageInput, isInFlightModifyImageInput] =\n    useMutation<ManageAppsModalMutation>(graphql`\n      mutation ManageAppsModalMutation(\n        $target: String!\n        $architecture: String\n        $props: ModifyImageInput!\n      ) {\n        modify_image(\n          target: $target\n          architecture: $architecture\n          props: $props\n        ) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const handleOnClick = () => {\n    formRef.current\n      ?.validateFields()\n      .then(() => {\n        const values = formRef.current\n          ?.getFieldValue('apps')\n          .map((item: { app: string; protocol: string; port: number }) => {\n            return `${item.app}:${item.protocol}:${item.port}`;\n          })\n          .join(',');\n\n        const labels = _.map(\n          image.labels as { [key in string]: string },\n          (value, key) => {\n            if (key.includes('service-ports')) {\n              return { key: key, value: values };\n            } else {\n              return { key: key, value: value?.toString() || '' };\n            }\n          },\n        );\n\n        const commitRequest = () =>\n          commitModifyImageInput({\n            variables: {\n              target: `${image.registry}/${image.name}:${image.tag}`,\n              architecture: image.architecture,\n              props: {\n                labels: labels,\n                resource_limits: baiClient.isManagerVersionCompatibleWith(\n                  '24.03.4.*',\n                )\n                  ? undefined\n                  : null,\n              },\n            },\n            onCompleted: (res, errors) => {\n              if (!res?.modify_image?.ok) {\n                message.error(res?.modify_image?.msg);\n                return;\n              }\n              if (errors && errors?.length > 0) {\n                const errorMsgList = _.map(errors, (error) => error.message);\n                for (const error of errorMsgList) {\n                  message.error(error, 2.5);\n                }\n              } else {\n                message.success(t('environment.DescImagePortsModified'));\n                dispatchEvent('ok', null);\n              }\n              return;\n            },\n            onError: (err) => {\n              message.error(t('dialog.ErrorOccurred'));\n            },\n          });\n\n        if (image.installed) {\n          app.modal.confirm({\n            title: 'Image reinstallation required',\n            content: (\n              <>\n                <Trans\n                  i18nKey={\n                    'environment.ModifyImageResourceLimitReinstallRequired'\n                  }\n                />\n              </>\n            ),\n            onOk: commitRequest,\n            getContainer: () => document.body,\n            closable: true,\n          });\n        } else {\n          commitRequest();\n        }\n      })\n      .catch((e) => {});\n  };\n\n  return (\n    <BAIModal\n      destroyOnClose\n      open={open}\n      onOk={handleOnClick}\n      onCancel={() => dispatchEvent('cancel', null)}\n      confirmLoading={isInFlightModifyImageInput}\n      title={t('environment.ManageApps')}\n      {...baiModalProps}\n    >\n      <Flex\n        direction=\"row\"\n        style={{ width: '100%', marginBottom: token.marginXS }}\n      >\n        <Typography.Text strong style={{ width: '32%' }}>\n          {t('environment.AppName')}\n        </Typography.Text>\n        <Typography.Text strong style={{ width: '32%' }}>\n          {t('environment.Protocol')}\n        </Typography.Text>\n        <Typography.Text strong style={{ width: '32%' }}>\n          {t('environment.Port')}\n        </Typography.Text>\n        <Flex></Flex>\n      </Flex>\n      <Form\n        ref={formRef}\n        layout=\"vertical\"\n        autoComplete=\"off\"\n        initialValues={{ apps: servicePorts }}\n        requiredMark={false}\n      >\n        <Flex direction=\"column\">\n          <Form.List name=\"apps\">\n            {(fields, { add, remove }) => (\n              <Flex direction=\"column\" style={{ width: '100%' }}>\n                {_.map(fields, (field, index) => (\n                  <Form.Item>\n                    <Flex direction=\"row\" key={field.key} gap={'xs'}>\n                      <Form.Item\n                        {...field}\n                        name={[field.name, 'app']}\n                        noStyle\n                        rules={[\n                          {\n                            required: true,\n                            message: t('environment.AppNameMustNotBeEmpty'),\n                          },\n                        ]}\n                      >\n                        <Input placeholder={t('environment.AppName')} />\n                      </Form.Item>\n                      <Form.Item\n                        {...field}\n                        name={[field.name, 'protocol']}\n                        noStyle\n                        rules={[\n                          {\n                            pattern: /^(http|tcp|pty|preopen)$/,\n                            required: true,\n                            message: t(\n                              'environment.ProtocolMustBeOneOfSupported',\n                            ),\n                          },\n                        ]}\n                      >\n                        <Input placeholder={t('environment.Protocol')} />\n                      </Form.Item>\n                      <Form.Item\n                        {...field}\n                        name={[field.name, 'port']}\n                        noStyle\n                        rules={[\n                          {\n                            validator: (rules, rawValue) => {\n                              const value =\n                                _.isUndefined(rawValue) || rawValue === ''\n                                  ? NaN\n                                  : _.toNumber(rawValue);\n                              if (\n                                _.isNaN(value) ||\n                                value < 0 ||\n                                value >= 65535\n                              ) {\n                                return Promise.reject(\n                                  t('environment.PortMustBeInRange'),\n                                );\n                              } else if (\n                                [2000, 2001, 2002, 2003, 2200, 7681].includes(\n                                  Number(value),\n                                )\n                              ) {\n                                return Promise.reject(\n                                  t('environment.PortReservedForInternalUse'),\n                                );\n                              }\n                              return Promise.resolve();\n                            },\n                          },\n                          {\n                            validator: (rule, value) => {\n                              const apps =\n                                formRef.current?.getFieldValue('apps');\n                              if (\n                                _.isString(value) &&\n                                value.length > 0 &&\n                                apps.some(\n                                  (item: any, itemIndex: number) =>\n                                    itemIndex !== index && item?.port === value,\n                                )\n                              ) {\n                                return Promise.reject(\n                                  t('environment.PortMustBeUnique'),\n                                );\n                              }\n                              return Promise.resolve();\n                            },\n                          },\n                        ]}\n                      >\n                        <Input placeholder={t('environment.Port')} />\n                      </Form.Item>\n                      <Button\n                        type=\"text\"\n                        danger\n                        onClick={() => remove(field.name)}\n                        style={\n                          index === 0\n                            ? { width: '10%', marginTop: 8 }\n                            : { width: '10%' }\n                        }\n                        icon={<DeleteOutlined />}\n                      />\n                    </Flex>\n                  </Form.Item>\n                ))}\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  {t('button.Add')}\n                </Button>\n              </Flex>\n            )}\n          </Form.List>\n        </Flex>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default ManageAppsModal;\n","/**\n * @generated SignedSource<<be344108d2c9db96959e2b5f85bed2b0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyImageInput = {\n  architecture?: string | null | undefined;\n  digest?: string | null | undefined;\n  image?: string | null | undefined;\n  is_local?: boolean | null | undefined;\n  labels?: ReadonlyArray<KVPairInput | null | undefined> | null | undefined;\n  name?: string | null | undefined;\n  registry?: string | null | undefined;\n  resource_limits?: ReadonlyArray<ResourceLimitInput | null | undefined> | null | undefined;\n  size_bytes?: number | null | undefined;\n  supported_accelerators?: ReadonlyArray<string | null | undefined> | null | undefined;\n  tag?: string | null | undefined;\n  type?: string | null | undefined;\n};\nexport type KVPairInput = {\n  key?: string | null | undefined;\n  value?: string | null | undefined;\n};\nexport type ResourceLimitInput = {\n  key?: string | null | undefined;\n  max?: string | null | undefined;\n  min?: string | null | undefined;\n};\nexport type ManageAppsModalMutation$variables = {\n  architecture?: string | null | undefined;\n  props: ModifyImageInput;\n  target: string;\n};\nexport type ManageAppsModalMutation$data = {\n  readonly modify_image: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type ManageAppsModalMutation = {\n  response: ManageAppsModalMutation$data;\n  variables: ManageAppsModalMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"architecture\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"target\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"architecture\",\n        \"variableName\": \"architecture\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"target\",\n        \"variableName\": \"target\"\n      }\n    ],\n    \"concreteType\": \"ModifyImage\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_image\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ManageAppsModalMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ManageAppsModalMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"b7a57119037085ec9f08346991633e0a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ManageAppsModalMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ManageAppsModalMutation(\\n  $target: String!\\n  $architecture: String\\n  $props: ModifyImageInput!\\n) {\\n  modify_image(target: $target, architecture: $architecture, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"bb280196745e96f5c488d1d785a5b012\";\n\nexport default node;\n"],"names":["_ref","baiModalProps","t","useTranslation","baiClient","useSuspendedBackendaiClient","formRef","React","app","App","useApp","token","theme","useToken","parsedValue","open","image","servicePorts","dispatchEvent","useWebComponentInfo","commitModifyImageInput","isInFlightModifyImageInput","useMutation","_ManageAppsModalMutation","require","_jsxs","BAIModal","destroyOnClose","onOk","handleOnClick","_formRef$current","current","validateFields","then","_formRef$current2","values","getFieldValue","map","item","concat","protocol","port","join","labels","_","value","key","includes","toString","commitRequest","variables","target","registry","name","tag","architecture","props","resource_limits","isManagerVersionCompatibleWith","undefined","onCompleted","res","errors","_res$modify_image","_res$modify_image2","modify_image","ok","length","errorMsgList","error","message","success","msg","onError","err","installed","modal","confirm","title","content","_jsx","_Fragment","children","Trans","i18nKey","getContainer","document","body","closable","catch","e","onCancel","confirmLoading","Flex","direction","style","width","marginBottom","marginXS","Typography","Text","strong","Form","ref","layout","autoComplete","initialValues","apps","requiredMark","List","fields","_ref2","add","remove","field","index","Item","gap","noStyle","rules","required","Input","placeholder","pattern","validator","rawValue","NaN","Promise","reject","Number","resolve","rule","_formRef$current3","some","itemIndex","Button","type","danger","onClick","marginTop","icon","DeleteOutlined","block","PlusOutlined","node","v0","v1","v2","v3","hash"],"sourceRoot":""}