{"version":3,"file":"static/js/9924.d63c97db.chunk.js","mappings":"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","sources":["components/ThemeSecondaryProvider.tsx","pages/StartPage.tsx"],"sourcesContent":["import { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport usePrimaryColors from '../hooks/usePrimaryColors';\nimport { theme, ConfigProvider, ConfigProviderProps, ThemeConfig } from 'antd';\nimport _ from 'lodash';\nimport React, { useContext } from 'react';\n\nconst ThemeSecondaryProvider: React.FC<ConfigProviderProps> = ({\n  ...props\n}) => {\n  const themeConfig = useCustomThemeConfig();\n  const config = useContext(ConfigProvider.ConfigContext);\n  const isParentDark = config.theme?.algorithm === theme.darkAlgorithm;\n  const primaryColors = usePrimaryColors();\n\n  const additionalThemeConfig = {\n    token: { colorPrimary: primaryColors.secondary },\n  } as ThemeConfig;\n  return (\n    <ConfigProvider\n      {...props}\n      theme={{\n        ...(isParentDark\n          ? _.merge({}, themeConfig?.dark, additionalThemeConfig, props.theme)\n          : _.merge(\n              {},\n              themeConfig?.light,\n              additionalThemeConfig,\n              props.theme,\n            )),\n        algorithm: isParentDark ? theme.darkAlgorithm : theme.defaultAlgorithm,\n      }}\n    />\n  );\n};\n\nexport default ThemeSecondaryProvider;\n","import ActionItemContent from '../components/ActionItemContent';\nimport AnnouncementAlert from '../components/AnnouncementAlert';\nimport BAIAlert from '../components/BAIAlert';\nimport Flex from '../components/Flex';\nimport FolderCreateModal from '../components/FolderCreateModal';\nimport { MenuKeys } from '../components/MainLayout/WebUISider';\nimport ThemeSecondaryProvider from '../components/ThemeSecondaryProvider';\nimport { filterEmptyItem } from '../helper';\nimport { useSuspendedBackendaiClient, useWebUINavigate } from '../hooks';\nimport { SessionLauncherFormValue } from './SessionLauncherPage';\nimport { AppstoreAddOutlined, FolderAddOutlined } from '@ant-design/icons';\nimport { Card, Col, Row } from 'antd';\nimport _ from 'lodash';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst StartPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  const baiClient = useSuspendedBackendaiClient();\n  const blockList = baiClient?._config?.blockList ?? [];\n  const inactiveList = baiClient?._config?.inactiveList ?? [];\n\n  const webuiNavigate = useWebUINavigate();\n  const [isOpenCreateModal, setIsOpenCreateModal] = useState<boolean>(false);\n\n  const items = filterEmptyItem<{\n    id: string;\n    requiredMenuKey: MenuKeys;\n    rowSpan: number;\n    columnSpan: number;\n    columnOffset: Record<number, number>;\n    data: {\n      content: React.ReactNode;\n    };\n  }>([\n    {\n      id: 'createFolder',\n      requiredMenuKey: 'data',\n      rowSpan: 3,\n      columnSpan: 1,\n      columnOffset: { 6: 0, 4: 0 },\n      data: {\n        content: (\n          <ActionItemContent\n            title={t('start.CreateFolder')}\n            description={t('start.CreateFolderDesc')}\n            buttonText={t('start.button.CreateFolder')}\n            icon={<FolderAddOutlined />}\n            onClick={() => setIsOpenCreateModal(true)}\n          />\n        ),\n      },\n    },\n    {\n      id: 'startSession',\n      requiredMenuKey: 'job',\n      rowSpan: 3,\n      columnSpan: 1,\n      columnOffset: { 6: 1, 4: 1 },\n      data: {\n        content: (\n          <ActionItemContent\n            title={t('start.StartSession')}\n            description={t('start.StartSessionDesc')}\n            buttonText={t('start.button.StartSession')}\n            icon={<AppstoreAddOutlined />}\n            onClick={() => webuiNavigate('/session/start')}\n          />\n        ),\n      },\n    },\n    {\n      id: 'startBatchSession',\n      requiredMenuKey: 'job',\n      rowSpan: 3,\n      columnSpan: 1,\n      columnOffset: { 6: 2, 4: 2 },\n      data: {\n        content: (\n          <ActionItemContent\n            title={t('start.StartBatchSession')}\n            description={t('start.StartBatchSessionDesc')}\n            buttonText={t('start.button.StartSession')}\n            icon={<AppstoreAddOutlined />}\n            onClick={() => {\n              const launcherValue: DeepPartial<SessionLauncherFormValue> = {\n                sessionType: 'batch',\n              };\n              const params = new URLSearchParams();\n              params.set('step', '0');\n              params.set('formValues', JSON.stringify(launcherValue));\n              webuiNavigate(`/session/start?${params.toString()}`);\n            }}\n          />\n        ),\n      },\n    },\n    {\n      id: 'modelService',\n      rowSpan: 3,\n      requiredMenuKey: 'serving',\n      columnSpan: 1,\n      columnOffset: { 6: 0, 4: 0 },\n      data: {\n        content: (\n          <ThemeSecondaryProvider>\n            <ActionItemContent\n              title={t('start.ModelService')}\n              description={t('start.ModelServiceDesc')}\n              buttonText={t('start.button.ModelService')}\n              icon={<AppstoreAddOutlined />}\n              onClick={() => webuiNavigate('/service/start')}\n            />\n          </ThemeSecondaryProvider>\n        ),\n      },\n    },\n    // {\n    //   id: 'startFromURL',\n    //   rowSpan: 3,\n    //   columnSpan: 1,\n    //   columnOffset: { 6: 1, 4: 1 },\n    //   data: {\n    //     content: (\n    //       <ThemeSecondaryProvider>\n    //         <ActionItemContent\n    //           title={t('start.StartFromURL')}\n    //           description={t('start.StartFromURLDesc')}\n    //           buttonText={t('start.button.StartNow')}\n    //           icon={<LinkOutlined />}\n    //           onClick={() => webuiNavigate('/import')}\n    //         />\n    //       </ThemeSecondaryProvider>\n    //     ),\n    //   },\n    // },\n    // {\n    //   id: 'startFromExample',\n    //   rowSpan: 3,\n    //   columnSpan: 1,\n    //   columnOffset: { 6:2, 4: 2 },\n    //   data: {\n    //     content: (\n    //       <ThemeSecondaryProvider>\n    //         <ActionItemContent\n    //           title={t('start.StartFromExample')}\n    //           description={t('start.StartFromExampleDesc')}\n    //           buttonText={t('start.button.StartNow')}\n    //           icon={<PlaySquareOutlined />}\n    //           onClick={() => webuiNavigate('/import')}\n    //         />\n    //       </ThemeSecondaryProvider>\n    //     ),\n    //   },\n    // },\n  ]).filter(\n    (item) =>\n      !_.includes(blockList, item.requiredMenuKey) &&\n      !_.includes(inactiveList, item.requiredMenuKey),\n  );\n\n  return (\n    <Flex direction=\"column\" gap={'md'} align=\"stretch\">\n      {/* <BAIBoard\n        items={items}\n        onItemsChange={(event) => {\n          // use spread operator to ignore readonly type error\n          const changedItems = [...event.detail.items];\n          setItems(changedItems);\n          setItemSettings(_.map(changedItems, (item) => _.omit(item, 'data')));\n        }}\n      /> */}\n      <AnnouncementAlert showIcon closable />\n      {_.isEmpty(items) && (\n        <BAIAlert type=\"info\" description={t('start.NoStartItems')} showIcon />\n      )}\n      <Row gutter={[16, 16]}>\n        {_.map(items, (item, idx) => {\n          return (\n            <Col key={item.id} xs={24} md={12} xl={6}>\n              <Card\n                style={{ height: 340 }}\n                styles={{\n                  body: {\n                    height: '100%',\n                    padding: 0,\n                  },\n                }}\n              >\n                {item.data.content}\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n      <FolderCreateModal\n        open={isOpenCreateModal}\n        onRequestClose={(response) => {\n          setIsOpenCreateModal(false);\n          if (response) {\n            webuiNavigate('/data');\n          }\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default StartPage;\n"],"names":["_ref","_config$theme","props","themeConfig","useCustomThemeConfig","isParentDark","useContext","ConfigProvider","theme","algorithm","darkAlgorithm","additionalThemeConfig","token","colorPrimary","usePrimaryColors","secondary","_jsx","_","dark","light","defaultAlgorithm","StartPage","_baiClient$_config$bl","_baiClient$_config","_baiClient$_config$in","_baiClient$_config2","t","useTranslation","baiClient","useSuspendedBackendaiClient","blockList","_config","inactiveList","webuiNavigate","useWebUINavigate","isOpenCreateModal","setIsOpenCreateModal","useState","items","filterEmptyItem","id","requiredMenuKey","rowSpan","columnSpan","columnOffset","data","content","ActionItemContent","title","description","buttonText","icon","FolderAddOutlined","onClick","AppstoreAddOutlined","params","URLSearchParams","set","JSON","stringify","sessionType","toString","ThemeSecondaryProvider","children","filter","item","_jsxs","Flex","direction","gap","align","AnnouncementAlert","showIcon","closable","BAIAlert","type","Row","gutter","idx","Col","xs","md","xl","Card","style","height","styles","body","padding","FolderCreateModal","open","onRequestClose","response"],"sourceRoot":""}