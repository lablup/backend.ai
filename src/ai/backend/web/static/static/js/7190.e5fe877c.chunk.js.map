{"version":3,"file":"static/js/7190.e5fe877c.chunk.js","mappings":"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","sources":["__generated__/SessionMetricGraphQuery.graphql.ts","__generated__/UserSessionsMetricsQuery.graphql.ts","components/BAIBoard.tsx","hooks/useUserUsageStats.ts","components/AllocationHistoryStatistics.tsx","components/AllocationHistory.tsx","components/SessionMetricGraph.tsx","components/UserSessionsMetrics.tsx","pages/StatisticsPage.tsx"],"sourcesContent":["/**\n * @generated SignedSource<<2e770ed91c30200051ea2468dcbb39b1>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type UserUtilizationMetricQueryInput = {\n  end: string;\n  metric_name: string;\n  start: string;\n  step: string;\n  value_type?: string | null | undefined;\n};\nexport type SessionMetricGraphQuery$variables = {\n  capacityProps: UserUtilizationMetricQueryInput;\n  currentProps: UserUtilizationMetricQueryInput;\n  user_id: string;\n};\nexport type SessionMetricGraphQuery$data = {\n  readonly capacity_metric: {\n    readonly metrics: ReadonlyArray<{\n      readonly avg_value: string | null | undefined;\n      readonly max_value: string | null | undefined;\n      readonly metric_name: string | null | undefined;\n      readonly value_type: string | null | undefined;\n      readonly values: ReadonlyArray<{\n        readonly timestamp: number | null | undefined;\n        readonly value: string | null | undefined;\n      } | null | undefined> | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly user_id: string | null | undefined;\n  } | null | undefined;\n  readonly current_metric: {\n    readonly metrics: ReadonlyArray<{\n      readonly avg_value: string | null | undefined;\n      readonly max_value: string | null | undefined;\n      readonly metric_name: string | null | undefined;\n      readonly value_type: string | null | undefined;\n      readonly values: ReadonlyArray<{\n        readonly timestamp: number | null | undefined;\n        readonly value: string | null | undefined;\n      } | null | undefined> | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly user_id: string | null | undefined;\n  } | null | undefined;\n};\nexport type SessionMetricGraphQuery = {\n  response: SessionMetricGraphQuery$data;\n  variables: SessionMetricGraphQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"capacityProps\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"currentProps\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"user_id\"\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"user_id\",\n  \"variableName\": \"user_id\"\n},\nv4 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"user_id\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"ContainerUtilizationMetric\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"metrics\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"metric_name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"value_type\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"MetricResultValue\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"values\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"timestamp\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"value\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"max_value\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"avg_value\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n],\nv5 = [\n  {\n    \"alias\": \"capacity_metric\",\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"capacityProps\"\n      },\n      (v3/*: any*/)\n    ],\n    \"concreteType\": \"UserUtilizationMetric\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_utilization_metric\",\n    \"plural\": false,\n    \"selections\": (v4/*: any*/),\n    \"storageKey\": null\n  },\n  {\n    \"alias\": \"current_metric\",\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"currentProps\"\n      },\n      (v3/*: any*/)\n    ],\n    \"concreteType\": \"UserUtilizationMetric\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_utilization_metric\",\n    \"plural\": false,\n    \"selections\": (v4/*: any*/),\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"SessionMetricGraphQuery\",\n    \"selections\": (v5/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"SessionMetricGraphQuery\",\n    \"selections\": (v5/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"aa2a1000ef4410eaa2da853eabbdf0d6\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"SessionMetricGraphQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query SessionMetricGraphQuery(\\n  $user_id: UUID!\\n  $capacityProps: UserUtilizationMetricQueryInput!\\n  $currentProps: UserUtilizationMetricQueryInput!\\n) {\\n  capacity_metric: user_utilization_metric(user_id: $user_id, props: $capacityProps) {\\n    user_id\\n    metrics {\\n      metric_name\\n      value_type\\n      values {\\n        timestamp\\n        value\\n      }\\n      max_value\\n      avg_value\\n    }\\n  }\\n  current_metric: user_utilization_metric(user_id: $user_id, props: $currentProps) {\\n    user_id\\n    metrics {\\n      metric_name\\n      value_type\\n      values {\\n        timestamp\\n        value\\n      }\\n      max_value\\n      avg_value\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"88c8725f744a307e05f63cff149489f0\";\n\nexport default node;\n","/**\n * @generated SignedSource<<536f7efa26b5f1901dc2dee81e14eba8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type UserSessionsMetricsQuery$variables = Record<PropertyKey, never>;\nexport type UserSessionsMetricsQuery$data = {\n  readonly container_utilization_metric_metadata: {\n    readonly metric_names: ReadonlyArray<string | null | undefined> | null | undefined;\n  } | null | undefined;\n};\nexport type UserSessionsMetricsQuery = {\n  response: UserSessionsMetricsQuery$data;\n  variables: UserSessionsMetricsQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"ContainerUtilizationMetricMetadata\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"container_utilization_metric_metadata\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"metric_names\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSessionsMetricsQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSessionsMetricsQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"21560ceabb06c90e8704f9796db735f7\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSessionsMetricsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSessionsMetricsQuery {\\n  container_utilization_metric_metadata {\\n    metric_names\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"9d7023ac80a345ed8f9823d881a345a4\";\n\nexport default node;\n","import Board, { BoardProps } from '@cloudscape-design/board-components/board';\nimport BoardItem from '@cloudscape-design/board-components/board-item';\nimport { createStyles } from 'antd-style';\nimport classNames from 'classnames';\n\nconst useStyles = createStyles(({ css, token }) => {\n  return {\n    board: css`\n      .bai_board_placeholder {\n        border-radius: var(--token-borderRadius) !important;\n      }\n      .bai_board_placeholder--active {\n        background-color: var(--token-colorSplit) !important ;\n      }\n      .bai_board_placeholder--hover {\n        background-color: var(--token-colorPrimaryHover) !important ;\n        // FIXME: global token doesn't exist, so opacity fits color\n        opacity: 0.3;\n      }\n      .bai_board_handle button span {\n        color: ${token.colorTextTertiary} !important;\n      }\n      .bai_board_container-override\n        > div:first-child\n        > div:nth-child(2)\n        > div:first-child {\n        padding: 0 !important;\n      }\n    `,\n    disableResize: css`\n      .bai_board_resizer {\n        display: none !important;\n      }\n    `,\n    disableMove: css`\n      .bai_board_handle {\n        display: none !important;\n      }\n      .bai_board_header {\n        display: none !important;\n      }\n    `,\n    boardItems: css`\n      & > div:first-child {\n        border-radius: var(--token-borderRadius) !important;\n        background-color: var(--token-colorBgContainer) !important;\n        border: 1px solid ${token.colorBorderSecondary} !important;\n      }\n\n      & > div:first-child > div:first-child > div:first-child {\n        margin-bottom: var(--token-margin);\n        background-color: var(--token-colorBgContainer) !important;\n        position: absolute;\n        z-index: 1;\n      }\n    `,\n    disableBorder: css`\n      & > div:first-child {\n        border: none !important;\n      }\n    `,\n  };\n});\n\nexport interface BAIBoardDataType {\n  content?: React.ReactNode;\n}\n\nexport type BAIBoardItem = BoardProps.Item<BAIBoardDataType>;\nexport interface BAIBoardProps<T extends BAIBoardDataType = BAIBoardDataType> {\n  items: Array<BoardProps.Item<T>>;\n  onItemsChange: (event: CustomEvent<BoardProps.ItemsChangeDetail<T>>) => void;\n  resizable?: boolean;\n  movable?: boolean;\n  bordered?: boolean;\n}\n\nconst BAIBoard = <T extends BAIBoardDataType>({\n  items,\n  resizable = false,\n  movable = false,\n  bordered = false,\n  ...BoardProps\n}: BAIBoardProps<T>) => {\n  const { styles } = useStyles();\n  return (\n    <Board<T>\n      className={classNames(\n        styles.board,\n        !movable && styles.disableMove,\n        !resizable && styles.disableResize,\n      )}\n      empty\n      renderItem={(item: BoardProps.Item<T>) => {\n        return (\n          <BoardItem\n            className={classNames(\n              styles.boardItems,\n              !bordered && styles.disableBorder,\n            )}\n            key={item.id}\n            i18nStrings={{\n              dragHandleAriaLabel: '',\n              dragHandleAriaDescription: '',\n              resizeHandleAriaLabel: '',\n              resizeHandleAriaDescription: '',\n            }}\n            {...item}\n          >\n            {item.data.content}\n          </BoardItem>\n        );\n      }}\n      items={items}\n      i18nStrings={(() => {\n        const createAnnouncement = (\n          operationAnnouncement: any,\n          conflicts: any,\n          disturbed: any,\n        ) => {\n          const conflictsAnnouncement =\n            conflicts.length > 0\n              ? `Conflicts with ${conflicts\n                  .map((c: any) => c.data.title)\n                  .join(', ')}.`\n              : '';\n          const disturbedAnnouncement =\n            disturbed.length > 0 ? `Disturbed ${disturbed.length} items.` : '';\n          return [\n            operationAnnouncement,\n            conflictsAnnouncement,\n            disturbedAnnouncement,\n          ]\n            .filter(Boolean)\n            .join(' ');\n        };\n        return {\n          liveAnnouncementDndStarted: (operationType) =>\n            operationType === 'resize' ? 'Resizing' : 'Dragging',\n          liveAnnouncementDndItemReordered: (operation) => {\n            const columns = `column ${operation.placement.x + 1}`;\n            const rows = `row ${operation.placement.y + 1}`;\n            return createAnnouncement(\n              `Item moved to ${\n                operation.direction === 'horizontal' ? columns : rows\n              }.`,\n              operation.conflicts,\n              operation.disturbed,\n            );\n          },\n          liveAnnouncementDndItemResized: (operation) => {\n            const columnsConstraint = operation.isMinimalColumnsReached\n              ? ' (minimal)'\n              : '';\n            const rowsConstraint = operation.isMinimalRowsReached\n              ? ' (minimal)'\n              : '';\n            const sizeAnnouncement =\n              operation.direction === 'horizontal'\n                ? `columns ${operation.placement.width}${columnsConstraint}`\n                : `rows ${operation.placement.height}${rowsConstraint}`;\n            return createAnnouncement(\n              `Item resized to ${sizeAnnouncement}.`,\n              operation.conflicts,\n              operation.disturbed,\n            );\n          },\n          liveAnnouncementDndItemInserted: (operation) => {\n            const columns = `column ${operation.placement.x + 1}`;\n            const rows = `row ${operation.placement.y + 1}`;\n            return createAnnouncement(\n              `Item inserted to ${columns}, ${rows}.`,\n              operation.conflicts,\n              operation.disturbed,\n            );\n          },\n          liveAnnouncementDndCommitted: (operationType) =>\n            `${operationType} committed`,\n          liveAnnouncementDndDiscarded: (operationType) =>\n            `${operationType} discarded`,\n          liveAnnouncementItemRemoved: (op: any) =>\n            createAnnouncement(\n              `Removed item ${op.item.data.title}.`,\n              [],\n              op.disturbed,\n            ),\n          navigationAriaLabel: 'Board navigation',\n          navigationAriaDescription:\n            'Click on non-empty item to move focus over',\n          navigationItemAriaLabel: (item: any) =>\n            item ? item.data.title : 'Empty',\n        };\n      })()}\n      {...BoardProps}\n    />\n  );\n};\n\nexport default BAIBoard;\n","import { UserStatsData, useSuspendedBackendaiClient } from '.';\nimport { useSuspenseTanQuery } from './reactQueryAlias';\n\ntype Options = {\n  fetchKey?: string;\n};\n\nconst useUserUsageStats = (options?: Options) => {\n  const baiClient = useSuspendedBackendaiClient();\n\n  return useSuspenseTanQuery<UserStatsData[]>({\n    queryKey: ['UsageHistory', baiClient._config._userId, options?.fetchKey],\n    queryFn: () => {\n      return baiClient.resources.user_stats();\n    },\n  });\n};\n\nexport default useUserUsageStats;\n","import { convertToBinaryUnit, convertToDecimalUnit, SizeUnit } from '../helper';\nimport {\n  UserStatsData,\n  UserStatsDataKey,\n  useSuspendedBackendaiClient,\n} from '../hooks';\nimport { useThemeMode } from '../hooks/useThemeMode';\nimport useUserUsageStats from '../hooks/useUserUsageStats';\nimport { Period } from './AllocationHistory';\nimport Flex from './Flex';\nimport QuestionIconWithTooltip from './QuestionIconWithTooltip';\nimport { Column, ColumnConfig } from '@ant-design/charts';\nimport { Card } from 'antd';\nimport { createStyles } from 'antd-style';\nimport dayjs from 'dayjs';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = createStyles(({ css, token }) => ({\n  graphCard: css`\n    .g2-tooltip {\n      background-color: ${token.colorBgSpotlight} !important;\n      border: none !important;\n    }\n    .g2-tooltip-title {\n      color: ${token.colorTextLightSolid} !important;\n    }\n    .g2-tooltip-list-item-name {\n      color: ${token.colorTextLightSolid} !important;\n    }\n    .g2-tooltip-list-item-value {\n      color: ${token.colorTextLightSolid} !important;\n    }\n  `,\n}));\n\ntype ByteUnit = 'B' | 'KiB' | 'MiB' | 'GiB' | 'TiB' | 'PiB' | 'EiB';\ntype DecimalUnit = 'B' | 'KB' | 'MB' | 'GB' | 'TB' | 'PB' | 'EB';\n\nconst DAY_LENGTH = 4 * 24;\nconst WEEK_LENGTH = DAY_LENGTH * 7;\n\ninterface GraphCardProps {\n  title: string;\n  tooltipText?: string;\n  children: React.ReactNode;\n}\nexport const GraphCard = ({ title, tooltipText, children }: GraphCardProps) => (\n  <Card\n    type=\"inner\"\n    title={\n      <Flex gap={'xxs'}>\n        {title}\n        {tooltipText ? <QuestionIconWithTooltip title={tooltipText} /> : null}\n      </Flex>\n    }\n    style={{ width: '100%' }}\n  >\n    {children}\n  </Card>\n);\n\ninterface getColumnConfigParams {\n  data: UserStatsData[];\n  key: UserStatsDataKey;\n  period: Period;\n  targetUnit: SizeUnit | 'count';\n  displayUnit: ByteUnit | DecimalUnit | 'count';\n  unitType: 'byte' | 'decimal' | 'count';\n  isDarkMode: boolean;\n}\n\nconst getColumnConfig = ({\n  data,\n  key,\n  period,\n  targetUnit,\n  displayUnit,\n  unitType,\n  isDarkMode,\n}: getColumnConfigParams): ColumnConfig => {\n  const formatValue = (value: number) => {\n    if (unitType === 'count') {\n      return value;\n    }\n    if (unitType === 'byte') {\n      return convertToBinaryUnit(value, targetUnit as SizeUnit)?.number ?? 0;\n    }\n    if (unitType === 'decimal') {\n      return convertToDecimalUnit(value, targetUnit as SizeUnit)?.number ?? 0;\n    }\n    return value;\n  };\n\n  return {\n    data: data\n      .filter(\n        (_, i) =>\n          data.length - (period === '1D' ? DAY_LENGTH : WEEK_LENGTH) <= i,\n      )\n      .map((d) => ({\n        date: dayjs(d.date * 1000).format('MMM DD HH:mm'),\n        value: formatValue(d[key].value),\n      })),\n    xField: 'date',\n    yField: 'value',\n    axis: {\n      x: {\n        labelAutoHide: true,\n        tickFilter: (_: any, index: any) =>\n          index % (period === '1D' ? 12 : 48) === 0,\n      },\n      y: {\n        title: displayUnit,\n      },\n    },\n    animate: { enter: { type: 'growInY' } },\n    theme: isDarkMode ? 'dark' : 'light',\n  };\n};\n\ninterface AllocationHistoryStatisticsProps {\n  period: Period;\n  fetchKey?: string;\n}\n\nconst AllocationHistoryStatistics: React.FC<\n  AllocationHistoryStatisticsProps\n> = ({ period, fetchKey }) => {\n  const { t } = useTranslation();\n  const { data } = useUserUsageStats({\n    fetchKey,\n  });\n  const { isDarkMode } = useThemeMode();\n  const { styles } = useStyles();\n  const baiClient = useSuspendedBackendaiClient();\n\n  return (\n    <Flex\n      className={styles.graphCard}\n      direction=\"column\"\n      align=\"start\"\n      gap=\"md\"\n    >\n      <GraphCard title=\"Sessions\" tooltipText={t('statistics.SessionsDesc')}>\n        <Column\n          height={200}\n          {...getColumnConfig({\n            data,\n            key: 'num_sessions',\n            period,\n            targetUnit: 'count',\n            displayUnit: 'count',\n            unitType: 'count',\n            isDarkMode,\n          })}\n        />\n      </GraphCard>\n      <GraphCard title=\"CPU\" tooltipText={t('statistics.CPUDesc')}>\n        <Column\n          height={200}\n          {...getColumnConfig({\n            data,\n            key: 'cpu_allocated',\n            period,\n            targetUnit: 'count',\n            displayUnit: 'count',\n            unitType: 'count',\n            isDarkMode,\n          })}\n        />\n      </GraphCard>\n      <GraphCard title=\"Memory\" tooltipText={t('statistics.MemoryDesc')}>\n        <Column\n          height={200}\n          {...getColumnConfig({\n            data,\n            key: 'mem_allocated',\n            period,\n            targetUnit: 'g',\n            displayUnit: 'GiB',\n            unitType: 'byte',\n            isDarkMode,\n          })}\n        />\n      </GraphCard>\n      <GraphCard title=\"GPU\" tooltipText={t('statistics.GPUDesc')}>\n        <Column\n          height={200}\n          {...getColumnConfig({\n            data,\n            key: 'gpu_allocated',\n            period,\n            targetUnit: 'count',\n            displayUnit: 'count',\n            unitType: 'count',\n            isDarkMode,\n          })}\n        />\n      </GraphCard>\n      {!baiClient?.supports('user-metrics') ? (\n        <>\n          <GraphCard title=\"IO-Read\" tooltipText={t('statistics.IOReadDesc')}>\n            <Column\n              height={200}\n              {...getColumnConfig({\n                data,\n                key: 'io_read_bytes',\n                period,\n                targetUnit: 'm',\n                displayUnit: 'MiB',\n                unitType: 'decimal',\n                isDarkMode,\n              })}\n            />\n          </GraphCard>\n          <GraphCard title=\"IO-Write\" tooltipText={t('statistics.IOWriteDesc')}>\n            <Column\n              height={200}\n              {...getColumnConfig({\n                data,\n                key: 'io_write_bytes',\n                period,\n                targetUnit: 'm',\n                displayUnit: 'MiB',\n                unitType: 'decimal',\n                isDarkMode,\n              })}\n            />\n          </GraphCard>\n        </>\n      ) : null}\n    </Flex>\n  );\n};\n\nexport default AllocationHistoryStatistics;\n","import { useUpdatableState } from '../hooks';\nimport AllocationHistoryStatistics from './AllocationHistoryStatistics';\nimport BAIFetchKeyButton from './BAIFetchKeyButton';\nimport Flex from './Flex';\nimport { Alert, Form, Select, Skeleton, theme } from 'antd';\nimport { Suspense, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { createEnumParam, useQueryParam, withDefault } from 'use-query-params';\n\nexport type Period = '1D' | '1W';\nconst periodParam = withDefault(createEnumParam<Period>(['1D', '1W']), '1D');\n\nconst AllocationHistory: React.FC = () => {\n  const [selectedPeriod, setSelectedPeriod] = useQueryParam(\n    'period',\n    periodParam,\n  );\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [usageFetchKey, updateUsageFetchKey] = useUpdatableState('first');\n  const [isPendingUsageTransition, startUsageTransition] = useTransition();\n  let periodOptions: Array<{\n    label: string;\n    value: Period;\n  }> = [\n    {\n      label: t('statistics.1Day'),\n      value: '1D',\n    },\n    {\n      label: t('statistics.1Week'),\n      value: '1W',\n    },\n  ];\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      gap={'md'}\n      style={{ padding: token.paddingMD }}\n    >\n      <Alert showIcon message={t('statistics.UsageHistoryNote')} type=\"info\" />\n      <Flex gap={'sm'} justify=\"between\">\n        <Form.Item\n          label={t('statistics.SelectPeriod')}\n          style={{ marginBottom: 0 }}\n        >\n          <Select\n            popupMatchSelectWidth={false}\n            options={periodOptions}\n            value={selectedPeriod}\n            onChange={(value) => setSelectedPeriod(value)}\n          />\n        </Form.Item>\n        <BAIFetchKeyButton\n          loading={isPendingUsageTransition}\n          value={usageFetchKey}\n          onChange={() => {\n            startUsageTransition(() => {\n              updateUsageFetchKey();\n            });\n          }}\n        />\n      </Flex>\n      <Suspense fallback={<Skeleton active />}>\n        <AllocationHistoryStatistics\n          period={selectedPeriod || '1D'}\n          fetchKey={usageFetchKey}\n        />\n      </Suspense>\n    </Flex>\n  );\n};\n\nexport default AllocationHistory;\n","import {\n  SessionMetricGraphQuery,\n  SessionMetricGraphQuery$data,\n} from '../__generated__/SessionMetricGraphQuery.graphql';\nimport {\n  convertToBinaryUnit,\n  convertToDecimalUnit,\n  toFixedFloorWithoutTrailingZeros,\n} from '../helper';\nimport { useResourceSlotsDetails } from '../hooks/backendai';\nimport Flex from './Flex';\nimport QuestionIconWithTooltip from './QuestionIconWithTooltip';\nimport { Empty, Typography, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { useMemo } from 'react';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  ReferenceLine,\n  Tooltip as ChartTooltip,\n} from 'recharts';\n\nconst useStyle = createStyles(({ css, token }) => ({\n  recharts: css`\n    .recharts-label {\n      fill: ${token.colorTextDescription};\n    }\n    .recharts-cartesian-axis-line {\n      stroke: ${token.colorBorder};\n    }\n    .recharts-cartesian-axis-tick-line {\n      stroke: ${token.colorBorder};\n    }\n    .recharts-cartesian-axis-tick-value {\n      fill: ${token.colorTextDescription};\n    }\n    .recharts-default-tooltip {\n      background-color: ${token.colorBgSpotlight} !important;\n      border: none !important;\n      color: ${token.colorTextLightSolid} !important;\n    }\n  `,\n}));\n\ntype MetricData = NonNullable<\n  NonNullable<SessionMetricGraphQuery$data['current_metric']>['metrics']\n>;\n\ninterface PrometheusMetricGraphProps {\n  queryProps: {\n    startDate: string;\n    endDate: string;\n    metricName: string;\n    userId: string;\n    dayDiff: number;\n  };\n  key: string;\n  fetchKey: string;\n  tooltip?: string | React.ReactNode;\n}\n\nconst SessionMetricGraph: React.FC<PrometheusMetricGraphProps> = ({\n  queryProps: { startDate, endDate, metricName, userId, dayDiff },\n  key,\n  fetchKey,\n  tooltip,\n}) => {\n  const { token } = theme.useToken();\n  const { styles } = useStyle();\n  const { mergedResourceSlots } = useResourceSlotsDetails();\n\n  const { capacity_metric, current_metric } =\n    useLazyLoadQuery<SessionMetricGraphQuery>(\n      graphql`\n        query SessionMetricGraphQuery(\n          $user_id: UUID!\n          $capacityProps: UserUtilizationMetricQueryInput!\n          $currentProps: UserUtilizationMetricQueryInput!\n        ) {\n          capacity_metric: user_utilization_metric(\n            user_id: $user_id\n            props: $capacityProps\n          ) {\n            user_id\n            metrics {\n              metric_name\n              value_type\n              values {\n                timestamp\n                value\n              }\n              max_value\n              avg_value\n            }\n          }\n          current_metric: user_utilization_metric(\n            user_id: $user_id\n            props: $currentProps\n          ) {\n            user_id\n            metrics {\n              metric_name\n              value_type\n              values {\n                timestamp\n                value\n              }\n              max_value\n              avg_value\n            }\n          }\n        }\n      `,\n      {\n        user_id: userId,\n        capacityProps: {\n          metric_name: metricName,\n          start: startDate,\n          end: endDate,\n          step: dayDiff < 7 ? '5m' : dayDiff < 30 ? '1h' : '1d',\n          value_type: 'capacity',\n        },\n        currentProps: {\n          metric_name: metricName,\n          start: startDate,\n          end: endDate,\n          step: dayDiff < 7 ? '5m' : dayDiff < 30 ? '1h' : '1d',\n          value_type: 'current',\n        },\n      },\n      {\n        fetchPolicy: 'store-and-network',\n        fetchKey,\n      },\n    );\n\n  const convertMetricFunction: Record<\n    string,\n    (value: string) => number | string\n  > = {\n    cpu_util: (value: string) => _.toNumber(value) / 10,\n  };\n\n  const metricData = getMetricData(\n    capacity_metric?.metrics ?? [],\n    current_metric?.metrics ?? [],\n    startDate,\n    endDate,\n    dayDiff < 7 ? '5m' : dayDiff < 30 ? '1h' : '1d',\n    convertMetricFunction[metricName] ?? undefined,\n  );\n\n  const resourceSlotKey = useMemo(() => {\n    const [key] = _.split(metricName, '_');\n    return (\n      _.find(_.keys(mergedResourceSlots), (slotKey) =>\n        _.startsWith(slotKey, key),\n      ) ?? ''\n    );\n  }, [mergedResourceSlots, metricName]);\n  const deviceDescription = mergedResourceSlots[resourceSlotKey]?.description;\n\n  const getMetricTitle = () => {\n    const [, ...rest] = _.split(metricName, '_');\n    const restLabel = _.startCase(rest.join(' '));\n\n    // TODO: Modify to use display name when display name is added to device metadata.\n    // Currently, cuda and rocm have the same human_readable_name in device_metadata.\n    if (deviceDescription) {\n      return `${deviceDescription} ${restLabel}`;\n    } else if (_.includes(metricName.toLowerCase(), 'io')) {\n      return `${_.startCase(metricName.replaceAll('io', 'IO').replaceAll('_', ' '))}`;\n    } else {\n      return `${_.startCase(metricName.replaceAll('_', ' '))}`;\n    }\n  };\n\n  return (\n    <Flex\n      key={key}\n      direction=\"column\"\n      align=\"stretch\"\n      gap=\"sm\"\n      style={{\n        height: '100%',\n        overflow: 'hidden',\n      }}\n    >\n      <Flex align=\"center\" style={{ height: 56, marginLeft: 52 }} gap=\"xs\">\n        <Typography.Text style={{ fontSize: token.fontSizeHeading5 }} strong>\n          {getMetricTitle()}\n        </Typography.Text>\n        {tooltip ? <QuestionIconWithTooltip title={tooltip} /> : null}\n      </Flex>\n      {_.isEmpty(capacity_metric?.metrics) &&\n      _.isEmpty(current_metric?.metrics) ? (\n        <Empty\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n          style={{ height: '100%', alignContent: 'center' }}\n        />\n      ) : (\n        <ResponsiveContainer style={{ paddingRight: token.marginXL }}>\n          <LineChart data={metricData} className={styles.recharts}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"timestamp\" minTickGap={token.marginMD} />\n            <YAxis domain={[0, 'dataMax']} />\n            <ChartTooltip\n              formatter={(value) => {\n                return `${value}${convertMetricUnit(undefined, metricName).numberUnit}`;\n              }}\n            />\n            <Legend />\n            <ReferenceLine\n              y={\n                convertMetricUnit(\n                  current_metric?.metrics?.[0]?.avg_value,\n                  current_metric?.metrics?.[0]?.metric_name,\n                ).number\n              }\n              label=\"Avg Used\"\n              stroke={token.red}\n              strokeWidth={0.6}\n              strokeDasharray=\"6 6\"\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"capacity\"\n              stroke={token.colorSuccess}\n              dot={{ r: 0 }}\n              strokeWidth={2}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"used\"\n              stroke={token.colorPrimary}\n              strokeWidth={2}\n              dot={{ r: 0 }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      )}\n    </Flex>\n  );\n};\n\nexport default SessionMetricGraph;\n\nconst getMetricData = (\n  capacityMetric: MetricData,\n  currentMetric: MetricData,\n  start: string,\n  end: string,\n  step: string,\n  convertValueFunction?: (value: string) => number | string,\n) => {\n  // orders by capacity, current\n  const transformedData = _.zip(\n    capacityMetric[0]?.values ||\n      Array(currentMetric[0]?.values?.length).fill(0),\n    currentMetric[0]?.values,\n  ).map(([capacity, current]) => {\n    return {\n      timestamp: current?.timestamp,\n      capacity: convertValueFunction\n        ? convertValueFunction(capacity?.value)\n        : capacity?.value,\n      used: convertValueFunction\n        ? convertValueFunction(current?.value)\n        : current?.value,\n    };\n  });\n\n  const timeUnits = { s: 1, m: 60, h: 3600, d: 86400 };\n  const stepUnit = step.slice(-1) as keyof typeof timeUnits;\n  const stepValue = parseInt(step.slice(0, -1), 10);\n  const stepSeconds = stepValue * timeUnits[stepUnit];\n\n  const filledData = [];\n  for (let i = Number(start); i < Number(end); i += stepSeconds) {\n    const timestamp = i;\n    const existData = _.find(\n      transformedData,\n      (data) => data.timestamp === timestamp,\n    );\n    filledData.push({\n      timestamp: dayjs(timestamp * 1000).format('lll'),\n      capacity: convertMetricUnit(\n        existData?.capacity,\n        currentMetric[0]?.metric_name,\n      ).number,\n      used: convertMetricUnit(existData?.used, currentMetric[0]?.metric_name)\n        .number,\n    });\n  }\n\n  return filledData;\n};\n\nconst convertMetricUnit = (\n  value: string | undefined | null,\n  metricName: string | undefined | null,\n) => {\n  let number: number | undefined = undefined;\n  let numberUnit: string | undefined = undefined;\n\n  if (!metricName)\n    return {\n      number,\n      numberUnit,\n    };\n\n  if (_.includes(metricName.toLowerCase(), 'util')) {\n    number = Number(toFixedFloorWithoutTrailingZeros(value ?? 0, 1));\n    numberUnit = '%';\n  } else if (_.includes(metricName.toLowerCase(), 'used')) {\n    number = Number((Number(value) / 1000).toFixed(1));\n    numberUnit = 's';\n  } else {\n    const decimalUnitMetrics = ['io', 'net'];\n    const isDecimalUnitMetric = _.some(decimalUnitMetrics, (unit) =>\n      _.includes(_.toLower(metricName), unit),\n    );\n    number = _.toNumber(\n      isDecimalUnitMetric\n        ? convertToDecimalUnit(value ?? '0', 'g')?.numberFixed\n        : convertToBinaryUnit(value ?? '0', 'g')?.numberFixed,\n    );\n    numberUnit = isDecimalUnitMetric ? 'GB' : 'GiB';\n  }\n\n  if (_.includes(_.toLower(metricName), 'net')) {\n    numberUnit = 'GB/s';\n  }\n  number = value ? number : undefined;\n\n  return {\n    number,\n    numberUnit,\n  };\n};\n","import { UserSessionsMetricsQuery } from '../__generated__/UserSessionsMetricsQuery.graphql';\nimport { filterEmptyItem, newLineToBrElement } from '../helper';\nimport { useUpdatableState } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useBAISettingUserState } from '../hooks/useBAISetting';\nimport BAIBoard, { BAIBoardItem } from './BAIBoard';\nimport BAIFetchKeyButton from './BAIFetchKeyButton';\nimport Flex from './Flex';\nimport SessionMetricGraph from './SessionMetricGraph';\nimport { Alert, DatePicker, Empty, Skeleton, theme } from 'antd';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { Suspense, useEffect, useMemo, useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { StringParam, useQueryParam, withDefault } from 'use-query-params';\n\ninterface UserSessionsMetricsProps {}\n\nconst UserSessionsMetrics: React.FC<UserSessionsMetricsProps> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { RangePicker } = DatePicker;\n\n  const [usageFetchKey, updateUsageFetchKey] = useUpdatableState('first');\n  const [isPendingUsageTransition, startUsageTransition] = useTransition();\n  const [startDate, setStartDate] = useQueryParam(\n    'startDate',\n    withDefault(StringParam, dayjs().format('YYYY-MM-DD 00:00:00')),\n  );\n  const [endDate, setEndDate] = useQueryParam(\n    'endDate',\n    withDefault(StringParam, dayjs().format('YYYY-MM-DD 23:59:59')),\n  );\n  const userInfo = useCurrentUserInfo();\n  const dayDiff = dayjs(endDate).diff(dayjs(startDate), 'day');\n\n  const { container_utilization_metric_metadata } =\n    useLazyLoadQuery<UserSessionsMetricsQuery>(\n      graphql`\n        query UserSessionsMetricsQuery {\n          container_utilization_metric_metadata {\n            metric_names\n          }\n        }\n      `,\n      {},\n      {\n        fetchKey: usageFetchKey,\n        fetchPolicy: 'store-and-network',\n      },\n    );\n\n  const sortedMetricMetadata = useMemo(() => {\n    const metrics = container_utilization_metric_metadata?.metric_names || [];\n\n    const { cpuUtil, memory, acceleratorGroups, rest } = _.reduce(\n      metrics,\n      (acc, metric) => {\n        if (!metric || metric === 'cpu_used' || metric === 'io_scratch_size')\n          return acc;\n\n        if (metric === 'cpu_util') {\n          acc.cpuUtil.push(metric);\n        } else if (metric === 'mem') {\n          acc.memory.push(metric);\n        } else if (\n          (metric.endsWith('_util') || metric.endsWith('_mem')) &&\n          !_.startsWith(metric, 'cpu') &&\n          !_.startsWith(metric, 'mem')\n        ) {\n          const prefix = metric.split('_').slice(0, -1).join('_');\n          if (!acc.acceleratorGroups[prefix]) {\n            acc.acceleratorGroups[prefix] = [];\n          }\n          acc.acceleratorGroups[prefix].push(metric);\n        } else {\n          acc.rest.push(metric);\n        }\n        return acc;\n      },\n      {\n        cpuUtil: [] as string[],\n        memory: [] as string[],\n        acceleratorGroups: {} as Record<string, string[]>,\n        rest: [] as string[],\n      },\n    );\n    const sortedAccelMetrics = _.flatMap(_.values(acceleratorGroups), (group) =>\n      _.sortBy(group, (metric) => (metric.endsWith('_util') ? 0 : 1)),\n    );\n    const sortedRest = _.sortBy(rest, (metric) =>\n      metric.startsWith('net') ? 0 : 1,\n    );\n\n    return [...cpuUtil, ...memory, ...sortedAccelMetrics, ...sortedRest];\n  }, [container_utilization_metric_metadata?.metric_names]);\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const [localStorageBoardItems, setLocalStorageBoardItems] =\n    useBAISettingUserState('session_metrics_board_items');\n\n  const tooltip: Record<string, React.ReactNode> = {\n    cpu_util: newLineToBrElement(t('statistics.description.CPUUtilization')),\n    net_rx: newLineToBrElement(t('statistics.description.NetworkRx')),\n    net_tx: newLineToBrElement(t('statistics.description.NetworkTx')),\n  };\n\n  const initialBoardItems = useMemo(() => {\n    const defaultBoardItem: Array<BAIBoardItem> = _.map(\n      sortedMetricMetadata,\n      (metric) => ({\n        id: metric,\n        rowSpan: 3,\n        columnSpan: windowWidth > 2160 ? 3 : 2,\n        data: {\n          content: (\n            <Suspense\n              fallback={\n                <Skeleton\n                  active\n                  style={{ padding: `0px ${token.marginMD}px` }}\n                />\n              }\n            >\n              <SessionMetricGraph\n                key={metric}\n                queryProps={{\n                  startDate: dayjs(startDate).unix().toString(),\n                  endDate: dayjs(endDate).unix().toString(),\n                  metricName: metric,\n                  userId: userInfo[0]?.uuid ?? '',\n                  dayDiff: dayDiff,\n                }}\n                fetchKey={usageFetchKey}\n                tooltip={tooltip[metric] || undefined}\n              />\n            </Suspense>\n          ),\n        },\n      }),\n    );\n\n    if (localStorageBoardItems) {\n      const boardItemsWithContent = _.map(localStorageBoardItems, (item) => {\n        const initialItem = _.find(\n          defaultBoardItem,\n          (defaultItem) => defaultItem.id === item.id,\n        );\n        return initialItem ? { ...item, data: initialItem.data } : null;\n      });\n\n      return filterEmptyItem(boardItemsWithContent);\n    }\n\n    return defaultBoardItem;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    sortedMetricMetadata,\n    startDate,\n    endDate,\n    usageFetchKey,\n    dayDiff,\n    windowWidth,\n  ]);\n\n  const [boardItems, setBoardItems] =\n    useState<Array<BAIBoardItem>>(initialBoardItems);\n\n  useEffect(() => {\n    setBoardItems(initialBoardItems);\n  }, [initialBoardItems]);\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      gap=\"md\"\n      style={{ padding: token.paddingMD }}\n    >\n      <Flex align=\"stretch\" justify=\"between\">\n        <RangePicker\n          allowClear={false}\n          showTime={{ format: 'HH:mm' }}\n          maxDate={dayjs()}\n          onChange={(_, [startDate, endDate]) => {\n            startUsageTransition(() => {\n              setStartDate(startDate);\n              setEndDate(endDate);\n            });\n          }}\n          defaultValue={[dayjs(startDate), dayjs(endDate)]}\n          presets={[\n            {\n              label: t('statistics.timeRange.Today'),\n              value: [dayjs().startOf('day'), dayjs().endOf('day')],\n            },\n            {\n              label: t('statistics.timeRange.LastHour'),\n              value: [\n                dayjs().subtract(1, 'hour'),\n                dayjs().subtract(1, 'second'),\n              ],\n            },\n            {\n              label: t('statistics.timeRange.Last3Hours'),\n              value: [\n                dayjs().subtract(3, 'hours'),\n                dayjs().subtract(1, 'second'),\n              ],\n            },\n            {\n              label: t('statistics.timeRange.Last12Hours'),\n              value: [\n                dayjs().subtract(12, 'hours'),\n                dayjs().subtract(1, 'second'),\n              ],\n            },\n            {\n              label: t('statistics.timeRange.LastDay'),\n              value: [\n                dayjs().subtract(1, 'day'),\n                dayjs().subtract(1, 'second'),\n              ],\n            },\n            {\n              label: t('statistics.timeRange.Last7Days'),\n              value: [\n                dayjs().subtract(7, 'days'),\n                dayjs().subtract(1, 'second'),\n              ],\n            },\n          ]}\n        />\n        <BAIFetchKeyButton\n          loading={isPendingUsageTransition}\n          value={usageFetchKey}\n          onChange={() => {\n            startUsageTransition(() => {\n              updateUsageFetchKey();\n            });\n          }}\n        />\n      </Flex>\n      {dayDiff > 30 && (\n        <Alert\n          showIcon\n          message={t('statistics.prometheus.DataMissingInLowUsageDesc')}\n        />\n      )}\n      {_.isEmpty(sortedMetricMetadata) ? (\n        <Empty\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n          description={t('statistics.prometheus.NoMetricsToDisplay')}\n        />\n      ) : (\n        <BAIBoard\n          movable\n          resizable\n          bordered\n          items={boardItems}\n          onItemsChange={(event) => {\n            // FIXME: This is a workaround for the issue where the board items are not updated correctly when resizing.\n            // ----- It should be fixed in the BAIBoard component. -----\n            let changedItems = [...event.detail.items];\n            if (event.detail.resizedItem) {\n              const resizedItemId = event.detail.resizedItem.id;\n              changedItems = changedItems.map((item) => {\n                if (item.id === resizedItemId) {\n                  const originalItem = initialBoardItems.find(\n                    (orig) => orig.id === item.id,\n                  );\n                  if (originalItem) {\n                    return {\n                      ...item,\n                      data: {\n                        ...originalItem.data,\n                        content: (\n                          <Suspense\n                            fallback={\n                              <Skeleton\n                                active\n                                style={{ padding: `0px ${token.marginMD}px` }}\n                              />\n                            }\n                          >\n                            <SessionMetricGraph\n                              key={`${item.id}-${Date.now()}`}\n                              queryProps={{\n                                startDate: dayjs(startDate).unix().toString(),\n                                endDate: dayjs(endDate).unix().toString(),\n                                metricName: item.id,\n                                userId: userInfo[0]?.uuid ?? '',\n                                dayDiff: dayDiff,\n                              }}\n                              fetchKey={usageFetchKey}\n                              tooltip={tooltip[item.id] || undefined}\n                            />\n                          </Suspense>\n                        ),\n                      },\n                    };\n                  }\n                }\n                return item;\n              });\n            }\n            // ---------------------------------------------------------\n\n            setBoardItems(changedItems);\n            setLocalStorageBoardItems(\n              _.map(changedItems, (item) => _.omit(item, 'data')),\n            );\n          }}\n        />\n      )}\n    </Flex>\n  );\n};\n\nexport default UserSessionsMetrics;\n","import AllocationHistory from '../components/AllocationHistory';\nimport BAICard from '../components/BAICard';\nimport UserSessionsMetrics from '../components/UserSessionsMetrics';\nimport { filterEmptyItem } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { Skeleton, theme } from 'antd';\nimport React, { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StringParam, useQueryParam, withDefault } from 'use-query-params';\n\ninterface ResourcesPageProps {}\n\nconst tabParam = withDefault(StringParam, 'allocation-history');\n\nconst ResourcesPage: React.FC<ResourcesPageProps> = (props) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [curTabKey, setCurTabKey] = useQueryParam('tab', tabParam, {\n    updateType: 'replace',\n  });\n\n  return (\n    <BAICard\n      activeTabKey={curTabKey}\n      onTabChange={(key) => setCurTabKey(key)}\n      tabList={filterEmptyItem([\n        {\n          key: 'allocation-history',\n          tab: t('webui.menu.UsageHistory'),\n        },\n        baiClient?.supports('user-metrics') && {\n          key: 'user-session-history',\n          tab: t('webui.menu.UserSessionHistory'),\n        },\n      ])}\n      styles={{\n        body: {\n          padding: 0,\n          paddingTop: 1,\n          overflow: 'hidden',\n        },\n      }}\n    >\n      {curTabKey === 'allocation-history' ? (\n        <Suspense\n          fallback={\n            <Skeleton\n              active\n              style={{ padding: token.paddingContentVerticalLG }}\n            />\n          }\n        >\n          <AllocationHistory />\n        </Suspense>\n      ) : null}\n      {curTabKey === 'user-session-history' ? (\n        <Suspense\n          fallback={\n            <Skeleton\n              active\n              style={{ padding: token.paddingContentVerticalLG }}\n            />\n          }\n        >\n          <UserSessionsMetrics />\n        </Suspense>\n      ) : null}\n    </BAICard>\n  );\n};\n\nexport default ResourcesPage;\n"],"names":["node","v0","v1","v2","v3","v4","v5","hash","useStyles","createStyles","_ref","css","token","board","colorTextTertiary","disableResize","disableMove","boardItems","colorBorderSecondary","disableBorder","_ref2","items","resizable","movable","bordered","BoardProps","styles","_jsx","Board","className","classNames","empty","renderItem","item","BoardItem","i18nStrings","dragHandleAriaLabel","dragHandleAriaDescription","resizeHandleAriaLabel","resizeHandleAriaDescription","children","data","content","id","createAnnouncement","operationAnnouncement","conflicts","disturbed","length","map","c","title","join","filter","Boolean","liveAnnouncementDndStarted","operationType","liveAnnouncementDndItemReordered","operation","columns","placement","x","rows","y","direction","liveAnnouncementDndItemResized","columnsConstraint","isMinimalColumnsReached","rowsConstraint","isMinimalRowsReached","sizeAnnouncement","width","height","liveAnnouncementDndItemInserted","liveAnnouncementDndCommitted","liveAnnouncementDndDiscarded","liveAnnouncementItemRemoved","op","navigationAriaLabel","navigationAriaDescription","navigationItemAriaLabel","options","baiClient","useSuspendedBackendaiClient","useSuspenseTanQuery","queryKey","_config","_userId","fetchKey","queryFn","resources","user_stats","graphCard","colorBgSpotlight","colorTextLightSolid","GraphCard","tooltipText","Card","type","_jsxs","Flex","gap","QuestionIconWithTooltip","style","getColumnConfig","_ref3","key","period","targetUnit","displayUnit","unitType","isDarkMode","formatValue","value","_convertToBinaryUnit$","_convertToBinaryUnit","convertToBinaryUnit","number","_convertToDecimalUnit","_convertToDecimalUnit2","convertToDecimalUnit","_","i","DAY_LENGTH","d","date","dayjs","format","xField","yField","axis","labelAutoHide","tickFilter","index","animate","enter","theme","_ref4","t","useTranslation","useUserUsageStats","useThemeMode","align","Column","supports","_Fragment","periodParam","withDefault","createEnumParam","AllocationHistory","selectedPeriod","setSelectedPeriod","useQueryParam","useToken","usageFetchKey","updateUsageFetchKey","useUpdatableState","isPendingUsageTransition","startUsageTransition","useTransition","periodOptions","label","padding","paddingMD","Alert","showIcon","message","justify","Form","Item","marginBottom","Select","popupMatchSelectWidth","onChange","BAIFetchKeyButton","loading","Suspense","fallback","Skeleton","active","AllocationHistoryStatistics","useStyle","recharts","colorTextDescription","colorBorder","_capacity_metric$metr","_current_metric$metri","_convertMetricFunctio","_mergedResourceSlots$","_current_metric$metri2","_current_metric$metri3","_current_metric$metri4","_current_metric$metri5","queryProps","startDate","endDate","metricName","userId","dayDiff","tooltip","mergedResourceSlots","useResourceSlotsDetails","capacity_metric","current_metric","useLazyLoadQuery","_SessionMetricGraphQuery","require","user_id","capacityProps","metric_name","start","end","step","value_type","currentProps","fetchPolicy","convertMetricFunction","cpu_util","metricData","getMetricData","metrics","undefined","resourceSlotKey","useMemo","_$find","slotKey","deviceDescription","description","overflow","marginLeft","Typography","Text","fontSize","fontSizeHeading5","strong","getMetricTitle","rest","restLabel","toLowerCase","replaceAll","Empty","image","PRESENTED_IMAGE_SIMPLE","alignContent","ResponsiveContainer","paddingRight","marginXL","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","minTickGap","marginMD","YAxis","domain","ChartTooltip","formatter","convertMetricUnit","numberUnit","Legend","ReferenceLine","avg_value","stroke","red","strokeWidth","Line","colorSuccess","dot","r","colorPrimary","capacityMetric","currentMetric","convertValueFunction","_capacityMetric$","_currentMetric$","_currentMetric$$value","_currentMetric$2","transformedData","values","Array","fill","capacity","current","timestamp","used","stepUnit","slice","stepSeconds","parseInt","s","m","h","filledData","Number","_currentMetric$3","_currentMetric$4","existData","push","toFixedFloorWithoutTrailingZeros","toFixed","decimalUnitMetrics","isDecimalUnitMetric","unit","numberFixed","UserSessionsMetrics","RangePicker","DatePicker","setStartDate","StringParam","setEndDate","userInfo","useCurrentUserInfo","diff","container_utilization_metric_metadata","_UserSessionsMetricsQuery","sortedMetricMetadata","metric_names","cpuUtil","memory","acceleratorGroups","acc","metric","endsWith","prefix","split","group","startsWith","windowWidth","setWindowWidth","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","localStorageBoardItems","setLocalStorageBoardItems","useBAISettingUserState","newLineToBrElement","net_rx","net_tx","initialBoardItems","defaultBoardItem","_userInfo$0$uuid","_userInfo$","rowSpan","columnSpan","SessionMetricGraph","unix","toString","uuid","boardItemsWithContent","initialItem","defaultItem","filterEmptyItem","setBoardItems","allowClear","showTime","maxDate","defaultValue","presets","startOf","endOf","subtract","BAIBoard","onItemsChange","event","changedItems","detail","resizedItem","resizedItemId","originalItem","find","orig","_userInfo$0$uuid2","_userInfo$2","Date","now","tabParam","props","curTabKey","setCurTabKey","updateType","BAICard","activeTabKey","onTabChange","tabList","tab","body","paddingTop","paddingContentVerticalLG"],"sourceRoot":""}