{"version":3,"file":"static/js/7386.2bfb0743.chunk.js","mappings":"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","sources":["components/ResourceNumber.tsx","components/StorageSelect.tsx","components/__generated__/ModelCardModalFragment.graphql.ts","components/__generated__/ModelCloneModalVFolderFragment.graphql.ts","hooks/usePainKiller.tsx","components/ModelCloneModal.tsx","components/ModelCardModal.tsx","pages/ModelStoreListPage.tsx","pages/__generated__/ModelStoreListPageQuery.graphql.ts"],"sourcesContent":["import { iSizeToSize } from '../helper';\nimport { useResourceSlotsDetails } from '../hooks/backendai';\nimport { useCurrentResourceGroupValue } from '../hooks/useCurrentProject';\nimport Flex from './Flex';\nimport { Tooltip, Typography, theme } from 'antd';\nimport React, { ReactElement } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const ACCELERATOR_UNIT_MAP: {\n  [key: string]: string;\n} = {\n  'cuda.device': 'GPU',\n  'cuda.shares': 'FGPU',\n  'rocm.device': 'GPU',\n  'tpu.device': 'TPU',\n  'ipu.device': 'IPU',\n  'atom.device': 'ATOM',\n  'atom-plus.device': 'ATOM+',\n  'warboy.device': 'Warboy',\n  'hyperaccel-lpu.device': 'Hyperaccel LPU',\n};\n\nexport type ResourceOpts = {\n  shmem?: number;\n};\ninterface ResourceNumberProps {\n  type: string;\n  extra?: ReactElement;\n  opts?: ResourceOpts;\n  value: string;\n  hideTooltip?: boolean;\n}\n\ntype ResourceTypeInfo<V> = {\n  [key in string]: V;\n};\nconst ResourceNumber: React.FC<ResourceNumberProps> = ({\n  type,\n  value: amount,\n  extra,\n  opts,\n  hideTooltip = false,\n}) => {\n  const { token } = theme.useToken();\n  const currentGroup = useCurrentResourceGroupValue();\n  const [resourceSlotsDetails] = useResourceSlotsDetails(\n    currentGroup || undefined,\n  );\n\n  return (\n    <Flex direction=\"row\" gap=\"xxs\">\n      {resourceSlotsDetails?.[type] ? (\n        <ResourceTypeIcon type={type} showTooltip={!hideTooltip} />\n      ) : (\n        type\n      )}\n\n      <Typography.Text>\n        {resourceSlotsDetails?.[type]?.number_format.binary\n          ? Number(iSizeToSize(amount, 'g', 3, true)?.numberFixed).toString()\n          : (resourceSlotsDetails?.[type]?.number_format.round_length || 0) > 0\n            ? parseFloat(amount).toFixed(2)\n            : amount}\n      </Typography.Text>\n      <Typography.Text type=\"secondary\">\n        {resourceSlotsDetails?.[type]?.display_unit || ''}\n      </Typography.Text>\n      {type === 'mem' && opts?.shmem && opts?.shmem > 0 ? (\n        <Typography.Text\n          type=\"secondary\"\n          style={{ fontSize: token.fontSizeSM }}\n        >\n          (SHM: {iSizeToSize(opts.shmem + 'b', 'g', 2, true)?.numberFixed}\n          GiB)\n        </Typography.Text>\n      ) : null}\n      {extra}\n    </Flex>\n  );\n};\n\nconst MWCIconWrap: React.FC<{ size?: number; children: string }> = ({\n  size = 16,\n  children,\n}) => {\n  return (\n    // @ts-ignore\n    <mwc-icon\n      style={{\n        '--mdc-icon-size': `${size + 2}px`,\n        width: size,\n        height: size,\n      }}\n    >\n      {children}\n      {/* @ts-ignore */}\n    </mwc-icon>\n  );\n};\ninterface AccTypeIconProps\n  extends Omit<React.ImgHTMLAttributes<HTMLImageElement>, 'src'> {\n  type: string;\n  showIcon?: boolean;\n  showUnit?: boolean;\n  showTooltip?: boolean;\n  size?: number;\n}\nexport const ResourceTypeIcon: React.FC<AccTypeIconProps> = ({\n  type,\n  size = 16,\n  showIcon = true,\n  showUnit = true,\n  showTooltip = true,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const resourceTypeIconSrcMap: ResourceTypeInfo<\n    [ReactElement | string, string]\n  > = {\n    cpu: [\n      <MWCIconWrap size={size}>developer_board</MWCIconWrap>,\n      t('session.core'),\n    ],\n    mem: [<MWCIconWrap size={size}>memory</MWCIconWrap>, 'GiB'],\n    'cuda.device': ['/resources/icons/file_type_cuda.svg', 'GPU'],\n    'cuda.shares': ['/resources/icons/file_type_cuda.svg', 'FGPU'],\n    'rocm.device': ['/resources/icons/rocm.svg', 'GPU'],\n    'tpu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'TPU'],\n    'ipu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'IPU'],\n    'atom.device': ['/resources/icons/rebel.svg', 'ATOM'],\n    'atom-plus.device': ['/resources/icons/rebel.svg', 'ATOM'],\n    'warboy.device': ['/resources/icons/furiosa.svg', 'Warboy'],\n    'hyperaccel-lpu.device': [\n      '/resources/icons/npu_generic.svg',\n      'Hyperaccel LPU',\n    ],\n  };\n\n  const content =\n    typeof resourceTypeIconSrcMap[type]?.[0] === 'string' ? (\n      <img\n        {...props}\n        style={{\n          height: size,\n          alignSelf: 'center',\n          ...(props.style || {}),\n        }}\n        // @ts-ignore\n        src={resourceTypeIconSrcMap[type]?.[0] || ''}\n        alt={type}\n      />\n    ) : (\n      <Flex style={{ width: 16, height: 16 }}>\n        {resourceTypeIconSrcMap[type]?.[0] || type}\n      </Flex>\n    );\n\n  return showTooltip ? (\n    // <Tooltip title={showTooltip ? `${type} (${resourceTypeIconSrcMap[type][1]})` : undefined}>\n    <Tooltip title={type}>{content}</Tooltip>\n  ) : (\n    <Flex style={{ pointerEvents: 'none' }}>{content}</Flex>\n  );\n};\n\nexport default ResourceNumber;\n","import { usageIndicatorColor } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useShadowRoot } from './DefaultProviders';\nimport Flex from './Flex';\nimport TextHighlighter from './TextHighlighter';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps, Badge, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\n\nexport type VolumeInfo = {\n  id: string;\n  backend: string;\n  capabilities: string[];\n  usage: {\n    percentage: number;\n  };\n  sftp_scaling_groups: string[];\n};\ninterface Props extends Omit<SelectProps, 'value' | 'onChange'> {\n  autoSelectType?: 'usage' | 'default';\n  showUsageStatus?: boolean;\n  value?: string;\n  onChange?: (v?: string, vInfo?: VolumeInfo) => void;\n}\n// TODO: use React.forwardRef\nconst StorageSelect: React.FC<Props> = ({\n  autoSelectType,\n  showUsageStatus,\n  value,\n  onChange,\n  defaultValue,\n  searchValue,\n  onSearch,\n  ...partialSelectProps\n}) => {\n  const { t } = useTranslation();\n\n  const shadowRoot = useShadowRoot();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const { data: vhostInfo, isLoading: isLoadingVhostInfo } = useQuery<{\n    default: string;\n    allowed: Array<string>;\n    volume_info?: {\n      [key: string]: {\n        backend: string;\n        capabilities: string[];\n        usage: {\n          percentage: number;\n        };\n        sftp_scaling_groups: any[];\n      };\n    };\n  }>('vhostInfo', () => {\n    return baiClient.vfolder.list_hosts();\n  });\n\n  const [controllableState, setControllableState] = useControllableValue(\n    _.omitBy({ value, onChange, defaultValue }, _.isUndefined),\n  );\n  const [controllableSearchValue, setControllableSearchValue] =\n    useControllableValue(\n      _.omitBy({ value: searchValue, onChange: onSearch }, _.isUndefined),\n    );\n  useEffect(() => {\n    if (!autoSelectType) return;\n    let nextHost = vhostInfo?.default ?? vhostInfo?.allowed[0] ?? '';\n    if (autoSelectType === 'usage') {\n      const lowestUsageHost = _.minBy(\n        _.map(vhostInfo?.allowed, (host) => ({\n          host,\n          volume_info: vhostInfo?.volume_info?.[host],\n        })),\n        'volume_info.usage.percentage',\n      )?.host;\n      nextHost = lowestUsageHost || nextHost;\n    }\n    setControllableState(nextHost, {\n      id: nextHost,\n      ...(vhostInfo?.volume_info?.[nextHost] || {}),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [vhostInfo]);\n  return (\n    <Select\n      filterOption={true}\n      placeholder={t('data.SelectStorageHost')}\n      loading={isLoadingVhostInfo}\n      style={{\n        // TODO: not good to hardcode\n        minWidth: 165,\n      }}\n      value={controllableState}\n      onChange={(host) => {\n        setControllableState(host, {\n          id: host,\n          ...(vhostInfo?.volume_info?.[host] || {}),\n        });\n      }}\n      searchValue={controllableSearchValue}\n      onSearch={setControllableSearchValue}\n      optionLabelProp=\"value\"\n      options={_.map(vhostInfo?.allowed, (host) => ({\n        label: showUsageStatus ? (\n          <Flex align=\"center\" gap={'xs'}>\n            {vhostInfo?.volume_info?.[host]?.usage && (\n              <Tooltip\n                title={`${t('data.Host')} ${t('data.usage.Status')}:\n                ${\n                  vhostInfo?.volume_info[host]?.usage?.percentage < 70\n                    ? t('data.usage.Adequate')\n                    : vhostInfo?.volume_info[host]?.usage?.percentage < 90\n                      ? t('data.usage.Caution')\n                      : t('data.usage.Insufficient')\n                }`}\n                // @ts-ignore\n                getPopupContainer={() => shadowRoot}\n              >\n                <Badge\n                  color={usageIndicatorColor(\n                    vhostInfo?.volume_info[host]?.usage?.percentage,\n                  )}\n                />\n              </Tooltip>\n            )}\n            <TextHighlighter keyword={controllableSearchValue}>\n              {host}\n            </TextHighlighter>\n            {/* TODO: uncomment after implementing click action */}\n            {/* <Button type=\"link\" size=\"small\" icon={<InfoCircleOutlined />} /> */}\n          </Flex>\n        ) : (\n          host\n        ),\n        value: host,\n      }))}\n      {...partialSelectProps}\n    />\n  );\n};\n\nexport default StorageSelect;\n","/**\n * @generated SignedSource<<8111f1bd81855d7d7b8d27e59305f77c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelCardModalFragment$data = {\n  readonly architecture: string | null | undefined;\n  readonly author: string | null | undefined;\n  readonly category: string | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly description: string | null | undefined;\n  readonly framework: ReadonlyArray<string | null | undefined> | null | undefined;\n  readonly id: string;\n  readonly label: ReadonlyArray<string | null | undefined> | null | undefined;\n  readonly license: string | null | undefined;\n  readonly min_resource: any | null | undefined;\n  readonly modified_at: string | null | undefined;\n  readonly name: string | null | undefined;\n  readonly readme: string | null | undefined;\n  readonly task: string | null | undefined;\n  readonly title: string | null | undefined;\n  readonly version: string | null | undefined;\n  readonly vfolder: {\n    readonly cloneable: boolean | null | undefined;\n    readonly host: string | null | undefined;\n    readonly id: string | null | undefined;\n    readonly name: string | null | undefined;\n  } | null | undefined;\n  readonly vfolder_node: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCloneModalVFolderFragment\">;\n  } | null | undefined;\n  readonly \" $fragmentType\": \"ModelCardModalFragment\";\n};\nexport type ModelCardModalFragment$key = {\n  readonly \" $data\"?: ModelCardModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCardModalFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n};\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelCardModalFragment\",\n  \"selections\": [\n    (v0/*: any*/),\n    (v1/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"author\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"title\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"version\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"modified_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"description\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"task\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"category\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"architecture\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"framework\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"label\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"license\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"readme\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"min_resource\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"VirtualFolder\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"vfolder\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"cloneable\",\n          \"storageKey\": null\n        },\n        (v0/*: any*/),\n        (v1/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"host\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"VirtualFolderNode\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"vfolder_node\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"args\": null,\n          \"kind\": \"FragmentSpread\",\n          \"name\": \"ModelCloneModalVFolderFragment\"\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ModelCard\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"8c3572f1adf6875906d30969b5a901e6\";\n\nexport default node;\n","/**\n * @generated SignedSource<<e267425d173aaf4f591da5ebdca1d1a2>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelCloneModalVFolderFragment$data = {\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly \" $fragmentType\": \"ModelCloneModalVFolderFragment\";\n};\nexport type ModelCloneModalVFolderFragment$key = {\n  readonly \" $data\"?: ModelCloneModalVFolderFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCloneModalVFolderFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelCloneModalVFolderFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"9e8196f7a6fe11fb62c373124ffc450a\";\n\nexport default node;\n","import { useTranslation } from 'react-i18next';\n\nconst errorMessageTable: {\n  [key: string]: string;\n} = {\n  \"Cannot read property 'map' of null\": 'error.APINotSupported',\n  'TypeError: NetworkError when attempting to fetch resource.':\n    'error.NetworkConnectionFailed', //_t('error.NetworkConnectionFailed')\n  // Login\n  'Login failed. Check login information.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'User credential mismatch.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'Authentication failed. Check information and manager status.':\n    'error.AuthenticationFailed', //_t('error.AuthenticationFailed')\n  'Too many failed login attempts': 'error.TooManyLoginFailures', //_t('error.TooManyLoginFailures')\n  // virtual folders\n  'server responded failure: 400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  '400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - One of your accessible vfolders already has the name you requested.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - You cannot create more vfolders.':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (You cannot create more vfolders.)':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Cannot change the options of a vfolder that is not owned by myself.':\n    'error.CannotChangeVirtualFolderOption', //_t('error.CannotChangeVirtualFolderOption')\n  'server responded failure: 403 Forbidden - Cannot share private dot-prefixed vfolders.':\n    'error.CannotSharePrivateAutomountFolder', //_t('error.CannotSharePrivateAutomountFolder')\n  'server responded failure: 404 Not Found - No such vfolder invitation.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  'server responded failure: 404 Not Found - No such user.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  // Resource\n  'server responded failure: 412 Precondition Failed - You have reached your resource limit.':\n    'error.ReachedResourceLimit', //_t('error.ReachedResourceLimit')\n  // User\n  \"Cannot read property 'split' of undefined\": 'error.UserHasNoGroup', //_t('error.UserHasNoGroup')\n};\nconst regexTable: {\n  [key: string]: string;\n} = {\n  '\\\\w*not found matched token with email\\\\w*': 'error.InvalidSignupToken', //_t('error.InvalidSignupToken')\n  '\\\\w*Access key not found\\\\w*': 'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  '\\\\w*401 Unauthorized - Credential/signature mismatch\\\\w*':\n    'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  'integrity error: duplicate key value violates unique constraint \"pk_resource_presets\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ResourcePolicyAlreadyExist', //_t('error.ResourcePolicyAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"pk_scaling_groups\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ScalingGroupAlreadyExist', //_t('error.ScalingGroupAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"uq_users_username\"[\\\\n]DETAIL:  Key \\\\(username\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.UserNameAlreadyExist', //_t('error.UserNameAlreadyExist')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (Your resource quota is exceeded. (cpu=24 mem=512g cuda.shares=80))':\n    'error.ResourceLimitExceed', //_t('error.ResourceLimitExceed')\n  '\\\\w*Key \\\\(name\\\\)=\\\\(.+\\\\) is still referenced from table \"keypairs\"\\\\.\\\\w*':\n    'error.ResourcePolicyStillReferenced', //_t('error.ResourcePolicyStillReferenced')\n  'Your resource request is smaller than the minimum required by the image. (\\\\w*)':\n    'error.SmallerResourceThenImageRequires', //_t('error.SmallerResourceThenImageRequires')\n};\n\nexport const usePainKiller = () => {\n  const { t } = useTranslation();\n  const relieve = (msg: string) => {\n    if (typeof msg === 'undefined') {\n      if (\n        // @ts-ignore\n        globalThis.backendaiclient === undefined ||\n        // @ts-ignore\n        globalThis.backendaiclient === null\n      ) {\n        return '_DISCONNECTED';\n      } else {\n        return 'Problem occurred.';\n      }\n    }\n    // @ts-ignore\n    if (globalThis.backendaiwebui.debug === true) {\n      return msg;\n    }\n    if ({}.hasOwnProperty.call(errorMessageTable, msg)) {\n      return t(errorMessageTable[msg]);\n    } else {\n      for (const regex of Object.keys(regexTable)) {\n        if (RegExp(regex).test(msg)) {\n          return t(regexTable[regex]);\n        }\n      }\n      return msg; // Bypass message. It will log on log panel\n    }\n  };\n  return { relieve };\n};\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useSetBAINotification } from '../hooks/useBAINotification';\nimport { usePainKiller } from '../hooks/usePainKiller';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport StorageSelect from './StorageSelect';\nimport { ModelCloneModalVFolderFragment$key } from './__generated__/ModelCloneModalVFolderFragment.graphql';\nimport {\n  Alert,\n  Form,\n  FormInstance,\n  FormItemProps,\n  Input,\n  Select,\n  Switch,\n  message,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ModelCloneModalProps extends BAIModalProps {\n  vfolderNode: ModelCloneModalVFolderFragment$key | null;\n  deprecatedVFolderInfo?: {\n    id: string;\n    name: string;\n    host: string;\n  };\n}\nconst ModelCloneModal: React.FC<ModelCloneModalProps> = ({\n  // sourceFolderName,\n  // sourceFolderHost,\n  vfolderNode,\n  deprecatedVFolderInfo,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const vfolder =\n    useFragment(\n      graphql`\n        fragment ModelCloneModalVFolderFragment on VirtualFolderNode {\n          id\n          name\n          host\n        }\n      `,\n      vfolderNode,\n    ) || deprecatedVFolderInfo;\n\n  const formRef = useRef<\n    FormInstance<{\n      target_name: string;\n      target_host: string;\n      permission: string;\n      // type: string;\n      // project: string;\n      usage_mode: string;\n    }>\n  >(null);\n  const painKiller = usePainKiller();\n  const { upsertNotification } = useSetBAINotification();\n\n  const [extraNameError, setExtraNameError] = useState<\n    Pick<FormItemProps, 'validateStatus' | 'help'>\n  >({});\n\n  const mutationToClone = useTanMutation<\n    {\n      bgtask_id: string;\n      id: string;\n    },\n    { type?: string; title?: string; message?: string },\n    {\n      input: any;\n      name: string;\n    }\n  >({\n    // @ts-ignore\n    mutationFn: ({ input, name }: { input: any; name: string }) => {\n      return baiClient.vfolder.clone(input, name);\n    },\n  });\n\n  return (\n    <BAIModal\n      destroyOnClose\n      {...props}\n      okText={t('button.Clone')}\n      confirmLoading={mutationToClone.isLoading}\n      onOk={(e) => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            if (vfolder?.name && vfolder.host) {\n              mutationToClone.mutate(\n                {\n                  input: values,\n                  name: vfolder.name,\n                },\n                {\n                  onSuccess(data) {\n                    upsertNotification({\n                      key: 'modelStore.clone.' + vfolder.id,\n                      open: true,\n                      backgroundTask: {\n                        status: 'pending',\n                        percent: 0,\n                        taskId: data.bgtask_id,\n                        statusDescriptions: {\n                          pending: t('data.folders.FolderClonePending'),\n                          resolved: t('data.folders.FolderCloned'),\n                          rejected: t('data.folders.FolderCloneFailed'),\n                        },\n                      },\n                      message: values.target_name,\n                      toText: t('data.folders.OpenAFolder'),\n                      to: `/data?tab=model&folder=${data.id}`,\n                    });\n                    props.onOk?.(e);\n                  },\n                  onError(error) {\n                    if (\n                      error.message?.includes(\n                        'The virtual folder already exists with the same name',\n                      )\n                    ) {\n                      setExtraNameError({\n                        validateStatus: 'error',\n                        help: t('modelStore.FolderAlreadyExists'),\n                      });\n                    } else {\n                      const messageStr = painKiller.relieve(\n                        error?.message || '',\n                      );\n                      message.error({\n                        content: messageStr,\n                      });\n                    }\n                  },\n                },\n              );\n            } else {\n            }\n          })\n          .catch(() => {});\n      }}\n    >\n      <Flex direction=\"column\" align=\"stretch\" gap=\"sm\">\n        <Alert showIcon type=\"info\" message={t('modelStore.CloneInfo')} />\n        <Form\n          ref={formRef}\n          layout=\"vertical\"\n          requiredMark=\"optional\"\n          initialValues={{\n            permission: 'rw',\n            // project: currentProject.id,\n            // type: 'user',\n            usage_mode: 'model',\n            target_name: vfolder?.name + '_1',\n            target_host: vfolder?.host,\n          }}\n          scrollToFirstError\n        >\n          {/*  */}\n          <Form.Item label={t('data.ExistingFolderName')} required>\n            <Input value={vfolder?.name || ''} disabled />\n          </Form.Item>\n          <Form.Item\n            name=\"target_name\"\n            label={t('data.NewFolderName')}\n            rules={[\n              {\n                required: true,\n              },\n              {\n                pattern: /^[a-zA-Z0-9._-]*$/,\n                message: t('data.Allowslettersnumbersand-_dot'),\n              },\n            ]}\n            {...extraNameError}\n          >\n            <Input\n              autoComplete=\"off\"\n              onChange={() => {\n                setExtraNameError({});\n              }}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"target_host\"\n            label={t('data.Host')}\n            tooltip={t('data.CloningIsOnlyPossibleSameHost')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <StorageSelect disabled />\n          </Form.Item>\n          {/* <Form.Item\n          name=\"type\"\n          label={t('data.Type')}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            options={_.map(allowed_vfolder_types, (type) => {\n              return {\n                label:\n                  {\n                    user: t('data.User'),\n                    group: t('data.Project'),\n                  }[type] || type,\n                value: type,\n              };\n            })}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, next) => prev.type !== next.type}\n        >\n          {() => {\n            return (\n              <Form.Item\n                name=\"project\"\n                label={t('data.Project')}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <ProjectSelector\n                  domain={currentDomain}\n                  onSelectProject={() => {}}\n                  autoSelectDefault\n                  disabled={form.getFieldValue('type') !== 'group'}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item> */}\n\n          {/* _vfolderInnatePermissionSupport */}\n          {baiClient.isAPIVersionCompatibleWith('v4.20191215') && (\n            <Form.Item\n              // label={t('data.UsageMode')}\n              name={'usage_mode'}\n              hidden\n            >\n              <Input />\n              {/* <Select\n              options={[\n                {\n                  label: 'General',\n                  value: 'general',\n                },\n                ...(baiClient.supports('inference-workload')\n                  ? [\n                      {\n                        label: 'Model',\n                        value: 'model',\n                      },\n                    ]\n                  : []),\n              ]}\n            /> */}\n            </Form.Item>\n          )}\n          <Form.Item\n            label={t('data.Permission')}\n            name={'permission'}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select\n              options={[\n                {\n                  label: 'Read-Write',\n                  value: 'rw',\n                },\n                {\n                  label: 'Read-Only',\n                  value: 'ro',\n                },\n                {\n                  label: 'Delete',\n                  value: 'wd',\n                },\n              ]}\n            />\n          </Form.Item>\n          <Form.Item hidden name=\"cloneable\" valuePropName=\"checked\">\n            <Switch checked={false} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelCloneModal;\n","import { useBackendAIImageMetaData } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport ModelCloneModal from './ModelCloneModal';\nimport ResourceNumber from './ResourceNumber';\nimport { ModelCardModalFragment$key } from './__generated__/ModelCardModalFragment.graphql';\nimport { BankOutlined, CopyOutlined, FileOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Card,\n  Col,\n  Descriptions,\n  Row,\n  Tag,\n  Typography,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { Cog } from 'lucide-react';\nimport Markdown from 'markdown-to-jsx';\nimport React, { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ModelCardModalProps extends BAIModalProps {\n  modelCardModalFrgmt?: ModelCardModalFragment$key | null;\n  onRequestClose: () => void;\n}\nconst ModelCardModal: React.FC<ModelCardModalProps> = ({\n  modelCardModalFrgmt = null,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [visibleCloneModal, setVisibleCloneModal] = useState(false);\n\n  const [metadata] = useBackendAIImageMetaData();\n  const model_card = useFragment(\n    graphql`\n      fragment ModelCardModalFragment on ModelCard {\n        id\n        name\n        author\n        title\n        version\n        created_at\n        modified_at\n        description\n        task\n        category\n        architecture\n        framework\n        label\n        license\n        readme\n        min_resource\n        architecture\n        framework\n        vfolder {\n          cloneable\n        }\n        vfolder_node @since(version: \"24.09.*\") {\n          ...ModelCloneModalVFolderFragment\n        }\n        vfolder {\n          id\n          name\n          host\n        }\n      }\n    `,\n    modelCardModalFrgmt,\n  );\n  return (\n    <BAIModal\n      {...props}\n      title={model_card?.title || model_card?.name}\n      centered\n      onCancel={onRequestClose}\n      destroyOnClose\n      width={800}\n      footer={[\n        <Button\n          onClick={() => {\n            onRequestClose();\n          }}\n          key=\"close\"\n        >\n          {t('button.Close')}\n        </Button>,\n      ]}\n    >\n      <Flex\n        direction=\"row\"\n        align=\"start\"\n        style={{ marginBottom: token.marginSM }}\n        gap={'xs'}\n        wrap=\"wrap\"\n      >\n        <Flex\n          justify=\"start\"\n          align=\"start\"\n          gap={'xs'}\n          style={{ flex: 1 }}\n          wrap=\"wrap\"\n        >\n          {model_card?.category && (\n            <Tag bordered={false} style={{ marginRight: 0 }}>\n              {model_card?.category}\n            </Tag>\n          )}\n          {model_card?.task && (\n            <Tag bordered={false} color=\"success\" style={{ marginRight: 0 }}>\n              {model_card?.task}\n            </Tag>\n          )}\n          {model_card?.label &&\n            _.map(model_card?.label, (label) => (\n              <Tag\n                key={label}\n                bordered={false}\n                color=\"blue\"\n                style={{ marginRight: 0 }}\n              >\n                {label}\n              </Tag>\n            ))}\n          {model_card?.license && (\n            <Tag\n              icon={<BankOutlined />}\n              bordered={false}\n              color=\"geekblue\"\n              style={{ marginRight: 0 }}\n            >\n              {model_card?.license}\n            </Tag>\n          )}\n        </Flex>\n        <Flex direction=\"row\" justify=\"end\" gap={'sm'}>\n          {/* <Button\n            type=\"primary\"\n            ghost\n            icon={<DownloadOutlined />}\n            size=\"small\"\n            disabled\n          >\n            {t('button.Download')}\n          </Button> */}\n          <Button disabled ghost size=\"small\" icon={<Cog />}>\n            {t('modelStore.FinetuneModel')}\n          </Button>\n          <Button\n            type=\"primary\"\n            ghost\n            icon={<CopyOutlined />}\n            size=\"small\"\n            disabled={!model_card?.vfolder?.cloneable}\n            onClick={() => {\n              // const event = new CustomEvent('backend-ai-vfolder-cloning', {\n              //   detail: {\n              //     // TODO: change this to vfolder name\n              //     name: mode_card?.name,\n              //   },\n              // });\n              // onRequestClose();\n              // document.dispatchEvent(event);\n              setVisibleCloneModal(true);\n            }}\n          >\n            {t('modelStore.CloneToFolder')}\n          </Button>\n        </Flex>\n      </Flex>\n      <Row gutter={[token.marginLG, token.marginLG]}>\n        <Col xs={{ span: 24 }}>\n          <Flex direction=\"column\" align=\"stretch\" gap={'xs'}>\n            <Typography.Paragraph\n              ellipsis={{\n                rows: 3,\n                expandable: 'collapsible',\n                symbol: (expanded) => (\n                  <Button size=\"small\" type=\"link\">\n                    {expanded ? t('button.Collapse') : t('button.Expand')}\n                  </Button>\n                ),\n              }}\n            >\n              {model_card?.description}\n            </Typography.Paragraph>\n            <Descriptions\n              style={{ marginTop: token.marginMD }}\n              // title={t('modelStore.Metadata')}\n              column={1}\n              size=\"small\"\n              bordered\n              items={[\n                {\n                  key: 'author',\n                  label: t('modelStore.Author'),\n                  children: model_card?.author,\n                },\n                {\n                  key: 'version',\n                  label: t('modelStore.Version'),\n                  children: model_card?.version,\n                },\n                {\n                  key: 'architecture',\n                  label: t('environment.Architecture'),\n                  children: model_card?.architecture,\n                },\n                {\n                  key: 'frameworks',\n                  label: t('modelStore.Framework'),\n                  children: (\n                    <Flex direction=\"row\" gap={'xs'}>\n                      {_.map(\n                        _.filter(\n                          _.castArray(model_card?.framework),\n                          (v) => !_.isEmpty(v),\n                        ),\n                        (framework, index) => {\n                          const targetImageKey = framework?.replace(\n                            /\\s*\\d+\\s*$/,\n                            '',\n                          );\n                          const imageInfo = _.find(\n                            metadata?.imageInfo,\n                            (imageInfo) => imageInfo?.name === targetImageKey,\n                          );\n                          const uniqueKey = `${framework}-${index}`;\n                          return imageInfo?.icon ? (\n                            <Flex gap={'xxs'} key={uniqueKey}>\n                              <img\n                                style={{\n                                  width: '1em',\n                                  height: '1em',\n                                }}\n                                src={'resources/icons/' + imageInfo?.icon}\n                                alt={framework || ''}\n                              />\n                              {framework}\n                            </Flex>\n                          ) : (\n                            <Typography.Text key={uniqueKey}>\n                              {framework}\n                            </Typography.Text>\n                          );\n                        },\n                      )}\n                    </Flex>\n                  ),\n                },\n                {\n                  key: 'created',\n                  label: t('modelStore.Created'),\n                  children: dayjs(model_card?.created_at).format('lll'),\n                },\n                {\n                  key: 'last_modified',\n                  label: t('modelStore.LastModified'),\n                  children: dayjs(model_card?.modified_at).format('lll'),\n                },\n                {\n                  key: 'min_resource',\n                  label: t('modelStore.MinResource'),\n                  children: (\n                    <Flex gap=\"xs\">\n                      {model_card?.min_resource &&\n                        _.map(\n                          JSON.parse(model_card?.min_resource),\n                          (value, type) => {\n                            return (\n                              <ResourceNumber\n                                key={type}\n                                // @ts-ignore\n                                type={type}\n                                value={_.toString(value)}\n                              />\n                            );\n                          },\n                        )}\n                    </Flex>\n                  ),\n                },\n              ]}\n            />\n          </Flex>\n        </Col>\n        {!!model_card?.readme ? (\n          <Col xs={{ span: 24 }}>\n            <Card\n              size=\"small\"\n              title={\n                <Flex direction=\"row\" gap={'xs'}>\n                  <FileOutlined />\n                  README.md\n                </Flex>\n              }\n              styles={{\n                body: {\n                  padding: token.paddingLG,\n                  overflow: 'auto',\n                  // height: screen.lg ? 'calc(100vh - 243px)' : undefined,\n                  minHeight: 200,\n                },\n              }}\n            >\n              <Markdown>{model_card?.readme || ''}</Markdown>\n            </Card>\n          </Col>\n        ) : null}\n      </Row>\n      <Suspense>\n        <ModelCloneModal\n          vfolderNode={model_card?.vfolder_node || null}\n          deprecatedVFolderInfo={{\n            id: model_card?.vfolder?.id || '',\n            host: model_card?.vfolder?.host || '',\n            name: model_card?.vfolder?.name || '',\n          }}\n          title={t('modelStore.CloneAsFolder')}\n          open={visibleCloneModal}\n          onOk={() => {\n            setVisibleCloneModal(false);\n          }}\n          onCancel={() => {\n            setVisibleCloneModal(false);\n          }}\n        />\n      </Suspense>\n    </BAIModal>\n  );\n};\n\nexport default ModelCardModal;\n","import Flex from '../components/Flex';\nimport ModelCardModal from '../components/ModelCardModal';\nimport TextHighlighter from '../components/TextHighlighter';\nimport { ModelCardModalFragment$key } from '../components/__generated__/ModelCardModalFragment.graphql';\nimport { useUpdatableState } from '../hooks';\nimport { ModelStoreListPageQuery } from './__generated__/ModelStoreListPageQuery.graphql';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Button, Card, Input, List, Select, Tag, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useMemo, useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst useStyles = createStyles(({ css, token }) => {\n  return {\n    cardList: css`\n      .ant-col {\n        height: calc(100% - ${token.marginMD}px);\n      }\n    `,\n  };\n});\n\nconst ModelStoreListPage: React.FC = () => {\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [search, setSearch] = useState<string>();\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [selectedTasks, setSelectedTasks] = useState<string[]>([]);\n  const [selectedLabels, setSelectedLabels] = useState<string[]>([]);\n\n  const { styles } = useStyles();\n\n  const [currentModelInfo, setCurrentModelInfo] =\n    useState<ModelCardModalFragment$key | null>();\n\n  const [isPendingRefetching, startRefetchingTransition] = useTransition();\n\n  const { model_cards } = useLazyLoadQuery<ModelStoreListPageQuery>(\n    graphql`\n      query ModelStoreListPageQuery($filter: String) {\n        # TODO: Implement pagination for model_cards\n        model_cards(filter: $filter, first: 200) {\n          edges {\n            cursor\n            node {\n              id\n              name\n              author\n              title\n              description\n              task\n              category\n              label\n              license\n              min_resource\n              ...ModelCardModalFragment\n            }\n          }\n          count\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n        }\n      }\n    `,\n    {\n      filter: undefined,\n    },\n    {\n      fetchPolicy: 'network-only',\n      fetchKey,\n    },\n  );\n\n  // const filterInfo = _.map\n\n  const fieldsValues = useMemo(() => {\n    const result: {\n      task: string[];\n      category: string[];\n      label: string[];\n    } = { task: [], category: [], label: [] };\n    const fields = ['task', 'category', 'label'] as const;\n    // Initialize result object with empty arrays for each field\n    fields.forEach((field) => (result[field] = []));\n\n    // Traverse the JSON object\n    model_cards?.edges.forEach((edge) => {\n      fields.forEach((field) => {\n        // Check if the field exists in the node\n        if (edge?.node?.[field]) {\n          _.map(_.castArray(edge.node[field]), (newValue) => {\n            if (_.isString(newValue) && !result[field].includes(newValue)) {\n              result[field].push(newValue);\n            }\n          });\n        }\n      });\n    });\n    return result;\n  }, [model_cards?.edges]);\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      justify=\"center\"\n      gap=\"lg\"\n      style={{ padding: token.paddingLG }}\n    >\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        className=\"filterWrap\"\n        gap={'xs'}\n      >\n        <Flex direction=\"row\" gap={'md'}>\n          <Input\n            prefix={<SearchOutlined />}\n            placeholder={t('modelStore.SearchModels')}\n            allowClear\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n            autoComplete=\"off\"\n          />\n          <Button\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startRefetchingTransition(() => {\n                updateFetchKey();\n              });\n            }}\n            loading={isPendingRefetching}\n          />\n        </Flex>\n        <Flex direction=\"row\" gap={'md'} wrap=\"wrap\">\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Category')}\n            options={_.map(fieldsValues.category, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedCategories}\n            onChange={(value) => {\n              setSelectedCategories(value as string[]);\n            }}\n            allowClear\n          />\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Task')}\n            options={_.map(fieldsValues.task, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedTasks}\n            onChange={(value) => {\n              console.log(value);\n              setSelectedTasks(value as string[]);\n            }}\n            allowClear\n          />\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Label')}\n            options={_.map(fieldsValues.label, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedLabels}\n            onChange={(value) => {\n              setSelectedLabels(value as string[]);\n            }}\n            allowClear\n          />\n        </Flex>\n      </Flex>\n      <List\n        className={styles.cardList}\n        grid={{ gutter: 16, xs: 1, sm: 2, md: 2, lg: 3, xl: 4, xxl: 5 }}\n        dataSource={model_cards?.edges\n          ?.map((edge) => edge?.node)\n          .filter((info) => {\n            let passSearchFilter = true;\n            if (search) {\n              const searchLower = search.toLowerCase();\n              passSearchFilter =\n                info?.title?.toLowerCase().includes(searchLower) ||\n                info?.task?.toLowerCase().includes(searchLower) ||\n                info?.category?.toLowerCase().includes(searchLower) ||\n                info?.label?.some((label) =>\n                  label?.toLowerCase().includes(searchLower),\n                ) ||\n                false;\n            }\n\n            return (\n              (_.isEmpty(selectedCategories) ||\n                _.includes(selectedCategories, info?.category)) &&\n              (_.isEmpty(selectedLabels) ||\n                _.intersection(selectedLabels, info?.label).length > 0) &&\n              (_.isEmpty(selectedTasks) ||\n                _.includes(selectedTasks, info?.task)) &&\n              passSearchFilter\n            );\n          })}\n        renderItem={(item) => (\n          <List.Item\n            onClick={() => {\n              setCurrentModelInfo(item);\n            }}\n            style={{\n              height: '100%',\n            }}\n          >\n            <Card\n              hoverable\n              title={\n                <TextHighlighter keyword={search}>\n                  {item?.title}\n                </TextHighlighter>\n              }\n              style={{\n                height: '100%',\n              }}\n              size=\"small\"\n            >\n              <Flex direction=\"row\" wrap=\"wrap\" gap={'xs'}>\n                {item?.category && (\n                  <Tag bordered={false}>\n                    <TextHighlighter keyword={search}>\n                      {item?.category}\n                    </TextHighlighter>\n                  </Tag>\n                )}\n                {item?.task && (\n                  <Tag bordered={false} color=\"success\">\n                    <TextHighlighter keyword={search}>\n                      {item?.task}\n                    </TextHighlighter>\n                  </Tag>\n                )}\n                {item?.label &&\n                  _.map(item?.label, (label) => (\n                    <Tag key={label} bordered={false} color=\"blue\">\n                      <TextHighlighter keyword={search}>\n                        {label}\n                      </TextHighlighter>\n                    </Tag>\n                  ))}\n              </Flex>\n            </Card>\n          </List.Item>\n        )}\n      />\n      <ModelCardModal\n        modelCardModalFrgmt={currentModelInfo}\n        open={!!currentModelInfo}\n        onRequestClose={() => {\n          setCurrentModelInfo(null);\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default ModelStoreListPage;\n","/**\n * @generated SignedSource<<29d9689723f0441dd2f12d65a0267b0d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelStoreListPageQuery$variables = {\n  filter?: string | null | undefined;\n};\nexport type ModelStoreListPageQuery$data = {\n  readonly model_cards: {\n    readonly count: number | null | undefined;\n    readonly edges: ReadonlyArray<{\n      readonly cursor: string;\n      readonly node: {\n        readonly author: string | null | undefined;\n        readonly category: string | null | undefined;\n        readonly description: string | null | undefined;\n        readonly id: string;\n        readonly label: ReadonlyArray<string | null | undefined> | null | undefined;\n        readonly license: string | null | undefined;\n        readonly min_resource: any | null | undefined;\n        readonly name: string | null | undefined;\n        readonly task: string | null | undefined;\n        readonly title: string | null | undefined;\n        readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCardModalFragment\">;\n      } | null | undefined;\n    } | null | undefined>;\n    readonly pageInfo: {\n      readonly hasNextPage: boolean;\n      readonly hasPreviousPage: boolean;\n    };\n  } | null | undefined;\n};\nexport type ModelStoreListPageQuery = {\n  response: ModelStoreListPageQuery$data;\n  variables: ModelStoreListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"filter\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 200\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"cursor\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"author\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"task\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"category\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"label\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"license\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"min_resource\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"count\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PageInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"pageInfo\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hasNextPage\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hasPreviousPage\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"host\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ModelStoreListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ModelCardConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"model_cards\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ModelCardEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ModelCard\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  (v7/*: any*/),\n                  (v8/*: any*/),\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  (v12/*: any*/),\n                  {\n                    \"args\": null,\n                    \"kind\": \"FragmentSpread\",\n                    \"name\": \"ModelCardModalFragment\"\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v13/*: any*/),\n          (v14/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ModelStoreListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ModelCardConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"model_cards\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ModelCardEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ModelCard\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  (v7/*: any*/),\n                  (v8/*: any*/),\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  (v12/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"version\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"created_at\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"modified_at\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"architecture\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"framework\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"readme\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"VirtualFolder\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"vfolder\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cloneable\",\n                        \"storageKey\": null\n                      },\n                      (v3/*: any*/),\n                      (v4/*: any*/),\n                      (v15/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"VirtualFolderNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"vfolder_node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v4/*: any*/),\n                      (v15/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v13/*: any*/),\n          (v14/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"ad4b59b50935a0c58d3d0d526f7d3068\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ModelStoreListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ModelStoreListPageQuery(\\n  $filter: String\\n) {\\n  model_cards(filter: $filter, first: 200) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        name\\n        author\\n        title\\n        description\\n        task\\n        category\\n        label\\n        license\\n        min_resource\\n        ...ModelCardModalFragment\\n      }\\n    }\\n    count\\n    pageInfo {\\n      hasNextPage\\n      hasPreviousPage\\n    }\\n  }\\n}\\n\\nfragment ModelCardModalFragment on ModelCard {\\n  id\\n  name\\n  author\\n  title\\n  version\\n  created_at\\n  modified_at\\n  description\\n  task\\n  category\\n  architecture\\n  framework\\n  label\\n  license\\n  readme\\n  min_resource\\n  vfolder {\\n    cloneable\\n    id\\n    name\\n    host\\n  }\\n  vfolder_node @since(version: \\\"24.09.*\\\") {\\n    ...ModelCloneModalVFolderFragment\\n    id\\n  }\\n}\\n\\nfragment ModelCloneModalVFolderFragment on VirtualFolderNode {\\n  id\\n  name\\n  host\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"325caeedad31dff1df7e4d9bfa3c8855\";\n\nexport default node;\n"],"names":["ACCELERATOR_UNIT_MAP","MWCIconWrap","_ref2","size","children","_jsx","style","concat","width","height","ResourceTypeIcon","_ref3","_resourceTypeIconSrcM","_resourceTypeIconSrcM2","_resourceTypeIconSrcM3","type","showIcon","showUnit","showTooltip","props","t","useTranslation","resourceTypeIconSrcMap","cpu","mem","content","alignSelf","src","alt","Flex","Tooltip","title","pointerEvents","_ref","_resourceSlotsDetails","_iSizeToSize","_resourceSlotsDetails2","_resourceSlotsDetails3","_iSizeToSize2","value","amount","extra","opts","hideTooltip","token","theme","useToken","currentGroup","useCurrentResourceGroupValue","resourceSlotsDetails","useResourceSlotsDetails","undefined","_jsxs","direction","gap","Typography","Text","number_format","binary","Number","iSizeToSize","numberFixed","toString","round_length","parseFloat","toFixed","display_unit","shmem","fontSize","fontSizeSM","autoSelectType","showUsageStatus","onChange","defaultValue","searchValue","onSearch","partialSelectProps","shadowRoot","useShadowRoot","baiClient","useSuspendedBackendaiClient","data","vhostInfo","isLoading","isLoadingVhostInfo","useQuery","vfolder","list_hosts","controllableState","setControllableState","useControllableValue","_","controllableSearchValue","setControllableSearchValue","useEffect","_vhostInfo$default","_vhostInfo$volume_inf2","nextHost","default","allowed","_$minBy","host","_vhostInfo$volume_inf","volume_info","id","Select","filterOption","placeholder","loading","minWidth","_vhostInfo$volume_inf3","optionLabelProp","options","_vhostInfo$volume_inf4","_vhostInfo$volume_inf5","_vhostInfo$volume_inf6","_vhostInfo$volume_inf7","_vhostInfo$volume_inf8","_vhostInfo$volume_inf9","_vhostInfo$volume_inf10","_vhostInfo$volume_inf11","label","align","usage","percentage","getPopupContainer","Badge","color","usageIndicatorColor","TextHighlighter","keyword","node","v0","v1","hash","errorMessageTable","regexTable","usePainKiller","relieve","msg","globalThis","backendaiclient","backendaiwebui","debug","hasOwnProperty","call","regex","Object","keys","RegExp","test","vfolderNode","deprecatedVFolderInfo","useFragment","_ModelCloneModalVFolderFragment","require","formRef","useRef","painKiller","upsertNotification","useSetBAINotification","extraNameError","setExtraNameError","useState","mutationToClone","useTanMutation","mutationFn","input","name","clone","BAIModal","destroyOnClose","okText","confirmLoading","onOk","e","_formRef$current","current","validateFields","then","values","mutate","onSuccess","_props$onOk","key","open","backgroundTask","status","percent","taskId","bgtask_id","statusDescriptions","pending","resolved","rejected","message","target_name","toText","to","onError","error","_error$message","includes","validateStatus","help","messageStr","catch","Alert","Form","ref","layout","requiredMark","initialValues","permission","usage_mode","target_host","scrollToFirstError","Item","required","Input","disabled","rules","pattern","autoComplete","tooltip","StorageSelect","isAPIVersionCompatibleWith","hidden","valuePropName","Switch","checked","_model_card$vfolder","_model_card$vfolder2","_model_card$vfolder3","_model_card$vfolder4","modelCardModalFrgmt","onRequestClose","visibleCloneModal","setVisibleCloneModal","metadata","useBackendAIImageMetaData","model_card","_ModelCardModalFragment","centered","onCancel","footer","Button","onClick","marginBottom","marginSM","wrap","justify","flex","category","Tag","bordered","marginRight","task","license","icon","BankOutlined","ghost","Cog","CopyOutlined","cloneable","Row","gutter","marginLG","Col","xs","span","Paragraph","ellipsis","rows","expandable","symbol","expanded","description","Descriptions","marginTop","marginMD","column","items","author","version","architecture","framework","v","index","targetImageKey","replace","imageInfo","uniqueKey","dayjs","created_at","format","modified_at","min_resource","JSON","parse","ResourceNumber","readme","Card","FileOutlined","styles","body","padding","paddingLG","overflow","minHeight","Markdown","Suspense","ModelCloneModal","vfolder_node","useStyles","createStyles","css","cardList","_templateObject","_taggedTemplateLiteral","ModelStoreListPage","_model_cards$edges","fetchKey","updateFetchKey","useUpdatableState","search","setSearch","selectedCategories","setSelectedCategories","selectedTasks","setSelectedTasks","selectedLabels","setSelectedLabels","currentModelInfo","setCurrentModelInfo","isPendingRefetching","startRefetchingTransition","useTransition","model_cards","useLazyLoadQuery","_ModelStoreListPageQuery","filter","fetchPolicy","fieldsValues","useMemo","result","fields","forEach","field","edges","edge","_edge$node","newValue","push","className","prefix","SearchOutlined","allowClear","target","ReloadOutlined","mode","popupMatchSelectWidth","console","log","List","grid","sm","md","lg","xl","xxl","dataSource","map","info","passSearchFilter","_info$title","_info$task","_info$category","_info$label","searchLower","toLowerCase","some","length","renderItem","item","hoverable","ModelCardModal","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15"],"sourceRoot":""}