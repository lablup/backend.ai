{"version":3,"file":"static/js/936.ac4f758d.chunk.js","mappings":"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","sources":["components/__generated__/DomainSelectorQuery.graphql.ts","components/__generated__/ProjectSelectorQuery.graphql.ts","components/__generated__/QuotaScopeCardFragment.graphql.ts","components/__generated__/QuotaScopeCardUnsetMutation.graphql.ts","components/__generated__/QuotaSettingModalFragment.graphql.ts","components/__generated__/QuotaSettingModalSetMutation.graphql.ts","components/__generated__/StorageHostResourcePanelFragment.graphql.ts","components/__generated__/StorageHostSettingsPanelQuery.graphql.ts","components/__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql.ts","components/__generated__/UserSelectorQuery.graphql.ts","components/StorageHostResourcePanel.tsx","components/ProjectSelector.tsx","components/DomainSelector.tsx","components/UserSelector.tsx","components/QuotaScopeCard.tsx","components/QuotaSettingModal.tsx","components/StorageHostSettingsPanel.tsx","pages/StorageHostSettingPage.tsx","pages/__generated__/StorageHostSettingPageQuery.graphql.ts"],"sourcesContent":["/**\n * @generated SignedSource<<6ad571f958b08687b3fc333087b06e3d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type DomainSelectorQuery$variables = {};\nexport type DomainSelectorQuery$data = {\n  readonly domains: ReadonlyArray<{\n    readonly name: string | null;\n  } | null> | null;\n};\nexport type DomainSelectorQuery = {\n  response: DomainSelectorQuery$data;\n  variables: DomainSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Domain\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"domains\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": \"domains(is_active:true)\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"9df762094b74dc3eb8079edfcc73765f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DomainSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query DomainSelectorQuery {\\n  domains(is_active: true) {\\n    name\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c14d362fa40cf9a3cef5d1d71202cc5f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7501221e296c4d009f39d135d79c2589>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ProjectSelectorQuery$variables = {\n  domain_name?: string | null;\n};\nexport type ProjectSelectorQuery$data = {\n  readonly projects: ReadonlyArray<{\n    readonly id: any | null;\n    readonly is_active: boolean | null;\n    readonly name: string | null;\n    readonly resource_policy: string | null;\n  } | null> | null;\n};\nexport type ProjectSelectorQuery = {\n  response: ProjectSelectorQuery$data;\n  variables: ProjectSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domain_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": \"projects\",\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"domain_name\",\n        \"variableName\": \"domain_name\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Group\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"groups\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"is_active\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"resource_policy\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"eecad68ff1a08d753ce22ff2c5136c26\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectSelectorQuery(\\n  $domain_name: String\\n) {\\n  projects: groups(domain_name: $domain_name, is_active: true) {\\n    id\\n    is_active\\n    name\\n    resource_policy\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"2845b31197571f750613f64207ded239\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0fc7d8b1a081c028e76be6790adc0523>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaScopeCardFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n    readonly usage_bytes: any | null;\n  };\n  readonly id: any;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n  readonly \" $fragmentType\": \"QuotaScopeCardFragment\";\n};\nexport type QuotaScopeCardFragment$key = {\n  readonly \" $data\"?: QuotaScopeCardFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaScopeCardFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"usage_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"QuotaSettingModalFragment\"\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"78fe420c92ce5b9c8d5c133d1f9c389f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5de6b6644c875a46e1660d9c295d8203>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeCardUnsetMutation$variables = {\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaScopeCardUnsetMutation$data = {\n  readonly unset_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: any;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaScopeCardUnsetMutation = {\n  response: QuotaScopeCardUnsetMutation$data;\n  variables: QuotaScopeCardUnsetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"quota_scope_id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"storage_host_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"UnsetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"unset_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"338836966362b14e823520f40fa56a73\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaScopeCardUnsetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n) {\\n  unset_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"272001cc642518fb66015dcc367b9f65\";\n\nexport default node;\n","/**\n * @generated SignedSource<<07a7ef0c65467384653ab0c129416850>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaSettingModalFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n  };\n  readonly id: any;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentType\": \"QuotaSettingModalFragment\";\n};\nexport type QuotaSettingModalFragment$key = {\n  readonly \" $data\"?: QuotaSettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaSettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1c5ad8315a2d78cb376e7436dc6a8627\";\n\nexport default node;\n","/**\n * @generated SignedSource<<3559859233c669e5b8f3f3760f46c7f8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeInput = {\n  hard_limit_bytes?: any | null;\n};\nexport type QuotaSettingModalSetMutation$variables = {\n  props: QuotaScopeInput;\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaSettingModalSetMutation$data = {\n  readonly set_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: any;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaSettingModalSetMutation = {\n  response: QuotaSettingModalSetMutation$data;\n  variables: QuotaSettingModalSetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"SetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"set_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"d337cab9be9523bfde2bfb7d6bed595b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaSettingModalSetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $props: QuotaScopeInput!\\n) {\\n  set_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name, props: $props) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e8509b3174920c1dd917ece91d41161\";\n\nexport default node;\n","/**\n * @generated SignedSource<<43d4063d6d35b79d500b74f0832dea56>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostResourcePanelFragment$data = {\n  readonly backend: string | null;\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly path: string | null;\n  readonly usage: any | null;\n  readonly \" $fragmentType\": \"StorageHostResourcePanelFragment\";\n};\nexport type StorageHostResourcePanelFragment$key = {\n  readonly \" $data\"?: StorageHostResourcePanelFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostResourcePanelFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"backend\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"path\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"30a1b4101eeb2fae45385780dbc0ddcc\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7c0b5edafc0cb885bac92aa4e339e4d5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanelQuery$variables = {\n  quota_scope_id: string;\n  skipQuotaScope: boolean;\n  storage_host_name: string;\n};\nexport type StorageHostSettingsPanelQuery$data = {\n  readonly quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\" | \"QuotaSettingModalFragment\">;\n  } | null;\n};\nexport type StorageHostSettingsPanelQuery = {\n  response: StorageHostSettingsPanelQuery$data;\n  variables: StorageHostSettingsPanelQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipQuotaScope\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"quota_scope_id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"storage_host_name\",\n    \"variableName\": \"storage_host_name\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaSettingModalFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaScopeCardFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"quota_scope_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"storage_host_name\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"QuotaDetails\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"details\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hard_limit_bytes\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"usage_bytes\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"5c754f3e5dfc1e85c799b2678bb5cf87\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingsPanelQuery(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $skipQuotaScope: Boolean!\\n) {\\n  quota_scope(storage_host_name: $storage_host_name, quota_scope_id: $quota_scope_id) @skip(if: $skipQuotaScope) {\\n    ...QuotaSettingModalFragment\\n    ...QuotaScopeCardFragment\\n  }\\n}\\n\\nfragment QuotaScopeCardFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n    usage_bytes\\n  }\\n  ...QuotaSettingModalFragment\\n}\\n\\nfragment QuotaSettingModalFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"ef16372a7f5bf0c1844a65d4b63fe4d9\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7acd4325686b832afcb8cccb2a539ff6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$data = {\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly \" $fragmentType\": \"StorageHostSettingsPanel_storageVolumeFrgmt\";\n};\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$key = {\n  readonly \" $data\"?: StorageHostSettingsPanel_storageVolumeFrgmt$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"2f9e5e6060806e6f9265e5cbbd325afe\";\n\nexport default node;\n","/**\n * @generated SignedSource<<bf0b4cbded1569190cc46f94e0dca86c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserSelectorQuery$variables = {\n  filter?: string | null;\n  limit: number;\n  offset: number;\n};\nexport type UserSelectorQuery$data = {\n  readonly user_list: {\n    readonly items: ReadonlyArray<{\n      readonly email: string | null;\n      readonly id: string | null;\n      readonly is_active: boolean | null;\n      readonly resource_policy: string | null;\n    } | null>;\n  } | null;\n};\nexport type UserSelectorQuery = {\n  response: UserSelectorQuery$data;\n  variables: UserSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"filter\",\n        \"variableName\": \"filter\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"limit\",\n        \"variableName\": \"limit\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"offset\",\n        \"variableName\": \"offset\"\n      }\n    ],\n    \"concreteType\": \"UserList\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_list\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"items\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"is_active\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"resource_policy\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f552e13a727e58f49a7a7e49a466d4d2\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSelectorQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $filter: String\\n) {\\n  user_list(limit: $limit, offset: $offset, filter: $filter, is_active: true) {\\n    items {\\n      id\\n      is_active\\n      email\\n      resource_policy\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"323d93fb2d8eb4ee2d1d3677121f9ad2\";\n\nexport default node;\n","import { useFragment } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { StorageHostResourcePanelFragment$key } from \"./__generated__/StorageHostResourcePanelFragment.graphql\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport { Progress, Descriptions, Typography, Tag } from \"antd\";\n\nimport {\n  _humanReadableDecimalSize,\n  usageIndicatorColor,\n} from \"../helper/index\";\nimport _ from \"lodash\";\n\nconst StorageHostResourcePanel: React.FC<{\n  storageVolumeFrgmt: StorageHostResourcePanelFragment$key | null;\n}> = ({ storageVolumeFrgmt: resourceFrgmt }) => {\n  const { t } = useTranslation();\n\n  const resource = useFragment(\n    graphql`\n      fragment StorageHostResourcePanelFragment on StorageVolume {\n        id\n        backend\n        capabilities\n        path\n        usage\n      }\n    `,\n    resourceFrgmt\n  );\n\n  const parsedUsage = JSON.parse(resource?.usage || \"{}\");\n  const usedBytes = parsedUsage?.used_bytes;\n  const capacityBytes = parsedUsage?.capacity_bytes;\n  const usageRatio = capacityBytes > 0 ? usedBytes / capacityBytes : 0;\n  const storageUsage = {\n    used_bytes: usedBytes,\n    capacity_bytes: capacityBytes,\n    percent: Number((usageRatio * 100).toFixed(1)),\n  };\n\n  return (\n    <Descriptions size=\"small\" bordered column={3}>\n      <Descriptions.Item label={t(\"storageHost.Usage\")} span={3}>\n        {storageUsage?.percent < 100 ? (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            strokeColor={usageIndicatorColor(storageUsage?.percent)}\n          ></Progress>\n        ) : (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            status=\"exception\"\n          ></Progress>\n        )}\n        <Typography.Text type=\"secondary\">\n          {t(\"storageHost.Used\")}:{\" \"}\n        </Typography.Text>\n        {_humanReadableDecimalSize(storageUsage?.used_bytes)}\n        <Typography.Text type=\"secondary\">{\" / \"}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {t(\"storageHost.Total\")}:{\" \"}\n        </Typography.Text>\n        {_humanReadableDecimalSize(storageUsage?.capacity_bytes)}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.Endpoint\")}>\n        {resource?.path}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.BackendType\")}>\n        {resource?.backend}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.Capabilities\")}>\n        {_.map(resource?.capabilities, (cap) => (\n          <Tag key={cap}>{cap}</Tag>\n        ))}\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default StorageHostResourcePanel;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { ProjectSelectorQuery } from \"./__generated__/ProjectSelectorQuery.graphql\";\n\nimport _ from \"lodash\";\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props extends SelectProps {\n  onSelectProject?: (project: any) => void;\n  domain: string;\n}\n\nconst ProjectSelector: React.FC<Props> = ({\n  onSelectProject,\n  domain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { projects } = useLazyLoadQuery<ProjectSelectorQuery>(\n    graphql`\n      query ProjectSelectorQuery($domain_name: String) {\n        projects: groups(domain_name: $domain_name, is_active: true) {\n          id\n          is_active\n          name\n          resource_policy\n        }\n      }\n    `,\n    {\n      domain_name: domain,\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectProject?.(option);\n      }}\n      placeholder={t(\"storageHost.quotaSettings.SelectProject\")}\n      {...selectProps}\n    >\n      {_.map(projects, (project) => {\n        return (\n          <Select.Option\n            key={project?.id}\n            projectId={project?.id}\n            projectResourcePolicy={project?.resource_policy}\n          >\n            {project?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default ProjectSelector;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { DomainSelectorQuery } from \"./__generated__/DomainSelectorQuery.graphql\";\n\nimport _ from \"lodash\";\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props extends SelectProps {\n  onSelectDomain?: (project: any) => void;\n}\nconst DomainSelector: React.FC<Props> = ({\n  onSelectDomain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { domains } = useLazyLoadQuery<DomainSelectorQuery>(\n    graphql`\n      query DomainSelectorQuery {\n        domains(is_active: true) {\n          name\n        }\n      }\n    `,\n    {},\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectDomain?.(option);\n      }}\n      placeholder={t(\"storageHost.quotaSettings.SelectDomain\")}\n      {...selectProps}\n    >\n      {_.map(domains, (domain) => {\n        return (\n          <Select.Option key={domain?.name} domainName={domain?.name}>\n            {domain?.name}\n          </Select.Option>\n        );\n      })}\n      ;\n    </Select>\n  );\n};\n\nexport default DomainSelector;\n","import React, { useDeferredValue, useState } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { UserSelectorQuery } from \"./__generated__/UserSelectorQuery.graphql\";\n\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\n\ninterface Props extends SelectProps {\n  onSelectUser: (user: any) => void;\n}\n\nconst UserSelector: React.FC<Props> = ({ onSelectUser, ...selectProps }) => {\n  const { t } = useTranslation();\n  const [search, setSearch] = useState<string>(\"\");\n  const deferredSearch = useDeferredValue(search);\n  const { user_list } = useLazyLoadQuery<UserSelectorQuery>(\n    graphql`\n      query UserSelectorQuery($limit: Int!, $offset: Int!, $filter: String) {\n        user_list(\n          limit: $limit\n          offset: $offset\n          filter: $filter\n          is_active: true\n        ) {\n          items {\n            id\n            is_active\n            email\n            resource_policy\n          }\n        }\n      }\n    `,\n    {\n      limit: 150,\n      offset: 0,\n      filter:\n        deferredSearch?.length === 0\n          ? null\n          : 'email ilike \"%' + deferredSearch + '%\"',\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      filterOption={false}\n      searchValue={search}\n      loading={deferredSearch !== search}\n      onSearch={(value) => {\n        setSearch(value);\n      }}\n      onChange={(value) => {\n        onSelectUser(\n          _.find(user_list?.items, (user) => {\n            return user?.email === value;\n          })\n        );\n      }}\n      showSearch\n      placeholder={t(\"storageHost.quotaSettings.SelectUser\")}\n      options={_.map(user_list?.items, (user) => {\n        return {\n          value: user?.email,\n          label: user?.email,\n        };\n      }).sort((a, b) => (a.value && b.value && a.value > b.value ? 1 : -1))}\n      {...selectProps}\n    />\n  );\n};\n\nexport default UserSelector;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { QuotaScopeCardUnsetMutation } from \"./__generated__/QuotaScopeCardUnsetMutation.graphql\";\n\nimport {\n  CardProps,\n  Table,\n  Button,\n  Popconfirm,\n  message,\n  Empty,\n  theme,\n} from \"antd\";\nimport { EditFilled, PlusOutlined, CloseOutlined } from \"@ant-design/icons\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { bytesToGB } from \"../helper/index\";\nimport { QuotaScopeCardFragment$key } from \"./__generated__/QuotaScopeCardFragment.graphql\";\nimport Flex from \"./Flex\";\n\ninterface Props extends CardProps {\n  quotaScopeFrgmt: QuotaScopeCardFragment$key | null;\n  showAddButtonWhenEmpty: boolean;\n  onClickEdit: () => void;\n}\nconst QuotaScopeCard: React.FC<Props> = ({\n  quotaScopeFrgmt,\n  showAddButtonWhenEmpty,\n  onClickEdit,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const quota_scope = useFragment(\n    graphql`\n      fragment QuotaScopeCardFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n          usage_bytes\n        }\n        ...QuotaSettingModalFragment\n      }\n    `,\n    quotaScopeFrgmt\n  );\n\n  const [commitUnsetQuotaScope, isInFlightCommitUnsetQuotaScope] =\n    useMutation<QuotaScopeCardUnsetMutation>(\n      graphql`\n        mutation QuotaScopeCardUnsetMutation(\n          $quota_scope_id: String!\n          $storage_host_name: String!\n        ) {\n          unset_quota_scope(\n            quota_scope_id: $quota_scope_id\n            storage_host_name: $storage_host_name\n          ) {\n            quota_scope {\n              id\n              quota_scope_id\n              storage_host_name\n              details {\n                hard_limit_bytes\n              }\n            }\n          }\n        }\n      `\n    );\n\n  const selectProjectOrUserFirst = (\n    <Empty\n      style={{ width: \"100%\" }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={<div>{t(\"storageHost.quotaSettings.SelectFirst\")}</div>}\n    />\n  );\n\n  const addQuotaConfigsWhenEmpty = (\n    <Empty\n      style={{ width: \"100%\" }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={\n        <>\n          <div style={{ margin: 10 }}>\n            {t(\"storageHost.quotaSettings.ClickSettingButton\")}\n          </div>\n          <Button\n            icon={<PlusOutlined />}\n            onClick={() => onClickEdit && onClickEdit()}\n          >\n            {t(\"storageHost.quotaSettings.AddQuotaConfigs\")}\n          </Button>\n        </>\n      }\n    />\n  );\n\n  return (\n    <Table\n      bordered\n      rowKey=\"id\"\n      columns={[\n        {\n          title: t(\"storageHost.quotaSettings.QuotaScopeId\"),\n          dataIndex: \"quota_scope_id\",\n          key: \"quota_scope_id\",\n          render: (value) => <code>{value}</code>,\n        },\n        {\n          title: t(\"storageHost.HardLimit\") + \" (GB)\",\n          dataIndex: [\"details\", \"hard_limit_bytes\"],\n          key: \"hard_limit_bytes\",\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t(\"storageHost.Usage\") + \" (GB)\",\n          dataIndex: [\"details\", \"usage_bytes\"],\n          key: \"usage_bytes\",\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t(\"general.Control\"),\n          key: \"control\",\n          render: () => (\n            <Flex gap={token.marginSM}>\n              <Button\n                icon={<EditFilled />}\n                onClick={() => onClickEdit && onClickEdit()}\n              >\n                {t(\"button.Edit\")}\n              </Button>\n              <Popconfirm\n                title={t(\"storageHost.quotaSettings.UnsetCustomSettings\")}\n                description={t(\n                  \"storageHost.quotaSettings.ConfirmUnsetCustomQuota\"\n                )}\n                placement=\"bottom\"\n                onConfirm={() => {\n                  if (quota_scope) {\n                    commitUnsetQuotaScope({\n                      variables: {\n                        quota_scope_id: quota_scope.quota_scope_id,\n                        storage_host_name: quota_scope.storage_host_name,\n                      },\n                      onCompleted() {\n                        message.success(\n                          t(\n                            \"storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated\"\n                          )\n                        );\n                      },\n                      onError(error) {\n                        message.error(error?.message);\n                      },\n                    });\n                  }\n                }}\n              >\n                <Button\n                  loading={isInFlightCommitUnsetQuotaScope}\n                  danger\n                  icon={<CloseOutlined />}\n                >\n                  {t(\"button.Unset\")}\n                </Button>\n              </Popconfirm>\n            </Flex>\n          ),\n        },\n      ]}\n      dataSource={quota_scope ? [quota_scope] : []}\n      locale={{\n        emptyText: showAddButtonWhenEmpty\n          ? addQuotaConfigsWhenEmpty\n          : selectProjectOrUserFirst,\n      }}\n      pagination={false}\n    />\n  );\n};\n\nexport default QuotaScopeCard;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { QuotaSettingModalFragment$key } from \"./__generated__/QuotaSettingModalFragment.graphql\";\nimport { QuotaSettingModalSetMutation } from \"./__generated__/QuotaSettingModalSetMutation.graphql\";\n\nimport { Modal, ModalProps, Form, Input, message } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { GBToBytes, bytesToGB } from \"../helper\";\n\ninterface Props extends ModalProps {\n  quotaScopeFrgmt?: QuotaSettingModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst QuotaSettingModal: React.FC<Props> = ({\n  quotaScopeFrgmt = null,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const quotaScope = useFragment(\n    graphql`\n      fragment QuotaSettingModalFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n        }\n      }\n    `,\n    quotaScopeFrgmt\n  );\n\n  const [commitSetQuotaScope, isInFlightCommitSetQuotaScope] =\n    useMutation<QuotaSettingModalSetMutation>(graphql`\n      mutation QuotaSettingModalSetMutation(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $props: QuotaScopeInput!\n      ) {\n        set_quota_scope(\n          quota_scope_id: $quota_scope_id\n          storage_host_name: $storage_host_name\n          props: $props\n        ) {\n          quota_scope {\n            id\n            quota_scope_id\n            storage_host_name\n            details {\n              hard_limit_bytes\n            }\n          }\n        }\n      }\n    `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      commitSetQuotaScope({\n        variables: {\n          quota_scope_id: quotaScope?.quota_scope_id || \"\",\n          storage_host_name: quotaScope?.storage_host_name || \"\",\n          props: {\n            hard_limit_bytes: GBToBytes(values?.hard_limit_bytes),\n          },\n        },\n        onCompleted(response) {\n          if (response?.set_quota_scope?.quota_scope?.id) {\n            message.success(\n              t(\"storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated\")\n            );\n          } else {\n            message.error(t(\"dialog.ErrorOccurred\"));\n          }\n          onRequestClose();\n        },\n        onError(error) {\n          console.log(error);\n          message.error(error?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitSetQuotaScope}\n      onCancel={onRequestClose}\n      title={t(\"storageHost.quotaSettings.QuotaSettings\")}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        style={{ marginBottom: 40, marginTop: 20 }}\n      >\n        <Form.Item\n          name=\"hard_limit_bytes\"\n          label={t(\"storageHost.HardLimit\")}\n          initialValue={bytesToGB(quotaScope?.details?.hard_limit_bytes)}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t(\"storageHost.quotaSettings.AllowNumberAndDot\") ||\n                \"Allows numbers and .(dot) only\",\n            },\n          ]}\n        >\n          <Input\n            addonAfter=\"GB\"\n            type=\"number\"\n            step={0.25}\n            style={{ width: \"70%\" }}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default QuotaSettingModal;\n","import React, { useState, useTransition } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { QuotaScopeType, addQuotaScopeTypePrefix } from \"../helper/index\";\n\nimport { Card, Form, Spin } from \"antd\";\n\nimport Flex from \"./Flex\";\nimport ProjectSelector from \"./ProjectSelector\";\nimport DomainSelector from \"./DomainSelector\";\nimport UserSelector from \"./UserSelector\";\nimport QuotaScopeCard from \"./QuotaScopeCard\";\nimport { useFragment, useLazyLoadQuery } from \"react-relay\";\n\nimport graphql from \"babel-plugin-relay/macro\";\nimport { StorageHostSettingsPanel_storageVolumeFrgmt$key } from \"./__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql\";\nimport { StorageHostSettingsPanelQuery } from \"./__generated__/StorageHostSettingsPanelQuery.graphql\";\nimport QuotaSettingModal from \"./QuotaSettingModal\";\nimport { useToggle } from \"ahooks\";\nimport { useCurrentDomainValue, useUpdatableState } from \"../hooks\";\n\ninterface StorageHostSettingsPanelProps {\n  extraFetchKey?: string;\n  storageVolumeFrgmt: StorageHostSettingsPanel_storageVolumeFrgmt$key | null;\n}\nconst StorageHostSettingsPanel: React.FC<StorageHostSettingsPanelProps> = ({\n  storageVolumeFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const storageVolume = useFragment(\n    graphql`\n      fragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\n        id\n        capabilities\n      }\n    `,\n    storageVolumeFrgmt\n  );\n\n  const [isPending, startTransition] = useTransition();\n  const currentDomain = useCurrentDomainValue();\n  const [currentSettingType, setCurrentSettingType] =\n    useState<QuotaScopeType>(\"user\");\n\n  const [selectedDomainName, setSelectedDomainName] =\n    useState<string>(currentDomain);\n  const [selectedProjectId, setSelectedProjectId] = useState<string>();\n  useState<string>();\n  const [selectedUserId, setSelectedUserId] = useState<string>();\n  const [selectedUserEmail, setSelectedUserEmail] = useState<string>();\n  useState<string>();\n\n  const quotaScopeId = addQuotaScopeTypePrefix(\n    currentSettingType,\n    (currentSettingType === \"project\" ? selectedProjectId : selectedUserId) ||\n      \"\"\n  );\n\n  const [isOpenQuotaSettingModal, { toggle: toggleQuotaSettingModal }] =\n    useToggle(false);\n  const [fetchKey] = useUpdatableState(\"default\");\n\n  const { quota_scope } = useLazyLoadQuery<StorageHostSettingsPanelQuery>(\n    graphql`\n      query StorageHostSettingsPanelQuery(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $skipQuotaScope: Boolean!\n      ) {\n        quota_scope(\n          storage_host_name: $storage_host_name\n          quota_scope_id: $quota_scope_id\n        ) @skip(if: $skipQuotaScope) {\n          ...QuotaSettingModalFragment\n          ...QuotaScopeCardFragment\n        }\n      }\n    `,\n    {\n      // quota scope\n      quota_scope_id: quotaScopeId,\n      skipQuotaScope: quotaScopeId === undefined || quotaScopeId === \"\",\n      storage_host_name: storageVolume?.id || \"\",\n    },\n    {\n      fetchPolicy: \"network-only\",\n      fetchKey: fetchKey,\n    }\n  );\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Card\n        title={t(\"storageHost.QuotaSettings\")}\n        tabList={[\n          {\n            key: \"user\",\n            tab: t(\"storageHost.ForUser\"),\n          },\n          {\n            key: \"project\",\n            tab: t(\"storageHost.ForProject\"),\n          },\n        ]}\n        activeTabKey={currentSettingType}\n        // eslint-disable-next-line\n        //@ts-ignore\n        onTabChange={(v) => {\n          startTransition(() => {\n            setCurrentSettingType(v as QuotaScopeType);\n          });\n        }}\n      >\n        <Flex justify=\"between\">\n          {currentSettingType === \"project\" ? (\n            <Flex style={{ marginBottom: 10 }}>\n              <Form layout=\"inline\">\n                <Form.Item label={t(\"resourceGroup.Domain\")}>\n                  <DomainSelector\n                    style={{ width: \"20vw\", marginRight: 10 }}\n                    value={selectedDomainName}\n                    onSelectDomain={(domain: any) => {\n                      startTransition(() => {\n                        setSelectedDomainName(domain?.domainName);\n                        setSelectedProjectId(undefined);\n                      });\n                    }}\n                  />\n                </Form.Item>\n                <Form.Item label={t(\"webui.menu.Project\")}>\n                  <ProjectSelector\n                    style={{ width: \"20vw\" }}\n                    value={selectedProjectId}\n                    disabled={!selectedDomainName}\n                    domain={selectedDomainName || \"\"}\n                    onSelectProject={(project: any) => {\n                      startTransition(() => {\n                        setSelectedProjectId(project?.projectId);\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Form>\n            </Flex>\n          ) : (\n            <Form layout=\"inline\">\n              <Form.Item label={t(\"data.User\")}>\n                <UserSelector\n                  style={{ width: \"30vw\", marginBottom: 10 }}\n                  value={selectedUserEmail}\n                  onSelectUser={(user) => {\n                    setSelectedUserEmail(user?.email);\n                    startTransition(() => {\n                      setSelectedUserId(user?.id);\n                    });\n                  }}\n                />\n              </Form.Item>\n            </Form>\n          )}\n        </Flex>\n        <Spin spinning={isPending}>\n          <QuotaScopeCard\n            quotaScopeFrgmt={quota_scope || null}\n            onClickEdit={() => {\n              toggleQuotaSettingModal();\n            }}\n            showAddButtonWhenEmpty={\n              (currentSettingType === \"project\" && !!selectedProjectId) ||\n              (currentSettingType === \"user\" && !!selectedUserId)\n            }\n          />\n        </Spin>\n        <QuotaSettingModal\n          open={isOpenQuotaSettingModal}\n          quotaScopeFrgmt={quota_scope || null}\n          onRequestClose={() => {\n            toggleQuotaSettingModal();\n          }}\n        />\n      </Card>\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingsPanel;\n","import React, { Suspense } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { StorageHostSettingPageQuery } from \"./__generated__/StorageHostSettingPageQuery.graphql\";\n\nimport { Breadcrumb, Card, Empty, Typography, theme } from \"antd\";\nimport Flex from \"../components/Flex\";\nimport StorageHostResourcePanel from \"../components/StorageHostResourcePanel\";\nimport StorageHostSettingsPanel from \"../components/StorageHostSettingsPanel\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport { useWebComponentInfo } from \"../components/DefaultProviders\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface StorageHostSettingPageProps {\n  storageHostId: string;\n}\nconst StorageHostSettingPage: React.FC<StorageHostSettingPageProps> = ({\n  storageHostId,\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { moveTo } = useWebComponentInfo();\n  const { t } = useTranslation();\n  const { storage_volume } = useLazyLoadQuery<StorageHostSettingPageQuery>(\n    graphql`\n      query StorageHostSettingPageQuery($id: String) {\n        storage_volume(id: $id) {\n          id\n          capabilities\n          ...StorageHostResourcePanelFragment\n          ...StorageHostSettingsPanel_storageVolumeFrgmt\n        }\n      }\n    `,\n    {\n      id: storageHostId || \"\",\n    }\n  );\n\n  const isQuotaSupportedStorage =\n    storage_volume?.capabilities?.includes(\"quota\") ?? false;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM, gap: token.margin }}\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: \"Resources\",\n            onClick: (e) => {\n              e.preventDefault();\n              moveTo(\"/agent\");\n            },\n            href: \"/agent\",\n          },\n          {\n            title: \"Storage setting\",\n          },\n        ]}\n      ></Breadcrumb>\n      <Typography.Title level={3} style={{ margin: 0 }}>\n        {storageHostId || \"\"}\n      </Typography.Title>\n      <StorageHostResourcePanel storageVolumeFrgmt={storage_volume || null} />\n      {baiClient.supports(\"quota-scope\") && (\n        <>\n          {isQuotaSupportedStorage ? (\n            <Suspense fallback={<div>loading...</div>}>\n              <StorageHostSettingsPanel\n                storageVolumeFrgmt={storage_volume || null}\n              />\n            </Suspense>\n          ) : (\n            <Card title={t(\"storageHost.QuotaSettings\")}>\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={t(\"storageHost.QuotaDoesNotSupported\")}\n              />\n            </Card>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingPage;\n","/**\n * @generated SignedSource<<283a752f4675b1e3d4fe6f0da7198984>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingPageQuery$variables = {\n  id?: string | null;\n};\nexport type StorageHostSettingPageQuery$data = {\n  readonly storage_volume: {\n    readonly capabilities: ReadonlyArray<string | null> | null;\n    readonly id: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\" | \"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n  } | null;\n};\nexport type StorageHostSettingPageQuery = {\n  response: StorageHostSettingPageQuery$data;\n  variables: StorageHostSettingPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"capabilities\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostResourcePanelFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"backend\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"path\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"821175f86743d9d81be2a55aca371919\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingPageQuery(\\n  $id: String\\n) {\\n  storage_volume(id: $id) {\\n    id\\n    capabilities\\n    ...StorageHostResourcePanelFragment\\n    ...StorageHostSettingsPanel_storageVolumeFrgmt\\n  }\\n}\\n\\nfragment StorageHostResourcePanelFragment on StorageVolume {\\n  id\\n  backend\\n  capabilities\\n  path\\n  usage\\n}\\n\\nfragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\\n  id\\n  capabilities\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"f6e77057e83b0449ef99e8918e794b24\";\n\nexport default node;\n"],"names":["node","v0","hash","v1","v2","v3","_ref","resourceFrgmt","storageVolumeFrgmt","t","useTranslation","resource","useFragment","_StorageHostResourcePanelFragment","require","parsedUsage","JSON","parse","usage","usedBytes","used_bytes","capacityBytes","capacity_bytes","storageUsage","percent","Number","toFixed","_jsxs","Descriptions","size","bordered","column","children","label","span","_jsx","Progress","strokeColor","usageIndicatorColor","status","Typography","type","_humanReadableDecimalSize","path","backend","_","capabilities","cap","Tag","onSelectProject","domain","selectProps","_objectWithoutProperties","_excluded","projects","useLazyLoadQuery","_ProjectSelectorQuery","domain_name","fetchPolicy","Select","_objectSpread","onChange","value","option","placeholder","project","projectId","id","projectResourcePolicy","resource_policy","name","onSelectDomain","domains","_DomainSelectorQuery","domainName","onSelectUser","_useState","useState","_useState2","_slicedToArray","search","setSearch","deferredSearch","useDeferredValue","user_list","_UserSelectorQuery","limit","offset","filter","length","filterOption","searchValue","loading","onSearch","items","user","email","showSearch","options","sort","a","b","quotaScopeFrgmt","showAddButtonWhenEmpty","onClickEdit","token","theme","quota_scope","_QuotaScopeCardFragment","_useMutation","useMutation","_QuotaScopeCardUnsetMutation","_useMutation2","commitUnsetQuotaScope","isInFlightCommitUnsetQuotaScope","selectProjectOrUserFirst","Empty","style","width","image","description","addQuotaConfigsWhenEmpty","_Fragment","margin","Button","icon","PlusOutlined","onClick","Table","rowKey","columns","title","dataIndex","key","render","bytesToGB","Flex","gap","marginSM","EditFilled","Popconfirm","placement","onConfirm","variables","quota_scope_id","storage_host_name","onCompleted","message","onError","error","danger","CloseOutlined","dataSource","locale","emptyText","pagination","_quotaScope$details","_ref$quotaScopeFrgmt","onRequestClose","props","_Form$useForm","Form","form","quotaScope","_QuotaSettingModalFragment","_QuotaSettingModalSetMutation","commitSetQuotaScope","isInFlightCommitSetQuotaScope","Modal","zIndex","destroyOnClose","onOk","e","validateFields","then","values","hard_limit_bytes","GBToBytes","response","_response$set_quota_s","_response$set_quota_s2","set_quota_scope","console","log","confirmLoading","onCancel","preserve","labelCol","wrapperCol","validateTrigger","marginBottom","marginTop","initialValue","details","rules","pattern","Input","addonAfter","step","storageVolume","_StorageHostSettingsPanel_storageVolumeFrgmt","_useTransition","useTransition","_useTransition2","isPending","startTransition","currentDomain","useCurrentDomainValue","currentSettingType","setCurrentSettingType","_useState3","_useState4","selectedDomainName","setSelectedDomainName","_useState5","_useState6","selectedProjectId","setSelectedProjectId","_useState7","_useState8","selectedUserId","setSelectedUserId","_useState9","_useState10","selectedUserEmail","setSelectedUserEmail","quotaScopeId","addQuotaScopeTypePrefix","_useToggle","useToggle","_useToggle2","isOpenQuotaSettingModal","toggleQuotaSettingModal","toggle","_useUpdatableState","useUpdatableState","fetchKey","_StorageHostSettingsPanelQuery","skipQuotaScope","undefined","direction","align","Card","tabList","tab","activeTabKey","onTabChange","v","justify","layout","DomainSelector","marginRight","ProjectSelector","disabled","UserSelector","Spin","spinning","QuotaScopeCard","QuotaSettingModal","open","_storage_volume$capab","_storage_volume$capab2","storageHostId","baiClient","useSuspendedBackendaiClient","moveTo","useWebComponentInfo","storage_volume","_StorageHostSettingPageQuery","isQuotaSupportedStorage","includes","Breadcrumb","preventDefault","href","level","StorageHostResourcePanel","supports","Suspense","fallback","StorageHostSettingsPanel"],"sourceRoot":""}