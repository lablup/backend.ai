{"version":3,"file":"static/js/594.3cc4d401.chunk.js","mappings":"sUAmBA,MA4HA,EA1HIA,IAAqD,IAApD,eAAEC,EAAc,SAAEC,KAAaC,GAAeH,EACjD,MAAM,MAAEI,GAAUC,EAAAA,EAAMC,YAClB,QAAEC,GAAYC,EAAAA,EAAIC,UAClB,EAAEC,IAAMC,EAAAA,EAAAA,OACR,YAAEC,IAAgBC,EAAAA,EAAAA,MAClB,iBAAEC,EAAgB,iBAAEC,IAAqBC,EAAAA,EAAAA,KAEzCC,GADYC,EAAAA,EAAAA,MACgBC,+BAA+B,UAG3DC,EAAsBC,EAAAA,SAAc,IAAMT,GAAa,CAACA,IAExDU,GAAuBC,EAAAA,EAAAA,cAC1BC,IACCC,EAAAA,EAAAA,KAACC,EAAAA,EAAKC,KAAI,CAERC,QAAS,EACPH,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,KAAK,UACLC,QAASA,IACPjB,EAAiBU,EAAKQ,GAAI,CACxBC,UAAWA,KACK,OAAdhC,QAAc,IAAdA,GAAAA,GAAiB,GACjBM,EAAQ2B,QACNxB,EAAE,kDACH,EAEHyB,QAAUC,IACM,OAAdnC,QAAc,IAAdA,GAAAA,GAAiB,GACjBM,EAAQ8B,MACND,EAAE7B,SAAWG,EAAE,4CAChB,IAGN4B,SAGA5B,EAAE,mBAFC,WAINe,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLU,QAAM,EACNR,QAASA,IACPhB,EAAiBS,EAAKQ,GAAI,CACxBC,UAAWA,KACK,OAAdhC,QAAc,IAAdA,GAAAA,GAAiB,GACjBM,EAAQ2B,QACNxB,EAAE,kDACH,EAEHyB,QAAUC,IACM,OAAdnC,QAAc,IAAdA,GAAAA,GAAiB,GACjBM,EAAQ8B,MACND,EAAE7B,SAAWG,EAAE,6CAChB,IAGN4B,SAGA5B,EAAE,oBAFC,YAKR8B,MAAO,CACLC,QAASrC,EAAMsC,WACfJ,UAEFb,EAAAA,EAAAA,KAACC,EAAAA,EAAKC,KAAKgB,KAAI,CACbC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,IAAK,MAAMT,SAAA,EACfb,EAAAA,EAAAA,KAACuB,EAAAA,EAAc,KACfvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAWC,KAAI,CAACC,QAAM,EAAAb,SAAEd,EAAK4B,kBAGlCC,aACE5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAY,CACXC,KAAK,QACLC,OAAQ,EACRC,MAAO,CACL,CACEC,IAAK,OACLC,MAAOjD,EAAE,aACT4B,SAAUrB,EACNO,EAAKoC,mBACLpC,EAAKqC,SAEX,CACEH,IAAK,aACLC,MAAOjD,EAAE,mBACT4B,UAAUb,EAAAA,EAAAA,KAACqC,EAAAA,EAAqB,CAACC,WAAYvC,EAAKwC,cAzEvDxC,EAAKQ,KAiFd,CACElB,EACAC,EACAd,EACAM,EACAG,EACAN,EAAMsC,UACNzB,IAIJ,OACEQ,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CACPC,SAAUA,IAAoB,OAAdjE,QAAc,IAAdA,OAAc,EAAdA,GAAiB,GACjC2C,MAAOlC,EAAE,uBACTyD,OAAQ,QACJhE,EAAamC,UAEjBb,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACH0C,WAAYhD,EACZiD,WAAY/C,KAEL,C","sources":["components/FolderInvitationResponseModal.tsx"],"sourcesContent":["import { useSuspendedBackendaiClient } from '../hooks';\nimport {\n  InvitationItem,\n  useSetVFolderInvitations,\n  useVFolderInvitationsValue,\n} from '../hooks/useVFolderInvitations';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport VFolderPermissionCell from './VFolderPermissionCell';\nimport { FolderOutlined } from '@ant-design/icons';\nimport { List, Button, Typography, theme, Descriptions, App } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FolderInvitationResponseModalProps extends BAIModalProps {\n  onRequestClose?: (success: boolean) => void;\n  fetchKey?: string;\n}\n\nconst FolderInvitationResponseModal: React.FC<\n  FolderInvitationResponseModalProps\n> = ({ onRequestClose, fetchKey, ...baiModalProps }) => {\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n  const { t } = useTranslation();\n  const { invitations } = useVFolderInvitationsValue();\n  const { acceptInvitation, rejectInvitation } = useSetVFolderInvitations();\n  const baiClient = useSuspendedBackendaiClient();\n  const hasInviterEmail = baiClient.isManagerVersionCompatibleWith('25.6.0');\n\n  // Memoize invitations to prevent unnecessary re-renders\n  const memoizedInvitations = React.useMemo(() => invitations, [invitations]);\n\n  const renderInvitationItem = useCallback(\n    (item: InvitationItem) => (\n      <List.Item\n        key={item.id}\n        actions={[\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              acceptInvitation(item.id, {\n                onSuccess: () => {\n                  onRequestClose?.(true);\n                  message.success(\n                    t('data.invitation.SuccessfullyAcceptedInvitation'),\n                  );\n                },\n                onError: (e) => {\n                  onRequestClose?.(false);\n                  message.error(\n                    e.message || t('data.invitation.FailedToAcceptInvitation'),\n                  );\n                },\n              })\n            }\n            key=\"accept\"\n          >\n            {t('summary.Accept')}\n          </Button>,\n          <Button\n            danger\n            onClick={() =>\n              rejectInvitation(item.id, {\n                onSuccess: () => {\n                  onRequestClose?.(true);\n                  message.success(\n                    t('data.invitation.SuccessfullyDeclinedInvitation'),\n                  );\n                },\n                onError: (e) => {\n                  onRequestClose?.(false);\n                  message.error(\n                    e.message || t('data.invitation.FailedToDeclineInvitation'),\n                  );\n                },\n              })\n            }\n            key=\"decline\"\n          >\n            {t('summary.Decline')}\n          </Button>,\n        ]}\n        style={{\n          padding: token.paddingSM,\n        }}\n      >\n        <List.Item.Meta\n          title={\n            <Flex gap={'xxs'}>\n              <FolderOutlined />\n              <Typography.Text strong>{item.vfolder_name}</Typography.Text>\n            </Flex>\n          }\n          description={\n            <Descriptions\n              size=\"small\"\n              column={1}\n              items={[\n                {\n                  key: 'from',\n                  label: t('data.From'),\n                  children: hasInviterEmail\n                    ? item.inviter_user_email\n                    : item.inviter,\n                },\n                {\n                  key: 'permission',\n                  label: t('data.Permission'),\n                  children: <VFolderPermissionCell permission={item.perm} />,\n                },\n              ]}\n            />\n          }\n        />\n      </List.Item>\n    ),\n    [\n      acceptInvitation,\n      rejectInvitation,\n      onRequestClose,\n      message,\n      t,\n      token.paddingSM,\n      hasInviterEmail,\n    ],\n  );\n\n  return (\n    <BAIModal\n      onCancel={() => onRequestClose?.(false)}\n      title={t('data.InvitedFolders')}\n      footer={null}\n      {...baiModalProps}\n    >\n      <List\n        dataSource={memoizedInvitations}\n        renderItem={renderInvitationItem}\n      />\n    </BAIModal>\n  );\n};\n\nexport default FolderInvitationResponseModal;\n"],"names":["_ref","onRequestClose","fetchKey","baiModalProps","token","theme","useToken","message","App","useApp","t","useTranslation","invitations","useVFolderInvitationsValue","acceptInvitation","rejectInvitation","useSetVFolderInvitations","hasInviterEmail","useSuspendedBackendaiClient","isManagerVersionCompatibleWith","memoizedInvitations","React","renderInvitationItem","useCallback","item","_jsx","List","Item","actions","Button","type","onClick","id","onSuccess","success","onError","e","error","children","danger","style","padding","paddingSM","Meta","title","_jsxs","Flex","gap","FolderOutlined","Typography","Text","strong","vfolder_name","description","Descriptions","size","column","items","key","label","inviter_user_email","inviter","VFolderPermissionCell","permission","perm","BAIModal","onCancel","footer","dataSource","renderItem"],"sourceRoot":""}