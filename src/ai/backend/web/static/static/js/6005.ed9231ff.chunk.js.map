{"version":3,"file":"static/js/6005.ed9231ff.chunk.js","mappings":"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","sources":["components/Chat/__generated__/ChatCard_endpoint.graphql.ts","components/Chat/__generated__/ConversationQuery.graphql.ts","components/Chat/__generated__/EndpointSelectQuery.graphql.ts","components/FluentEmojiIcon.tsx","hooks/useAIAgent.ts","components/Chat/AIAgentSelect.tsx","components/Chat/EndpointSelect.tsx","components/Chat/ModelSelect.tsx","components/Chat/ChatHeader.tsx","components/Chat/ChatSender.tsx","components/Chat/ChatInput.tsx","hooks/useTokenizer.ts","components/Chat/ChatTokenCounter.tsx","components/Chat/ChatMessageContainer.tsx","components/Chat/CopyButton.tsx","hooks/useHighlight.ts","components/Chat/SyntaxHighight.tsx","components/Chat/ChatMessageContent.tsx","components/Chat/ChatMessage.tsx","components/Chat/AssistantChatMesssage.tsx","components/Chat/ScrollBottomHandlerButton.tsx","components/Chat/VirtualChatMessageList.tsx","components/Chat/UserChatMesssage.tsx","components/Chat/ChatMessages.tsx","components/Chat/CustomModelForm.tsx","components/Chat/ChatCard.tsx","components/Chat/Conversation.tsx","pages/ChatPage.tsx"],"sourcesContent":["/**\n * @generated SignedSource<<01af96ad1015582b8979fc18dce37dfe>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ChatCard_endpoint$data = {\n  readonly endpoint_id: string | null | undefined;\n  readonly url: string | null | undefined;\n  readonly \" $fragmentType\": \"ChatCard_endpoint\";\n};\nexport type ChatCard_endpoint$key = {\n  readonly \" $data\"?: ChatCard_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ChatCard_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"url\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"b1ec3869b3c8db05d40a1d2089bf4681\";\n\nexport default node;\n","/**\n * @generated SignedSource<<19e19fbef44c4c563a4ea8e861a3fc1b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs, Result } from \"relay-runtime\";\nexport type ConversationQuery$variables = {\n  endpointId: string;\n  filter?: string | null | undefined;\n  isEmptyEndpointId: boolean;\n};\nexport type ConversationQuery$data = {\n  readonly endpoint: Result<{\n    readonly endpoint_id: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n  } | null | undefined, unknown>;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n    } | null | undefined>;\n  } | null | undefined;\n};\nexport type ConversationQuery = {\n  response: ConversationQuery$data;\n  variables: ConversationQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpointId\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isEmptyEndpointId\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpointId\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv5 = [\n  (v4/*: any*/),\n  {\n    \"args\": null,\n    \"kind\": \"FragmentSpread\",\n    \"name\": \"ChatCard_endpoint\"\n  }\n],\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"limit\",\n    \"value\": 1\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"offset\",\n    \"value\": 0\n  }\n],\nv7 = [\n  (v4/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"url\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ConversationQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"CatchField\",\n        \"field\": {\n          \"alias\": null,\n          \"args\": (v3/*: any*/),\n          \"concreteType\": \"Endpoint\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"endpoint\",\n          \"plural\": false,\n          \"selections\": (v5/*: any*/),\n          \"storageKey\": null\n        },\n        \"to\": \"RESULT\"\n      },\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v5/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ConversationQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v7/*: any*/),\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v7/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"56259e350d53dc9561096bb424a1b3c7\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ConversationQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ConversationQuery(\\n  $endpointId: UUID!\\n  $isEmptyEndpointId: Boolean!\\n  $filter: String\\n) {\\n  endpoint(endpoint_id: $endpointId) @skipOnClient(if: $isEmptyEndpointId) {\\n    endpoint_id\\n    ...ChatCard_endpoint\\n    id\\n  }\\n  endpoint_list(limit: 1, offset: 0, filter: $filter) {\\n    items {\\n      endpoint_id\\n      ...ChatCard_endpoint\\n      id\\n    }\\n  }\\n}\\n\\nfragment ChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"61d8c291f586bd041b033742fd247d67\";\n\nexport default node;\n","/**\n * @generated SignedSource<<01b78d36601bdc40b4dc219e5f97b6b2>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointSelectQuery$variables = {\n  endpoint_id: string;\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n  skipEndpoint: boolean;\n};\nexport type EndpointSelectQuery$data = {\n  readonly endpoint: {\n    readonly endpoint_id: string | null | undefined;\n    readonly name: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n  } | null | undefined;\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly endpoint_id: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"ChatCard_endpoint\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointSelectQuery = {\n  response: EndpointSelectQuery$data;\n  variables: EndpointSelectQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpoint_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipEndpoint\"\n},\nv6 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv11 = {\n  \"args\": null,\n  \"kind\": \"FragmentSpread\",\n  \"name\": \"ChatCard_endpoint\"\n},\nv12 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"endpoint_id\",\n    \"variableName\": \"endpoint_id\"\n  }\n],\nv13 = [\n  (v8/*: any*/),\n  (v9/*: any*/),\n  (v10/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"id\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v3/*: any*/),\n      (v2/*: any*/),\n      (v4/*: any*/),\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v5/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointSelectQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v6/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v7/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": (v13/*: any*/),\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v12/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": (v13/*: any*/),\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3e721bc4d82b8863ef87a9a37d052d0d\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointSelectQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointSelectQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n  $endpoint_id: UUID!\\n  $skipEndpoint: Boolean!\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      url\\n      ...ChatCard_endpoint\\n      id\\n    }\\n  }\\n  endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\\n    name\\n    endpoint_id\\n    ...ChatCard_endpoint\\n    id\\n  }\\n}\\n\\nfragment ChatCard_endpoint on Endpoint {\\n  endpoint_id\\n  url\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"02cb33fa42cc8d8aa56c5ddd6542c548\";\n\nexport default node;\n","import * as fluentEmoji from '@iconify-json/fluent-emoji-flat';\nimport React from 'react';\n\nexport const FluentEmojiIcon: React.FC<{\n  name?: string;\n  height?: number;\n  width?: number;\n}> = ({ name, height, width }) => {\n  const icon = fluentEmoji.icons.icons[name ?? 'pure'];\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      height={height}\n      width={width}\n      role=\"img\"\n      dangerouslySetInnerHTML={{ __html: icon.body }}\n    />\n  );\n};\n","import { useUpdatableState } from '.';\nimport { useTanQuery } from './reactQueryAlias';\nimport { useCallback } from 'react';\n\nexport interface AIAgentMeta {\n  title: string;\n  avatar?: string;\n  background?: string;\n  descriptions?: string;\n  tags?: string[];\n}\n\nexport interface AIAgentConfig {\n  system_prompt: string;\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgentParams {\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stop?: string | string[];\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgent {\n  id: string;\n  endpoint: string;\n  endpoint_id: string;\n  config: AIAgentConfig;\n  meta: AIAgentMeta;\n  params?: AIAgentParams;\n}\n\nexport interface AIAgents {\n  agents: AIAgent[];\n}\n\nconst TIMEOUT_24_HOURS = 24 * 60 * 60 * 1000;\n\nexport const useAIAgent = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data: agentsData, isLoading } = useTanQuery<AIAgents>({\n    queryKey: ['useAgents', key],\n    queryFn: () => {\n      return fetch('resources/ai-agents.json').then((response) =>\n        response.json(),\n      );\n    },\n    staleTime: TIMEOUT_24_HOURS, // 24 hours\n  });\n\n  return {\n    agents: agentsData?.agents ?? [],\n    isLoading,\n    refresh: useCallback(() => checkUpdate(), [checkUpdate]),\n  };\n};\n","import { AIAgent } from '../../hooks/useAIAgent';\nimport Flex from '../Flex';\nimport { FluentEmojiIcon } from '../FluentEmojiIcon';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps, theme } from 'antd';\nimport React, { useState, useTransition } from 'react';\n\ninterface ChatAgentSelectProps extends Omit<SelectProps, 'options'> {\n  agents: AIAgent[];\n  selectedAgent?: AIAgent;\n}\n\nfunction makeAgentOptions(agents: AIAgent[], filter?: string) {\n  return agents\n    .map((agent) => ({\n      label: agent.meta.title,\n      value: agent.id,\n      ...agent,\n    }))\n    .filter((agent) => {\n      return agent.label.toLocaleLowerCase().includes(filter || '');\n    });\n}\n\nconst AIAgentSelect: React.FC<ChatAgentSelectProps> = ({\n  loading,\n  agents,\n  selectedAgent,\n  ...props\n}) => {\n  const { token } = theme.useToken();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<AIAgent>(props, {\n      valuePropName: 'value',\n      trigger: 'onChange',\n      defaultValue: props.value,\n    });\n\n  const [searchAgent, setSearchAgent] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  return (\n    <>\n      {selectedAgent && (\n        <Flex gap=\"xs\">\n          <FluentEmojiIcon\n            name={selectedAgent.meta.avatar}\n            height={token.sizeXL}\n            width={token.sizeXL}\n          />\n          <Select\n            showSearch\n            onSearch={(v) => {\n              startSearchTransition(() => {\n                setSearchAgent(v);\n              });\n            }}\n            filterOption={false}\n            loading={isSearchPending || loading}\n            options={makeAgentOptions(agents, searchAgent)}\n            value={controllableValue}\n            onChange={(v, agent) => {\n              setControllableValue(v, agent);\n            }}\n            popupMatchSelectWidth={false}\n          />\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default AIAgentSelect;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport {\n  EndpointSelectQuery,\n  EndpointSelectQuery$data,\n} from './__generated__/EndpointSelectQuery.graphql';\nimport { useControllableValue } from 'ahooks';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface EndpointSelectProps extends Omit<SelectProps, 'options'> {\n  fetchKey?: string;\n  lifecycleStageFilter?: LifecycleStage[];\n}\n\nexport type Endpoint = NonNullableItem<\n  EndpointSelectQuery$data['endpoint_list']\n>;\n\ntype LifecycleStage = 'created' | 'destroying' | 'destroyed';\n\nconst EndpointSelect: React.FC<EndpointSelectProps> = ({\n  fetchKey,\n  lifecycleStageFilter = ['created'],\n  loading,\n  ...selectPropsWithoutLoading\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const [controllableValue, setControllableValue] =\n    useControllableValue<string>(selectPropsWithoutLoading);\n  const [searchStr, setSearchStr] = useState<string>();\n  const [isSearchPending, startSearchTransition] = useTransition();\n\n  const lifecycleStageFilterStr = lifecycleStageFilter\n    .map((v) => `lifecycle_stage == \"${v}\"`)\n    .join(' | ');\n\n  const { endpoint_list, endpoint } = useLazyLoadQuery<EndpointSelectQuery>(\n    graphql`\n      query EndpointSelectQuery(\n        $offset: Int!\n        $limit: Int!\n        $projectID: UUID\n        $filter: String\n        $endpoint_id: UUID!\n        $skipEndpoint: Boolean!\n      ) {\n        endpoint_list(\n          offset: $offset\n          limit: $limit\n          project: $projectID\n          filter: $filter\n        ) {\n          total_count\n          items {\n            name\n            endpoint_id\n            url\n            ...ChatCard_endpoint\n          }\n        }\n        endpoint(endpoint_id: $endpoint_id) @skipOnClient(if: $skipEndpoint) {\n          name\n          endpoint_id\n          ...ChatCard_endpoint\n        }\n      }\n    `,\n    {\n      limit: 10,\n      offset: 0,\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? [lifecycleStageFilterStr, searchStr]\n            .filter(Boolean)\n            .map((v) => `(${v})`)\n            .join(' & ')\n        : undefined,\n      endpoint_id: controllableValue,\n      skipEndpoint: !controllableValue,\n    },\n    {\n      fetchKey: fetchKey,\n    },\n  );\n\n  const selectOptions = endpoint\n    ? _.map(\n        _.uniqBy(_.concat(endpoint_list?.items, endpoint), 'endpoint_id'),\n        (item) => {\n          return {\n            label: item?.name,\n            value: item?.endpoint_id,\n            endpoint: item,\n          };\n        },\n      )\n    : _.map(endpoint_list?.items, (item) => {\n        return {\n          label: item?.name,\n          value: item?.endpoint_id,\n          endpoint: item,\n        };\n      });\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectEndpoint')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      onSearch={(v) => {\n        startSearchTransition(() => {\n          setSearchStr(v && `name ilike \"%${v}%\"`);\n        });\n      }}\n      filterOption={false}\n      loading={isSearchPending || loading}\n      options={selectOptions}\n      {...selectPropsWithoutLoading}\n      // override value and onChange\n      value={controllableValue}\n      onChange={(v, option) => {\n        setControllableValue(v, _.castArray(option)?.[0].endpoint);\n      }}\n    />\n  );\n};\n\nexport default EndpointSelect;\n","import { BAIModel } from './ChatModel';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ModelSelectProps extends SelectProps {\n  models?: Array<BAIModel>;\n  allowCustomModel?: boolean;\n}\n\nconst ModelSelect: React.FC<ModelSelectProps> = ({\n  models,\n  allowCustomModel,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Select\n      placeholder={t('chatui.SelectModel')}\n      style={{\n        fontWeight: 'normal',\n      }}\n      showSearch\n      options={_.concat(\n        allowCustomModel\n          ? [\n              {\n                label: 'Custom',\n                // @ts-ignore\n                value: 'custom',\n              },\n            ]\n          : [],\n        _.chain(models)\n          .groupBy('group')\n          .mapValues((ms) =>\n            _.map(ms, (m) => ({\n              label: m.label,\n              value: m.name,\n            })),\n          )\n          .map((v, k) => ({\n            label: k === 'undefined' ? 'Others' : k,\n            options: v,\n          }))\n          .value(),\n      )}\n      popupMatchSelectWidth={false}\n      {...selectProps}\n    />\n  );\n};\n\nexport default ModelSelect;\n","import { filterEmptyItem } from '../../helper';\nimport { useWebUINavigate } from '../../hooks';\nimport { AIAgent } from '../../hooks/useAIAgent';\nimport { useBAISettingUserState } from '../../hooks/useBAISetting';\nimport Flex from '../Flex';\nimport AIAgentSelect from './AIAgentSelect';\nimport { BAIModel, ChatLifecycleEventType, ChatType } from './ChatModel';\nimport EndpointSelect from './EndpointSelect';\nimport ModelSelect from './ModelSelect';\nimport {\n  ChatCard_endpoint$data,\n  ChatCard_endpoint$key,\n} from './__generated__/ChatCard_endpoint.graphql';\nimport { Message } from '@ai-sdk/react';\nimport { CloseOutlined, MoreOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Dropdown, Button, theme, MenuProps, Typography, Switch } from 'antd';\nimport { Scale as ScaleIcon, Eraser as EraserIcon } from 'lucide-react';\nimport React, { useState, startTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface SyncSwitchProps {\n  sync: boolean;\n  onClick: (sync: boolean) => void;\n}\n\nconst SyncSwitch: React.FC<SyncSwitchProps> = ({ sync, onClick }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      {sync && (\n        <Typography.Text type=\"secondary\">\n          {t('chatui.SyncInput')}\n        </Typography.Text>\n      )}\n      <Switch checked={sync} onClick={onClick} />\n    </>\n  );\n};\n\ninterface ChatHeaderProps extends ChatLifecycleEventType {\n  chat: ChatType;\n  showCompareMenuItem?: boolean;\n  allowCustomModel?: boolean;\n  closable?: boolean;\n  models: BAIModel[];\n  modelId: string;\n  setModelId: (modelId: string) => void;\n  endpoint?: ChatCard_endpoint$data | null;\n  setEndpoint: (endpoint: ChatCard_endpoint$key) => void;\n  agents: AIAgent[];\n  agent?: AIAgent;\n  setAgent: (agent: AIAgent) => void;\n  sync: boolean;\n  setSync: (sync: boolean) => void;\n  fetchKey: string;\n  setMessages: (messages: Message[]) => void;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\n  chat,\n  showCompareMenuItem,\n  allowCustomModel,\n  closable,\n  models,\n  modelId,\n  setModelId,\n  endpoint,\n  setEndpoint,\n  agents,\n  agent,\n  setAgent,\n  sync,\n  setSync,\n  onRequestClose,\n  onCreateNewChat,\n  fetchKey,\n  setMessages,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const webuiNavigate = useWebUINavigate();\n\n  const [promisingEndpoint, setPromisingEndpoint] = useState(endpoint);\n\n  const items: MenuProps['items'] = filterEmptyItem([\n    showCompareMenuItem && {\n      key: 'compare',\n      label: t('chatui.CompareWithOtherModels'),\n      icon: <ScaleIcon />,\n      onClick: () => {\n        webuiNavigate(\n          `/serving?tab=chatting&endpointId=${endpoint?.endpoint_id}&modelId=${modelId}`,\n        );\n      },\n    },\n    showCompareMenuItem && {\n      type: 'divider',\n    },\n    {\n      key: 'clear',\n      label: t('chatui.DeleteChatHistory'),\n      icon: <EraserIcon />,\n      onClick: () => {\n        setMessages([]);\n      },\n    },\n    closable && {\n      type: 'divider',\n    },\n    closable && {\n      key: 'close',\n      danger: true,\n      label: t('chatui.DeleteChattingSession'),\n      icon: <CloseOutlined />,\n      onClick: () => {\n        onRequestClose?.(chat);\n      },\n    },\n  ]);\n\n  const [experimentalAIAgents] = useBAISettingUserState(\n    'experimental_ai_agents',\n  );\n\n  return (\n    <Flex\n      direction=\"row\"\n      justify=\"start\"\n      wrap=\"wrap\"\n      gap=\"xs\"\n      style={{\n        minHeight: '56px',\n        width: '100%',\n        paddingTop: token.paddingXS,\n        paddingBottom: token.paddingXS,\n      }}\n    >\n      <Flex\n        wrap=\"wrap\"\n        align=\"start\"\n        gap=\"xs\"\n        style={{\n          flexGrow: 1,\n          flexShrink: 1,\n          flexBasis: 'auto',\n        }}\n      >\n        {experimentalAIAgents && (\n          <AIAgentSelect\n            agents={agents}\n            selectedAgent={agent}\n            value={agent?.id}\n            onChange={(_, agent: any) => {\n              startTransition(() => {\n                setAgent(agent);\n              });\n            }}\n          />\n        )}\n        <EndpointSelect\n          fetchKey={fetchKey}\n          loading={promisingEndpoint?.endpoint_id !== endpoint?.endpoint_id}\n          onChange={(_, endpoint: any) => {\n            setPromisingEndpoint(endpoint);\n            startTransition(() => {\n              setEndpoint(endpoint);\n            });\n          }}\n          value={endpoint?.endpoint_id}\n          popupMatchSelectWidth={false}\n        />\n        <ModelSelect\n          models={models}\n          value={modelId}\n          onChange={(modelId) => {\n            startTransition(() => {\n              setModelId(modelId);\n            });\n          }}\n          allowCustomModel={allowCustomModel}\n        />\n      </Flex>\n      <Flex gap={'xs'}>\n        {closable && (\n          <SyncSwitch\n            sync={sync}\n            onClick={(checked) => {\n              startTransition(() => {\n                setSync(checked);\n              });\n            }}\n          />\n        )}\n        <Button onClick={() => onCreateNewChat?.()} icon={<PlusOutlined />} />\n        <Dropdown menu={{ items }} trigger={['click']}>\n          <Button\n            type=\"link\"\n            onClick={(e) => e.preventDefault()}\n            icon={<MoreOutlined />}\n            style={{ color: token.colorTextSecondary, width: token.sizeMS }}\n          />\n        </Dropdown>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ChatHeader;\n","import { CloudUploadOutlined, LinkOutlined } from '@ant-design/icons';\nimport {\n  Attachments,\n  AttachmentsProps,\n  Sender,\n  SenderProps,\n} from '@ant-design/x';\nimport { Attachment } from '@ant-design/x/es/attachments';\nimport { Badge, Button, GetRef, UploadProps } from 'antd';\nimport { isEmpty } from 'lodash';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChatAttachmentsProps {\n  dropContainerRef: React.RefObject<HTMLElement | null>;\n}\n\nconst ChatAttachments: React.FC<ChatAttachmentsProps & AttachmentsProps> = ({\n  items,\n  onChange,\n  dropContainerRef,\n  children,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Attachments\n      beforeUpload={() => false}\n      getDropContainer={() => dropContainerRef.current}\n      accept=\"image/*,text/*\"\n      items={items}\n      onChange={onChange}\n      placeholder={(type) =>\n        type === 'drop'\n          ? {\n              title: t('chatui.DropFileHere'),\n            }\n          : {\n              icon: <CloudUploadOutlined />,\n              title: t('chatui.UploadFiles'),\n              description: t('chatui.UploadFilesDescription'),\n            }\n      }\n    >\n      {children}\n    </Attachments>\n  );\n};\n\nexport type AttachmentChangeInfo = Parameters<\n  NonNullable<UploadProps['onChange']>\n>[0];\n\ninterface ChatSenderProps\n  extends Omit<SenderProps, 'onChange'>,\n    ChatAttachmentsProps {\n  loading?: boolean;\n  autoFocus?: boolean;\n  items?: Attachment[];\n  openAttachment?: boolean;\n  onInputChange?: (value: string) => void;\n  onInputSubmit?: () => void;\n  onInputCancel?: () => void;\n  onAttachmentChange?: (\n    attachment: 'prefix' | 'header',\n    info: AttachmentChangeInfo,\n  ) => void;\n  onAttachmentOpenChange?: (open: boolean) => void;\n}\n\nconst ChatSender: React.FC<ChatSenderProps> = ({\n  loading,\n  autoFocus,\n  items,\n  openAttachment,\n  dropContainerRef,\n  onInputChange,\n  onInputSubmit,\n  onInputCancel,\n  onAttachmentChange,\n  onAttachmentOpenChange,\n  ...senderProps\n}) => {\n  const { t } = useTranslation();\n\n  const senderRef = useRef<GetRef<typeof Sender>>(null);\n\n  useEffect(() => {\n    if (autoFocus && senderRef.current) {\n      senderRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <Sender\n      style={{ flex: 1 }}\n      ref={senderRef}\n      {...senderProps}\n      loading={loading}\n      onChange={onInputChange}\n      onSubmit={onInputSubmit}\n      onCancel={onInputCancel}\n      submitType=\"enter\"\n      header={\n        <Sender.Header\n          closable={false}\n          title={t('chatui.Attachments')}\n          open={!!openAttachment && !isEmpty(items)}\n          onOpenChange={onAttachmentOpenChange}\n          styles={{\n            content: {\n              padding: 0,\n            },\n          }}\n        >\n          <ChatAttachments\n            items={items}\n            dropContainerRef={dropContainerRef}\n            onChange={(info) => onAttachmentChange?.('header', info)}\n          />\n        </Sender.Header>\n      }\n      prefix={\n        <ChatAttachments\n          items={items}\n          dropContainerRef={dropContainerRef}\n          onChange={(info) => onAttachmentChange?.('prefix', info)}\n        >\n          <Badge dot={!isEmpty(items) && !openAttachment}>\n            <Button type=\"text\" icon={<LinkOutlined />} />\n          </Badge>\n        </ChatAttachments>\n      }\n    />\n  );\n};\n\nexport default ChatSender;\n","import { createDataTransferFiles } from '../../helper';\nimport Flex from '../Flex';\nimport ChatSender, {\n  AttachmentChangeInfo,\n  ChatAttachmentsProps,\n} from './ChatSender';\nimport { CreateMessage, Message } from '@ai-sdk/react';\nimport type { AttachmentsProps } from '@ant-design/x';\nimport { ChatRequestOptions } from 'ai';\nimport { theme } from 'antd';\nimport { atom, useAtom } from 'jotai';\nimport { isEmpty, isEqual, isUndefined } from 'lodash';\nimport React, { useCallback, useEffect, useId, useRef, useState } from 'react';\n\nconst synchronizedMessageState = atom<string>('');\nconst synchronizedAttachmentState = atom<AttachmentsProps['items']>();\nconst chatSubmitKeyInfoState = atom<{ id: string; key: string } | undefined>(\n  undefined,\n);\n\ninterface ChatRequest {\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n}\n\ninterface ChatInputProps extends ChatRequest, ChatAttachmentsProps {\n  sync: boolean;\n  input: string;\n  setInput: (input: string) => void;\n  stop: () => void;\n  append: (\n    message: Message | CreateMessage,\n    chatRequestOptions?: ChatRequestOptions,\n  ) => Promise<string | null | undefined>;\n  isStreaming: boolean;\n}\n\nconst ChatInput: React.FC<ChatInputProps> = ({\n  sync,\n  input,\n  setInput,\n  stop,\n  append,\n  isStreaming,\n  dropContainerRef,\n}) => {\n  const { token } = theme.useToken();\n\n  const ChatInputStyle = {\n    borderTop: `1px solid ${token.colorBorderSecondary}`,\n    padding: token.paddingContentVertical,\n  };\n\n  const [isOpenAttachments, setIsOpenAttachments] = useState(false);\n  const [files, setFiles] = useState<AttachmentsProps['items']>([]);\n\n  const [synchronizedMessage, setSynchronizedMessage] = useAtom(\n    synchronizedMessageState,\n  );\n\n  const [synchronizedAttachment, setSynchronizedAttachment] = useAtom(\n    synchronizedAttachmentState,\n  );\n\n  const [chatSubmitKeyInfo, setChatSubmitKeyInfo] = useAtom(\n    chatSubmitKeyInfoState,\n  );\n\n  const submitId = useId();\n  const submitKey =\n    chatSubmitKeyInfo?.id === submitId ? undefined : chatSubmitKeyInfo?.key;\n\n  const prevSyncRef = useRef(sync);\n  useEffect(() => {\n    if (prevSyncRef.current !== sync) {\n      setInput('');\n      prevSyncRef.current = sync;\n    }\n  }, [sync, setInput]);\n\n  useEffect(() => {\n    if (sync && !isUndefined(synchronizedMessage)) {\n      setInput(synchronizedMessage);\n    }\n  }, [synchronizedMessage, setInput, sync]);\n\n  const setFilesFromInputAttachment = (\n    inputAttachment: AttachmentsProps['items'],\n  ) => {\n    if (!isUndefined(inputAttachment) && !isEqual(files, inputAttachment)) {\n      setFiles(inputAttachment);\n      setIsOpenAttachments(true);\n    }\n  };\n\n  // If the `inputAttachment` prop exists, the `files` state has to follow it.\n  useEffect(() => {\n    setFilesFromInputAttachment(synchronizedAttachment);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [synchronizedAttachment]);\n\n  useEffect(() => {\n    if (!isUndefined(submitKey) && input) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitKey]);\n\n  const handleInputChange = useCallback(\n    (value: string) => {\n      setInput(value);\n      if (sync) {\n        setSynchronizedMessage(value);\n      }\n    },\n    [sync, setInput, setSynchronizedMessage],\n  );\n\n  const handleInputCancel = useCallback(() => {\n    stop();\n  }, [stop]);\n\n  const handleInputSubmit = useCallback(() => {\n    if (input || !isEmpty(files)) {\n      const chatRequestOptions: ChatRequestOptions = {};\n      if (!isEmpty(files)) {\n        chatRequestOptions.experimental_attachments =\n          createDataTransferFiles(files);\n      }\n      append(\n        {\n          role: 'user',\n          content: input,\n        },\n        chatRequestOptions,\n      );\n      setTimeout(() => {\n        setInput('');\n        setFiles([]);\n        setIsOpenAttachments(false);\n      }, 0);\n\n      setSynchronizedMessage('');\n      setSynchronizedAttachment([]);\n      if (sync) {\n        setChatSubmitKeyInfo({\n          id: submitId,\n          key: new Date().toString(),\n        });\n      }\n    }\n  }, [\n    input,\n    files,\n    append,\n    setSynchronizedMessage,\n    setSynchronizedAttachment,\n    sync,\n    setInput,\n    setChatSubmitKeyInfo,\n    submitId,\n  ]);\n\n  const handleAttachmentChange = useCallback(\n    (attachment: string, info: AttachmentChangeInfo) => {\n      const fileList = info.fileList;\n      setFiles(fileList);\n\n      if (attachment === 'prefix') {\n        setIsOpenAttachments(true);\n      }\n\n      if (sync) {\n        setSynchronizedAttachment(fileList);\n      }\n    },\n    [sync, setFiles, setIsOpenAttachments, setSynchronizedAttachment],\n  );\n\n  const handleAttachmentOpenChange = useCallback(\n    (open: boolean) => {\n      setIsOpenAttachments(open);\n    },\n    [setIsOpenAttachments],\n  );\n\n  return (\n    <>\n      <Flex style={ChatInputStyle} direction=\"column\" align=\"center\">\n        <ChatSender\n          placeholder=\"Say something...\"\n          autoFocus\n          value={input}\n          items={files}\n          openAttachment={isOpenAttachments}\n          dropContainerRef={dropContainerRef}\n          loading={isStreaming}\n          onInputChange={handleInputChange}\n          onInputSubmit={handleInputSubmit}\n          onInputCancel={handleInputCancel}\n          onAttachmentChange={handleAttachmentChange}\n          onAttachmentOpenChange={handleAttachmentOpenChange}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatInput;\n","import { startTransition, useEffect, useState } from 'react';\n\nexport const encodeAsync = async (str: string) => {\n  const { encode } = await import('gpt-tokenizer');\n\n  return encode(str).length;\n};\n\nexport const useTokenCount = (input: string = '') => {\n  const [value, setNum] = useState(0);\n\n  useEffect(() => {\n    startTransition(() => {\n      encodeAsync(input)\n        .then(setNum)\n        .catch(() => {\n          setNum(input.length);\n        });\n    });\n  }, [input]);\n\n  return value;\n};\n","import { useTokenCount } from '../../hooks/useTokenizer';\nimport Flex from '../Flex';\nimport { RocketOutlined } from '@ant-design/icons';\nimport { Message } from 'ai';\nimport { Typography } from 'antd';\nimport { Tag, theme } from 'antd';\nimport { map, last } from 'lodash';\nimport React, { useMemo } from 'react';\n\ninterface ChatTokenCounterProps {\n  input: string;\n  messages: Message[];\n  startTime: number | null;\n}\n\nconst ChatTokenCounter: React.FC<ChatTokenCounterProps> = ({\n  input,\n  messages,\n  startTime,\n}) => {\n  const { token } = theme.useToken();\n  const inputTokenCount = useTokenCount(input);\n  const allChatMessageString = useMemo(() => {\n    return map(messages, (message) => message?.content).join('');\n  }, [messages]);\n  const chatsTokenCount = useTokenCount(allChatMessageString);\n  const totalTokenCount = inputTokenCount + chatsTokenCount;\n  const lastAssistantMessageString = useMemo(() => {\n    const lastAssistantMessage = last(messages);\n    if (lastAssistantMessage?.role === 'assistant') {\n      return lastAssistantMessage?.content;\n    } else {\n      return '';\n    }\n  }, [messages]);\n\n  const lastAssistantTokenCount = useTokenCount(lastAssistantMessageString);\n  const tokenPerSecond = useMemo(() => {\n    return lastAssistantTokenCount > 0 && startTime\n      ? lastAssistantTokenCount / ((Date.now() - startTime) / 1000)\n      : 0;\n  }, [lastAssistantTokenCount, startTime]);\n\n  return (\n    <Flex justify=\"end\" align=\"end\" style={{ margin: token.marginSM }}>\n      <Tag>\n        <Flex gap={'xs'}>\n          <RocketOutlined />\n          <Flex gap={'xxs'}>\n            <Typography.Text>{tokenPerSecond.toFixed(2)}</Typography.Text>\n            <Typography.Text type=\"secondary\">tok/s</Typography.Text>\n          </Flex>\n          <Flex gap={'xxs'}>\n            <Typography.Text>{totalTokenCount}</Typography.Text>\n            <Typography.Text type=\"secondary\">total tokens</Typography.Text>\n          </Flex>\n        </Flex>\n      </Tag>\n    </Flex>\n  );\n};\n\nexport default ChatTokenCounter;\n","import Flex, { FlexProps } from '../Flex';\nimport { Avatar, theme } from 'antd';\nimport React, { memo } from 'react';\n\nexport type ChatMessagePlacement = {\n  top?: boolean;\n  left?: boolean;\n  right?: boolean;\n  bottom?: boolean;\n};\n\nexport interface ChatMessageContainerProps extends FlexProps {\n  placement?: ChatMessagePlacement;\n  containerStyle?: React.CSSProperties;\n  avatar?: React.ReactNode;\n  children?: React.ReactNode;\n}\n\nexport const ChatMessageContainer: React.FC<ChatMessageContainerProps> = memo(\n  ({ children, placement = {}, avatar, onMouseEnter, onMouseLeave }) => {\n    const { token } = theme.useToken();\n\n    return (\n      <Flex\n        direction={placement.left ? 'row' : 'row-reverse'}\n        justify={'start'}\n        align=\"baseline\"\n        style={{\n          marginLeft: placement.left ? 0 : '15%',\n          marginRight: placement.right ? 0 : 20,\n          paddingLeft: token.paddingMD,\n          paddingRight: token.paddingMD,\n          paddingTop: placement.top ? token.paddingMD : 0,\n          paddingBottom: placement.bottom ? token.paddingMD : 0,\n        }}\n        gap={'sm'}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <Avatar icon={avatar} style={{ fontSize: token.fontSizeHeading3 }} />\n        <Flex\n          direction=\"column\"\n          align={placement.left ? 'start' : 'end'}\n          wrap=\"wrap\"\n          style={{ flex: 1 }}\n          gap={'xs'}\n        >\n          {children}\n        </Flex>\n      </Flex>\n    );\n  },\n);\n\nChatMessageContainer.displayName = 'ChatMessageContainer';\n","import { Button, ButtonProps, Tooltip } from 'antd';\nimport { CopyConfig } from 'antd/es/typography/Base';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface CopyButtonProps extends ButtonProps {\n  copyable?: Omit<CopyConfig, 'text'> & { text: string };\n  defaultIcon?: React.ReactNode;\n}\nconst CopyButton: React.FC<CopyButtonProps> = ({\n  copyable,\n  defaultIcon,\n  ...props\n}) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = async () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      const timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [isCopied]);\n\n  return (\n    <Tooltip\n      title={isCopied ? 'Copied!' : 'Copy'}\n      open={isCopied ? true : undefined}\n    >\n      <CopyToClipboard text={copyable?.text || ''} onCopy={handleCopy}>\n        <Button\n          icon={\n            isCopied ? <CheckIcon /> : defaultIcon ? defaultIcon : <CopyIcon />\n          }\n          {...props}\n        />\n      </CopyToClipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyButton;\n","import { useThemeMode } from 'antd-style';\nimport { useMemo } from 'react';\nimport { codeToHtml } from 'shiki';\nimport useSWR from 'swr';\nimport { Md5 } from 'ts-md5';\n\nexport const FALLBACK_LANG = 'txt';\n\nexport const useHighlight = (text: string, lang: string) => {\n  const { isDarkMode } = useThemeMode();\n  const language = lang.toLowerCase();\n  const matchedLanguage = languageMap[language] ? language : FALLBACK_LANG;\n  const key = useMemo(() => Md5.hashStr(text), [text]);\n\n  return useSWR(\n    [matchedLanguage, isDarkMode ? 'd' : 'l', key].join('-'),\n    async () => {\n      try {\n        return codeToHtml(text, {\n          lang: matchedLanguage,\n          theme: isDarkMode ? 'github-dark' : 'github-light',\n        });\n      } catch (error) {\n        console.error('shiki Highlight error:', error);\n        return text;\n      }\n    },\n  );\n};\n\nconst languageMap: Record<string, boolean> = {\n  abap: true,\n  'actionscript-3': true,\n  ada: true,\n  apache: true,\n  apex: true,\n  apl: true,\n  applescript: true,\n  ara: true,\n  asm: true,\n  astro: true,\n  awk: true,\n  ballerina: true,\n  bat: true,\n  beancount: true,\n  berry: true,\n  bibtex: true,\n  bicep: true,\n  blade: true,\n  c: true,\n  cadence: true,\n  clarity: true,\n  clojure: true,\n  cmake: true,\n  cobol: true,\n  codeql: true,\n  coffee: true,\n  cpp: true,\n  crystal: true,\n  csharp: true,\n  css: true,\n  cue: true,\n  cypher: true,\n  d: true,\n  dart: true,\n  dax: true,\n  diff: true,\n  docker: true,\n  'dream-maker': true,\n  elixir: true,\n  elm: true,\n  erb: true,\n  erlang: true,\n  fish: true,\n  fsharp: true,\n  gdresource: true,\n  gdscript: true,\n  gdshader: true,\n  gherkin: true,\n  'git-commit': true,\n  'git-rebase': true,\n  'glimmer-js': true,\n  'glimmer-ts': true,\n  glsl: true,\n  gnuplot: true,\n  go: true,\n  graphql: true,\n  groovy: true,\n  hack: true,\n  haml: true,\n  handlebars: true,\n  haskell: true,\n  hcl: true,\n  hjson: true,\n  hlsl: true,\n  html: true,\n  http: true,\n  imba: true,\n  ini: true,\n  java: true,\n  javascript: true,\n  'jinja-html': true,\n  jison: true,\n  json: true,\n  json5: true,\n  jsonc: true,\n  jsonl: true,\n  jsonnet: true,\n  jssm: true,\n  jsx: true,\n  julia: true,\n  kotlin: true,\n  kusto: true,\n  latex: true,\n  less: true,\n  liquid: true,\n  lisp: true,\n  logo: true,\n  lua: true,\n  make: true,\n  markdown: true,\n  marko: true,\n  matlab: true,\n  mdc: true,\n  mdx: true,\n  mermaid: true,\n  mojo: true,\n  narrat: true,\n  nextflow: true,\n  nginx: true,\n  nim: true,\n  nix: true,\n  'objective-c': true,\n  'objective-cpp': true,\n  ocaml: true,\n  pascal: true,\n  perl: true,\n  php: true,\n  plsql: true,\n  postcss: true,\n  powerquery: true,\n  powershell: true,\n  prisma: true,\n  prolog: true,\n  proto: true,\n  pug: true,\n  puppet: true,\n  purescript: true,\n  python: true,\n  r: true,\n  raku: true,\n  razor: true,\n  reg: true,\n  rel: true,\n  riscv: true,\n  rst: true,\n  ruby: true,\n  rust: true,\n  sas: true,\n  sass: true,\n  scala: true,\n  scheme: true,\n  scss: true,\n  shaderlab: true,\n  shellscript: true,\n  shellsession: true,\n  smalltalk: true,\n  solidity: true,\n  sparql: true,\n  splunk: true,\n  sql: true,\n  'ssh-config': true,\n  stata: true,\n  stylus: true,\n  svelte: true,\n  swift: true,\n  'system-verilog': true,\n  tasl: true,\n  tcl: true,\n  tex: true,\n  toml: true,\n  tsx: true,\n  turtle: true,\n  twig: true,\n  typescript: true,\n  v: true,\n  vb: true,\n  verilog: true,\n  vhdl: true,\n  viml: true,\n  vue: true,\n  'vue-html': true,\n  vyper: true,\n  wasm: true,\n  wenyan: true,\n  wgsl: true,\n  wolfram: true,\n  xml: true,\n  xsl: true,\n  yaml: true,\n  zenscript: true,\n  zig: true,\n  bash: true,\n  batch: true,\n  be: true,\n  'c#': true,\n  cdc: true,\n  clj: true,\n  cmd: true,\n  console: true,\n  cql: true,\n  cs: true,\n  dockerfile: true,\n  erl: true,\n  'f#': true,\n  fs: true,\n  fsl: true,\n  gjs: true,\n  gts: true,\n  hbs: true,\n  hs: true,\n  jade: true,\n  js: true,\n  kql: true,\n  makefile: true,\n  md: true,\n  nar: true,\n  nf: true,\n  objc: true,\n  perl6: true,\n  properties: true,\n  ps: true,\n  ps1: true,\n  py: true,\n  ql: true,\n  rb: true,\n  rs: true,\n  sh: true,\n  shader: true,\n  shell: true,\n  spl: true,\n  styl: true,\n  ts: true,\n  vim: true,\n  vimscript: true,\n  vy: true,\n  yml: true,\n  zsh: true,\n  文言: true,\n};\n","import { useHighlight } from '../../hooks/useHighlight';\nimport { HTMLAttributes, memo } from 'react';\n\nexport interface SyntaxHighlighterProps extends HTMLAttributes<HTMLDivElement> {\n  children: string;\n  language: string;\n}\n\nexport const SyntaxHighlighter = memo<SyntaxHighlighterProps>(\n  ({ children, language }) => {\n    const { data, isLoading } = useHighlight(children, language);\n\n    return (\n      <>\n        {isLoading || !data ? (\n          <pre>\n            <code>{children}</code>\n          </pre>\n        ) : (\n          <div dangerouslySetInnerHTML={{ __html: data as string }} dir=\"ltr\" />\n        )}\n      </>\n    );\n  },\n);\n\nSyntaxHighlighter.displayName = 'SyntaxHighlighter';\n","import Flex from '../Flex';\nimport CopyButton from './CopyButton';\nimport { SyntaxHighlighter, SyntaxHighlighterProps } from './SyntaxHighight';\nimport { theme, Typography } from 'antd';\n// `rehype-katex` does not import the CSS file, so we need to import it manually.\nimport 'katex/dist/katex.min.css';\nimport { marked } from 'marked';\nimport React, { memo, useCallback, useMemo } from 'react';\nimport Markdown from 'react-markdown';\nimport { oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nconst { Text } = Typography;\n\nfunction parseMarkdownIntoBlocks(markdown: string): string[] {\n  const tokens = marked.lexer(markdown);\n  return tokens.map((token) => token.raw);\n}\n\nconst CodeBlock = memo<SyntaxHighlighterProps>(({ children, ...props }) => (\n  <SyntaxHighlighter {...props}>{children}</SyntaxHighlighter>\n));\n\nCodeBlock.displayName = 'CodeBlock';\n\nconst CodeHead = memo<{ lang: string; extra?: React.ReactNode }>(\n  ({ lang, extra }) => {\n    const { token } = theme.useToken();\n\n    return (\n      <Flex\n        style={{\n          margin: 0,\n          minHeight: 38,\n          padding: `0 ${token.paddingSM}px`,\n          background: 'rgba(0, 0, 0, 0.02)',\n          width: '100%',\n        }}\n      >\n        <Flex\n          style={{\n            display: 'inline-block',\n            flex: '1',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          <Text style={{ fontWeight: 'normal' }} type=\"secondary\">\n            {lang}\n          </Text>\n        </Flex>\n        <Flex>{extra}</Flex>\n      </Flex>\n    );\n  },\n);\n\nCodeHead.displayName = 'CodeHead';\n\nconst ChatMessageContentBlock = memo<{ block?: string; isStreaming?: boolean }>(\n  ({ block, isStreaming }) => {\n    const renderCode = useCallback(\n      (props: any) => {\n        const { children, className, node, ref, ...rest } = props;\n        const match = /language-(\\w+)/.exec(className || '');\n        const content = String(children ?? '').replace(/\\n$/, '');\n        const { token } = theme.useToken();\n\n        return match ? (\n          <Flex\n            direction={'column'}\n            style={{\n              border: '1px solid #f0f0f0',\n              margin: '0',\n              padding: '0',\n              borderRadius: token.borderRadiusLG,\n              overflow: 'hidden',\n            }}\n          >\n            <CodeHead\n              lang={match[1]}\n              extra={\n                <CopyButton\n                  type=\"text\"\n                  copyable={{ text: content ?? '' }}\n                  style={{\n                    display: isStreaming ? 'none' : 'block',\n                  }}\n                />\n              }\n            />\n            <Flex\n              style={{\n                width: '100%',\n                padding: token.paddingSM,\n                borderRadius: `0 0 ${token.borderRadiusLG}px ${token.borderRadiusLG}px`,\n                margin: '-0.5em 0',\n              }}\n            >\n              <CodeBlock\n                {...rest}\n                PreTag=\"div\"\n                language={match[1]}\n                style={oneLight}\n                wrapLongLines\n                wrapLines\n              >\n                {content}\n              </CodeBlock>\n            </Flex>\n          </Flex>\n        ) : (\n          <code {...rest} className={className}>\n            {/* @ts-ignore */}\n            {children}\n          </code>\n        );\n      },\n      [isStreaming],\n    );\n\n    const renderParagraph = useCallback(({ node, ...props }: any) => {\n      return <p {...props} style={{ whiteSpace: 'pre-wrap' }} />;\n    }, []);\n\n    return (\n      <Markdown\n        remarkPlugins={[remarkGfm, remarkMath]}\n        rehypePlugins={[rehypeKatex]}\n        components={{ p: renderParagraph, code: renderCode }}\n      >\n        {block}\n      </Markdown>\n    );\n  },\n);\n\nChatMessageContentBlock.displayName = 'ChatMessageContentBlock';\n\nconst ChatMessageContent: React.FC<{\n  children?: string;\n  isStreaming?: boolean;\n}> = ({ children, isStreaming }) => {\n  const blocks = useMemo(\n    () => parseMarkdownIntoBlocks(children ?? ''),\n    [children],\n  );\n\n  return blocks.map((block, index) => (\n    <ChatMessageContentBlock\n      block={block}\n      key={`block_${index}`}\n      isStreaming={isStreaming}\n    />\n  ));\n};\n\nChatMessageContent.displayName = 'ChatMessageContent';\n\nexport default memo(ChatMessageContent);\n","import Flex from '../Flex';\nimport {\n  ChatMessageContainer,\n  ChatMessagePlacement,\n} from './ChatMessageContainer';\n// ES 2015\nimport ChatMessageContent from './ChatMessageContent';\nimport { Message } from '@ai-sdk/react';\nimport { Attachments } from '@ant-design/x';\nimport { theme, Image, Collapse, Typography, Spin } from 'antd';\nimport _ from 'lodash';\nimport React, { memo } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChatMessageProps {\n  message: Message;\n  placement?: ChatMessagePlacement;\n  extra?: React.ReactNode;\n  enableExtraHover?: boolean;\n  isStreaming?: boolean;\n  avatar?: React.ReactNode;\n}\n\nconst ChatMessage: React.FC<ChatMessageProps> = ({\n  extra,\n  message,\n  placement,\n  enableExtraHover,\n  isStreaming,\n  avatar,\n}) => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const { content, reasoning } = message;\n\n  return (\n    <ChatMessageContainer\n      placement={placement}\n      avatar={avatar}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {_.map(message.experimental_attachments, (attachment, index) =>\n        _.includes(attachment?.contentType, 'image/') ? (\n          <Flex\n            style={{\n              border: 'none',\n              textAlign: 'end',\n            }}\n            align=\"end\"\n          >\n            <Image\n              key={`${message?.id}-${index}`}\n              src={attachment?.url}\n              alt={attachment?.name}\n              style={{\n                maxWidth: '50vw',\n                maxHeight: '12vh',\n                borderRadius: token.borderRadius,\n              }}\n            />\n          </Flex>\n        ) : (\n          <Attachments.FileCard\n            key={index}\n            item={{\n              uid: `${message?.id}-${index}`,\n              name: attachment?.name || attachment?.url,\n              type: attachment?.contentType,\n              description: attachment?.name,\n              url: attachment?.url,\n            }}\n          />\n        ),\n      )}\n      <Flex\n        align=\"stretch\"\n        direction=\"column\"\n        style={{\n          borderRadius: token.borderRadius,\n          borderColor: token.colorBorderSecondary,\n          borderWidth: token.lineWidth,\n          padding: '1em',\n          paddingTop: 0,\n          paddingBottom: 0,\n          backgroundColor:\n            message.role !== 'user'\n              ? token.colorBgContainer\n              : token.colorBgContainerDisabled,\n          maxWidth: '100%',\n          width: _.trim(message.reasoning) ? '100%' : 'auto',\n        }}\n      >\n        {_.trim(message.reasoning) && (\n          <Collapse\n            style={{\n              marginTop: token.margin,\n              width: '100%',\n            }}\n            items={[\n              {\n                key: 'reasoning',\n                label: _.isEmpty(content) ? (\n                  <Flex gap=\"xs\">\n                    <Typography.Text>{t('chatui.Thinking')}</Typography.Text>\n                    <Spin size=\"small\" />\n                  </Flex>\n                ) : (\n                  <Typography.Text>{t('chatui.ViewReasoning')}</Typography.Text>\n                ),\n                children: (\n                  <ChatMessageContent isStreaming={isStreaming}>\n                    {reasoning}\n                  </ChatMessageContent>\n                ),\n              },\n            ]}\n          />\n        )}\n        <ChatMessageContent isStreaming={isStreaming}>\n          {content + (isStreaming ? '\\n' : '')}\n        </ChatMessageContent>\n      </Flex>\n      <Flex\n        style={{\n          fontSize: token.fontSizeSM,\n          ...(enableExtraHover\n            ? {\n                opacity: isHovered ? 1 : 0,\n                transition: 'opacity 0.2s',\n                transitionDelay: isHovered ? '0s' : '0.2s',\n              }\n            : {}),\n        }}\n      >\n        {extra}\n      </Flex>\n    </ChatMessageContainer>\n  );\n};\n\nexport default memo(ChatMessage);\n","import ChatMessage, { ChatMessageProps } from './ChatMessage';\nimport CopyButton from './CopyButton';\nimport Compact from 'antd/es/space/Compact';\n\nexport const AssistantChatMessage: React.FC<ChatMessageProps> = ({\n  message,\n  isStreaming,\n  placement,\n}) => {\n  return (\n    <ChatMessage\n      key={message.id}\n      message={message}\n      placement={{ ...placement, left: true }}\n      isStreaming={isStreaming}\n      enableExtraHover={false}\n      extra={\n        <Compact>\n          <CopyButton\n            type=\"text\"\n            size=\"small\"\n            copyable={{\n              text: message.content,\n            }}\n            style={{\n              display: isStreaming ? 'none' : 'block',\n            }}\n          />\n        </Compact>\n      }\n      avatar={'🤖'}\n    />\n  );\n};\n","import { useEventNotStable } from '../../hooks/useEventNotStable';\nimport { Button } from 'antd';\nimport { ArrowDownIcon } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface ScrollBottomHandlerButtonProps {\n  autoScroll?: boolean;\n  atBottom?: boolean;\n  onScrollToBottom: (type: 'click' | 'auto') => void;\n}\nconst ScrollBottomHandlerButton: React.FC<ScrollBottomHandlerButtonProps> = ({\n  autoScroll,\n  atBottom,\n  ...props\n}) => {\n  const onScrollToBottom = useEventNotStable(props.onScrollToBottom);\n\n  useEffect(() => {\n    if (atBottom && autoScroll) {\n      onScrollToBottom?.('auto');\n    }\n  }, [atBottom, autoScroll, onScrollToBottom]);\n\n  return (\n    <Button\n      icon={<ArrowDownIcon />}\n      shape=\"circle\"\n      onClick={() => {\n        onScrollToBottom && onScrollToBottom('click');\n      }}\n    ></Button>\n  );\n};\n\nexport default ScrollBottomHandlerButton;\n","import Flex from '../Flex';\nimport { AssistantChatMessage } from './AssistantChatMesssage';\nimport ScrollBottomHandlerButton from './ScrollBottomHandlerButton';\nimport { UserChatMessage } from './UserChatMesssage';\nimport { Message } from '@ai-sdk/react';\nimport { theme } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\ninterface VirtualizedListProps {\n  messages: Array<Message>;\n  isStreaming?: boolean;\n}\n\nconst ChatMessageRenders = {\n  user: UserChatMessage,\n  assistant: AssistantChatMessage,\n  system: AssistantChatMessage,\n  data: AssistantChatMessage,\n};\n\nconst VirtualChatMessageList: React.FC<VirtualizedListProps> = ({\n  messages,\n  isStreaming,\n}) => {\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [atBottom, setAtBottom] = useState(true);\n  const { token } = theme.useToken();\n\n  // overscan should be 1.5 times the height of the window\n  const overscan = typeof window !== 'undefined' ? window.innerHeight * 1.5 : 0;\n\n  const itemContent = useCallback(\n    (index: number, message: Message) => {\n      const RenderChatMessage = ChatMessageRenders[message.role];\n\n      return (\n        <>\n          <RenderChatMessage\n            key={message.id}\n            message={message}\n            isStreaming={isStreaming ?? false}\n            placement={{\n              top: index === 0,\n              bottom: index === messages.length - 1,\n            }}\n          />\n        </>\n      );\n    },\n    [isStreaming, messages.length],\n  );\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ height: '100%', flex: 1 }}\n    >\n      <Virtuoso\n        atBottomStateChange={setAtBottom}\n        atBottomThreshold={60}\n        computeItemKey={(_, item) => item.id}\n        data={messages}\n        followOutput={'auto'}\n        initialTopMostItemIndex={messages?.length - 1}\n        itemContent={itemContent}\n        overscan={overscan}\n        ref={virtuosoRef}\n      />\n      <div\n        style={{\n          position: 'absolute',\n          right: '50%',\n          transform: 'translateX(+50%)',\n          bottom: token.marginSM,\n          opacity: atBottom ? 0 : 1,\n          transition: 'opacity 0.2s',\n          transitionDelay: atBottom ? '0s' : '0.2s',\n        }}\n      >\n        <ScrollBottomHandlerButton\n          atBottom={atBottom}\n          autoScroll={isStreaming}\n          onScrollToBottom={(type) => {\n            const virtuoso = virtuosoRef.current;\n            switch (type) {\n              case 'auto': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'auto',\n                  index: 'LAST',\n                });\n                break;\n              }\n              case 'click': {\n                virtuoso?.scrollToIndex({\n                  align: 'end',\n                  behavior: 'smooth',\n                  index: 'LAST',\n                });\n                break;\n              }\n            }\n          }}\n        />\n      </div>\n    </Flex>\n  );\n};\n\nexport default VirtualChatMessageList;\n","import ChatMessage from './ChatMessage';\nimport type { ChatMessagePlacement } from './ChatMessageContainer';\nimport { Message } from '@ai-sdk/react';\nimport Compact from 'antd/es/space/Compact';\n\ninterface UserChatMessageProps {\n  message: Message;\n  isStreaming: boolean;\n  placement?: ChatMessagePlacement;\n}\n\nexport const UserChatMessage: React.FC<UserChatMessageProps> = ({\n  message,\n  isStreaming,\n  placement,\n}) => {\n  return (\n    <ChatMessage\n      key={message.id}\n      message={message}\n      placement={{ ...placement, right: true }}\n      isStreaming={isStreaming}\n      enableExtraHover={true}\n      extra={<Compact>{null}</Compact>}\n      avatar={'🧑‍🦰'}\n    />\n  );\n};\n","import Flex from '../Flex';\nimport PureChatTokenCounter from './ChatTokenCounter';\nimport VirtualChatMessageList from './VirtualChatMessageList';\nimport { Message } from '@ai-sdk/react';\nimport React, { memo } from 'react';\n\nconst ChatMessageList = memo(VirtualChatMessageList);\n\nconst ChatTokenCounter = memo(PureChatTokenCounter);\n\ninterface ChatRequest {\n  headers?: Record<string, string> | Headers;\n  credentials?: RequestCredentials;\n  fetchOnClient?: boolean;\n}\n\ninterface ChatMessageProps extends ChatRequest {\n  messages: Message[];\n  input: string;\n  isStreaming: boolean;\n  startTime: number | null;\n}\n\nconst ChatMessages: React.FC<ChatMessageProps> = ({\n  messages,\n  input,\n  isStreaming,\n  startTime,\n}) => {\n  return (\n    <>\n      <ChatMessageList messages={messages} isStreaming={isStreaming} />\n      <Flex direction=\"column\" align=\"end\">\n        <ChatTokenCounter\n          messages={messages}\n          input={input}\n          startTime={startTime}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default ChatMessages;\n","import Flex from '../Flex';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport {\n  Alert,\n  Button,\n  ButtonProps,\n  Form,\n  FormInstance,\n  Input,\n  theme,\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ntype CustomModelFormProps = {\n  baseURL?: string;\n  token?: string;\n  allowCustomModel?: boolean;\n  alert?: React.ReactNode;\n  modelId?: string;\n  formRef: React.RefObject<FormInstance<any> | null>;\n};\n\nconst CustomModelForm: React.FC<CustomModelFormProps> = ({\n  baseURL,\n  token,\n  allowCustomModel,\n  alert,\n  modelId,\n  formRef,\n}) => {\n  const { token: themeToken } = theme.useToken();\n\n  return (\n    <Flex\n      direction=\"row\"\n      style={{\n        padding: themeToken.paddingSM,\n        paddingRight: themeToken.paddingContentHorizontalLG,\n        paddingLeft: themeToken.paddingContentHorizontalLG,\n        backgroundColor: themeToken.colorBgContainer,\n        // @FIXME: check the condition at the parent component\n        display: (allowCustomModel && modelId === 'custom' && 'flex') || 'none',\n      }}\n    >\n      <Form\n        ref={formRef}\n        layout=\"horizontal\"\n        size=\"small\"\n        requiredMark=\"optional\"\n        style={{ flex: 1 }}\n        key={baseURL}\n        initialValues={{\n          baseURL: baseURL,\n          token: token,\n        }}\n      >\n        {alert ? (\n          <div style={{ marginBottom: themeToken.size }}>{alert}</div>\n        ) : null}\n        <Form.Item\n          label=\"baseURL\"\n          name=\"baseURL\"\n          rules={[\n            {\n              type: 'url',\n            },\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input placeholder=\"https://domain/v1\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Model ID\"\n          name=\"modelId\"\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Input placeholder=\"llm-model\" />\n        </Form.Item>\n        <Form.Item label=\"Token\" name=\"token\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Flex>\n  );\n};\n\ntype CustomModelAlertProp = {\n  onClick?: ButtonProps['onClick'];\n};\n\nconst CustomModelAlert: React.FC<CustomModelAlertProp> = ({ onClick }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Alert\n      type=\"warning\"\n      showIcon\n      message={t('chatui.CannotFindModel')}\n      action={\n        <Button icon={<ReloadOutlined />} onClick={onClick}>\n          {t('button.Refresh')}\n        </Button>\n      }\n    />\n  );\n};\n\nexport { CustomModelForm, CustomModelAlert };\n","import { useUpdatableState } from '../../hooks';\nimport { useSuspenseTanQuery } from '../../hooks/reactQueryAlias';\nimport { AIAgent, useAIAgent } from '../../hooks/useAIAgent';\nimport PureChatHeader from './ChatHeader';\nimport PureChatInput from './ChatInput';\nimport ChatMessages from './ChatMessages';\nimport {\n  BAIModel,\n  ChatLifecycleEventType,\n  ChatProviderType,\n  ChatType,\n  Model,\n} from './ChatModel';\nimport { CustomModelAlert, CustomModelForm } from './CustomModelForm';\nimport {\n  ChatCard_endpoint$data,\n  ChatCard_endpoint$key,\n} from './__generated__/ChatCard_endpoint.graphql';\nimport { createOpenAI } from '@ai-sdk/openai';\nimport { useChat } from '@ai-sdk/react';\nimport { extractReasoningMiddleware, streamText, wrapLanguageModel } from 'ai';\nimport { Alert, Card, CardProps, FormInstance } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport { isEmpty } from 'lodash';\nimport _ from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface ChatCardProps extends CardProps, ChatLifecycleEventType {\n  chat: ChatType;\n  selectedEndpoint: ChatCard_endpoint$key | null;\n  closable?: boolean;\n  fetchOnClient?: boolean;\n}\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatCard: css`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  body: css`\n    background-color: ${token.colorFillQuaternary};\n    border-radius: 0;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    height: 50%;\n    position: relative;\n  `,\n  actions: css`\n    padding-left: ${token.paddingContentHorizontal};\n    padding-right: ${token.paddingContentHorizontal};\n  `,\n  header: css`\n    zindex: 1;\n  `,\n  alert: css`\n    margin: ${token.marginSM};\n  `,\n}));\n\nfunction useEndpoint(selectedEndpoint?: ChatCard_endpoint$key | null) {\n  const [endpointKey, setEndpoint] = useState<ChatCard_endpoint$key | null>(\n    selectedEndpoint || null,\n  );\n  const endpoint = useFragment(\n    graphql`\n      fragment ChatCard_endpoint on Endpoint {\n        endpoint_id\n        url\n      }\n    `,\n    endpointKey,\n  );\n\n  return { endpoint, setEndpoint } as const;\n}\n\nfunction useModels(\n  provider: ChatProviderType,\n  fetchKey: string,\n  endpoint?: ChatCard_endpoint$data | null,\n) {\n  const { data: modelsResult } = useSuspenseTanQuery<{\n    data: Array<Model>;\n  }>({\n    queryKey: ['models', fetchKey, endpoint?.endpoint_id],\n    queryFn: () => {\n      return endpoint?.url\n        ? fetch(\n            new URL(\n              provider.basePath + '/models',\n              endpoint?.url ?? undefined,\n            ).toString(),\n          )\n            .then((res) => res.json())\n            .catch((e) => ({ data: [] }))\n        : Promise.resolve({ data: [] });\n    },\n  });\n\n  const models = _.map(modelsResult?.data, (m) => ({\n    id: m.id,\n    name: m.id,\n  })) as BAIModel[];\n\n  const selectedModelId = useMemo(\n    () =>\n      provider.modelId &&\n      _.includes(_.map(modelsResult?.data, 'id'), provider.modelId)\n        ? provider.modelId\n        : (modelsResult?.data?.[0]?.id ?? 'custom'),\n    [modelsResult?.data, provider.modelId],\n  );\n\n  const [modelId, setModelId] = useState<string>(selectedModelId);\n\n  useEffect(() => {\n    setModelId(selectedModelId);\n  }, [selectedModelId]);\n\n  return { models, modelId, setModelId } as const;\n}\n\nfunction useAgents(provider: ChatProviderType) {\n  const { agents } = useAIAgent();\n  const [agent, setAgent] = useState<AIAgent | undefined>(undefined);\n\n  const selectedAgent = useMemo(() => {\n    return agents.find((a) => a.id === provider.agentId);\n  }, [agents, provider.agentId]);\n\n  useEffect(() => {\n    setAgent(selectedAgent);\n  }, [selectedAgent]);\n\n  return { agents, agent, setAgent } as const;\n}\n\nconst ChatHeader = React.memo(PureChatHeader, (prev, next) => {\n  if (prev.modelId !== next.modelId) return false;\n  if (prev.endpoint !== next.endpoint) return false;\n  if (prev.agent !== next.agent) return false;\n  if (prev.fetchKey !== next.fetchKey) return false;\n  if (prev.sync !== next.sync) return false;\n  if (prev.closable !== next.closable) return false;\n  return true;\n});\n\nconst ChatInput = React.memo(PureChatInput);\n\nconst ChatCard: React.FC<ChatCardProps> = ({\n  chat,\n  selectedEndpoint,\n  closable,\n  fetchOnClient,\n  onRequestClose,\n  onCreateNewChat,\n}) => {\n  const {\n    styles: { chatCard: chatCardStyle, alert: alertStyle, ...chatCardStyles },\n  } = useStyles();\n  const formRef = useRef<FormInstance>(null);\n  const dropContainerRef = useRef<HTMLDivElement>(null);\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const [startTime, setStartTime] = useState<number | null>(null);\n\n  const { endpoint, setEndpoint } = useEndpoint(selectedEndpoint);\n  const { models, modelId, setModelId } = useModels(\n    chat.provider,\n    fetchKey,\n    endpoint,\n  );\n  const { agents, agent, setAgent } = useAgents(chat.provider);\n  const [sync, setSync] = useState(chat.sync);\n\n  const baseURL = endpoint?.url\n    ? new URL(chat.provider.basePath, endpoint?.url ?? undefined).toString()\n    : undefined;\n\n  const allowCustomModel = isEmpty(models);\n  const providerSettings = {\n    baseURL: allowCustomModel\n      ? formRef.current?.getFieldValue('baseURL')\n      : baseURL,\n    modelId: allowCustomModel\n      ? formRef.current?.getFieldValue('modelId')\n      : modelId,\n    apiKey: allowCustomModel\n      ? formRef.current?.getFieldValue('token')\n      : chat.provider.apiKey,\n  };\n\n  const {\n    error,\n    messages,\n    input,\n    setInput,\n    stop,\n    status,\n    append,\n    setMessages,\n  } = useChat({\n    id: `${chat.id}-${endpoint?.endpoint_id}-${agent?.id ?? 'none'}-${modelId}`,\n    api: baseURL,\n    credentials: chat.provider.credentials,\n    body: {\n      modelId: modelId,\n    },\n    experimental_throttle: 50,\n    fetch: async (input, init) => {\n      if (fetchOnClient || modelId === 'custom') {\n        const body = JSON.parse(init?.body as string);\n        const provider = createOpenAI({\n          baseURL: providerSettings.baseURL,\n          apiKey: providerSettings.apiKey || 'dummy',\n        });\n        const result = streamText({\n          abortSignal: init?.signal || undefined,\n          model: wrapLanguageModel({\n            model: provider(providerSettings.modelId),\n            middleware: extractReasoningMiddleware({ tagName: 'think' }),\n          }),\n          messages: body?.messages,\n          system: agent ? (agent.config.system_prompt ?? '') : '',\n        });\n\n        setStartTime(Date.now());\n\n        return result.toDataStreamResponse({\n          sendReasoning: true,\n        });\n      } else {\n        return fetch(input, init);\n      }\n    },\n  });\n\n  const isStreaming = status === 'streaming' || status === 'submitted';\n  return (\n    <Card\n      variant=\"outlined\"\n      className={chatCardStyle}\n      classNames={chatCardStyles}\n      title={\n        <ChatHeader\n          chat={chat}\n          allowCustomModel={allowCustomModel}\n          models={models}\n          modelId={modelId}\n          setModelId={setModelId}\n          endpoint={endpoint}\n          setEndpoint={setEndpoint}\n          agents={agents}\n          agent={agent}\n          setAgent={setAgent}\n          sync={sync}\n          setSync={setSync}\n          fetchKey={fetchKey}\n          closable={closable}\n          onCreateNewChat={onCreateNewChat}\n          onRequestClose={onRequestClose}\n          setMessages={setMessages}\n        />\n      }\n      ref={dropContainerRef}\n    >\n      {allowCustomModel ? (\n        <CustomModelForm\n          modelId={modelId}\n          baseURL={baseURL}\n          formRef={formRef}\n          allowCustomModel={allowCustomModel}\n          alert={\n            formRef && (\n              <CustomModelAlert onClick={() => updateFetchKey(baseURL)} />\n            )\n          }\n        />\n      ) : null}\n      {!_.isEmpty(error?.message) ? (\n        <Alert\n          message={error?.message}\n          type=\"error\"\n          showIcon\n          className={alertStyle}\n          closable\n        />\n      ) : null}\n      <ChatMessages\n        messages={messages}\n        input={input}\n        isStreaming={isStreaming}\n        startTime={startTime}\n      />\n      <ChatInput\n        sync={sync}\n        input={input}\n        setInput={setInput}\n        stop={stop}\n        append={append}\n        isStreaming={isStreaming}\n        dropContainerRef={dropContainerRef}\n      />\n    </Card>\n  );\n};\n\nexport default ChatCard;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport Flex from '../Flex';\nimport ChatCard from './ChatCard';\nimport { ChatProviderType, ChatType, ConversationType } from './ChatModel';\nimport { ConversationQuery } from './__generated__/ConversationQuery.graphql';\nimport { useDynamicList } from 'ahooks';\nimport { Card, Skeleton } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport { map } from 'lodash';\nimport { Suspense, useId } from 'react';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  chatView: css`\n    overflow: auto;\n    height: calc(100vh - 240px);\n  `,\n  skeleton: css`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  `,\n  chatCard: css`\n    flex: 1;\n    overflow: 'hidden';\n  `,\n  conversation: css`\n    overflow: hidden;\n  `,\n}));\n\nexport type ConversationProps = {\n  conversation: ConversationType;\n  provider: ChatProviderType;\n};\n\nfunction useSelectedEndpoint(endpointId?: string) {\n  const baiClient = useSuspendedBackendaiClient();\n  const { endpoint, endpoint_list } = useLazyLoadQuery<ConversationQuery>(\n    graphql`\n      query ConversationQuery(\n        $endpointId: UUID!\n        $isEmptyEndpointId: Boolean!\n        $filter: String\n      ) {\n        endpoint(endpoint_id: $endpointId)\n          @skipOnClient(if: $isEmptyEndpointId)\n          @catch {\n          endpoint_id\n          ...ChatCard_endpoint\n        }\n        endpoint_list(limit: 1, offset: 0, filter: $filter) {\n          items {\n            endpoint_id\n            ...ChatCard_endpoint\n          }\n        }\n      }\n    `,\n    {\n      endpointId: endpointId || '',\n      isEmptyEndpointId: !endpointId,\n      filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n        ? 'lifecycle_stage == \"created\"'\n        : undefined,\n    },\n  );\n\n  return (endpoint.ok ? endpoint.value : endpoint_list?.items?.[0]) ?? null;\n}\n\nfunction createNewChat(\n  id: string,\n  conversationId: string,\n  provider: ChatProviderType,\n) {\n  return {\n    id,\n    conversationId,\n    label: 'Chat',\n    sync: true,\n    provider,\n  };\n}\n\nexport const Conversation: React.FC<ConversationProps> = ({\n  conversation,\n  provider,\n}) => {\n  const selectedEndpoint = useSelectedEndpoint(provider.endpointId);\n  const chat = createNewChat(useId(), conversation.id, provider);\n  const { list, remove, push } = useDynamicList<ChatType>([chat]);\n  const { styles } = useStyles();\n  return (\n    <Flex\n      className={styles.conversation}\n      direction=\"column\"\n      align=\"stretch\"\n      gap={'xs'}\n    >\n      <Flex\n        className={styles.chatView}\n        gap={'xs'}\n        direction=\"row\"\n        align=\"stretch\"\n      >\n        {map(list, (chat, index) => (\n          <Suspense\n            fallback={\n              <Card className={styles.skeleton} variant=\"outlined\">\n                <Skeleton active />\n              </Card>\n            }\n            key={index}\n          >\n            <ChatCard\n              className={styles.chatCard}\n              selectedEndpoint={selectedEndpoint}\n              chat={chat}\n              fetchOnClient\n              onRequestClose={() => remove(index)}\n              onCreateNewChat={() => {\n                push(\n                  createNewChat(\n                    list.length.toString(),\n                    conversation.id,\n                    provider,\n                  ),\n                );\n              }}\n              closable={list.length > 1}\n              key={index}\n            />\n          </Suspense>\n        ))}\n      </Flex>\n    </Flex>\n  );\n};\n","import BAICard from '../components/BAICard';\nimport {\n  ChatProviderType,\n  ConversationType,\n} from '../components/Chat/ChatModel';\nimport { Conversation } from '../components/Chat/Conversation';\nimport { t } from 'i18next';\nimport React, { useId } from 'react';\nimport { StringParam, useQueryParams } from 'use-query-params';\n\nconst ChatPageStyle = {\n  body: {\n    overflow: 'hidden',\n  },\n};\n\ntype ChatPageProps = {};\n\nconst ChatPage: React.FC<ChatPageProps> = () => {\n  const [{ endpointId, modelId, agentId }] = useQueryParams({\n    endpointId: StringParam,\n    agentId: StringParam,\n    modelId: StringParam,\n  });\n\n  const conversation: ConversationType = {\n    id: useId(),\n    label: t('webui.menu.Chat'),\n    chats: [],\n  };\n\n  const provider: ChatProviderType = {\n    basePath: 'v1',\n    agentId: agentId ?? undefined,\n    endpointId: endpointId ?? undefined,\n    modelId: modelId ?? undefined,\n  };\n\n  return (\n    <BAICard title={t('webui.menu.Chat')} styles={ChatPageStyle}>\n      <Conversation conversation={conversation} provider={provider} />\n    </BAICard>\n  );\n};\n\nexport default ChatPage;\n"],"names":["node","v0","v1","v2","v3","v4","v5","v6","v7","hash","v8","v9","v10","v11","v12","v13","FluentEmojiIcon","_ref","name","height","width","icon","fluentEmoji","icons","_jsx","xmlns","viewBox","role","dangerouslySetInnerHTML","__html","body","useAIAgent","_agentsData$agents","key","checkUpdate","useUpdatableState","data","agentsData","isLoading","useTanQuery","queryKey","queryFn","fetch","then","response","json","staleTime","agents","refresh","useCallback","makeAgentOptions","filter","map","agent","label","meta","title","value","id","toLocaleLowerCase","includes","loading","selectedAgent","props","token","theme","useToken","controllableValue","setControllableValue","useControllableValue","valuePropName","trigger","defaultValue","searchAgent","setSearchAgent","useState","isSearchPending","startSearchTransition","useTransition","_Fragment","children","_jsxs","Flex","gap","avatar","sizeXL","Select","showSearch","onSearch","v","filterOption","options","onChange","popupMatchSelectWidth","fetchKey","lifecycleStageFilter","selectPropsWithoutLoading","t","useTranslation","baiClient","useSuspendedBackendaiClient","searchStr","setSearchStr","lifecycleStageFilterStr","join","endpoint_list","endpoint","useLazyLoadQuery","_EndpointSelectQuery","require","limit","offset","supports","Boolean","undefined","endpoint_id","skipEndpoint","selectOptions","_","items","item","placeholder","style","fontWeight","option","_$castArray","models","allowCustomModel","selectProps","groupBy","mapValues","ms","m","k","SyncSwitch","sync","onClick","Typography","Text","type","Switch","checked","_ref2","chat","showCompareMenuItem","closable","modelId","setModelId","setEndpoint","setAgent","setSync","onRequestClose","onCreateNewChat","setMessages","webuiNavigate","useWebUINavigate","promisingEndpoint","setPromisingEndpoint","filterEmptyItem","ScaleIcon","EraserIcon","danger","CloseOutlined","experimentalAIAgents","useBAISettingUserState","direction","justify","wrap","minHeight","paddingTop","paddingXS","paddingBottom","align","flexGrow","flexShrink","flexBasis","AIAgentSelect","startTransition","EndpointSelect","ModelSelect","Button","PlusOutlined","Dropdown","menu","e","preventDefault","MoreOutlined","color","colorTextSecondary","sizeMS","ChatAttachments","dropContainerRef","Attachments","beforeUpload","getDropContainer","current","accept","CloudUploadOutlined","description","autoFocus","openAttachment","onInputChange","onInputSubmit","onInputCancel","onAttachmentChange","onAttachmentOpenChange","senderProps","senderRef","useRef","useEffect","focus","Sender","flex","ref","onSubmit","onCancel","submitType","header","Header","open","isEmpty","onOpenChange","styles","content","padding","info","prefix","Badge","dot","LinkOutlined","synchronizedMessageState","atom","synchronizedAttachmentState","chatSubmitKeyInfoState","input","setInput","stop","append","isStreaming","ChatInputStyle","borderTop","colorBorderSecondary","paddingContentVertical","isOpenAttachments","setIsOpenAttachments","files","setFiles","synchronizedMessage","setSynchronizedMessage","useAtom","synchronizedAttachment","setSynchronizedAttachment","chatSubmitKeyInfo","setChatSubmitKeyInfo","submitId","useId","submitKey","prevSyncRef","isUndefined","inputAttachment","isEqual","chatRequestOptions","experimental_attachments","createDataTransferFiles","handleInputChange","handleInputCancel","handleInputSubmit","setTimeout","Date","toString","handleAttachmentChange","attachment","fileList","handleAttachmentOpenChange","ChatSender","useTokenCount","arguments","length","setNum","async","encode","str","encodeAsync","catch","messages","startTime","inputTokenCount","allChatMessageString","useMemo","message","totalTokenCount","lastAssistantMessageString","lastAssistantMessage","last","lastAssistantTokenCount","tokenPerSecond","now","margin","marginSM","Tag","RocketOutlined","toFixed","ChatMessageContainer","memo","placement","onMouseEnter","onMouseLeave","left","marginLeft","marginRight","right","paddingLeft","paddingMD","paddingRight","top","bottom","Avatar","fontSize","fontSizeHeading3","displayName","copyable","defaultIcon","isCopied","setIsCopied","timeout","clearTimeout","Tooltip","CopyToClipboard","text","onCopy","CheckIcon","CopyIcon","languageMap","abap","ada","apache","apex","apl","applescript","ara","asm","astro","awk","ballerina","bat","beancount","berry","bibtex","bicep","blade","c","cadence","clarity","clojure","cmake","cobol","codeql","coffee","cpp","crystal","csharp","css","cue","cypher","d","dart","dax","diff","docker","elixir","elm","erb","erlang","fish","fsharp","gdresource","gdscript","gdshader","gherkin","glsl","gnuplot","go","graphql","groovy","hack","haml","handlebars","haskell","hcl","hjson","hlsl","html","http","imba","ini","java","javascript","jison","json5","jsonc","jsonl","jsonnet","jssm","jsx","julia","kotlin","kusto","latex","less","liquid","lisp","logo","lua","make","markdown","marko","matlab","mdc","mdx","mermaid","mojo","narrat","nextflow","nginx","nim","nix","ocaml","pascal","perl","php","plsql","postcss","powerquery","powershell","prisma","prolog","proto","pug","puppet","purescript","python","r","raku","razor","reg","rel","riscv","rst","ruby","rust","sas","sass","scala","scheme","scss","shaderlab","shellscript","shellsession","smalltalk","solidity","sparql","splunk","sql","stata","stylus","svelte","swift","tasl","tcl","tex","toml","tsx","turtle","twig","typescript","vb","verilog","vhdl","viml","vue","vyper","wasm","wenyan","wgsl","wolfram","xml","xsl","yaml","zenscript","zig","bash","batch","be","cdc","clj","cmd","console","cql","cs","dockerfile","erl","fs","fsl","gjs","gts","hbs","hs","jade","js","kql","makefile","md","nar","nf","objc","perl6","properties","ps","ps1","py","ql","rb","rs","sh","shader","shell","spl","styl","ts","vim","vimscript","vy","yml","zsh","文言","SyntaxHighlighter","language","useHighlight","lang","isDarkMode","useThemeMode","toLowerCase","matchedLanguage","Md5","hashStr","useSWR","codeToHtml","error","dir","CodeBlock","CodeHead","extra","paddingSM","background","display","overflow","whiteSpace","textOverflow","ChatMessageContentBlock","_ref3","block","renderCode","className","rest","match","exec","String","replace","border","borderRadius","borderRadiusLG","CopyButton","PreTag","oneLight","wrapLongLines","wrapLines","renderParagraph","_ref4","Markdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeKatex","components","p","code","ChatMessageContent","_ref5","parseMarkdownIntoBlocks","marked","lexer","raw","index","ChatMessage","enableExtraHover","isHovered","setIsHovered","reasoning","contentType","textAlign","Image","src","url","alt","maxWidth","maxHeight","FileCard","uid","borderColor","borderWidth","lineWidth","backgroundColor","colorBgContainer","colorBgContainerDisabled","Collapse","marginTop","Spin","size","fontSizeSM","opacity","transition","transitionDelay","AssistantChatMessage","Compact","autoScroll","atBottom","onScrollToBottom","useEventNotStable","ArrowDownIcon","shape","ChatMessageRenders","user","assistant","system","virtuosoRef","setAtBottom","overscan","window","innerHeight","itemContent","RenderChatMessage","Virtuoso","atBottomStateChange","atBottomThreshold","computeItemKey","followOutput","initialTopMostItemIndex","position","transform","ScrollBottomHandlerButton","virtuoso","scrollToIndex","behavior","ChatMessageList","VirtualChatMessageList","ChatTokenCounter","PureChatTokenCounter","CustomModelForm","baseURL","alert","formRef","themeToken","paddingContentHorizontalLG","Form","layout","requiredMark","initialValues","marginBottom","Item","rules","required","Input","CustomModelAlert","Alert","showIcon","action","ReloadOutlined","useStyles","createStyles","chatCard","colorFillQuaternary","actions","paddingContentHorizontal","ChatHeader","React","PureChatHeader","prev","next","ChatInput","PureChatInput","_endpoint$url2","_formRef$current","_formRef$current2","_formRef$current3","_agent$id","selectedEndpoint","fetchOnClient","chatCardStyle","alertStyle","chatCardStyles","updateFetchKey","setStartTime","endpointKey","useFragment","_ChatCard_endpoint","useEndpoint","provider","modelsResult","useSuspenseTanQuery","_endpoint$url","URL","basePath","res","Promise","resolve","selectedModelId","_modelsResult$data$0$","_modelsResult$data","_modelsResult$data$","useModels","find","a","agentId","useAgents","providerSettings","getFieldValue","apiKey","status","useChat","api","credentials","experimental_throttle","init","_agent$config$system_","JSON","parse","createOpenAI","result","streamText","abortSignal","signal","model","wrapLanguageModel","middleware","extractReasoningMiddleware","tagName","config","system_prompt","toDataStreamResponse","sendReasoning","Card","variant","classNames","ChatMessages","chatView","skeleton","conversation","createNewChat","conversationId","Conversation","endpointId","_endpoint_list$items","_ConversationQuery","isEmptyEndpointId","ok","useSelectedEndpoint","list","remove","push","useDynamicList","Suspense","fallback","Skeleton","active","ChatCard","ChatPageStyle","ChatPage","useQueryParams","StringParam","chats","BAICard"],"sourceRoot":""}