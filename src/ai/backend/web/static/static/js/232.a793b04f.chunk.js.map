{"version":3,"file":"static/js/232.a793b04f.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","components/CopyableCodeText.tsx","helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/EndpointStatusTag.tsx","components/ImageMetaIcon.tsx","components/ModelServiceSettingModal.tsx","components/ResourceNumber.tsx","components/__generated__/EndpointStatusTagFragment.graphql.ts","components/__generated__/ModelServiceSettingModal_endpoint.graphql.ts","components/__generated__/ServingRouteErrorModalFragment.graphql.ts","components/EndpointTokenGenerationModal.tsx","components/ServingRouteErrorModal.tsx","components/VFolderLazyView.tsx","pages/RoutingListPage.tsx","pages/__generated__/RoutingListPageQuery.graphql.ts"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","import { Typography } from 'antd';\nimport React, { PropsWithChildren } from 'react';\n\ninterface Props extends PropsWithChildren {\n  text?: string;\n}\n\nconst CopyableCodeText: React.FC<Props> = ({ text, children }) => {\n  return (\n    <Typography.Text copyable code>\n      {text || children}\n    </Typography.Text>\n  );\n};\n\nexport default CopyableCodeText;\n","function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  },\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === 'skipOnClient' &&\n      directive.argumentName === 'if'\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === 'true')\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, '');\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            '',\n          ),\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith('$') &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, 'g');\n        query = query.replace(pattern, '');\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || '',\n    variables,\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  const result =\n    //@ts-ignore\n    (await globalThis.backendaiclient\n      ?._wrapWithPromise(reqInfo, false, null, 10000, 0)\n      .catch((err: any) => {\n        // console.log(err);\n      })) || {};\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { ConfigProvider } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport localeData from 'dayjs/plugin/localeData';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport weekday from 'dayjs/plugin/weekday';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\n\ndayjs.extend(weekday);\ndayjs.extend(localeData);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (\n    path: string,\n    params?: {\n      [key in string]?: boolean | string | number;\n    },\n  ) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n    react: {\n      transSupportBasicHtmlNodes: true,\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'span', 'code', 'p'],\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // For changing locale globally, use dayjs.locale instead of dayjs().locale\n    dayjs.locale(lang);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n      // For changing locale globally, use dayjs.locale instead of dayjs().locale\n      dayjs.locale(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path, params) => {\n        dispatchEvent('moveTo', { path, params: params });\n      },\n    } as WebComponentContextType;\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return triggerNode?.parentNode || shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <StyleProvider container={shadowRoot} cache={cache}>\n                      <Suspense fallback=\"\">\n                        <BrowserRouter>\n                          <QueryParamProvider\n                            adapter={ReactRouter6Adapter}\n                            options={\n                              {\n                                // searchStringToObject: queryString.parse,\n                                // objectToSearchString: queryString.stringify,\n                              }\n                            }\n                          >\n                            <RoutingEventHandler />\n                            {children}\n                          </QueryParamProvider>\n                        </BrowserRouter>\n                      </Suspense>\n                    </StyleProvider>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import { useBackendaiImageMetaData } from '../hooks';\nimport React from 'react';\n\nconst ImageMetaIcon: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n  alt?: string | null;\n}> = ({ image, style = {} }, bordered, alt = '') => {\n  const [, { getImageIcon }] = useBackendaiImageMetaData();\n\n  return (\n    <img\n      src={getImageIcon(image)}\n      style={{\n        width: '1em',\n        height: '1em',\n        ...style,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nexport default React.memo(ImageMetaIcon);\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { ModelServiceSettingModal_endpoint$key } from './__generated__/ModelServiceSettingModal_endpoint.graphql';\nimport { Form, InputNumber, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  endpointFrgmt: ModelServiceSettingModal_endpoint$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface ServiceSettingFormInput {\n  desired_session_count: number;\n}\n\nconst ModelServiceSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  endpointFrgmt,\n  ...baiModalProps\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment ModelServiceSettingModal_endpoint on Endpoint {\n        endpoint_id\n        desired_session_count\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const mutationToUpdateService = useTanMutation({\n    mutationFn: (values: ServiceSettingFormInput) => {\n      const body = {\n        to: values.desired_session_count,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint?.endpoint_id}/scale`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToUpdateService.mutate(values, {\n          onSuccess: () => {\n            console.log('service updated');\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            console.log(error);\n            // TODO: show error message\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{\n        loading: mutationToUpdateService.isLoading,\n      }}\n      title={t('modelService.EditModelService')}\n      {...baiModalProps}\n    >\n      <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n        <Form\n          form={form}\n          preserve={false}\n          validateTrigger={['onChange', 'onBlur']}\n          initialValues={{\n            desired_session_count: endpoint?.desired_session_count,\n          }}\n          style={{ marginBottom: token.marginLG, marginTop: token.margin }}\n        >\n          <Form.Item\n            name=\"desired_session_count\"\n            label={t('modelService.DesiredSessionCount')}\n            rules={[\n              {\n                pattern: /^[0-9]+$/,\n                message: t('modelService.OnlyAllowsNonNegativeIntegers'),\n              },\n            ]}\n          >\n            <InputNumber type=\"number\" min={0} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelServiceSettingModal;\n","import { iSizeToSize } from '../helper';\nimport Flex from './Flex';\nimport { Tooltip, Typography, theme } from 'antd';\nimport React, { ReactElement } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type ResourceTypeKey =\n  | 'cpu'\n  | 'mem'\n  | 'cuda.device'\n  | 'cuda.shares'\n  | 'rocm.device'\n  | 'tpu.device'\n  | 'ipu.device'\n  | 'atom.device'\n  | 'warboy.device';\n\nexport const ACCELERATOR_UNIT_MAP: {\n  [key: string]: string;\n} = {\n  'cuda.device': 'GPU',\n  'cuda.shares': 'FGPU',\n  'rocm.device': 'GPU',\n  'tpu.device': 'TPU',\n  'ipu.device': 'IPU',\n  'atom.device': 'ATOM',\n  'warboy.device': 'Warboy',\n};\n\nexport type ResourceOpts = {\n  shmem?: number;\n};\ninterface Props {\n  type: ResourceTypeKey;\n  extra?: ReactElement;\n  opts?: ResourceOpts;\n  value: string;\n}\n\ntype ResourceTypeInfo<V> = {\n  [key in string]: V;\n};\nconst ResourceNumber: React.FC<Props> = ({\n  type,\n  value: amount,\n  extra,\n  opts,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const units: ResourceTypeInfo<string> = {\n    cpu: t('session.core'),\n    mem: 'GiB',\n    ...ACCELERATOR_UNIT_MAP,\n  };\n\n  return (\n    <Flex direction=\"row\" gap=\"xxs\">\n      <ResourceTypeIcon type={type} />\n      <Typography.Text>\n        {units[type] === 'GiB'\n          ? iSizeToSize(amount + 'b', 'g', 2).numberFixed\n          : units[type] === 'FGPU'\n          ? parseFloat(amount).toFixed(2)\n          : amount}\n      </Typography.Text>\n      <Typography.Text type=\"secondary\">{units[type]}</Typography.Text>\n      {type === 'mem' && opts?.shmem && (\n        <Typography.Text\n          type=\"secondary\"\n          style={{ fontSize: token.fontSizeSM }}\n        >\n          (SHM: {iSizeToSize(opts.shmem + 'b', 'g', 2).numberFixed}\n          GiB)\n        </Typography.Text>\n      )}\n      {extra}\n    </Flex>\n  );\n};\n\nconst MWCIconWrap: React.FC<{ size?: number; children: string }> = ({\n  size = 16,\n  children,\n}) => {\n  return (\n    // @ts-ignore\n    <mwc-icon\n      style={{\n        '--mdc-icon-size': `${size + 2}px`,\n        width: size,\n        height: size,\n      }}\n    >\n      {children}\n      {/* @ts-ignore */}\n    </mwc-icon>\n  );\n};\ninterface AccTypeIconProps\n  extends Omit<React.ImgHTMLAttributes<HTMLImageElement>, 'src'> {\n  type: ResourceTypeKey;\n  showIcon?: boolean;\n  showUnit?: boolean;\n  showTooltip?: boolean;\n  size?: number;\n}\nexport const ResourceTypeIcon: React.FC<AccTypeIconProps> = ({\n  type,\n  size = 16,\n  showIcon = true,\n  showUnit = true,\n  showTooltip = true,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const resourceTypeIconSrcMap: ResourceTypeInfo<\n    [ReactElement | string, string]\n  > = {\n    cpu: [\n      <MWCIconWrap size={size}>developer_board</MWCIconWrap>,\n      t('session.core'),\n    ],\n    mem: [<MWCIconWrap size={size}>memory</MWCIconWrap>, 'GiB'],\n    'cuda.device': ['/resources/icons/file_type_cuda.svg', 'GPU'],\n    'cuda.shares': ['/resources/icons/file_type_cuda.svg', 'FGPU'],\n    'rocm.device': ['/resources/icons/ROCm.png', 'GPU'],\n    'tpu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'TPU'],\n    'ipu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'IPU'],\n    'atom.device': ['/resources/icons/rebel.svg', 'ATOM'],\n    'warboy.device': ['/resources/icons/furiosa.svg', 'Warboy'],\n  };\n\n  return (\n    <Tooltip\n      title={\n        showTooltip ? `${type} (${resourceTypeIconSrcMap[type][1]})` : undefined\n      }\n    >\n      {typeof resourceTypeIconSrcMap[type]?.[0] === 'string' ? (\n        <img\n          {...props}\n          style={{\n            height: size,\n            ...(props.style || {}),\n          }}\n          // @ts-ignore\n          src={resourceTypeIconSrcMap[type]?.[0] || ''}\n          alt={type}\n        />\n      ) : (\n        <div style={{ width: 16, height: 16 }}>\n          {resourceTypeIconSrcMap[type]?.[0] || type}\n        </div>\n      )}\n    </Tooltip>\n  );\n};\n\nexport default ResourceNumber;\n","/**\n * @generated SignedSource<<8a960e7428e05bcb25f322a53888680e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null;\n  readonly status: string | null;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7fb89480050795760143361e3c0e5086>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelServiceSettingModal_endpoint$data = {\n  readonly desired_session_count: number | null;\n  readonly endpoint_id: string | null;\n  readonly \" $fragmentType\": \"ModelServiceSettingModal_endpoint\";\n};\nexport type ModelServiceSettingModal_endpoint$key = {\n  readonly \" $data\"?: ModelServiceSettingModal_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelServiceSettingModal_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"desired_session_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"881f18324b27eba6ff0fcfb83ae241d2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2765a0a6761af55c92add25ee221fd78>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingRouteErrorModalFragment$data = {\n  readonly errors: ReadonlyArray<{\n    readonly repr: string;\n  }>;\n  readonly session_id: string;\n  readonly \" $fragmentType\": \"ServingRouteErrorModalFragment\";\n};\nexport type ServingRouteErrorModalFragment$key = {\n  readonly \" $data\"?: ServingRouteErrorModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ServingRouteErrorModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ServingRouteErrorModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"InferenceSessionErrorInfo\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"errors\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"repr\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"InferenceSessionError\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a1003e0f75387e665f4407909eea5ff6\";\n\nexport default node;\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { Alert, DatePicker, Form, message } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// import { graphql, useFragment } from \"react-relay\";\n\ninterface EndpointTokenGenerationModalProps\n  extends Omit<BAIModalProps, 'onOK' | 'onClose'> {\n  endpoint_id: string;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface EndpointTokenGenerationInput {\n  valid_until?: number; // Unix epoch time\n}\n\nconst EndpointTokenGenerationModal: React.FC<\n  EndpointTokenGenerationModalProps\n> = ({ onRequestClose, onCancel, endpoint_id, ...baiModalProps }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const [form] = Form.useForm();\n\n  const mutationToGenerateToken = useTanMutation<\n    unknown,\n    {\n      message?: string;\n    },\n    EndpointTokenGenerationInput\n  >({\n    mutationFn: (values) => {\n      const body = {\n        valid_until: values.valid_until,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint_id}/token`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      const validUntil = values.datetime.unix();\n      mutationToGenerateToken.mutate(\n        {\n          valid_until: validUntil,\n        },\n        {\n          onSuccess: () => {\n            message.success(t('modelService.TokenGenerated'));\n            onRequestClose(true);\n          },\n          onError: (err) => {\n            if (err?.message?.includes('valid_until is older than now')) {\n              message.error(t('modelService.TokenExpiredDateError'));\n              return;\n            } else {\n              message.error(t('modelService.TokenGenerationFailed'));\n              console.log(err);\n            }\n          },\n        },\n      );\n    });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      {...baiModalProps}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okText={t('modelService.Generate')}\n      confirmLoading={mutationToGenerateToken.isLoading}\n      centered\n      title={t('modelService.GenerateNewToken')}\n    >\n      <Form\n        preserve={false}\n        labelCol={{ span: 10 }}\n        initialValues={{\n          datetime: dayjs().add(24, 'hour'),\n        }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ maxWidth: 500 }}\n        form={form}\n      >\n        <Flex direction=\"column\" gap=\"sm\" align=\"stretch\">\n          <Alert\n            type=\"info\"\n            showIcon\n            message={t('modelService.TokenExpiredDateHelp')}\n          />\n          <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n            <Form.Item\n              name=\"datetime\"\n              label={t('modelService.ExpiredDate')}\n              rules={[\n                {\n                  type: 'object' as const,\n                  required: true,\n                  message: t('modelService.PleaseSelectTime'),\n                },\n                () => ({\n                  validator(_, value) {\n                    if (value.isAfter(dayjs())) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(t('modelService.TokenExpiredDateError')),\n                    );\n                  },\n                }),\n              ]}\n            >\n              <DatePicker\n                showTime\n                format=\"YYYY-MM-DD HH:mm:ss\"\n                style={{ width: 200 }}\n              />\n            </Form.Item>\n          </Flex>\n        </Flex>\n        {/* <Flex direction=\"row\" align=\"stretch\" justify=\"end\">\n          <Tag style={{height: 30}}>{t('modelService.CurrentTime')}</Tag>\n          <TimeContainer></TimeContainer>\n        </Flex> */}\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default EndpointTokenGenerationModal;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport CopyableCodeText from './CopyableCodeText';\nimport { ServingRouteErrorModalFragment$key } from './__generated__/ServingRouteErrorModalFragment.graphql';\nimport { Descriptions, DescriptionsProps, Button } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends Omit<BAIModalProps, 'onOk' | 'onClose'> {\n  inferenceSessionErrorFrgmt: ServingRouteErrorModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst ServingRouteErrorModal: React.FC<Props> = ({\n  onRequestClose,\n  onCancel,\n  inferenceSessionErrorFrgmt,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n\n  const iSessionError = useFragment(\n    graphql`\n      fragment ServingRouteErrorModalFragment on InferenceSessionError {\n        session_id\n        errors {\n          repr\n        }\n      }\n    `,\n    inferenceSessionErrorFrgmt,\n  );\n\n  // const { errors } = endpoint\n  // const targetSession = errors.filter(({ session_id }) => session === session_id)\n  // if (targetSession.length > 0) {\n  //   // setErrorJSONModalSessionID(session)\n  //   // setErrorJSONModalError(targetSession[0].errors[0].repr)\n  //   // setShowErrorJSONModal(true)\n  // }\n\n  const columnSetting: DescriptionsProps['column'] = {\n    xxl: 1,\n    xl: 1,\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <BAIModal\n      centered\n      title={t('modelService.ServingRouteErrorModalTitle')}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      footer={[\n        <Button\n          onClick={() => {\n            onRequestClose();\n          }}\n        >\n          {t('button.Close')}\n        </Button>,\n      ]}\n      {...baiModalProps}\n    >\n      <Descriptions\n        bordered\n        column={columnSetting}\n        labelStyle={{ minWidth: 100 }}\n        style={{ marginTop: 20 }}\n      >\n        <Descriptions.Item label={t('modelService.SessionId')}>\n          <CopyableCodeText>{iSessionError?.session_id}</CopyableCodeText>\n        </Descriptions.Item>\n        <Descriptions.Item label={t('dialog.error.Error')}>\n          {iSessionError?.errors[0].repr}\n        </Descriptions.Item>\n      </Descriptions>\n    </BAIModal>\n  );\n};\n\nexport default ServingRouteErrorModal;\n","import { useBaiSignedRequestWithPromise } from '../helper';\nimport { useCurrentProjectValue } from '../hooks';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport { VFolder } from './VFolderSelect';\nimport { FolderOutlined } from '@ant-design/icons';\nimport { Typography } from 'antd';\nimport React from 'react';\n\ninterface VFolderLazyViewProps {\n  uuid: string;\n  clickable?: boolean;\n}\nconst VFolderLazyView: React.FC<VFolderLazyViewProps> = ({\n  uuid,\n  clickable,\n}) => {\n  const currentProject = useCurrentProjectValue();\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n\n  const { moveTo } = useWebComponentInfo();\n  const { data: vFolders } = useTanQuery({\n    queryKey: ['VFolderSelectQuery'],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: 'GET',\n        url: `/folders?group_id=${currentProject.id}`,\n      }) as Promise<VFolder[]>;\n    },\n    staleTime: 1000,\n    suspense: true,\n  });\n  const vFolder = vFolders?.find(\n    // `id` of `/folders` API is not UUID, but UUID without `-`\n    (vFolder) => vFolder.id === uuid.replaceAll('-', ''),\n  );\n  return (\n    vFolder &&\n    (clickable ? (\n      <Typography.Link\n        onClick={() => {\n          moveTo('/data', { folder: vFolder.name });\n        }}\n      >\n        <FolderOutlined /> {vFolder.name}\n      </Typography.Link>\n    ) : (\n      <div>\n        <FolderOutlined /> {vFolder.name}\n      </div>\n    ))\n  );\n};\n\nexport default VFolderLazyView;\n","import CopyableCodeText from '../components/CopyableCodeText';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport EndpointTokenGenerationModal from '../components/EndpointTokenGenerationModal';\nimport Flex from '../components/Flex';\nimport ImageMetaIcon from '../components/ImageMetaIcon';\nimport ModelServiceSettingModal from '../components/ModelServiceSettingModal';\nimport ResourceNumber, { ResourceTypeKey } from '../components/ResourceNumber';\nimport ServingRouteErrorModal from '../components/ServingRouteErrorModal';\nimport VFolderLazyView from '../components/VFolderLazyView';\nimport { ServingRouteErrorModalFragment$key } from '../components/__generated__/ServingRouteErrorModalFragment.graphql';\nimport { baiSignedRequestWithPromise, filterNonNullItems } from '../helper';\nimport { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport {\n  RoutingListPageQuery,\n  RoutingListPageQuery$data,\n} from './__generated__/RoutingListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n  QuestionCircleOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n  WarningOutlined,\n} from '@ant-design/icons';\nimport {\n  Breadcrumb,\n  Button,\n  Card,\n  Descriptions,\n  Popover,\n  Spin,\n  Table,\n  Tag,\n  Tooltip,\n  Typography,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, { Suspense, useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { useNavigate, useParams } from 'react-router-dom';\n\ninterface RoutingInfo {\n  route_id: string;\n  session_id: string;\n  traffic_ratio: number;\n}\nexport interface ModelServiceInfo {\n  endpoint_id: string;\n  name: string;\n  desired_session_count: number;\n  active_routes: RoutingInfo[];\n  service_endpoint: string;\n  is_public: boolean;\n}\n\n// TODO: display all of routings when API/GQL supports\n// type RoutingStatus = \"HEALTHY\" | \"PROVISIONING\" | \"UNHEALTHY\";\n\ninterface RoutingListPageProps {}\n\ntype EndPoint = NonNullable<RoutingListPageQuery$data['endpoint']>;\ntype Routing = NonNullable<NonNullable<EndPoint['routings']>[0]>;\n\nconst dayDiff = (a: any, b: any) => {\n  const date1 = dayjs(a.created_at);\n  const date2 = dayjs(b.created_at);\n  return date1.diff(date2);\n};\n\nconst RoutingListPage: React.FC<RoutingListPageProps> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const navigate = useNavigate();\n  const { serviceId } = useParams<{\n    serviceId: string;\n  }>();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const [isPendingRefetch, startRefetchTransition] = useTransition();\n  const [isPendingClearError, startClearErrorTransition] = useTransition();\n  const [selectedSessionErrorForModal, setSelectedSessionErrorForModal] =\n    useState<ServingRouteErrorModalFragment$key | null>(null);\n  const [isOpenModelServiceSettingModal, setIsOpenModelServiceSettingModal] =\n    useState(false);\n  const [isOpenTokenGenerationModal, setIsOpenTokenGenerationModal] =\n    useState(false);\n  // const curProject = useCurrentProjectValue();\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n  const { endpoint, endpoint_token_list } =\n    useLazyLoadQuery<RoutingListPageQuery>(\n      graphql`\n        query RoutingListPageQuery(\n          $endpointId: UUID!\n          $tokenListOffset: Int!\n          $tokenListLimit: Int!\n        ) {\n          endpoint(endpoint_id: $endpointId) {\n            name\n            endpoint_id\n            image\n            desired_session_count\n            url\n            open_to_public\n            errors {\n              session_id\n              ...ServingRouteErrorModalFragment\n            }\n            retries\n            model\n            model_mount_destiation\n            resource_group\n            resource_slots\n            resource_opts\n            routings {\n              routing_id\n              session\n              traffic_ratio\n              endpoint\n              status\n            }\n            ...EndpointStatusTagFragment\n            ...ModelServiceSettingModal_endpoint\n          }\n          endpoint_token_list(\n            offset: $tokenListOffset\n            limit: $tokenListLimit\n            endpoint_id: $endpointId\n          ) {\n            total_count\n            items {\n              id\n              token\n              endpoint_id\n              domain\n              project\n              session_owner\n              created_at\n              valid_until\n            }\n          }\n        }\n      `,\n      {\n        tokenListOffset:\n          (paginationState.current - 1) * paginationState.pageSize,\n        tokenListLimit: paginationState.pageSize,\n        endpointId: serviceId || '',\n      },\n      {\n        fetchPolicy:\n          fetchKey === 'initial-fetch' ? 'store-and-network' : 'network-only',\n        fetchKey,\n      },\n    );\n  const mutationToClearError = useTanMutation(() => {\n    if (!endpoint) return;\n    return baiSignedRequestWithPromise({\n      method: 'POST',\n      url: `/services/${endpoint.endpoint_id}/errors/clear`,\n      client: baiClient,\n    });\n  });\n  const openSessionErrorModal = (session: string) => {\n    if (endpoint === null) return;\n    const { errors } = endpoint;\n    const firstMatchedSessionError = errors.find(\n      ({ session_id }) => session === session_id,\n    );\n    setSelectedSessionErrorForModal(firstMatchedSessionError || null);\n  };\n  // const { t } = useTranslation();\n\n  // return color of tag by status\n  const applyStatusColor = (status: string = '') => {\n    let color = 'default';\n    switch (status.toUpperCase()) {\n      case 'HEALTHY':\n        color = 'success';\n        break;\n      case 'PROVISIONING':\n        color = 'processing';\n        break;\n      case 'UNHEALTHY':\n        color = 'warning';\n        break;\n    }\n    return color;\n  };\n\n  const resource_opts = JSON.parse(endpoint?.resource_opts || '{}');\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM }}\n      gap=\"sm\"\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: t('modelService.Services'),\n            onClick: (e) => {\n              e.preventDefault();\n              navigate('/serving');\n            },\n            href: '/serving',\n          },\n          {\n            title: t('modelService.RoutingInfo'),\n          },\n        ]}\n      />\n      <Flex direction=\"row\" justify=\"between\">\n        <Typography.Title level={3} style={{ margin: 0 }}>\n          {endpoint?.name || ''}\n        </Typography.Title>\n        <Flex gap={'xxs'}>\n          {(endpoint?.retries || 0) > 0 ? (\n            <Tooltip title={t('modelService.ClearErrors')}>\n              <Button\n                loading={isPendingClearError}\n                icon={<WarningOutlined />}\n                onClick={() => {\n                  startClearErrorTransition(() => {\n                    mutationToClearError.mutate(undefined, {\n                      onSuccess: () =>\n                        startRefetchTransition(() => {\n                          updateFetchKey();\n                        }),\n                    });\n                  });\n                }}\n              />\n            </Tooltip>\n          ) : (\n            <></>\n          )}\n          <Button\n            loading={isPendingRefetch}\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startRefetchTransition(() => {\n                updateFetchKey();\n              });\n            }}\n          >\n            {t('button.Refresh')}\n          </Button>\n        </Flex>\n      </Flex>\n      <Card\n        title={t('modelService.ServiceInfo')}\n        extra={\n          <Button\n            type=\"primary\"\n            icon={<SettingOutlined />}\n            disabled={(endpoint?.desired_session_count || 0) < 0}\n            onClick={() => {\n              setIsOpenModelServiceSettingModal(true);\n            }}\n          >\n            {t('button.Edit')}\n          </Button>\n        }\n      >\n        <Descriptions\n          bordered\n          column={{ xxl: 3, xl: 3, lg: 2, md: 1, sm: 1, xs: 1 }}\n          style={{\n            backgroundColor: token.colorBgBase,\n          }}\n          items={[\n            {\n              label: t('modelService.EndpointName'),\n              children: (\n                <Typography.Text copyable>{endpoint?.name}</Typography.Text>\n              ),\n            },\n            {\n              label: t('modelService.Status'),\n              children: <EndpointStatusTag endpointFrgmt={endpoint} />,\n            },\n            {\n              label: t('modelService.EndpointId'),\n              children: endpoint?.endpoint_id,\n            },\n            {\n              label: t('modelService.SessionOwner'),\n              children: baiClient.email || '',\n            },\n            {\n              label: t('modelService.DesiredSessionCount'),\n              children: endpoint?.desired_session_count,\n            },\n            {\n              label: t('modelService.ServiceEndpoint'),\n              children: endpoint?.url ? (\n                <Typography.Text copyable>{endpoint?.url}</Typography.Text>\n              ) : (\n                <Tag>{t('modelService.NoServiceEndpoint')}</Tag>\n              ),\n            },\n            {\n              label: t('modelService.OpenToPublic'),\n              children: endpoint?.open_to_public ? (\n                <CheckOutlined />\n              ) : (\n                <CloseOutlined />\n              ),\n            },\n            {\n              label: t('modelService.resources'),\n              children: (\n                <Flex direction=\"row\" wrap=\"wrap\" gap={'md'}>\n                  <Tooltip title={t('session.ResourceGroup')}>\n                    <Tag>{endpoint?.resource_group}</Tag>\n                  </Tooltip>\n                  {_.map(\n                    JSON.parse(endpoint?.resource_slots || '{}'),\n                    (value: string, type: ResourceTypeKey) => {\n                      return (\n                        <ResourceNumber\n                          key={type}\n                          type={type}\n                          value={value}\n                          opts={resource_opts}\n                        />\n                      );\n                    },\n                  )}\n                </Flex>\n              ),\n              span: {\n                xl: 2,\n              },\n            },\n            {\n              label: t('session.launcher.ModelStorage'),\n              children: (\n                <Suspense\n                  fallback={<Spin indicator={<LoadingOutlined spin />} />}\n                >\n                  {endpoint?.model && (\n                    <VFolderLazyView uuid={endpoint?.model} clickable={false} />\n                  )}\n                </Suspense>\n              ),\n            },\n            {\n              label: t('modelService.Image'),\n              children: endpoint?.image && (\n                <Flex direction=\"row\" gap={'xs'}>\n                  <ImageMetaIcon image={endpoint.image} />\n                  <CopyableCodeText>{endpoint.image}</CopyableCodeText>\n                </Flex>\n              ),\n              span: {\n                xl: 2,\n              },\n            },\n          ]}\n        ></Descriptions>\n      </Card>\n      <Card\n        title={t('modelService.GeneratedTokens')}\n        extra={\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              setIsOpenTokenGenerationModal(true);\n            }}\n          >\n            {t('modelService.GenerateToken')}\n          </Button>\n        }\n      >\n        <Table\n          scroll={{ x: 'max-content' }}\n          rowKey={'token'}\n          columns={[\n            {\n              title: '#',\n              fixed: 'left',\n              render: (id, record, index) => {\n                ++index;\n                return index;\n              },\n              showSorterTooltip: false,\n            },\n            {\n              title: 'Token',\n              dataIndex: 'token',\n              fixed: 'left',\n              render: (text, row) => (\n                <Typography.Text ellipsis copyable style={{ width: 150 }}>\n                  {row.token}\n                </Typography.Text>\n              ),\n            },\n            {\n              title: 'Status',\n              render: (text, row) => {\n                const isExpired = dayjs.utc(row.valid_until).isBefore();\n                return (\n                  <Tag color={isExpired ? 'red' : 'green'}>\n                    {isExpired ? 'Expired' : 'Valid'}\n                  </Tag>\n                );\n              },\n            },\n            {\n              title: 'Valid Until',\n              dataIndex: 'valid_until',\n              render: (text, row) => (\n                <span>\n                  {\n                    // FIXME: temporally parse UTC and change to timezone (timezone need to be added in server side)\n                    row.valid_until\n                      ? dayjs.utc(row.valid_until).tz().format('ll LTS')\n                      : '-'\n                  }\n                </span>\n              ),\n              defaultSortOrder: 'descend',\n              sortDirections: ['descend', 'ascend', 'descend'],\n              sorter: dayDiff,\n            },\n            {\n              title: 'Created at',\n              dataIndex: 'created_at',\n              render: (text, row) => (\n                <span>{dayjs(row.created_at).format('ll LT')}</span>\n              ),\n              defaultSortOrder: 'descend',\n              sortDirections: ['descend', 'ascend', 'descend'],\n              sorter: dayDiff,\n            },\n          ]}\n          pagination={false}\n          dataSource={filterNonNullItems(endpoint_token_list?.items)}\n          bordered\n        ></Table>\n      </Card>\n      <Card title={t('modelService.RoutesInfo')}>\n        <Table\n          scroll={{ x: 'max-content' }}\n          columns={[\n            {\n              title: t('modelService.RouteId'),\n              dataIndex: 'routing_id',\n              fixed: 'left',\n            },\n            {\n              title: t('modelService.SessionId'),\n              dataIndex: 'session',\n            },\n            {\n              title: t('modelService.Status'),\n              render: (_, { session, status }) =>\n                status && (\n                  <>\n                    <Tag\n                      color={applyStatusColor(status)}\n                      key={status}\n                      style={{ marginRight: 0 }}\n                    >\n                      {status.toUpperCase()}\n                    </Tag>\n                    {status === 'FAILED_TO_START' && (\n                      <Popover>\n                        <Button\n                          size=\"small\"\n                          type=\"text\"\n                          icon={<QuestionCircleOutlined />}\n                          style={{ color: token.colorTextSecondary }}\n                          onClick={() =>\n                            session && openSessionErrorModal(session)\n                          }\n                        />\n                      </Popover>\n                    )}\n                  </>\n                ),\n            },\n            {\n              title: t('modelService.TrafficRatio'),\n              dataIndex: 'traffic_ratio',\n            },\n          ]}\n          pagination={false}\n          dataSource={endpoint?.routings as Routing[]}\n          rowKey={'routing_id'}\n          bordered\n        />\n      </Card>\n      <ServingRouteErrorModal\n        open={!!selectedSessionErrorForModal}\n        inferenceSessionErrorFrgmt={selectedSessionErrorForModal}\n        onRequestClose={() => setSelectedSessionErrorForModal(null)}\n      />\n      <ModelServiceSettingModal\n        open={isOpenModelServiceSettingModal}\n        onRequestClose={(success) => {\n          setIsOpenModelServiceSettingModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateFetchKey();\n            });\n          }\n        }}\n        endpointFrgmt={endpoint}\n      />\n      <EndpointTokenGenerationModal\n        open={isOpenTokenGenerationModal}\n        onRequestClose={(success) => {\n          setIsOpenTokenGenerationModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateFetchKey();\n            });\n          }\n        }}\n        endpoint_id={endpoint?.endpoint_id || ''}\n      ></EndpointTokenGenerationModal>\n    </Flex>\n  );\n};\n\nexport default RoutingListPage;\n","/**\n * @generated SignedSource<<6fada214f0ffa7a8667c8c774421cb7f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type RoutingListPageQuery$variables = {\n  endpointId: string;\n  tokenListLimit: number;\n  tokenListOffset: number;\n};\nexport type RoutingListPageQuery$data = {\n  readonly endpoint: {\n    readonly desired_session_count: number | null;\n    readonly endpoint_id: string | null;\n    readonly errors: ReadonlyArray<{\n      readonly session_id: string;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"ServingRouteErrorModalFragment\">;\n    }>;\n    readonly image: string | null;\n    readonly model: string | null;\n    readonly model_mount_destiation: string | null;\n    readonly name: string | null;\n    readonly open_to_public: boolean | null;\n    readonly resource_group: string | null;\n    readonly resource_opts: any | null;\n    readonly resource_slots: any | null;\n    readonly retries: number | null;\n    readonly routings: ReadonlyArray<{\n      readonly endpoint: string | null;\n      readonly routing_id: string | null;\n      readonly session: string | null;\n      readonly status: string | null;\n      readonly traffic_ratio: number | null;\n    } | null> | null;\n    readonly url: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\" | \"ModelServiceSettingModal_endpoint\">;\n  } | null;\n  readonly endpoint_token_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly domain: string;\n      readonly endpoint_id: string;\n      readonly id: string | null;\n      readonly project: string;\n      readonly session_owner: string;\n      readonly token: string;\n      readonly valid_until: string | null;\n    } | null>;\n    readonly total_count: number;\n  } | null;\n};\nexport type RoutingListPageQuery = {\n  response: RoutingListPageQuery$data;\n  variables: RoutingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpointId\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"tokenListLimit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"tokenListOffset\"\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"endpoint_id\",\n  \"variableName\": \"endpointId\"\n},\nv4 = [\n  (v3/*: any*/)\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session_id\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"retries\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model_mount_destiation\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_opts\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": [\n    (v3/*: any*/),\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"limit\",\n      \"variableName\": \"tokenListLimit\"\n    },\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"offset\",\n      \"variableName\": \"tokenListOffset\"\n    }\n  ],\n  \"concreteType\": \"EndpointTokenList\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"endpoint_token_list\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"total_count\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"EndpointToken\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"items\",\n      \"plural\": true,\n      \"selections\": [\n        (v23/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"token\",\n          \"storageKey\": null\n        },\n        (v6/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"domain\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"project\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"session_owner\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"created_at\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"valid_until\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RoutingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"InferenceSessionError\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"errors\",\n            \"plural\": true,\n            \"selections\": [\n              (v11/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ServingRouteErrorModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v15/*: any*/),\n          (v16/*: any*/),\n          (v17/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Routing\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"routings\",\n            \"plural\": true,\n            \"selections\": [\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/),\n              (v21/*: any*/),\n              (v22/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"EndpointStatusTagFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ModelServiceSettingModal_endpoint\"\n          }\n        ],\n        \"storageKey\": null\n      },\n      (v24/*: any*/)\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"RoutingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"InferenceSessionError\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"errors\",\n            \"plural\": true,\n            \"selections\": [\n              (v11/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"InferenceSessionErrorInfo\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"errors\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"repr\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v15/*: any*/),\n          (v16/*: any*/),\n          (v17/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Routing\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"routings\",\n            \"plural\": true,\n            \"selections\": [\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/),\n              (v21/*: any*/),\n              (v22/*: any*/),\n              (v23/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v23/*: any*/),\n          (v22/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      (v24/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"dcb559f96ebdb88ea48eb267aae5adf8\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RoutingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RoutingListPageQuery(\\n  $endpointId: UUID!\\n  $tokenListOffset: Int!\\n  $tokenListLimit: Int!\\n) {\\n  endpoint(endpoint_id: $endpointId) {\\n    name\\n    endpoint_id\\n    image\\n    desired_session_count\\n    url\\n    open_to_public\\n    errors {\\n      session_id\\n      ...ServingRouteErrorModalFragment\\n    }\\n    retries\\n    model\\n    model_mount_destiation\\n    resource_group\\n    resource_slots\\n    resource_opts\\n    routings {\\n      routing_id\\n      session\\n      traffic_ratio\\n      endpoint\\n      status\\n      id\\n    }\\n    ...EndpointStatusTagFragment\\n    ...ModelServiceSettingModal_endpoint\\n    id\\n  }\\n  endpoint_token_list(offset: $tokenListOffset, limit: $tokenListLimit, endpoint_id: $endpointId) {\\n    total_count\\n    items {\\n      id\\n      token\\n      endpoint_id\\n      domain\\n      project\\n      session_owner\\n      created_at\\n      valid_until\\n    }\\n  }\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\\nfragment ModelServiceSettingModal_endpoint on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n}\\n\\nfragment ServingRouteErrorModalFragment on InferenceSessionError {\\n  session_id\\n  errors {\\n    repr\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"4c9244fddb4b985f78d843419d34f832\";\n\nexport default node;\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","text","Typography","Text","copyable","code","removeSkipOnClientDirective","query","variables","filteredVariables","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","catch","err","t0","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","dayjs","weekday","localeData","localizedFormat","relativeTime","utc","timezone","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","react","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","document","addEventListener","removeEventListener","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","params","RelayEnvironmentProvider","environment","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","StyleProvider","container","Suspense","fallback","BrowserRouter","QueryParamProvider","adapter","ReactRouter6Adapter","options","_endpoint$status","endpointFrgmt","endpoint","useFragment","_EndpointStatusTagFragment","require","color","status","toUpperCase","Tag","ImageMetaIcon","bordered","image","_ref$style","style","alt","undefined","_useBackendaiImageMet","useBackendaiImageMetaData","getImageIcon","src","width","height","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","token","useToken","baiClient","useSuspendedBackendaiClient","t","_Form$useForm","Form","useForm","form","_ModelServiceSettingModal_endpoint","mutationToUpdateService","useTanMutation","mutationFn","values","body","to","desired_session_count","baiSignedRequestWithPromise","method","url","endpoint_id","BAIModal","zIndex","destroyOnClose","onOk","validateFields","then","mutate","onSuccess","console","log","onError","error","onCancel","okButtonProps","loading","isLoading","title","Flex","direction","align","justify","preserve","validateTrigger","initialValues","marginBottom","marginLG","marginTop","margin","Item","name","label","rules","message","InputNumber","type","min","ACCELERATOR_UNIT_MAP","MWCIconWrap","_ref2","_ref2$size","size","ResourceTypeIcon","_ref3","_resourceTypeIconSrcM","_resourceTypeIconSrcM2","_resourceTypeIconSrcM3","_ref3$size","_ref3$showTooltip","showIcon","showUnit","showTooltip","props","resourceTypeIconSrcMap","cpu","mem","Tooltip","amount","extra","opts","units","gap","iSizeToSize","numberFixed","parseFloat","toFixed","shmem","fontSize","fontSizeSM","node","mutationToGenerateToken","valid_until","validUntil","datetime","unix","success","_err$message","includes","okText","confirmLoading","labelCol","span","add","maxWidth","Alert","required","validator","_","isAfter","Promise","resolve","reject","Error","DatePicker","showTime","format","inferenceSessionErrorFrgmt","iSessionError","_ServingRouteErrorModalFragment","footer","Button","onClick","Descriptions","column","xxl","xl","lg","md","sm","xs","labelStyle","minWidth","CopyableCodeText","session_id","errors","repr","uuid","clickable","currentProject","useCurrentProjectValue","baiRequestWithPromise","useBaiSignedRequestWithPromise","vFolders","useTanQuery","queryKey","queryFn","id","staleTime","data","vFolder","find","replaceAll","Link","folder","FolderOutlined","dayDiff","a","b","date1","created_at","date2","diff","serviceId","useParams","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","_useTransition","useTransition","_useTransition2","isPendingRefetch","startRefetchTransition","_useTransition3","_useTransition4","isPendingClearError","startClearErrorTransition","selectedSessionErrorForModal","setSelectedSessionErrorForModal","_useState3","_useState4","isOpenModelServiceSettingModal","setIsOpenModelServiceSettingModal","_useState5","_useState6","isOpenTokenGenerationModal","setIsOpenTokenGenerationModal","_useState7","current","pageSize","paginationState","_useLazyLoadQuery","useLazyLoadQuery","_RoutingListPageQuery","tokenListOffset","tokenListLimit","endpointId","fetchPolicy","endpoint_token_list","mutationToClearError","applyStatusColor","resource_opts","JSON","parse","marginSM","Breadcrumb","items","preventDefault","href","Title","level","retries","icon","WarningOutlined","ReloadOutlined","Card","SettingOutlined","disabled","backgroundColor","colorBgBase","EndpointStatusTag","email","open_to_public","CheckOutlined","CloseOutlined","resource_group","resource_slots","ResourceNumber","Spin","indicator","LoadingOutlined","spin","model","VFolderLazyView","PlusOutlined","Table","scroll","x","rowKey","columns","fixed","render","record","index","showSorterTooltip","dataIndex","row","ellipsis","isExpired","isBefore","tz","defaultSortOrder","sortDirections","sorter","pagination","dataSource","filterNonNullItems","session","marginRight","Popover","QuestionCircleOutlined","colorTextSecondary","firstMatchedSessionError","openSessionErrorModal","routings","ServingRouteErrorModal","open","ModelServiceSettingModal","EndpointTokenGenerationModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","hash"],"sourceRoot":""}