{"version":3,"file":"static/js/4612.e2f35895.chunk.js","mappings":"yMAQA,MAAMA,EAA4BC,EAAAA,GAAWC,OAAO,CAChDC,KAAM,OACNC,OAAqBA,EAAAA,EAAOC,UAAU,CAClCC,MAAO,CACUC,EAAAA,GAAeC,IAAI,CAC5BC,cAA2BC,EAAAA,EAAAA,IAAgB,CAAEC,OAAQ,mBACrD,sBAAuBC,IAAM,KAC7B,cAAiBC,GAAMA,EAAGC,WAC1B,sBAAmCJ,EAAAA,EAAAA,QAE1BK,EAAAA,GAAaP,KAAIQ,GACtB,yBAAyBC,KAAKD,EAAKb,MAC5Be,EAAAA,GACM,gBAAbF,EAAKb,KACEgB,IAAQ,CAAGC,KAAMD,EAAKC,KAAO,EAAGC,GAAIF,EAAKE,GAAK,SADzD,OAMZC,aAAc,CACVC,cAAe,CAAEC,KAAM,KAAMC,MAAO,CAAEC,KAAM,KAAMC,MAAO,OACzDC,cAAe,iBACfC,cAAe,CAAEC,eAAgB,CAAC,IAAK,IAAK,UAMpD,SAASC,IACL,OAAO,IAAIC,EAAAA,GAAgBhC,EAC/B,C","sources":["../../node_modules/.pnpm/@codemirror+lang-rust@6.0.2/node_modules/@codemirror/lang-rust/dist/index.js"],"sourcesContent":["import { parser } from '@lezer/rust';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nA syntax provider based on the [Lezer Rust\nparser](https://github.com/lezer-parser/rust), extended with\nhighlighting and indentation information.\n*/\nconst rustLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"rust\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                IfExpression: /*@__PURE__*/continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                \"String BlockComment\": () => null,\n                \"AttributeItem\": cx => cx.continue(),\n                \"Statement MatchArm\": /*@__PURE__*/continuedIndent()\n            }),\n            /*@__PURE__*/foldNodeProp.add(type => {\n                if (/(Block|edTokens|List)$/.test(type.name))\n                    return foldInside;\n                if (type.name == \"BlockComment\")\n                    return tree => ({ from: tree.from + 2, to: tree.to - 2 });\n                return undefined;\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:\\{|\\})$/,\n        closeBrackets: { stringPrefixes: [\"b\", \"r\", \"br\"] }\n    }\n});\n/**\nRust language support\n*/\nfunction rust() {\n    return new LanguageSupport(rustLanguage);\n}\n\nexport { rust, rustLanguage };\n"],"names":["rustLanguage","LRLanguage","define","name","parser","configure","props","indentNodeProp","add","IfExpression","continuedIndent","except","String BlockComment","cx","continue","foldNodeProp","type","test","foldInside","tree","from","to","languageData","commentTokens","line","block","open","close","indentOnInput","closeBrackets","stringPrefixes","rust","LanguageSupport"],"sourceRoot":""}