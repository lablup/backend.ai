{"version":3,"file":"static/js/1895.89be710f.chunk.js","mappings":"sSAQA,MAAMA,GAAYC,EAAAA,EAAAA,KAAaC,IAAqB,IAApB,IAAEC,EAAG,MAAEC,GAAOF,EAC5C,MAAO,CACLG,SAAUF,CAAG;;8BAEaC,EAAME;;;;;MAMhCC,KAAMJ,CAAG;;;;;;;;;MAUV,KAGG,KAAEK,GAASC,EAAAA,EAEXC,EAAcC,IAAoC,IAAnC,MAAEC,GAA2BD,EAChD,MAAME,EAAOD,EAAML,KAAKM,MAAQ,IAC1B,OAAEC,GAAWd,IACnB,OACEe,EAAAA,EAAAA,KAACN,EAAAA,EAAI,CAACO,WAAS,EAAAC,UACbC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAU,SACVC,MAAM,UACNC,IAAI,KACJC,QAAQ,UACRC,MAAO,CAAEC,UAAW,SAAUR,SAAA,EAE9BF,EAAAA,EAAAA,KAACP,EAAI,CACHkB,MAAOd,EAAML,KAAKmB,MAClBC,QACEZ,EAAAA,EAAAA,KAACa,EAAAA,EAAe,CACdC,KAAMjB,EAAML,KAAKoB,OACjBG,OAAQ,IACRC,MAAO,MAGXC,YAAapB,EAAML,KAAK0B,aACxBC,UAAWpB,EAAOP,QAEpBW,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAU,MACVG,QAAQ,QACRC,MAAO,CAAEO,MAAO,OAAQI,WAAY,GACpCb,IAAK,EACLc,KAAK,OAAMnB,SAAA,EAEXF,EAAAA,EAAAA,KAACsB,EAAAA,EAAG,CAAsBC,MAAO,iBAAiBrB,SAC/CL,EAAM2B,UADC3B,EAAM2B,UAGf1B,EAAK2B,KAAI,CAACC,EAAKC,KACd3B,EAAAA,EAAAA,KAACsB,EAAAA,EAAG,CAAApB,SAAcwB,GAARC,YAIX,EAILC,EAAkBC,IAMjB,IANkB,OACvBC,EAAM,aACNC,GAIDF,EACC,MAAM,OAAE9B,GAAWd,IAEnB,OACEe,EAAAA,EAAAA,KAACgC,EAAAA,EAAI,CACHb,UAAWpB,EAAOT,SAClB2C,KAAM,CAAEC,OAAQ,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,GAC5DC,WAAYX,EACZY,WAAa7C,IACXG,EAAAA,EAAAA,KAACgC,EAAAA,EAAKW,KAAI,CACRlC,MAAO,CAAEM,OAAQ,QACjB6B,QAASA,IAAMb,EAAalC,GAAOK,UAEnCF,EAAAA,EAAAA,KAACL,EAAW,CAACE,MAAOA,OAGlB,EA+BZ,EA3B8BgD,KAC5B,MAAM,MAAExD,GAAUyD,EAAAA,EAAMC,YAClB,OAAEjB,IAAWkB,EAAAA,EAAAA,KACbC,GAAgBC,EAAAA,EAAAA,MAEtB,OACElD,EAAAA,EAAAA,KAACmD,EAAAA,SAAQ,CACPC,UAAUpD,EAAAA,EAAAA,KAACqD,EAAAA,EAAQ,CAACC,QAAM,EAAC7C,MAAO,CAAE8C,QAASlE,EAAMmE,aAAgBtD,UAEnEF,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAACC,UAAU,SAASC,MAAM,UAAUE,QAAQ,SAASD,IAAI,KAAIL,UAChEF,EAAAA,EAAAA,KAAC4B,EAAe,CACdE,OAAQA,EACRC,aAAelC,IACboD,EAAc,CACZQ,SAAU,QACVC,OAAQ,IAAIC,gBAAgB,CAC1BC,WAAY/D,EAAMgE,YAClBC,QAASjE,EAAMkE,KACdC,YACH,OAIC,C","sources":["pages/AIAgentPage.tsx"],"sourcesContent":["import Flex from '../components/Flex';\nimport { FluentEmojiIcon } from '../components/FluentEmojiIcon';\nimport { useWebUINavigate } from '../hooks';\nimport { AIAgent, useAIAgent } from '../hooks/useAIAgent';\nimport { Card, List, Skeleton, Tag, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { Suspense } from 'react';\n\nconst useStyles = createStyles(({ css, token }) => {\n  return {\n    cardList: css`\n      .and-col {\n        height: calc(100% - ${token.marginMD});\n      }\n      .ant-tag {\n        margin-inline-end: 0;\n      }\n    `,\n    meta: css`\n      .ant-card-meta-description {\n        max-height: 6.4em; // Adjusted for 4 lines\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .ant-card-meta-title {\n        white-space: normal;\n      }\n    `,\n  };\n});\n\nconst { Meta } = Card;\n\nconst AIAgentCard = ({ agent }: { agent: AIAgent }) => {\n  const tags = agent.meta.tags || [];\n  const { styles } = useStyles();\n  return (\n    <Card hoverable>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        gap=\"xs\"\n        justify=\"between\"\n        style={{ minHeight: '200px' }}\n      >\n        <Meta\n          title={agent.meta.title}\n          avatar={\n            <FluentEmojiIcon\n              name={agent.meta.avatar}\n              height={150}\n              width={150}\n            />\n          }\n          description={agent.meta.descriptions}\n          className={styles.meta}\n        />\n        <Flex\n          direction=\"row\"\n          justify=\"start\"\n          style={{ width: '100%', flexShrink: 1 }}\n          gap={6}\n          wrap=\"wrap\"\n        >\n          <Tag key={agent.endpoint} color={'orange-inverse'}>\n            {agent.endpoint}\n          </Tag>\n          {tags.map((tag, index) => (\n            <Tag key={index}>{tag}</Tag>\n          ))}\n        </Flex>\n      </Flex>\n    </Card>\n  );\n};\n\nconst AIAgentCardList = ({\n  agents,\n  onClickAgent,\n}: {\n  agents: AIAgent[];\n  onClickAgent: (agent: AIAgent) => void;\n}) => {\n  const { styles } = useStyles();\n\n  return (\n    <List\n      className={styles.cardList}\n      grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 2, xl: 3, xxl: 4 }}\n      dataSource={agents}\n      renderItem={(agent) => (\n        <List.Item\n          style={{ height: '100%' }}\n          onClick={() => onClickAgent(agent)}\n        >\n          <AIAgentCard agent={agent} />\n        </List.Item>\n      )}\n    ></List>\n  );\n};\n\nconst AIAgentPage: React.FC = () => {\n  const { token } = theme.useToken();\n  const { agents } = useAIAgent();\n  const webuiNavigate = useWebUINavigate();\n\n  return (\n    <Suspense\n      fallback={<Skeleton active style={{ padding: token.paddingMD }} />}\n    >\n      <Flex direction=\"column\" align=\"stretch\" justify=\"center\" gap=\"lg\">\n        <AIAgentCardList\n          agents={agents}\n          onClickAgent={(agent) => {\n            webuiNavigate({\n              pathname: '/chat',\n              search: new URLSearchParams({\n                endpointId: agent.endpoint_id,\n                agentId: agent.id,\n              }).toString(),\n            });\n          }}\n        />\n      </Flex>\n    </Suspense>\n  );\n};\n\nexport default AIAgentPage;\n"],"names":["useStyles","createStyles","_ref","css","token","cardList","marginMD","meta","Meta","Card","AIAgentCard","_ref2","agent","tags","styles","_jsx","hoverable","children","_jsxs","Flex","direction","align","gap","justify","style","minHeight","title","avatar","FluentEmojiIcon","name","height","width","description","descriptions","className","flexShrink","wrap","Tag","color","endpoint","map","tag","index","AIAgentCardList","_ref3","agents","onClickAgent","List","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","onClick","AIAgentPage","theme","useToken","useAIAgent","webuiNavigate","useWebUINavigate","Suspense","fallback","Skeleton","active","padding","paddingMD","pathname","search","URLSearchParams","endpointId","endpoint_id","agentId","id","toString"],"sourceRoot":""}