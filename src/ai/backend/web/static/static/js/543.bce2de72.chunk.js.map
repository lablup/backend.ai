{"version":3,"file":"static/js/543.bce2de72.chunk.js","mappings":"4ZAoBO,SAASA,EACdC,EACAC,GAIA,IAAMC,GAAiBC,EAAAA,EAAAA,GAAA,GAAQF,GAsC/B,OAhEF,SAAyBG,GAKvB,IAJA,IAGIC,EAHEC,EAAU,qDACVC,EAAa,GAGqB,QAAhCF,EAASC,EAAQE,KAAKJ,KAAgB,CAC5C,IAAAK,EACEJ,EAAMK,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GADDG,EAAcF,EAAA,GAAEG,EAASH,EAAA,GAAEI,EAASJ,EAAA,GAAEK,EAAYL,EAAA,GAAEM,EAAaN,EAAA,GAExEH,EAAWU,KAAK,CACdJ,UAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,cAAAA,EACAJ,eAAAA,GAEJ,CAEA,OAAOL,CACT,CASqBW,CAAgBlB,GACxBmB,SAAQ,SAACL,GAClB,GAC0B,iBAAxBA,EAAUA,WACiB,OAA3BA,EAAUC,eAWRf,GARAc,EAAUE,gBAC2C,IAApDf,EAAUa,EAAUE,cAAcI,UAAU,KACf,SAA5BN,EAAUE,cAMJhB,EAAMqB,QACZP,EAAUF,eACVE,EAAUF,eAAeS,QACvB,sDACA,KAPIrB,EAAMqB,QAAQP,EAAUF,eAAgB,IAchDE,EAAUE,cAAcM,WAAW,MACa,IAAhDtB,EAAMuB,MAAMT,EAAUE,eAAeQ,QACrC,CACA,IAAMC,EAA4BX,EAAUE,cAAcI,UAAU,GAC9Dd,EAAU,IAAIoB,OAAO,KAADC,OAAMF,EAAyB,QAAQ,KACjEzB,EAAQA,EAAMqB,QAAQf,EAAS,WACxBJ,EAAkBY,EAAUE,cAAcI,UAAU,GAC7D,CAGJ,IACO,CACLpB,MAAOA,EACPC,UAAWC,EAEf,CCxDA0B,EAAAA,kBAAAA,wBAA2C,EAE3C,IAAMC,EAAsB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAC7BC,EACAlC,GAEA,IAAAmC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnC,EAAA,OAAA2B,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAoBA,OAjBMN,EAAkBvC,EACtBoC,EAAQU,MAAQ,GAChB5C,GAGIsC,EAAU,CACdvC,MAAOsC,EAAgBtC,MACvBC,UAAWqC,EAAgBrC,WAIvBuC,EAAoC,QAA7BJ,EAAGU,WAAWC,uBAAe,IAAAX,OAAA,EAA1BA,EAA4BY,iBAC1C,OACA,aACAT,GAGFG,EAAAE,KAAA,EAC+C,QAD/CP,EACqBS,WAAWC,uBAAe,IAAAV,OAAA,EAA1BA,EAA4BY,iBAC/CT,GACA,EACA,KACA,IACA,GACA,KAAD,EANW,OAANnC,EAAMqC,EAAAQ,KAAAR,EAAAS,OAAA,SAQL9C,GAAM,wBAAAqC,EAAAU,OAAA,GAAAlB,EAAA,KACd,gBAlC2BmB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA,KAAAC,UAAA,KAuErB,I,EAAMC,EANJ,IAAIC,EAAAA,YAAY,CACrBC,QAASC,EAAAA,QAAAA,OAAe/B,OA9BxBgC,GA+BAC,MAAO,IAAIC,EAAAA,MAAM,IAAIC,EAAAA,gB,uCClDnBC,EAAsBC,EAAAA,cAA6C,MACnEC,EAAoBD,EAAAA,cAAgC,MAC7CE,EAAgB,WAAH,OAASF,EAAAA,WAAiBC,EAAmB,EAC1DE,EAAsB,WAAH,OAASH,EAAAA,WAAiBD,EAAqB,EAGzEK,EAAc,IAAIC,EAAAA,YAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,UAAU,EACVC,sBAAsB,EACtBC,OAAO,MASbC,EAAAA,GAAAA,IACOC,EAAAA,IACJC,IAAIC,EAAAA,GACJC,KAAK,CACJC,QAAS,CACPC,SAAU,gCAGZC,KAAe,OAAVtC,iBAAU,IAAVA,YAA4B,QAAlBV,EAAVU,WAAYuC,wBAAgB,IAAAjD,OAAlB,EAAVA,EAA8BkD,IAAI,sBAAuB,KAC9DC,YAAa,KACbC,cAAe,CACbC,aAAa,KAInB,IA2FMC,EAAsB,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAhBAC,EAAAA,EAAAA,kBAAgB,WACd,IAAMC,EAAiB,SAACC,GACtB,IAAQC,EAAWD,EAAXC,OACRL,EAASK,EAAQ,CAGf3E,SAAS,GAEb,EAGA,OAFA4E,SAASC,iBAAiB,iBAAkBJ,GAErC,WACLG,SAASE,oBAAoB,iBAAkBL,EACjD,CACF,GAAG,CAACH,IAEG,IACT,EAEA,EApF0D,SAAH7D,GAMhD,IALLsE,EAAQtE,EAARsE,SACAC,EAAKvE,EAALuE,MACAC,EAAMxE,EAANwE,OACAC,EAAUzE,EAAVyE,WACAC,EAAa1E,EAAb0E,cAEMC,GAAQC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAa,GAAE,IAC3CC,EApCyB,WAAO,IAADvE,EAC/BwE,GAAyBC,EAAAA,EAAAA,UAEb,OAAVhE,iBAAU,IAAVA,YAA4B,QAAlBT,EAAVS,WAAYuC,wBAAgB,IAAAhD,OAAlB,EAAVA,EAA8BiD,IAAI,qBACnCyB,GAAApG,EAAAA,EAAAA,GAAAkG,EAAA,GAHMG,EAAID,EAAA,GAAEE,EAAQF,EAAA,GAIblC,GAASqC,EAAAA,EAAAA,MAATrC,KAoBR,OAlBAsC,EAAAA,EAAAA,YAAU,WAERC,YAAW,kBAAU,OAAJvC,QAAI,IAAJA,OAAI,EAAJA,EAAMwC,eAAeL,EAAK,GAAE,EAE/C,GAAG,KAEHG,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAU,SAACvB,GAAc,IAADwB,EAAAC,EAE5BP,EAAU,OAADlB,QAAC,IAADA,GAAS,QAARwB,EAADxB,EAAGC,cAAM,IAAAuB,OAAR,EAADA,EAAWP,MAEpB,IAAMA,GAAgB,OAADjB,QAAC,IAADA,GAAS,QAARyB,EAADzB,EAAGC,cAAM,IAAAwB,OAAR,EAADA,EAAWR,OAAQ,KACpC,OAAJnC,QAAI,IAAJA,GAAAA,EAAMwC,eAAeL,EACvB,EAEA,OADAS,OAAOvB,iBAAiB,cAAeoB,GAChC,kBAAMG,OAAOtB,oBAAoB,cAAemB,EAAS,CAClE,GAAG,CAACzC,IAEG,CAACmC,EACV,CAUiBU,GAARV,GAA4BrG,EAAAA,EAAAA,GAAAiG,EAAA,GAAxB,GACLe,GAAcC,EAAAA,EAAAA,KAEdC,GAAkBnB,EAAAA,EAAAA,UAAQ,WAC9B,MAAO,CACLL,MAAAA,EACAG,cAAAA,EACAsB,OAAQ,SAACC,GACPvB,EAAc,SAAU,CAAEuB,KAAAA,GAC5B,EAEJ,GAAG,CAAC1B,EAAOG,IACX,OACEwB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAA7B,SACG3C,IACCuE,EAAAA,EAAAA,KAACE,EAAAA,yBAAwB,CAACC,YAAa1E,EAAiB2C,UACtDgC,EAAAA,EAAAA,MAAClE,EAAAA,WAAgB,CAAAkC,SAAA,EACfgC,EAAAA,EAAAA,MAAA,SAAAhC,SAAA,CACGE,E,67BAGH0B,EAAAA,EAAAA,KAACK,EAAAA,oBAAmB,CAACC,OAAQhE,EAAY8B,UACvC4B,EAAAA,EAAAA,KAAC7D,EAAkBoE,SAAQ,CAAClC,MAAOE,EAAWH,UAC5C4B,EAAAA,EAAAA,KAAC/D,EAAoBsE,SAAQ,CAAClC,MAAOwB,EAAgBzB,UACnD4B,EAAAA,EAAAA,KAACQ,EAAAA,GACC,CACAC,kBAAmB,SAACC,GAClB,OAAe,OAAXA,QAAW,IAAXA,GAAAA,EAAaC,WACRD,EAAYC,WAEdpC,CACT,EAEAqC,OAAQ,OAAS5B,EAAO6B,EAAAA,EAAQC,EAAAA,EAChCC,MAAOpB,EAAYvB,UAEnB4B,EAAAA,EAAAA,KAACgB,EAAAA,GAAa,CAACC,UAAW1C,EAAYE,MAAOA,EAAML,UACjD4B,EAAAA,EAAAA,KAACkB,EAAAA,SAAQ,CAACC,SAAS,GAAE/C,UACnBgC,EAAAA,EAAAA,MAACgB,EAAAA,GAAa,CAAAhD,SAAA,EACZ4B,EAAAA,EAAAA,KAACtC,EAAmB,IACnBU,uBAa3B,C,+ICnEA,IA1EkC,SAAHtE,GASxB,IAADuH,EAAAvH,EARJwH,UAAAA,OAAS,IAAAD,EAAG,MAAKA,EAAAE,EAAAzH,EACjBW,KAAAA,OAAI,IAAA8G,EAAG,SAAQA,EAAAC,EAAA1H,EACf2H,QAAAA,OAAO,IAAAD,EAAG,aAAYA,EAAAE,EAAA5H,EACtB6H,MAAAA,OAAK,IAAAD,EAAG,SAAQA,EAAAE,EAAA9H,EAChB+H,IAAAA,OAAG,IAAAD,EAAG,EAACA,EACPE,EAAKhI,EAALgI,MACA1D,EAAQtE,EAARsE,SACG2D,GAASC,EAAAA,EAAAA,GAAAlI,EAAAmI,GAEJC,EAAUnB,EAAAA,EAAAA,WAAVmB,MAEFC,EAAgB,CAACV,EAASE,GAC1BS,EAAkC,OAAbD,QAAa,IAAbA,OAAa,EAAbA,EAAeE,KAAI,SAACC,GAC7C,IAAIC,EACJ,OAAQD,GACN,IAAK,QACHC,EAAU,aACV,MACF,IAAK,MACHA,EAAU,WACV,MACF,IAAK,UACHA,EAAU,gBACV,MACF,IAAK,SACHA,EAAU,eACV,MACF,QACEA,EAAUD,EAId,OAAOC,CACT,IACMC,GAA8BrK,EAAAA,EAAAA,GAAA,CAClCsK,QAAS,OACTC,cAAepB,EACfqB,SAAUlI,EACVmI,eAAgBR,EAAmB,GACnCS,WAAYT,EAAmB,IAC5BN,GAGL,OACE9B,EAAAA,EAAAA,KAAA,OAAA7H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACE2J,OAAK3J,EAAAA,EAAAA,GAAA,CACH0K,WAAY,UACZC,gBAAiB,cACjBC,OAAQ,gBACRC,UAAW,aACXP,QAAS,OACTQ,UAAW,OACXP,cAAe,SACfQ,WAAY,EACZC,UAAW,OACXC,OAAQ,EACRC,UAAW,EACXC,SAAU,EACVC,QAAS,EACTC,SAAU,WACVC,eAAgB,OAChB5B,IAEiB,kBAARA,EAAmBK,EAAM,UAAYL,EAAI6B,eAAiB7B,GAChEW,IAEDT,GAAS,IAAA3D,SAEZA,IAGP,C,yVCyCA,EApG2C,SAAHtE,GAGjC,IAFL6J,EAAc7J,EAAd6J,eACGC,GAAU5B,EAAAA,EAAAA,GAAAlI,EAAAmI,GAEL4B,GAAM3E,EAAAA,EAAAA,MAAN2E,EACA3B,EAAUnB,EAAAA,EAAAA,WAAVmB,MACR4B,EAAeC,EAAAA,EAAAA,UAARC,GAA6CrL,EAAAA,EAAAA,GAAAmL,EAAA,GAAzC,GAELG,GAAYC,EAAAA,EAAAA,MAClBC,GAAmCC,EAAAA,EAAAA,UAAS,QAAQ,WAClD,OAAOR,EAAWS,KAAOJ,EAAUK,kBAAoB,IACzD,IAFMC,EAAIJ,EAAJI,KAAMC,EAASL,EAATK,UAAWC,EAAON,EAAPM,SAIvBtF,EAAAA,EAAAA,YAAU,WACRsF,GACF,GAAG,CAACA,EAASb,EAAWS,OAExB,IAAMK,GAAyBC,EAAAA,EAAAA,GAAe,CAC5CC,WAAY,SAACC,GACX,OAAOZ,EAAUa,cAAcD,EAAOE,IACxC,IAoBF,OACE/E,EAAAA,EAAAA,KAACgF,EAAAA,GAAK7M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJ8M,MAAOpB,EAAE,wBACTqB,cAAc,EACdC,KArBU,WACZnB,EAAKoB,iBAAiBC,MAAK,SAACR,GAC1BH,EAAuBY,OAAOT,EAAQ,CACpCU,UAAW,WACTC,EAAAA,GAAAA,QAAgB3B,EAAE,4BAClBF,GAAe,EACjB,EACA8B,QAAS,WACPD,EAAAA,GAAAA,MAAc3B,EAAE,wBAClB,IAEF,IAAI6B,SAAQ,SAACC,EAASC,GAAY,IAAGP,MAAK,WACxC1B,GAAe,EACjB,GACF,GACF,EAOIkC,SAAU,WACRlC,GACF,EACA7B,MAAO,CAAEgE,OAAQ,IACblC,GAAU,IAAAxF,SAEZmG,GAKAnE,EAAAA,EAAAA,MAAC2D,EAAAA,EAAI,CACHgC,UAAU,EACV/B,KAAMA,EACNgC,gBAAiB,CAAC,WAAY,UAAU5H,SAAA,CAEvCyF,EAAE,uBACH7D,EAAAA,EAAAA,KAACiG,EAAAA,EAAI,CACHxE,QAAQ,SACRK,MAAO,CAAEsB,OAAQlB,EAAMgE,SAAUrE,IAAKK,EAAMkB,QAAShF,UAErD4B,EAAAA,EAAAA,KAACmG,EAAAA,EAAM,CACL9H,MAAW,OAAJkG,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,SACbC,OAAQ7B,EAAY,eAAY8B,MAGnCzC,EAAE,wBACH7D,EAAAA,EAAAA,KAACiG,EAAAA,EAAI,CACHxE,QAAQ,SACRK,MAAO,CAAEsB,OAAQlB,EAAMgE,SAAUrE,IAAKK,EAAMkB,QAAShF,UAErD4B,EAAAA,EAAAA,KAACuG,EAAAA,EAAAA,KAAe,CAACC,UAAQ,EAACC,MAAI,EAAArI,SACvB,OAAJmG,QAAI,IAAJA,OAAI,EAAJA,EAAMmC,aAGV7C,EAAE,uBACH7D,EAAAA,EAAAA,KAACiG,EAAAA,EAAI,CACHxE,QAAQ,SACRK,MAAO,CAAEsB,OAAQlB,EAAMgE,SAAUrE,IAAKK,EAAMkB,QAAShF,UAErD4B,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CAAC4C,UAAQ,EAACC,KAAK,MAAKxI,UAC5B4B,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CACJC,UAAW,EACXC,YAAU,EACVC,YAAY,SACZlF,MAAO,CAAEmF,SAAU,eAtC3BjH,EAAAA,EAAAA,KAACiG,EAAAA,EAAI,CAACxE,QAAQ,SAASH,UAAU,MAAKlD,UACpC4B,EAAAA,EAAAA,KAACkH,EAAAA,EAAI,QA6Cf,E,uCC+NA,EAjT0C,SAAHpN,GAGhC,IAADqN,EAAAC,EAGAC,EAHAC,EAAAxN,EAFJyN,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EACf1D,GAAU5B,EAAAA,EAAAA,GAAAlI,EAAAmI,GAEL4B,GAAM3E,EAAAA,EAAAA,MAAN2E,EACR2D,GAAiCnL,EAAAA,EAAAA,uBAAzBgC,EAAKmJ,EAALnJ,MAAOG,EAAagJ,EAAbhJ,cAKf,IACE6I,EAAcI,KAAKC,MAAMrJ,GAAS,GACpC,CAAE,MAAOsJ,IACPN,EAAc,CACZhD,MAAM,EACNuD,UAAW,GAEf,CACA,IAoBIC,EApBJC,EAA4BT,EAApBhD,EAAIyD,EAAJzD,KAAMuD,EAASE,EAATF,UAEd9D,EAAeC,EAAAA,EAAAA,UAARC,GAA4BrL,EAAAA,EAAAA,GAAAmL,EAAA,GAAxB,GASLiE,EAAyC,CAC7CC,WAAY,CAAC,aAAc,QAAS,OAAQ,WAC5CC,MAAO,CAAC,QAAS,OAAQ,YAG3BC,GAAmCC,EAAAA,EAAAA,IAAkB,iBAAgBC,GAAAzP,EAAAA,EAAAA,GAAAuP,EAAA,GAA9DG,EAAQD,EAAA,GAAEE,EAAcF,EAAA,GACzBG,GAAyBC,EAAAA,EAAAA,kBAAiBH,EAAWd,GAErDtD,GAAYC,EAAAA,EAAAA,MAElBC,GAGIC,EAAAA,EAAAA,UACF,2BACA,WACE,OAAOH,EAAUwE,yBACnB,GACA,CAEE/L,UAAU,IATN+L,EAAuBtE,EAA7BI,KACWmE,EAA8BvE,EAAzCK,UAWFqD,GAAyB,OAAT5D,QAAS,IAATA,OAAS,EAATA,EAAW0E,SAAS,SAAUF,EAE9C,IAAAG,IAA+BC,EAAAA,EAAAA,uBAAgB,IAAAC,EAAAA,EAAAA,EAAAC,EAAA,MA2B7C,CACEC,MAAOpB,EACPqB,gBAA8B,QAAf9B,EAAEU,SAAa,IAAAV,GAAAA,EAC9B+B,kBAAmC,QAAlB9B,EAAW,OAATnD,QAAS,IAATA,OAAS,EAATA,EAAW+E,aAAK,IAAA5B,EAAAA,EAAI,IAEzC,CACEiB,SAAUE,EACVY,YAAa,iBAlCTC,GAAIR,GAAJQ,KAAMC,GAAYT,GAAZS,aAsCdC,IACEC,EAAAA,EAAAA,kBAAW,IAAAC,EAAAA,EAAAA,EAAAT,EAAA,OAYVU,IAAA9Q,EAAAA,EAAAA,GAAA2Q,GAAA,GAbII,GAAuBD,GAAA,GAAEE,GAAiCF,GAAA,GAe3DG,IAAuBjF,EAAAA,EAAAA,GAAe,CAC1CC,WAAY,SAACoE,GACX,OAAO/E,EAAU4F,YAAYb,EAC/B,IAGFc,IACEC,EAAAA,EAAAA,IAAU,GAAMC,IAAArR,EAAAA,EAAAA,GAAAmR,GAAA,GADXG,GAAuBD,GAAA,GAAYE,GAAuBF,GAAA,GAA/BG,OA4ClC,OACE/J,EAAAA,EAAAA,MAAC4E,EAAAA,GAAK7M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJkM,KAAMA,EACNwB,SAAU,WACRrH,EAAc,SAAU,KAC1B,EACA4L,UAAQ,EACRnF,MAAOpB,EAAE,+BACTwG,gBAAgB,EAChBlF,KAlDU,WACZnB,EAAKoB,iBAAiBC,KAAI,eAAAiF,GAAAvQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAO2K,GAAM,IAAA0F,EAAAC,EAAA,OAAAxQ,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClC2P,GAAKpS,EAAAA,EAAAA,GAAA,GAAQ0M,IACJmE,MACbuB,EAAQE,IAAAA,OAASF,GAAO,SAACG,GAAI,YAAcpE,IAAToE,GAA+B,KAATA,CAAW,IAG9D7C,EAGI,OAANhD,QAAM,IAANA,GAAAA,EAAQ8F,iBACH,OAAN9F,QAAM,IAANA,OAAM,EAANA,EAAQ8F,mBAAuB,OAAJvB,SAAI,IAAJA,QAAI,EAAJA,GAAMuB,iBAEjCf,GAAqBtE,QAAW,OAAJ8D,SAAI,IAAJA,QAAI,EAAJA,GAAMJ,QAAS,GAAI,CAC7CvD,QAAS,SAACmF,GACRC,QAAQC,IAAIF,EACd,IARU,QAAZJ,EAAOD,SAAK,IAAAC,UAALA,EAAOG,eAYhBjB,GAAwB,CACtBzR,UAAW,CACT+Q,OAAa,OAANnE,QAAM,IAANA,OAAM,EAANA,EAAQmE,QAAS,GACxB+B,MAAOR,GAETS,YAAW,SAACC,GAAM,IAADC,EAIRC,EAHA,OAAHF,QAAG,IAAHA,GAAgB,QAAbC,EAAHD,EAAKG,mBAAW,IAAAF,GAAhBA,EAAkBG,IACpB7F,EAAAA,GAAAA,QAAgB3B,EAAE,qCAClByE,GAAqB,OAANzD,QAAM,IAANA,OAAM,EAANA,EAAQmE,QAAQ,IAAIsC,MAAOC,gBAE1C/F,EAAAA,GAAAA,MAAiB,OAAHyF,QAAG,IAAHA,GAAgB,QAAbE,EAAHF,EAAKG,mBAAW,IAAAD,OAAb,EAAHA,EAAkBK,KAElChN,EAAc,KAAM,KACtB,EACAiH,QAAO,SAACmF,GACNpF,EAAAA,GAAAA,MAAiB,OAAHoF,QAAG,IAAHA,OAAG,EAAHA,EAAKpF,QACrB,IACC,wBAAA9K,EAAAU,OAAA,GAAAlB,EAAA,KACJ,gBAAAmB,GAAA,OAAAiP,EAAA/O,MAAA,KAAAC,UAAE,CAAF,CArCyB,GAsC5B,EAYIiQ,eAAgB9B,IACZ/F,GAAU,IAAAxF,SAAA,EAEdgC,EAAAA,EAAAA,MAAC2D,EAAAA,EAAI,CACHgC,UAAU,EACV/B,KAAMA,EACN0H,SAAU,CAAEC,KAAM,IAClBC,WAAY,CAAED,KAAM,IACpB3F,gBAAiB,CAAC,WAAY,UAC9BlE,MAAO,CAAE+J,aAAc,GAAIC,UAAW,IACtCC,eAAa5T,EAAAA,EAAAA,GAAA,GAAOiR,IAAOhL,SAAA,EAE3B4B,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CAAC6C,KAAK,QAAQoF,MAAOnI,EAAE,qBAAqBzF,UACpD4B,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CAACoF,UAAQ,OAEjBjM,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CAAC6C,KAAK,WAAWoF,MAAOnI,EAAE,uBAAuBzF,UACzD4B,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CAACG,YAAanD,EAAE,0BAExB7D,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CAAC6C,KAAK,YAAYoF,MAAOnI,EAAE,uBAAuBzF,UAC1D4B,EAAAA,EAAAA,KAAC6G,EAAAA,EAAK,CAACG,YAAanD,EAAE,0BAExB7D,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CACR6C,KAAK,WACLoF,MAAOnI,EAAE,uBACTqI,MAAO,CACL,CACE5T,QACE,0DACFkN,QAAS3B,EAAE,uCAEbzF,UAEF4B,EAAAA,EAAAA,KAAC6G,EAAAA,EAAAA,SAAc,OAEjB7G,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CACR6C,KAAK,mBACLuF,aAAc,CAAC,YACfH,MAAOnI,EAAE,+BACTqI,MAAO,CACL,SAAAE,GAAA,IAAGC,EAAaD,EAAbC,cAAa,MAAQ,CACtBC,UAAS,SAAC7B,EAAGpM,GACX,OAAKA,GAAWgO,EAAc,YACrB3G,QAAQE,OACb,IAAI2G,MAAM1I,EAAE,0CAGXxF,GAASgO,EAAc,cAAgBhO,EAGrCqH,QAAQE,OACb,IAAI2G,MAAM1I,EAAE,qCAHL6B,QAAQC,SAKnB,EACD,GACDvH,UAEF4B,EAAAA,EAAAA,KAAC6G,EAAAA,EAAAA,SAAc,OAEjB7G,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CAAC6C,KAAK,cAAcoF,MAAOnI,EAAE,0BAA0BzF,UAC/D4B,EAAAA,EAAAA,KAAC6G,EAAAA,EAAAA,SAAc,CAACG,YAAanD,EAAE,2BAEjC7D,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CAAC6C,KAAK,SAASoF,MAAOnI,EAAE,yBAAyBzF,UACzD4B,EAAAA,EAAAA,KAACwM,EAAAA,EAAM,CACLC,QAAShC,IAAAA,IAhNY,CAC7BiC,OAAQ,SACRC,SAAU,WACV,sBAAuB,sBACvBC,QAAS,YA4M0B,SAACvO,EAAOwO,GACjC,MAAO,CACLxO,MAAOwO,EACPb,MAAO3N,EAEX,UAGG,OAAJ+K,SAAI,IAAJA,KAAAA,GAAM0D,SACO,OAAZzD,SAAY,IAAZA,KAAAA,GAAcyD,OAChBzD,GAAayD,QAAQ/E,IACnB/H,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CAAC6C,KAAK,OAAOoF,MAAOnI,EAAE,mBAAmBzF,UACjD4B,EAAAA,EAAAA,KAACwM,EAAAA,EAAM,CACLC,QAAShC,IAAAA,IACP1C,EAA6BsB,GAAayD,OAC1C,SAACpC,GACC,MAAO,CACLrM,MAAOqM,EACPsB,MAAOtB,EAEX,SAKV1K,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CACR6C,KAAK,uBACLoF,MAAOnI,EAAE,wCACTkJ,cAAc,UAAS3O,UAEvB4B,EAAAA,EAAAA,KAACgN,EAAAA,EAAM,QAENnF,IACD7H,EAAAA,EAAAA,KAAC+D,EAAAA,EAAAA,KAAS,CACR6C,KAAK,iBACLoF,MAAOnI,EAAE,4BACTkJ,cAAc,UACdE,OACM,OAAJ7D,SAAI,IAAJA,QAAI,EAAJA,GAAMJ,UAAmB,OAAT/E,QAAS,IAATA,OAAS,EAATA,EAAW+E,SACzBhJ,EAAAA,EAAAA,KAACuG,EAAAA,EAAAA,KAAe,CAAC2G,KAAK,YAAYpL,MAAO,CAAEqL,SAAU,IAAK/O,SACvDyF,EAAE,uCAGRzF,UAED4B,EAAAA,EAAAA,KAACgN,EAAAA,EAAM,CACLI,QAAS1E,EACTuD,UACM,OAAJ7C,SAAI,IAAJA,QAAI,EAAJA,GAAMJ,UAAmB,OAAT/E,QAAS,IAATA,OAAS,EAATA,EAAW+E,UAAc,OAAJI,SAAI,IAAJA,IAAAA,GAAMuB,gBAE7C0C,SAAU,SAACC,IAELA,GACG,OAAJlE,SAAI,IAAJA,IAAAA,GAAMuB,iBACH,OAAJvB,SAAI,IAAJA,QAAI,EAAJA,GAAMJ,UAAmB,OAAT/E,QAAS,IAATA,OAAS,EAATA,EAAW+E,QAE3BkB,IAEJ,WAKLrC,IACD7H,EAAAA,EAAAA,KAACuN,EAAiB,CAChBlJ,KAAM4F,GACNtG,eAAgB,WACduG,IACF,OAKV,C,8BCjTA,IAAMsD,EAAyB,WAC/B,IAAIC,EAAK,CACP,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,SAEV,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,UAGZC,EAAK,CACH,CACE,MAAS,KACT,KAAQ,CACN,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,SAElB,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,UAGpB,aAAgB,aAChB,KAAQ,cACR,KAAQ,cACR,QAAU,EACV,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,MACR,WAAc,OAGlB,WAAc,OAGlB,MAAO,CACL,SAAY,CACV,oBAAwBD,EACxB,KAAQ,WACR,SAAY,KACZ,KAAQ,2BACR,WAAeC,EACf,KAAQ,YACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAwBD,EACxB,KAAQ,YACR,KAAQ,2BACR,WAAeC,GAEjB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,CAAC,EACb,KAAQ,2BACR,cAAiB,WACjB,KAAQ,oKAGZ,CA7E+B,GA+E9BF,EAAaG,KAAO,mCAErB,W,8BCjFA,IAAMH,EAAyB,WAC/B,IAAIC,EAAK,CACP,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,SAEV,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,mBAEV,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,sBAGZC,EAAK,CACH,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,UAGpBE,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,QACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,WACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,uBACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,YACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,SACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,cACR,WAAc,MAEhBC,EAAK,CACH,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,OACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,MAEhBC,EAAM,CACJ,MAAS,KACT,KAAQ,KACR,aAAgB,YAChB,KAAQ,cACR,KAAQ,SACR,QAAU,EACV,WAAc,CACXD,EACD,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,OACR,WAAc,OAGlB,WAAc,MAEhBE,EAAM,CACJ,UAAa,kBACb,KAAQ,YACR,cAAgB,EAChB,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,iBACR,WAAc,QAIpBC,EAAM,CACJ,CACE,KAAQ,WACR,KAAQ,QACR,aAAgB,sBAGpB,MAAO,CACL,SAAY,CACV,oBAAwBd,EACxB,KAAQ,WACR,SAAY,KACZ,KAAQ,wBACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,GAEH,WAAc,MAEhB,CACE,MAAS,eACT,KAASC,EACT,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXJ,GAEH,WAAc,OAGlB,KAAQ,UACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAwBV,EACxB,KAAQ,YACR,KAAQ,wBACR,WAAc,CACZ,CACE,MAAS,KACT,KAASC,EACT,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAF,GAEH,WAAc,MAEhB,CACE,MAAS,eACT,KAASG,EACT,aAAgB,OAChB,KAAQ,cACR,KAAQ,OACR,QAAU,EACV,WAAc,CACXJ,EACAC,GAEH,WAAc,QAIpB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,CAAC,EACb,KAAQ,wBACR,cAAiB,QACjB,KAAQ,gcAGZ,CAhO+B,GAkO9BZ,EAAaG,KAAO,mCAErB,W,iNCjPaxF,EAAoB,SAACqG,GAChC,OAV6B,SAACA,GAC9B,IAAAC,GAA0B3P,EAAAA,EAAAA,UAAS0P,IAAgB,IAAIlD,MAAOC,eAAcmD,GAAA/V,EAAAA,EAAAA,GAAA8V,EAAA,GAArEpQ,EAAKqQ,EAAA,GAAEC,EAAQD,EAAA,GAKtB,MAAO,CAACrQ,EAHO,SAACuQ,GACdD,EAASC,IAAY,IAAItD,MAAOC,cAClC,EAEF,CAGSsD,CAAgBL,EACzB,EAEaM,EAAwB,WAEnC,OADkB5K,IACD6K,QAAQC,UAC3B,EAEaC,EAAyB,WACpC,IAAMhL,EAAYC,IAClBgL,GAA+BpQ,EAAAA,EAAAA,UAG5B,CACD8H,KAAM3C,EAAUkL,cAChBC,GAAInL,EAAUoL,SAASpL,EAAUkL,iBACjCG,GAAA3W,EAAAA,EAAAA,GAAAuW,EAAA,GANKK,EAAOD,EAAA,GAAEE,EAAWF,EAAA,GAsB3B,OAdAnQ,EAAAA,EAAAA,YAAU,WACR,IAAMsQ,EAAW,SAAC1R,GAChB,IAAM2R,EAAiB3R,EAAEC,OACzBwR,EAAY,CACV5I,KAAM8I,EACNN,GAAInL,EAAUoL,SAASK,IAE3B,EAEA,OADAzR,SAASC,iBAAiB,2BAA4BuR,GAC/C,WACLxR,SAASE,oBAAoB,2BAA4BsR,EAC3D,CACF,IAEOF,CACT,EAEaI,EAA8B,SAAH7V,GAIjC,IAHL8V,EAAY9V,EAAZ8V,aAgBA,OAZelR,EAAAA,EAAAA,UAAQ,WAErB,IAAMmR,EAAe,IAAI/U,WAAWgV,sBAClC,GACA,GACAF,EACA,WAGF,OAAO,IAAI9U,WAAWiV,gBAAgBF,EAAc,sBACtD,GAAG,CAACD,GAGN,EAEa1L,EAA8B,WA6BzC,OA5ByBE,EAAAA,EAAAA,UAAc,CACrC4L,SAAU,gCACVC,QAAS,kBACP,IAAIvK,SAAQ,SAACC,GACX,GAEwC,qBAA/B7K,WAAWC,iBAEa,OAA/BD,WAAWC,kBAE0B,IAArCD,WAAWC,gBAAgBmV,MAU3B,OAAOvK,EAAQ7K,WAAWC,iBAH1BkD,SAASC,iBAAiB,wBALT,SAAXuR,IAEJ9J,EAAQ7K,WAAWC,iBACnBkD,SAASE,oBAAoB,uBAAwBsR,EACvD,GAMJ,GAAE,EACJ7S,OAAO,EAEPF,UAAU,IAzBJ6H,IA6BV,EAea4L,EAA4B,WACvC,IAAcC,GAAahM,EAAAA,EAAAA,UAAS,CAClC4L,SAAU,kCACVC,QAAS,WACP,OAAOI,MAAM,iCACVhL,MAAK,SAACiL,GAAQ,OAAKA,EAASC,MAAM,IAClClL,MACC,SAACkL,GAWC,OAAOA,CACT,GAEN,EACA7T,UAAU,EACVE,OAAO,IAtBD2H,KAyBFiM,EAAe,SAACC,GAGpB,IAAKA,EACH,MAAO,CACL5D,IAAK,GACL6D,KAAM,IAGV,IAAMC,EAAQF,EAAUlX,MAAM,KAE9BqX,GAAoBD,EAAM,IAAMA,EAAM,IAAIpX,MAAM,KAAIsX,GAAAlY,EAAAA,EAAAA,GAAAiY,EAAA,GAGpD,MAAO,CAAE/D,IAHCgE,EAAA,GAGIH,KAHCG,EAAA,GACEtX,MAAM,KAGzB,EAEA,MAAO,CACL6W,EACA,CACEU,kBAAmB,SAACL,GAClB,IAAQ5D,EAAQ2D,EAAaC,GAArB5D,IACR,OAAe,OAARuD,QAAQ,IAARA,OAAQ,EAARA,EAAUW,UAAUlE,GAAKjG,OAAQiG,CAC1C,EACAmE,aAAc,SAACP,GAA0D,IAA/B1Q,EAAIvE,UAAAhC,OAAA,QAAA8M,IAAA9K,UAAA,GAAAA,UAAA,GAAG,mBAC/C,IAAKiV,EAAW,MAAO,cACvB,IAAQ5D,EAAQ2D,EAAaC,GAArB5D,IACR,OACE9M,QACmCuG,KAA1B,OAAR8J,QAAQ,IAARA,OAAQ,EAARA,EAAUW,UAAUlE,GAAKoE,MACd,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUW,UAAUlE,GAAKoE,KACzB,cAER,EACAC,aAAc,SAACT,GACb,EAEFU,eAAgB,SAACV,GAEf,OADiBD,EAAaC,GAAtBC,KACI,EACd,EACAU,aAAc,SAACX,GAEb,OADiBD,EAAaC,GAAtBC,KACI,EACd,EACAF,aAAAA,GAGN,C,2FCzMaa,EAAcjN,EAAAA,SACdO,EAAiB4E,EAAAA,W","sources":["helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/Flex.tsx","components/TOTPActivateModal.tsx","components/UserSettingModal.tsx","components/__generated__/UserSettingModalMutation.graphql.ts","components/__generated__/UserSettingModalQuery.graphql.ts","hooks/index.ts","hooks/reactQueryAlias.tsx"],"sourcesContent":["function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  }\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === \"skipOnClient\" &&\n      directive.argumentName === \"if\"\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === \"true\")\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, \"\");\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            \"\"\n          )\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith(\"$\") &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, \"g\");\n        query = query.replace(pattern, \"\");\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","import {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from \"relay-runtime\";\n// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from \"./helper/graphql-transformer\";\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || \"\",\n    variables\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    \"POST\",\n    \"/admin/gql\",\n    reqBody\n  );\n\n  //@ts-ignore\n  const result = await globalThis.backendaiclient?._wrapWithPromise(\n    reqInfo,\n    false,\n    null,\n    10000,\n    0\n  );\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { RelayEnvironmentProvider } from \"react-relay\";\nimport { StyleProvider, createCache } from \"@ant-design/cssinjs\";\nimport { ConfigProvider } from \"antd\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactWebComponentProps } from \"../helper/react-to-webcomponent\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\n\nimport en_US from \"antd/locale/en_US\";\nimport ko_KR from \"antd/locale/ko_KR\";\nimport { RelayEnvironment } from \"../RelayEnvironment\";\nimport { useCustomThemeConfig } from \"../helper/customThemeConfig\";\n\n// @ts-ignore\nimport rawFixAntCss from \"../fix_antd.css?raw\";\nimport { BrowserRouter, useNavigate } from \"react-router-dom\";\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps[\"value\"];\n  dispatchEvent: ReactWebComponentProps[\"dispatchEvent\"];\n  moveTo: (path: string) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: \"/resources/i18n/{{lng}}.json\",\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get(\"current_language\") || \"en\",\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get(\"current_language\")\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || \"en\";\n      i18n?.changeLanguage(lang);\n    };\n    window.addEventListener(\"langChanged\", handler);\n    return () => window.removeEventListener(\"langChanged\", handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path: string) => {\n        dispatchEvent(\"moveTo\", { path });\n      },\n    };\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      if (triggerNode?.parentNode) {\n                        return triggerNode.parentNode;\n                      }\n                      return shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={\"ko\" === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <StyleProvider container={shadowRoot} cache={cache}>\n                      <Suspense fallback=\"\">\n                        <BrowserRouter>\n                          <RoutingEventHandler />\n                          {children}\n                        </BrowserRouter>\n                      </Suspense>\n                    </StyleProvider>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener(\"react-navigate\", handleNavigate);\n\n    return () => {\n      document.removeEventListener(\"react-navigate\", handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import { theme } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\n\nexport interface FlexProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"dir\">,\n    PropsWithChildren {\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  justify?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  // | \"evenly\";\n  align?: \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n  gap?: number | \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nconst Flex: React.FC<FlexProps> = ({\n  direction = \"row\",\n  wrap = \"nowrap\",\n  justify = \"flex-start\",\n  align = \"center\",\n  gap = 0,\n  style,\n  children,\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferConst = [justify, align];\n  const transferConstStyle = transferConst?.map((el) => {\n    let tempTxt;\n    switch (el) {\n      case \"start\":\n        tempTxt = \"flex-start\";\n        break;\n      case \"end\":\n        tempTxt = \"flex-end\";\n        break;\n      case \"between\":\n        tempTxt = \"space-between\";\n        break;\n      case \"around\":\n        tempTxt = \"space-around\";\n        break;\n      default:\n        tempTxt = el;\n        break;\n    }\n\n    return tempTxt;\n  });\n  const flexStyle: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: direction,\n    flexWrap: wrap,\n    justifyContent: transferConstStyle[0],\n    alignItems: transferConstStyle[1],\n    ...style,\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"stretch\",\n        backgroundColor: \"transparent\",\n        border: \"0 solid black\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexBasis: \"auto\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        listStyle: \"none\",\n        margin: 0,\n        minHeight: 0,\n        minWidth: 0,\n        padding: 0,\n        position: \"relative\",\n        textDecoration: \"none\",\n        gap:\n          // @ts-ignore\n          typeof gap === \"string\" ? token[\"padding\" + gap.toUpperCase()] : gap,\n        ...flexStyle,\n      }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","import React, { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport {\n  Modal,\n  ModalProps,\n  QRCode,\n  Typography,\n  Input,\n  theme,\n  Form,\n  message,\n  Spin,\n} from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport { useTanMutation } from \"../hooks/reactQueryAlias\";\nimport Flex from \"./Flex\";\n\ntype TOTPActivateFormInput = {\n  otp: number;\n};\n\ninterface Props extends ModalProps {\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst TOTPActivateModal: React.FC<Props> = ({\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<TOTPActivateFormInput>();\n\n  const baiClient = useSuspendedBackendaiClient();\n  let { data, isLoading, refetch } = useQuery(\"totp\", () => {\n    return modalProps.open ? baiClient.initialize_totp() : null;\n  });\n\n  useEffect(() => {\n    refetch();\n  }, [refetch, modalProps.open]);\n\n  const mutationToActivateTotp = useTanMutation({\n    mutationFn: (values: TOTPActivateFormInput) => {\n      return baiClient.activate_totp(values.otp);\n    },\n  });\n\n  const _onOk = () => {\n    form.validateFields().then((values) => {\n      mutationToActivateTotp.mutate(values, {\n        onSuccess: () => {\n          message.success(t(\"totp.TotpSetupCompleted\"));\n          onRequestClose(true);\n        },\n        onError: () => {\n          message.error(t(\"totp.InvalidTotpCode\"));\n        },\n      });\n      new Promise((resolve, reject) => {}).then(() => {\n        onRequestClose(true);\n      });\n    });\n  };\n\n  return (\n    <Modal\n      title={t(\"webui.menu.SetupTotp\")}\n      maskClosable={false}\n      onOk={_onOk}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      style={{ zIndex: 1 }}\n      {...modalProps}\n    >\n      {!data ? (\n        <Flex justify=\"center\" direction=\"row\">\n          <Spin />\n        </Flex>\n      ) : (\n        <Form\n          preserve={false}\n          form={form}\n          validateTrigger={[\"onChange\", \"onBlur\"]}\n        >\n          {t(\"totp.TypeInAuthKey\")}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <QRCode\n              value={data?.totp_uri}\n              status={isLoading ? \"loading\" : undefined}\n            />\n          </Flex>\n          {t(\"totp.ScanQRToEnable\")}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Typography.Text copyable code>\n              {data?.totp_key}\n            </Typography.Text>\n          </Flex>\n          {t(\"totp.TypeInAuthKey\")}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Form.Item required name=\"otp\">\n              <Input\n                maxLength={6}\n                allowClear\n                placeholder=\"000000\"\n                style={{ maxWidth: 120 }}\n              />\n            </Form.Item>\n          </Flex>\n        </Form>\n      )}\n    </Modal>\n  );\n};\n\nexport default TOTPActivateModal;\n","import React, { useDeferredValue } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useMutation } from \"react-relay\";\nimport { useQuery } from \"react-query\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport {\n  UserSettingModalQuery,\n  UserSettingModalQuery$data,\n} from \"./__generated__/UserSettingModalQuery.graphql\";\nimport { UserSettingModalMutation } from \"./__generated__/UserSettingModalMutation.graphql\";\n\nimport {\n  Modal,\n  ModalProps,\n  Form,\n  Input,\n  Select,\n  Switch,\n  message,\n  Typography,\n} from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useWebComponentInfo } from \"./DefaultProviders\";\nimport { useToggle } from \"ahooks\";\nimport { useSuspendedBackendaiClient, useUpdatableState } from \"../hooks\";\nimport { useTanMutation } from \"../hooks/reactQueryAlias\";\nimport TOTPActivateModal from \"./TOTPActivateModal\";\nimport _ from \"lodash\";\n\ntype User = UserSettingModalQuery$data[\"user\"];\n\ntype UserStatus = {\n  [key: string]: string;\n};\n\ntype UserRole = {\n  [key: string]: string[];\n};\n\ninterface Props extends ModalProps {\n  extraFetchKey?: string;\n}\n\nconst UserSettingModal: React.FC<Props> = ({\n  extraFetchKey = \"\",\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    userEmail: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || \"\");\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      userEmail: \"\",\n    };\n  }\n  const { open, userEmail } = parsedValue;\n\n  const [form] = Form.useForm<User>();\n\n  const userStatus: UserStatus = {\n    active: \"Active\",\n    inactive: \"Inactive\",\n    \"before-verification\": \"Before Verification\",\n    deleted: \"Deleted\",\n  };\n\n  const permissionRangeOfRoleChanges: UserRole = {\n    superadmin: [\"superadmin\", \"admin\", \"user\", \"monitor\"],\n    admin: [\"admin\", \"user\", \"monitor\"],\n  };\n\n  const [fetchKey, updateFetchKey] = useUpdatableState(\"initial-fetch\");\n  const deferredMergedFetchKey = useDeferredValue(fetchKey + extraFetchKey);\n\n  const baiClient = useSuspendedBackendaiClient();\n  let totpSupported = false;\n  let {\n    data: isManagerSupportingTOTP,\n    isLoading: isLoadingManagerSupportingTOTP,\n  } = useQuery(\n    \"isManagerSupportingTOTP\",\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    }\n  );\n  totpSupported = baiClient?.supports(\"2FA\") && isManagerSupportingTOTP;\n\n  const { user, loggedInUser } = useLazyLoadQuery<UserSettingModalQuery>(\n    graphql`\n      query UserSettingModalQuery(\n        $email: String\n        $isTOTPSupported: Boolean!\n        $loggedInUserEmail: String\n      ) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          totp_activated @include(if: $isTOTPSupported)\n        }\n        loggedInUser: user(email: $loggedInUserEmail) {\n          role\n        }\n      }\n    `,\n    {\n      email: userEmail,\n      isTOTPSupported: totpSupported ?? false,\n      loggedInUserEmail: baiClient?.email ?? \"\",\n    },\n    {\n      fetchKey: deferredMergedFetchKey,\n      fetchPolicy: \"network-only\",\n    }\n  );\n\n  const [commitModifyUserSetting, isInFlightCommitModifyUserSetting] =\n    useMutation<UserSettingModalMutation>(\n      graphql`\n        mutation UserSettingModalMutation(\n          $email: String!\n          $props: ModifyUserInput!\n        ) {\n          modify_user(email: $email, props: $props) {\n            ok\n            msg\n          }\n        }\n      `\n    );\n\n  const mutationToRemoveTotp = useTanMutation({\n    mutationFn: (email: string) => {\n      return baiClient.remove_totp(email);\n    },\n  });\n\n  const [isOpenTOTPActivateModal, { toggle: toggleTOTPActivateModal }] =\n    useToggle(false);\n\n  const _onOk = () => {\n    form.validateFields().then(async (values) => {\n      let input = { ...values };\n      delete input.email;\n      input = _.omitBy(input, (item) => item === undefined || item === \"\");\n\n      // TOTP setting\n      if (!totpSupported) {\n        delete input?.totp_activated;\n      } else if (\n        !values?.totp_activated &&\n        values?.totp_activated !== user?.totp_activated\n      ) {\n        mutationToRemoveTotp.mutate(user?.email || \"\", {\n          onError: (err) => {\n            console.log(err);\n          },\n        });\n      }\n\n      commitModifyUserSetting({\n        variables: {\n          email: values?.email || \"\",\n          props: input,\n        },\n        onCompleted(res) {\n          if (res?.modify_user?.ok) {\n            message.success(t(\"environment.SuccessfullyModified\"));\n            updateFetchKey(values?.email + new Date().toISOString());\n          } else {\n            message.error(res?.modify_user?.msg);\n          }\n          dispatchEvent(\"ok\", null);\n        },\n        onError(err) {\n          message.error(err?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <Modal\n      open={open}\n      onCancel={() => {\n        dispatchEvent(\"cancel\", null);\n      }}\n      centered\n      title={t(\"credential.ModifyUserDetail\")}\n      destroyOnClose={true}\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitModifyUserSetting}\n      {...modalProps}\n    >\n      <Form\n        preserve={false}\n        form={form}\n        labelCol={{ span: 10 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        style={{ marginBottom: 40, marginTop: 20 }}\n        initialValues={{ ...user }}\n      >\n        <Form.Item name=\"email\" label={t(\"credential.UserID\")}>\n          <Input disabled />\n        </Form.Item>\n        <Form.Item name=\"username\" label={t(\"credential.UserName\")}>\n          <Input placeholder={t(\"maxLength.64chars\")} />\n        </Form.Item>\n        <Form.Item name=\"full_name\" label={t(\"credential.FullName\")}>\n          <Input placeholder={t(\"maxLength.64chars\")} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={t(\"general.NewPassword\")}\n          rules={[\n            {\n              pattern:\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[\\^\\-_])[A-Za-z\\d^\\-_]{8,}$/,\n              message: t(\"webui.menu.InvalidPasswordMessage\"),\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"password_confirm\"\n          dependencies={[\"password\"]}\n          label={t(\"webui.menu.NewPasswordAgain\")}\n          rules={[\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value && !!getFieldValue(\"password\")) {\n                  return Promise.reject(\n                    new Error(t(\"webui.menu.PleaseConfirmYourPassword\"))\n                  );\n                }\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(t(\"environment.PasswordsDoNotMatch\"))\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item name=\"description\" label={t(\"credential.Description\")}>\n          <Input.TextArea placeholder={t(\"maxLength.500chars\")} />\n        </Form.Item>\n        <Form.Item name=\"status\" label={t(\"credential.UserStatus\")}>\n          <Select\n            options={_.map(userStatus, (value, key) => {\n              return {\n                value: key,\n                label: value,\n              };\n            })}\n          />\n        </Form.Item>\n        {!!user?.role &&\n          !!loggedInUser?.role &&\n          loggedInUser.role in permissionRangeOfRoleChanges && (\n            <Form.Item name=\"role\" label={t(\"credential.Role\")}>\n              <Select\n                options={_.map(\n                  permissionRangeOfRoleChanges[loggedInUser.role],\n                  (item) => {\n                    return {\n                      value: item,\n                      label: item,\n                    };\n                  }\n                )}\n              />\n            </Form.Item>\n          )}\n        <Form.Item\n          name=\"need_password_change\"\n          label={t(\"credential.DescRequirePasswordChange\")}\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n        {!!totpSupported && (\n          <Form.Item\n            name=\"totp_activated\"\n            label={t(\"webui.menu.TotpActivated\")}\n            valuePropName=\"checked\"\n            extra={\n              user?.email !== baiClient?.email && (\n                <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                  {t(\"credential.AdminCanOnlyRemoveTotp\")}\n                </Typography.Text>\n              )\n            }\n          >\n            <Switch\n              loading={isLoadingManagerSupportingTOTP}\n              disabled={\n                user?.email !== baiClient?.email && !user?.totp_activated\n              }\n              onChange={(checked: boolean) => {\n                if (\n                  !!checked &&\n                  !user?.totp_activated &&\n                  user?.email === baiClient?.email\n                ) {\n                  toggleTOTPActivateModal();\n                }\n              }}\n            />\n          </Form.Item>\n        )}\n      </Form>\n      {!!totpSupported && (\n        <TOTPActivateModal\n          open={isOpenTOTPActivateModal}\n          onRequestClose={() => {\n            toggleTOTPActivateModal();\n          }}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default UserSettingModal;\n","/**\n * @generated SignedSource<<f508749e948ae6de70c27b55991b5473>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyUserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null> | null;\n  description?: string | null;\n  domain_name?: string | null;\n  full_name?: string | null;\n  group_ids?: ReadonlyArray<string | null> | null;\n  is_active?: boolean | null;\n  need_password_change?: boolean | null;\n  password?: string | null;\n  resource_policy?: string | null;\n  role?: string | null;\n  status?: string | null;\n  totp_activated?: boolean | null;\n  username?: string | null;\n};\nexport type UserSettingModalMutation$variables = {\n  email: string;\n  props: ModifyUserInput;\n};\nexport type UserSettingModalMutation$data = {\n  readonly modify_user: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type UserSettingModalMutation = {\n  response: UserSettingModalMutation$data;\n  variables: UserSettingModalMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"email\",\n        \"variableName\": \"email\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyUser\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_user\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"bad49e40f9c9724ee1e382e1043b76b1\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserSettingModalMutation(\\n  $email: String!\\n  $props: ModifyUserInput!\\n) {\\n  modify_user(email: $email, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"53b17db4de6a731a632b436ce407dd45\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2700097481a739759010fb84c0a091eb>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserSettingModalQuery$variables = {\n  email?: string | null;\n  isTOTPSupported: boolean;\n  loggedInUserEmail?: string | null;\n};\nexport type UserSettingModalQuery$data = {\n  readonly loggedInUser: {\n    readonly role: string | null;\n  } | null;\n  readonly user: {\n    readonly description: string | null;\n    readonly domain_name: string | null;\n    readonly email: string | null;\n    readonly full_name: string | null;\n    readonly groups: ReadonlyArray<{\n      readonly id: any | null;\n      readonly name: string | null;\n    } | null> | null;\n    readonly need_password_change: boolean | null;\n    readonly role: string | null;\n    readonly status: string | null;\n    readonly totp_activated?: boolean | null;\n    readonly username: string | null;\n  } | null;\n};\nexport type UserSettingModalQuery = {\n  response: UserSettingModalQuery$data;\n  variables: UserSettingModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isTOTPSupported\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"loggedInUserEmail\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"condition\": \"isTOTPSupported\",\n  \"kind\": \"Condition\",\n  \"passingValue\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ]\n},\nv13 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"loggedInUserEmail\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"loggedInUser\",\n        \"args\": (v13/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v9/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"loggedInUser\",\n        \"args\": (v13/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v9/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"6f1969795d5cbeabe38da2709046b3aa\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSettingModalQuery(\\n  $email: String\\n  $isTOTPSupported: Boolean!\\n  $loggedInUserEmail: String\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    totp_activated @include(if: $isTOTPSupported)\\n    id\\n  }\\n  loggedInUser: user(email: $loggedInUserEmail) {\\n    role\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"73454ef0fa8c68569f80207fc3d3a0a4\";\n\nexport default node;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener(\"backend-ai-group-changed\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-group-changed\", listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: \"backendai-metadata-for-suspense\",\n    queryFn: () => {\n      return fetch(\"resources/image_metadata.json\")\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          }\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: \"\",\n        tags: [],\n      };\n    }\n    const specs = imageName.split(\"/\");\n\n    const [key, tag] = (specs[2] || specs[1]).split(\":\");\n    const tags = tag.split(\"-\");\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = \"resources/icons/\") => {\n        if (!imageName) return \"default.png\";\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key].icon !== undefined\n            ? metadata?.imageInfo[key].icon\n            : \"default.png\")\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n","import { useQuery, useMutation } from \"react-query\";\n\nexport const useTanQuery = useQuery;\nexport const useTanMutation = useMutation;\n"],"names":["removeSkipOnClientDirective","query","variables","filteredVariables","_objectSpread","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","fetchFn","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","text","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","subscribeFn","store","Store","RecordSource","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","document","addEventListener","removeEventListener","children","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","_jsx","_Fragment","RelayEnvironmentProvider","environment","_jsxs","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","StyleProvider","container","Suspense","fallback","BrowserRouter","_ref$direction","direction","_ref$wrap","_ref$justify","justify","_ref$align","align","_ref$gap","gap","style","restProps","_objectWithoutProperties","_excluded","token","transferConst","transferConstStyle","map","el","tempTxt","flexStyle","display","flexDirection","flexWrap","justifyContent","alignItems","backgroundColor","border","boxSizing","flexBasis","flexShrink","listStyle","margin","minHeight","minWidth","padding","position","textDecoration","toUpperCase","onRequestClose","modalProps","t","_Form$useForm","Form","form","baiClient","useSuspendedBackendaiClient","_useQuery","useQuery","open","initialize_totp","data","isLoading","refetch","mutationToActivateTotp","useTanMutation","mutationFn","values","activate_totp","otp","Modal","title","maskClosable","onOk","validateFields","then","mutate","onSuccess","message","onError","Promise","resolve","reject","onCancel","zIndex","preserve","validateTrigger","Flex","marginSM","QRCode","totp_uri","status","undefined","Typography","copyable","code","totp_key","required","name","Input","maxLength","allowClear","placeholder","maxWidth","Spin","_totpSupported","_baiClient$email","parsedValue","_ref$extraFetchKey","extraFetchKey","_useWebComponentInfo","JSON","parse","error","userEmail","totpSupported","_parsedValue","permissionRangeOfRoleChanges","superadmin","admin","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","deferredMergedFetchKey","useDeferredValue","isManagerSupportingTOTP","isLoadingManagerSupportingTOTP","supports","_useLazyLoadQuery","useLazyLoadQuery","_UserSettingModalQuery","require","email","isTOTPSupported","loggedInUserEmail","fetchPolicy","user","loggedInUser","_useMutation","useMutation","_UserSettingModalMutation","_useMutation2","commitModifyUserSetting","isInFlightCommitModifyUserSetting","mutationToRemoveTotp","remove_totp","_useToggle","useToggle","_useToggle2","isOpenTOTPActivateModal","toggleTOTPActivateModal","toggle","centered","destroyOnClose","_ref2","input","_input","_","item","totp_activated","err","console","log","props","onCompleted","res","_res$modify_user","_res$modify_user2","modify_user","ok","Date","toISOString","msg","confirmLoading","labelCol","span","wrapperCol","marginBottom","marginTop","initialValues","label","disabled","rules","dependencies","_ref3","getFieldValue","validator","Error","Select","options","active","inactive","deleted","key","role","valuePropName","Switch","extra","type","fontSize","loading","onChange","checked","TOTPActivateModal","node","v0","v1","hash","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","initialValue","_useState3","_useState4","setValue","newValue","useDateISOState","useCurrentDomainValue","_config","domainName","useCurrentProjectValue","_useState5","current_group","id","groupIds","_useState6","project","_setProject","listener","newProjectName","useAnonymousBackendaiClient","api_endpoint","clientConfig","BackendAIClientConfig","BackendAIClient","queryKey","queryFn","ready","useBackendaiImageMetaData","metadata","fetch","response","json","getImageMeta","imageName","tags","specs","_split","_split2","getImageAliasName","imageInfo","getImageIcon","icon","getImageTags","getBaseVersion","getBaseImage","useTanQuery"],"sourceRoot":""}