{"version":3,"file":"static/js/6465.163c7c45.chunk.js","mappings":"uLAGO,MAAMA,EAIRC,IAA8B,IAA7B,KAAEC,EAAI,OAAEC,EAAM,MAAEC,GAAOH,EAC3B,MAAMI,EAAOC,EAAAA,GAAkBC,MAAU,OAAJL,QAAI,IAAJA,EAAAA,EAAQ,QAE7C,OACEM,EAAAA,EAAAA,KAAA,OACEC,MAAM,6BACNC,QAAQ,YACRP,OAAQA,EACRC,MAAOA,EACPO,KAAK,MACLC,wBAAyB,CAAEC,OAAQR,EAAKS,OACxC,C,uECsBN,MAEaC,EAAaA,KAAO,IAADC,EAC9B,MAAOC,EAAKC,IAAeC,EAAAA,EAAAA,IAAkB,UAErCC,KAAMC,EAAU,UAAEC,IAAcC,EAAAA,EAAAA,IAAsB,CAC5DC,SAAU,CAAC,YAAaP,GACxBQ,QAASA,IACAC,MAAM,4BAA4BC,MAAMC,GAC7CA,EAASC,SAGbC,UAZqB,QAevB,MAAO,CACLC,OAA0B,QAApBf,EAAY,OAAVK,QAAU,IAAVA,OAAU,EAAVA,EAAYU,cAAM,IAAAf,EAAAA,EAAI,GAC9BM,YACAU,SAASC,EAAAA,EAAAA,cAAY,IAAMf,KAAe,CAACA,IAC5C,C,uLCnDH,MAAMgB,GAAYC,EAAAA,EAAAA,KAAalC,IAAqB,IAApB,IAAEmC,EAAG,MAAEC,GAAOpC,EAC5C,MAAO,CACLqC,SAAUF,CAAG;;8BAEaC,EAAME;;;;;MAMhCC,KAAMJ,CAAG;;;;;;;;;MAUV,KAGG,KAAEK,GAASC,EAAAA,EAEXC,EAAcC,IAAoC,IAAnC,MAAEC,GAA2BD,EAChD,MAAME,EAAOD,EAAML,KAAKM,MAAQ,IAC1B,OAAEC,GAAWb,IACnB,OACE1B,EAAAA,EAAAA,KAACkC,EAAAA,EAAI,CAACM,WAAS,EAAAC,UACbC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAU,SACVC,MAAM,UACNC,IAAI,KACJC,QAAQ,UACRC,MAAO,CAAEC,UAAW,SAAUR,SAAA,EAE9BzC,EAAAA,EAAAA,KAACiC,EAAI,CACHiB,MAAOb,EAAML,KAAKkB,MAClBC,QACEnD,EAAAA,EAAAA,KAACR,EAAAA,EAAe,CACdE,KAAM2C,EAAML,KAAKmB,OACjBxD,OAAQ,IACRC,MAAO,MAGXwD,YAAaf,EAAML,KAAKqB,aACxBC,UAAWf,EAAOP,QAEpBU,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAU,MACVG,QAAQ,QACRC,MAAO,CAAEpD,MAAO,OAAQ2D,WAAY,GACpCT,IAAK,EACLU,KAAK,OAAMf,SAAA,EAEXzC,EAAAA,EAAAA,KAACyD,EAAAA,EAAG,CAAsBC,MAAO,iBAAiBjB,SAC/CJ,EAAMsB,UADCtB,EAAMsB,UAGfrB,EAAKsB,KAAI,CAACC,EAAKC,KACd9D,EAAAA,EAAAA,KAACyD,EAAAA,EAAG,CAAAhB,SAAcoB,GAARC,YAIX,EAILC,EAAkBC,IAMjB,IANkB,OACvBzC,EAAM,aACN0C,GAIDD,EACC,MAAM,OAAEzB,GAAWb,IAEnB,OACE1B,EAAAA,EAAAA,KAACkE,EAAAA,EAAI,CACHZ,UAAWf,EAAOT,SAClBqC,KAAM,CAAEC,OAAQ,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAK,GAC5DC,WAAYpD,EACZqD,WAAavC,IACXrC,EAAAA,EAAAA,KAACkE,EAAAA,EAAKW,KAAI,CACR7B,MAAO,CAAErD,OAAQ,QACjBmF,QAASA,IAAMb,EAAa5B,GAAOI,UAEnCzC,EAAAA,EAAAA,KAACmC,EAAW,CAACE,MAAOA,OAGlB,EA2BZ,EAvB8B0C,KAC5B,MAAM,MAAElD,GAAUmD,EAAAA,EAAMC,YAClB,OAAE1D,IAAWhB,EAAAA,EAAAA,KACb2E,GAAgBC,EAAAA,EAAAA,MAEtB,OACEnF,EAAAA,EAAAA,KAACoF,EAAAA,SAAQ,CACPC,UAAUrF,EAAAA,EAAAA,KAACsF,EAAAA,EAAQ,CAACC,QAAM,EAACvC,MAAO,CAAEwC,QAAS3D,EAAM4D,aAAgBhD,UAEnEzC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAI,CAACC,UAAU,SAASC,MAAM,UAAUE,QAAQ,SAASD,IAAI,KAAIL,UAChEzC,EAAAA,EAAAA,KAAC+D,EAAe,CACdxC,OAAQA,EACR0C,aAAe5B,IACb6C,EACE,oBAAoB7C,EAAMqD,uBAAuBrD,EAAMsD,KACxD,OAIE,C","sources":["components/FluentEmojiIcon.tsx","hooks/useAIAgent.ts","pages/AIAgentPage.tsx"],"sourcesContent":["import * as fluentEmoji from '@iconify-json/fluent-emoji-flat';\nimport React from 'react';\n\nexport const FluentEmojiIcon: React.FC<{\n  name?: string;\n  height?: number;\n  width?: number;\n}> = ({ name, height, width }) => {\n  const icon = fluentEmoji.icons.icons[name ?? 'pure'];\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      height={height}\n      width={width}\n      role=\"img\"\n      dangerouslySetInnerHTML={{ __html: icon.body }}\n    />\n  );\n};\n","import { useUpdatableState } from '.';\nimport { useTanQuery } from './reactQueryAlias';\nimport { useCallback } from 'react';\n\nexport interface AIAgentMeta {\n  title: string;\n  avatar?: string;\n  background?: string;\n  descriptions?: string;\n  tags?: string[];\n}\n\nexport interface AIAgentConfig {\n  system_prompt: string;\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgentParams {\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stop?: string | string[];\n  [key: string]: any; // for additionalProperties: true\n}\n\nexport interface AIAgent {\n  id: string;\n  endpoint: string;\n  endpoint_id: string;\n  config: AIAgentConfig;\n  meta: AIAgentMeta;\n  params?: AIAgentParams;\n}\n\nexport interface AIAgents {\n  agents: AIAgent[];\n}\n\nconst TIMEOUT_24_HOURS = 24 * 60 * 60 * 1000;\n\nexport const useAIAgent = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data: agentsData, isLoading } = useTanQuery<AIAgents>({\n    queryKey: ['useAgents', key],\n    queryFn: () => {\n      return fetch('resources/ai-agents.json').then((response) =>\n        response.json(),\n      );\n    },\n    staleTime: TIMEOUT_24_HOURS, // 24 hours\n  });\n\n  return {\n    agents: agentsData?.agents ?? [],\n    isLoading,\n    refresh: useCallback(() => checkUpdate(), [checkUpdate]),\n  };\n};\n","import Flex from '../components/Flex';\nimport { FluentEmojiIcon } from '../components/FluentEmojiIcon';\nimport { useWebUINavigate } from '../hooks';\nimport { AIAgent, useAIAgent } from '../hooks/useAIAgent';\nimport { Card, List, Skeleton, Tag, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport React, { Suspense } from 'react';\n\nconst useStyles = createStyles(({ css, token }) => {\n  return {\n    cardList: css`\n      .and-col {\n        height: calc(100% - ${token.marginMD});\n      }\n      .ant-tag {\n        margin-inline-end: 0;\n      }\n    `,\n    meta: css`\n      .ant-card-meta-description {\n        max-height: 6.4em; // Adjusted for 4 lines\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .ant-card-meta-title {\n        white-space: normal;\n      }\n    `,\n  };\n});\n\nconst { Meta } = Card;\n\nconst AIAgentCard = ({ agent }: { agent: AIAgent }) => {\n  const tags = agent.meta.tags || [];\n  const { styles } = useStyles();\n  return (\n    <Card hoverable>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        gap=\"xs\"\n        justify=\"between\"\n        style={{ minHeight: '200px' }}\n      >\n        <Meta\n          title={agent.meta.title}\n          avatar={\n            <FluentEmojiIcon\n              name={agent.meta.avatar}\n              height={150}\n              width={150}\n            />\n          }\n          description={agent.meta.descriptions}\n          className={styles.meta}\n        />\n        <Flex\n          direction=\"row\"\n          justify=\"start\"\n          style={{ width: '100%', flexShrink: 1 }}\n          gap={6}\n          wrap=\"wrap\"\n        >\n          <Tag key={agent.endpoint} color={'orange-inverse'}>\n            {agent.endpoint}\n          </Tag>\n          {tags.map((tag, index) => (\n            <Tag key={index}>{tag}</Tag>\n          ))}\n        </Flex>\n      </Flex>\n    </Card>\n  );\n};\n\nconst AIAgentCardList = ({\n  agents,\n  onClickAgent,\n}: {\n  agents: AIAgent[];\n  onClickAgent: (agent: AIAgent) => void;\n}) => {\n  const { styles } = useStyles();\n\n  return (\n    <List\n      className={styles.cardList}\n      grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 2, xl: 3, xxl: 4 }}\n      dataSource={agents}\n      renderItem={(agent) => (\n        <List.Item\n          style={{ height: '100%' }}\n          onClick={() => onClickAgent(agent)}\n        >\n          <AIAgentCard agent={agent} />\n        </List.Item>\n      )}\n    ></List>\n  );\n};\n\nconst AIAgentPage: React.FC = () => {\n  const { token } = theme.useToken();\n  const { agents } = useAIAgent();\n  const webuiNavigate = useWebUINavigate();\n\n  return (\n    <Suspense\n      fallback={<Skeleton active style={{ padding: token.paddingMD }} />}\n    >\n      <Flex direction=\"column\" align=\"stretch\" justify=\"center\" gap=\"lg\">\n        <AIAgentCardList\n          agents={agents}\n          onClickAgent={(agent) => {\n            webuiNavigate(\n              `/chat?endpointId=${agent.endpoint_id}&agentId=${agent.id}`,\n            );\n          }}\n        />\n      </Flex>\n    </Suspense>\n  );\n};\n\nexport default AIAgentPage;\n"],"names":["FluentEmojiIcon","_ref","name","height","width","icon","fluentEmoji","icons","_jsx","xmlns","viewBox","role","dangerouslySetInnerHTML","__html","body","useAIAgent","_agentsData$agents","key","checkUpdate","useUpdatableState","data","agentsData","isLoading","useTanQuery","queryKey","queryFn","fetch","then","response","json","staleTime","agents","refresh","useCallback","useStyles","createStyles","css","token","cardList","marginMD","meta","Meta","Card","AIAgentCard","_ref2","agent","tags","styles","hoverable","children","_jsxs","Flex","direction","align","gap","justify","style","minHeight","title","avatar","description","descriptions","className","flexShrink","wrap","Tag","color","endpoint","map","tag","index","AIAgentCardList","_ref3","onClickAgent","List","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","onClick","AIAgentPage","theme","useToken","webuiNavigate","useWebUINavigate","Suspense","fallback","Skeleton","active","padding","paddingMD","endpoint_id","id"],"sourceRoot":""}