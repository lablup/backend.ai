{"version":3,"file":"static/js/3688.4584bc99.chunk.js","mappings":"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","sources":["components/ComputeSessionNodeItems/__generated__/ContainerLogModalWithLazyQueryLoaderQuery.graphql.ts","components/ComputeSessionNodeItems/ContainerLogModalWithLazyQueryLoader.tsx","components/SessionDetailAndContainerLogOpenerLegacy.tsx"],"sourcesContent":["/**\n * @generated SignedSource<<9f0763d8736dab4afda1ccb386b20cc8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ContainerLogModalWithLazyQueryLoaderQuery$variables = {\n  project_id: string;\n  sessionId: any;\n};\nexport type ContainerLogModalWithLazyQueryLoaderQuery$data = {\n  readonly compute_session_node: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerLogModalFragment\">;\n  } | null | undefined;\n};\nexport type ContainerLogModalWithLazyQueryLoaderQuery = {\n  response: ContainerLogModalWithLazyQueryLoaderQuery$data;\n  variables: ContainerLogModalWithLazyQueryLoaderQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"sessionId\"\n},\nv2 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"sessionId\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project_id\",\n    \"variableName\": \"project_id\"\n  }\n],\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"row_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ContainerLogModalWithLazyQueryLoaderQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v2/*: any*/),\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_node\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ContainerLogModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ContainerLogModalWithLazyQueryLoaderQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v2/*: any*/),\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v3/*: any*/),\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"status\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"access_key\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"KernelConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"kernel_nodes\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"KernelEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"KernelNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v4/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"container_id\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cluster_idx\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cluster_role\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"7b98b0ea1543062a5dec07d96bbad320\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ContainerLogModalWithLazyQueryLoaderQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ContainerLogModalWithLazyQueryLoaderQuery(\\n  $sessionId: GlobalIDField!\\n  $project_id: UUID!\\n) {\\n  compute_session_node(id: $sessionId, project_id: $project_id) {\\n    ...ContainerLogModalFragment\\n    id\\n  }\\n}\\n\\nfragment ContainerLogModalFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  name\\n  status\\n  access_key\\n  kernel_nodes {\\n    edges {\\n      node {\\n        id\\n        row_id\\n        container_id\\n        cluster_idx\\n        cluster_role\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"6c9b5934d5fea075e571c13b1c070bd1\";\n\nexport default node;\n","import { useCurrentProjectValue } from '../../hooks/useCurrentProject';\nimport ContainerLogModal from './ContainerLogModal';\nimport { ContainerLogModalWithLazyQueryLoaderQuery } from './__generated__/ContainerLogModalWithLazyQueryLoaderQuery.graphql';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst ContainerLogModalWithLazyQueryLoader: React.FC<{\n  sessionId?: string;\n  open: boolean;\n  loading: boolean;\n  onRequestClose?: () => void;\n}> = ({ sessionId, open, loading, onRequestClose }) => {\n  const currentProject = useCurrentProjectValue();\n  const { compute_session_node } =\n    useLazyLoadQuery<ContainerLogModalWithLazyQueryLoaderQuery>(\n      graphql`\n        query ContainerLogModalWithLazyQueryLoaderQuery(\n          $sessionId: GlobalIDField!\n          $project_id: UUID!\n        ) {\n          compute_session_node(id: $sessionId, project_id: $project_id) {\n            ...ContainerLogModalFragment\n          }\n        }\n      `,\n      {\n        sessionId,\n        project_id: currentProject.id,\n      },\n      {\n        fetchPolicy: sessionId ? 'network-only' : 'store-only',\n      },\n    );\n\n  return (\n    <ContainerLogModal\n      sessionFrgmt={compute_session_node || null}\n      open={open}\n      loading={loading}\n      onCancel={() => {\n        onRequestClose && onRequestClose();\n      }}\n    />\n  );\n};\n\nexport default ContainerLogModalWithLazyQueryLoader;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport ContainerLogModalWithLazyQueryLoader from './ComputeSessionNodeItems/ContainerLogModalWithLazyQueryLoader';\nimport SessionDetailDrawer from './SessionDetailDrawer';\nimport { useState, useEffect, useTransition } from 'react';\nimport { useQueryParam, StringParam } from 'use-query-params';\n\nconst SessionDetailAndContainerLogOpenerLegacy = () => {\n  const [sessionId, setSessionId] = useQueryParam('sessionDetail', StringParam);\n  const [containerLogModalSessionId, setContainerLogModalSessionId] =\n    useState<string>();\n  const [isPendingLogModalOpen, startLogModalOpenTransition] = useTransition();\n  const baiClient = useSuspendedBackendaiClient();\n\n  useEffect(() => {\n    const handler = (e: any) => {\n      startLogModalOpenTransition(() => {\n        setContainerLogModalSessionId(e.detail);\n      });\n    };\n    document.addEventListener('bai-open-session-log', handler);\n    return () => {\n      document.removeEventListener('bai-open-session-log', handler);\n    };\n  }, [startLogModalOpenTransition, setContainerLogModalSessionId]);\n\n  const supportSessionDetailPanel = baiClient?.supports('session-node');\n\n  return (\n    <>\n      {supportSessionDetailPanel ? (\n        <SessionDetailDrawer\n          open={!sessionId}\n          sessionId={sessionId || undefined}\n          onClose={() => {\n            setSessionId(null, 'replaceIn');\n          }}\n        />\n      ) : null}\n      <ContainerLogModalWithLazyQueryLoader\n        open={!!containerLogModalSessionId || isPendingLogModalOpen}\n        loading={isPendingLogModalOpen}\n        sessionId={containerLogModalSessionId}\n        onRequestClose={() => {\n          setContainerLogModalSessionId(undefined);\n        }}\n      />\n    </>\n  );\n};\nexport default SessionDetailAndContainerLogOpenerLegacy;\n"],"names":["node","v0","v1","v2","v3","v4","hash","_ref","sessionId","open","loading","onRequestClose","currentProject","useCurrentProjectValue","compute_session_node","useLazyLoadQuery","_ContainerLogModalWithLazyQueryLoaderQuery","require","project_id","id","fetchPolicy","_jsx","ContainerLogModal","sessionFrgmt","onCancel","SessionDetailAndContainerLogOpenerLegacy","setSessionId","useQueryParam","StringParam","containerLogModalSessionId","setContainerLogModalSessionId","useState","isPendingLogModalOpen","startLogModalOpenTransition","useTransition","baiClient","useSuspendedBackendaiClient","useEffect","handler","e","detail","document","addEventListener","removeEventListener","supportSessionDetailPanel","supports","_jsxs","_Fragment","children","SessionDetailDrawer","undefined","onClose","ContainerLogModalWithLazyQueryLoader"],"sourceRoot":""}