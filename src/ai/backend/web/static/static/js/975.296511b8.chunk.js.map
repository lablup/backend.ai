{"version":3,"file":"static/js/975.296511b8.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","components/CopyableCodeText.tsx","components/EndpointStatusTag.tsx","components/ImageMetaIcon.tsx","components/ModelServiceSettingModal.tsx","components/__generated__/EndpointStatusTagFragment.graphql.ts","components/__generated__/ModelServiceSettingModal_endpoint.graphql.ts","components/__generated__/ServingRouteErrorModalFragment.graphql.ts","hooks/reactQueryAlias.tsx","components/EndpointTokenGenerationModal.tsx","components/ResourceNumber.tsx","components/ServingRouteErrorModal.tsx","components/VFolderLazyView.tsx","pages/RoutingListPage.tsx","pages/__generated__/RoutingListPageQuery.graphql.ts"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","import { Typography } from 'antd';\nimport React, { PropsWithChildren } from 'react';\n\ninterface Props extends PropsWithChildren {\n  text?: string;\n}\n\nconst CopyableCodeText: React.FC<Props> = ({ text, children }) => {\n  return (\n    <Typography.Text copyable code>\n      {text || children}\n    </Typography.Text>\n  );\n};\n\nexport default CopyableCodeText;\n","import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import { useBackendaiImageMetaData } from '../hooks';\nimport React from 'react';\n\nconst ImageMetaIcon: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n  alt?: string | null;\n}> = ({ image, style = {} }, bordered, alt = '') => {\n  const [, { getImageIcon }] = useBackendaiImageMetaData();\n\n  return (\n    <img\n      src={getImageIcon(image)}\n      style={{\n        width: '1.5em',\n        height: '1.5em',\n        ...style,\n      }}\n      alt={alt}\n    />\n  );\n};\n\nexport default React.memo(ImageMetaIcon);\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { ModelServiceSettingModal_endpoint$key } from './__generated__/ModelServiceSettingModal_endpoint.graphql';\nimport { Form, InputNumber, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  endpointFrgmt: ModelServiceSettingModal_endpoint$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface ServiceSettingFormInput {\n  desired_session_count: number;\n}\n\nconst ModelServiceSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  endpointFrgmt,\n  ...baiModalProps\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment ModelServiceSettingModal_endpoint on Endpoint {\n        endpoint_id\n        desired_session_count\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const mutationToUpdateService = useTanMutation({\n    mutationFn: (values: ServiceSettingFormInput) => {\n      const body = {\n        to: values.desired_session_count,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint?.endpoint_id}/scale`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToUpdateService.mutate(values, {\n          onSuccess: () => {\n            console.log('service updated');\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            console.log(error);\n            // TODO: show error message\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{\n        loading: mutationToUpdateService.isLoading,\n      }}\n      title={t('modelService.EditModelService')}\n      {...baiModalProps}\n    >\n      <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n        <Form\n          form={form}\n          preserve={false}\n          validateTrigger={['onChange', 'onBlur']}\n          initialValues={{\n            desired_session_count: endpoint?.desired_session_count,\n          }}\n          style={{ marginBottom: token.marginLG, marginTop: token.margin }}\n        >\n          <Form.Item\n            name=\"desired_session_count\"\n            label={t('modelService.DesiredSessionCount')}\n            rules={[\n              {\n                pattern: /^[0-9]+$/,\n                message: t('modelService.OnlyAllowsNonNegativeIntegers'),\n              },\n            ]}\n          >\n            <InputNumber type=\"number\" min={0} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelServiceSettingModal;\n","/**\n * @generated SignedSource<<8a960e7428e05bcb25f322a53888680e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null;\n  readonly status: string | null;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7fb89480050795760143361e3c0e5086>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelServiceSettingModal_endpoint$data = {\n  readonly desired_session_count: number | null;\n  readonly endpoint_id: string | null;\n  readonly \" $fragmentType\": \"ModelServiceSettingModal_endpoint\";\n};\nexport type ModelServiceSettingModal_endpoint$key = {\n  readonly \" $data\"?: ModelServiceSettingModal_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelServiceSettingModal_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"desired_session_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"881f18324b27eba6ff0fcfb83ae241d2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2765a0a6761af55c92add25ee221fd78>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingRouteErrorModalFragment$data = {\n  readonly errors: ReadonlyArray<{\n    readonly repr: string;\n  }>;\n  readonly session_id: string;\n  readonly \" $fragmentType\": \"ServingRouteErrorModalFragment\";\n};\nexport type ServingRouteErrorModalFragment$key = {\n  readonly \" $data\"?: ServingRouteErrorModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ServingRouteErrorModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ServingRouteErrorModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"InferenceSessionErrorInfo\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"errors\",\n      \"plural\": true,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"repr\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"InferenceSessionError\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a1003e0f75387e665f4407909eea5ff6\";\n\nexport default node;\n","import { useQuery, useMutation } from 'react-query';\n\nexport const useTanQuery = useQuery;\nexport const useTanMutation = useMutation;\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { Alert, DatePicker, Form, message } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// import { graphql, useFragment } from \"react-relay\";\n\ninterface EndpointTokenGenerationModalProps\n  extends Omit<BAIModalProps, 'onOK' | 'onClose'> {\n  endpoint_id: string;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface EndpointTokenGenerationInput {\n  valid_until?: number; // Unix epoch time\n}\n\nconst EndpointTokenGenerationModal: React.FC<\n  EndpointTokenGenerationModalProps\n> = ({ onRequestClose, onCancel, endpoint_id, ...baiModalProps }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const [form] = Form.useForm();\n\n  const mutationToGenerateToken = useTanMutation<\n    unknown,\n    {\n      message?: string;\n    },\n    EndpointTokenGenerationInput\n  >({\n    mutationFn: (values) => {\n      const body = {\n        valid_until: values.valid_until,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint_id}/token`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      const validUntil = values.datetime.unix();\n      mutationToGenerateToken.mutate(\n        {\n          valid_until: validUntil,\n        },\n        {\n          onSuccess: () => {\n            message.success(t('modelService.TokenGenerated'));\n            onRequestClose(true);\n          },\n          onError: (err) => {\n            if (err?.message?.includes('valid_until is older than now')) {\n              message.error(t('modelService.TokenExpiredDateError'));\n              return;\n            } else {\n              message.error(t('modelService.TokenGenerationFailed'));\n              console.log(err);\n            }\n          },\n        },\n      );\n    });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      {...baiModalProps}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okText={t('modelService.Generate')}\n      confirmLoading={mutationToGenerateToken.isLoading}\n      centered\n      title={t('modelService.GenerateNewToken')}\n    >\n      <Form\n        preserve={false}\n        labelCol={{ span: 10 }}\n        initialValues={{\n          datetime: dayjs().add(24, 'hour'),\n        }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ maxWidth: 500 }}\n        form={form}\n      >\n        <Flex direction=\"column\" gap=\"sm\" align=\"stretch\">\n          <Alert\n            type=\"info\"\n            showIcon\n            message={t('modelService.TokenExpiredDateHelp')}\n          />\n          <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n            <Form.Item\n              name=\"datetime\"\n              label={t('modelService.ExpiredDate')}\n              rules={[\n                {\n                  type: 'object' as const,\n                  required: true,\n                  message: t('modelService.PleaseSelectTime'),\n                },\n                () => ({\n                  validator(_, value) {\n                    if (value.isAfter(dayjs())) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      new Error(t('modelService.TokenExpiredDateError')),\n                    );\n                  },\n                }),\n              ]}\n            >\n              <DatePicker\n                showTime\n                format=\"YYYY-MM-DD HH:mm:ss\"\n                style={{ width: 200 }}\n              />\n            </Form.Item>\n          </Flex>\n        </Flex>\n        {/* <Flex direction=\"row\" align=\"stretch\" justify=\"end\">\n          <Tag style={{height: 30}}>{t('modelService.CurrentTime')}</Tag>\n          <TimeContainer></TimeContainer>\n        </Flex> */}\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default EndpointTokenGenerationModal;\n","import { iSizeToSize } from '../helper';\nimport Flex from './Flex';\nimport { Tooltip, Typography, theme } from 'antd';\nimport React, { ReactElement } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type ResourceTypeKey =\n  | 'cpu'\n  | 'mem'\n  | 'cuda.device'\n  | 'cuda.shares'\n  | 'rocm.device'\n  | 'tpu.device'\n  | 'ipu.device'\n  | 'atom.device'\n  | 'warboy.device';\n\nexport type ResourceOpts = {\n  shmem: number;\n};\ninterface Props {\n  type: ResourceTypeKey;\n  extra?: ReactElement;\n  opts?: ResourceOpts;\n  value: string;\n}\n\ntype ResourceTypeInfo<V> = {\n  [key in ResourceTypeKey]: V;\n};\nconst ResourceNumber: React.FC<Props> = ({\n  type,\n  value: amount,\n  extra,\n  opts,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const units: ResourceTypeInfo<string> = {\n    cpu: t('session.core'),\n    mem: 'GiB',\n    'cuda.device': 'GPU',\n    'cuda.shares': 'FGPU',\n    'rocm.device': 'GPU',\n    'tpu.device': 'TPU',\n    'ipu.device': 'IPU',\n    'atom.device': 'ATOM',\n    'warboy.device': 'Warboy',\n  };\n\n  return (\n    <Flex direction=\"row\" gap=\"xxs\">\n      <ResourceTypeIcon type={type} />\n      <Typography.Text>\n        {units[type] === 'GiB'\n          ? iSizeToSize(amount + 'b', 'g', 2).numberFixed\n          : units[type] === 'FGPU'\n          ? parseFloat(amount).toFixed(2)\n          : amount}\n      </Typography.Text>\n      <Typography.Text type=\"secondary\">{units[type]}</Typography.Text>\n      {type === 'mem' && opts?.shmem && (\n        <Typography.Text\n          type=\"secondary\"\n          style={{ fontSize: token.fontSizeSM }}\n        >\n          (SHM: {iSizeToSize(opts.shmem + 'b', 'g', 2).numberFixed}GiB)\n        </Typography.Text>\n      )}\n      {extra}\n    </Flex>\n  );\n};\n\nconst MWCIconWrap: React.FC<{ size?: number; children: string }> = ({\n  size = 16,\n  children,\n}) => {\n  return (\n    // @ts-ignore\n    <mwc-icon\n      style={{\n        '--mdc-icon-size': `${size + 2}px`,\n        width: size,\n        height: size,\n      }}\n    >\n      {children}\n      {/* @ts-ignore */}\n    </mwc-icon>\n  );\n};\ninterface AccTypeIconProps\n  extends Omit<React.ImgHTMLAttributes<HTMLImageElement>, 'src'> {\n  type: ResourceTypeKey;\n  showIcon?: boolean;\n  showUnit?: boolean;\n  showTooltip?: boolean;\n  size?: number;\n}\nexport const ResourceTypeIcon: React.FC<AccTypeIconProps> = ({\n  type,\n  size = 16,\n  showIcon = true,\n  showUnit = true,\n  showTooltip = true,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const resourceTypeIconSrcMap: ResourceTypeInfo<\n    [ReactElement | string, string]\n  > = {\n    cpu: [\n      <MWCIconWrap size={size}>developer_board</MWCIconWrap>,\n      t('session.core'),\n    ],\n    mem: [<MWCIconWrap size={size}>memory</MWCIconWrap>, 'GiB'],\n    'cuda.device': ['/resources/icons/file_type_cuda.svg', 'GPU'],\n    'cuda.shares': ['/resources/icons/file_type_cuda.svg', 'FGPU'],\n    'rocm.device': ['/resources/icons/ROCm.png', 'GPU'],\n    'tpu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'TPU'],\n    'ipu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'IPU'],\n    'atom.device': ['/resources/icons/rebel.svg', 'ATOM'],\n    'warboy.device': ['/resources/icons/furiosa.svg', 'Warboy'],\n  };\n\n  return (\n    <Tooltip\n      title={\n        showTooltip ? `${type} (${resourceTypeIconSrcMap[type][1]})` : undefined\n      }\n    >\n      {typeof resourceTypeIconSrcMap[type]?.[0] === 'string' ? (\n        <img\n          {...props}\n          style={{\n            height: size,\n            ...(props.style || {}),\n          }}\n          // @ts-ignore\n          src={resourceTypeIconSrcMap[type]?.[0] || ''}\n          alt={type}\n        />\n      ) : (\n        <div style={{ width: 16, height: 16 }}>\n          {resourceTypeIconSrcMap[type]?.[0]}\n        </div>\n      )}\n    </Tooltip>\n  );\n};\n\nexport default ResourceNumber;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport CopyableCodeText from './CopyableCodeText';\nimport { ServingRouteErrorModalFragment$key } from './__generated__/ServingRouteErrorModalFragment.graphql';\nimport { Descriptions, DescriptionsProps, Button } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends Omit<BAIModalProps, 'onOk' | 'onClose'> {\n  inferenceSessionErrorFrgmt: ServingRouteErrorModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst ServingRouteErrorModal: React.FC<Props> = ({\n  onRequestClose,\n  onCancel,\n  inferenceSessionErrorFrgmt,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n\n  const iSessionError = useFragment(\n    graphql`\n      fragment ServingRouteErrorModalFragment on InferenceSessionError {\n        session_id\n        errors {\n          repr\n        }\n      }\n    `,\n    inferenceSessionErrorFrgmt,\n  );\n\n  // const { errors } = endpoint\n  // const targetSession = errors.filter(({ session_id }) => session === session_id)\n  // if (targetSession.length > 0) {\n  //   // setErrorJSONModalSessionID(session)\n  //   // setErrorJSONModalError(targetSession[0].errors[0].repr)\n  //   // setShowErrorJSONModal(true)\n  // }\n\n  const columnSetting: DescriptionsProps['column'] = {\n    xxl: 1,\n    xl: 1,\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <BAIModal\n      centered\n      title={t('modelService.ServingRouteErrorModalTitle')}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      footer={[\n        <Button\n          onClick={() => {\n            onRequestClose();\n          }}\n        >\n          {t('button.Close')}\n        </Button>,\n      ]}\n      {...baiModalProps}\n    >\n      <Descriptions\n        bordered\n        column={columnSetting}\n        labelStyle={{ minWidth: 100 }}\n        style={{ marginTop: 20 }}\n      >\n        <Descriptions.Item label={t('modelService.SessionId')}>\n          <CopyableCodeText>{iSessionError?.session_id}</CopyableCodeText>\n        </Descriptions.Item>\n        <Descriptions.Item label={t('dialog.error.Error')}>\n          {iSessionError?.errors[0].repr}\n        </Descriptions.Item>\n      </Descriptions>\n    </BAIModal>\n  );\n};\n\nexport default ServingRouteErrorModal;\n","import { useBaiSignedRequestWithPromise } from '../helper';\nimport { useCurrentProjectValue } from '../hooks';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport { VFolder } from './VFolderSelect';\nimport { FolderOutlined } from '@ant-design/icons';\nimport { Typography } from 'antd';\nimport React from 'react';\n\ninterface VFolderLazyViewProps {\n  uuid: string;\n  clickable?: boolean;\n}\nconst VFolderLazyView: React.FC<VFolderLazyViewProps> = ({\n  uuid,\n  clickable,\n}) => {\n  const currentProject = useCurrentProjectValue();\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n\n  const { moveTo } = useWebComponentInfo();\n  const { data: vFolders } = useTanQuery({\n    queryKey: ['VFolderSelectQuery'],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: 'GET',\n        url: `/folders?group_id=${currentProject.id}`,\n      }) as Promise<VFolder[]>;\n    },\n    staleTime: 1000,\n    suspense: true,\n  });\n  const vFolder = vFolders?.find(\n    // `id` of `/folders` API is not UUID, but UUID without `-`\n    (vFolder) => vFolder.id === uuid.replaceAll('-', ''),\n  );\n  return (\n    vFolder &&\n    (clickable ? (\n      <Typography.Link\n        onClick={() => {\n          moveTo('/data', { folder: vFolder.name });\n        }}\n      >\n        <FolderOutlined /> {vFolder.name}\n      </Typography.Link>\n    ) : (\n      <div>\n        <FolderOutlined /> {vFolder.name}\n      </div>\n    ))\n  );\n};\n\nexport default VFolderLazyView;\n","import CopyableCodeText from '../components/CopyableCodeText';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport EndpointTokenGenerationModal from '../components/EndpointTokenGenerationModal';\nimport Flex from '../components/Flex';\nimport ImageMetaIcon from '../components/ImageMetaIcon';\nimport ModelServiceSettingModal from '../components/ModelServiceSettingModal';\nimport ResourceNumber, { ResourceTypeKey } from '../components/ResourceNumber';\nimport ServingRouteErrorModal from '../components/ServingRouteErrorModal';\nimport VFolderLazyView from '../components/VFolderLazyView';\nimport { ServingRouteErrorModalFragment$key } from '../components/__generated__/ServingRouteErrorModalFragment.graphql';\nimport { baiSignedRequestWithPromise, filterNonNullItems } from '../helper';\nimport { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport {\n  RoutingListPageQuery,\n  RoutingListPageQuery$data,\n} from './__generated__/RoutingListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n  QuestionCircleOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n  WarningOutlined,\n} from '@ant-design/icons';\nimport {\n  Breadcrumb,\n  Button,\n  Card,\n  Descriptions,\n  Popover,\n  Spin,\n  Table,\n  Tag,\n  Tooltip,\n  Typography,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, { Suspense, useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { useNavigate, useParams } from 'react-router-dom';\n\ninterface RoutingInfo {\n  route_id: string;\n  session_id: string;\n  traffic_ratio: number;\n}\nexport interface ModelServiceInfo {\n  endpoint_id: string;\n  name: string;\n  desired_session_count: number;\n  active_routes: RoutingInfo[];\n  service_endpoint: string;\n  is_public: boolean;\n}\n\n// TODO: display all of routings when API/GQL supports\n// type RoutingStatus = \"HEALTHY\" | \"PROVISIONING\" | \"UNHEALTHY\";\n\ninterface RoutingListPageProps {}\n\ntype EndPoint = NonNullable<RoutingListPageQuery$data['endpoint']>;\ntype Routing = NonNullable<NonNullable<EndPoint['routings']>[0]>;\n\nconst dayDiff = (a: any, b: any) => {\n  const date1 = dayjs(a.created_at);\n  const date2 = dayjs(b.created_at);\n  return date1.diff(date2);\n};\n\nconst RoutingListPage: React.FC<RoutingListPageProps> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const navigate = useNavigate();\n  const { serviceId } = useParams<{\n    serviceId: string;\n  }>();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const [isPendingRefetch, startRefetchTransition] = useTransition();\n  const [isPendingClearError, startClearErrorTransition] = useTransition();\n  const [selectedSessionErrorForModal, setSelectedSessionErrorForModal] =\n    useState<ServingRouteErrorModalFragment$key | null>(null);\n  const [isOpenModelServiceSettingModal, setIsOpenModelServiceSettingModal] =\n    useState(false);\n  const [isOpenTokenGenerationModal, setIsOpenTokenGenerationModal] =\n    useState(false);\n  // const curProject = useCurrentProjectValue();\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n  const { endpoint, endpoint_token_list } =\n    useLazyLoadQuery<RoutingListPageQuery>(\n      graphql`\n        query RoutingListPageQuery(\n          $endpointId: UUID!\n          $tokenListOffset: Int!\n          $tokenListLimit: Int!\n        ) {\n          endpoint(endpoint_id: $endpointId) {\n            name\n            endpoint_id\n            image\n            desired_session_count\n            url\n            open_to_public\n            errors {\n              session_id\n              ...ServingRouteErrorModalFragment\n            }\n            retries\n            model\n            model_mount_destiation\n            resource_group\n            resource_slots\n            resource_opts\n            routings {\n              routing_id\n              session\n              traffic_ratio\n              endpoint\n              status\n            }\n            ...EndpointStatusTagFragment\n            ...ModelServiceSettingModal_endpoint\n          }\n          endpoint_token_list(\n            offset: $tokenListOffset\n            limit: $tokenListLimit\n            endpoint_id: $endpointId\n          ) {\n            total_count\n            items {\n              id\n              token\n              endpoint_id\n              domain\n              project\n              session_owner\n              created_at\n              valid_until\n            }\n          }\n        }\n      `,\n      {\n        tokenListOffset:\n          (paginationState.current - 1) * paginationState.pageSize,\n        tokenListLimit: paginationState.pageSize,\n        endpointId: serviceId || '',\n      },\n      {\n        fetchPolicy:\n          fetchKey === 'initial-fetch' ? 'store-and-network' : 'network-only',\n        fetchKey,\n      },\n    );\n  const mutationToClearError = useTanMutation(() => {\n    if (!endpoint) return;\n    return baiSignedRequestWithPromise({\n      method: 'POST',\n      url: `/services/${endpoint.endpoint_id}/errors/clear`,\n      client: baiClient,\n    });\n  });\n  const openSessionErrorModal = (session: string) => {\n    if (endpoint === null) return;\n    const { errors } = endpoint;\n    const firstMatchedSessionError = errors.find(\n      ({ session_id }) => session === session_id,\n    );\n    setSelectedSessionErrorForModal(firstMatchedSessionError || null);\n  };\n  // const { t } = useTranslation();\n\n  // return color of tag by status\n  const applyStatusColor = (status: string = '') => {\n    let color = 'default';\n    switch (status.toUpperCase()) {\n      case 'HEALTHY':\n        color = 'success';\n        break;\n      case 'PROVISIONING':\n        color = 'processing';\n        break;\n      case 'UNHEALTHY':\n        color = 'warning';\n        break;\n    }\n    return color;\n  };\n\n  const resource_opts = JSON.parse(endpoint?.resource_opts || '{}');\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM }}\n      gap=\"sm\"\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: t('modelService.Services'),\n            onClick: (e) => {\n              e.preventDefault();\n              navigate('/serving');\n            },\n            href: '/serving',\n          },\n          {\n            title: t('modelService.RoutingInfo'),\n          },\n        ]}\n      />\n      <Flex direction=\"row\" justify=\"between\">\n        <Typography.Title level={3} style={{ margin: 0 }}>\n          {endpoint?.name || ''}\n        </Typography.Title>\n        <Flex gap={'xxs'}>\n          {(endpoint?.retries || 0) > 0 ? (\n            <Tooltip title={t('modelService.ClearErrors')}>\n              <Button\n                loading={isPendingClearError}\n                icon={<WarningOutlined />}\n                onClick={() => {\n                  startClearErrorTransition(() => {\n                    mutationToClearError.mutate(undefined, {\n                      onSuccess: () =>\n                        startRefetchTransition(() => {\n                          updateFetchKey();\n                        }),\n                    });\n                  });\n                }}\n              />\n            </Tooltip>\n          ) : (\n            <></>\n          )}\n          <Button\n            loading={isPendingRefetch}\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startRefetchTransition(() => {\n                updateFetchKey();\n              });\n            }}\n          >\n            {t('button.Refresh')}\n          </Button>\n        </Flex>\n      </Flex>\n      <Card\n        title={t('modelService.ServiceInfo')}\n        extra={\n          <Button\n            type=\"primary\"\n            icon={<SettingOutlined />}\n            disabled={(endpoint?.desired_session_count || 0) < 0}\n            onClick={() => {\n              setIsOpenModelServiceSettingModal(true);\n            }}\n          >\n            {t('button.Edit')}\n          </Button>\n        }\n      >\n        <Descriptions\n          bordered\n          column={{ xxl: 3, xl: 3, lg: 2, md: 1, sm: 1, xs: 1 }}\n          style={{\n            backgroundColor: token.colorBgBase,\n          }}\n        >\n          <Descriptions.Item label={t('modelService.EndpointName')}>\n            <Typography.Text copyable>{endpoint?.name}</Typography.Text>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.Status')}>\n            <EndpointStatusTag endpointFrgmt={endpoint} />\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.EndpointId')}>\n            {endpoint?.endpoint_id}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.SessionOwner')}>\n            {baiClient.email || ''}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.DesiredSessionCount')}>\n            {endpoint?.desired_session_count}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.ServiceEndpoint')}>\n            {endpoint?.url ? (\n              <Typography.Text copyable>{endpoint?.url}</Typography.Text>\n            ) : (\n              <Tag>{t('modelService.NoServiceEndpoint')}</Tag>\n            )}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.OpenToPublic')}>\n            {endpoint?.open_to_public ? <CheckOutlined /> : <CloseOutlined />}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.resources')} span={2}>\n            <Flex direction=\"row\" wrap=\"wrap\" gap={'md'}>\n              <Tooltip title={t('session.ResourceGroup')}>\n                <Tag>{endpoint?.resource_group}</Tag>\n              </Tooltip>\n              {_.map(\n                JSON.parse(endpoint?.resource_slots || '{}'),\n                (value: string, type: ResourceTypeKey) => {\n                  return (\n                    <ResourceNumber\n                      key={type}\n                      type={type}\n                      value={value}\n                      opts={resource_opts}\n                    />\n                  );\n                },\n              )}\n            </Flex>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.launcher.ModelStorage')}>\n            <Suspense fallback={<Spin indicator={<LoadingOutlined spin />} />}>\n              {endpoint?.model && (\n                <VFolderLazyView uuid={endpoint?.model} clickable={false} />\n              )}\n            </Suspense>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('modelService.Image')} span={2}>\n            {endpoint?.image && (\n              <Flex direction=\"row\" gap={'xs'}>\n                <ImageMetaIcon image={endpoint.image} />\n                <CopyableCodeText>{endpoint.image}</CopyableCodeText>\n              </Flex>\n            )}\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n      <Card\n        title={t('modelService.GeneratedTokens')}\n        extra={\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              setIsOpenTokenGenerationModal(true);\n            }}\n          >\n            {t('modelService.GenerateToken')}\n          </Button>\n        }\n      >\n        <Table\n          scroll={{ x: 'max-content' }}\n          rowKey={'token'}\n          columns={[\n            {\n              title: '#',\n              fixed: 'left',\n              render: (id, record, index) => {\n                ++index;\n                return index;\n              },\n              showSorterTooltip: false,\n            },\n            {\n              title: 'Token',\n              dataIndex: 'token',\n              fixed: 'left',\n              render: (text, row) => (\n                <Typography.Text ellipsis copyable style={{ width: 150 }}>\n                  {row.token}\n                </Typography.Text>\n              ),\n            },\n            {\n              title: 'Status',\n              render: (text, row) => {\n                const isExpired = dayjs.utc(row.valid_until).isBefore();\n                return (\n                  <Tag color={isExpired ? 'red' : 'green'}>\n                    {isExpired ? 'Expired' : 'Valid'}\n                  </Tag>\n                );\n              },\n            },\n            {\n              title: 'Valid Until',\n              dataIndex: 'valid_until',\n              render: (text, row) => (\n                <span>\n                  {\n                    // FIXME: temporally parse UTC and change to timezone (timezone need to be added in server side)\n                    row.valid_until\n                      ? dayjs.utc(row.valid_until).tz().format('ll LTS')\n                      : '-'\n                  }\n                </span>\n              ),\n              defaultSortOrder: 'descend',\n              sortDirections: ['descend', 'ascend', 'descend'],\n              sorter: dayDiff,\n            },\n            {\n              title: 'Created at',\n              dataIndex: 'created_at',\n              render: (text, row) => (\n                <span>{dayjs(row.created_at).format('ll LT')}</span>\n              ),\n              defaultSortOrder: 'descend',\n              sortDirections: ['descend', 'ascend', 'descend'],\n              sorter: dayDiff,\n            },\n          ]}\n          pagination={false}\n          dataSource={filterNonNullItems(endpoint_token_list?.items)}\n          bordered\n        ></Table>\n      </Card>\n      <Card title={t('modelService.RoutesInfo')}>\n        <Table\n          scroll={{ x: 'max-content' }}\n          columns={[\n            {\n              title: t('modelService.RouteId'),\n              dataIndex: 'routing_id',\n              fixed: 'left',\n            },\n            {\n              title: t('modelService.SessionId'),\n              dataIndex: 'session',\n            },\n            {\n              title: t('modelService.Status'),\n              render: (_, { session, status }) =>\n                status && (\n                  <>\n                    <Tag\n                      color={applyStatusColor(status)}\n                      key={status}\n                      style={{ marginRight: 0 }}\n                    >\n                      {status.toUpperCase()}\n                    </Tag>\n                    {status === 'FAILED_TO_START' && (\n                      <Popover>\n                        <Button\n                          size=\"small\"\n                          type=\"text\"\n                          icon={<QuestionCircleOutlined />}\n                          style={{ color: token.colorTextSecondary }}\n                          onClick={() =>\n                            session && openSessionErrorModal(session)\n                          }\n                        />\n                      </Popover>\n                    )}\n                  </>\n                ),\n            },\n            {\n              title: t('modelService.TrafficRatio'),\n              dataIndex: 'traffic_ratio',\n            },\n          ]}\n          pagination={false}\n          dataSource={endpoint?.routings as Routing[]}\n          rowKey={'routing_id'}\n          bordered\n        />\n      </Card>\n      <ServingRouteErrorModal\n        open={!!selectedSessionErrorForModal}\n        inferenceSessionErrorFrgmt={selectedSessionErrorForModal}\n        onRequestClose={() => setSelectedSessionErrorForModal(null)}\n      />\n      <ModelServiceSettingModal\n        open={isOpenModelServiceSettingModal}\n        onRequestClose={(success) => {\n          setIsOpenModelServiceSettingModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateFetchKey();\n            });\n          }\n        }}\n        endpointFrgmt={endpoint}\n      />\n      <EndpointTokenGenerationModal\n        open={isOpenTokenGenerationModal}\n        onRequestClose={(success) => {\n          setIsOpenTokenGenerationModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateFetchKey();\n            });\n          }\n        }}\n        endpoint_id={endpoint?.endpoint_id || ''}\n      ></EndpointTokenGenerationModal>\n    </Flex>\n  );\n};\n\nexport default RoutingListPage;\n","/**\n * @generated SignedSource<<6fada214f0ffa7a8667c8c774421cb7f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type RoutingListPageQuery$variables = {\n  endpointId: string;\n  tokenListLimit: number;\n  tokenListOffset: number;\n};\nexport type RoutingListPageQuery$data = {\n  readonly endpoint: {\n    readonly desired_session_count: number | null;\n    readonly endpoint_id: string | null;\n    readonly errors: ReadonlyArray<{\n      readonly session_id: string;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"ServingRouteErrorModalFragment\">;\n    }>;\n    readonly image: string | null;\n    readonly model: string | null;\n    readonly model_mount_destiation: string | null;\n    readonly name: string | null;\n    readonly open_to_public: boolean | null;\n    readonly resource_group: string | null;\n    readonly resource_opts: any | null;\n    readonly resource_slots: any | null;\n    readonly retries: number | null;\n    readonly routings: ReadonlyArray<{\n      readonly endpoint: string | null;\n      readonly routing_id: string | null;\n      readonly session: string | null;\n      readonly status: string | null;\n      readonly traffic_ratio: number | null;\n    } | null> | null;\n    readonly url: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\" | \"ModelServiceSettingModal_endpoint\">;\n  } | null;\n  readonly endpoint_token_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly domain: string;\n      readonly endpoint_id: string;\n      readonly id: string | null;\n      readonly project: string;\n      readonly session_owner: string;\n      readonly token: string;\n      readonly valid_until: string | null;\n    } | null>;\n    readonly total_count: number;\n  } | null;\n};\nexport type RoutingListPageQuery = {\n  response: RoutingListPageQuery$data;\n  variables: RoutingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"endpointId\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"tokenListLimit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"tokenListOffset\"\n},\nv3 = {\n  \"kind\": \"Variable\",\n  \"name\": \"endpoint_id\",\n  \"variableName\": \"endpointId\"\n},\nv4 = [\n  (v3/*: any*/)\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session_id\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"retries\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model_mount_destiation\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_opts\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": [\n    (v3/*: any*/),\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"limit\",\n      \"variableName\": \"tokenListLimit\"\n    },\n    {\n      \"kind\": \"Variable\",\n      \"name\": \"offset\",\n      \"variableName\": \"tokenListOffset\"\n    }\n  ],\n  \"concreteType\": \"EndpointTokenList\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"endpoint_token_list\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"total_count\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"EndpointToken\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"items\",\n      \"plural\": true,\n      \"selections\": [\n        (v23/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"token\",\n          \"storageKey\": null\n        },\n        (v6/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"domain\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"project\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"session_owner\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"created_at\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"valid_until\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"RoutingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"InferenceSessionError\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"errors\",\n            \"plural\": true,\n            \"selections\": [\n              (v11/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ServingRouteErrorModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v15/*: any*/),\n          (v16/*: any*/),\n          (v17/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Routing\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"routings\",\n            \"plural\": true,\n            \"selections\": [\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/),\n              (v21/*: any*/),\n              (v22/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"EndpointStatusTagFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ModelServiceSettingModal_endpoint\"\n          }\n        ],\n        \"storageKey\": null\n      },\n      (v24/*: any*/)\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"RoutingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"Endpoint\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"InferenceSessionError\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"errors\",\n            \"plural\": true,\n            \"selections\": [\n              (v11/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"InferenceSessionErrorInfo\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"errors\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"repr\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v15/*: any*/),\n          (v16/*: any*/),\n          (v17/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Routing\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"routings\",\n            \"plural\": true,\n            \"selections\": [\n              (v18/*: any*/),\n              (v19/*: any*/),\n              (v20/*: any*/),\n              (v21/*: any*/),\n              (v22/*: any*/),\n              (v23/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v23/*: any*/),\n          (v22/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      (v24/*: any*/)\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"dcb559f96ebdb88ea48eb267aae5adf8\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"RoutingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query RoutingListPageQuery(\\n  $endpointId: UUID!\\n  $tokenListOffset: Int!\\n  $tokenListLimit: Int!\\n) {\\n  endpoint(endpoint_id: $endpointId) {\\n    name\\n    endpoint_id\\n    image\\n    desired_session_count\\n    url\\n    open_to_public\\n    errors {\\n      session_id\\n      ...ServingRouteErrorModalFragment\\n    }\\n    retries\\n    model\\n    model_mount_destiation\\n    resource_group\\n    resource_slots\\n    resource_opts\\n    routings {\\n      routing_id\\n      session\\n      traffic_ratio\\n      endpoint\\n      status\\n      id\\n    }\\n    ...EndpointStatusTagFragment\\n    ...ModelServiceSettingModal_endpoint\\n    id\\n  }\\n  endpoint_token_list(offset: $tokenListOffset, limit: $tokenListLimit, endpoint_id: $endpointId) {\\n    total_count\\n    items {\\n      id\\n      token\\n      endpoint_id\\n      domain\\n      project\\n      session_owner\\n      created_at\\n      valid_until\\n    }\\n  }\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\\nfragment ModelServiceSettingModal_endpoint on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n}\\n\\nfragment ServingRouteErrorModalFragment on InferenceSessionError {\\n  session_id\\n  errors {\\n    repr\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"4c9244fddb4b985f78d843419d34f832\";\n\nexport default node;\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","text","Typography","Text","copyable","code","_endpoint$status","endpointFrgmt","endpoint","useFragment","_EndpointStatusTagFragment","require","color","status","toUpperCase","Tag","ImageMetaIcon","bordered","image","_ref$style","style","alt","arguments","length","undefined","_useBackendaiImageMet","useBackendaiImageMetaData","getImageIcon","_slicedToArray","src","width","height","React","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","token","theme","useToken","baiClient","useSuspendedBackendaiClient","t","useTranslation","_Form$useForm","Form","useForm","form","_ModelServiceSettingModal_endpoint","mutationToUpdateService","useTanMutation","mutationFn","values","body","to","desired_session_count","baiSignedRequestWithPromise","method","url","concat","endpoint_id","client","BAIModal","zIndex","destroyOnClose","onOk","e","validateFields","then","mutate","onSuccess","console","log","onError","error","catch","err","onCancel","okButtonProps","loading","isLoading","title","Flex","direction","align","justify","preserve","validateTrigger","initialValues","marginBottom","marginLG","marginTop","margin","Item","name","label","rules","pattern","message","InputNumber","type","min","node","useTanQuery","useQuery","useMutation","mutationToGenerateToken","valid_until","validUntil","datetime","unix","success","_err$message","includes","okText","confirmLoading","labelCol","span","dayjs","add","maxWidth","gap","Alert","showIcon","required","validator","_","value","isAfter","Promise","resolve","reject","Error","DatePicker","showTime","format","MWCIconWrap","_ref2","_ref2$size","size","ResourceTypeIcon","_ref3","_resourceTypeIconSrcM","_resourceTypeIconSrcM2","_resourceTypeIconSrcM3","_ref3$size","_ref3$showTooltip","showUnit","showTooltip","props","resourceTypeIconSrcMap","cpu","mem","Tooltip","amount","extra","opts","units","iSizeToSize","numberFixed","parseFloat","toFixed","shmem","fontSize","fontSizeSM","inferenceSessionErrorFrgmt","iSessionError","_ServingRouteErrorModalFragment","footer","Button","onClick","Descriptions","column","xxl","xl","lg","md","sm","xs","labelStyle","minWidth","CopyableCodeText","session_id","errors","repr","uuid","clickable","currentProject","useCurrentProjectValue","baiRequestWithPromise","useBaiSignedRequestWithPromise","moveTo","useWebComponentInfo","vFolders","queryKey","queryFn","id","staleTime","suspense","data","vFolder","find","replaceAll","Link","folder","FolderOutlined","dayDiff","a","b","date1","created_at","date2","diff","navigate","useNavigate","serviceId","useParams","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","_useTransition","useTransition","_useTransition2","isPendingRefetch","startRefetchTransition","_useTransition3","_useTransition4","isPendingClearError","startClearErrorTransition","_useState","useState","_useState2","selectedSessionErrorForModal","setSelectedSessionErrorForModal","_useState3","_useState4","isOpenModelServiceSettingModal","setIsOpenModelServiceSettingModal","_useState5","_useState6","isOpenTokenGenerationModal","setIsOpenTokenGenerationModal","_useState7","current","pageSize","paginationState","_useLazyLoadQuery","useLazyLoadQuery","_RoutingListPageQuery","tokenListOffset","tokenListLimit","endpointId","fetchPolicy","endpoint_token_list","mutationToClearError","applyStatusColor","resource_opts","JSON","parse","marginSM","Breadcrumb","items","preventDefault","href","Title","level","retries","icon","WarningOutlined","ReloadOutlined","Card","SettingOutlined","disabled","backgroundColor","colorBgBase","EndpointStatusTag","email","open_to_public","CheckOutlined","CloseOutlined","wrap","resource_group","resource_slots","ResourceNumber","Suspense","fallback","Spin","indicator","LoadingOutlined","spin","model","VFolderLazyView","PlusOutlined","Table","scroll","x","rowKey","columns","fixed","render","record","index","showSorterTooltip","dataIndex","row","ellipsis","isExpired","isBefore","tz","defaultSortOrder","sortDirections","sorter","pagination","dataSource","filterNonNullItems","session","marginRight","Popover","QuestionCircleOutlined","colorTextSecondary","firstMatchedSessionError","openSessionErrorModal","routings","ServingRouteErrorModal","open","ModelServiceSettingModal","EndpointTokenGenerationModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","hash"],"sourceRoot":""}