{"version":3,"file":"static/js/242.1895e128.chunk.js","mappings":"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","sources":["../node_modules/antd/es/locale/index.js","../node_modules/antd/es/config-provider/cssVariables.js","../node_modules/antd/es/config-provider/hooks/useConfig.js","../node_modules/antd/es/config-provider/MotionWrapper.js","../node_modules/antd/es/config-provider/index.js","../node_modules/antd/es/config-provider/style/index.js","../node_modules/antd/es/config-provider/hooks/useTheme.js","../node_modules/antd/es/form/validateMessagesContext.js","../node_modules/antd/es/modal/locale.js","../node_modules/fbjs/lib/areEqual.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/fbjs/lib/warning.js","../node_modules/invariant/browser.js","../node_modules/react-relay/index.js","../node_modules/react-relay/lib/ReactRelayContainerUtils.js","../node_modules/react-relay/lib/ReactRelayContext.js","../node_modules/react-relay/lib/ReactRelayFragmentContainer.js","../node_modules/react-relay/lib/ReactRelayLocalQueryRenderer.js","../node_modules/react-relay/lib/ReactRelayPaginationContainer.js","../node_modules/react-relay/lib/ReactRelayQueryFetcher.js","../node_modules/react-relay/lib/ReactRelayQueryRenderer.js","../node_modules/react-relay/lib/ReactRelayQueryRendererContext.js","../node_modules/react-relay/lib/ReactRelayRefetchContainer.js","../node_modules/react-relay/lib/RelayContext.js","../node_modules/react-relay/lib/assertFragmentMap.js","../node_modules/react-relay/lib/buildReactRelayContainer.js","../node_modules/react-relay/lib/getRootVariablesForFragments.js","../node_modules/react-relay/lib/index.js","../node_modules/react-relay/lib/isRelayEnvironment.js","../node_modules/react-relay/lib/relay-hooks/EntryPointContainer.react.js","../node_modules/react-relay/lib/relay-hooks/FragmentResource.js","../node_modules/react-relay/lib/relay-hooks/HooksImplementation.js","../node_modules/react-relay/lib/relay-hooks/LRUCache.js","../node_modules/react-relay/lib/relay-hooks/ProfilerContext.js","../node_modules/react-relay/lib/relay-hooks/QueryResource.js","../node_modules/react-relay/lib/relay-hooks/RelayEnvironmentProvider.js","../node_modules/react-relay/lib/relay-hooks/SuspenseResource.js","../node_modules/react-relay/lib/relay-hooks/loadEntryPoint.js","../node_modules/react-relay/lib/relay-hooks/loadQuery.js","../node_modules/react-relay/lib/relay-hooks/useClientQuery.js","../node_modules/react-relay/lib/relay-hooks/useEntryPointLoader.js","../node_modules/react-relay/lib/relay-hooks/useFetchTrackingRef.js","../node_modules/react-relay/lib/relay-hooks/useFragment.js","../node_modules/react-relay/lib/relay-hooks/useFragmentNode.js","../node_modules/react-relay/lib/relay-hooks/useIsMountedRef.js","../node_modules/react-relay/lib/relay-hooks/useIsOperationNodeActive.js","../node_modules/react-relay/lib/relay-hooks/useLazyLoadQuery.js","../node_modules/react-relay/lib/relay-hooks/useLazyLoadQueryNode.js","../node_modules/react-relay/lib/relay-hooks/useLoadMoreFunction.js","../node_modules/react-relay/lib/relay-hooks/useMemoOperationDescriptor.js","../node_modules/react-relay/lib/relay-hooks/useMemoVariables.js","../node_modules/react-relay/lib/relay-hooks/useMutation.js","../node_modules/react-relay/lib/relay-hooks/usePaginationFragment.js","../node_modules/react-relay/lib/relay-hooks/usePreloadedQuery.js","../node_modules/react-relay/lib/relay-hooks/useQueryLoader.js","../node_modules/react-relay/lib/relay-hooks/useRefetchableFragment.js","../node_modules/react-relay/lib/relay-hooks/useRefetchableFragmentNode.js","../node_modules/react-relay/lib/relay-hooks/useRelayEnvironment.js","../node_modules/react-relay/lib/relay-hooks/useStaticFragmentNodeWarning.js","../node_modules/react-relay/lib/relay-hooks/useSubscribeToInvalidationState.js","../node_modules/react-relay/lib/relay-hooks/useSubscription.js","../node_modules/react-relay/lib/relay-hooks/useUnsafeRef_DEPRECATED.js","../node_modules/relay-runtime/index.js","../node_modules/relay-runtime/lib/handlers/RelayDefaultHandlerProvider.js","../node_modules/relay-runtime/lib/handlers/connection/ConnectionHandler.js","../node_modules/relay-runtime/lib/handlers/connection/ConnectionInterface.js","../node_modules/relay-runtime/lib/handlers/connection/MutationHandlers.js","../node_modules/relay-runtime/lib/index.js","../node_modules/relay-runtime/lib/multi-actor-environment/ActorIdentifier.js","../node_modules/relay-runtime/lib/multi-actor-environment/ActorUtils.js","../node_modules/relay-runtime/lib/mutations/RelayDeclarativeMutationConfig.js","../node_modules/relay-runtime/lib/mutations/RelayRecordProxy.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceMutator.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceProxy.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceSelectorProxy.js","../node_modules/relay-runtime/lib/mutations/applyOptimisticMutation.js","../node_modules/relay-runtime/lib/mutations/commitLocalUpdate.js","../node_modules/relay-runtime/lib/mutations/commitMutation.js","../node_modules/relay-runtime/lib/mutations/createUpdatableProxy.js","../node_modules/relay-runtime/lib/mutations/readUpdatableFragment.js","../node_modules/relay-runtime/lib/mutations/readUpdatableQuery.js","../node_modules/relay-runtime/lib/mutations/validateMutation.js","../node_modules/relay-runtime/lib/network/ConvertToExecuteFunction.js","../node_modules/relay-runtime/lib/network/RelayNetwork.js","../node_modules/relay-runtime/lib/network/RelayObservable.js","../node_modules/relay-runtime/lib/network/RelayQueryResponseCache.js","../node_modules/relay-runtime/lib/network/wrapNetworkWithLogObserver.js","../node_modules/relay-runtime/lib/query/GraphQLTag.js","../node_modules/relay-runtime/lib/query/PreloadableQueryRegistry.js","../node_modules/relay-runtime/lib/query/fetchQuery.js","../node_modules/relay-runtime/lib/query/fetchQueryInternal.js","../node_modules/relay-runtime/lib/query/fetchQuery_DEPRECATED.js","../node_modules/relay-runtime/lib/store/ClientID.js","../node_modules/relay-runtime/lib/store/DataChecker.js","../node_modules/relay-runtime/lib/store/OperationExecutor.js","../node_modules/relay-runtime/lib/store/RelayConcreteVariables.js","../node_modules/relay-runtime/lib/store/RelayModernEnvironment.js","../node_modules/relay-runtime/lib/store/RelayModernFragmentSpecResolver.js","../node_modules/relay-runtime/lib/store/RelayModernOperationDescriptor.js","../node_modules/relay-runtime/lib/store/RelayModernRecord.js","../node_modules/relay-runtime/lib/store/RelayModernSelector.js","../node_modules/relay-runtime/lib/store/RelayModernStore.js","../node_modules/relay-runtime/lib/store/RelayOperationTracker.js","../node_modules/relay-runtime/lib/store/RelayOptimisticRecordSource.js","../node_modules/relay-runtime/lib/store/RelayPublishQueue.js","../node_modules/relay-runtime/lib/store/RelayReader.js","../node_modules/relay-runtime/lib/store/RelayRecordSource.js","../node_modules/relay-runtime/lib/store/RelayRecordState.js","../node_modules/relay-runtime/lib/store/RelayReferenceMarker.js","../node_modules/relay-runtime/lib/store/RelayResponseNormalizer.js","../node_modules/relay-runtime/lib/store/RelayStoreReactFlightUtils.js","../node_modules/relay-runtime/lib/store/RelayStoreSubscriptions.js","../node_modules/relay-runtime/lib/store/RelayStoreUtils.js","../node_modules/relay-runtime/lib/store/ResolverCache.js","../node_modules/relay-runtime/lib/store/ResolverFragments.js","../node_modules/relay-runtime/lib/store/TypeID.js","../node_modules/relay-runtime/lib/store/ViewerPattern.js","../node_modules/relay-runtime/lib/store/cloneRelayHandleSourceField.js","../node_modules/relay-runtime/lib/store/cloneRelayScalarHandleSourceField.js","../node_modules/relay-runtime/lib/store/createFragmentSpecResolver.js","../node_modules/relay-runtime/lib/store/createRelayContext.js","../node_modules/relay-runtime/lib/store/defaultGetDataID.js","../node_modules/relay-runtime/lib/store/defaultRequiredFieldLogger.js","../node_modules/relay-runtime/lib/store/experimental-live-resolvers/LiveResolverSuspenseSentinel.js","../node_modules/relay-runtime/lib/store/experimental-live-resolvers/getOutputTypeRecordIDs.js","../node_modules/relay-runtime/lib/store/hasOverlappingIDs.js","../node_modules/relay-runtime/lib/store/isRelayModernEnvironment.js","../node_modules/relay-runtime/lib/store/readInlineData.js","../node_modules/relay-runtime/lib/subscription/requestSubscription.js","../node_modules/relay-runtime/lib/util/RelayConcreteNode.js","../node_modules/relay-runtime/lib/util/RelayDefaultHandleKey.js","../node_modules/relay-runtime/lib/util/RelayError.js","../node_modules/relay-runtime/lib/util/RelayFeatureFlags.js","../node_modules/relay-runtime/lib/util/RelayProfiler.js","../node_modules/relay-runtime/lib/util/RelayReplaySubject.js","../node_modules/relay-runtime/lib/util/StringInterner.js","../node_modules/relay-runtime/lib/util/createPayloadFor3DField.js","../node_modules/relay-runtime/lib/util/deepFreeze.js","../node_modules/relay-runtime/lib/util/generateID.js","../node_modules/relay-runtime/lib/util/getFragmentIdentifier.js","../node_modules/relay-runtime/lib/util/getOperation.js","../node_modules/relay-runtime/lib/util/getPaginationMetadata.js","../node_modules/relay-runtime/lib/util/getPaginationVariables.js","../node_modules/relay-runtime/lib/util/getPendingOperationsForFragment.js","../node_modules/relay-runtime/lib/util/getRefetchMetadata.js","../node_modules/relay-runtime/lib/util/getRelayHandleKey.js","../node_modules/relay-runtime/lib/util/getRequestIdentifier.js","../node_modules/relay-runtime/lib/util/getValueAtPath.js","../node_modules/relay-runtime/lib/util/handlePotentialSnapshotErrors.js","../node_modules/relay-runtime/lib/util/isEmptyObject.js","../node_modules/relay-runtime/lib/util/isPromise.js","../node_modules/relay-runtime/lib/util/isScalarAndEqual.js","../node_modules/relay-runtime/lib/util/recycleNodesInto.js","../node_modules/relay-runtime/lib/util/registerEnvironmentWithDevTools.js","../node_modules/relay-runtime/lib/util/resolveImmediate.js","../node_modules/relay-runtime/lib/util/stableCopy.js","../node_modules/relay-runtime/lib/util/withDuration.js","../node_modules/relay-runtime/lib/util/withProvidedVariables.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport { default as useLocale } from './useLocale';\nexport const ANT_MARK = 'internalMark';\nconst LocaleProvider = props => {\n  const {\n    locale = {},\n    children,\n    _ANT_MARK__\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n  React.useEffect(() => {\n    changeConfirmLocale(locale && locale.Modal);\n    return () => {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  const getMemoizedContextValue = React.useMemo(() => Object.assign(Object.assign({}, locale), {\n    exist: true\n  }), [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\nif (process.env.NODE_ENV !== 'production') {\n  LocaleProvider.displayName = 'LocaleProvider';\n}\nexport default LocaleProvider;","/* eslint-disable import/prefer-default-export, prefer-destructuring */\nimport { generate } from '@ant-design/colors';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport warning from '../_util/warning';\nconst dynamicStyleMark = `-ant-${Date.now()}-${Math.random()}`;\nexport function getStyle(globalPrefixCls, theme) {\n  const variables = {};\n  const formatColor = (color, updater) => {\n    let clone = color.clone();\n    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;\n    return clone.toRgbString();\n  };\n  const fillColor = (colorVal, type) => {\n    const baseColor = new TinyColor(colorVal);\n    const colorPalettes = generate(baseColor.toRgbString());\n    variables[`${type}-color`] = formatColor(baseColor);\n    variables[`${type}-color-disabled`] = colorPalettes[1];\n    variables[`${type}-color-hover`] = colorPalettes[4];\n    variables[`${type}-color-active`] = colorPalettes[6];\n    variables[`${type}-color-outline`] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[`${type}-color-deprecated-bg`] = colorPalettes[0];\n    variables[`${type}-color-deprecated-border`] = colorPalettes[2];\n  };\n  // ================ Primary Color ================\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    const primaryColor = new TinyColor(theme.primaryColor);\n    const primaryColors = generate(primaryColor.toRgbString());\n    // Legacy - We should use semantic naming standard\n    primaryColors.forEach((color, index) => {\n      variables[`primary-${index + 1}`] = color;\n    });\n    // Deprecated\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, c => c.lighten(35));\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, c => c.lighten(20));\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, c => c.tint(20));\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, c => c.tint(50));\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, c => c.setAlpha(c.getAlpha() * 0.12));\n    const primaryActiveColor = new TinyColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, c => c.setAlpha(c.getAlpha() * 0.3));\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, c => c.darken(2));\n  }\n  // ================ Success Color ================\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  }\n  // ================ Warning Color ================\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  }\n  // ================= Error Color =================\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  }\n  // ================= Info Color ==================\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  }\n  // Convert to css variables\n  const cssList = Object.keys(variables).map(key => `--${globalPrefixCls}-${key}: ${variables[key]};`);\n  return `\n  :root {\n    ${cssList.join('\\n')}\n  }\n  `.trim();\n}\nexport function registerTheme(globalPrefixCls, theme) {\n  const style = getStyle(globalPrefixCls, theme);\n  if (canUseDom()) {\n    updateCSS(style, `${dynamicStyleMark}-dynamic-theme`);\n  } else {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'ConfigProvider', 'SSR do not support dynamic theme with css variables.') : void 0;\n  }\n}","import { useContext } from 'react';\nimport DisabledContext from '../DisabledContext';\nimport SizeContext from '../SizeContext';\nfunction useConfig() {\n  const componentDisabled = useContext(DisabledContext);\n  const componentSize = useContext(SizeContext);\n  return {\n    componentDisabled,\n    componentSize\n  };\n}\nexport default useConfig;","import { Provider as MotionProvider } from 'rc-motion';\nimport * as React from 'react';\nimport { useToken } from '../theme/internal';\nexport default function MotionWrapper(props) {\n  const {\n    children\n  } = props;\n  const [, token] = useToken();\n  const {\n    motion\n  } = token;\n  const needWrapMotionProviderRef = React.useRef(false);\n  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n  if (needWrapMotionProviderRef.current) {\n    return /*#__PURE__*/React.createElement(MotionProvider, {\n      motion: motion\n    }, children);\n  }\n  return children;\n}","'use client';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { createTheme } from '@ant-design/cssinjs';\nimport IconContext from \"@ant-design/icons/es/components/Context\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport { merge } from \"rc-util/es/utils/set\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport ValidateMessagesContext from '../form/validateMessagesContext';\nimport LocaleProvider, { ANT_MARK } from '../locale';\nimport LocaleContext from '../locale/context';\nimport defaultLocale from '../locale/en_US';\nimport { DesignTokenContext } from '../theme/internal';\nimport defaultSeedToken from '../theme/themes/seed';\nimport { ConfigConsumer, ConfigContext, defaultIconPrefixCls } from './context';\nimport { registerTheme } from './cssVariables';\nimport { DisabledContextProvider } from './DisabledContext';\nimport useConfig from './hooks/useConfig';\nimport useTheme from './hooks/useTheme';\nimport MotionWrapper from './MotionWrapper';\nimport SizeContext, { SizeContextProvider } from './SizeContext';\nimport useStyle from './style';\n/**\n * Since too many feedback using static method like `Modal.confirm` not getting theme, we record the\n * theme register info here to help developer get warning info.\n */\nlet existThemeConfig = false;\nexport const warnContext = process.env.NODE_ENV !== 'production' ? componentName => {\n  process.env.NODE_ENV !== \"production\" ? warning(!existThemeConfig, componentName, `Static function can not consume context like dynamic theme. Please use 'App' component instead.`) : void 0;\n} : /* istanbul ignore next */\nnull;\nexport { ConfigConsumer, ConfigContext, defaultIconPrefixCls };\nexport const configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader'];\n// These props is used by `useContext` directly in sub component\nconst PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'pagination', 'form', 'select', 'button'];\nexport const defaultPrefixCls = 'ant';\nlet globalPrefixCls;\nlet globalIconPrefixCls;\nlet globalTheme;\nfunction getGlobalPrefixCls() {\n  return globalPrefixCls || defaultPrefixCls;\n}\nfunction getGlobalIconPrefixCls() {\n  return globalIconPrefixCls || defaultIconPrefixCls;\n}\nfunction isLegacyTheme(theme) {\n  return Object.keys(theme).some(key => key.endsWith('Color'));\n}\nconst setGlobalConfig = _ref => {\n  let {\n    prefixCls,\n    iconPrefixCls,\n    theme\n  } = _ref;\n  if (prefixCls !== undefined) {\n    globalPrefixCls = prefixCls;\n  }\n  if (iconPrefixCls !== undefined) {\n    globalIconPrefixCls = iconPrefixCls;\n  }\n  if (theme) {\n    if (isLegacyTheme(theme)) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'ConfigProvider', '`config` of css variable theme is not work in v5. Please use new `theme` config instead.') : void 0;\n      registerTheme(getGlobalPrefixCls(), theme);\n    } else {\n      globalTheme = theme;\n    }\n  }\n};\nexport const globalConfig = () => ({\n  getPrefixCls: (suffixCls, customizePrefixCls) => {\n    if (customizePrefixCls) {\n      return customizePrefixCls;\n    }\n    return suffixCls ? `${getGlobalPrefixCls()}-${suffixCls}` : getGlobalPrefixCls();\n  },\n  getIconPrefixCls: getGlobalIconPrefixCls,\n  getRootPrefixCls: () => {\n    // If Global prefixCls provided, use this\n    if (globalPrefixCls) {\n      return globalPrefixCls;\n    }\n    // Fallback to default prefixCls\n    return getGlobalPrefixCls();\n  },\n  getTheme: () => globalTheme\n});\nconst ProviderChildren = props => {\n  const {\n    children,\n    csp: customCsp,\n    autoInsertSpaceInButton,\n    alert,\n    anchor,\n    form,\n    locale,\n    componentSize,\n    direction,\n    space,\n    virtual,\n    dropdownMatchSelectWidth,\n    popupMatchSelectWidth,\n    popupOverflow,\n    legacyLocale,\n    parentContext,\n    iconPrefixCls: customIconPrefixCls,\n    theme,\n    componentDisabled,\n    segmented,\n    statistic,\n    spin,\n    calendar,\n    carousel,\n    cascader,\n    collapse,\n    typography,\n    checkbox,\n    descriptions,\n    divider,\n    drawer,\n    skeleton,\n    steps,\n    image,\n    layout,\n    list,\n    mentions,\n    modal,\n    progress,\n    result,\n    slider,\n    breadcrumb,\n    menu,\n    pagination,\n    input,\n    empty,\n    badge,\n    radio,\n    rate,\n    switch: SWITCH,\n    transfer,\n    avatar,\n    message,\n    tag,\n    table,\n    card,\n    tabs,\n    timeline,\n    timePicker,\n    upload,\n    notification,\n    tree,\n    colorPicker,\n    datePicker\n  } = props;\n  // =================================== Warning ===================================\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(dropdownMatchSelectWidth === undefined, 'ConfigProvider', '`dropdownMatchSelectWidth` is deprecated. Please use `popupMatchSelectWidth` instead.') : void 0;\n  }\n  // =================================== Context ===================================\n  const getPrefixCls = React.useCallback((suffixCls, customizePrefixCls) => {\n    const {\n      prefixCls\n    } = props;\n    if (customizePrefixCls) {\n      return customizePrefixCls;\n    }\n    const mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\n    return suffixCls ? `${mergedPrefixCls}-${suffixCls}` : mergedPrefixCls;\n  }, [parentContext.getPrefixCls, props.prefixCls]);\n  const iconPrefixCls = customIconPrefixCls || parentContext.iconPrefixCls || defaultIconPrefixCls;\n  const shouldWrapSSR = iconPrefixCls !== parentContext.iconPrefixCls;\n  const csp = customCsp || parentContext.csp;\n  const wrapSSR = useStyle(iconPrefixCls, csp);\n  const mergedTheme = useTheme(theme, parentContext.theme);\n  if (process.env.NODE_ENV !== 'production') {\n    existThemeConfig = existThemeConfig || !!mergedTheme;\n  }\n  const baseConfig = {\n    csp,\n    autoInsertSpaceInButton,\n    alert,\n    anchor,\n    locale: locale || legacyLocale,\n    direction,\n    space,\n    virtual,\n    popupMatchSelectWidth: popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth,\n    popupOverflow,\n    getPrefixCls,\n    iconPrefixCls,\n    theme: mergedTheme,\n    segmented,\n    statistic,\n    spin,\n    calendar,\n    carousel,\n    cascader,\n    collapse,\n    typography,\n    checkbox,\n    descriptions,\n    divider,\n    drawer,\n    skeleton,\n    steps,\n    image,\n    input,\n    layout,\n    list,\n    mentions,\n    modal,\n    progress,\n    result,\n    slider,\n    breadcrumb,\n    menu,\n    pagination,\n    empty,\n    badge,\n    radio,\n    rate,\n    switch: SWITCH,\n    transfer,\n    avatar,\n    message,\n    tag,\n    table,\n    card,\n    tabs,\n    timeline,\n    timePicker,\n    upload,\n    notification,\n    tree,\n    colorPicker,\n    datePicker\n  };\n  const config = Object.assign({}, parentContext);\n  Object.keys(baseConfig).forEach(key => {\n    if (baseConfig[key] !== undefined) {\n      config[key] = baseConfig[key];\n    }\n  });\n  // Pass the props used by `useContext` directly with child component.\n  // These props should merged into `config`.\n  PASSED_PROPS.forEach(propName => {\n    const propValue = props[propName];\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  });\n  // https://github.com/ant-design/ant-design/issues/27617\n  const memoedConfig = useMemo(() => config, config, (prevConfig, currentConfig) => {\n    const prevKeys = Object.keys(prevConfig);\n    const currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(key => prevConfig[key] !== currentConfig[key]);\n  });\n  const memoIconContextValue = React.useMemo(() => ({\n    prefixCls: iconPrefixCls,\n    csp\n  }), [iconPrefixCls, csp]);\n  let childNode = shouldWrapSSR ? wrapSSR(children) : children;\n  const validateMessages = React.useMemo(() => {\n    var _a, _b, _c, _d;\n    return merge(((_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages) || {}, ((_c = (_b = memoedConfig.locale) === null || _b === void 0 ? void 0 : _b.Form) === null || _c === void 0 ? void 0 : _c.defaultValidateMessages) || {}, ((_d = memoedConfig.form) === null || _d === void 0 ? void 0 : _d.validateMessages) || {}, (form === null || form === void 0 ? void 0 : form.validateMessages) || {});\n  }, [memoedConfig, form === null || form === void 0 ? void 0 : form.validateMessages]);\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /*#__PURE__*/React.createElement(ValidateMessagesContext.Provider, {\n      value: validateMessages\n    }, children);\n  }\n  if (locale) {\n    childNode = /*#__PURE__*/React.createElement(LocaleProvider, {\n      locale: locale,\n      _ANT_MARK__: ANT_MARK\n    }, childNode);\n  }\n  if (iconPrefixCls || csp) {\n    childNode = /*#__PURE__*/React.createElement(IconContext.Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n  if (componentSize) {\n    childNode = /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n  // =================================== Motion ===================================\n  childNode = /*#__PURE__*/React.createElement(MotionWrapper, null, childNode);\n  // ================================ Dynamic theme ================================\n  const memoTheme = React.useMemo(() => {\n    const _a = mergedTheme || {},\n      {\n        algorithm,\n        token\n      } = _a,\n      rest = __rest(_a, [\"algorithm\", \"token\"]);\n    const themeObj = algorithm && (!Array.isArray(algorithm) || algorithm.length > 0) ? createTheme(algorithm) : undefined;\n    return Object.assign(Object.assign({}, rest), {\n      theme: themeObj,\n      token: Object.assign(Object.assign({}, defaultSeedToken), token)\n    });\n  }, [mergedTheme]);\n  if (theme) {\n    childNode = /*#__PURE__*/React.createElement(DesignTokenContext.Provider, {\n      value: memoTheme\n    }, childNode);\n  }\n  // =================================== Render ===================================\n  if (componentDisabled !== undefined) {\n    childNode = /*#__PURE__*/React.createElement(DisabledContextProvider, {\n      disabled: componentDisabled\n    }, childNode);\n  }\n  return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\nconst ConfigProvider = props => {\n  const context = React.useContext(ConfigContext);\n  const antLocale = React.useContext(LocaleContext);\n  return /*#__PURE__*/React.createElement(ProviderChildren, Object.assign({\n    parentContext: context,\n    legacyLocale: antLocale\n  }, props));\n};\nConfigProvider.ConfigContext = ConfigContext;\nConfigProvider.SizeContext = SizeContext;\nConfigProvider.config = setGlobalConfig;\nConfigProvider.useConfig = useConfig;\nObject.defineProperty(ConfigProvider, 'SizeContext', {\n  get: () => {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'ConfigProvider', 'ConfigProvider.SizeContext is deprecated. Please use `ConfigProvider.useConfig().componentSize` instead.') : void 0;\n    return SizeContext;\n  }\n});\nif (process.env.NODE_ENV !== 'production') {\n  ConfigProvider.displayName = 'ConfigProvider';\n}\nexport default ConfigProvider;","import { useStyleRegister } from '@ant-design/cssinjs';\nimport { resetIcon } from '../../style';\nimport { useToken } from '../../theme/internal';\nconst useStyle = (iconPrefixCls, csp) => {\n  const [theme, token] = useToken();\n  // Generate style for icons\n  return useStyleRegister({\n    theme,\n    token,\n    hashId: '',\n    path: ['ant-design-icons', iconPrefixCls],\n    nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce\n  }, () => [{\n    [`.${iconPrefixCls}`]: Object.assign(Object.assign({}, resetIcon()), {\n      [`.${iconPrefixCls} .${iconPrefixCls}-icon`]: {\n        display: 'block'\n      }\n    })\n  }]);\n};\nexport default useStyle;","import useMemo from \"rc-util/es/hooks/useMemo\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport { defaultConfig } from '../../theme/internal';\nexport default function useTheme(theme, parentTheme) {\n  const themeConfig = theme || {};\n  const parentThemeConfig = themeConfig.inherit === false || !parentTheme ? defaultConfig : parentTheme;\n  const mergedTheme = useMemo(() => {\n    if (!theme) {\n      return parentTheme;\n    }\n    // Override\n    const mergedComponents = Object.assign({}, parentThemeConfig.components);\n    Object.keys(theme.components || {}).forEach(componentName => {\n      mergedComponents[componentName] = Object.assign(Object.assign({}, mergedComponents[componentName]), theme.components[componentName]);\n    });\n    // Base token\n    return Object.assign(Object.assign(Object.assign({}, parentThemeConfig), themeConfig), {\n      token: Object.assign(Object.assign({}, parentThemeConfig.token), themeConfig.token),\n      components: mergedComponents\n    });\n  }, [themeConfig, parentThemeConfig], (prev, next) => prev.some((prevTheme, index) => {\n    const nextTheme = next[index];\n    return !isEqual(prevTheme, nextTheme, true);\n  }));\n  return mergedTheme;\n}","import { createContext } from 'react';\n// ZombieJ: We export single file here since\n// ConfigProvider use this which will make loop deps\n// to import whole `rc-field-form`\nexport default /*#__PURE__*/createContext(undefined);","import defaultLocale from '../locale/en_US';\nlet runtimeLocale = Object.assign({}, defaultLocale.Modal);\nexport function changeConfirmLocale(newLocale) {\n  if (newLocale) {\n    runtimeLocale = Object.assign(Object.assign({}, runtimeLocale), newLocale);\n  } else {\n    runtimeLocale = Object.assign({}, defaultLocale.Modal);\n  }\n}\nexport function getConfirmLocale() {\n  return runtimeLocale;\n}","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require(\"./emptyFunction\");\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\n\nfunction printWarning(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var argIndex = 0;\n  var message = 'Warning: ' + format.replace(/%s/g, function () {\n    return args[argIndex++];\n  });\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    // --- Welcome to debugging React ---\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n  } catch (x) {}\n}\n\nvar warning = process.env.NODE_ENV !== \"production\" ? function (condition, format) {\n  if (format === undefined) {\n    throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n  }\n\n  if (!condition) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    printWarning.apply(void 0, [format].concat(args));\n  }\n} : emptyFunction;\nmodule.exports = warning;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * Relay v15.0.0\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/index.js');\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction getComponentName(component) {\n  return component.displayName || component.name || 'Component';\n}\nfunction getContainerName(Component) {\n  return 'Relay(' + getComponentName(Component) + ')';\n}\nmodule.exports = {\n  getComponentName: getComponentName,\n  getContainerName: getContainerName\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createRelayContext = _require.__internal.createRelayContext;\nmodule.exports = createRelayContext(React);","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _excluded = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar _require = require('./ReactRelayContainerUtils'),\n  getContainerName = _require.getContainerName;\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\n/**\n * Composes a React component class, returning a new class that intercepts\n * props, resolving them with the provided fragments and subscribing for\n * updates.\n */\nfunction createContainerWithFragments(Component, fragments) {\n  var _class;\n  var containerName = getContainerName(Component);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        var resolverFromThisUpdate = _this.state.resolver;\n        _this.setState(function (updatedState) {\n          return (\n            // If this event belongs to the current data source, update.\n            // Otherwise we should ignore it.\n            resolverFromThisUpdate === updatedState.resolver ? {\n              data: updatedState.resolver.resolve(),\n              relayProp: getRelayProp(updatedState.relayProp.environment)\n            } : null\n          );\n        });\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      // Do not provide a subscription/callback here.\n      // It is possible for this render to be interrupted or aborted,\n      // In which case the subscription would cause a leak.\n      // We will add the subscription in componentDidMount().\n      var resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      _this.state = {\n        data: resolver.resolve(),\n        prevProps: props,\n        prevPropsContext: relayContext,\n        relayProp: getRelayProp(relayContext.environment),\n        resolver: resolver\n      };\n      return _this;\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */\n    _class.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$__rootIsQu;\n      // Any props change could impact the query, so we mirror props in state.\n      // This is an unusual pattern, but necessary for this container usecase.\n      var prevProps = prevState.prevProps;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, prevProps);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var resolver = prevState.resolver;\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (prevState.prevPropsContext.environment !== relayContext.environment || !areEqual(prevIDs, nextIDs)) {\n        // Do not provide a subscription/callback here.\n        // It is possible for this render to be interrupted or aborted,\n        // In which case the subscription would cause a leak.\n        // We will add the subscription in componentDidUpdate().\n        resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        return {\n          data: resolver.resolve(),\n          prevPropsContext: relayContext,\n          prevProps: nextProps,\n          relayProp: getRelayProp(relayContext.environment),\n          resolver: resolver\n        };\n      } else {\n        resolver.setProps(nextProps);\n        var data = resolver.resolve();\n        if (data !== prevState.data) {\n          return {\n            data: data,\n            prevProps: nextProps,\n            prevPropsContext: relayContext,\n            relayProp: getRelayProp(relayContext.environment)\n          };\n        }\n      }\n      return null;\n    };\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (this.state.resolver !== prevState.resolver) {\n        prevState.resolver.dispose();\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      } else {\n        this._rerenderIfStoreHasChanged();\n      }\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.state.resolver.dispose();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (nextState.prevPropsContext.environment !== this.state.prevPropsContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var _this$state = this.state,\n        data = _this$state.data,\n        resolver = _this$state.resolver;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var _this$state2 = this.state,\n        data = _this$state2.data,\n        resolver = _this$state2.resolver;\n      var maybeNewData = resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    // $FlowFixMe[missing-local-annot]\n    ;\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        componentRef = _this$props.componentRef,\n        __relayContext = _this$props.__relayContext,\n        __rootIsQueryRenderer = _this$props.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      return React.createElement(Component, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, props), this.state.data), {}, {\n        ref: componentRef,\n        relay: this.state.relayProp\n      }));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\nfunction getRelayProp(environment) {\n  return {\n    environment: environment\n  };\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, createContainerWithFragments);\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createOperationDescriptor = _require.createOperationDescriptor,\n  deepFreeze = _require.deepFreeze,\n  getRequest = _require.getRequest;\nvar useLayoutEffect = React.useLayoutEffect,\n  useState = React.useState,\n  useRef = React.useRef,\n  useMemo = React.useMemo;\nvar queryRendererContext = {\n  rootIsQueryRenderer: true\n};\nfunction useDeepCompare(value) {\n  var latestValue = React.useRef(value);\n  if (!areEqual(latestValue.current, value)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(value);\n    }\n    latestValue.current = value;\n  }\n  return latestValue.current;\n}\nfunction ReactRelayLocalQueryRenderer(props) {\n  var environment = props.environment,\n    query = props.query,\n    variables = props.variables,\n    render = props.render;\n  var latestVariables = useDeepCompare(variables);\n  var operation = useMemo(function () {\n    var request = getRequest(query);\n    return createOperationDescriptor(request, latestVariables);\n  }, [query, latestVariables]);\n  var relayContext = useMemo(function () {\n    return {\n      environment: environment\n    };\n  }, [environment]);\n\n  // Use a ref to prevent rendering twice when data changes\n  // because of props change\n  var dataRef = useRef(null);\n  var _useState = useState(null),\n    forceUpdate = _useState[1];\n  var cleanupFnRef = useRef(null);\n  var snapshot = useMemo(function () {\n    environment.check(operation);\n    var res = environment.lookup(operation.fragment);\n    dataRef.current = res.data;\n\n    // Run effects here so that the data can be retained\n    // and subscribed before the component commits\n    var retainDisposable = environment.retain(operation);\n    var subscribeDisposable = environment.subscribe(res, function (newSnapshot) {\n      dataRef.current = newSnapshot.data;\n      forceUpdate(dataRef.current);\n    });\n    var disposed = false;\n    function nextCleanupFn() {\n      if (!disposed) {\n        disposed = true;\n        cleanupFnRef.current = null;\n        retainDisposable.dispose();\n        subscribeDisposable.dispose();\n      }\n    }\n    if (cleanupFnRef.current) {\n      cleanupFnRef.current();\n    }\n    cleanupFnRef.current = nextCleanupFn;\n    return res;\n  }, [environment, operation]);\n  useLayoutEffect(function () {\n    var cleanupFn = cleanupFnRef.current;\n    return function () {\n      cleanupFn && cleanupFn();\n    };\n  }, [snapshot]);\n  return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n    value: relayContext\n  }, /*#__PURE__*/React.createElement(ReactRelayQueryRendererContext.Provider, {\n    value: queryRendererContext\n  }, render({\n    props: dataRef.current\n  })));\n}\nmodule.exports = ReactRelayLocalQueryRenderer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectSpread3 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _excluded = [\"componentRef\"],\n  _excluded2 = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"],\n  _excluded3 = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar getRootVariablesForFragments = require('./getRootVariablesForFragments');\nvar _require = require('./ReactRelayContainerUtils'),\n  getComponentName = _require.getComponentName,\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  ConnectionInterface = _require3.ConnectionInterface,\n  Observable = _require3.Observable,\n  RelayFeatureFlags = _require3.RelayFeatureFlags,\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  createOperationDescriptor = _require3.createOperationDescriptor,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  getRequest = _require3.getRequest,\n  getVariablesFromObject = _require3.getVariablesFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\nvar warning = require(\"fbjs/lib/warning\");\nvar FORWARD = 'forward';\n/**\n * Extends the functionality of RelayFragmentContainer by providing a mechanism\n * to load more data from a connection.\n *\n * # Configuring a PaginationContainer\n *\n * PaginationContainer accepts the standard FragmentContainer arguments and an\n * additional `connectionConfig` argument:\n *\n * - `Component`: the component to be wrapped/rendered.\n * - `fragments`: an object whose values are `graphql` fragments. The object\n *   keys determine the prop names by which fragment data is available.\n * - `connectionConfig`: an object that determines how to load more connection\n *   data. Details below.\n *\n * # Loading More Data\n *\n * Use `props.relay.hasMore()` to determine if there are more items to load.\n *\n * ```\n * hasMore(): boolean\n * ```\n *\n * Use `props.relay.isLoading()` to determine if a previous call to `loadMore()`\n * is still pending. This is convenient for avoiding duplicate load calls.\n *\n * ```\n * isLoading(): boolean\n * ```\n *\n * Use `props.relay.loadMore()` to load more items. This will return null if\n * there are no more items to fetch, otherwise it will fetch more items and\n * return a Disposable that can be used to cancel the fetch.\n *\n * `pageSize` should be the number of *additional* items to fetch (not the\n * total).\n *\n * ```\n * loadMore(pageSize: number, callback: ?(error: ?Error) => void): ?Disposable\n * ```\n *\n * A complete example:\n *\n * ```\n * class Foo extends React.Component {\n *   ...\n *   _onEndReached() {\n *     if (!this.props.relay.hasMore() || this.props.relay.isLoading()) {\n *       return;\n *     }\n *     this.props.relay.loadMore(10);\n *   }\n *   ...\n * }\n * ```\n *\n * # Connection Config\n *\n * Here's an example, followed by details of each config property:\n *\n * ```\n * ReactRelayPaginationContainer.createContainer(\n *   Component,\n *   {\n *     user: graphql`fragment FriendsFragment on User {\n *       friends(after: $afterCursor first: $count) @connection {\n *         edges { ... }\n *         pageInfo {\n *           startCursor\n *           endCursor\n *           hasNextPage\n *           hasPreviousPage\n *         }\n *       }\n *     }`,\n *   },\n *   {\n *     direction: 'forward',\n *     getConnectionFromProps(props) {\n *       return props.user && props.user.friends;\n *     },\n *     getFragmentVariables(vars, totalCount) {\n *       // The component presumably wants *all* edges, not just those after\n *       // the cursor, so notice that we don't set $afterCursor here.\n *       return {\n *         ...vars,\n *         count: totalCount,\n *       };\n *     },\n *     getVariables(props, {count, cursor}, fragmentVariables) {\n *       return {\n *         id: props.user.id,\n *         afterCursor: cursor,\n *         count,\n *       },\n *     },\n *     query: graphql`\n *       query FriendsQuery($id: ID!, $afterCursor: ID, $count: Int!) {\n *         node(id: $id) {\n *           ...FriendsFragment\n *         }\n *       }\n *     `,\n *   }\n * );\n * ```\n *\n * ## Config Properties\n *\n * - `direction`: Either \"forward\" to indicate forward pagination using\n *   after/first, or \"backward\" to indicate backward pagination using\n *   before/last.\n * - `getConnectionFromProps(props)`: PaginationContainer doesn't magically know\n *   which connection data you mean to fetch more of (a container might fetch\n *   multiple connections, but can only paginate one of them). This function is\n *   given the fragment props only (not full props), and should return the\n *   connection data. See the above example that returns the friends data via\n *   `props.user.friends`.\n * - `getFragmentVariables(previousVars, totalCount)`: Given the previous variables\n *   and the new total number of items, get the variables to use when reading\n *   your fragments. Typically this means setting whatever your local \"count\"\n *   variable is to the value of `totalCount`. See the example.\n * - `getVariables(props, {count, cursor})`: Get the variables to use when\n *   fetching the pagination `query`. You may determine the root object id from\n *   props (see the example that uses `props.user.id`) and may also set whatever\n *   variables you use for the after/first/before/last calls based on the count\n *   and cursor.\n * - `query`: A query to use when fetching more connection data. This should\n *   typically reference one of the container's fragment (as in the example)\n *   to ensure that all the necessary fields for sub-components are fetched.\n */\n\nfunction createGetConnectionFromProps(metadata) {\n  var path = metadata.path;\n  !path ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to synthesize a ' + 'getConnectionFromProps function.') : invariant(false) : void 0;\n  return function (props) {\n    var data = props[metadata.fragmentName];\n    for (var i = 0; i < path.length; i++) {\n      if (!data || typeof data !== 'object') {\n        return null;\n      }\n      data = data[path[i]];\n    }\n    return data;\n  };\n}\nfunction createGetFragmentVariables(metadata) {\n  var countVariable = metadata.count;\n  !countVariable ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to synthesize a ' + 'getFragmentVariables function.') : invariant(false) : void 0;\n  return function (prevVars, totalCount) {\n    return (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, prevVars), {}, (0, _defineProperty2[\"default\"])({}, countVariable, totalCount));\n  };\n}\nfunction findConnectionMetadata(fragments) {\n  var foundConnectionMetadata = null;\n  var isRelayModern = false;\n  for (var fragmentName in fragments) {\n    var fragment = fragments[fragmentName];\n    var connectionMetadata = fragment.metadata && fragment.metadata.connection;\n    // HACK: metadata is always set to `undefined` in classic. In modern, even\n    // if empty, it is set to null (never undefined). We use that knowlege to\n    // check if we're dealing with classic or modern\n    if (fragment.metadata !== undefined) {\n      isRelayModern = true;\n    }\n    if (connectionMetadata) {\n      !(connectionMetadata.length === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Only a single @connection is ' + 'supported, `%s` has %s.', fragmentName, connectionMetadata.length) : invariant(false) : void 0;\n      !!foundConnectionMetadata ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Only a single fragment with ' + '@connection is supported.') : invariant(false) : void 0;\n      foundConnectionMetadata = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, connectionMetadata[0]), {}, {\n        fragmentName: fragmentName\n      });\n    }\n  }\n  !(!isRelayModern || foundConnectionMetadata !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: A @connection directive must be present.') : invariant(false) : void 0;\n  return foundConnectionMetadata || {};\n}\nfunction toObserver(observerOrCallback) {\n  return typeof observerOrCallback === 'function' ? {\n    error: observerOrCallback,\n    complete: observerOrCallback,\n    unsubscribe: function unsubscribe(subscription) {\n      typeof observerOrCallback === 'function' && observerOrCallback();\n    }\n  } : observerOrCallback || {};\n}\nfunction createContainerWithFragments(Component, fragments, connectionConfig) {\n  var _class;\n  var componentName = getComponentName(Component);\n  var containerName = getContainerName(Component);\n  var metadata = findConnectionMetadata(fragments);\n  var getConnectionFromProps = connectionConfig.getConnectionFromProps || createGetConnectionFromProps(metadata);\n  var direction = connectionConfig.direction || metadata.direction;\n  !direction ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to infer direction of the ' + 'connection, possibly because both first and last are provided.') : invariant(false) : void 0;\n  var getFragmentVariables = connectionConfig.getFragmentVariables || createGetFragmentVariables(metadata);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        _this.setState({\n          data: _this._resolver.resolve()\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_hasMore\", function () {\n        var connectionData = _this._getConnectionData();\n        return !!(connectionData && connectionData.hasMore && connectionData.cursor);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_isLoading\", function () {\n        return !!_this._refetchSubscription;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_refetchConnection\", function (totalCount, observerOrCallback, refetchVariables) {\n        if (!_this._canFetchPage('refetchConnection')) {\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        _this._refetchVariables = refetchVariables;\n        var paginatingVariables = {\n          count: totalCount,\n          cursor: null,\n          totalCount: totalCount\n        };\n        var fetch = _this._fetchPage(paginatingVariables, toObserver(observerOrCallback), {\n          force: true\n        });\n        return {\n          dispose: fetch.unsubscribe\n        };\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_loadMore\", function (pageSize, observerOrCallback, options) {\n        if (!_this._canFetchPage('loadMore')) {\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        var observer = toObserver(observerOrCallback);\n        var connectionData = _this._getConnectionData();\n        if (!connectionData) {\n          Observable.create(function (sink) {\n            return sink.complete();\n          }).subscribe(observer);\n          return null;\n        }\n        var totalCount = connectionData.edgeCount + pageSize;\n        if (options && options.force) {\n          return _this._refetchConnection(totalCount, observerOrCallback);\n        }\n        var _ConnectionInterface$ = ConnectionInterface.get(),\n          END_CURSOR = _ConnectionInterface$.END_CURSOR,\n          START_CURSOR = _ConnectionInterface$.START_CURSOR;\n        var cursor = connectionData.cursor;\n        process.env.NODE_ENV !== \"production\" ? warning(cursor != null && cursor !== '', 'ReactRelayPaginationContainer: Cannot `loadMore` without valid `%s` (got `%s`)', direction === FORWARD ? END_CURSOR : START_CURSOR, cursor) : void 0;\n        var paginatingVariables = {\n          count: pageSize,\n          cursor: cursor,\n          totalCount: totalCount\n        };\n        var fetch = _this._fetchPage(paginatingVariables, observer, options);\n        return {\n          dispose: fetch.unsubscribe\n        };\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      _this._isARequestInFlight = false;\n      _this._refetchSubscription = null;\n      _this._refetchVariables = null;\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        _this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      } else {\n        _this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer, _this._handleFragmentDataUpdate);\n      }\n      _this.state = {\n        data: _this._resolver.resolve(),\n        prevContext: relayContext,\n        contextForChildren: relayContext,\n        relayProp: _this._buildRelayProp(relayContext),\n        resolverGeneration: 0\n      };\n      _this._isUnmounted = false;\n      _this._hasFetched = false;\n      return _this;\n    }\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._isUnmounted = false;\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      }\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        if (prevState.resolverGeneration !== this.state.resolverGeneration) {\n          this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n        } else {\n          this._rerenderIfStoreHasChanged();\n        }\n      }\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */;\n    _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      var _nextProps$__rootIsQu;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, this.props);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var prevRootVariables = getRootVariablesForFragments(fragments, this.props);\n      var nextRootVariables = getRootVariablesForFragments(fragments, nextProps);\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (relayContext.environment !== this.state.prevContext.environment || !areEqual(prevRootVariables, nextRootVariables) || !areEqual(prevIDs, nextIDs)) {\n        this._cleanup();\n        // Child containers rely on context.relay being mutated (for gDSFP).\n        if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n          this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        } else {\n          this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer, this._handleFragmentDataUpdate);\n        }\n        this.setState(function (prevState) {\n          return {\n            prevContext: relayContext,\n            contextForChildren: relayContext,\n            relayProp: _this2._buildRelayProp(relayContext),\n            resolverGeneration: prevState.resolverGeneration + 1\n          };\n        });\n      } else if (!this._hasFetched) {\n        this._resolver.setProps(nextProps);\n      }\n      var data = this._resolver.resolve();\n      if (data !== this.state.data) {\n        this.setState({\n          data: data\n        });\n      }\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._isUnmounted = true;\n      this._cleanup();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp || nextState.resolverGeneration !== this.state.resolverGeneration) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (nextState.prevContext.environment !== this.state.prevContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    _proto._buildRelayProp = function _buildRelayProp(relayContext) {\n      return {\n        hasMore: this._hasMore,\n        isLoading: this._isLoading,\n        loadMore: this._loadMore,\n        refetchConnection: this._refetchConnection,\n        environment: relayContext.environment\n      };\n    };\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var data = this.state.data;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = this._resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var data = this.state.data;\n      var maybeNewData = this._resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      this._resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._getConnectionData = function _getConnectionData() {\n      // Extract connection data and verify there are more edges to fetch\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        _ = _this$props.componentRef,\n        restProps = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      var props = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, restProps), this.state.data);\n      var connectionData = getConnectionFromProps(props);\n      if (connectionData == null) {\n        return null;\n      }\n      var _ConnectionInterface$2 = ConnectionInterface.get(),\n        EDGES = _ConnectionInterface$2.EDGES,\n        PAGE_INFO = _ConnectionInterface$2.PAGE_INFO,\n        HAS_NEXT_PAGE = _ConnectionInterface$2.HAS_NEXT_PAGE,\n        HAS_PREV_PAGE = _ConnectionInterface$2.HAS_PREV_PAGE,\n        END_CURSOR = _ConnectionInterface$2.END_CURSOR,\n        START_CURSOR = _ConnectionInterface$2.START_CURSOR;\n      !(typeof connectionData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return `null` or a plain object with %s and %s properties, got `%s`.', componentName, EDGES, PAGE_INFO, connectionData) : invariant(false) : void 0;\n      var edges = connectionData[EDGES];\n      var pageInfo = connectionData[PAGE_INFO];\n      if (edges == null || pageInfo == null) {\n        return null;\n      }\n      !Array.isArray(edges) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return an object with %s: Array, got `%s`.', componentName, EDGES, edges) : invariant(false) : void 0;\n      !(typeof pageInfo === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return an object with %s: Object, got `%s`.', componentName, PAGE_INFO, pageInfo) : invariant(false) : void 0;\n      var hasMore = direction === FORWARD ? pageInfo[HAS_NEXT_PAGE] : pageInfo[HAS_PREV_PAGE];\n      var cursor = direction === FORWARD ? pageInfo[END_CURSOR] : pageInfo[START_CURSOR];\n      if (typeof hasMore !== 'boolean' || edges.length !== 0 && typeof cursor === 'undefined') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayPaginationContainer: Cannot paginate without %s fields in `%s`. ' + 'Be sure to fetch %s (got `%s`) and %s (got `%s`).', PAGE_INFO, componentName, direction === FORWARD ? HAS_NEXT_PAGE : HAS_PREV_PAGE, hasMore, direction === FORWARD ? END_CURSOR : START_CURSOR, cursor) : void 0;\n        return null;\n      }\n      return {\n        cursor: cursor,\n        edgeCount: edges.length,\n        hasMore: hasMore\n      };\n    };\n    _proto._getQueryFetcher = function _getQueryFetcher() {\n      if (!this._queryFetcher) {\n        this._queryFetcher = new ReactRelayQueryFetcher();\n      }\n      return this._queryFetcher;\n    };\n    _proto._canFetchPage = function _canFetchPage(method) {\n      if (this._isUnmounted) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayPaginationContainer: Unexpected call of `%s` ' + 'on unmounted container `%s`. It looks like some instances ' + 'of your container still trying to fetch data but they already ' + 'unmounted. Please make sure you clear all timers, intervals, async ' + 'calls, etc that may trigger `%s` call.', method, containerName, method) : void 0;\n        return false;\n      }\n      return true;\n    };\n    _proto._fetchPage = function _fetchPage(paginatingVariables, observer, options) {\n      var _this3 = this;\n      var _assertRelayContext = assertRelayContext(this.props.__relayContext),\n        environment = _assertRelayContext.environment;\n      var _this$props2 = this.props,\n        _ = _this$props2.componentRef,\n        __relayContext = _this$props2.__relayContext,\n        __rootIsQueryRenderer = _this$props2.__rootIsQueryRenderer,\n        restProps = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props2, _excluded2);\n      var props = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, restProps), this.state.data);\n      var fragmentVariables;\n      var rootVariables = getRootVariablesForFragments(fragments, restProps);\n      fragmentVariables = getVariablesFromObject(fragments, restProps);\n      fragmentVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, rootVariables), fragmentVariables), this._refetchVariables);\n      var fetchVariables = connectionConfig.getVariables(props, {\n        count: paginatingVariables.count,\n        cursor: paginatingVariables.cursor\n      }, fragmentVariables);\n      !(typeof fetchVariables === 'object' && fetchVariables !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getVariables()` to ' + 'return an object, got `%s` in `%s`.', fetchVariables, componentName) : invariant(false) : void 0;\n      fetchVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, fetchVariables), this._refetchVariables);\n      fragmentVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, fetchVariables), fragmentVariables);\n      var cacheConfig = options ? {\n        force: !!options.force\n      } : undefined;\n      if (cacheConfig != null && (options === null || options === void 0 ? void 0 : options.metadata) != null) {\n        cacheConfig.metadata = options === null || options === void 0 ? void 0 : options.metadata;\n      }\n      var request = getRequest(connectionConfig.query);\n      var operation = createOperationDescriptor(request, fetchVariables, cacheConfig);\n      var refetchSubscription = null;\n      if (this._refetchSubscription) {\n        this._refetchSubscription.unsubscribe();\n      }\n      this._hasFetched = true;\n      var onNext = function onNext(payload, complete) {\n        var prevData = _this3._resolver.resolve();\n        _this3._resolver.setVariables(getFragmentVariables(fragmentVariables, paginatingVariables.totalCount), operation.request.node);\n        var nextData = _this3._resolver.resolve();\n\n        // Workaround slightly different handling for connection in different\n        // core implementations:\n        // - Classic core requires the count to be explicitly incremented\n        // - Modern core automatically appends new items, updating the count\n        //   isn't required to see new data.\n        //\n        // `setState` is only required if changing the variables would change the\n        // resolved data.\n        // TODO #14894725: remove PaginationContainer equal check\n        if (!areEqual(prevData, nextData)) {\n          _this3.setState({\n            data: nextData,\n            contextForChildren: {\n              environment: _this3.props.__relayContext.environment\n            }\n          }, complete);\n        } else {\n          complete();\n        }\n      };\n      var cleanup = function cleanup() {\n        if (_this3._refetchSubscription === refetchSubscription) {\n          _this3._refetchSubscription = null;\n          _this3._isARequestInFlight = false;\n        }\n      };\n      this._isARequestInFlight = true;\n      refetchSubscription = this._getQueryFetcher().execute({\n        environment: environment,\n        operation: operation,\n        preservePreviousReferences: true\n      }).mergeMap(function (payload) {\n        return Observable.create(function (sink) {\n          onNext(payload, function () {\n            sink.next(); // pass void to public observer's `next`\n            sink.complete();\n          });\n        });\n      })\n      // use do instead of finally so that observer's `complete` fires after cleanup\n      [\"do\"]({\n        error: cleanup,\n        complete: cleanup,\n        unsubscribe: cleanup\n      }).subscribe(observer || {});\n      this._refetchSubscription = this._isARequestInFlight ? refetchSubscription : null;\n      return refetchSubscription;\n    };\n    _proto._cleanup = function _cleanup() {\n      this._resolver.dispose();\n      this._refetchVariables = null;\n      this._hasFetched = false;\n      if (this._refetchSubscription) {\n        this._refetchSubscription.unsubscribe();\n        this._refetchSubscription = null;\n        this._isARequestInFlight = false;\n      }\n      if (this._queryFetcher) {\n        this._queryFetcher.dispose();\n      }\n    }\n\n    // $FlowFixMe[missing-local-annot]\n    ;\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props3 = this.props,\n        componentRef = _this$props3.componentRef,\n        __relayContext = _this$props3.__relayContext,\n        __rootIsQueryRenderer = _this$props3.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props3, _excluded3);\n      return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n        value: this.state.contextForChildren\n      }, /*#__PURE__*/React.createElement(Component, (0, _extends2[\"default\"])({}, props, this.state.data, {\n        ref: componentRef,\n        relay: this.state.relayProp\n      })));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec, connectionConfig) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, function (ComponentClass, fragments) {\n    return createContainerWithFragments(ComponentClass, fragments, connectionConfig);\n  });\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar invariant = require('invariant');\nvar _require = require('relay-runtime'),\n  fetchQuery = _require.__internal.fetchQuery,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  isRelayModernEnvironment = _require.isRelayModernEnvironment;\nvar ReactRelayQueryFetcher = /*#__PURE__*/function () {\n  function ReactRelayQueryFetcher(args) {\n    (0, _defineProperty2[\"default\"])(this, \"_selectionReferences\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_didFetchFinish\", false);\n    if (args != null) {\n      this._cacheSelectionReference = args.cacheSelectionReference;\n      this._selectionReferences = args.selectionReferences;\n    }\n  }\n  var _proto = ReactRelayQueryFetcher.prototype;\n  _proto.getSelectionReferences = function getSelectionReferences() {\n    return {\n      cacheSelectionReference: this._cacheSelectionReference,\n      selectionReferences: this._selectionReferences\n    };\n  };\n  _proto.lookupInStore = function lookupInStore(environment, operation, fetchPolicy) {\n    if (fetchPolicy === 'store-and-network' || fetchPolicy === 'store-or-network') {\n      if (environment.check(operation).status === 'available') {\n        this._retainCachedOperation(environment, operation);\n        return environment.lookup(operation.fragment);\n      }\n    }\n    return null;\n  };\n  _proto.getFetchResult = function getFetchResult() {\n    if (this._didFetchFinish) {\n      // We don't reset '_didFetchFinish' because another callback may be set\n      if (this._error != null) {\n        return {\n          error: this._error\n        };\n      } else if (this._snapshot != null) {\n        return {\n          snapshot: this._snapshot\n        };\n      }\n    } else {\n      return null;\n    }\n  };\n  _proto.execute = function execute(_ref) {\n    var _this = this;\n    var environment = _ref.environment,\n      operation = _ref.operation,\n      _ref$preservePrevious = _ref.preservePreviousReferences,\n      preservePreviousReferences = _ref$preservePrevious === void 0 ? false : _ref$preservePrevious;\n    var reference = environment.retain(operation);\n    var error = function error() {\n      // We may have partially fulfilled the request, so let the next request\n      // or the unmount dispose of the references.\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var complete = function complete() {\n      if (!preservePreviousReferences) {\n        _this.disposeSelectionReferences();\n      }\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var unsubscribe = function unsubscribe() {\n      // Let the next request or the unmount code dispose of the references.\n      // We may have partially fulfilled the request.\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    if (!isRelayModernEnvironment(environment)) {\n      return environment.execute({\n        operation: operation\n      })[\"do\"]({\n        error: error,\n        complete: complete,\n        unsubscribe: unsubscribe\n      });\n    }\n    return fetchQuery(environment, operation)[\"do\"]({\n      error: error,\n      complete: complete,\n      unsubscribe: unsubscribe\n    });\n  };\n  _proto.setOnDataChange = function setOnDataChange(onDataChange) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `setOnDataChange` should have been called after having called `fetch`') : invariant(false) : void 0;\n    if (typeof onDataChange === 'function') {\n      // Mutate the most recent fetchOptions in place,\n      // So that in-progress requests can access the updated callback.\n      this._fetchOptions.onDataChangeCallbacks = this._fetchOptions.onDataChangeCallbacks || [];\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n      if (this._didFetchFinish) {\n        // We don't reset '_didFetchFinish' because another callback may be set\n        if (this._error != null) {\n          onDataChange({\n            error: this._error\n          });\n        } else if (this._snapshot != null) {\n          onDataChange({\n            snapshot: this._snapshot\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * `fetch` fetches the data for the given operation.\n   * If a result is immediately available synchronously, it will be synchronously\n   * returned by this function.\n   *\n   * Otherwise, the fetched result will be communicated via the `onDataChange` callback.\n   * `onDataChange` will be called with the first result (**if it wasn't returned synchronously**),\n   * and then subsequently whenever the data changes.\n   */;\n  _proto.fetch = function fetch(fetchOptions, cacheConfigOverride) {\n    var _this2 = this;\n    var environment = fetchOptions.environment,\n      operation = fetchOptions.operation,\n      onDataChange = fetchOptions.onDataChange;\n    var fetchHasReturned = false;\n    var _error;\n    this.disposeRequest();\n    var oldOnDataChangeCallbacks = this._fetchOptions && this._fetchOptions.onDataChangeCallbacks;\n    this._fetchOptions = {\n      environment: environment,\n      onDataChangeCallbacks: oldOnDataChangeCallbacks || [],\n      operation: operation\n    };\n    if (onDataChange && this._fetchOptions.onDataChangeCallbacks.indexOf(onDataChange) === -1) {\n      // $FlowFixMe[incompatible-use]\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n    }\n    var operationOverride = cacheConfigOverride ? createOperationDescriptor(operation.request.node, operation.request.variables, cacheConfigOverride) : operation;\n    var request = this.execute({\n      environment: environment,\n      operation: operationOverride\n    })[\"finally\"](function () {\n      _this2._pendingRequest = null;\n    }).subscribe({\n      next: function next() {\n        // If we received a response,\n        // Make a note that to notify the callback when it's later added.\n        _this2._didFetchFinish = true;\n        _this2._error = null;\n\n        // Only notify of the first result if `next` is being called **asynchronously**\n        // (i.e. after `fetch` has returned).\n        _this2._onQueryDataAvailable({\n          notifyFirstResult: fetchHasReturned\n        });\n      },\n      error: function error(err) {\n        // If we received a response when we didn't have a change callback,\n        // Make a note that to notify the callback when it's later added.\n        _this2._didFetchFinish = true;\n        _this2._error = err;\n        _this2._snapshot = null;\n        var onDataChangeCallbacks = _this2._fetchOptions && _this2._fetchOptions.onDataChangeCallbacks;\n\n        // Only notify of error if `error` is being called **asynchronously**\n        // (i.e. after `fetch` has returned).\n        if (fetchHasReturned) {\n          if (onDataChangeCallbacks) {\n            onDataChangeCallbacks.forEach(function (onDataChange) {\n              onDataChange({\n                error: err\n              });\n            });\n          }\n        } else {\n          _error = err;\n        }\n      }\n    });\n    this._pendingRequest = {\n      dispose: function dispose() {\n        request.unsubscribe();\n      }\n    };\n    fetchHasReturned = true;\n    if (_error) {\n      throw _error;\n    }\n    return this._snapshot;\n  };\n  _proto.retry = function retry(cacheConfigOverride) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `retry` should be called after having called `fetch`') : invariant(false) : void 0;\n    return this.fetch({\n      environment: this._fetchOptions.environment,\n      operation: this._fetchOptions.operation,\n      onDataChange: null // If there are onDataChangeCallbacks they will be reused\n    }, cacheConfigOverride);\n  };\n  _proto.dispose = function dispose() {\n    this.disposeRequest();\n    this.disposeSelectionReferences();\n  };\n  _proto.disposeRequest = function disposeRequest() {\n    this._error = null;\n    this._snapshot = null;\n\n    // order is important, dispose of pendingFetch before selectionReferences\n    if (this._pendingRequest) {\n      this._pendingRequest.dispose();\n    }\n    if (this._rootSubscription) {\n      this._rootSubscription.dispose();\n      this._rootSubscription = null;\n    }\n  };\n  _proto._retainCachedOperation = function _retainCachedOperation(environment, operation) {\n    this._disposeCacheSelectionReference();\n    this._cacheSelectionReference = environment.retain(operation);\n  };\n  _proto._disposeCacheSelectionReference = function _disposeCacheSelectionReference() {\n    this._cacheSelectionReference && this._cacheSelectionReference.dispose();\n    this._cacheSelectionReference = null;\n  };\n  _proto.disposeSelectionReferences = function disposeSelectionReferences() {\n    this._disposeCacheSelectionReference();\n    this._selectionReferences.forEach(function (r) {\n      return r.dispose();\n    });\n    this._selectionReferences = [];\n  };\n  _proto._onQueryDataAvailable = function _onQueryDataAvailable(_ref2) {\n    var _this3 = this;\n    var notifyFirstResult = _ref2.notifyFirstResult;\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `_onQueryDataAvailable` should have been called after having called `fetch`') : invariant(false) : void 0;\n    var _this$_fetchOptions = this._fetchOptions,\n      environment = _this$_fetchOptions.environment,\n      onDataChangeCallbacks = _this$_fetchOptions.onDataChangeCallbacks,\n      operation = _this$_fetchOptions.operation;\n\n    // `_onQueryDataAvailable` can be called synchronously the first time and can be called\n    // multiple times by network layers that support data subscriptions.\n    // Wait until the first payload to call `onDataChange` and subscribe for data updates.\n    if (this._snapshot) {\n      return;\n    }\n    this._snapshot = environment.lookup(operation.fragment);\n\n    // Subscribe to changes in the data of the root fragment\n    this._rootSubscription = environment.subscribe(this._snapshot, function (snapshot) {\n      // Read from this._fetchOptions in case onDataChange() was lazily added.\n      if (_this3._fetchOptions != null) {\n        var maybeNewOnDataChangeCallbacks = _this3._fetchOptions.onDataChangeCallbacks;\n        if (Array.isArray(maybeNewOnDataChangeCallbacks)) {\n          maybeNewOnDataChangeCallbacks.forEach(function (onDataChange) {\n            return onDataChange({\n              snapshot: snapshot\n            });\n          });\n        }\n      }\n    });\n    if (this._snapshot && notifyFirstResult && Array.isArray(onDataChangeCallbacks)) {\n      var snapshot = this._snapshot;\n      onDataChangeCallbacks.forEach(function (onDataChange) {\n        return onDataChange({\n          snapshot: snapshot\n        });\n      });\n    }\n  };\n  return ReactRelayQueryFetcher;\n}();\nmodule.exports = ReactRelayQueryFetcher;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  RelayFeatureFlags = _require.RelayFeatureFlags;\nvar _require2 = require('relay-runtime'),\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  deepFreeze = _require2.deepFreeze,\n  getRequest = _require2.getRequest;\n/**\n * React may double-fire the constructor, and we call 'fetch' in the\n * constructor. If a request is already in flight from a previous call to the\n * constructor, just reuse the query fetcher and wait for the response.\n */\nvar requestCache = {};\nvar queryRendererContext = {\n  rootIsQueryRenderer: true\n};\n/**\n * @public\n *\n * Orchestrates fetching and rendering data for a single view or view hierarchy:\n * - Fetches the query/variables using the given network implementation.\n * - Normalizes the response(s) to that query, publishing them to the given\n *   store.\n * - Renders the pending/fail/success states with the provided render function.\n * - Subscribes for updates to the root data and re-renders with any changes.\n */\nvar ReactRelayQueryRenderer = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2[\"default\"])(ReactRelayQueryRenderer, _React$Component);\n  function ReactRelayQueryRenderer(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this;\n\n    // Callbacks are attached to the current instance and shared with static\n    // lifecyles by bundling with state. This is okay to do because the\n    // callbacks don't change in reaction to props. However we should not\n    // \"leak\" them before mounting (since we would be unable to clean up). For\n    // that reason, we define them as null initially and fill them in after\n    // mounting to avoid leaking memory.\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleDataChange\", function (params) {\n      var error = params.error == null ? null : params.error;\n      var snapshot = params.snapshot == null ? null : params.snapshot;\n      _this.setState(function (prevState) {\n        var prevRequestCacheKey = prevState.requestCacheKey;\n        if (prevRequestCacheKey) {\n          delete requestCache[prevRequestCacheKey];\n        }\n\n        // Don't update state if nothing has changed.\n        if (snapshot === prevState.snapshot && error === prevState.error) {\n          return null;\n        }\n        return {\n          renderProps: getRenderProps(error, snapshot, prevState.queryFetcher, prevState.retryCallbacks),\n          snapshot: snapshot,\n          requestCacheKey: null\n        };\n      });\n    });\n    var retryCallbacks = {\n      handleDataChange: null,\n      handleRetryAfterError: null\n    };\n    var queryFetcher;\n    var requestCacheKey;\n    if (props.query) {\n      var query = props.query;\n      var request = getRequest(query);\n      requestCacheKey = getRequestCacheKey(request.params, props.variables);\n      queryFetcher = requestCache[requestCacheKey] ? requestCache[requestCacheKey].queryFetcher : new ReactRelayQueryFetcher();\n    } else {\n      queryFetcher = new ReactRelayQueryFetcher();\n    }\n    _this._maybeHiddenOrFastRefresh = false;\n    _this.state = (0, _objectSpread2[\"default\"])({\n      prevPropsEnvironment: props.environment,\n      prevPropsVariables: props.variables,\n      prevQuery: props.query,\n      queryFetcher: queryFetcher,\n      retryCallbacks: retryCallbacks\n    }, fetchQueryAndComputeStateFromProps(props, queryFetcher, retryCallbacks, requestCacheKey));\n    return _this;\n  }\n  ReactRelayQueryRenderer.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.prevQuery !== nextProps.query || prevState.prevPropsEnvironment !== nextProps.environment || !areEqual(prevState.prevPropsVariables, nextProps.variables)) {\n      return resetQueryStateForUpdate(nextProps, prevState);\n    }\n    return null;\n  };\n  var _proto = ReactRelayQueryRenderer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n    if (this._maybeHiddenOrFastRefresh === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current cached resource will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, so that the query is re-evaluated\n      // (and potentially cause a refetch).\n      this._maybeHiddenOrFastRefresh = false;\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState(function (prevState) {\n        var newState = resetQueryStateForUpdate(_this2.props, prevState);\n        var requestCacheKey = newState.requestCacheKey,\n          queryFetcher = newState.queryFetcher;\n        if (requestCacheKey != null && requestCache[requestCacheKey] != null) {\n          if (RelayFeatureFlags.ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION) {\n            var fetchResult = queryFetcher.getFetchResult();\n            if (fetchResult != null) {\n              var _fetchResult$snapshot, _fetchResult$error;\n              var snapshot = (_fetchResult$snapshot = fetchResult.snapshot) !== null && _fetchResult$snapshot !== void 0 ? _fetchResult$snapshot : null;\n              var error = (_fetchResult$error = fetchResult.error) !== null && _fetchResult$error !== void 0 ? _fetchResult$error : null;\n              var prevRequestCacheKey = prevState.requestCacheKey;\n              if (prevRequestCacheKey != null) {\n                delete requestCache[prevRequestCacheKey];\n              }\n              newState.renderProps = getRenderProps(error, snapshot, queryFetcher, prevState.retryCallbacks);\n              newState.snapshot = snapshot;\n              newState.requestCacheKey = null;\n            } else {\n              queryFetcher.setOnDataChange(_this2._handleDataChange);\n            }\n          } else {\n            queryFetcher.setOnDataChange(_this2._handleDataChange);\n          }\n        }\n        return newState;\n      });\n      return;\n    }\n    var _this$state = this.state,\n      retryCallbacks = _this$state.retryCallbacks,\n      queryFetcher = _this$state.queryFetcher,\n      requestCacheKey = _this$state.requestCacheKey;\n    // We don't need to cache the request after the component commits\n    if (requestCacheKey) {\n      delete requestCache[requestCacheKey];\n    }\n    retryCallbacks.handleDataChange = this._handleDataChange;\n    retryCallbacks.handleRetryAfterError = function (error) {\n      return _this2.setState(function (prevState) {\n        var prevRequestCacheKey = prevState.requestCacheKey;\n        if (prevRequestCacheKey) {\n          delete requestCache[prevRequestCacheKey];\n        }\n        return {\n          renderProps: getLoadingRenderProps(),\n          requestCacheKey: null\n        };\n      });\n    };\n\n    // Re-initialize the ReactRelayQueryFetcher with callbacks.\n    // If data has changed since constructions, this will re-render.\n    if (this.props.query) {\n      queryFetcher.setOnDataChange(this._handleDataChange);\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(_prevProps, prevState) {\n    // We don't need to cache the request after the component commits\n    var _this$state2 = this.state,\n      queryFetcher = _this$state2.queryFetcher,\n      requestCacheKey = _this$state2.requestCacheKey;\n    if (requestCacheKey) {\n      delete requestCache[requestCacheKey];\n      // HACK\n      delete this.state.requestCacheKey;\n    }\n    if (this.props.query && queryFetcher !== prevState.queryFetcher) {\n      queryFetcher.setOnDataChange(this._handleDataChange);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.state.queryFetcher.dispose();\n    this._maybeHiddenOrFastRefresh = true;\n  };\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.render !== this.props.render || nextState.renderProps !== this.state.renderProps;\n  };\n  _proto.render = function render() {\n    var _this$state3 = this.state,\n      renderProps = _this$state3.renderProps,\n      relayContext = _this$state3.relayContext;\n    // Note that the root fragment results in `renderProps.props` is already\n    // frozen by the store; this call is to freeze the renderProps object and\n    // error property if set.\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(renderProps);\n    }\n    return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n      value: relayContext\n    }, /*#__PURE__*/React.createElement(ReactRelayQueryRendererContext.Provider, {\n      value: queryRendererContext\n    }, this.props.render(renderProps)));\n  };\n  return ReactRelayQueryRenderer;\n}(React.Component);\nfunction getLoadingRenderProps() {\n  return {\n    error: null,\n    props: null,\n    // `props: null` indicates that the data is being fetched (i.e. loading)\n    retry: null\n  };\n}\nfunction getEmptyRenderProps() {\n  return {\n    error: null,\n    props: {},\n    // `props: {}` indicates no data available\n    retry: null\n  };\n}\nfunction getRenderProps(error, snapshot, queryFetcher, retryCallbacks) {\n  return {\n    error: error ? error : null,\n    props: snapshot ? snapshot.data : null,\n    retry: function retry(cacheConfigOverride) {\n      var syncSnapshot = queryFetcher.retry(cacheConfigOverride);\n      if (syncSnapshot && typeof retryCallbacks.handleDataChange === 'function') {\n        retryCallbacks.handleDataChange({\n          snapshot: syncSnapshot\n        });\n      } else if (error && typeof retryCallbacks.handleRetryAfterError === 'function') {\n        // If retrying after an error and no synchronous result available,\n        // reset the render props\n        retryCallbacks.handleRetryAfterError(error);\n      }\n    }\n  };\n}\nfunction getRequestCacheKey(request, variables) {\n  return JSON.stringify({\n    id: request.cacheID ? request.cacheID : request.id,\n    variables: variables\n  });\n}\nfunction resetQueryStateForUpdate(props, prevState) {\n  var query = props.query;\n  var prevSelectionReferences = prevState.queryFetcher.getSelectionReferences();\n  prevState.queryFetcher.disposeRequest();\n  var queryFetcher;\n  if (query) {\n    var request = getRequest(query);\n    var requestCacheKey = getRequestCacheKey(request.params, props.variables);\n    queryFetcher = requestCache[requestCacheKey] ? requestCache[requestCacheKey].queryFetcher : new ReactRelayQueryFetcher(prevSelectionReferences);\n  } else {\n    queryFetcher = new ReactRelayQueryFetcher(prevSelectionReferences);\n  }\n  return (0, _objectSpread2[\"default\"])({\n    prevQuery: props.query,\n    prevPropsEnvironment: props.environment,\n    prevPropsVariables: props.variables,\n    queryFetcher: queryFetcher\n  }, fetchQueryAndComputeStateFromProps(props, queryFetcher, prevState.retryCallbacks\n  // passing no requestCacheKey will cause it to be recalculated internally\n  // and we want the updated requestCacheKey, since variables may have changed\n  ));\n}\n\nfunction fetchQueryAndComputeStateFromProps(props, queryFetcher, retryCallbacks, requestCacheKey) {\n  var environment = props.environment,\n    query = props.query,\n    variables = props.variables,\n    cacheConfig = props.cacheConfig;\n  var genericEnvironment = environment;\n  if (query) {\n    var request = getRequest(query);\n    var operation = createOperationDescriptor(request, variables, cacheConfig);\n    var relayContext = {\n      environment: genericEnvironment\n    };\n    if (typeof requestCacheKey === 'string' && requestCache[requestCacheKey]) {\n      // This same request is already in flight.\n\n      var snapshot = requestCache[requestCacheKey].snapshot;\n      if (snapshot) {\n        // Use the cached response\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getRenderProps(null, snapshot, queryFetcher, retryCallbacks),\n          snapshot: snapshot,\n          requestCacheKey: requestCacheKey\n        };\n      } else {\n        // Render loading state\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getLoadingRenderProps(),\n          snapshot: null,\n          requestCacheKey: requestCacheKey\n        };\n      }\n    }\n    try {\n      var storeSnapshot = queryFetcher.lookupInStore(genericEnvironment, operation, props.fetchPolicy);\n      var querySnapshot = queryFetcher.fetch({\n        environment: genericEnvironment,\n        onDataChange: null,\n        operation: operation\n      });\n\n      // Use network data first, since it may be fresher\n      var _snapshot = querySnapshot || storeSnapshot;\n\n      // cache the request to avoid duplicate requests\n      requestCacheKey = requestCacheKey || getRequestCacheKey(request.params, props.variables);\n      requestCache[requestCacheKey] = {\n        queryFetcher: queryFetcher,\n        snapshot: _snapshot\n      };\n      if (!_snapshot) {\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getLoadingRenderProps(),\n          snapshot: null,\n          requestCacheKey: requestCacheKey\n        };\n      }\n      return {\n        error: null,\n        relayContext: relayContext,\n        renderProps: getRenderProps(null, _snapshot, queryFetcher, retryCallbacks),\n        snapshot: _snapshot,\n        requestCacheKey: requestCacheKey\n      };\n    } catch (error) {\n      return {\n        error: error,\n        relayContext: relayContext,\n        renderProps: getRenderProps(error, null, queryFetcher, retryCallbacks),\n        snapshot: null,\n        requestCacheKey: requestCacheKey\n      };\n    }\n  } else {\n    queryFetcher.dispose();\n    var _relayContext = {\n      environment: genericEnvironment\n    };\n    return {\n      error: null,\n      relayContext: _relayContext,\n      renderProps: getEmptyRenderProps(),\n      requestCacheKey: null // if there is an error, don't cache request\n    };\n  }\n}\n\nmodule.exports = ReactRelayQueryRenderer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar React = require('react');\nmodule.exports = React.createContext({\n  rootIsQueryRenderer: false\n});","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _excluded = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar getRootVariablesForFragments = require('./getRootVariablesForFragments');\nvar _require = require('./ReactRelayContainerUtils'),\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  Observable = _require3.Observable,\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  createOperationDescriptor = _require3.createOperationDescriptor,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  getRequest = _require3.getRequest,\n  getVariablesFromObject = _require3.getVariablesFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Composes a React component class, returning a new class that intercepts\n * props, resolving them with the provided fragments and subscribing for\n * updates.\n */\nfunction createContainerWithFragments(Component, fragments, taggedNode) {\n  var _class;\n  var containerName = getContainerName(Component);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        var resolverFromThisUpdate = _this.state.resolver;\n        _this.setState(function (updatedState) {\n          return (\n            // If this event belongs to the current data source, update.\n            // Otherwise we should ignore it.\n            resolverFromThisUpdate === updatedState.resolver ? {\n              data: updatedState.resolver.resolve()\n            } : null\n          );\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_refetch\", function (refetchVariables, renderVariables, observerOrCallback, options) {\n        if (_this._isUnmounted) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayRefetchContainer: Unexpected call of `refetch` ' + 'on unmounted container `%s`. It looks like some instances ' + 'of your container still trying to refetch the data but they already ' + 'unmounted. Please make sure you clear all timers, intervals, async ' + 'calls, etc that may trigger `refetch`.', containerName) : void 0;\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        var _assertRelayContext = assertRelayContext(_this.props.__relayContext),\n          environment = _assertRelayContext.environment;\n        var rootVariables = getRootVariablesForFragments(fragments, _this.props);\n        var fetchVariables = typeof refetchVariables === 'function' ? refetchVariables(_this._getFragmentVariables()) : refetchVariables;\n        fetchVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, rootVariables), fetchVariables);\n        var fragmentVariables = renderVariables ? (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, fetchVariables), renderVariables) : fetchVariables;\n        var cacheConfig = options ? {\n          force: !!options.force\n        } : undefined;\n        if (cacheConfig != null && (options === null || options === void 0 ? void 0 : options.metadata) != null) {\n          cacheConfig.metadata = options === null || options === void 0 ? void 0 : options.metadata;\n        }\n        var observer = typeof observerOrCallback === 'function' ? {\n          // callback is not exectued on complete or unsubscribe\n          // for backward compatibility\n          next: observerOrCallback,\n          error: observerOrCallback\n        } : observerOrCallback || {};\n        var query = getRequest(taggedNode);\n        var operation = createOperationDescriptor(query, fetchVariables, cacheConfig);\n\n        // TODO: T26288752 find a better way\n        _this.state.localVariables = fetchVariables;\n\n        // Cancel any previously running refetch.\n        _this._refetchSubscription && _this._refetchSubscription.unsubscribe();\n\n        // Declare refetchSubscription before assigning it in .start(), since\n        // synchronous completion may call callbacks .subscribe() returns.\n        var refetchSubscription;\n        var storeSnapshot = _this._getQueryFetcher().lookupInStore(environment, operation, options === null || options === void 0 ? void 0 : options.fetchPolicy);\n        if (storeSnapshot != null) {\n          _this.state.resolver.setVariables(fragmentVariables, operation.request.node);\n          _this.setState(function (latestState) {\n            return {\n              data: latestState.resolver.resolve(),\n              contextForChildren: {\n                environment: _this.props.__relayContext.environment\n              }\n            };\n          }, function () {\n            observer.next && observer.next();\n            observer.complete && observer.complete();\n          });\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        _this._getQueryFetcher().execute({\n          environment: environment,\n          operation: operation,\n          // TODO (T26430099): Cleanup old references\n          preservePreviousReferences: true\n        }).mergeMap(function (response) {\n          _this.state.resolver.setVariables(fragmentVariables, operation.request.node);\n          return Observable.create(function (sink) {\n            return _this.setState(function (latestState) {\n              return {\n                data: latestState.resolver.resolve(),\n                contextForChildren: {\n                  environment: _this.props.__relayContext.environment\n                }\n              };\n            }, function () {\n              sink.next();\n              sink.complete();\n            });\n          });\n        })[\"finally\"](function () {\n          // Finalizing a refetch should only clear this._refetchSubscription\n          // if the finizing subscription is the most recent call.\n          if (_this._refetchSubscription === refetchSubscription) {\n            _this._refetchSubscription = null;\n          }\n        }).subscribe((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n          start: function start(subscription) {\n            _this._refetchSubscription = refetchSubscription = subscription;\n            observer.start && observer.start(subscription);\n          }\n        }));\n        return {\n          dispose: function dispose() {\n            refetchSubscription && refetchSubscription.unsubscribe();\n          }\n        };\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      _this._refetchSubscription = null;\n      // Do not provide a subscription/callback here.\n      // It is possible for this render to be interrupted or aborted,\n      // In which case the subscription would cause a leak.\n      // We will add the subscription in componentDidMount().\n      var resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      _this.state = {\n        data: resolver.resolve(),\n        localVariables: null,\n        prevProps: props,\n        prevPropsContext: relayContext,\n        contextForChildren: relayContext,\n        relayProp: getRelayProp(relayContext.environment, _this._refetch),\n        resolver: resolver\n      };\n      _this._isUnmounted = false;\n      return _this;\n    }\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._isUnmounted = false;\n      this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (this.state.resolver !== prevState.resolver) {\n        prevState.resolver.dispose();\n        this._queryFetcher && this._queryFetcher.dispose();\n        this._refetchSubscription && this._refetchSubscription.unsubscribe();\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      } else {\n        this._rerenderIfStoreHasChanged();\n      }\n    }\n\n    /**\n     * When new props are received, read data for the new props and add it to\n     * state. Props may be the same in which case previous data can be reused.\n     */;\n    _class.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$__rootIsQu;\n      // Any props change could impact the query, so we mirror props in state.\n      // This is an unusual pattern, but necessary for this container usecase.\n      var prevProps = prevState.prevProps;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, prevProps);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var prevRootVariables = getRootVariablesForFragments(fragments, prevProps);\n      var nextRootVariables = getRootVariablesForFragments(fragments, nextProps);\n      var resolver = prevState.resolver;\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (prevState.prevPropsContext.environment !== relayContext.environment || !areEqual(prevRootVariables, nextRootVariables) || !areEqual(prevIDs, nextIDs)) {\n        // Do not provide a subscription/callback here.\n        // It is possible for this render to be interrupted or aborted,\n        // In which case the subscription would cause a leak.\n        // We will add the subscription in componentDidUpdate().\n        resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        return {\n          data: resolver.resolve(),\n          localVariables: null,\n          prevProps: nextProps,\n          prevPropsContext: relayContext,\n          contextForChildren: relayContext,\n          relayProp: getRelayProp(relayContext.environment, prevState.relayProp.refetch),\n          resolver: resolver\n        };\n      } else if (!prevState.localVariables) {\n        resolver.setProps(nextProps);\n      }\n      var data = resolver.resolve();\n      if (data !== prevState.data) {\n        return {\n          data: data,\n          prevProps: nextProps\n        };\n      }\n      return null;\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._isUnmounted = true;\n      this.state.resolver.dispose();\n      this._queryFetcher && this._queryFetcher.dispose();\n      this._refetchSubscription && this._refetchSubscription.unsubscribe();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (this.state.prevPropsContext.environment !== nextState.prevPropsContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var _this$state = this.state,\n        data = _this$state.data,\n        resolver = _this$state.resolver;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var _this$state2 = this.state,\n        data = _this$state2.data,\n        resolver = _this$state2.resolver;\n      var maybeNewData = resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._getFragmentVariables = function _getFragmentVariables() {\n      return getVariablesFromObject(fragments, this.props);\n    };\n    _proto._getQueryFetcher = function _getQueryFetcher() {\n      if (!this._queryFetcher) {\n        this._queryFetcher = new ReactRelayQueryFetcher();\n      }\n      return this._queryFetcher;\n    };\n    // $FlowFixMe[missing-local-annot]\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        componentRef = _this$props.componentRef,\n        __relayContext = _this$props.__relayContext,\n        __rootIsQueryRenderer = _this$props.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      var _this$state3 = this.state,\n        relayProp = _this$state3.relayProp,\n        contextForChildren = _this$state3.contextForChildren;\n      return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n        value: contextForChildren\n      }, /*#__PURE__*/React.createElement(Component, (0, _extends2[\"default\"])({}, props, this.state.data, {\n        ref: componentRef,\n        relay: relayProp\n      })));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\nfunction getRelayProp(environment, refetch) {\n  return {\n    environment: environment,\n    refetch: refetch\n  };\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec, taggedNode) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, function (ComponentClass, fragments) {\n    return createContainerWithFragments(ComponentClass, fragments, taggedNode);\n  });\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar isRelayEnvironment = require('./isRelayEnvironment');\nvar invariant = require('invariant');\n\n/**\n * Asserts that the input is a matches the `RelayContext` type defined in\n * `RelayEnvironmentTypes` and returns it as that type.\n */\nfunction assertRelayContext(relay) {\n  !isRelayContext(relay) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayContext: Expected `context.relay` to be an object conforming to ' + 'the `RelayContext` interface, got `%s`.', relay) : invariant(false) : void 0;\n  return relay;\n}\n\n/**\n * Determine if the input is a plain object that matches the `RelayContext`\n * type defined in `RelayEnvironmentTypes`.\n */\nfunction isRelayContext(context) {\n  return typeof context === 'object' && context !== null && !Array.isArray(context) && isRelayEnvironment(context.environment);\n}\nmodule.exports = {\n  assertRelayContext: assertRelayContext,\n  isRelayContext: isRelayContext\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n\n/**\n * Fail fast if the user supplies invalid fragments as input.\n */\nfunction assertFragmentMap(componentName, fragmentSpec) {\n  !(fragmentSpec && typeof fragmentSpec === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'Expected a set of GraphQL fragments, got `%s` instead.', componentName, fragmentSpec) : invariant(false) : void 0;\n  for (var key in fragmentSpec) {\n    if (fragmentSpec.hasOwnProperty(key)) {\n      var fragment = fragmentSpec[key];\n      !(fragment && (typeof fragment === 'object' || typeof fragment === 'function')) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'The value of fragment `%s` was expected to be a fragment, got `%s` instead.', componentName, key, fragment) : invariant(false) : void 0;\n    }\n  }\n}\nmodule.exports = assertFragmentMap;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar assertFragmentMap = require('./assertFragmentMap');\nvar _require = require('./ReactRelayContainerUtils'),\n  getComponentName = _require.getComponentName,\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment;\nvar useContext = React.useContext;\n/**\n * Helper to create the Relay HOCs with ref forwarding, setting the displayName\n * and reading the React context.\n */\nfunction buildReactRelayContainer(ComponentClass, fragmentSpec, createContainerWithFragments) {\n  // Sanity-check user-defined fragment input\n  var containerName = getContainerName(ComponentClass);\n  assertFragmentMap(getComponentName(ComponentClass), fragmentSpec);\n  var fragments = {};\n  for (var key in fragmentSpec) {\n    fragments[key] = getFragment(fragmentSpec[key]);\n  }\n  var Container = createContainerWithFragments(ComponentClass, fragments);\n  Container.displayName = containerName;\n  function forwardRef(props, ref) {\n    var _queryRendererContext;\n    var context = useContext(ReactRelayContext);\n    !(context != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`%s` tried to render a context that was not valid this means that ' + '`%s` was rendered outside of a query renderer.', containerName, containerName) : invariant(false) : void 0;\n    var queryRendererContext = useContext(ReactRelayQueryRendererContext);\n    return /*#__PURE__*/React.createElement(Container, (0, _extends2[\"default\"])({}, props, {\n      __relayContext: context,\n      __rootIsQueryRenderer: (_queryRendererContext = queryRendererContext === null || queryRendererContext === void 0 ? void 0 : queryRendererContext.rootIsQueryRenderer) !== null && _queryRendererContext !== void 0 ? _queryRendererContext : false,\n      componentRef: props.componentRef || ref\n    }));\n  }\n  forwardRef.displayName = containerName;\n  var ForwardContainer = React.forwardRef(forwardRef);\n  if (process.env.NODE_ENV !== \"production\") {\n    // Used by RelayModernTestUtils\n    ForwardContainer.__ComponentClass = ComponentClass;\n    ForwardContainer.displayName = containerName;\n  }\n\n  // $FlowFixMe[incompatible-return]\n  return ForwardContainer;\n}\nmodule.exports = buildReactRelayContainer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('relay-runtime'),\n  getSelector = _require.getSelector;\nfunction getRootVariablesForFragments(fragments, props) {\n  var rootVariables = {};\n  // NOTE: For extra safety, we make sure the rootVariables include the\n  // variables from all owners in this fragmentSpec, even though they\n  // should all point to the same owner\n  Object.keys(fragments).forEach(function (key) {\n    var _selector$selectors$, _selector$selectors$2, _selector$owner$varia;\n    var fragmentNode = fragments[key];\n    var fragmentRef = props[key];\n    var selector = getSelector(fragmentNode, fragmentRef);\n    var fragmentOwnerVariables = selector != null && selector.kind === 'PluralReaderSelector' ? (_selector$selectors$ = (_selector$selectors$2 = selector.selectors[0]) === null || _selector$selectors$2 === void 0 ? void 0 : _selector$selectors$2.owner.variables) !== null && _selector$selectors$ !== void 0 ? _selector$selectors$ : {} : (_selector$owner$varia = selector === null || selector === void 0 ? void 0 : selector.owner.variables) !== null && _selector$owner$varia !== void 0 ? _selector$owner$varia : {};\n    rootVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, rootVariables), fragmentOwnerVariables);\n  });\n  return rootVariables;\n}\nmodule.exports = getRootVariablesForFragments;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayFragmentContainer = require('./ReactRelayFragmentContainer');\nvar ReactRelayLocalQueryRenderer = require('./ReactRelayLocalQueryRenderer');\nvar ReactRelayPaginationContainer = require('./ReactRelayPaginationContainer');\nvar ReactRelayQueryRenderer = require('./ReactRelayQueryRenderer');\nvar ReactRelayRefetchContainer = require('./ReactRelayRefetchContainer');\nvar EntryPointContainer = require('./relay-hooks/EntryPointContainer.react');\nvar loadEntryPoint = require('./relay-hooks/loadEntryPoint');\nvar _require = require('./relay-hooks/loadQuery'),\n  loadQuery = _require.loadQuery;\nvar ProfilerContext = require('./relay-hooks/ProfilerContext');\nvar RelayEnvironmentProvider = require('./relay-hooks/RelayEnvironmentProvider');\nvar useClientQuery = require('./relay-hooks/useClientQuery');\nvar useEntryPointLoader = require('./relay-hooks/useEntryPointLoader');\nvar useFragment = require('./relay-hooks/useFragment');\nvar useLazyLoadQuery = require('./relay-hooks/useLazyLoadQuery');\nvar useMutation = require('./relay-hooks/useMutation');\nvar usePaginationFragment = require('./relay-hooks/usePaginationFragment');\nvar usePreloadedQuery = require('./relay-hooks/usePreloadedQuery');\nvar useQueryLoader = require('./relay-hooks/useQueryLoader');\nvar useRefetchableFragment = require('./relay-hooks/useRefetchableFragment');\nvar useRelayEnvironment = require('./relay-hooks/useRelayEnvironment');\nvar useSubscribeToInvalidationState = require('./relay-hooks/useSubscribeToInvalidationState');\nvar useSubscription = require('./relay-hooks/useSubscription');\nvar RelayRuntime = require('relay-runtime');\n/**\n * The public interface to react-relay.\n * Currently contains both Relay Hooks and legacy Container APIs.\n * Will eventually only export the interface from ./hooks.js.\n */\nmodule.exports = {\n  ConnectionHandler: RelayRuntime.ConnectionHandler,\n  QueryRenderer: ReactRelayQueryRenderer,\n  LocalQueryRenderer: ReactRelayLocalQueryRenderer,\n  MutationTypes: RelayRuntime.MutationTypes,\n  RangeOperations: RelayRuntime.RangeOperations,\n  ReactRelayContext: ReactRelayContext,\n  applyOptimisticMutation: RelayRuntime.applyOptimisticMutation,\n  commitLocalUpdate: RelayRuntime.commitLocalUpdate,\n  commitMutation: RelayRuntime.commitMutation,\n  createFragmentContainer: ReactRelayFragmentContainer.createContainer,\n  createPaginationContainer: ReactRelayPaginationContainer.createContainer,\n  createRefetchContainer: ReactRelayRefetchContainer.createContainer,\n  fetchQuery_DEPRECATED: RelayRuntime.fetchQuery_DEPRECATED,\n  graphql: RelayRuntime.graphql,\n  readInlineData: RelayRuntime.readInlineData,\n  requestSubscription: RelayRuntime.requestSubscription,\n  // Relay Hooks\n  EntryPointContainer: EntryPointContainer,\n  RelayEnvironmentProvider: RelayEnvironmentProvider,\n  ProfilerContext: ProfilerContext,\n  fetchQuery: RelayRuntime.fetchQuery,\n  loadQuery: loadQuery,\n  loadEntryPoint: loadEntryPoint,\n  useClientQuery: useClientQuery,\n  useFragment: useFragment,\n  useLazyLoadQuery: useLazyLoadQuery,\n  useEntryPointLoader: useEntryPointLoader,\n  useQueryLoader: useQueryLoader,\n  useMutation: useMutation,\n  usePaginationFragment: usePaginationFragment,\n  usePreloadedQuery: usePreloadedQuery,\n  useRefetchableFragment: useRefetchableFragment,\n  useRelayEnvironment: useRelayEnvironment,\n  useSubscribeToInvalidationState: useSubscribeToInvalidationState,\n  useSubscription: useSubscription\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayEnvironmentTypes`.\n */\nfunction isRelayEnvironment(environment) {\n  return typeof environment === 'object' && environment !== null &&\n  // TODO: add applyMutation/sendMutation once ready in both cores\n  typeof environment.check === 'function' && typeof environment.lookup === 'function' && typeof environment.retain === 'function' && typeof environment.execute === 'function' && typeof environment.subscribe === 'function';\n}\nmodule.exports = isRelayEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ProfilerContext = require('./ProfilerContext');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar _require = require('react'),\n  useContext = _require.useContext,\n  useEffect = _require.useEffect;\nvar warning = require(\"fbjs/lib/warning\");\nfunction EntryPointContainer(_ref) {\n  var entryPointReference = _ref.entryPointReference,\n    props = _ref.props;\n  process.env.NODE_ENV !== \"production\" ? warning(entryPointReference.isDisposed === false, '<EntryPointContainer>: Expected entryPointReference to not be disposed ' + 'yet. This is because disposing the entrypoint marks it for future garbage ' + 'collection, and as such may no longer be present in the Relay store. ' + 'In the future, this will become a hard error.') : void 0;\n  var getComponent = entryPointReference.getComponent,\n    queries = entryPointReference.queries,\n    entryPoints = entryPointReference.entryPoints,\n    extraProps = entryPointReference.extraProps,\n    rootModuleID = entryPointReference.rootModuleID;\n  var Component = getComponent();\n  var profilerContext = useContext(ProfilerContext);\n  var environment = useRelayEnvironment();\n  useEffect(function () {\n    environment.__log({\n      name: 'entrypoint.root.consume',\n      profilerContext: profilerContext,\n      rootModuleID: rootModuleID\n    });\n  }, [environment, profilerContext, rootModuleID]);\n  return /*#__PURE__*/React.createElement(Component, {\n    entryPoints: entryPoints,\n    extraProps: extraProps,\n    props: props,\n    queries: queries\n  });\n}\nmodule.exports = EntryPointContainer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar LRUCache = require('./LRUCache');\nvar _require = require('./QueryResource'),\n  getQueryResourceForEnvironment = _require.getQueryResourceForEnvironment;\nvar SuspenseResource = require('./SuspenseResource');\nvar invariant = require('invariant');\nvar _require2 = require('relay-runtime'),\n  _require2$__internal = _require2.__internal,\n  fetchQuery = _require2$__internal.fetchQuery,\n  getPromiseForActiveRequest = _require2$__internal.getPromiseForActiveRequest,\n  RelayFeatureFlags = _require2.RelayFeatureFlags,\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  getFragmentIdentifier = _require2.getFragmentIdentifier,\n  getPendingOperationsForFragment = _require2.getPendingOperationsForFragment,\n  getSelector = _require2.getSelector,\n  getVariablesFromFragment = _require2.getVariablesFromFragment,\n  handlePotentialSnapshotErrors = _require2.handlePotentialSnapshotErrors,\n  isPromise = _require2.isPromise,\n  recycleNodesInto = _require2.recycleNodesInto;\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\n// TODO: Fix to not rely on LRU. If the number of active fragments exceeds this\n// capacity, readSpec() will fail to find cached entries and break object\n// identity even if data hasn't changed.\nvar CACHE_CAPACITY = 1000000;\n\n// this is frozen so that users don't accidentally push data into the array\nvar CONSTANT_READONLY_EMPTY_ARRAY = Object.freeze([]);\nfunction isMissingData(snapshot) {\n  if (Array.isArray(snapshot)) {\n    return snapshot.some(function (s) {\n      return s.isMissingData;\n    });\n  }\n  return snapshot.isMissingData;\n}\nfunction hasMissingClientEdges(snapshot) {\n  var _snapshot$missingClie, _snapshot$missingClie2;\n  if (Array.isArray(snapshot)) {\n    return snapshot.some(function (s) {\n      var _s$missingClientEdges, _s$missingClientEdges2;\n      return ((_s$missingClientEdges = (_s$missingClientEdges2 = s.missingClientEdges) === null || _s$missingClientEdges2 === void 0 ? void 0 : _s$missingClientEdges2.length) !== null && _s$missingClientEdges !== void 0 ? _s$missingClientEdges : 0) > 0;\n    });\n  }\n  return ((_snapshot$missingClie = (_snapshot$missingClie2 = snapshot.missingClientEdges) === null || _snapshot$missingClie2 === void 0 ? void 0 : _snapshot$missingClie2.length) !== null && _snapshot$missingClie !== void 0 ? _snapshot$missingClie : 0) > 0;\n}\nfunction missingLiveResolverFields(snapshot) {\n  if (Array.isArray(snapshot)) {\n    return snapshot.map(function (s) {\n      return s.missingLiveResolverFields;\n    }).filter(Boolean).flat();\n  }\n  return snapshot.missingLiveResolverFields;\n}\nfunction singularOrPluralForEach(snapshot, f) {\n  if (Array.isArray(snapshot)) {\n    snapshot.forEach(f);\n  } else {\n    f(snapshot);\n  }\n}\nfunction getFragmentResult(cacheKey, snapshot, storeEpoch) {\n  if (Array.isArray(snapshot)) {\n    return {\n      cacheKey: cacheKey,\n      snapshot: snapshot,\n      data: snapshot.map(function (s) {\n        return s.data;\n      }),\n      isMissingData: isMissingData(snapshot),\n      storeEpoch: storeEpoch\n    };\n  }\n  return {\n    cacheKey: cacheKey,\n    snapshot: snapshot,\n    data: snapshot.data,\n    isMissingData: isMissingData(snapshot),\n    storeEpoch: storeEpoch\n  };\n}\n\n/**\n * The purpose of this cache is to allow information to be passed from an\n * initial read which suspends through to the commit that follows a subsequent\n * successful read. Specifically, the QueryResource result for the data fetch\n * is passed through so that that query can be retained on commit.\n */\nvar ClientEdgeQueryResultsCache = /*#__PURE__*/function () {\n  function ClientEdgeQueryResultsCache(environment) {\n    (0, _defineProperty2[\"default\"])(this, \"_cache\", new Map());\n    (0, _defineProperty2[\"default\"])(this, \"_retainCounts\", new Map());\n    this._environment = environment;\n  }\n  var _proto = ClientEdgeQueryResultsCache.prototype;\n  _proto.get = function get(fragmentIdentifier) {\n    var _this$_cache$get$, _this$_cache$get;\n    return (_this$_cache$get$ = (_this$_cache$get = this._cache.get(fragmentIdentifier)) === null || _this$_cache$get === void 0 ? void 0 : _this$_cache$get[0]) !== null && _this$_cache$get$ !== void 0 ? _this$_cache$get$ : undefined;\n  };\n  _proto.recordQueryResults = function recordQueryResults(fragmentIdentifier, value // may be mutated after being passed here\n  ) {\n    var _this = this;\n    var existing = this._cache.get(fragmentIdentifier);\n    if (!existing) {\n      var suspenseResource = new SuspenseResource(function () {\n        return _this._retain(fragmentIdentifier);\n      });\n      this._cache.set(fragmentIdentifier, [value, suspenseResource]);\n      suspenseResource.temporaryRetain(this._environment);\n    } else {\n      var existingResults = existing[0],\n        _suspenseResource = existing[1];\n      value.forEach(function (queryResult) {\n        existingResults.push(queryResult);\n      });\n      _suspenseResource.temporaryRetain(this._environment);\n    }\n  };\n  _proto._retain = function _retain(id) {\n    var _this2 = this;\n    var _this$_retainCounts$g;\n    var retainCount = ((_this$_retainCounts$g = this._retainCounts.get(id)) !== null && _this$_retainCounts$g !== void 0 ? _this$_retainCounts$g : 0) + 1;\n    this._retainCounts.set(id, retainCount);\n    return {\n      dispose: function dispose() {\n        var _this$_retainCounts$g2;\n        var newRetainCount = ((_this$_retainCounts$g2 = _this2._retainCounts.get(id)) !== null && _this$_retainCounts$g2 !== void 0 ? _this$_retainCounts$g2 : 0) - 1;\n        if (newRetainCount > 0) {\n          _this2._retainCounts.set(id, newRetainCount);\n        } else {\n          _this2._retainCounts[\"delete\"](id);\n          _this2._cache[\"delete\"](id);\n        }\n      }\n    };\n  };\n  return ClientEdgeQueryResultsCache;\n}();\nvar FragmentResourceImpl = /*#__PURE__*/function () {\n  function FragmentResourceImpl(environment) {\n    this._environment = environment;\n    this._cache = LRUCache.create(CACHE_CAPACITY);\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      this._clientEdgeQueryResultsCache = new ClientEdgeQueryResultsCache(environment);\n    }\n  }\n\n  /**\n   * This function should be called during a Component's render function,\n   * to read the data for a fragment, or suspend if the fragment is being\n   * fetched.\n   */\n  var _proto2 = FragmentResourceImpl.prototype;\n  _proto2.read = function read(fragmentNode, fragmentRef, componentDisplayName, fragmentKey) {\n    return this.readWithIdentifier(fragmentNode, fragmentRef, getFragmentIdentifier(fragmentNode, fragmentRef), componentDisplayName, fragmentKey);\n  }\n\n  /**\n   * Like `read`, but with a pre-computed fragmentIdentifier that should be\n   * equal to `getFragmentIdentifier(fragmentNode, fragmentRef)` from the\n   * arguments.\n   */;\n  _proto2.readWithIdentifier = function readWithIdentifier(fragmentNode, fragmentRef, fragmentIdentifier, componentDisplayName, fragmentKey) {\n    var _this3 = this;\n    var _fragmentNode$metadat, _fragmentNode$metadat2, _missingLiveResolverF2, _missingLiveResolverF3;\n    var environment = this._environment;\n\n    // If fragmentRef is null or undefined, pass it directly through.\n    // This is a convenience when consuming fragments via a HOC API, when the\n    // prop corresponding to the fragment ref might be passed as null.\n    if (fragmentRef == null) {\n      return {\n        cacheKey: fragmentIdentifier,\n        data: null,\n        isMissingData: false,\n        snapshot: null,\n        storeEpoch: 0\n      };\n    }\n    var storeEpoch = environment.getStore().getEpoch();\n\n    // If fragmentRef is plural, ensure that it is an array.\n    // If it's empty, return the empty array directly before doing any more work.\n    if ((fragmentNode === null || fragmentNode === void 0 ? void 0 : (_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) === true) {\n      !Array.isArray(fragmentRef) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected fragment pointer%s for fragment `%s` to be ' + 'an array, instead got `%s`. Remove `@relay(plural: true)` ' + 'from fragment `%s` to allow the prop to be an object.', fragmentKey != null ? \" for key `\".concat(fragmentKey, \"`\") : '', fragmentNode.name, typeof fragmentRef, fragmentNode.name) : invariant(false) : void 0;\n      if (fragmentRef.length === 0) {\n        return {\n          cacheKey: fragmentIdentifier,\n          data: CONSTANT_READONLY_EMPTY_ARRAY,\n          isMissingData: false,\n          snapshot: CONSTANT_READONLY_EMPTY_ARRAY,\n          storeEpoch: storeEpoch\n        };\n      }\n    }\n\n    // Now we actually attempt to read the fragment:\n\n    // 1. Check if there's a cached value for this fragment\n    var cachedValue = this._cache.get(fragmentIdentifier);\n    if (cachedValue != null) {\n      var _missingLiveResolverF;\n      if (cachedValue.kind === 'pending' && isPromise(cachedValue.promise)) {\n        environment.__log({\n          name: 'suspense.fragment',\n          data: cachedValue.result.data,\n          fragment: fragmentNode,\n          isRelayHooks: true,\n          isMissingData: cachedValue.result.isMissingData,\n          isPromiseCached: true,\n          pendingOperations: cachedValue.pendingOperations\n        });\n        throw cachedValue.promise;\n      }\n      if (cachedValue.kind === 'done' && cachedValue.result.snapshot && !((_missingLiveResolverF = missingLiveResolverFields(cachedValue.result.snapshot)) !== null && _missingLiveResolverF !== void 0 && _missingLiveResolverF.length)) {\n        this._throwOrLogErrorsInSnapshot(\n        // $FlowFixMe[incompatible-call]\n        cachedValue.result.snapshot);\n\n        // This cache gets populated directly whenever the store notifies us of\n        // an update. That mechanism does not check for missing data, or\n        // in-flight requests.\n        if (cachedValue.result.isMissingData) {\n          environment.__log({\n            name: 'fragmentresource.missing_data',\n            data: cachedValue.result.data,\n            fragment: fragmentNode,\n            isRelayHooks: true,\n            cached: true\n          });\n        }\n        return cachedValue.result;\n      }\n    }\n\n    // 2. If not, try reading the fragment from the Relay store.\n    // If the snapshot has data, return it and save it in cache\n    var fragmentSelector = getSelector(fragmentNode, fragmentRef);\n    !(fragmentSelector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to receive an object where `...%s` was spread, ' + 'but the fragment reference was not found`. This is most ' + 'likely the result of:\\n' + \"- Forgetting to spread `%s` in `%s`'s parent's fragment.\\n\" + '- Conditionally fetching `%s` but unconditionally passing %s prop ' + 'to `%s`. If the parent fragment only fetches the fragment conditionally ' + '- with e.g. `@include`, `@skip`, or inside a `... on SomeType { }` ' + 'spread  - then the fragment reference will not exist. ' + 'In this case, pass `null` if the conditions for evaluating the ' + 'fragment are not met (e.g. if the `@include(if)` value is false.)', fragmentNode.name, fragmentNode.name, componentDisplayName, fragmentNode.name, fragmentKey == null ? 'a fragment reference' : \"the `\".concat(fragmentKey, \"`\"), componentDisplayName) : invariant(false) : void 0;\n    var snapshot = fragmentSelector.kind === 'PluralReaderSelector' ? fragmentSelector.selectors.map(function (s) {\n      return environment.lookup(s);\n    }) : environment.lookup(fragmentSelector);\n    var fragmentResult = getFragmentResult(fragmentIdentifier, snapshot, storeEpoch);\n    if (!fragmentResult.isMissingData) {\n      this._throwOrLogErrorsInSnapshot(snapshot);\n      this._cache.set(fragmentIdentifier, {\n        kind: 'done',\n        result: fragmentResult\n      });\n      return fragmentResult;\n    }\n\n    // 3. If we don't have data in the store, there's two cases where we should\n    // suspend to await the data: First if any client edges were traversed where\n    // the destination record was missing data; in that case we initiate a query\n    // here to fetch the missing data. Second, there may already be a request\n    // in flight for the fragment's parent query, or for another operation that\n    //  may affect the parent's query data, such as a mutation or subscription.\n    // For any of these cases we can get a promise, which we will cache and\n    // suspend on.\n\n    // First, initiate a query for any client edges that were missing data:\n    var clientEdgeRequests = null;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && ((_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.hasClientEdges) === true && hasMissingClientEdges(snapshot)) {\n      clientEdgeRequests = [];\n      var queryResource = getQueryResourceForEnvironment(this._environment);\n      var queryResults = [];\n      singularOrPluralForEach(snapshot, function (snap) {\n        var _snap$missingClientEd;\n        (_snap$missingClientEd = snap.missingClientEdges) === null || _snap$missingClientEd === void 0 ? void 0 : _snap$missingClientEd.forEach(function (_ref) {\n          var _clientEdgeRequests;\n          var request = _ref.request,\n            clientEdgeDestinationID = _ref.clientEdgeDestinationID;\n          var _this3$_performClient = _this3._performClientEdgeQuery(queryResource, fragmentNode, fragmentRef, request, clientEdgeDestinationID),\n            queryResult = _this3$_performClient.queryResult,\n            requestDescriptor = _this3$_performClient.requestDescriptor;\n          queryResults.push(queryResult);\n          (_clientEdgeRequests = clientEdgeRequests) === null || _clientEdgeRequests === void 0 ? void 0 : _clientEdgeRequests.push(requestDescriptor);\n        });\n      });\n      // Store the query so that it can be retained when our own fragment is\n      // subscribed to. This merges with any existing query results:\n      !(this._clientEdgeQueryResultsCache != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client edge query result cache should exist when ENABLE_CLIENT_EDGES is on.') : invariant(false) : void 0;\n      this._clientEdgeQueryResultsCache.recordQueryResults(fragmentIdentifier, queryResults);\n    }\n    var clientEdgePromises = [];\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && clientEdgeRequests) {\n      clientEdgePromises = clientEdgeRequests.map(function (request) {\n        return getPromiseForActiveRequest(_this3._environment, request);\n      }).filter(Boolean);\n    }\n\n    // Finally look for operations in flight for our parent query:\n    var fragmentOwner = fragmentSelector.kind === 'PluralReaderSelector' ? fragmentSelector.selectors[0].owner : fragmentSelector.owner;\n    var parentQueryPromiseResult = this._getAndSavePromiseForFragmentRequestInFlight(fragmentIdentifier, fragmentNode, fragmentOwner, fragmentResult);\n    var parentQueryPromiseResultPromise = parentQueryPromiseResult === null || parentQueryPromiseResult === void 0 ? void 0 : parentQueryPromiseResult.promise; // for refinement\n    var missingResolverFieldPromises = (_missingLiveResolverF2 = (_missingLiveResolverF3 = missingLiveResolverFields(snapshot)) === null || _missingLiveResolverF3 === void 0 ? void 0 : _missingLiveResolverF3.map(function (_ref2) {\n      var liveStateID = _ref2.liveStateID;\n      var store = environment.getStore();\n\n      // $FlowFixMe[prop-missing] This is expected to be a LiveResolverStore\n      return store.getLiveResolverPromise(liveStateID);\n    })) !== null && _missingLiveResolverF2 !== void 0 ? _missingLiveResolverF2 : [];\n    if (clientEdgePromises.length || missingResolverFieldPromises.length || isPromise(parentQueryPromiseResultPromise)) {\n      var _parentQueryPromiseRe, _clientEdgeRequests2;\n      environment.__log({\n        name: 'suspense.fragment',\n        data: fragmentResult.data,\n        fragment: fragmentNode,\n        isRelayHooks: true,\n        isPromiseCached: false,\n        isMissingData: fragmentResult.isMissingData,\n        // TODO! Attach information here about missing live resolver fields\n        pendingOperations: [].concat((0, _toConsumableArray2[\"default\"])((_parentQueryPromiseRe = parentQueryPromiseResult === null || parentQueryPromiseResult === void 0 ? void 0 : parentQueryPromiseResult.pendingOperations) !== null && _parentQueryPromiseRe !== void 0 ? _parentQueryPromiseRe : []), (0, _toConsumableArray2[\"default\"])((_clientEdgeRequests2 = clientEdgeRequests) !== null && _clientEdgeRequests2 !== void 0 ? _clientEdgeRequests2 : []))\n      });\n      var promises = [];\n      if (clientEdgePromises.length > 0) {\n        promises = promises.concat(clientEdgePromises);\n      }\n      if (missingResolverFieldPromises.length > 0) {\n        promises = promises.concat(missingResolverFieldPromises);\n      }\n      if (promises.length > 0) {\n        if (parentQueryPromiseResultPromise) {\n          promises.push(parentQueryPromiseResultPromise);\n        }\n        throw Promise.all(promises);\n      }\n\n      // Note: we are re-throwing the `parentQueryPromiseResultPromise` here,\n      // because some of our suspense-related code is relying on the instance equality\n      // of thrown promises. See FragmentResource-test.js\n      if (parentQueryPromiseResultPromise) {\n        throw parentQueryPromiseResultPromise;\n      }\n    }\n    this._throwOrLogErrorsInSnapshot(snapshot);\n\n    // At this point, there's nothing we can do. We don't have all the expected\n    // data, but there's no indication the missing data will be fulfilled. So we\n    // choose to return potentially non-typesafe data. The data returned here\n    // might not match the generated types for this fragment/operation.\n    environment.__log({\n      name: 'fragmentresource.missing_data',\n      data: fragmentResult.data,\n      fragment: fragmentNode,\n      isRelayHooks: true,\n      cached: false\n    });\n    return getFragmentResult(fragmentIdentifier, snapshot, storeEpoch);\n  };\n  _proto2._performClientEdgeQuery = function _performClientEdgeQuery(queryResource, fragmentNode, fragmentRef, request, clientEdgeDestinationID) {\n    var originalVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n    var variables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, originalVariables), {}, {\n      id: clientEdgeDestinationID // TODO should be a reserved name\n    });\n\n    var operation = createOperationDescriptor(request, variables, {} //  TODO cacheConfig should probably inherent from parent operation\n    );\n\n    var fetchObservable = fetchQuery(this._environment, operation);\n    var queryResult = queryResource.prepare(operation, fetchObservable\n    // TODO should inherent render policy etc. from parent operation\n    );\n\n    return {\n      requestDescriptor: operation.request,\n      queryResult: queryResult\n    };\n  };\n  _proto2._throwOrLogErrorsInSnapshot = function _throwOrLogErrorsInSnapshot(snapshot) {\n    var _this4 = this;\n    if (Array.isArray(snapshot)) {\n      snapshot.forEach(function (s) {\n        handlePotentialSnapshotErrors(_this4._environment, s.missingRequiredFields, s.relayResolverErrors);\n      });\n    } else {\n      handlePotentialSnapshotErrors(this._environment, snapshot.missingRequiredFields, snapshot.relayResolverErrors);\n    }\n  };\n  _proto2.readSpec = function readSpec(fragmentNodes, fragmentRefs, componentDisplayName) {\n    var result = {};\n    for (var key in fragmentNodes) {\n      result[key] = this.read(fragmentNodes[key], fragmentRefs[key], componentDisplayName, key);\n    }\n    return result;\n  };\n  _proto2.subscribe = function subscribe(fragmentResult, callback) {\n    var _this5 = this;\n    var environment = this._environment;\n    var cacheKey = fragmentResult.cacheKey;\n    var renderedSnapshot = fragmentResult.snapshot;\n    if (!renderedSnapshot) {\n      return {\n        dispose: function dispose() {}\n      };\n    }\n\n    // 1. Check for any updates missed during render phase\n    // TODO(T44066760): More efficiently detect if we missed an update\n    var _this$checkMissedUpda = this.checkMissedUpdates(fragmentResult),\n      didMissUpdates = _this$checkMissedUpda[0],\n      currentSnapshot = _this$checkMissedUpda[1];\n\n    // 2. If an update was missed, notify the component so it updates with\n    // the latest data.\n    if (didMissUpdates) {\n      callback();\n    }\n\n    // 3. Establish subscriptions on the snapshot(s)\n    var disposables = [];\n    if (Array.isArray(renderedSnapshot)) {\n      !Array.isArray(currentSnapshot) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected snapshots to be plural. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n      currentSnapshot.forEach(function (snapshot, idx) {\n        disposables.push(environment.subscribe(snapshot, function (latestSnapshot) {\n          var storeEpoch = environment.getStore().getEpoch();\n          _this5._updatePluralSnapshot(cacheKey, currentSnapshot, latestSnapshot, idx, storeEpoch);\n          callback();\n        }));\n      });\n    } else {\n      !(currentSnapshot != null && !Array.isArray(currentSnapshot)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected snapshot to be singular. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n      disposables.push(environment.subscribe(currentSnapshot, function (latestSnapshot) {\n        var storeEpoch = environment.getStore().getEpoch();\n        _this5._cache.set(cacheKey, {\n          kind: 'done',\n          result: getFragmentResult(cacheKey, latestSnapshot, storeEpoch)\n        });\n        callback();\n      }));\n    }\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      var _this$_clientEdgeQuer, _this$_clientEdgeQuer2;\n      var clientEdgeQueryResults = (_this$_clientEdgeQuer = (_this$_clientEdgeQuer2 = this._clientEdgeQueryResultsCache) === null || _this$_clientEdgeQuer2 === void 0 ? void 0 : _this$_clientEdgeQuer2.get(cacheKey)) !== null && _this$_clientEdgeQuer !== void 0 ? _this$_clientEdgeQuer : undefined;\n      if (clientEdgeQueryResults !== null && clientEdgeQueryResults !== void 0 && clientEdgeQueryResults.length) {\n        var queryResource = getQueryResourceForEnvironment(this._environment);\n        clientEdgeQueryResults.forEach(function (queryResult) {\n          disposables.push(queryResource.retain(queryResult));\n        });\n      }\n    }\n    return {\n      dispose: function dispose() {\n        disposables.forEach(function (s) {\n          return s.dispose();\n        });\n        _this5._cache[\"delete\"](cacheKey);\n      }\n    };\n  };\n  _proto2.subscribeSpec = function subscribeSpec(fragmentResults, callback) {\n    var _this6 = this;\n    var disposables = Object.keys(fragmentResults).map(function (key) {\n      return _this6.subscribe(fragmentResults[key], callback);\n    });\n    return {\n      dispose: function dispose() {\n        disposables.forEach(function (disposable) {\n          disposable.dispose();\n        });\n      }\n    };\n  };\n  _proto2.checkMissedUpdates = function checkMissedUpdates(fragmentResult) {\n    var environment = this._environment;\n    var renderedSnapshot = fragmentResult.snapshot;\n    if (!renderedSnapshot) {\n      return [false, null];\n    }\n    var storeEpoch = null;\n    // Bail out if the store hasn't been written since last read\n    storeEpoch = environment.getStore().getEpoch();\n    if (fragmentResult.storeEpoch === storeEpoch) {\n      return [false, fragmentResult.snapshot];\n    }\n    var cacheKey = fragmentResult.cacheKey;\n    if (Array.isArray(renderedSnapshot)) {\n      var didMissUpdates = false;\n      var currentSnapshots = [];\n      renderedSnapshot.forEach(function (snapshot, idx) {\n        var currentSnapshot = environment.lookup(snapshot.selector);\n        var renderData = snapshot.data;\n        var currentData = currentSnapshot.data;\n        var updatedData = recycleNodesInto(renderData, currentData);\n        if (updatedData !== renderData) {\n          currentSnapshot = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, currentSnapshot), {}, {\n            data: updatedData\n          });\n          didMissUpdates = true;\n        }\n        currentSnapshots[idx] = currentSnapshot;\n      });\n      // Only update the cache when the data is changed to avoid\n      // returning different `data` instances\n      if (didMissUpdates) {\n        this._cache.set(cacheKey, {\n          kind: 'done',\n          result: getFragmentResult(cacheKey, currentSnapshots, storeEpoch)\n        });\n      }\n      return [didMissUpdates, currentSnapshots];\n    }\n    var currentSnapshot = environment.lookup(renderedSnapshot.selector);\n    var renderData = renderedSnapshot.data;\n    var currentData = currentSnapshot.data;\n    var updatedData = recycleNodesInto(renderData, currentData);\n    var updatedCurrentSnapshot = {\n      data: updatedData,\n      isMissingData: currentSnapshot.isMissingData,\n      missingClientEdges: currentSnapshot.missingClientEdges,\n      missingLiveResolverFields: currentSnapshot.missingLiveResolverFields,\n      seenRecords: currentSnapshot.seenRecords,\n      selector: currentSnapshot.selector,\n      missingRequiredFields: currentSnapshot.missingRequiredFields,\n      relayResolverErrors: currentSnapshot.relayResolverErrors\n    };\n    if (updatedData !== renderData) {\n      this._cache.set(cacheKey, {\n        kind: 'done',\n        result: getFragmentResult(cacheKey, updatedCurrentSnapshot, storeEpoch)\n      });\n    }\n    return [updatedData !== renderData, updatedCurrentSnapshot];\n  };\n  _proto2.checkMissedUpdatesSpec = function checkMissedUpdatesSpec(fragmentResults) {\n    var _this7 = this;\n    return Object.keys(fragmentResults).some(function (key) {\n      return _this7.checkMissedUpdates(fragmentResults[key])[0];\n    });\n  };\n  _proto2._getAndSavePromiseForFragmentRequestInFlight = function _getAndSavePromiseForFragmentRequestInFlight(cacheKey, fragmentNode, fragmentOwner, fragmentResult) {\n    var _this8 = this;\n    var pendingOperationsResult = getPendingOperationsForFragment(this._environment, fragmentNode, fragmentOwner);\n    if (pendingOperationsResult == null) {\n      return null;\n    }\n\n    // When the Promise for the request resolves, we need to make sure to\n    // update the cache with the latest data available in the store before\n    // resolving the Promise\n    var networkPromise = pendingOperationsResult.promise;\n    var pendingOperations = pendingOperationsResult.pendingOperations;\n    var promise = networkPromise.then(function () {\n      _this8._cache[\"delete\"](cacheKey);\n    })[\"catch\"](function (error) {\n      _this8._cache[\"delete\"](cacheKey);\n    });\n    // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n    promise.displayName = networkPromise.displayName;\n    this._cache.set(cacheKey, {\n      kind: 'pending',\n      pendingOperations: pendingOperations,\n      promise: promise,\n      result: fragmentResult\n    });\n    return {\n      promise: promise,\n      pendingOperations: pendingOperations\n    };\n  };\n  _proto2._updatePluralSnapshot = function _updatePluralSnapshot(cacheKey, baseSnapshots, latestSnapshot, idx, storeEpoch) {\n    var _currentFragmentResul;\n    var currentFragmentResult = this._cache.get(cacheKey);\n    if (isPromise(currentFragmentResult)) {\n      reportInvalidCachedData(latestSnapshot.selector.node.name);\n      return;\n    }\n    var currentSnapshot = currentFragmentResult === null || currentFragmentResult === void 0 ? void 0 : (_currentFragmentResul = currentFragmentResult.result) === null || _currentFragmentResul === void 0 ? void 0 : _currentFragmentResul.snapshot;\n    if (currentSnapshot && !Array.isArray(currentSnapshot)) {\n      reportInvalidCachedData(latestSnapshot.selector.node.name);\n      return;\n    }\n    var nextSnapshots = currentSnapshot ? (0, _toConsumableArray2[\"default\"])(currentSnapshot) : (0, _toConsumableArray2[\"default\"])(baseSnapshots);\n    nextSnapshots[idx] = latestSnapshot;\n    this._cache.set(cacheKey, {\n      kind: 'done',\n      result: getFragmentResult(cacheKey, nextSnapshots, storeEpoch)\n    });\n  };\n  return FragmentResourceImpl;\n}();\nfunction reportInvalidCachedData(nodeName) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to find cached data for plural fragment `%s` when ' + 'receiving a subscription. ' + \"If you're seeing this, this is likely a bug in Relay.\", nodeName) : invariant(false) : void 0;\n}\nfunction createFragmentResource(environment) {\n  return new FragmentResourceImpl(environment);\n}\nvar dataResources = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction getFragmentResourceForEnvironment(environment) {\n  var cached = dataResources.get(environment);\n  if (cached) {\n    return cached;\n  }\n  var newDataResource = createFragmentResource(environment);\n  dataResources.set(environment, newDataResource);\n  return newDataResource;\n}\nmodule.exports = {\n  createFragmentResource: createFragmentResource,\n  getFragmentResourceForEnvironment: getFragmentResourceForEnvironment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar warning = require(\"fbjs/lib/warning\");\nvar implementation = null;\nfunction inject(impl) {\n  process.env.NODE_ENV !== \"production\" ? warning(implementation !== null, 'Relay HooksImplementation was injected twice.') : void 0;\n  implementation = impl;\n}\nfunction get() {\n  return implementation;\n}\nmodule.exports = {\n  inject: inject,\n  get: get\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n/**\n * JS maps (both plain objects and Map) maintain key insertion\n * order, which means there is an easy way to simulate LRU behavior\n * that should also perform quite well:\n *\n * To insert a new value, first delete the key from the inner _map,\n * then _map.set(k, v). By deleting and reinserting, you ensure that the\n * map sees the key as the last inserted key.\n *\n * Get does the same: if the key is present, delete and reinsert it.\n */\nvar LRUCache = /*#__PURE__*/function () {\n  function LRUCache(capacity) {\n    this._capacity = capacity;\n    !(this._capacity > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LRUCache: Unable to create instance of cache with zero or negative capacity.') : invariant(false) : void 0;\n    this._map = new Map();\n  }\n  var _proto = LRUCache.prototype;\n  _proto.set = function set(key, value) {\n    this._map[\"delete\"](key);\n    this._map.set(key, value);\n    if (this._map.size > this._capacity) {\n      var firstKey = this._map.keys().next();\n      if (!firstKey.done) {\n        this._map[\"delete\"](firstKey.value);\n      }\n    }\n  };\n  _proto.get = function get(key) {\n    var value = this._map.get(key);\n    if (value != null) {\n      this._map[\"delete\"](key);\n      this._map.set(key, value);\n    }\n    return value;\n  };\n  _proto.has = function has(key) {\n    return this._map.has(key);\n  };\n  _proto[\"delete\"] = function _delete(key) {\n    this._map[\"delete\"](key);\n  };\n  _proto.size = function size() {\n    return this._map.size;\n  };\n  _proto.capacity = function capacity() {\n    return this._capacity - this._map.size;\n  };\n  _proto.clear = function clear() {\n    this._map.clear();\n  };\n  return LRUCache;\n}();\nfunction create(capacity) {\n  return new LRUCache(capacity);\n}\nmodule.exports = {\n  create: create\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n// This contextual profiler can be used to wrap a react sub-tree. It will bind\n// the RelayProfiler during the render phase of these components. Allows\n// collecting metrics for a specific part of your application.\n\n'use strict';\n\nvar React = require('react');\nvar ProfilerContext = React.createContext({\n  wrapPrepareQueryResource: function wrapPrepareQueryResource(cb) {\n    return cb();\n  }\n});\nmodule.exports = ProfilerContext;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar LRUCache = require('./LRUCache');\nvar SuspenseResource = require('./SuspenseResource');\nvar invariant = require('invariant');\nvar _require = require('relay-runtime'),\n  isPromise = _require.isPromise;\nvar warning = require(\"fbjs/lib/warning\");\nvar CACHE_CAPACITY = 1000;\nvar DEFAULT_FETCH_POLICY = 'store-or-network';\nvar DEFAULT_LIVE_FETCH_POLICY = 'store-and-network';\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nfunction operationIsLiveQuery(operation) {\n  return operation.request.node.params.metadata.live !== undefined;\n}\nfunction getQueryCacheIdentifier(environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker) {\n  var fetchPolicy = maybeFetchPolicy !== null && maybeFetchPolicy !== void 0 ? maybeFetchPolicy : operationIsLiveQuery(operation) ? DEFAULT_LIVE_FETCH_POLICY : DEFAULT_FETCH_POLICY;\n  var renderPolicy = maybeRenderPolicy !== null && maybeRenderPolicy !== void 0 ? maybeRenderPolicy : environment.UNSTABLE_getDefaultRenderPolicy();\n  var cacheIdentifier = \"\".concat(fetchPolicy, \"-\").concat(renderPolicy, \"-\").concat(operation.request.identifier);\n  if (cacheBreaker != null) {\n    return \"\".concat(cacheIdentifier, \"-\").concat(cacheBreaker);\n  }\n  return cacheIdentifier;\n}\nfunction getQueryResult(operation, cacheIdentifier) {\n  var rootFragmentRef = {\n    __id: operation.fragment.dataID,\n    __fragments: (0, _defineProperty2[\"default\"])({}, operation.fragment.node.name, operation.request.variables),\n    __fragmentOwner: operation.request\n  };\n  return {\n    cacheIdentifier: cacheIdentifier,\n    fragmentNode: operation.request.node.fragment,\n    fragmentRef: rootFragmentRef,\n    operation: operation\n  };\n}\nvar nextID = 200000;\nfunction createCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription, onDispose) {\n  var isLiveQuery = operationIsLiveQuery(operation);\n  var currentValue = value;\n  var currentNetworkSubscription = networkSubscription;\n  var suspenseResource = new SuspenseResource(function (environment) {\n    var retention = environment.retain(operation);\n    return {\n      dispose: function dispose() {\n        // Normally if this entry never commits, the request would've ended by the\n        // time this timeout expires and the temporary retain is released. However,\n        // we need to do this for live queries which remain open indefinitely.\n        if (isLiveQuery && currentNetworkSubscription != null) {\n          currentNetworkSubscription.unsubscribe();\n        }\n        retention.dispose();\n        onDispose(cacheEntry);\n      }\n    };\n  });\n  var cacheEntry = {\n    cacheIdentifier: cacheIdentifier,\n    id: nextID++,\n    processedPayloadsCount: 0,\n    operationAvailability: operationAvailability,\n    getValue: function getValue() {\n      return currentValue;\n    },\n    setValue: function setValue(val) {\n      currentValue = val;\n    },\n    setNetworkSubscription: function setNetworkSubscription(subscription) {\n      if (isLiveQuery && currentNetworkSubscription != null) {\n        currentNetworkSubscription.unsubscribe();\n      }\n      currentNetworkSubscription = subscription;\n    },\n    temporaryRetain: function temporaryRetain(environment) {\n      return suspenseResource.temporaryRetain(environment);\n    },\n    permanentRetain: function permanentRetain(environment) {\n      return suspenseResource.permanentRetain(environment);\n    },\n    releaseTemporaryRetain: function releaseTemporaryRetain() {\n      suspenseResource.releaseTemporaryRetain();\n    }\n  };\n  return cacheEntry;\n}\nvar QueryResourceImpl = /*#__PURE__*/function () {\n  function QueryResourceImpl(environment) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_clearCacheEntry\", function (cacheEntry) {\n      _this._cache[\"delete\"](cacheEntry.cacheIdentifier);\n    });\n    this._environment = environment;\n    this._cache = LRUCache.create(CACHE_CAPACITY);\n  }\n  var _proto = QueryResourceImpl.prototype;\n  _proto.prepare = function prepare(operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, cacheBreaker, profilerContext) {\n    var cacheIdentifier = getQueryCacheIdentifier(this._environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker);\n    return this.prepareWithIdentifier(cacheIdentifier, operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, profilerContext);\n  }\n\n  /**\n   * This function should be called during a Component's render function,\n   * to either read an existing cached value for the query, or fetch the query\n   * and suspend.\n   */;\n  _proto.prepareWithIdentifier = function prepareWithIdentifier(cacheIdentifier, operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, profilerContext) {\n    var environment = this._environment;\n    var fetchPolicy = maybeFetchPolicy !== null && maybeFetchPolicy !== void 0 ? maybeFetchPolicy : operationIsLiveQuery(operation) ? DEFAULT_LIVE_FETCH_POLICY : DEFAULT_FETCH_POLICY;\n    var renderPolicy = maybeRenderPolicy !== null && maybeRenderPolicy !== void 0 ? maybeRenderPolicy : environment.UNSTABLE_getDefaultRenderPolicy();\n\n    // 1. Check if there's a cached value for this operation, and reuse it if\n    // it's available\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    var temporaryRetainDisposable = null;\n    var entryWasCached = cacheEntry != null;\n    if (cacheEntry == null) {\n      // 2. If a cached value isn't available, try fetching the operation.\n      // _fetchAndSaveQuery will update the cache with either a Promise or\n      // an Error to throw, or a QueryResult to return.\n      cacheEntry = this._fetchAndSaveQuery(cacheIdentifier, operation, fetchObservable, fetchPolicy, renderPolicy, profilerContext, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n        unsubscribe: function unsubscribe(subscription) {\n          // 4. If the request is cancelled, make sure to dispose\n          // of the temporary retain; this will ensure that a promise\n          // doesn't remain unnecessarily cached until the temporary retain\n          // expires. Not clearing the temporary retain might cause the\n          // query to incorrectly re-suspend.\n          if (temporaryRetainDisposable != null) {\n            temporaryRetainDisposable.dispose();\n          }\n          var observerUnsubscribe = observer === null || observer === void 0 ? void 0 : observer.unsubscribe;\n          observerUnsubscribe && observerUnsubscribe(subscription);\n        }\n      }));\n    }\n\n    // 3. Temporarily retain here in render phase. When the component reading\n    // the operation is committed, we will transfer ownership of data retention\n    // to the component.\n    // In case the component never commits (mounts or updates) from this render,\n    // this data retention hold will auto-release itself after a timeout.\n    temporaryRetainDisposable = cacheEntry.temporaryRetain(environment);\n    var cachedValue = cacheEntry.getValue();\n    if (isPromise(cachedValue)) {\n      environment.__log({\n        name: 'suspense.query',\n        fetchPolicy: fetchPolicy,\n        isPromiseCached: entryWasCached,\n        operation: operation,\n        queryAvailability: cacheEntry.operationAvailability,\n        renderPolicy: renderPolicy\n      });\n      throw cachedValue;\n    }\n    if (cachedValue instanceof Error) {\n      throw cachedValue;\n    }\n    return cachedValue;\n  }\n\n  /**\n   * This function should be called during a component's commit phase\n   * (e.g. inside useEffect), in order to retain the operation in the Relay store\n   * and transfer ownership of the operation to the component lifecycle.\n   */;\n  _proto.retain = function retain(queryResult, profilerContext) {\n    var environment = this._environment;\n    var cacheIdentifier = queryResult.cacheIdentifier,\n      operation = queryResult.operation;\n    var cacheEntry = this._getOrCreateCacheEntry(cacheIdentifier, operation, null, queryResult, null);\n    var disposable = cacheEntry.permanentRetain(environment);\n    environment.__log({\n      name: 'queryresource.retain',\n      profilerContext: profilerContext,\n      resourceID: cacheEntry.id\n    });\n    return {\n      dispose: function dispose() {\n        disposable.dispose();\n      }\n    };\n  };\n  _proto.releaseTemporaryRetain = function releaseTemporaryRetain(queryResult) {\n    var cacheEntry = this._cache.get(queryResult.cacheIdentifier);\n    if (cacheEntry != null) {\n      cacheEntry.releaseTemporaryRetain();\n    }\n  };\n  _proto.TESTS_ONLY__getCacheEntry = function TESTS_ONLY__getCacheEntry(operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker) {\n    var environment = this._environment;\n    var cacheIdentifier = getQueryCacheIdentifier(environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker);\n    return this._cache.get(cacheIdentifier);\n  };\n  _proto._getOrCreateCacheEntry = function _getOrCreateCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription) {\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    if (cacheEntry == null) {\n      cacheEntry = createCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription, this._clearCacheEntry);\n      this._cache.set(cacheIdentifier, cacheEntry);\n    }\n    return cacheEntry;\n  };\n  _proto._fetchAndSaveQuery = function _fetchAndSaveQuery(cacheIdentifier, operation, fetchObservable, fetchPolicy, renderPolicy, profilerContext, observer) {\n    var _this2 = this;\n    var environment = this._environment;\n\n    // NOTE: Running `check` will write missing data to the store using any\n    // missing data handlers specified on the environment;\n    // We run it here first to make the handlers get a chance to populate\n    // missing data.\n    var queryAvailability = environment.check(operation);\n    var queryStatus = queryAvailability.status;\n    var hasFullQuery = queryStatus === 'available';\n    var canPartialRender = hasFullQuery || renderPolicy === 'partial' && queryStatus !== 'stale';\n    var shouldFetch;\n    var shouldAllowRender;\n    // Different definitions for Promise in our repos can cause this variable\n    // to cause errors when synced elsewhere\n    var resolveNetworkPromise = function resolveNetworkPromise() {};\n    switch (fetchPolicy) {\n      case 'store-only':\n        {\n          shouldFetch = false;\n          shouldAllowRender = true;\n          break;\n        }\n      case 'store-or-network':\n        {\n          shouldFetch = !hasFullQuery;\n          shouldAllowRender = canPartialRender;\n          break;\n        }\n      case 'store-and-network':\n        {\n          shouldFetch = true;\n          shouldAllowRender = canPartialRender;\n          break;\n        }\n      case 'network-only':\n      default:\n        {\n          shouldFetch = true;\n          shouldAllowRender = false;\n          break;\n        }\n    }\n\n    // NOTE: If this value is false, we will cache a promise for this\n    // query, which means we will suspend here at this query root.\n    // If it's true, we will cache the query resource and allow rendering to\n    // continue.\n    if (shouldAllowRender) {\n      var queryResult = getQueryResult(operation, cacheIdentifier);\n      var _cacheEntry = createCacheEntry(cacheIdentifier, operation, queryAvailability, queryResult, null, this._clearCacheEntry);\n      this._cache.set(cacheIdentifier, _cacheEntry);\n    }\n    if (shouldFetch) {\n      var _queryResult = getQueryResult(operation, cacheIdentifier);\n      var networkSubscription;\n      fetchObservable.subscribe({\n        start: function start(subscription) {\n          networkSubscription = subscription;\n          var cacheEntry = _this2._cache.get(cacheIdentifier);\n          if (cacheEntry) {\n            cacheEntry.setNetworkSubscription(networkSubscription);\n          }\n          var observerStart = observer === null || observer === void 0 ? void 0 : observer.start;\n          if (observerStart) {\n            var subscriptionWithConditionalCancelation = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, subscription), {}, {\n              unsubscribe: function unsubscribe() {\n                // Only live queries should have their network requests canceled.\n                if (operationIsLiveQuery(operation)) {\n                  subscription.unsubscribe();\n                }\n              }\n            });\n            observerStart(subscriptionWithConditionalCancelation);\n          }\n        },\n        next: function next() {\n          var cacheEntry = _this2._getOrCreateCacheEntry(cacheIdentifier, operation, queryAvailability, _queryResult, networkSubscription);\n          cacheEntry.processedPayloadsCount += 1;\n          cacheEntry.setValue(_queryResult);\n          resolveNetworkPromise();\n          var observerNext = observer === null || observer === void 0 ? void 0 : observer.next;\n          if (observerNext != null) {\n            var snapshot = environment.lookup(operation.fragment);\n            observerNext(snapshot);\n          }\n        },\n        error: function error(_error) {\n          var cacheEntry = _this2._getOrCreateCacheEntry(cacheIdentifier, operation, queryAvailability, _error, networkSubscription);\n\n          // If, this is the first thing we receive for the query,\n          // before any other payload handled is error, we will cache and\n          // re-throw that error later.\n\n          // We will ignore errors for any incremental payloads we receive.\n          if (cacheEntry.processedPayloadsCount === 0) {\n            cacheEntry.setValue(_error);\n          } else {\n            // TODO:T92030819 Remove this warning and actually throw the network error\n            // To complete this task we need to have a way of precisely tracking suspendable points\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'QueryResource: An incremental payload for query `%s` returned an error: `%s`.', operation.fragment.node.name, String(_error.message)) : void 0;\n          }\n          resolveNetworkPromise();\n          networkSubscription = null;\n          cacheEntry.setNetworkSubscription(null);\n          var observerError = observer === null || observer === void 0 ? void 0 : observer.error;\n          observerError && observerError(_error);\n        },\n        complete: function complete() {\n          resolveNetworkPromise();\n          networkSubscription = null;\n          var cacheEntry = _this2._cache.get(cacheIdentifier);\n          if (cacheEntry) {\n            cacheEntry.setNetworkSubscription(null);\n          }\n          var observerComplete = observer === null || observer === void 0 ? void 0 : observer.complete;\n          observerComplete && observerComplete();\n        },\n        unsubscribe: observer === null || observer === void 0 ? void 0 : observer.unsubscribe\n      });\n      var _cacheEntry2 = this._cache.get(cacheIdentifier);\n      if (!_cacheEntry2) {\n        var networkPromise = new Promise(function (resolve) {\n          resolveNetworkPromise = resolve;\n        });\n\n        // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n        networkPromise.displayName = 'Relay(' + operation.fragment.node.name + ')';\n        _cacheEntry2 = createCacheEntry(cacheIdentifier, operation, queryAvailability, networkPromise, networkSubscription, this._clearCacheEntry);\n        this._cache.set(cacheIdentifier, _cacheEntry2);\n      }\n    } else {\n      var observerComplete = observer === null || observer === void 0 ? void 0 : observer.complete;\n      observerComplete && observerComplete();\n    }\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    !(cacheEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to have cached a result when attempting to fetch query.' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n    environment.__log({\n      name: 'queryresource.fetch',\n      resourceID: cacheEntry.id,\n      operation: operation,\n      profilerContext: profilerContext,\n      fetchPolicy: fetchPolicy,\n      renderPolicy: renderPolicy,\n      queryAvailability: queryAvailability,\n      shouldFetch: shouldFetch\n    });\n    return cacheEntry;\n  };\n  return QueryResourceImpl;\n}();\nfunction createQueryResource(environment) {\n  return new QueryResourceImpl(environment);\n}\nvar dataResources = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction getQueryResourceForEnvironment(environment) {\n  var cached = dataResources.get(environment);\n  if (cached) {\n    return cached;\n  }\n  var newDataResource = createQueryResource(environment);\n  dataResources.set(environment, newDataResource);\n  return newDataResource;\n}\nmodule.exports = {\n  createQueryResource: createQueryResource,\n  getQueryResourceForEnvironment: getQueryResourceForEnvironment,\n  getQueryCacheIdentifier: getQueryCacheIdentifier\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./../ReactRelayContext');\nvar React = require('react');\nvar useMemo = React.useMemo;\nfunction RelayEnvironmentProvider(props) {\n  var children = props.children,\n    environment = props.environment,\n    getEnvironmentForActor = props.getEnvironmentForActor;\n  var context = useMemo(function () {\n    return {\n      environment: environment,\n      getEnvironmentForActor: getEnvironmentForActor\n    };\n  }, [environment, getEnvironmentForActor]);\n  return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n    value: context\n  }, children);\n}\nmodule.exports = RelayEnvironmentProvider;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar invariant = require('invariant');\nvar TEMPORARY_RETAIN_DURATION_MS = 5 * 60 * 1000;\n\n/**\n * Allows you to retain a resource as part of a component lifecycle accounting\n * for Suspense. You temporarily retain the resource during render, then\n * permanently retain it during commit and release it during unmount.\n */\nvar SuspenseResource = /*#__PURE__*/function () {\n  function SuspenseResource(retain) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_retainCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_retainDisposable\", null);\n    (0, _defineProperty2[\"default\"])(this, \"_releaseTemporaryRetain\", null);\n    this._retain = function (environment) {\n      _this._retainCount++;\n      if (_this._retainCount === 1) {\n        _this._retainDisposable = retain(environment);\n      }\n      return {\n        dispose: function dispose() {\n          _this._retainCount = Math.max(0, _this._retainCount - 1);\n          if (_this._retainCount === 0) {\n            !(_this._retainDisposable != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected disposable to release query to be defined.' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n            _this._retainDisposable.dispose();\n            _this._retainDisposable = null;\n          }\n        }\n      };\n    };\n  }\n  var _proto = SuspenseResource.prototype;\n  _proto.temporaryRetain = function temporaryRetain(environment) {\n    var _this2 = this;\n    var _this$_releaseTempora;\n    // If we're executing in a server environment, there's no need\n    // to create temporary retains, since the component will never commit.\n    if (environment.isServer()) {\n      return {\n        dispose: function dispose() {}\n      };\n    }\n\n    // temporaryRetain is called during the render phase. However,\n    // given that we can't tell if this render will eventually commit or not,\n    // we create a timer to autodispose of this retain in case the associated\n    // component never commits.\n    // If the component /does/ commit, permanentRetain will clear this timeout\n    // and permanently retain the data.\n    var retention = this._retain(environment);\n    var releaseQueryTimeout = null;\n    var releaseTemporaryRetain = function releaseTemporaryRetain() {\n      clearTimeout(releaseQueryTimeout);\n      releaseQueryTimeout = null;\n      _this2._releaseTemporaryRetain = null;\n      retention.dispose();\n    };\n    releaseQueryTimeout = setTimeout(releaseTemporaryRetain, TEMPORARY_RETAIN_DURATION_MS);\n\n    // NOTE: Since temporaryRetain can be called multiple times, we release\n    // the previous temporary retain after we re-establish a new one, since\n    // we only ever need a single temporary retain until the permanent retain is\n    // established.\n    // temporaryRetain may be called multiple times by React during the render\n    // phase, as well as multiple times by other query components that are\n    // rendering the same query/variables.\n    (_this$_releaseTempora = this._releaseTemporaryRetain) === null || _this$_releaseTempora === void 0 ? void 0 : _this$_releaseTempora.call(this);\n    this._releaseTemporaryRetain = releaseTemporaryRetain;\n    return {\n      dispose: function dispose() {\n        var _this$_releaseTempora2;\n        (_this$_releaseTempora2 = _this2._releaseTemporaryRetain) === null || _this$_releaseTempora2 === void 0 ? void 0 : _this$_releaseTempora2.call(_this2);\n      }\n    };\n  };\n  _proto.permanentRetain = function permanentRetain(environment) {\n    var disposable = this._retain(environment);\n    this.releaseTemporaryRetain();\n    return disposable;\n  };\n  _proto.releaseTemporaryRetain = function releaseTemporaryRetain() {\n    var _this$_releaseTempora3;\n    (_this$_releaseTempora3 = this._releaseTemporaryRetain) === null || _this$_releaseTempora3 === void 0 ? void 0 : _this$_releaseTempora3.call(this);\n    this._releaseTemporaryRetain = null;\n  };\n  _proto.getRetainCount = function getRetainCount() {\n    return this._retainCount;\n  };\n  return SuspenseResource;\n}();\nmodule.exports = SuspenseResource;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  loadQuery = _require.loadQuery;\nfunction loadEntryPoint(environmentProvider, entryPoint, entryPointParams) {\n  // Start loading the code for the entrypoint\n  var loadingPromise = null;\n  if (entryPoint.root.getModuleIfRequired() == null) {\n    loadingPromise = entryPoint.root.load();\n  }\n  var preloadProps = entryPoint.getPreloadProps(entryPointParams);\n  var queries = preloadProps.queries,\n    entryPoints = preloadProps.entryPoints,\n    extraProps = preloadProps.extraProps;\n  var preloadedQueries = {};\n  var preloadedEntryPoints = {};\n  if (queries != null) {\n    var queriesPropNames = Object.keys(queries);\n    queriesPropNames.forEach(function (queryPropName) {\n      var _queries$queryPropNam = queries[queryPropName],\n        environmentProviderOptions = _queries$queryPropNam.environmentProviderOptions,\n        options = _queries$queryPropNam.options,\n        parameters = _queries$queryPropNam.parameters,\n        variables = _queries$queryPropNam.variables;\n      var environment = environmentProvider.getEnvironment(environmentProviderOptions);\n\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      preloadedQueries[queryPropName] = loadQuery(environment, parameters, variables, {\n        fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n        networkCacheConfig: options === null || options === void 0 ? void 0 : options.networkCacheConfig,\n        __nameForWarning: 'loadEntryPoint'\n      }, environmentProviderOptions);\n    });\n  }\n  if (entryPoints != null) {\n    var entryPointPropNames = Object.keys(entryPoints);\n    entryPointPropNames.forEach(function (entryPointPropName) {\n      var entryPointDescription = entryPoints[entryPointPropName];\n      if (entryPointDescription == null) {\n        return;\n      }\n      var nestedEntryPoint = entryPointDescription.entryPoint,\n        nestedParams = entryPointDescription.entryPointParams;\n      preloadedEntryPoints[entryPointPropName] = loadEntryPoint(environmentProvider, nestedEntryPoint, nestedParams);\n    });\n  }\n  var isDisposed = false;\n  return {\n    dispose: function dispose() {\n      if (isDisposed) {\n        return;\n      }\n      if (preloadedQueries != null) {\n        Object.values(preloadedQueries).forEach(function (_ref) {\n          var innerDispose = _ref.dispose;\n          innerDispose();\n        });\n      }\n      if (preloadedEntryPoints != null) {\n        Object.values(preloadedEntryPoints).forEach(function (_ref2) {\n          var innerDispose = _ref2.dispose;\n          innerDispose();\n        });\n      }\n      isDisposed = true;\n    },\n    entryPoints: preloadedEntryPoints,\n    extraProps: extraProps !== null && extraProps !== void 0 ? extraProps : null,\n    getComponent: function getComponent() {\n      var componentModule = entryPoint.root.getModuleIfRequired();\n      if (componentModule == null) {\n        var _loadingPromise;\n        loadingPromise = (_loadingPromise = loadingPromise) !== null && _loadingPromise !== void 0 ? _loadingPromise : entryPoint.root.load();\n        throw loadingPromise;\n      }\n\n      // On certain platforms, getting an es6 module with a default export from a JSResource will return an object like\n      // {default: module}, so let's assume that if the \"component\" has a static property named \"default\"\n      // that it's actually an es6 module wrapper, so unwrap it. This won't work for React classes with a static property named \"default\", but\n      // that's probably a worthwhile trade-off.\n      var component =\n      // $FlowIgnore[prop-missing]\n      componentModule[\"default\"] != null ? componentModule[\"default\"] : componentModule;\n      // $FlowFixMe[incompatible-cast] - trust me Flow, its entryPoint component\n      return component;\n    },\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get isDisposed() {\n      return isDisposed;\n    },\n    queries: preloadedQueries,\n    rootModuleID: entryPoint.root.getModuleId()\n  };\n}\nmodule.exports = loadEntryPoint;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  fetchQueryDeduped = _require.__internal.fetchQueryDeduped,\n  Observable = _require.Observable,\n  PreloadableQueryRegistry = _require.PreloadableQueryRegistry,\n  RelayFeatureFlags = _require.RelayFeatureFlags,\n  ReplaySubject = _require.ReplaySubject,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  getRequest = _require.getRequest,\n  getRequestIdentifier = _require.getRequestIdentifier;\nvar warning = require(\"fbjs/lib/warning\");\nvar RenderDispatcher = null;\nvar fetchKey = 100001;\nfunction useTrackLoadQueryInRender() {\n  if (RenderDispatcher === null) {\n    var _React$__SECRET_INTER, _React$__SECRET_INTER2;\n    // Flow does not know of React internals (rightly so), but we need to\n    // ensure here that this function isn't called inside render.\n    RenderDispatcher = // $FlowFixMe[prop-missing]\n    (_React$__SECRET_INTER = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER === void 0 ? void 0 : (_React$__SECRET_INTER2 = _React$__SECRET_INTER.ReactCurrentDispatcher) === null || _React$__SECRET_INTER2 === void 0 ? void 0 : _React$__SECRET_INTER2.current;\n  }\n}\nfunction loadQuery(environment, preloadableRequest, variables, options, environmentProviderOptions) {\n  var _React$__SECRET_INTER3, _React$__SECRET_INTER4, _options$__nameForWar, _options$fetchPolicy;\n  // This code ensures that we don't call loadQuery during render.\n  var CurrentDispatcher = // $FlowFixMe[prop-missing]\n  (_React$__SECRET_INTER3 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER3 === void 0 ? void 0 : (_React$__SECRET_INTER4 = _React$__SECRET_INTER3.ReactCurrentDispatcher) === null || _React$__SECRET_INTER4 === void 0 ? void 0 : _React$__SECRET_INTER4.current;\n  process.env.NODE_ENV !== \"production\" ? warning(RenderDispatcher == null || CurrentDispatcher !== RenderDispatcher, 'Relay: `%s` should not be called inside a React render function.', (_options$__nameForWar = options === null || options === void 0 ? void 0 : options.__nameForWarning) !== null && _options$__nameForWar !== void 0 ? _options$__nameForWar : 'loadQuery') : void 0;\n\n  // Every time you call loadQuery, we will generate a new fetchKey.\n  // This will ensure that every query reference that is created and\n  // passed to usePreloadedQuery is independently evaluated,\n  // even if they are for the same query/variables.\n  // Specifically, we want to avoid a case where we try to refetch a\n  // query by calling loadQuery a second time, and have the Suspense\n  // cache in usePreloadedQuery reuse the cached result instead of\n  // re-evaluating the new query ref and triggering a refetch if\n  // necessary.\n  fetchKey++;\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'store-or-network';\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options === null || options === void 0 ? void 0 : options.networkCacheConfig), {}, {\n    force: true\n  });\n\n  // executeWithNetworkSource will retain and execute an operation\n  // against the Relay store, given an Observable that would provide\n  // the network events for the operation.\n  var retainReference;\n  var didExecuteNetworkSource = false;\n  var executeWithNetworkSource = function executeWithNetworkSource(operation, networkObservable) {\n    didExecuteNetworkSource = true;\n    return environment.executeWithSource({\n      operation: operation,\n      source: networkObservable\n    });\n  };\n\n  // N.B. For loadQuery, we unconventionally want to return an Observable\n  // that isn't lazily executed, meaning that we don't want to wait\n  // until the returned Observable is subscribed to to actually start\n  // fetching and executing an operation; i.e. we want to execute the\n  // operation eagerly, when loadQuery is called.\n  // For this reason, we use an intermediate executionSubject which\n  // allows us to capture the events that occur during the eager execution\n  // of the operation, and then replay them to the Observable we\n  // ultimately return.\n  var executionSubject = new ReplaySubject();\n  var returnedObservable = Observable.create(function (sink) {\n    return executionSubject.subscribe(sink);\n  });\n  var unsubscribeFromNetworkRequest;\n  var networkError = null;\n  // makeNetworkRequest will immediately start a raw network request if\n  // one isn't already in flight and return an Observable that when\n  // subscribed to will replay the network events that have occured so far,\n  // as well as subsequent events.\n  var didMakeNetworkRequest = false;\n  var makeNetworkRequest = function makeNetworkRequest(params) {\n    // N.B. this function is called synchronously or not at all\n    // didMakeNetworkRequest is safe to rely on in the returned value\n    // Even if the request gets deduped below, we still wan't to return an\n    // observable that provides the replayed network events for the query,\n    // so we set this to true before deduping, to guarantee that the\n    // `source` observable is returned.\n    didMakeNetworkRequest = true;\n    var observable;\n    var subject = new ReplaySubject();\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      // Here, we are calling fetchQueryDeduped at the network layer level,\n      // which ensures that only a single network request is active for a given\n      // (environment, identifier) pair.\n      // Since network requests can be started /before/ we have the query ast\n      // necessary to process the results, we need to dedupe the raw requests\n      // separately from deduping the operation execution; specifically,\n      // if `loadQuery` is called multiple times before the query ast is available,\n      // we still want the network request to be deduped.\n      // - If a duplicate active network request is found, it will return an\n      // Observable that replays the events of the already active request.\n      // - If no duplicate active network request is found, it will call the fetchFn\n      // to start the request, and return an Observable that will replay\n      // the events from the network request.\n      // We provide an extra key to the identifier to distinguish deduping\n      // of raw network requests vs deduping of operation executions.\n      var identifier = 'raw-network-request-' + getRequestIdentifier(params, variables);\n      observable = fetchQueryDeduped(environment, identifier, function () {\n        var network = environment.getNetwork();\n        return network.execute(params, variables, networkCacheConfig);\n      });\n    } else {\n      var network = environment.getNetwork();\n      observable = network.execute(params, variables, networkCacheConfig);\n    }\n    var _observable$subscribe = observable.subscribe({\n        error: function error(err) {\n          networkError = err;\n          subject.error(err);\n        },\n        next: function next(data) {\n          subject.next(data);\n        },\n        complete: function complete() {\n          subject.complete();\n        }\n      }),\n      unsubscribe = _observable$subscribe.unsubscribe;\n    unsubscribeFromNetworkRequest = unsubscribe;\n    return Observable.create(function (sink) {\n      var subjectSubscription = subject.subscribe(sink);\n      return function () {\n        subjectSubscription.unsubscribe();\n        unsubscribeFromNetworkRequest();\n      };\n    });\n  };\n  var unsubscribeFromExecution;\n  var executeDeduped = function executeDeduped(operation, fetchFn) {\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      // N.B. at this point, if we're calling execute with a query ast (OperationDescriptor),\n      // we are guaranteed to have started a network request. We set this to\n      // true here as well since `makeNetworkRequest` might get skipped in the case\n      // where the query ast is already available and the query executions get deduped.\n      // Even if the execution gets deduped below, we still wan't to return\n      // an observable that provides the replayed network events for the query,\n      // so we set this to true before deduping, to guarantee that the `source`\n      // observable is returned.\n      didMakeNetworkRequest = true;\n    }\n\n    // Here, we are calling fetchQueryDeduped, which ensures that only\n    // a single operation is active for a given (environment, identifier) pair,\n    // and also tracks the active state of the operation, which is necessary\n    // for our Suspense infra to later be able to suspend (or not) on\n    // active operations. Even though we already dedupe raw network requests,\n    // we also need to dedupe and keep track operation execution for our Suspense\n    // infra, and we also want to avoid processing responses more than once, for\n    // the cases where `loadQuery` might be called multiple times after the query ast\n    // is available.\n    // - If a duplicate active operation is found, it will return an\n    // Observable that replays the events of the already active operation.\n    // - If no duplicate active operation is found, it will call the fetchFn\n    // to execute the operation, and return an Observable that will provide\n    // the events for executing the operation.\n    var _fetchQueryDeduped$su = fetchQueryDeduped(environment, operation.request.identifier, fetchFn).subscribe({\n      error: function error(err) {\n        executionSubject.error(err);\n      },\n      next: function next(data) {\n        executionSubject.next(data);\n      },\n      complete: function complete() {\n        executionSubject.complete();\n      }\n    });\n    unsubscribeFromExecution = _fetchQueryDeduped$su.unsubscribe;\n  };\n  var checkAvailabilityAndExecute = function checkAvailabilityAndExecute(concreteRequest) {\n    var operation = createOperationDescriptor(concreteRequest, variables, networkCacheConfig);\n    retainReference = environment.retain(operation);\n    if (fetchPolicy === 'store-only') {\n      return;\n    }\n\n    // N.B. If the fetch policy allows fulfillment from the store but the\n    // environment already has the data for that operation cached in the store,\n    // then we do nothing.\n    var shouldFetch = fetchPolicy !== 'store-or-network' || environment.check(operation).status !== 'available';\n    if (shouldFetch) {\n      executeDeduped(operation, function () {\n        // N.B. Since we have the operation synchronously available here,\n        // we can immediately fetch and execute the operation.\n        var networkObservable = makeNetworkRequest(concreteRequest.params);\n        var executeObservable = executeWithNetworkSource(operation, networkObservable);\n        return executeObservable;\n      });\n    }\n  };\n  var params;\n  var cancelOnLoadCallback;\n  var queryId;\n  if (preloadableRequest.kind === 'PreloadableConcreteRequest') {\n    var preloadableConcreteRequest = preloadableRequest;\n    params = preloadableConcreteRequest.params;\n    var _params = params;\n    queryId = _params.id;\n    !(queryId !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: `loadQuery` requires that preloadable query `%s` has a persisted query id', params.name) : invariant(false) : void 0;\n    var _module = PreloadableQueryRegistry.get(queryId);\n    if (_module != null) {\n      checkAvailabilityAndExecute(_module);\n    } else {\n      // If the module isn't synchronously available, we launch the\n      // network request immediately if the fetchPolicy might produce\n      // a network fetch, regardless of the state of the store cache. We\n      // do this because we can't check if a query is cached without the\n      // ast, and we know that if we don't have the query ast\n      // available, then this query could've never been written to the\n      // store in the first place, so it couldn't have been cached.\n      var networkObservable = fetchPolicy === 'store-only' ? null : makeNetworkRequest(params);\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      var _PreloadableQueryRegi = PreloadableQueryRegistry.onLoad(queryId, function (preloadedModule) {\n        cancelOnLoadCallback();\n        var operation = createOperationDescriptor(preloadedModule, variables, networkCacheConfig);\n        retainReference = environment.retain(operation);\n        if (networkObservable != null) {\n          executeDeduped(operation, function () {\n            return executeWithNetworkSource(operation, networkObservable);\n          });\n        }\n      });\n      cancelOnLoadCallback = _PreloadableQueryRegi.dispose;\n    }\n  } else {\n    var graphQlTaggedNode = preloadableRequest;\n    var request = getRequest(graphQlTaggedNode);\n    params = request.params;\n    queryId = params.cacheID != null ? params.cacheID : params.id;\n    checkAvailabilityAndExecute(request);\n  }\n  var isDisposed = false;\n  var isReleased = false;\n  var isNetworkRequestCancelled = false;\n  var releaseQuery = function releaseQuery() {\n    if (isReleased) {\n      return;\n    }\n    retainReference && retainReference.dispose();\n    isReleased = true;\n  };\n  var cancelNetworkRequest = function cancelNetworkRequest() {\n    if (isNetworkRequestCancelled) {\n      return;\n    }\n    if (didExecuteNetworkSource) {\n      unsubscribeFromExecution && unsubscribeFromExecution();\n    } else {\n      unsubscribeFromNetworkRequest && unsubscribeFromNetworkRequest();\n    }\n    cancelOnLoadCallback && cancelOnLoadCallback();\n    isNetworkRequestCancelled = true;\n  };\n  return {\n    kind: 'PreloadedQuery',\n    environment: environment,\n    environmentProviderOptions: environmentProviderOptions,\n    dispose: function dispose() {\n      if (isDisposed) {\n        return;\n      }\n      releaseQuery();\n      cancelNetworkRequest();\n      isDisposed = true;\n    },\n    releaseQuery: releaseQuery,\n    cancelNetworkRequest: cancelNetworkRequest,\n    fetchKey: fetchKey,\n    id: queryId,\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get isDisposed() {\n      return isDisposed || isReleased;\n    },\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get networkError() {\n      return networkError;\n    },\n    name: params.name,\n    networkCacheConfig: networkCacheConfig,\n    fetchPolicy: fetchPolicy,\n    source: didMakeNetworkRequest ? returnedObservable : undefined,\n    variables: variables\n  };\n}\nmodule.exports = {\n  loadQuery: loadQuery,\n  useTrackLoadQueryInRender: useTrackLoadQueryInRender\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useLazyLoadQuery = require('./useLazyLoadQuery');\n\n/**\n * This hook can be used to render client-only queries.\n * These queries are consist of queries for client-only data,\n * schematized via local schema extensions and/or Relay resolvers.\n */\nfunction useClientQuery(gqlQuery, variables, options) {\n  // $FlowFixMe[incompatible-type] client queries can be used with useLazyLoadQuery, but only with `store-only` policy.\n  var query = gqlQuery;\n  return useLazyLoadQuery(query, variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options), {}, {\n    fetchPolicy: 'store-only'\n  }));\n}\nmodule.exports = useClientQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar loadEntryPoint = require('./loadEntryPoint');\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useIsMountedRef = require('./useIsMountedRef');\nvar _require2 = require('react'),\n  useCallback = _require2.useCallback,\n  useEffect = _require2.useEffect,\n  useRef = _require2.useRef,\n  useState = _require2.useState;\nvar initialNullEntryPointReferenceState = {\n  kind: 'NullEntryPointReference'\n};\nfunction useLoadEntryPoint(environmentProvider, entryPoint, options) {\n  var _options$TEST_ONLY__i, _options$TEST_ONLY__i2, _options$TEST_ONLY__i3, _options$TEST_ONLY__i4;\n  /**\n   * We want to always call `entryPointReference.dispose()` for every call to\n   * `setEntryPointReference(loadEntryPoint(...))` so that no leaks of data in Relay\n   * stores will occur.\n   *\n   * However, a call to `setState(newState)` is not always followed by a commit where\n   * this value is reflected in the state. Thus, we cannot reliably clean up each ref\n   * with `useEffect(() => () => entryPointReference.dispose(), [entryPointReference])`.\n   *\n   * Instead, we keep track of each call to `loadEntryPoint` in a ref.\n   * Relying on the fact that if a state change commits, no state changes that were\n   * initiated prior to the currently committing state change will ever subsequently\n   * commit, we can safely dispose of all preloaded entry point references\n   * associated with state changes initiated prior to the currently committing state\n   * change.\n   *\n   * Finally, when the hook unmounts, we also dispose of all remaining uncommitted\n   * entry point references.\n   */\n\n  useTrackLoadQueryInRender();\n  var initialEntryPointReferenceInternal = (_options$TEST_ONLY__i = options === null || options === void 0 ? void 0 : (_options$TEST_ONLY__i2 = options.TEST_ONLY__initialEntryPointData) === null || _options$TEST_ONLY__i2 === void 0 ? void 0 : _options$TEST_ONLY__i2.entryPointReference) !== null && _options$TEST_ONLY__i !== void 0 ? _options$TEST_ONLY__i : initialNullEntryPointReferenceState;\n  var initialEntryPointParamsInternal = (_options$TEST_ONLY__i3 = options === null || options === void 0 ? void 0 : (_options$TEST_ONLY__i4 = options.TEST_ONLY__initialEntryPointData) === null || _options$TEST_ONLY__i4 === void 0 ? void 0 : _options$TEST_ONLY__i4.entryPointParams) !== null && _options$TEST_ONLY__i3 !== void 0 ? _options$TEST_ONLY__i3 : null;\n  var isMountedRef = useIsMountedRef();\n  var undisposedEntryPointReferencesRef = useRef(new Set([initialEntryPointReferenceInternal]));\n  var _useState = useState(initialEntryPointReferenceInternal),\n    entryPointReference = _useState[0],\n    setEntryPointReference = _useState[1];\n  var _useState2 = useState(initialEntryPointParamsInternal),\n    entryPointParams = _useState2[0],\n    setEntryPointParams = _useState2[1];\n  var disposeEntryPoint = useCallback(function () {\n    if (isMountedRef.current) {\n      var nullEntryPointReference = {\n        kind: 'NullEntryPointReference'\n      };\n      undisposedEntryPointReferencesRef.current.add(nullEntryPointReference);\n      setEntryPointReference(nullEntryPointReference);\n    }\n  }, [setEntryPointReference, isMountedRef]);\n  var entryPointLoaderCallback = useCallback(function (params) {\n    if (isMountedRef.current) {\n      var updatedEntryPointReference = loadEntryPoint(environmentProvider, entryPoint, params);\n      undisposedEntryPointReferencesRef.current.add(updatedEntryPointReference);\n      setEntryPointReference(updatedEntryPointReference);\n      setEntryPointParams(params);\n    }\n  }, [environmentProvider, entryPoint, setEntryPointReference, isMountedRef]);\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current entryPointReference will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly leave our\n      // current entryPointReference disposed, we need to load the entryPoint again\n      // and force a re-render by calling entryPointLoaderCallback again,\n      // so that the entryPointReference's queries are correctly re-retained, and\n      // potentially refetched if necessary.\n      maybeHiddenOrFastRefresh.current = false;\n      if (entryPointReference.kind !== 'NullEntryPointReference' && entryPointParams != null) {\n        entryPointLoaderCallback(entryPointParams);\n      }\n      return;\n    }\n\n    // When a new entryPointReference is committed, we iterate over all\n    // entrypoint refs in undisposedEntryPointReferences and dispose all of\n    // the refs that aren't the currently committed one. This ensures\n    // that we don't leave any dangling entrypoint references for the\n    // case that loadEntryPoint is called multiple times before commit; when\n    // this happens, multiple state updates will be scheduled, but only one\n    // will commit, meaning that we need to keep track of and dispose any\n    // query references that don't end up committing.\n    // - We are relying on the fact that sets iterate in insertion order, and we\n    // can remove items from a set as we iterate over it (i.e. no iterator\n    // invalidation issues.) Thus, it is safe to loop through\n    // undisposedEntryPointReferences until we find entryPointReference, and\n    // remove and dispose all previous references.\n    // - We are guaranteed to find entryPointReference in the set, because if a\n    // state change results in a commit, no state changes initiated prior to that\n    // one will be committed, and we are disposing and removing references\n    // associated with commits that were initiated prior to the currently\n    // committing state change. (A useEffect callback is called during the commit\n    // phase.)\n    var undisposedEntryPointReferences = undisposedEntryPointReferencesRef.current;\n    if (isMountedRef.current) {\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(undisposedEntryPointReferences),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var undisposedEntryPointReference = _step.value;\n          if (undisposedEntryPointReference === entryPointReference) {\n            break;\n          }\n          undisposedEntryPointReferences[\"delete\"](undisposedEntryPointReference);\n          if (undisposedEntryPointReference.kind !== 'NullEntryPointReference') {\n            undisposedEntryPointReference.dispose();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, [entryPointReference, entryPointParams, entryPointLoaderCallback, isMountedRef]);\n  useEffect(function () {\n    return function disposeAllRemainingEntryPointReferences() {\n      // undisposedEntryPointReferences.current is never reassigned\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(undisposedEntryPointReferencesRef.current),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var unhandledStateChange = _step2.value;\n          if (unhandledStateChange.kind !== 'NullEntryPointReference') {\n            unhandledStateChange.dispose();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n  }, []);\n  return [entryPointReference.kind === 'NullEntryPointReference' ? null : entryPointReference, entryPointLoaderCallback, disposeEntryPoint];\n}\nmodule.exports = useLoadEntryPoint;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useEffect = _require.useEffect;\n\n/**\n * This hook returns a mutable React ref that holds the value of whether a\n * fetch request is in flight. The reason this is a mutable ref instead of\n * state is because we don't actually want to trigger an update when this\n * changes, but instead synchronously keep track of whether the network request\n * is in flight, for example in order to bail out of a request if one is\n * already in flight. If this was state, due to the nature of concurrent\n * updates, this value wouldn't be in sync with when the request is actually\n * in flight.\n * The additional functions returned by this Hook can be used to mutate\n * the ref.\n */\nfunction useFetchTrackingRef() {\n  var subscriptionRef = useUnsafeRef_DEPRECATED(null);\n  var isFetchingRef = useUnsafeRef_DEPRECATED(false);\n  var disposeFetch = useCallback(function () {\n    if (subscriptionRef.current != null) {\n      subscriptionRef.current.unsubscribe();\n      subscriptionRef.current = null;\n    }\n    isFetchingRef.current = false;\n  }, []);\n  var startFetch = useCallback(function (subscription) {\n    subscriptionRef.current = subscription;\n    isFetchingRef.current = true;\n  }, []);\n  var completeFetch = useCallback(function () {\n    subscriptionRef.current = null;\n    isFetchingRef.current = false;\n  }, []);\n\n  // Dipose of ongoing fetch on unmount\n  useEffect(function () {\n    return disposeFetch;\n  }, [disposeFetch]);\n  return {\n    isFetchingRef: isFetchingRef,\n    startFetch: startFetch,\n    disposeFetch: disposeFetch,\n    completeFetch: completeFetch\n  };\n}\nmodule.exports = useFetchTrackingRef;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar HooksImplementation = require('./HooksImplementation');\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useFragmentNode = require('./useFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require2 = require('react'),\n  useDebugValue = _require2.useDebugValue;\nvar _require3 = require('relay-runtime'),\n  getFragment = _require3.getFragment;\nfunction useFragment_LEGACY(fragment, key) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var fragmentNode = getFragment(fragment);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of useFragment()');\n  var _useFragmentNode = useFragmentNode(fragmentNode, key, 'useFragment()'),\n    data = _useFragmentNode.data;\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: data\n    });\n  }\n  return data;\n}\nfunction useFragment(fragment, key) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    // $FlowFixMe This is safe because impl.useFragment has the type of useFragment...\n    return impl.useFragment(fragment, key);\n    // (i.e. type declared above, but not the supertype used in this function definition)\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useFragment_LEGACY(fragment, key);\n  }\n}\nmodule.exports = useFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./FragmentResource'),\n  getFragmentResourceForEnvironment = _require.getFragmentResourceForEnvironment;\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar _require2 = require('react'),\n  useEffect = _require2.useEffect,\n  useState = _require2.useState;\nvar _require3 = require('relay-runtime'),\n  getFragmentIdentifier = _require3.getFragmentIdentifier;\nvar warning = require(\"fbjs/lib/warning\");\nfunction useFragmentNode(fragmentNode, fragmentRef, componentDisplayName) {\n  var environment = useRelayEnvironment();\n  var FragmentResource = getFragmentResourceForEnvironment(environment);\n  var isMountedRef = useUnsafeRef_DEPRECATED(false);\n  var _useState = useState(0),\n    forceUpdate = _useState[1];\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, fragmentRef);\n\n  // Read fragment data; this might suspend.\n  var fragmentResult = FragmentResource.readWithIdentifier(fragmentNode, fragmentRef, fragmentIdentifier, componentDisplayName);\n  var isListeningForUpdatesRef = useUnsafeRef_DEPRECATED(true);\n  function enableStoreUpdates() {\n    isListeningForUpdatesRef.current = true;\n    var didMissUpdates = FragmentResource.checkMissedUpdates(fragmentResult)[0];\n    if (didMissUpdates) {\n      handleDataUpdate();\n    }\n  }\n  function disableStoreUpdates() {\n    isListeningForUpdatesRef.current = false;\n  }\n  function handleDataUpdate() {\n    if (isMountedRef.current === false || isListeningForUpdatesRef.current === false) {\n      return;\n    }\n\n    // React bails out on noop state updates as an optimization.\n    // If we want to force an update via setState, we need to pass an value.\n    // The actual value can be arbitrary though, e.g. an incremented number.\n    forceUpdate(function (count) {\n      return count + 1;\n    });\n  }\n\n  // Establish Relay store subscriptions in the commit phase, only if\n  // rendering for the first time, or if we need to subscribe to new data\n  // If the fragment identifier changes, it means that the variables on the\n  // fragment owner changed, or the fragment ref points to different records.\n  // In this case, we need to resubscribe to the Relay store.\n  useEffect(function () {\n    isMountedRef.current = true;\n    var disposable = FragmentResource.subscribe(fragmentResult, handleDataUpdate);\n    return function () {\n      // When unmounting or resubscribing to new data, clean up current\n      // subscription. This will also make sure fragment data is no longer\n      // cached so that next time it its read, it will be freshly read from\n      // the Relay store\n      isMountedRef.current = false;\n      disposable.dispose();\n    };\n    // NOTE: We disable react-hooks-deps warning because environment and fragmentIdentifier\n    // is capturing all information about whether the effect should be re-ran.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [environment, fragmentIdentifier]);\n  if (process.env.NODE_ENV !== \"production\") {\n    if (fragmentRef != null && (fragmentResult.data === undefined || Array.isArray(fragmentResult.data) && fragmentResult.data.length > 0 && fragmentResult.data.every(function (data) {\n      return data === undefined;\n    }))) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected to have been able to read non-null data for ' + 'fragment `%s` declared in ' + '`%s`, since fragment reference was non-null. ' + \"Make sure that that `%s`'s parent isn't \" + 'holding on to and/or passing a fragment reference for data that ' + 'has been deleted.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n    }\n  }\n  return {\n    // $FlowFixMe[incompatible-return]\n    data: fragmentResult.data,\n    disableStoreUpdates: disableStoreUpdates,\n    enableStoreUpdates: enableStoreUpdates\n  };\n}\nmodule.exports = useFragmentNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('react'),\n  useEffect = _require.useEffect,\n  useRef = _require.useRef;\nfunction useIsMountedRef() {\n  var isMountedRef = useRef(true);\n  useEffect(function () {\n    isMountedRef.current = true;\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []);\n  return isMountedRef;\n}\nmodule.exports = useIsMountedRef;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  getObservableForActiveRequest = _require.__internal.getObservableForActiveRequest,\n  getSelector = _require.getSelector;\nvar useEffect = React.useEffect,\n  useState = React.useState,\n  useMemo = React.useMemo;\nfunction useIsOperationNodeActive(fragmentNode, fragmentRef) {\n  var environment = useRelayEnvironment();\n  var observable = useMemo(function () {\n    var selector = getSelector(fragmentNode, fragmentRef);\n    if (selector == null) {\n      return null;\n    }\n    !(selector.kind === 'SingularReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useIsOperationNodeActive: Plural fragments are not supported.') : invariant(false) : void 0;\n    return getObservableForActiveRequest(environment, selector.owner);\n  }, [environment, fragmentNode, fragmentRef]);\n  var _useState = useState(observable != null),\n    isActive = _useState[0],\n    setIsActive = _useState[1];\n  useEffect(function () {\n    var subscription;\n    setIsActive(observable != null);\n    if (observable != null) {\n      var onCompleteOrError = function onCompleteOrError() {\n        setIsActive(false);\n      };\n      subscription = observable.subscribe({\n        complete: onCompleteOrError,\n        error: onCompleteOrError\n      });\n    }\n    return function () {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [observable]);\n  return isActive;\n}\nmodule.exports = useIsOperationNodeActive;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useLazyLoadQueryNode = require('./useLazyLoadQueryNode');\nvar useMemoOperationDescriptor = require('./useMemoOperationDescriptor');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require2 = require('relay-runtime'),\n  fetchQuery = _require2.__internal.fetchQuery;\n\n// This separate type export is only needed as long as we are injecting\n// a separate hooks implementation in ./HooksImplementation -- it can\n// be removed after we stop doing that.\n\nfunction useLazyLoadQuery(gqlQuery, variables, options) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var environment = useRelayEnvironment();\n  var query = useMemoOperationDescriptor(gqlQuery, variables, options && options.networkCacheConfig ? options.networkCacheConfig : {\n    force: true\n  });\n  var data = useLazyLoadQueryNode({\n    componentDisplayName: 'useLazyLoadQuery()',\n    fetchKey: options === null || options === void 0 ? void 0 : options.fetchKey,\n    fetchObservable: fetchQuery(environment, query),\n    fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n    query: query,\n    renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n  });\n  return data;\n}\nmodule.exports = useLazyLoadQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ProfilerContext = require('./ProfilerContext');\nvar _require = require('./QueryResource'),\n  getQueryCacheIdentifier = _require.getQueryCacheIdentifier,\n  getQueryResourceForEnvironment = _require.getQueryResourceForEnvironment;\nvar useFetchTrackingRef = require('./useFetchTrackingRef');\nvar useFragmentNode = require('./useFragmentNode');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar useContext = React.useContext,\n  useEffect = React.useEffect,\n  useState = React.useState,\n  useRef = React.useRef;\nfunction useLazyLoadQueryNode(_ref) {\n  var query = _ref.query,\n    componentDisplayName = _ref.componentDisplayName,\n    fetchObservable = _ref.fetchObservable,\n    fetchPolicy = _ref.fetchPolicy,\n    fetchKey = _ref.fetchKey,\n    renderPolicy = _ref.renderPolicy;\n  var environment = useRelayEnvironment();\n  var profilerContext = useContext(ProfilerContext);\n  var QueryResource = getQueryResourceForEnvironment(environment);\n  var _useState = useState(0),\n    forceUpdateKey = _useState[0],\n    forceUpdate = _useState[1];\n  var _useFetchTrackingRef = useFetchTrackingRef(),\n    startFetch = _useFetchTrackingRef.startFetch,\n    completeFetch = _useFetchTrackingRef.completeFetch;\n  var cacheBreaker = \"\".concat(forceUpdateKey, \"-\").concat(fetchKey !== null && fetchKey !== void 0 ? fetchKey : '');\n  var cacheIdentifier = getQueryCacheIdentifier(environment, query, fetchPolicy, renderPolicy, cacheBreaker);\n  var preparedQueryResult = profilerContext.wrapPrepareQueryResource(function () {\n    return QueryResource.prepareWithIdentifier(cacheIdentifier, query, fetchObservable, fetchPolicy, renderPolicy, {\n      start: startFetch,\n      complete: completeFetch,\n      error: completeFetch\n    }, profilerContext);\n  });\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current cached resource will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly attempt to\n      // retain a cached query resource that was disposed, we need to force\n      // a re-render so that the cache entry for this query is re-intiliazed and\n      // and re-evaluated (and potentially cause a refetch).\n      maybeHiddenOrFastRefresh.current = false;\n      forceUpdate(function (n) {\n        return n + 1;\n      });\n      return;\n    }\n    var disposable = QueryResource.retain(preparedQueryResult, profilerContext);\n    return function () {\n      disposable.dispose();\n    };\n    // NOTE: We disable react-hooks-deps warning because the `environment`\n    // and `cacheIdentifier` identities are capturing all information about whether\n    // the effect should be re-executed and the query re-retained.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [environment, cacheIdentifier]);\n  useEffect(function () {\n    // Release any temporary retain that's not released. At this point, if the\n    // cacheIdentifier doesn't change, the query is still permanently retained,\n    // and the temporary retain is redundant.\n    QueryResource.releaseTemporaryRetain(preparedQueryResult);\n    // This effect is intended to run on every commit, thus no dependency\n  });\n\n  var fragmentNode = preparedQueryResult.fragmentNode,\n    fragmentRef = preparedQueryResult.fragmentRef;\n  var _useFragmentNode = useFragmentNode(fragmentNode, fragmentRef, componentDisplayName),\n    data = _useFragmentNode.data;\n  return data;\n}\nmodule.exports = useLazyLoadQueryNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useFetchTrackingRef = require('./useFetchTrackingRef');\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useIsOperationNodeActive = require('./useIsOperationNodeActive');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useEffect = _require.useEffect,\n  useState = _require.useState;\nvar _require2 = require('relay-runtime'),\n  fetchQuery = _require2.__internal.fetchQuery,\n  ConnectionInterface = _require2.ConnectionInterface,\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  getPaginationVariables = _require2.getPaginationVariables,\n  getSelector = _require2.getSelector,\n  getValueAtPath = _require2.getValueAtPath;\nvar warning = require(\"fbjs/lib/warning\");\nfunction useLoadMoreFunction(args) {\n  var direction = args.direction,\n    fragmentNode = args.fragmentNode,\n    fragmentRef = args.fragmentRef,\n    fragmentIdentifier = args.fragmentIdentifier,\n    fragmentData = args.fragmentData,\n    connectionPathInFragmentData = args.connectionPathInFragmentData,\n    paginationRequest = args.paginationRequest,\n    paginationMetadata = args.paginationMetadata,\n    componentDisplayName = args.componentDisplayName,\n    observer = args.observer,\n    onReset = args.onReset,\n    identifierField = args.identifierField;\n  var environment = useRelayEnvironment();\n  var _useFetchTrackingRef = useFetchTrackingRef(),\n    isFetchingRef = _useFetchTrackingRef.isFetchingRef,\n    startFetch = _useFetchTrackingRef.startFetch,\n    disposeFetch = _useFetchTrackingRef.disposeFetch,\n    completeFetch = _useFetchTrackingRef.completeFetch;\n  var identifierValue = identifierField != null && fragmentData != null && typeof fragmentData === 'object' ? fragmentData[identifierField] : null;\n  var isMountedRef = useIsMountedRef();\n  var _useState = useState(environment),\n    mirroredEnvironment = _useState[0],\n    setMirroredEnvironment = _useState[1];\n  var _useState2 = useState(fragmentIdentifier),\n    mirroredFragmentIdentifier = _useState2[0],\n    setMirroredFragmentIdentifier = _useState2[1];\n  var isParentQueryActive = useIsOperationNodeActive(fragmentNode, fragmentRef);\n  var shouldReset = environment !== mirroredEnvironment || fragmentIdentifier !== mirroredFragmentIdentifier;\n  if (shouldReset) {\n    disposeFetch();\n    onReset();\n    setMirroredEnvironment(environment);\n    setMirroredFragmentIdentifier(fragmentIdentifier);\n  }\n  var _getConnectionState = getConnectionState(direction, fragmentNode, fragmentData, connectionPathInFragmentData),\n    cursor = _getConnectionState.cursor,\n    hasMore = _getConnectionState.hasMore;\n\n  // Dispose of pagination requests in flight when unmounting\n  useEffect(function () {\n    return function () {\n      disposeFetch();\n    };\n  }, [disposeFetch]);\n  var loadMore = useCallback(function (count, options) {\n    // TODO(T41131846): Fetch/Caching policies for loadMore\n\n    var onComplete = options === null || options === void 0 ? void 0 : options.onComplete;\n    if (isMountedRef.current !== true) {\n      // Bail out and warn if we're trying to paginate after the component\n      // has unmounted\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected fetch on unmounted component for fragment ' + '`%s` in `%s`. It looks like some instances of your component are ' + 'still trying to fetch data but they already unmounted. ' + 'Please make sure you clear all timers, intervals, ' + 'async calls, etc that may trigger a fetch.', fragmentNode.name, componentDisplayName) : void 0;\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    var fragmentSelector = getSelector(fragmentNode, fragmentRef);\n    if (isFetchingRef.current === true || fragmentData == null || isParentQueryActive) {\n      if (fragmentSelector == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected fetch while using a null fragment ref ' + 'for fragment `%s` in `%s`. When fetching more items, we expect ' + \"initial fragment data to be non-null. Please make sure you're \" + 'passing a valid fragment ref to `%s` before paginating.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n      }\n      if (onComplete) {\n        onComplete(null);\n      }\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    !(fragmentSelector != null && fragmentSelector.kind !== 'PluralReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to be able to find a non-plural fragment owner for ' + \"fragment `%s` when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n    var parentVariables = fragmentSelector.owner.variables;\n    var fragmentVariables = fragmentSelector.variables;\n    var extraVariables = options === null || options === void 0 ? void 0 : options.UNSTABLE_extraVariables;\n    var baseVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, parentVariables), fragmentVariables);\n    var paginationVariables = getPaginationVariables(direction, count, cursor, baseVariables, (0, _objectSpread2[\"default\"])({}, extraVariables), paginationMetadata);\n\n    // If the query needs an identifier value ('id' or similar) and one\n    // was not explicitly provided, read it from the fragment data.\n    if (identifierField != null) {\n      // @refetchable fragments are guaranteed to have an `id` selection\n      // if the type is Node, implements Node, or is @fetchable. Double-check\n      // that there actually is a value at runtime.\n      if (typeof identifierValue !== 'string') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected result to have a string  ' + '`%s` in order to refetch, got `%s`.', identifierField, identifierValue) : void 0;\n      }\n      paginationVariables.id = identifierValue;\n    }\n    var paginationQuery = createOperationDescriptor(paginationRequest, paginationVariables, {\n      force: true\n    });\n    fetchQuery(environment, paginationQuery).subscribe((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n      start: function start(subscription) {\n        startFetch(subscription);\n        observer.start && observer.start(subscription);\n      },\n      complete: function complete() {\n        completeFetch();\n        observer.complete && observer.complete();\n        onComplete && onComplete(null);\n      },\n      error: function error(_error) {\n        completeFetch();\n        observer.error && observer.error(_error);\n        onComplete && onComplete(_error);\n      }\n    }));\n    return {\n      dispose: disposeFetch\n    };\n  },\n  // NOTE: We disable react-hooks-deps warning because all values\n  // inside paginationMetadata are static\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [environment, identifierValue, direction, cursor, startFetch, disposeFetch, completeFetch, isFetchingRef, isParentQueryActive, fragmentData, fragmentNode.name, fragmentRef, componentDisplayName]);\n  return [loadMore, hasMore, disposeFetch];\n}\nfunction getConnectionState(direction, fragmentNode, fragmentData, connectionPathInFragmentData) {\n  var _pageInfo$END_CURSOR, _pageInfo$START_CURSO;\n  var _ConnectionInterface$ = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$.EDGES,\n    PAGE_INFO = _ConnectionInterface$.PAGE_INFO,\n    HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE,\n    HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE,\n    END_CURSOR = _ConnectionInterface$.END_CURSOR,\n    START_CURSOR = _ConnectionInterface$.START_CURSOR;\n  var connection = getValueAtPath(fragmentData, connectionPathInFragmentData);\n  if (connection == null) {\n    return {\n      cursor: null,\n      hasMore: false\n    };\n  }\n  !(typeof connection === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have been `null`, or ' + 'a plain object with %s and %s properties. Instead got `%s`.', fragmentNode.name, EDGES, PAGE_INFO, connection) : invariant(false) : void 0;\n  var edges = connection[EDGES];\n  var pageInfo = connection[PAGE_INFO];\n  if (edges == null || pageInfo == null) {\n    return {\n      cursor: null,\n      hasMore: false\n    };\n  }\n  !Array.isArray(edges) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have a plural `%s` field. ' + 'Instead got `%s`.', fragmentNode.name, EDGES, edges) : invariant(false) : void 0;\n  !(typeof pageInfo === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have a `%s` field. ' + 'Instead got `%s`.', fragmentNode.name, PAGE_INFO, pageInfo) : invariant(false) : void 0;\n  var cursor = direction === 'forward' ? (_pageInfo$END_CURSOR = pageInfo[END_CURSOR]) !== null && _pageInfo$END_CURSOR !== void 0 ? _pageInfo$END_CURSOR : null : (_pageInfo$START_CURSO = pageInfo[START_CURSOR]) !== null && _pageInfo$START_CURSO !== void 0 ? _pageInfo$START_CURSO : null;\n  !(cursor === null || typeof cursor === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected page info for connection in fragment `%s` to have a ' + 'valid `%s`. Instead got `%s`.', fragmentNode.name, START_CURSOR, cursor) : invariant(false) : void 0;\n  var hasMore;\n  if (direction === 'forward') {\n    hasMore = cursor != null && pageInfo[HAS_NEXT_PAGE] === true;\n  } else {\n    hasMore = cursor != null && pageInfo[HAS_PREV_PAGE] === true;\n  }\n  return {\n    cursor: cursor,\n    hasMore: hasMore\n  };\n}\nmodule.exports = useLoadMoreFunction;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useMemoVariables = require('./useMemoVariables');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createOperationDescriptor = _require.createOperationDescriptor,\n  getRequest = _require.getRequest;\nvar useMemo = React.useMemo;\nfunction useMemoOperationDescriptor(gqlQuery, variables, cacheConfig) {\n  var memoVariables = useMemoVariables(variables);\n  var memoCacheConfig = useMemoVariables(cacheConfig || {});\n  return useMemo(function () {\n    return createOperationDescriptor(getRequest(gqlQuery), memoVariables, memoCacheConfig);\n  }, [gqlQuery, memoVariables, memoCacheConfig]);\n}\nmodule.exports = useMemoOperationDescriptor;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar _require = require('react'),\n  useState = _require.useState;\n\n/**\n * Memoizes the passed in `variables` object based on `areEqual` equality.\n * This is useful when a `variables` object is used as a value in a depencency\n * array as it might often be constructed during render.\n */\nfunction useMemoVariables(variables) {\n  var _useState = useState(variables),\n    mirroredVariables = _useState[0],\n    setMirroredVariables = _useState[1];\n  if (areEqual(variables, mirroredVariables)) {\n    return mirroredVariables;\n  } else {\n    setMirroredVariables(variables);\n    return variables;\n  }\n}\nmodule.exports = useMemoVariables;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  defaultCommitMutation = _require.commitMutation;\nvar useState = React.useState,\n  useEffect = React.useEffect,\n  useRef = React.useRef,\n  useCallback = React.useCallback;\nfunction useMutation(mutation) {\n  var commitMutationFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultCommitMutation;\n  var environment = useRelayEnvironment();\n  var isMountedRef = useIsMountedRef();\n  var environmentRef = useRef(environment);\n  var mutationRef = useRef(mutation);\n  var inFlightMutationsRef = useRef(new Set());\n  var _useState = useState(false),\n    isMutationInFlight = _useState[0],\n    setMutationInFlight = _useState[1];\n  var cleanup = useCallback(function (disposable) {\n    if (environmentRef.current === environment && mutationRef.current === mutation) {\n      inFlightMutationsRef.current[\"delete\"](disposable);\n      if (isMountedRef.current) {\n        setMutationInFlight(inFlightMutationsRef.current.size > 0);\n      }\n    }\n  }, [environment, isMountedRef, mutation]);\n  useEffect(function () {\n    if (environmentRef.current !== environment || mutationRef.current !== mutation) {\n      inFlightMutationsRef.current = new Set();\n      if (isMountedRef.current) {\n        setMutationInFlight(false);\n      }\n      environmentRef.current = environment;\n      mutationRef.current = mutation;\n    }\n  }, [environment, isMountedRef, mutation]);\n  var commit = useCallback(function (config) {\n    if (isMountedRef.current) {\n      setMutationInFlight(true);\n    }\n    var disposable = commitMutationFn(environment, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, config), {}, {\n      mutation: mutation,\n      onCompleted: function onCompleted(response, errors) {\n        var _config$onCompleted;\n        cleanup(disposable);\n        (_config$onCompleted = config.onCompleted) === null || _config$onCompleted === void 0 ? void 0 : _config$onCompleted.call(config, response, errors);\n      },\n      onError: function onError(error) {\n        var _config$onError;\n        cleanup(disposable);\n        (_config$onError = config.onError) === null || _config$onError === void 0 ? void 0 : _config$onError.call(config, error);\n      },\n      onUnsubscribe: function onUnsubscribe() {\n        var _config$onUnsubscribe;\n        cleanup(disposable);\n        (_config$onUnsubscribe = config.onUnsubscribe) === null || _config$onUnsubscribe === void 0 ? void 0 : _config$onUnsubscribe.call(config);\n      },\n      onNext: function onNext() {\n        var _config$onNext;\n        (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n      }\n    }));\n    inFlightMutationsRef.current.add(disposable);\n    return disposable;\n  }, [cleanup, commitMutationFn, environment, isMountedRef, mutation]);\n  return [commit, isMutationInFlight];\n}\nmodule.exports = useMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar HooksImplementation = require('./HooksImplementation');\nvar useLoadMoreFunction = require('./useLoadMoreFunction');\nvar useRefetchableFragmentNode = require('./useRefetchableFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useDebugValue = _require.useDebugValue,\n  useState = _require.useState;\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment,\n  getFragmentIdentifier = _require2.getFragmentIdentifier,\n  getPaginationMetadata = _require2.getPaginationMetadata;\n\n// This separate type export is only needed as long as we are injecting\n// a separate hooks implementation in ./HooksImplementation -- it can\n// be removed after we stop doing that.\n\nfunction usePaginationFragment_LEGACY(fragmentInput, parentFragmentRef) {\n  var fragmentNode = getFragment(fragmentInput);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of usePaginationFragment()');\n  var componentDisplayName = 'usePaginationFragment()';\n  var _getPaginationMetadat = getPaginationMetadata(fragmentNode, componentDisplayName),\n    connectionPathInFragmentData = _getPaginationMetadat.connectionPathInFragmentData,\n    paginationRequest = _getPaginationMetadat.paginationRequest,\n    paginationMetadata = _getPaginationMetadat.paginationMetadata,\n    identifierField = _getPaginationMetadat.identifierField;\n  var _useRefetchableFragme = useRefetchableFragmentNode(fragmentNode, parentFragmentRef, componentDisplayName),\n    fragmentData = _useRefetchableFragme.fragmentData,\n    fragmentRef = _useRefetchableFragme.fragmentRef,\n    refetch = _useRefetchableFragme.refetch;\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, fragmentRef);\n\n  // Backward pagination\n  var _useLoadMore = useLoadMore({\n      componentDisplayName: componentDisplayName,\n      connectionPathInFragmentData: connectionPathInFragmentData,\n      direction: 'backward',\n      fragmentData: fragmentData,\n      fragmentIdentifier: fragmentIdentifier,\n      fragmentNode: fragmentNode,\n      fragmentRef: fragmentRef,\n      identifierField: identifierField,\n      paginationMetadata: paginationMetadata,\n      paginationRequest: paginationRequest\n    }),\n    loadPrevious = _useLoadMore[0],\n    hasPrevious = _useLoadMore[1],\n    isLoadingPrevious = _useLoadMore[2],\n    disposeFetchPrevious = _useLoadMore[3];\n\n  // Forward pagination\n  var _useLoadMore2 = useLoadMore({\n      componentDisplayName: componentDisplayName,\n      connectionPathInFragmentData: connectionPathInFragmentData,\n      direction: 'forward',\n      fragmentData: fragmentData,\n      fragmentIdentifier: fragmentIdentifier,\n      fragmentNode: fragmentNode,\n      fragmentRef: fragmentRef,\n      identifierField: identifierField,\n      paginationMetadata: paginationMetadata,\n      paginationRequest: paginationRequest\n    }),\n    loadNext = _useLoadMore2[0],\n    hasNext = _useLoadMore2[1],\n    isLoadingNext = _useLoadMore2[2],\n    disposeFetchNext = _useLoadMore2[3];\n  var refetchPagination = useCallback(function (variables, options) {\n    disposeFetchNext();\n    disposeFetchPrevious();\n    return refetch(variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options), {}, {\n      __environment: undefined\n    }));\n  }, [disposeFetchNext, disposeFetchPrevious, refetch]);\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: fragmentData,\n      hasNext: hasNext,\n      isLoadingNext: isLoadingNext,\n      hasPrevious: hasPrevious,\n      isLoadingPrevious: isLoadingPrevious\n    });\n  }\n  return {\n    data: fragmentData,\n    loadNext: loadNext,\n    loadPrevious: loadPrevious,\n    hasNext: hasNext,\n    hasPrevious: hasPrevious,\n    isLoadingNext: isLoadingNext,\n    isLoadingPrevious: isLoadingPrevious,\n    refetch: refetchPagination\n  };\n}\nfunction useLoadMore(args) {\n  var _useState = useState(false),\n    isLoadingMore = _useState[0],\n    setIsLoadingMore = _useState[1];\n  var observer = {\n    start: function start() {\n      return setIsLoadingMore(true);\n    },\n    complete: function complete() {\n      return setIsLoadingMore(false);\n    },\n    error: function error() {\n      return setIsLoadingMore(false);\n    }\n  };\n  var handleReset = function handleReset() {\n    return setIsLoadingMore(false);\n  };\n  var _useLoadMoreFunction = useLoadMoreFunction((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, args), {}, {\n      observer: observer,\n      onReset: handleReset\n    })),\n    loadMore = _useLoadMoreFunction[0],\n    hasMore = _useLoadMoreFunction[1],\n    disposeFetch = _useLoadMoreFunction[2];\n  return [loadMore, hasMore, isLoadingMore, disposeFetch];\n}\nfunction usePaginationFragment(fragmentInput, parentFragmentRef) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    return impl.usePaginationFragment(fragmentInput, parentFragmentRef);\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return usePaginationFragment_LEGACY(fragmentInput, parentFragmentRef);\n  }\n}\nmodule.exports = usePaginationFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useLazyLoadQueryNode = require('./useLazyLoadQueryNode');\nvar useMemoOperationDescriptor = require('./useMemoOperationDescriptor');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require2 = require('react'),\n  useDebugValue = _require2.useDebugValue;\nvar _require3 = require('relay-runtime'),\n  _require3$__internal = _require3.__internal,\n  fetchQueryDeduped = _require3$__internal.fetchQueryDeduped,\n  fetchQuery = _require3$__internal.fetchQuery;\nvar warning = require(\"fbjs/lib/warning\");\nfunction usePreloadedQuery(gqlQuery, preloadedQuery, options) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var environment = useRelayEnvironment();\n  var fetchKey = preloadedQuery.fetchKey,\n    fetchPolicy = preloadedQuery.fetchPolicy,\n    source = preloadedQuery.source,\n    variables = preloadedQuery.variables,\n    networkCacheConfig = preloadedQuery.networkCacheConfig;\n  var operation = useMemoOperationDescriptor(gqlQuery, variables, networkCacheConfig);\n  var useLazyLoadQueryNodeParams;\n  if (preloadedQuery.kind === 'PreloadedQuery_DEPRECATED') {\n    !(operation.request.node.params.name === preloadedQuery.name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'usePreloadedQuery(): Expected data to be prefetched for query `%s`, ' + 'got prefetch results for query `%s`.', operation.request.node.params.name, preloadedQuery.name) : invariant(false) : void 0;\n    useLazyLoadQueryNodeParams = {\n      componentDisplayName: 'usePreloadedQuery()',\n      fetchKey: fetchKey,\n      fetchObservable: fetchQueryDeduped(environment, operation.request.identifier, function () {\n        if (environment === preloadedQuery.environment && source != null) {\n          return environment.executeWithSource({\n            operation: operation,\n            source: source\n          });\n        } else {\n          return environment.execute({\n            operation: operation\n          });\n        }\n      }),\n      fetchPolicy: fetchPolicy,\n      query: operation,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    };\n  } else {\n    process.env.NODE_ENV !== \"production\" ? warning(preloadedQuery.isDisposed === false, 'usePreloadedQuery(): Expected preloadedQuery to not be disposed yet. ' + 'This is because disposing the query marks it for future garbage ' + 'collection, and as such query results may no longer be present in the Relay ' + 'store. In the future, this will become a hard error.') : void 0;\n    var fallbackFetchObservable = fetchQuery(environment, operation);\n    var fetchObservable;\n    if (source != null && environment === preloadedQuery.environment) {\n      // If the source observable exists and the environments match, reuse\n      // the source observable.\n      // If the source observable happens to be empty, we need to fall back\n      // and re-execute and de-dupe the query (at render time).\n      fetchObservable = source.ifEmpty(fallbackFetchObservable);\n    } else if (environment !== preloadedQuery.environment) {\n      // If a call to loadQuery is made with a particular environment, and that\n      // preloaded query is passed to usePreloadedQuery in a different environment\n      // context, we cannot re-use the existing preloaded query.\n      // Instead, we need to fall back and re-execute and de-dupe the query with\n      // the new environment (at render time).\n      // TODO T68036756 track occurences of this warning and turn it into a hard error\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usePreloadedQuery(): usePreloadedQuery was passed a preloaded query ' + 'that was created with a different environment than the one that is currently ' + 'in context. In the future, this will become a hard error.') : void 0;\n      fetchObservable = fallbackFetchObservable;\n    } else {\n      // if (source == null)\n      // If the source observable does not exist, we need to\n      // fall back and re-execute and de-dupe the query (at render time).\n      fetchObservable = fallbackFetchObservable;\n    }\n    useLazyLoadQueryNodeParams = {\n      componentDisplayName: 'usePreloadedQuery()',\n      fetchObservable: fetchObservable,\n      fetchKey: fetchKey,\n      fetchPolicy: fetchPolicy,\n      query: operation,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    };\n  }\n  var data = useLazyLoadQueryNode(useLazyLoadQueryNodeParams);\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      query: preloadedQuery.name,\n      variables: preloadedQuery.variables,\n      data: data,\n      fetchKey: fetchKey,\n      fetchPolicy: fetchPolicy,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    });\n  }\n  return data;\n}\nmodule.exports = usePreloadedQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _require = require('./loadQuery'),\n  loadQuery = _require.loadQuery,\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require2 = require('react'),\n  useCallback = _require2.useCallback,\n  useEffect = _require2.useEffect,\n  useRef = _require2.useRef,\n  useState = _require2.useState;\nvar _require3 = require('relay-runtime'),\n  getRequest = _require3.getRequest;\nvar initialNullQueryReferenceState = {\n  kind: 'NullQueryReference'\n};\nfunction requestIsLiveQuery(preloadableRequest) {\n  if (preloadableRequest.kind === 'PreloadableConcreteRequest') {\n    return preloadableRequest.params.metadata.live !== undefined;\n  }\n  var request = getRequest(preloadableRequest);\n  return request.params.metadata.live !== undefined;\n}\nfunction useQueryLoader(preloadableRequest, initialQueryReference) {\n  /**\n   * We want to always call `queryReference.dispose()` for every call to\n   * `setQueryReference(loadQuery(...))` so that no leaks of data in Relay stores\n   * will occur.\n   *\n   * However, a call to `setState(newState)` is not always followed by a commit where\n   * this value is reflected in the state. Thus, we cannot reliably clean up each\n   * ref with `useEffect(() => () => queryReference.dispose(), [queryReference])`.\n   *\n   * Instead, we keep track of each call to `loadQuery` in a ref.\n   * Relying on the fact that if a state change commits, no state changes that were\n   * initiated prior to the currently committing state change will ever subsequently\n   * commit, we can safely dispose of all preloaded query references\n   * associated with state changes initiated prior to the currently committing state\n   * change.\n   *\n   * Finally, when the hook unmounts, we also dispose of all remaining uncommitted\n   * query references.\n   */\n\n  var initialQueryReferenceInternal = initialQueryReference !== null && initialQueryReference !== void 0 ? initialQueryReference : initialNullQueryReferenceState;\n  var environment = useRelayEnvironment();\n  useTrackLoadQueryInRender();\n  var isMountedRef = useIsMountedRef();\n  var undisposedQueryReferencesRef = useRef(new Set([initialQueryReferenceInternal]));\n  var _useState = useState(function () {\n      return initialQueryReferenceInternal;\n    }),\n    queryReference = _useState[0],\n    setQueryReference = _useState[1];\n  var _useState2 = useState(function () {\n      return initialQueryReferenceInternal;\n    }),\n    previousInitialQueryReference = _useState2[0],\n    setPreviousInitialQueryReference = _useState2[1];\n  if (initialQueryReferenceInternal !== previousInitialQueryReference) {\n    // Rendering the query reference makes it \"managed\" by this hook, so\n    // we start keeping track of it so we can dispose it when it is no longer\n    // necessary here\n    // TODO(T78446637): Handle disposal of managed query references in\n    // components that were never mounted after rendering\n    undisposedQueryReferencesRef.current.add(initialQueryReferenceInternal);\n    setPreviousInitialQueryReference(initialQueryReferenceInternal);\n    setQueryReference(initialQueryReferenceInternal);\n  }\n  var disposeQuery = useCallback(function () {\n    if (isMountedRef.current) {\n      undisposedQueryReferencesRef.current.add(initialNullQueryReferenceState);\n      setQueryReference(initialNullQueryReferenceState);\n    }\n  }, [isMountedRef]);\n  var queryLoaderCallback = useCallback(function (variables, options) {\n    var mergedOptions = options != null && options.hasOwnProperty('__environment') ? {\n      fetchPolicy: options.fetchPolicy,\n      networkCacheConfig: options.networkCacheConfig,\n      __nameForWarning: options.__nameForWarning\n    } : options;\n    if (isMountedRef.current) {\n      var _options$__environmen;\n      var updatedQueryReference = loadQuery((_options$__environmen = options === null || options === void 0 ? void 0 : options.__environment) !== null && _options$__environmen !== void 0 ? _options$__environmen : environment, preloadableRequest, variables, mergedOptions);\n      undisposedQueryReferencesRef.current.add(updatedQueryReference);\n      setQueryReference(updatedQueryReference);\n    }\n  }, [environment, preloadableRequest, setQueryReference, isMountedRef]);\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current queryReference will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly leave our\n      // current queryReference disposed, we need to load the query again\n      // and force a re-render by calling queryLoaderCallback again,\n      // so that the queryReference is correctly re-retained, and\n      // potentially refetched if necessary.\n      maybeHiddenOrFastRefresh.current = false;\n      if (queryReference.kind !== 'NullQueryReference') {\n        queryLoaderCallback(queryReference.variables, {\n          fetchPolicy: queryReference.fetchPolicy,\n          networkCacheConfig: queryReference.networkCacheConfig\n        });\n      }\n      return;\n    }\n\n    // When a new queryReference is committed, we iterate over all\n    // query references in undisposedQueryReferences and dispose all of\n    // the refs that aren't the currently committed one. This ensures\n    // that we don't leave any dangling query references for the\n    // case that loadQuery is called multiple times before commit; when\n    // this happens, multiple state updates will be scheduled, but only one\n    // will commit, meaning that we need to keep track of and dispose any\n    // query references that don't end up committing.\n    // - We are relying on the fact that sets iterate in insertion order, and we\n    // can remove items from a set as we iterate over it (i.e. no iterator\n    // invalidation issues.) Thus, it is safe to loop through\n    // undisposedQueryReferences until we find queryReference, and\n    // remove and dispose all previous references.\n    // - We are guaranteed to find queryReference in the set, because if a\n    // state update results in a commit, no state updates initiated prior to that\n    // one will be committed, and we are disposing and removing references\n    // associated with updates that were scheduled prior to the currently\n    // committing state change. (A useEffect callback is called during the commit\n    // phase.)\n    var undisposedQueryReferences = undisposedQueryReferencesRef.current;\n    if (isMountedRef.current) {\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(undisposedQueryReferences),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var undisposedQueryReference = _step.value;\n          if (undisposedQueryReference === queryReference) {\n            break;\n          }\n          undisposedQueryReferences[\"delete\"](undisposedQueryReference);\n          if (undisposedQueryReference.kind !== 'NullQueryReference') {\n            if (requestIsLiveQuery(preloadableRequest)) {\n              undisposedQueryReference.dispose && undisposedQueryReference.dispose();\n            } else {\n              undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, [queryReference, isMountedRef, queryLoaderCallback, preloadableRequest]);\n  useEffect(function () {\n    return function disposeAllRemainingQueryReferences() {\n      // undisposedQueryReferences.current is never reassigned\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(undisposedQueryReferencesRef.current),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var undisposedQueryReference = _step2.value;\n          if (undisposedQueryReference.kind !== 'NullQueryReference') {\n            if (requestIsLiveQuery(preloadableRequest)) {\n              undisposedQueryReference.dispose && undisposedQueryReference.dispose();\n            } else {\n              undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n  }, [preloadableRequest]);\n  return [queryReference.kind === 'NullQueryReference' ? null : queryReference, queryLoaderCallback, disposeQuery];\n}\nmodule.exports = useQueryLoader;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar HooksImplementation = require('./HooksImplementation');\nvar useRefetchableFragmentNode = require('./useRefetchableFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require = require('react'),\n  useDebugValue = _require.useDebugValue;\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment;\nfunction useRefetchableFragment_LEGACY(fragmentInput, fragmentRef) {\n  var fragmentNode = getFragment(fragmentInput);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of useRefetchableFragment()');\n  var _useRefetchableFragme = useRefetchableFragmentNode(fragmentNode, fragmentRef, 'useRefetchableFragment()'),\n    fragmentData = _useRefetchableFragme.fragmentData,\n    refetch = _useRefetchableFragme.refetch;\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: fragmentData\n    });\n  }\n\n  // $FlowFixMe[incompatible-return]\n  // $FlowFixMe[prop-missing]\n  return [fragmentData, refetch];\n}\nfunction useRefetchableFragment(fragmentInput, parentFragmentRef) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    return impl.useRefetchableFragment(fragmentInput, parentFragmentRef);\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useRefetchableFragment_LEGACY(fragmentInput, parentFragmentRef);\n  }\n}\nmodule.exports = useRefetchableFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('./FragmentResource'),\n  getFragmentResourceForEnvironment = _require.getFragmentResourceForEnvironment;\nvar ProfilerContext = require('./ProfilerContext');\nvar _require2 = require('./QueryResource'),\n  getQueryResourceForEnvironment = _require2.getQueryResourceForEnvironment;\nvar useFragmentNode = require('./useFragmentNode');\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useQueryLoader = require('./useQueryLoader');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require3 = require('react'),\n  useCallback = _require3.useCallback,\n  useContext = _require3.useContext,\n  useReducer = _require3.useReducer;\nvar _require4 = require('relay-runtime'),\n  fetchQuery = _require4.__internal.fetchQuery,\n  createOperationDescriptor = _require4.createOperationDescriptor,\n  getFragmentIdentifier = _require4.getFragmentIdentifier,\n  getRefetchMetadata = _require4.getRefetchMetadata,\n  getSelector = _require4.getSelector,\n  getValueAtPath = _require4.getValueAtPath;\nvar warning = require(\"fbjs/lib/warning\");\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'refetch':\n      {\n        var _action$refetchEnviro;\n        return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, state), {}, {\n          fetchPolicy: action.fetchPolicy,\n          mirroredEnvironment: (_action$refetchEnviro = action.refetchEnvironment) !== null && _action$refetchEnviro !== void 0 ? _action$refetchEnviro : state.mirroredEnvironment,\n          onComplete: action.onComplete,\n          refetchEnvironment: action.refetchEnvironment,\n          refetchQuery: action.refetchQuery,\n          renderPolicy: action.renderPolicy\n        });\n      }\n    case 'reset':\n      {\n        return {\n          fetchPolicy: undefined,\n          mirroredEnvironment: action.environment,\n          mirroredFragmentIdentifier: action.fragmentIdentifier,\n          onComplete: undefined,\n          refetchQuery: null,\n          renderPolicy: undefined\n        };\n      }\n    default:\n      {\n        action.type;\n        throw new Error('useRefetchableFragmentNode: Unexpected action type');\n      }\n  }\n}\nfunction useRefetchableFragmentNode(fragmentNode, parentFragmentRef, componentDisplayName) {\n  var parentEnvironment = useRelayEnvironment();\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n    refetchableRequest = _getRefetchMetadata.refetchableRequest,\n    fragmentRefPathInResponse = _getRefetchMetadata.fragmentRefPathInResponse,\n    identifierField = _getRefetchMetadata.identifierField;\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, parentFragmentRef);\n  var _useReducer = useReducer(reducer, {\n      fetchPolicy: undefined,\n      mirroredEnvironment: parentEnvironment,\n      mirroredFragmentIdentifier: fragmentIdentifier,\n      onComplete: undefined,\n      refetchEnvironment: null,\n      refetchQuery: null,\n      renderPolicy: undefined\n    }),\n    refetchState = _useReducer[0],\n    dispatch = _useReducer[1];\n  var fetchPolicy = refetchState.fetchPolicy,\n    mirroredEnvironment = refetchState.mirroredEnvironment,\n    mirroredFragmentIdentifier = refetchState.mirroredFragmentIdentifier,\n    onComplete = refetchState.onComplete,\n    refetchEnvironment = refetchState.refetchEnvironment,\n    refetchQuery = refetchState.refetchQuery,\n    renderPolicy = refetchState.renderPolicy;\n  var environment = refetchEnvironment !== null && refetchEnvironment !== void 0 ? refetchEnvironment : parentEnvironment;\n  var QueryResource = getQueryResourceForEnvironment(environment);\n  var FragmentResource = getFragmentResourceForEnvironment(environment);\n  var profilerContext = useContext(ProfilerContext);\n  var shouldReset = environment !== mirroredEnvironment || fragmentIdentifier !== mirroredFragmentIdentifier;\n  var _useQueryLoader = useQueryLoader(refetchableRequest),\n    queryRef = _useQueryLoader[0],\n    loadQuery = _useQueryLoader[1],\n    disposeQuery = _useQueryLoader[2];\n  var fragmentRef = parentFragmentRef;\n  if (shouldReset) {\n    dispatch({\n      type: 'reset',\n      environment: environment,\n      fragmentIdentifier: fragmentIdentifier\n    });\n    disposeQuery();\n  } else if (refetchQuery != null && queryRef != null) {\n    // If refetch was called, we expect to have a refetchQuery and queryRef\n    // in state, since both state updates to set the refetchQuery and the\n    // queryRef occur simultaneously.\n    // In this case, we need to read the refetched query data (potentially\n    // suspending if it's in flight), and extract the new fragment ref\n    // from the query in order read the current @refetchable fragment\n    // with the updated fragment owner as the new refetchQuery.\n\n    // Before observing the refetch, record the current ID and typename\n    // so that, if we are refetching existing data on\n    // a field that implements Node, after refetching we\n    // can validate that the received data is consistent\n    var debugPreviousIDAndTypename;\n    if (process.env.NODE_ENV !== \"production\") {\n      debugPreviousIDAndTypename = debugFunctions.getInitialIDAndType(refetchQuery.request.variables, fragmentRefPathInResponse, environment);\n    }\n    var handleQueryCompleted = function handleQueryCompleted(maybeError) {\n      onComplete && onComplete(maybeError !== null && maybeError !== void 0 ? maybeError : null);\n    };\n\n    // The queryRef.source obtained from useQueryLoader will be\n    // an observable we can consume /if/ a network request was\n    // started. Otherwise, given that QueryResource.prepare\n    // always expects an observable we fall back to a new network\n    // observable. Note however that if loadQuery did not make a network\n    // request, we don't expect to make one here, unless the state of\n    // the cache has changed between the call to refetch and this\n    // render.\n    var fetchObservable = queryRef.source != null ? queryRef.source : fetchQuery(environment, refetchQuery);\n\n    // Now wwe can we read the refetch query here using the\n    // queryRef provided from useQueryLoader. Note that the\n    // network request is started during the call to refetch,\n    // but if the refetch query is still in flight, we will suspend\n    // at this point:\n    var queryResult = profilerContext.wrapPrepareQueryResource(function () {\n      return QueryResource.prepare(refetchQuery, fetchObservable, fetchPolicy, renderPolicy, {\n        error: handleQueryCompleted,\n        complete: function complete() {\n          // Validate that the type of the object we got back matches the type\n          // of the object already in the store\n          if (process.env.NODE_ENV !== \"production\") {\n            debugFunctions.checkSameTypeAfterRefetch(debugPreviousIDAndTypename, environment, fragmentNode, componentDisplayName);\n          }\n          handleQueryCompleted();\n        }\n      }, queryRef.fetchKey, profilerContext);\n    });\n    var queryData = FragmentResource.read(queryResult.fragmentNode, queryResult.fragmentRef, componentDisplayName).data;\n    !(queryData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to be able to read refetch query response. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n\n    // After reading/fetching the refetch query, we extract from the\n    // refetch query response the new fragment ref we need to use to read\n    // the fragment. The new fragment ref will point to the refetch query\n    // as its fragment owner.\n    var refetchedFragmentRef = getValueAtPath(queryData, fragmentRefPathInResponse);\n    fragmentRef = refetchedFragmentRef;\n    if (process.env.NODE_ENV !== \"production\") {\n      // Validate that the id of the object we got back matches the id\n      // we queried for in the variables.\n      // We do this during render instead of onComplete to make sure we are\n      // only validating the most recent refetch.\n      debugFunctions.checkSameIDAfterRefetch(debugPreviousIDAndTypename, fragmentRef, fragmentNode, componentDisplayName);\n    }\n  }\n\n  // We read and subscribe to the fragment using useFragmentNode.\n  // If refetch was called, we read the fragment using the new computed\n  // fragment ref from the refetch query response; otherwise, we use the\n  // fragment ref passed by the caller as normal.\n  var _useFragmentNode = useFragmentNode(fragmentNode, fragmentRef, componentDisplayName),\n    fragmentData = _useFragmentNode.data,\n    disableStoreUpdates = _useFragmentNode.disableStoreUpdates,\n    enableStoreUpdates = _useFragmentNode.enableStoreUpdates;\n  var refetch = useRefetchFunction(componentDisplayName, dispatch, disposeQuery, fragmentData, fragmentIdentifier, fragmentNode, fragmentRefPathInResponse, identifierField, loadQuery, parentFragmentRef, refetchableRequest);\n  return {\n    fragmentData: fragmentData,\n    fragmentRef: fragmentRef,\n    refetch: refetch,\n    disableStoreUpdates: disableStoreUpdates,\n    enableStoreUpdates: enableStoreUpdates\n  };\n}\nfunction useRefetchFunction(componentDisplayName, dispatch, disposeQuery, fragmentData, fragmentIdentifier, fragmentNode, fragmentRefPathInResponse, identifierField, loadQuery, parentFragmentRef, refetchableRequest) {\n  var isMountedRef = useIsMountedRef();\n  var identifierValue = identifierField != null && fragmentData != null && typeof fragmentData === 'object' ? fragmentData[identifierField] : null;\n  return useCallback(function (providedRefetchVariables, options) {\n    // Bail out and warn if we're trying to refetch after the component\n    // has unmounted\n    if (isMountedRef.current !== true) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected call to `refetch` on unmounted component for fragment ' + '`%s` in `%s`. It looks like some instances of your component are ' + 'still trying to fetch data but they already unmounted. ' + 'Please make sure you clear all timers, intervals, ' + 'async calls, etc that may trigger a fetch.', fragmentNode.name, componentDisplayName) : void 0;\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    if (parentFragmentRef == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected call to `refetch` while using a null fragment ref ' + 'for fragment `%s` in `%s`. When calling `refetch`, we expect ' + \"initial fragment data to be non-null. Please make sure you're \" + 'passing a valid fragment ref to `%s` before calling ' + '`refetch`, or make sure you pass all required variables to `refetch`.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n    }\n    var refetchEnvironment = options === null || options === void 0 ? void 0 : options.__environment;\n    var fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy;\n    var renderPolicy = options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy;\n    var onComplete = options === null || options === void 0 ? void 0 : options.onComplete;\n    var fragmentSelector = getSelector(fragmentNode, parentFragmentRef);\n    var parentVariables;\n    var fragmentVariables;\n    if (fragmentSelector == null) {\n      parentVariables = {};\n      fragmentVariables = {};\n    } else if (fragmentSelector.kind === 'PluralReaderSelector') {\n      var _fragmentSelector$sel, _fragmentSelector$sel2, _fragmentSelector$sel3, _fragmentSelector$sel4;\n      parentVariables = (_fragmentSelector$sel = (_fragmentSelector$sel2 = fragmentSelector.selectors[0]) === null || _fragmentSelector$sel2 === void 0 ? void 0 : _fragmentSelector$sel2.owner.variables) !== null && _fragmentSelector$sel !== void 0 ? _fragmentSelector$sel : {};\n      fragmentVariables = (_fragmentSelector$sel3 = (_fragmentSelector$sel4 = fragmentSelector.selectors[0]) === null || _fragmentSelector$sel4 === void 0 ? void 0 : _fragmentSelector$sel4.variables) !== null && _fragmentSelector$sel3 !== void 0 ? _fragmentSelector$sel3 : {};\n    } else {\n      parentVariables = fragmentSelector.owner.variables;\n      fragmentVariables = fragmentSelector.variables;\n    }\n\n    // A user of `useRefetchableFragment()` may pass a subset of\n    // all variables required by the fragment when calling `refetch()`.\n    // We fill in any variables not passed by the call to `refetch()` with the\n    // variables from the original parent fragment owner.\n    var refetchVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, parentVariables), fragmentVariables), providedRefetchVariables);\n\n    // If the query needs an identifier value ('id' or similar) and one\n    // was not explicitly provided, read it from the fragment data.\n    if (identifierField != null && !providedRefetchVariables.hasOwnProperty('id')) {\n      // @refetchable fragments are guaranteed to have an `id` selection\n      // if the type is Node, implements Node, or is @fetchable. Double-check\n      // that there actually is a value at runtime.\n      if (typeof identifierValue !== 'string') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected result to have a string  ' + '`%s` in order to refetch, got `%s`.', identifierField, identifierValue) : void 0;\n      }\n      refetchVariables.id = identifierValue;\n    }\n    var refetchQuery = createOperationDescriptor(refetchableRequest, refetchVariables, {\n      force: true\n    });\n\n    // We call loadQuery which will start a network request if necessary\n    // and update the querRef from useQueryLoader.\n    // Note the following:\n    // - loadQuery will dispose of any previously refetched queries.\n    // - We use the variables extracted off the OperationDescriptor\n    // so that they have been filtered out to include only the\n    // variables actually declared in the query.\n    loadQuery(refetchQuery.request.variables, {\n      fetchPolicy: fetchPolicy,\n      __environment: refetchEnvironment,\n      __nameForWarning: 'refetch'\n    });\n    dispatch({\n      type: 'refetch',\n      fetchPolicy: fetchPolicy,\n      onComplete: onComplete,\n      refetchEnvironment: refetchEnvironment,\n      refetchQuery: refetchQuery,\n      renderPolicy: renderPolicy\n    });\n    return {\n      dispose: disposeQuery\n    };\n  },\n  // NOTE: We disable react-hooks-deps warning because:\n  //   - We know fragmentRefPathInResponse is static, so it can be omitted from\n  //     deps\n  //   - We know fragmentNode is static, so it can be omitted from deps.\n  //   - fragmentNode and parentFragmentRef are also captured by including\n  //     fragmentIdentifier\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [fragmentIdentifier, dispatch, disposeQuery, identifierValue, loadQuery]);\n}\nvar debugFunctions;\nif (process.env.NODE_ENV !== \"production\") {\n  debugFunctions = {\n    getInitialIDAndType: function getInitialIDAndType(memoRefetchVariables, fragmentRefPathInResponse, environment) {\n      var _require5 = require('relay-runtime'),\n        Record = _require5.Record;\n      var id = memoRefetchVariables === null || memoRefetchVariables === void 0 ? void 0 : memoRefetchVariables.id;\n      if (fragmentRefPathInResponse.length !== 1 || fragmentRefPathInResponse[0] !== 'node' || id == null) {\n        return null;\n      }\n      var recordSource = environment.getStore().getSource();\n      var record = recordSource.get(id);\n      var typename = record && Record.getType(record);\n      if (typename == null) {\n        return null;\n      }\n      return {\n        id: id,\n        typename: typename\n      };\n    },\n    checkSameTypeAfterRefetch: function checkSameTypeAfterRefetch(previousIDAndType, environment, fragmentNode, componentDisplayName) {\n      var _require6 = require('relay-runtime'),\n        Record = _require6.Record;\n      if (!previousIDAndType) {\n        return;\n      }\n      var recordSource = environment.getStore().getSource();\n      var record = recordSource.get(previousIDAndType.id);\n      var typename = record && Record.getType(record);\n      if (typename !== previousIDAndType.typename) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Call to `refetch` returned data with a different ' + '__typename: was `%s`, now `%s`, on `%s` in `%s`. ' + 'Please make sure the server correctly implements' + 'unique id requirement.', previousIDAndType.typename, typename, fragmentNode.name, componentDisplayName) : void 0;\n      }\n    },\n    checkSameIDAfterRefetch: function checkSameIDAfterRefetch(previousIDAndTypename, refetchedFragmentRef, fragmentNode, componentDisplayName) {\n      if (previousIDAndTypename == null) {\n        return;\n      }\n      var _require7 = require('relay-runtime'),\n        ID_KEY = _require7.ID_KEY;\n      // $FlowExpectedError[incompatible-use]\n      var resultID = refetchedFragmentRef[ID_KEY];\n      if (resultID != null && resultID !== previousIDAndTypename.id) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Call to `refetch` returned a different id, expected ' + '`%s`, got `%s`, on `%s` in `%s`. ' + 'Please make sure the server correctly implements ' + 'unique id requirement.', resultID, previousIDAndTypename.id, fragmentNode.name, componentDisplayName) : void 0;\n      }\n    }\n  };\n}\nmodule.exports = useRefetchableFragmentNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./../ReactRelayContext');\nvar invariant = require('invariant');\nvar _require = require('react'),\n  useContext = _require.useContext;\nfunction useRelayEnvironment() {\n  var context = useContext(ReactRelayContext);\n  !(context != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useRelayEnvironment: Expected to have found a Relay environment provided by ' + 'a `RelayEnvironmentProvider` component. ' + 'This usually means that useRelayEnvironment was used in a ' + 'component that is not a descendant of a `RelayEnvironmentProvider`. ' + 'Please make sure a `RelayEnvironmentProvider` has been rendered somewhere ' + 'as a parent or ancestor of your component.') : invariant(false) : void 0;\n  return context.environment;\n}\nmodule.exports = useRelayEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar warning = require(\"fbjs/lib/warning\");\nfunction useStaticFragmentNodeWarning(fragmentNode, warningContext) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // This is calling `useRef` conditionally, but based on the environment\n    // __DEV__ setting which shouldn't change. This allows us to only pay the\n    // cost of `useRef` in development mode to produce the warning.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var initialPropRef = useUnsafeRef_DEPRECATED(fragmentNode.name);\n    process.env.NODE_ENV !== \"production\" ? warning(initialPropRef.current === fragmentNode.name, 'Relay: The %s has to remain the same over the lifetime of a component. ' + 'Changing it is not supported and will result in unexpected behavior.', warningContext) : void 0;\n  }\n}\nmodule.exports = useStaticFragmentNodeWarning;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require = require('react'),\n  useEffect = _require.useEffect,\n  useRef = _require.useRef;\n\n/**\n * This hook subscribes a callback to the invalidation state of the given data\n * ids.\n * Any time the invalidation state of the given data ids changes, the provided\n * callback will be called.\n * If new ids or a new callback are provided, the subscription will be\n * re-established and the previous one will be disposed.\n * The subscription will automatically be disposed on unmount\n */\nfunction useSubscribeToInvalidationState(dataIDs, callback) {\n  var environment = useRelayEnvironment();\n  var disposableRef = useRef(null);\n  var stableDataIDs = Array.from(dataIDs).sort().join('');\n  useEffect(function () {\n    var store = environment.getStore();\n    var invalidationState = store.lookupInvalidationState(dataIDs);\n    var disposable = store.subscribeToInvalidationState(invalidationState, callback);\n    disposableRef.current = disposable;\n    return function () {\n      return disposable.dispose();\n    };\n\n    // Intentionally excluding dataIDs, since we're using stableDataIDs\n    // instead\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stableDataIDs, callback, environment]);\n  return {\n    dispose: function dispose() {\n      if (disposableRef.current != null) {\n        disposableRef.current.dispose();\n      }\n    }\n  };\n}\nmodule.exports = useSubscribeToInvalidationState;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require = require('react'),\n  useEffect = _require.useEffect;\nvar _require2 = require('relay-runtime'),\n  requestSubscription = _require2.requestSubscription;\nfunction useSubscription(config, requestSubscriptionFn) {\n  // N.B. this will re-subscribe every render if config or requestSubscriptionFn\n  // are not memoized.\n  // Please do not pass an object defined in-line.\n  var actualRequestSubscription = requestSubscriptionFn !== null && requestSubscriptionFn !== void 0 ? requestSubscriptionFn : requestSubscription;\n  var environment = useRelayEnvironment();\n  useEffect(function () {\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    var _actualRequestSubscri = actualRequestSubscription(environment, config),\n      dispose = _actualRequestSubscri.dispose;\n    return dispose;\n  }, [environment, config, actualRequestSubscription]);\n}\nmodule.exports = useSubscription;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('react'),\n  useMemo = _require.useMemo;\n\n/**\n * Like `useRef`, but does not warn when accessed during render. It's a bad\n * pattern to read or write from a ref during render as it does not trigger\n * a rerender and might result in bugs.\n */\nfunction useUnsafeRef_DEPRECATED(init) {\n  return useMemo(function () {\n    return {\n      current: init\n    };\n  }, []);\n}\nmodule.exports = useUnsafeRef_DEPRECATED;","/**\n * Relay v15.0.0\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/index.js');\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ConnectionHandler = require('./connection/ConnectionHandler');\nvar MutationHandlers = require('./connection/MutationHandlers');\nvar invariant = require('invariant');\nfunction RelayDefaultHandlerProvider(handle) {\n  switch (handle) {\n    case 'connection':\n      return ConnectionHandler;\n    case 'deleteRecord':\n      return MutationHandlers.DeleteRecordHandler;\n    case 'deleteEdge':\n      return MutationHandlers.DeleteEdgeHandler;\n    case 'appendEdge':\n      return MutationHandlers.AppendEdgeHandler;\n    case 'prependEdge':\n      return MutationHandlers.PrependEdgeHandler;\n    case 'appendNode':\n      return MutationHandlers.AppendNodeHandler;\n    case 'prependNode':\n      return MutationHandlers.PrependNodeHandler;\n  }\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayDefaultHandlerProvider: No handler provided for `%s`.', handle) : invariant(false) : void 0;\n}\nmodule.exports = RelayDefaultHandlerProvider;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../../store/ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('../../store/RelayStoreUtils'),\n  getStableStorageKey = _require2.getStableStorageKey;\nvar getRelayHandleKey = require('../../util/getRelayHandleKey');\nvar ConnectionInterface = require('./ConnectionInterface');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar CONNECTION = 'connection';\n\n// Per-instance incrementing index used to generate unique edge IDs\nvar NEXT_EDGE_INDEX = '__connection_next_edge_index';\n\n/**\n * @public\n *\n * A default runtime handler for connection fields that appends newly fetched\n * edges onto the end of a connection, regardless of the arguments used to fetch\n * those edges.\n */\nfunction update(store, payload) {\n  var record = store.get(payload.dataID);\n  if (!record) {\n    return;\n  }\n  var _ConnectionInterface$ = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$.EDGES,\n    END_CURSOR = _ConnectionInterface$.END_CURSOR,\n    HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE,\n    HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE,\n    PAGE_INFO = _ConnectionInterface$.PAGE_INFO,\n    PAGE_INFO_TYPE = _ConnectionInterface$.PAGE_INFO_TYPE,\n    START_CURSOR = _ConnectionInterface$.START_CURSOR;\n  var serverConnection = record.getLinkedRecord(payload.fieldKey);\n  var serverPageInfo = serverConnection && serverConnection.getLinkedRecord(PAGE_INFO);\n  if (!serverConnection) {\n    record.setValue(null, payload.handleKey);\n    return;\n  }\n  // In rare cases the handleKey field may be unset even though the client\n  // connection record exists, in this case new edges should still be merged\n  // into the existing client connection record (and the field reset to point\n  // to that record).\n  var clientConnectionID = generateClientID(record.getDataID(), payload.handleKey);\n  var clientConnectionField = record.getLinkedRecord(payload.handleKey);\n  var clientConnection = clientConnectionField !== null && clientConnectionField !== void 0 ? clientConnectionField : store.get(clientConnectionID);\n  var clientPageInfo = clientConnection && clientConnection.getLinkedRecord(PAGE_INFO);\n  if (!clientConnection) {\n    // Initial fetch with data: copy fields from the server record\n    var connection = store.create(clientConnectionID, serverConnection.getType());\n    connection.setValue(0, NEXT_EDGE_INDEX);\n    connection.copyFieldsFrom(serverConnection);\n    var serverEdges = serverConnection.getLinkedRecords(EDGES);\n    if (serverEdges) {\n      serverEdges = serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, connection, edge);\n      });\n      connection.setLinkedRecords(serverEdges, EDGES);\n    }\n    record.setLinkedRecord(connection, payload.handleKey);\n    clientPageInfo = store.create(generateClientID(connection.getDataID(), PAGE_INFO), PAGE_INFO_TYPE);\n    clientPageInfo.setValue(false, HAS_NEXT_PAGE);\n    clientPageInfo.setValue(false, HAS_PREV_PAGE);\n    clientPageInfo.setValue(null, END_CURSOR);\n    clientPageInfo.setValue(null, START_CURSOR);\n    if (serverPageInfo) {\n      clientPageInfo.copyFieldsFrom(serverPageInfo);\n    }\n    connection.setLinkedRecord(clientPageInfo, PAGE_INFO);\n  } else {\n    if (clientConnectionField == null) {\n      // If the handleKey field was unset but the client connection record\n      // existed, update the field to point to the record\n      record.setLinkedRecord(clientConnection, payload.handleKey);\n    }\n    var _connection = clientConnection;\n    // Subsequent fetches:\n    // - updated fields on the connection\n    // - merge prev/next edges, de-duplicating by node id\n    // - synthesize page info fields\n    var _serverEdges = serverConnection.getLinkedRecords(EDGES);\n    if (_serverEdges) {\n      _serverEdges = _serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, _connection, edge);\n      });\n    }\n    var prevEdges = _connection.getLinkedRecords(EDGES);\n    var prevPageInfo = _connection.getLinkedRecord(PAGE_INFO);\n    _connection.copyFieldsFrom(serverConnection);\n    // Reset EDGES and PAGE_INFO fields\n    if (prevEdges) {\n      _connection.setLinkedRecords(prevEdges, EDGES);\n    }\n    if (prevPageInfo) {\n      _connection.setLinkedRecord(prevPageInfo, PAGE_INFO);\n    }\n    var nextEdges = [];\n    var args = payload.args;\n    if (prevEdges && _serverEdges) {\n      if (args.after != null) {\n        // Forward pagination from the end of the connection: append edges\n        if (clientPageInfo && args.after === clientPageInfo.getValue(END_CURSOR)) {\n          var nodeIDs = new Set();\n          mergeEdges(prevEdges, nextEdges, nodeIDs);\n          mergeEdges(_serverEdges, nextEdges, nodeIDs);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected after cursor `%s`, edges must ' + 'be fetched from the end of the list (`%s`).', args.after, clientPageInfo && clientPageInfo.getValue(END_CURSOR)) : void 0;\n          return;\n        }\n      } else if (args.before != null) {\n        // Backward pagination from the start of the connection: prepend edges\n        if (clientPageInfo && args.before === clientPageInfo.getValue(START_CURSOR)) {\n          var _nodeIDs = new Set();\n          mergeEdges(_serverEdges, nextEdges, _nodeIDs);\n          mergeEdges(prevEdges, nextEdges, _nodeIDs);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected before cursor `%s`, edges must ' + 'be fetched from the beginning of the list (`%s`).', args.before, clientPageInfo && clientPageInfo.getValue(START_CURSOR)) : void 0;\n          return;\n        }\n      } else {\n        // The connection was refetched from the beginning/end: replace edges\n        nextEdges = _serverEdges;\n      }\n    } else if (_serverEdges) {\n      nextEdges = _serverEdges;\n    } else {\n      // $FlowFixMe[incompatible-type]\n      nextEdges = prevEdges;\n    }\n    // Update edges only if they were updated, the null check is\n    // for Flow (prevEdges could be null).\n    if (nextEdges != null && nextEdges !== prevEdges) {\n      _connection.setLinkedRecords(nextEdges, EDGES);\n    }\n    // Page info should be updated even if no new edge were returned.\n    if (clientPageInfo && serverPageInfo) {\n      if (args.after == null && args.before == null) {\n        // The connection was refetched from the beginning/end: replace\n        // page_info\n        clientPageInfo.copyFieldsFrom(serverPageInfo);\n      } else if (args.before != null || args.after == null && args.last) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_PREV_PAGE), HAS_PREV_PAGE);\n        var startCursor = serverPageInfo.getValue(START_CURSOR);\n        if (typeof startCursor === 'string') {\n          clientPageInfo.setValue(startCursor, START_CURSOR);\n        }\n      } else if (args.after != null || args.before == null && args.first) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_NEXT_PAGE), HAS_NEXT_PAGE);\n        var endCursor = serverPageInfo.getValue(END_CURSOR);\n        if (typeof endCursor === 'string') {\n          clientPageInfo.setValue(endCursor, END_CURSOR);\n        }\n      }\n    }\n  }\n}\n\n/**\n * @public\n *\n * Given a record and the name of the schema field for which a connection was\n * fetched, returns the linked connection record.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * The `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   // Access fields on the connection:\n *   const edges = friends.getLinkedRecords('edges');\n * }\n * ```\n *\n * TODO: t15733312\n * Currently we haven't run into this case yet, but we need to add a `getConnections`\n * that returns an array of the connections under the same `key` regardless of the variables.\n */\nfunction getConnection(record, key, filters) {\n  var handleKey = getRelayHandleKey(CONNECTION, key, null);\n  return record.getLinkedRecord(handleKey, filters);\n}\n\n/**\n * @public\n *\n * Given a record ID, the key of a connection field, and optional filters used\n * to identify the connection, returns the connection ID.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<user-id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *     edges {\n *       node {\n *         id\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * The ID of the `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const connectionID = ConnectionHandler.getConnectionID('<user-id>', 'FriendsFragment_friends');\n * }\n * ```\n */\nfunction getConnectionID(recordID, key, filters) {\n  var handleKey = getRelayHandleKey(CONNECTION, key, null);\n  var storageKey = getStableStorageKey(handleKey, filters);\n  return generateClientID(recordID, storageKey);\n}\n\n/**\n * @public\n *\n * Inserts an edge after the given cursor, or at the end of the list if no\n * cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be appended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   ConnectionHandler.insertEdgeAfter(friends, edge);\n * }\n * ```\n */\nfunction insertEdgeAfter(record, newEdge, cursor) {\n  var _ConnectionInterface$2 = ConnectionInterface.get(),\n    CURSOR = _ConnectionInterface$2.CURSOR,\n    EDGES = _ConnectionInterface$2.EDGES;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n  var nextEdges;\n  if (cursor == null) {\n    nextEdges = edges.concat(newEdge);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      nextEdges.push(edge);\n      if (edge == null) {\n        continue;\n      }\n      var edgeCursor = edge.getValue(CURSOR);\n      if (cursor === edgeCursor) {\n        nextEdges.push(newEdge);\n        foundCursor = true;\n      }\n    }\n    if (!foundCursor) {\n      nextEdges.push(newEdge);\n    }\n  }\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n\n/**\n * @public\n *\n * Creates an edge for a connection record, given a node and edge type.\n */\nfunction createEdge(store, record, node, edgeType) {\n  var _ConnectionInterface$3 = ConnectionInterface.get(),\n    NODE = _ConnectionInterface$3.NODE;\n\n  // An index-based client ID could easily conflict (unless it was\n  // auto-incrementing, but there is nowhere to the store the id)\n  // Instead, construct a client ID based on the connection ID and node ID,\n  // which will only conflict if the same node is added to the same connection\n  // twice. This is acceptable since the `insertEdge*` functions ignore\n  // duplicates.\n  var edgeID = generateClientID(record.getDataID(), node.getDataID());\n  var edge = store.get(edgeID);\n  if (!edge) {\n    edge = store.create(edgeID, edgeType);\n  }\n  edge.setLinkedRecord(node, NODE);\n  if (edge.getValue('cursor') == null) {\n    // Always use null instead of undefined value for cursor\n    // to avoid considering it as missing data\n    edge.setValue(null, 'cursor');\n  }\n  return edge;\n}\n\n/**\n * @public\n *\n * Inserts an edge before the given cursor, or at the beginning of the list if\n * no cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be prepended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   ConnectionHandler.insertEdgeBefore(friends, edge);\n * }\n * ```\n */\nfunction insertEdgeBefore(record, newEdge, cursor) {\n  var _ConnectionInterface$4 = ConnectionInterface.get(),\n    CURSOR = _ConnectionInterface$4.CURSOR,\n    EDGES = _ConnectionInterface$4.EDGES;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n  var nextEdges;\n  if (cursor == null) {\n    nextEdges = [newEdge].concat(edges);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      if (edge != null) {\n        var edgeCursor = edge.getValue(CURSOR);\n        if (cursor === edgeCursor) {\n          nextEdges.push(newEdge);\n          foundCursor = true;\n        }\n      }\n      nextEdges.push(edge);\n    }\n    if (!foundCursor) {\n      nextEdges.unshift(newEdge);\n    }\n  }\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n\n/**\n * @public\n *\n * Remove any edges whose `node.id` matches the given id.\n */\nfunction deleteNode(record, nodeID) {\n  var _ConnectionInterface$5 = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$5.EDGES,\n    NODE = _ConnectionInterface$5.NODE;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    return;\n  }\n  var nextEdges;\n  for (var ii = 0; ii < edges.length; ii++) {\n    var edge = edges[ii];\n    var node = edge && edge.getLinkedRecord(NODE);\n    if (node != null && node.getDataID() === nodeID) {\n      if (nextEdges === undefined) {\n        nextEdges = edges.slice(0, ii);\n      }\n    } else if (nextEdges !== undefined) {\n      nextEdges.push(edge);\n    }\n  }\n  if (nextEdges !== undefined) {\n    record.setLinkedRecords(nextEdges, EDGES);\n  }\n}\n\n/**\n * @internal\n *\n * Creates a copy of an edge with a unique ID based on per-connection-instance\n * incrementing edge index. This is necessary to avoid collisions between edges,\n * which can occur because (edge) client IDs are assigned deterministically\n * based on the path from the nearest node with an id.\n *\n * Example: if the first N edges of the same connection are refetched, the edges\n * from the second fetch will be assigned the same IDs as the first fetch, even\n * though the nodes they point to may be different (or the same and in different\n * order).\n */\nfunction buildConnectionEdge(store, connection, edge) {\n  if (edge == null) {\n    return edge;\n  }\n  var _ConnectionInterface$6 = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$6.EDGES;\n  var edgeIndex = connection.getValue(NEXT_EDGE_INDEX);\n  !(typeof edgeIndex === 'number') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ConnectionHandler: Expected %s to be a number, got `%s`.', NEXT_EDGE_INDEX, edgeIndex) : invariant(false) : void 0;\n  var edgeID = generateClientID(connection.getDataID(), EDGES, edgeIndex);\n  var connectionEdge = store.create(edgeID, edge.getType());\n  connectionEdge.copyFieldsFrom(edge);\n  if (connectionEdge.getValue('cursor') == null) {\n    // Always use null instead of undefined value for cursor\n    // to avoid considering it as missing data\n    connectionEdge.setValue(null, 'cursor');\n  }\n  connection.setValue(edgeIndex + 1, NEXT_EDGE_INDEX);\n  return connectionEdge;\n}\n\n/**\n * @internal\n *\n * Adds the source edges to the target edges, skipping edges with\n * duplicate node ids.\n */\nfunction mergeEdges(sourceEdges, targetEdges, nodeIDs) {\n  var _ConnectionInterface$7 = ConnectionInterface.get(),\n    NODE = _ConnectionInterface$7.NODE;\n  for (var ii = 0; ii < sourceEdges.length; ii++) {\n    var edge = sourceEdges[ii];\n    if (!edge) {\n      continue;\n    }\n    var node = edge.getLinkedRecord(NODE);\n    var nodeID = node && node.getDataID();\n    if (nodeID) {\n      if (nodeIDs.has(nodeID)) {\n        continue;\n      }\n      nodeIDs.add(nodeID);\n    }\n    targetEdges.push(edge);\n  }\n}\nmodule.exports = {\n  buildConnectionEdge: buildConnectionEdge,\n  createEdge: createEdge,\n  deleteNode: deleteNode,\n  getConnection: getConnection,\n  getConnectionID: getConnectionID,\n  insertEdgeAfter: insertEdgeAfter,\n  insertEdgeBefore: insertEdgeBefore,\n  update: update\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar CONNECTION_CALLS = {\n  after: true,\n  before: true,\n  find: true,\n  first: true,\n  last: true,\n  surrounds: true\n};\nvar config = {\n  CURSOR: 'cursor',\n  EDGES: 'edges',\n  END_CURSOR: 'endCursor',\n  HAS_NEXT_PAGE: 'hasNextPage',\n  HAS_PREV_PAGE: 'hasPreviousPage',\n  NODE: 'node',\n  PAGE_INFO_TYPE: 'PageInfo',\n  PAGE_INFO: 'pageInfo',\n  START_CURSOR: 'startCursor'\n};\n\n/**\n * @internal\n *\n * Defines logic relevant to the informal \"Connection\" GraphQL interface.\n */\nvar ConnectionInterface = {\n  inject: function inject(newConfig) {\n    config = newConfig;\n  },\n  get: function get() {\n    return config;\n  },\n  /**\n   * Checks whether a call exists strictly to encode which parts of a connection\n   * to fetch. Fields that only differ by connection call values should have the\n   * same identity.\n   */\n  isConnectionCall: function isConnectionCall(call) {\n    return CONNECTION_CALLS.hasOwnProperty(call.name);\n  }\n};\nmodule.exports = ConnectionInterface;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar ConnectionHandler = require('./ConnectionHandler');\nvar ConnectionInterface = require('./ConnectionInterface');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar DeleteRecordHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n    if (record != null) {\n      var idOrIds = record.getValue(payload.fieldKey);\n      if (typeof idOrIds === 'string') {\n        store[\"delete\"](idOrIds);\n      } else if (Array.isArray(idOrIds)) {\n        idOrIds.forEach(function (id) {\n          if (typeof id === 'string') {\n            store[\"delete\"](id);\n          }\n        });\n      }\n    }\n  }\n};\nvar DeleteEdgeHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var idOrIds = record.getValue(payload.fieldKey);\n    var idList = Array.isArray(idOrIds) ? idOrIds : [idOrIds];\n    idList.forEach(function (id) {\n      if (typeof id === 'string') {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var connectionID = _step.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            ConnectionHandler.deleteNode(connection, id);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    });\n  }\n};\nvar AppendEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeBefore)\n};\nvar AppendNodeHandler = {\n  update: nodeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependNodeHandler = {\n  update: nodeUpdater(ConnectionHandler.insertEdgeBefore)\n};\nfunction edgeUpdater(insertFn) {\n  return function (store, payload) {\n    var _serverEdges;\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var singleServerEdge, serverEdges;\n    try {\n      singleServerEdge = record.getLinkedRecord(payload.fieldKey);\n    } catch (_unused) {}\n    if (!singleServerEdge) {\n      try {\n        serverEdges = record.getLinkedRecords(payload.fieldKey);\n      } catch (_unused2) {}\n    }\n    if (singleServerEdge == null && serverEdges == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'MutationHandlers: Expected the server edge to be non-null.') : void 0;\n      return;\n    }\n    var _ConnectionInterface$ = ConnectionInterface.get(),\n      NODE = _ConnectionInterface$.NODE,\n      EDGES = _ConnectionInterface$.EDGES;\n    var serverEdgeList = (_serverEdges = serverEdges) !== null && _serverEdges !== void 0 ? _serverEdges : [singleServerEdge];\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(serverEdgeList),\n      _step2;\n    try {\n      var _loop = function _loop() {\n        var serverEdge = _step2.value;\n        if (serverEdge == null) {\n          return \"continue\";\n        }\n        var serverNode = serverEdge.getLinkedRecord('node');\n        if (!serverNode) {\n          return \"continue\";\n        }\n        var serverNodeId = serverNode.getDataID();\n        var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var connectionID = _step3.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            var nodeAlreadyExistsInConnection = (_connection$getLinked = connection.getLinkedRecords(EDGES)) === null || _connection$getLinked === void 0 ? void 0 : _connection$getLinked.some(function (edge) {\n              var _edge$getLinkedRecord;\n              return (edge === null || edge === void 0 ? void 0 : (_edge$getLinkedRecord = edge.getLinkedRecord(NODE)) === null || _edge$getLinkedRecord === void 0 ? void 0 : _edge$getLinkedRecord.getDataID()) === serverNodeId;\n            });\n            if (nodeAlreadyExistsInConnection) {\n              continue;\n            }\n            var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n            !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n            insertFn(connection, clientEdge);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      };\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _connection$getLinked;\n        var _ret = _loop();\n        if (_ret === \"continue\") continue;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  };\n}\nfunction nodeUpdater(insertFn) {\n  return function (store, payload) {\n    var _serverNodes;\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var _payload$handleArgs = payload.handleArgs,\n      connections = _payload$handleArgs.connections,\n      edgeTypeName = _payload$handleArgs.edgeTypeName;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    !(edgeTypeName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected edge typename to be specified.') : invariant(false) : void 0;\n    var singleServerNode;\n    var serverNodes;\n    try {\n      singleServerNode = record.getLinkedRecord(payload.fieldKey);\n    } catch (_unused3) {}\n    if (!singleServerNode) {\n      try {\n        serverNodes = record.getLinkedRecords(payload.fieldKey);\n      } catch (_unused4) {}\n    }\n    if (singleServerNode == null && serverNodes == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'MutationHandlers: Expected target node to exist.') : void 0;\n      return;\n    }\n    var _ConnectionInterface$2 = ConnectionInterface.get(),\n      NODE = _ConnectionInterface$2.NODE,\n      EDGES = _ConnectionInterface$2.EDGES;\n    var serverNodeList = (_serverNodes = serverNodes) !== null && _serverNodes !== void 0 ? _serverNodes : [singleServerNode];\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(serverNodeList),\n      _step4;\n    try {\n      var _loop2 = function _loop2() {\n        var serverNode = _step4.value;\n        if (serverNode == null) {\n          return \"continue\";\n        }\n        var serverNodeId = serverNode.getDataID();\n        var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var connectionID = _step5.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            var nodeAlreadyExistsInConnection = (_connection$getLinked2 = connection.getLinkedRecords(EDGES)) === null || _connection$getLinked2 === void 0 ? void 0 : _connection$getLinked2.some(function (edge) {\n              var _edge$getLinkedRecord2;\n              return (edge === null || edge === void 0 ? void 0 : (_edge$getLinkedRecord2 = edge.getLinkedRecord(NODE)) === null || _edge$getLinkedRecord2 === void 0 ? void 0 : _edge$getLinkedRecord2.getDataID()) === serverNodeId;\n            });\n            if (nodeAlreadyExistsInConnection) {\n              continue;\n            }\n            var clientEdge = ConnectionHandler.createEdge(store, connection, serverNode, edgeTypeName);\n            !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n            insertFn(connection, clientEdge);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      };\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _connection$getLinked2;\n        var _ret2 = _loop2();\n        if (_ret2 === \"continue\") continue;\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n}\nmodule.exports = {\n  AppendEdgeHandler: AppendEdgeHandler,\n  DeleteRecordHandler: DeleteRecordHandler,\n  PrependEdgeHandler: PrependEdgeHandler,\n  AppendNodeHandler: AppendNodeHandler,\n  PrependNodeHandler: PrependNodeHandler,\n  DeleteEdgeHandler: DeleteEdgeHandler\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ConnectionHandler = require('./handlers/connection/ConnectionHandler');\nvar ConnectionInterface = require('./handlers/connection/ConnectionInterface');\nvar MutationHandlers = require('./handlers/connection/MutationHandlers');\nvar RelayDefaultHandlerProvider = require('./handlers/RelayDefaultHandlerProvider');\nvar applyOptimisticMutation = require('./mutations/applyOptimisticMutation');\nvar commitLocalUpdate = require('./mutations/commitLocalUpdate');\nvar commitMutation = require('./mutations/commitMutation');\nvar RelayDeclarativeMutationConfig = require('./mutations/RelayDeclarativeMutationConfig');\nvar RelayNetwork = require('./network/RelayNetwork');\nvar RelayObservable = require('./network/RelayObservable');\nvar RelayQueryResponseCache = require('./network/RelayQueryResponseCache');\nvar fetchQuery = require('./query/fetchQuery');\nvar fetchQuery_DEPRECATED = require('./query/fetchQuery_DEPRECATED');\nvar fetchQueryInternal = require('./query/fetchQueryInternal');\nvar GraphQLTag = require('./query/GraphQLTag');\nvar PreloadableQueryRegistry = require('./query/PreloadableQueryRegistry');\nvar _require = require('./store/ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID,\n  isClientID = _require.isClientID;\nvar createFragmentSpecResolver = require('./store/createFragmentSpecResolver');\nvar createRelayContext = require('./store/createRelayContext');\nvar isRelayModernEnvironment = require('./store/isRelayModernEnvironment');\nvar readInlineData = require('./store/readInlineData');\nvar RelayConcreteVariables = require('./store/RelayConcreteVariables');\nvar RelayModernEnvironment = require('./store/RelayModernEnvironment');\nvar RelayModernOperationDescriptor = require('./store/RelayModernOperationDescriptor');\nvar RelayModernRecord = require('./store/RelayModernRecord');\nvar RelayModernSelector = require('./store/RelayModernSelector');\nvar RelayModernStore = require('./store/RelayModernStore');\nvar RelayOperationTracker = require('./store/RelayOperationTracker');\nvar RelayRecordSource = require('./store/RelayRecordSource');\nvar RelayStoreUtils = require('./store/RelayStoreUtils');\nvar ResolverFragments = require('./store/ResolverFragments');\nvar ViewerPattern = require('./store/ViewerPattern');\nvar requestSubscription = require('./subscription/requestSubscription');\nvar createPayloadFor3DField = require('./util/createPayloadFor3DField');\nvar deepFreeze = require('./util/deepFreeze');\nvar getFragmentIdentifier = require('./util/getFragmentIdentifier');\nvar getPaginationMetadata = require('./util/getPaginationMetadata');\nvar getPaginationVariables = require('./util/getPaginationVariables');\nvar getPendingOperationsForFragment = require('./util/getPendingOperationsForFragment');\nvar getRefetchMetadata = require('./util/getRefetchMetadata');\nvar getRelayHandleKey = require('./util/getRelayHandleKey');\nvar getRequestIdentifier = require('./util/getRequestIdentifier');\nvar getValueAtPath = require('./util/getValueAtPath');\nvar handlePotentialSnapshotErrors = require('./util/handlePotentialSnapshotErrors');\nvar isPromise = require('./util/isPromise');\nvar isScalarAndEqual = require('./util/isScalarAndEqual');\nvar recycleNodesInto = require('./util/recycleNodesInto');\nvar RelayConcreteNode = require('./util/RelayConcreteNode');\nvar RelayDefaultHandleKey = require('./util/RelayDefaultHandleKey');\nvar RelayError = require('./util/RelayError');\nvar RelayFeatureFlags = require('./util/RelayFeatureFlags');\nvar RelayProfiler = require('./util/RelayProfiler');\nvar RelayReplaySubject = require('./util/RelayReplaySubject');\nvar stableCopy = require('./util/stableCopy');\nvar withProvidedVariables = require('./util/withProvidedVariables');\n// As early as possible, check for the existence of the JavaScript globals which\n// Relay Runtime relies upon, and produce a clear message if they do not exist.\nif (process.env.NODE_ENV !== \"production\") {\n  var mapStr = typeof Map !== 'function' ? 'Map' : null;\n  var setStr = typeof Set !== 'function' ? 'Set' : null;\n  var promiseStr = typeof Promise !== 'function' ? 'Promise' : null;\n  var objStr = typeof Object.assign !== 'function' ? 'Object.assign' : null;\n  if (mapStr || setStr || promiseStr || objStr) {\n    throw new Error(\"relay-runtime requires \".concat([mapStr, setStr, promiseStr, objStr].filter(Boolean).join(', and '), \" to exist. \") + 'Use a polyfill to provide these for older browsers.');\n  }\n}\n\n/**\n * The public interface to Relay Runtime.\n */\nmodule.exports = {\n  // Core API\n  Environment: RelayModernEnvironment,\n  Network: RelayNetwork,\n  Observable: RelayObservable,\n  QueryResponseCache: RelayQueryResponseCache,\n  RecordSource: RelayRecordSource,\n  Record: RelayModernRecord,\n  ReplaySubject: RelayReplaySubject,\n  Store: RelayModernStore,\n  areEqualSelectors: RelayModernSelector.areEqualSelectors,\n  createFragmentSpecResolver: createFragmentSpecResolver,\n  createNormalizationSelector: RelayModernSelector.createNormalizationSelector,\n  createOperationDescriptor: RelayModernOperationDescriptor.createOperationDescriptor,\n  createReaderSelector: RelayModernSelector.createReaderSelector,\n  createRequestDescriptor: RelayModernOperationDescriptor.createRequestDescriptor,\n  getArgumentValues: RelayStoreUtils.getArgumentValues,\n  getDataIDsFromFragment: RelayModernSelector.getDataIDsFromFragment,\n  getDataIDsFromObject: RelayModernSelector.getDataIDsFromObject,\n  getNode: GraphQLTag.getNode,\n  getFragment: GraphQLTag.getFragment,\n  getInlineDataFragment: GraphQLTag.getInlineDataFragment,\n  getModuleComponentKey: RelayStoreUtils.getModuleComponentKey,\n  getModuleOperationKey: RelayStoreUtils.getModuleOperationKey,\n  getPaginationFragment: GraphQLTag.getPaginationFragment,\n  getPluralSelector: RelayModernSelector.getPluralSelector,\n  getRefetchableFragment: GraphQLTag.getRefetchableFragment,\n  getRequest: GraphQLTag.getRequest,\n  getRequestIdentifier: getRequestIdentifier,\n  getSelector: RelayModernSelector.getSelector,\n  getSelectorsFromObject: RelayModernSelector.getSelectorsFromObject,\n  getSingularSelector: RelayModernSelector.getSingularSelector,\n  getStorageKey: RelayStoreUtils.getStorageKey,\n  getVariablesFromFragment: RelayModernSelector.getVariablesFromFragment,\n  getVariablesFromObject: RelayModernSelector.getVariablesFromObject,\n  getVariablesFromPluralFragment: RelayModernSelector.getVariablesFromPluralFragment,\n  getVariablesFromSingularFragment: RelayModernSelector.getVariablesFromSingularFragment,\n  handlePotentialSnapshotErrors: handlePotentialSnapshotErrors,\n  graphql: GraphQLTag.graphql,\n  isFragment: GraphQLTag.isFragment,\n  isInlineDataFragment: GraphQLTag.isInlineDataFragment,\n  isRequest: GraphQLTag.isRequest,\n  readInlineData: readInlineData,\n  // Declarative mutation API\n  MutationTypes: RelayDeclarativeMutationConfig.MutationTypes,\n  RangeOperations: RelayDeclarativeMutationConfig.RangeOperations,\n  // Extensions\n  DefaultHandlerProvider: RelayDefaultHandlerProvider,\n  ConnectionHandler: ConnectionHandler,\n  MutationHandlers: MutationHandlers,\n  VIEWER_ID: ViewerPattern.VIEWER_ID,\n  VIEWER_TYPE: ViewerPattern.VIEWER_TYPE,\n  // Helpers (can be implemented via the above API)\n  applyOptimisticMutation: applyOptimisticMutation,\n  commitLocalUpdate: commitLocalUpdate,\n  commitMutation: commitMutation,\n  fetchQuery: fetchQuery,\n  fetchQuery_DEPRECATED: fetchQuery_DEPRECATED,\n  isRelayModernEnvironment: isRelayModernEnvironment,\n  requestSubscription: requestSubscription,\n  // Configuration interface for legacy or special uses\n  ConnectionInterface: ConnectionInterface,\n  // Utilities\n  PreloadableQueryRegistry: PreloadableQueryRegistry,\n  RelayProfiler: RelayProfiler,\n  createPayloadFor3DField: createPayloadFor3DField,\n  // INTERNAL-ONLY: These exports might be removed at any point.\n  RelayConcreteNode: RelayConcreteNode,\n  RelayError: RelayError,\n  RelayFeatureFlags: RelayFeatureFlags,\n  DEFAULT_HANDLE_KEY: RelayDefaultHandleKey.DEFAULT_HANDLE_KEY,\n  FRAGMENTS_KEY: RelayStoreUtils.FRAGMENTS_KEY,\n  FRAGMENT_OWNER_KEY: RelayStoreUtils.FRAGMENT_OWNER_KEY,\n  ID_KEY: RelayStoreUtils.ID_KEY,\n  REF_KEY: RelayStoreUtils.REF_KEY,\n  REFS_KEY: RelayStoreUtils.REFS_KEY,\n  ROOT_ID: RelayStoreUtils.ROOT_ID,\n  ROOT_TYPE: RelayStoreUtils.ROOT_TYPE,\n  TYPENAME_KEY: RelayStoreUtils.TYPENAME_KEY,\n  deepFreeze: deepFreeze,\n  generateClientID: generateClientID,\n  generateUniqueClientID: generateUniqueClientID,\n  getRelayHandleKey: getRelayHandleKey,\n  isClientID: isClientID,\n  isPromise: isPromise,\n  isScalarAndEqual: isScalarAndEqual,\n  recycleNodesInto: recycleNodesInto,\n  stableCopy: stableCopy,\n  getFragmentIdentifier: getFragmentIdentifier,\n  getRefetchMetadata: getRefetchMetadata,\n  getPaginationMetadata: getPaginationMetadata,\n  getPaginationVariables: getPaginationVariables,\n  getPendingOperationsForFragment: getPendingOperationsForFragment,\n  getValueAtPath: getValueAtPath,\n  __internal: {\n    ResolverFragments: ResolverFragments,\n    OperationTracker: RelayOperationTracker,\n    createRelayContext: createRelayContext,\n    getOperationVariables: RelayConcreteVariables.getOperationVariables,\n    fetchQuery: fetchQueryInternal.fetchQuery,\n    fetchQueryDeduped: fetchQueryInternal.fetchQueryDeduped,\n    getPromiseForActiveRequest: fetchQueryInternal.getPromiseForActiveRequest,\n    getObservableForActiveRequest: fetchQueryInternal.getObservableForActiveRequest,\n    withProvidedVariables: withProvidedVariables\n  }\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * A unique identifier of the current actor.\n */\nvar invariant = require('invariant');\nvar INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = 'INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE';\nfunction assertInternalActorIdentifier(actorIdentifier) {\n  !(actorIdentifier === INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to use only internal version of the `actorIdentifier`. \"%s\" was provided.', actorIdentifier) : invariant(false) : void 0;\n}\nmodule.exports = {\n  assertInternalActorIdentifier: assertInternalActorIdentifier,\n  getActorIdentifier: function getActorIdentifier(actorID) {\n    return actorID;\n  },\n  getDefaultActorIdentifier: function getDefaultActorIdentifier() {\n    throw new Error('Not Implemented');\n  },\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ACTOR_IDENTIFIER_FIELD_NAME = 'actor_key';\nvar _require = require('./ActorIdentifier'),\n  getActorIdentifier = _require.getActorIdentifier;\nfunction getActorIdentifierFromPayload(payload) {\n  if (payload != null && typeof payload === 'object' && typeof payload[ACTOR_IDENTIFIER_FIELD_NAME] === 'string') {\n    return getActorIdentifier(payload[ACTOR_IDENTIFIER_FIELD_NAME]);\n  }\n}\nmodule.exports = {\n  ACTOR_IDENTIFIER_FIELD_NAME: ACTOR_IDENTIFIER_FIELD_NAME,\n  getActorIdentifierFromPayload: getActorIdentifierFromPayload\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\nvar warning = require(\"fbjs/lib/warning\");\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n        break;\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n        break;\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n  if (!rootField) {\n    return null;\n  }\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n    if (!payload) {\n      return;\n    }\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n    connectionInfo = config.connectionInfo,\n    edgeName = config.edgeName;\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n  var rootField = getRootField(request);\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n  return function (store, data) {\n    var parent = store.get(parentID);\n    if (!parent) {\n      return;\n    }\n    var payload = store.getRootField(rootField);\n    if (!payload) {\n      return;\n    }\n    var serverEdge = payload.getLinkedRecord(edgeName);\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connectionInfo),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var info = _step.value;\n        if (!serverEdge) {\n          continue;\n        }\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n        if (!connection) {\n          continue;\n        }\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n        if (!clientEdge) {\n          continue;\n        }\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n    connectionKeys = config.connectionKeys,\n    pathToConnection = config.pathToConnection,\n    deletedIDFieldName = config.deletedIDFieldName;\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n  var rootField = getRootField(request);\n  if (!rootField) {\n    return null;\n  }\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n    var deleteIDs = [];\n    // the type of data should come from a type parameter associated with ConcreteRequest,\n    // but ConcreteRequest does not contain a type parameter. Hence, we use a FlowFixMe.\n    // $FlowFixMe[incompatible-use] see above\n    var deletedIDField = data[rootField];\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(deletedIDFieldName),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eachField = _step2.value;\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n  if (!parent) {\n    return;\n  }\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n  var recordProxy = parent;\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  }\n  // Should never enter loop except edge cases\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connectionKeys),\n    _step3;\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n  return null;\n}\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('../store/RelayStoreUtils'),\n  getStableStorageKey = _require2.getStableStorageKey;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\nvar RelayRecordProxy = /*#__PURE__*/function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n  var _proto = RelayRecordProxy.prototype;\n  _proto.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n  _proto.getDataID = function getDataID() {\n    return this._dataID;\n  };\n  _proto.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n    !(type != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID) : invariant(false) : void 0;\n    return type;\n  };\n  _proto.getValue = function getValue(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n  _proto.setValue = function setValue(value, name, args) {\n    !isValidLeafValue(value) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value)) : invariant(false) : void 0;\n    return this.setValue__UNSAFE(value, name, args);\n  }\n\n  // This is used in the typesafe updaters.\n  // We already validated that the value has the correct type\n  // so it should be safe to store complex structures as scalar values (custom scalars)\n  ;\n  _proto.setValue__UNSAFE = function setValue__UNSAFE(value, name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    this._mutator.setValue(this._dataID, storageKey, value);\n    return this;\n  };\n  _proto.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n  _proto.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    !(record instanceof RelayRecordProxy) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = record.getDataID();\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n    return this;\n  };\n  _proto.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n    if (!linkedRecord) {\n      var _this$_source$get;\n      var storageKey = getStableStorageKey(name, args);\n      var clientID = generateClientID(this.getDataID(), storageKey);\n      // NOTE: it's possible that a client record for this field exists\n      // but the field itself was unset.\n      linkedRecord = (_this$_source$get = this._source.get(clientID)) !== null && _this$_source$get !== void 0 ? _this$_source$get : this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n    return linkedRecord;\n  };\n  _proto.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n  _proto.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    !Array.isArray(records) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n    return this;\n  };\n  _proto.invalidateRecord = function invalidateRecord() {\n    this._source.markIDForInvalidation(this._dataID);\n  };\n  return RelayRecordProxy;\n}();\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\nmodule.exports = RelayRecordProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\nvar _require = require('../store/RelayRecordState'),\n  EXISTENT = _require.EXISTENT;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * Wrapper API that is an amalgam of the `RelayModernRecord` API and\n * `MutableRecordSource` interface, implementing copy-on-write semantics for records\n * in a record source.\n *\n * Modifications are applied to fresh copies of records:\n * - Records in `base` are never modified.\n * - Modifications cause a fresh version of a record to be created in `sink`.\n *   These sink records contain only modified fields.\n */\nvar RelayRecordSourceMutator = /*#__PURE__*/function () {\n  function RelayRecordSourceMutator(base, sink) {\n    this.__sources = [sink, base];\n    this._base = base;\n    this._sink = sink;\n  }\n\n  /**\n   * **UNSTABLE**\n   * This method is likely to be removed in an upcoming release\n   * and should not be relied upon.\n   * TODO T41593196: Remove unstable_getRawRecordWithChanges\n   */\n  var _proto = RelayRecordSourceMutator.prototype;\n  _proto.unstable_getRawRecordWithChanges = function unstable_getRawRecordWithChanges(dataID) {\n    var baseRecord = this._base.get(dataID);\n    var sinkRecord = this._sink.get(dataID);\n    if (sinkRecord === undefined) {\n      if (baseRecord == null) {\n        return baseRecord;\n      }\n      var nextRecord = RelayModernRecord.clone(baseRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(nextRecord);\n      }\n      return nextRecord;\n    } else if (sinkRecord === null) {\n      return null;\n    } else if (baseRecord != null) {\n      var _nextRecord = RelayModernRecord.update(baseRecord, sinkRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        if (_nextRecord !== baseRecord) {\n          // Prevent mutation of a record from outside the store.\n          RelayModernRecord.freeze(_nextRecord);\n        }\n      }\n      return _nextRecord;\n    } else {\n      var _nextRecord2 = RelayModernRecord.clone(sinkRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(_nextRecord2);\n      }\n      return _nextRecord2;\n    }\n  };\n  _proto._getSinkRecord = function _getSinkRecord(dataID) {\n    var sinkRecord = this._sink.get(dataID);\n    if (!sinkRecord) {\n      var baseRecord = this._base.get(dataID);\n      !baseRecord ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator: Cannot modify non-existent record `%s`.', dataID) : invariant(false) : void 0;\n      sinkRecord = RelayModernRecord.create(dataID, RelayModernRecord.getType(baseRecord));\n      this._sink.set(dataID, sinkRecord);\n    }\n    return sinkRecord;\n  };\n  _proto.copyFields = function copyFields(sourceID, sinkID) {\n    var sinkSource = this._sink.get(sourceID);\n    var baseSource = this._base.get(sourceID);\n    !(sinkSource || baseSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#copyFields(): Cannot copy fields from ' + 'non-existent record `%s`.', sourceID) : invariant(false) : void 0;\n    var sink = this._getSinkRecord(sinkID);\n    if (baseSource) {\n      RelayModernRecord.copyFields(baseSource, sink);\n    }\n    if (sinkSource) {\n      RelayModernRecord.copyFields(sinkSource, sink);\n    }\n  };\n  _proto.copyFieldsFromRecord = function copyFieldsFromRecord(record, sinkID) {\n    var sink = this._getSinkRecord(sinkID);\n    RelayModernRecord.copyFields(record, sink);\n  };\n  _proto.create = function create(dataID, typeName) {\n    !(this._base.getStatus(dataID) !== EXISTENT && this._sink.getStatus(dataID) !== EXISTENT) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#create(): Cannot create a record with id ' + '`%s`, this record already exists.', dataID) : invariant(false) : void 0;\n    var record = RelayModernRecord.create(dataID, typeName);\n    this._sink.set(dataID, record);\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    return this._sink.has(dataID) ? this._sink.getStatus(dataID) : this._base.getStatus(dataID);\n  };\n  _proto.getType = function getType(dataID) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        return RelayModernRecord.getType(record);\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.getValue = function getValue(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var value = RelayModernRecord.getValue(record, storageKey);\n        if (value !== undefined) {\n          return value;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setValue = function setValue(dataID, storageKey, value) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setValue(sinkRecord, storageKey, value);\n  };\n  _proto.getLinkedRecordID = function getLinkedRecordID(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n        if (linkedID !== undefined) {\n          return linkedID;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setLinkedRecordID = function setLinkedRecordID(dataID, storageKey, linkedID) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setLinkedRecordID(sinkRecord, storageKey, linkedID);\n  };\n  _proto.getLinkedRecordIDs = function getLinkedRecordIDs(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n        if (linkedIDs !== undefined) {\n          return linkedIDs;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setLinkedRecordIDs = function setLinkedRecordIDs(dataID, storageKey, linkedIDs) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setLinkedRecordIDs(sinkRecord, storageKey, linkedIDs);\n  };\n  return RelayRecordSourceMutator;\n}();\nmodule.exports = RelayRecordSourceMutator;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\nvar _require = require('../store/RelayRecordState'),\n  EXISTENT = _require.EXISTENT,\n  NONEXISTENT = _require.NONEXISTENT;\nvar _require2 = require('../store/RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID,\n  ROOT_TYPE = _require2.ROOT_TYPE;\nvar _require3 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require3.readUpdatableFragment;\nvar _require4 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require4.readUpdatableQuery;\nvar RelayRecordProxy = require('./RelayRecordProxy');\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A helper for manipulating a `RecordSource` via an imperative/OO-style API.\n */\nvar RelayRecordSourceProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceProxy(mutator, getDataID, handlerProvider, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this._handlerProvider = handlerProvider || null;\n    this._proxies = {};\n    this._getDataID = getDataID;\n    this._invalidatedStore = false;\n    this._idsMarkedForInvalidation = new Set();\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceProxy.prototype;\n  _proto.publishSource = function publishSource(source, fieldPayloads) {\n    var _this = this;\n    var dataIDs = source.getRecordIDs();\n    dataIDs.forEach(function (dataID) {\n      var status = source.getStatus(dataID);\n      if (status === EXISTENT) {\n        var sourceRecord = source.get(dataID);\n        if (sourceRecord) {\n          if (_this.__mutator.getStatus(dataID) !== EXISTENT) {\n            _this.create(dataID, RelayModernRecord.getType(sourceRecord));\n          }\n          _this.__mutator.copyFieldsFromRecord(sourceRecord, dataID);\n        }\n      } else if (status === NONEXISTENT) {\n        _this[\"delete\"](dataID);\n      }\n    });\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(_this, fieldPayload);\n      });\n    }\n  };\n  _proto.create = function create(dataID, typeName) {\n    this.__mutator.create(dataID, typeName);\n    delete this._proxies[dataID];\n    var record = this.get(dataID);\n    // For flow\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#create(): Expected the created record to exist.') : invariant(false) : void 0;\n    return record;\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    !(dataID !== ROOT_ID) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#delete(): Cannot delete the root record.') : invariant(false) : void 0;\n    delete this._proxies[dataID];\n    this.__mutator[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    if (!this._proxies.hasOwnProperty(dataID)) {\n      var status = this.__mutator.getStatus(dataID);\n      if (status === EXISTENT) {\n        this._proxies[dataID] = new RelayRecordProxy(this, this.__mutator, dataID);\n      } else {\n        this._proxies[dataID] = status === NONEXISTENT ? null : undefined;\n      }\n    }\n    return this._proxies[dataID];\n  };\n  _proto.getRoot = function getRoot() {\n    var root = this.get(ROOT_ID);\n    if (!root) {\n      root = this.create(ROOT_ID, ROOT_TYPE);\n    }\n    !(root && root.getType() === ROOT_TYPE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#getRoot(): Expected the source to contain a ' + 'root record, %s.', root == null ? 'no root record found' : \"found a root record of type `\".concat(root.getType(), \"`\")) : invariant(false) : void 0;\n    return root;\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this._invalidatedStore = true;\n  };\n  _proto.isStoreMarkedForInvalidation = function isStoreMarkedForInvalidation() {\n    return this._invalidatedStore;\n  };\n  _proto.markIDForInvalidation = function markIDForInvalidation(dataID) {\n    this._idsMarkedForInvalidation.add(dataID);\n  };\n  _proto.getIDsMarkedForInvalidation = function getIDsMarkedForInvalidation() {\n    return this._idsMarkedForInvalidation;\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceProxy;\n}();\nmodule.exports = RelayRecordSourceProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayStoreUtils'),\n  ROOT_TYPE = _require.ROOT_TYPE,\n  getStorageKey = _require.getStorageKey;\nvar _require2 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require2.readUpdatableFragment;\nvar _require3 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require3.readUpdatableQuery;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A subclass of RecordSourceProxy that provides convenience methods for\n * accessing the root fields of a given query/mutation. These fields accept\n * complex arguments and it can be tedious to re-construct the correct sets of\n * arguments to pass to e.g. `getRoot().getLinkedRecord()`.\n */\nvar RelayRecordSourceSelectorProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceSelectorProxy(mutator, recordSource, readSelector, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this.__recordSource = recordSource;\n    this._readSelector = readSelector;\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceSelectorProxy.prototype;\n  _proto.create = function create(dataID, typeName) {\n    return this.__recordSource.create(dataID, typeName);\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this.__recordSource[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    return this.__recordSource.get(dataID);\n  };\n  _proto.getRoot = function getRoot() {\n    return this.__recordSource.getRoot();\n  };\n  _proto.getOperationRoot = function getOperationRoot() {\n    var root = this.__recordSource.get(this._readSelector.dataID);\n    if (!root) {\n      root = this.__recordSource.create(this._readSelector.dataID, ROOT_TYPE);\n    }\n    return root;\n  };\n  _proto._getRootField = function _getRootField(selector, fieldName, plural) {\n    var field = selector.node.selections.find(function (selection) {\n      return selection.kind === 'LinkedField' && selection.name === fieldName || selection.kind === 'RequiredField' && selection.field.name === fieldName;\n    });\n    if (field && field.kind === 'RequiredField') {\n      field = field.field;\n    }\n    !(field && field.kind === 'LinkedField') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Cannot find root ' + 'field `%s`, no such field is defined on GraphQL document `%s`.', fieldName, selector.node.name) : invariant(false) : void 0;\n    !(field.plural === plural) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Expected root field ' + '`%s` to be %s.', fieldName, plural ? 'plural' : 'singular') : invariant(false) : void 0;\n    return field;\n  };\n  _proto.getRootField = function getRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, false);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecord(storageKey);\n  };\n  _proto.getPluralRootField = function getPluralRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, true);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecords(storageKey);\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this.__recordSource.invalidateStore();\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceSelectorProxy;\n}();\nmodule.exports = RelayRecordSourceSelectorProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require2.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar invariant = require('invariant');\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction applyOptimisticMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  var optimisticUpdater = config.optimisticUpdater;\n  var configs = config.configs,\n    optimisticResponse = config.optimisticResponse,\n    variables = config.variables;\n  var operation = createOperationDescriptor(mutation, variables);\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n  }\n  return environment.applyMutation({\n    operation: operation,\n    response: optimisticResponse,\n    updater: optimisticUpdater\n  });\n}\nmodule.exports = applyOptimisticMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction commitLocalUpdate(environment, updater) {\n  environment.commitUpdate(updater);\n}\nmodule.exports = commitLocalUpdate;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar _require2 = require('../store/ClientID'),\n  generateUniqueClientID = _require2.generateUniqueClientID;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require3 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require3.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar validateMutation = require('./validateMutation');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction commitMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  if (mutation.kind !== 'Request') {\n    throw new Error('commitMutation: Expected mutation to be of type request');\n  }\n  var optimisticResponse = config.optimisticResponse,\n    optimisticUpdater = config.optimisticUpdater,\n    updater = config.updater;\n  var configs = config.configs,\n    cacheConfig = config.cacheConfig,\n    onError = config.onError,\n    onUnsubscribe = config.onUnsubscribe,\n    variables = config.variables,\n    uploadables = config.uploadables;\n  var operation = createOperationDescriptor(mutation, variables, cacheConfig, generateUniqueClientID());\n  // TODO: remove this check after we fix flow.\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'commitMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.') : void 0;\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optimisticResponse instanceof Object) {\n      validateMutation(optimisticResponse, mutation, variables);\n    }\n  }\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n    updater = _RelayDeclarativeMuta.updater;\n  }\n  var errors = [];\n  var subscription = environment.executeMutation({\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribe({\n    next: function next(payload) {\n      var _config$onNext;\n      if (Array.isArray(payload)) {\n        payload.forEach(function (item) {\n          if (item.errors) {\n            errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(item.errors));\n          }\n        });\n      } else {\n        if (payload.errors) {\n          errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(payload.errors));\n        }\n      }\n      (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n    },\n    complete: function complete() {\n      var onCompleted = config.onCompleted;\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, errors.length !== 0 ? errors : null);\n      }\n    },\n    error: onError,\n    unsubscribe: onUnsubscribe\n  });\n  return {\n    dispose: subscription.unsubscribe\n  };\n}\nmodule.exports = commitMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _require = require('../store/RelayStoreUtils'),\n  getArgumentValues = _require.getArgumentValues;\nvar _require2 = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require2.ACTOR_CHANGE,\n  ALIASED_FRAGMENT_SPREAD = _require2.ALIASED_FRAGMENT_SPREAD,\n  ALIASED_INLINE_FRAGMENT_SPREAD = _require2.ALIASED_INLINE_FRAGMENT_SPREAD,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require2.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EDGE_TO_SERVER_OBJECT = _require2.CLIENT_EDGE_TO_SERVER_OBJECT,\n  CLIENT_EXTENSION = _require2.CLIENT_EXTENSION,\n  CONDITION = _require2.CONDITION,\n  DEFER = _require2.DEFER,\n  FLIGHT_FIELD = _require2.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require2.FRAGMENT_SPREAD,\n  INLINE_DATA_FRAGMENT_SPREAD = _require2.INLINE_DATA_FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require2.INLINE_FRAGMENT,\n  LINKED_FIELD = _require2.LINKED_FIELD,\n  MODULE_IMPORT = _require2.MODULE_IMPORT,\n  RELAY_LIVE_RESOLVER = _require2.RELAY_LIVE_RESOLVER,\n  RELAY_RESOLVER = _require2.RELAY_RESOLVER,\n  REQUIRED_FIELD = _require2.REQUIRED_FIELD,\n  SCALAR_FIELD = _require2.SCALAR_FIELD,\n  STREAM = _require2.STREAM;\nvar nonUpdatableKeys = ['id', '__id', '__typename', 'js'];\nfunction createUpdatableProxy(updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers) {\n  var mutableUpdatableProxy = {};\n  updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers);\n  if (process.env.NODE_ENV !== \"production\") {\n    Object.freeze(mutableUpdatableProxy);\n  }\n  // unless ReaderSelection carries more type information, we will never be able\n  // to flowtype mutableUpdatableProxy without a type assertion.\n  // $FlowFixMe[unclear-type]\n  return mutableUpdatableProxy;\n}\nfunction updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers) {\n  var _selection$alias3;\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(selections),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var selection = _step.value;\n      switch (selection.kind) {\n        case LINKED_FIELD:\n          if (selection.plural) {\n            Object.defineProperty(mutableUpdatableProxy, (_selection$alias = selection.alias) !== null && _selection$alias !== void 0 ? _selection$alias : selection.name, {\n              get: createGetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers),\n              set: createSetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy)\n            });\n          } else {\n            Object.defineProperty(mutableUpdatableProxy, (_selection$alias2 = selection.alias) !== null && _selection$alias2 !== void 0 ? _selection$alias2 : selection.name, {\n              get: createGetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers),\n              set: createSetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy)\n            });\n          }\n          break;\n        case SCALAR_FIELD:\n          var scalarFieldName = (_selection$alias3 = selection.alias) !== null && _selection$alias3 !== void 0 ? _selection$alias3 : selection.name;\n          Object.defineProperty(mutableUpdatableProxy, scalarFieldName, {\n            get: function get() {\n              var _selection$args;\n              var newVariables = getArgumentValues((_selection$args = selection.args) !== null && _selection$args !== void 0 ? _selection$args : [], variables);\n              // Flow incorrect assumes that the return value for the get method must match\n              // the set parameter.\n              var value = updatableProxyRootRecord.getValue(selection.name, newVariables\n              // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n              );\n\n              if (value == null) {\n                value = getScalarUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n              }\n              return value;\n            },\n            set: nonUpdatableKeys.includes(selection.name) ? undefined :\n            // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n            function (newValue) {\n              var _selection$args2;\n              var newVariables = getArgumentValues((_selection$args2 = selection.args) !== null && _selection$args2 !== void 0 ? _selection$args2 : [], variables);\n              // $FlowFixMe[prop-missing] Typesafe updaters should prevent people from using untyped values\n              updatableProxyRootRecord.setValue__UNSAFE(newValue, selection.name, newVariables);\n            }\n          });\n          break;\n        case INLINE_FRAGMENT:\n          if (updatableProxyRootRecord.getType() === selection.type) {\n            updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          }\n          break;\n        case CLIENT_EXTENSION:\n          updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          break;\n        case FRAGMENT_SPREAD:\n          // Explicitly ignore\n          break;\n        case CONDITION:\n        case ACTOR_CHANGE:\n        case ALIASED_FRAGMENT_SPREAD:\n        case INLINE_DATA_FRAGMENT_SPREAD:\n        case ALIASED_INLINE_FRAGMENT_SPREAD:\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n        case CLIENT_EDGE_TO_SERVER_OBJECT:\n        case DEFER:\n        case FLIGHT_FIELD:\n        case MODULE_IMPORT:\n        case RELAY_LIVE_RESOLVER:\n        case REQUIRED_FIELD:\n        case STREAM:\n        case RELAY_RESOLVER:\n          // These types of reader nodes are not currently handled.\n          throw new Error('Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.');\n        default:\n          selection.kind;\n          throw new Error('Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.');\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _selection$alias;\n      var _selection$alias2;\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction createSetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy) {\n  return function set(newValue) {\n    var _selection$args3;\n    var newVariables = getArgumentValues((_selection$args3 = selection.args) !== null && _selection$args3 !== void 0 ? _selection$args3 : [], variables);\n    if (newValue == null) {\n      throw new Error('Do not assign null to plural linked fields; assign an empty array instead.');\n    } else {\n      var recordProxies = newValue.map(function (item) {\n        if (item == null) {\n          throw new Error('When assigning an array of items, none of the items should be null or undefined.');\n        }\n        var __id = item.__id;\n        if (__id == null) {\n          throw new Error('The __id field must be present on each item passed to the setter. This indicates a bug in Relay.');\n        }\n        var newValueRecord = recordSourceProxy.get(__id);\n        if (newValueRecord == null) {\n          throw new Error(\"Did not find item with data id \".concat(__id, \" in the store.\"));\n        }\n        return newValueRecord;\n      });\n      updatableProxyRootRecord.setLinkedRecords(recordProxies, selection.name, newVariables);\n    }\n  };\n}\nfunction createSetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy) {\n  return function set(newValue) {\n    var _selection$args4;\n    var newVariables = getArgumentValues((_selection$args4 = selection.args) !== null && _selection$args4 !== void 0 ? _selection$args4 : [], variables);\n    if (newValue == null) {\n      updatableProxyRootRecord.setValue(newValue, selection.name, newVariables);\n    } else {\n      var __id = newValue.__id;\n      if (__id == null) {\n        throw new Error('The __id field must be present on the argument. This indicates a bug in Relay.');\n      }\n      var newValueRecord = recordSourceProxy.get(__id);\n      if (newValueRecord == null) {\n        throw new Error(\"Did not find item with data id \".concat(__id, \" in the store.\"));\n      }\n      updatableProxyRootRecord.setLinkedRecord(newValueRecord, selection.name, newVariables);\n    }\n  };\n}\nfunction createGetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  return function () {\n    var _selection$args5;\n    var newVariables = getArgumentValues((_selection$args5 = selection.args) !== null && _selection$args5 !== void 0 ? _selection$args5 : [], variables);\n    var linkedRecords = updatableProxyRootRecord.getLinkedRecords(selection.name, newVariables);\n    if (linkedRecords === undefined) {\n      linkedRecords = getPluralLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n    }\n    if (linkedRecords != null) {\n      return linkedRecords.map(function (linkedRecord) {\n        if (linkedRecord != null) {\n          var updatableProxy = {};\n          updateProxyFromSelections(updatableProxy, linkedRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          if (process.env.NODE_ENV !== \"production\") {\n            Object.freeze(updatableProxy);\n          }\n          // Flow incorrect assumes that the return value for the get method must match\n          // the set parameter.\n          // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n          return updatableProxy;\n        } else {\n          return linkedRecord;\n        }\n        // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n      });\n    } else {\n      return linkedRecords;\n    }\n  };\n}\nfunction createGetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  return function () {\n    var _selection$args6;\n    var newVariables = getArgumentValues((_selection$args6 = selection.args) !== null && _selection$args6 !== void 0 ? _selection$args6 : [], variables);\n    var linkedRecord = updatableProxyRootRecord.getLinkedRecord(selection.name, newVariables);\n    if (linkedRecord === undefined) {\n      linkedRecord = getLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n    }\n    if (linkedRecord != null) {\n      var updatableProxy = {};\n      updateProxyFromSelections(updatableProxy, linkedRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n      if (process.env.NODE_ENV !== \"production\") {\n        Object.freeze(updatableProxy);\n      }\n      // Flow incorrect assumes that the return value for the get method must match\n      // the set parameter.\n      // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n      return updatableProxy;\n    } else {\n      return linkedRecord;\n    }\n  };\n}\nfunction getLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var handler = _step2.value;\n      if (handler.kind === 'linked') {\n        var newId = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (newId != null) {\n          return recordSourceProxy.get(newId);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nfunction getPluralLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var handler = _step3.value;\n      if (handler.kind === 'pluralLinked') {\n        var newIds = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (newIds != null) {\n          return newIds.map(function (newId) {\n            if (newId != null) {\n              return recordSourceProxy.get(newId);\n            }\n          });\n        }\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nfunction getScalarUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var handler = _step4.value;\n      if (handler.kind === 'scalar') {\n        var value = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n}\nmodule.exports = {\n  createUpdatableProxy: createUpdatableProxy\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getFragment = _require.getFragment;\nvar _require2 = require('../store/RelayModernSelector'),\n  getVariablesFromFragment = _require2.getVariablesFromFragment;\nvar _require3 = require('../store/RelayStoreUtils'),\n  ID_KEY = _require3.ID_KEY;\nvar _require4 = require('./createUpdatableProxy'),\n  createUpdatableProxy = _require4.createUpdatableProxy;\nvar invariant = require('invariant');\n\n// Note: plural fragment references are currently not supported\nfunction readUpdatableFragment(fragment, fragmentReference, proxy, missingFieldHandlers) {\n  var updatableFragment = getFragment(fragment);\n  var fragmentVariables = getVariablesFromFragment(updatableFragment, fragmentReference);\n  // $FlowFixMe[prop-missing] it's there, we just don't include it in the type\n  var id = fragmentReference[ID_KEY];\n  var fragmentRoot = proxy.get(id);\n  !(fragmentRoot != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No record with \".concat(id, \" was found. This likely indicates a problem with Relay.\")) : invariant(false) : void 0;\n  return {\n    // $FlowFixMe[incompatible-call]\n    updatableData: createUpdatableProxy(fragmentRoot, fragmentVariables, updatableFragment.selections, proxy, missingFieldHandlers)\n  };\n}\nmodule.exports = {\n  readUpdatableFragment: readUpdatableFragment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getUpdatableQuery = _require.getUpdatableQuery;\nvar _require2 = require('./createUpdatableProxy'),\n  createUpdatableProxy = _require2.createUpdatableProxy;\nfunction readUpdatableQuery(query, variables, proxy, missingFieldHandlers) {\n  var updatableQuery = getUpdatableQuery(query);\n  return {\n    // $FlowFixMe[incompatible-call]\n    updatableData: createUpdatableProxy(proxy.getRoot(), variables, updatableQuery.fragment.selections, proxy, missingFieldHandlers)\n  };\n}\nmodule.exports = {\n  readUpdatableQuery: readUpdatableQuery\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require.ACTOR_CHANGE,\n  CLIENT_COMPONENT = _require.CLIENT_COMPONENT,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n  CONDITION = _require.CONDITION,\n  DEFER = _require.DEFER,\n  FLIGHT_FIELD = _require.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n  LINKED_FIELD = _require.LINKED_FIELD,\n  LINKED_HANDLE = _require.LINKED_HANDLE,\n  MODULE_IMPORT = _require.MODULE_IMPORT,\n  RELAY_RESOLVER = _require.RELAY_RESOLVER,\n  SCALAR_FIELD = _require.SCALAR_FIELD,\n  SCALAR_HANDLE = _require.SCALAR_HANDLE,\n  STREAM = _require.STREAM,\n  TYPE_DISCRIMINATOR = _require.TYPE_DISCRIMINATOR;\nvar warning = require(\"fbjs/lib/warning\");\n// $FlowFixMe[method-unbinding] added when improving typing for this parameters\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar validateMutation = function validateMutation() {};\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n      deepLoc = deepLoc[key];\n    });\n  };\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {},\n      moduleImportPaths: new Set()\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case CONDITION:\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n      case CLIENT_COMPONENT:\n      case FRAGMENT_SPREAD:\n        validateSelections(optimisticResponse, selection.fragment.selections, context);\n        return;\n      case SCALAR_FIELD:\n      case LINKED_FIELD:\n      case FLIGHT_FIELD:\n        return validateField(optimisticResponse, selection, context);\n      case ACTOR_CHANGE:\n        return validateField(optimisticResponse, selection.linkedField, context);\n      case INLINE_FRAGMENT:\n        var type = selection.type;\n        var isConcreteType = selection.abstractKey == null;\n        validateAbstractKey(context, selection.abstractKey);\n        selection.selections.forEach(function (subselection) {\n          if (isConcreteType && optimisticResponse.__typename !== type) {\n            return;\n          }\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case CLIENT_EXTENSION:\n        selection.selections.forEach(function (subselection) {\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case MODULE_IMPORT:\n        return validateModuleImport(context);\n      case TYPE_DISCRIMINATOR:\n        return validateAbstractKey(context, selection.abstractKey);\n      case RELAY_RESOLVER:\n      case CLIENT_EDGE_TO_CLIENT_OBJECT:\n      case LINKED_HANDLE:\n      case SCALAR_HANDLE:\n      case DEFER:\n      case STREAM:\n        {\n          // TODO(T35864292) - Add missing validations for these types\n          return;\n        }\n      default:\n        selection;\n        return;\n    }\n  };\n  var validateModuleImport = function validateModuleImport(context) {\n    context.moduleImportPaths.add(context.path);\n  };\n  var validateAbstractKey = function validateAbstractKey(context, abstractKey) {\n    if (abstractKey != null) {\n      var path = \"\".concat(context.path, \".\").concat(abstractKey);\n      context.visitedPaths.add(path);\n    }\n  };\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n    switch (field.kind) {\n      case SCALAR_FIELD:\n        if (hasOwnProperty.call(optimisticResponse, fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n        return;\n      case LINKED_FIELD:\n        var selections = field.selections;\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n      case FLIGHT_FIELD:\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n        throw new Error('validateMutation: Flight fields are not compatible with ' + 'optimistic updates, as React does not have the component code ' + 'necessary to process new data on the client. Instead, you ' + 'should update your code to require a full refetch of the Flight ' + 'field so your UI can be updated.');\n    }\n  };\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n      // if it's a module import path we don't have an ast so we cannot validate it\n      if (context.moduleImportPaths.has(path)) {\n        return;\n      }\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n          path: path\n        }));\n      }\n    });\n  };\n}\nmodule.exports = validateMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayObservable = require('./RelayObservable');\n\n/**\n * Converts a FetchFunction into an ExecuteFunction for use by RelayNetwork.\n */\nfunction convertFetch(fn) {\n  return function fetch(request, variables, cacheConfig, uploadables, logRequestInfo) {\n    var result = fn(request, variables, cacheConfig, uploadables, logRequestInfo);\n    // Note: We allow FetchFunction to directly return Error to indicate\n    // a failure to fetch. To avoid handling this special case throughout the\n    // Relay codebase, it is explicitly handled here.\n    if (result instanceof Error) {\n      return RelayObservable.create(function (sink) {\n        return sink.error(result);\n      });\n    }\n    return RelayObservable.from(result);\n  };\n}\nmodule.exports = {\n  convertFetch: convertFetch\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar withProvidedVariables = require('../util/withProvidedVariables');\nvar _require = require('./ConvertToExecuteFunction'),\n  convertFetch = _require.convertFetch;\nvar invariant = require('invariant');\n\n/**\n * Creates an implementation of the `Network` interface defined in\n * `RelayNetworkTypes` given `fetch` and `subscribe` functions.\n */\nfunction create(fetchFn, subscribe) {\n  // Convert to functions that returns RelayObservable.\n  var observeFetch = convertFetch(fetchFn);\n  function execute(request, variables, cacheConfig, uploadables, logRequestInfo) {\n    var operationVariables = withProvidedVariables(variables, request.providedVariables);\n    if (request.operationKind === 'subscription') {\n      !subscribe ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: This network layer does not support Subscriptions. ' + 'To use Subscriptions, provide a custom network layer.') : invariant(false) : void 0;\n      !!uploadables ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: Cannot provide uploadables while subscribing.') : invariant(false) : void 0;\n      return subscribe(request, operationVariables, cacheConfig);\n    }\n    var pollInterval = cacheConfig.poll;\n    if (pollInterval != null) {\n      !!uploadables ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: Cannot provide uploadables while polling.') : invariant(false) : void 0;\n      return observeFetch(request, operationVariables, {\n        force: true\n      }).poll(pollInterval);\n    }\n    return observeFetch(request, operationVariables, cacheConfig, uploadables, logRequestInfo);\n  }\n  return {\n    execute: execute\n  };\n}\nmodule.exports = {\n  create: create\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar isPromise = require('../util/isPromise');\n\n/**\n * A Subscription object is returned from .subscribe(), which can be\n * unsubscribed or checked to see if the resulting subscription has closed.\n */\n\nvar hostReportError = swallowError;\n\n/**\n * Limited implementation of ESObservable, providing the limited set of behavior\n * Relay networking requires.\n *\n * Observables retain the benefit of callbacks which can be called\n * synchronously, avoiding any UI jitter, while providing a compositional API,\n * which simplifies logic and prevents mishandling of errors compared to\n * the direct use of callback functions.\n *\n * ESObservable: https://github.com/tc39/proposal-observable\n */\nvar RelayObservable = /*#__PURE__*/function () {\n  RelayObservable.create = function create(source) {\n    return new RelayObservable(source);\n  }\n\n  // Use RelayObservable.create()\n  ;\n  function RelayObservable(source) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // Early runtime errors for ill-formed sources.\n      if (!source || typeof source !== 'function') {\n        throw new Error('Source must be a Function: ' + String(source));\n      }\n    }\n    this._source = source;\n  }\n\n  /**\n   * When an emitted error event is not handled by an Observer, it is reported\n   * to the host environment (what the ESObservable spec refers to as\n   * \"HostReportErrors()\").\n   *\n   * The default implementation in development rethrows thrown errors, and\n   * logs emitted error events to the console, while in production does nothing\n   * (swallowing unhandled errors).\n   *\n   * Called during application initialization, this method allows\n   * application-specific handling of unhandled errors. Allowing, for example,\n   * integration with error logging or developer tools.\n   *\n   * A second parameter `isUncaughtThrownError` is true when the unhandled error\n   * was thrown within an Observer handler, and false when the unhandled error\n   * was an unhandled emitted event.\n   *\n   *  - Uncaught thrown errors typically represent avoidable errors thrown from\n   *    application code, which should be handled with a try/catch block, and\n   *    usually have useful stack traces.\n   *\n   *  - Unhandled emitted event errors typically represent unavoidable events in\n   *    application flow such as network failure, and may not have useful\n   *    stack traces.\n   */\n  RelayObservable.onUnhandledError = function onUnhandledError(callback) {\n    hostReportError = callback;\n  }\n\n  /**\n   * Accepts various kinds of data sources, and always returns a RelayObservable\n   * useful for accepting the result of a user-provided FetchFunction.\n   */;\n  RelayObservable.from = function from(obj) {\n    return isObservable(obj) ? fromObservable(obj) : isPromise(obj) ? fromPromise(obj) : fromValue(obj);\n  }\n\n  /**\n   * Similar to promise.catch(), observable.catch() handles error events, and\n   * provides an alternative observable to use in it's place.\n   *\n   * If the catch handler throws a new error, it will appear as an error event\n   * on the resulting Observable.\n   */;\n  var _proto = RelayObservable.prototype;\n  _proto[\"catch\"] = function _catch(fn) {\n    var _this = this;\n    return RelayObservable.create(function (sink) {\n      var subscription;\n      _this.subscribe({\n        start: function start(sub) {\n          subscription = sub;\n        },\n        next: sink.next,\n        complete: sink.complete,\n        error: function error(_error2) {\n          try {\n            fn(_error2).subscribe({\n              start: function start(sub) {\n                subscription = sub;\n              },\n              next: sink.next,\n              complete: sink.complete,\n              error: sink.error\n            });\n          } catch (error2) {\n            sink.error(error2, true /* isUncaughtThrownError */);\n          }\n        }\n      });\n\n      return function () {\n        return subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which first yields values from this Observable,\n   * then yields values from the next Observable. This is useful for chaining\n   * together Observables of finite length.\n   */;\n  _proto.concat = function concat(next) {\n    var _this2 = this;\n    return RelayObservable.create(function (sink) {\n      var current;\n      _this2.subscribe({\n        start: function start(subscription) {\n          current = subscription;\n        },\n        next: sink.next,\n        error: sink.error,\n        complete: function complete() {\n          current = next.subscribe(sink);\n        }\n      });\n      return function () {\n        current && current.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the provided Observer is called to perform a side-effects\n   * for all events emitted by the source.\n   *\n   * Any errors that are thrown in the side-effect Observer are unhandled, and\n   * do not affect the source Observable or its Observer.\n   *\n   * This is useful for when debugging your Observables or performing other\n   * side-effects such as logging or performance monitoring.\n   */;\n  _proto[\"do\"] = function _do(observer) {\n    var _this3 = this;\n    return RelayObservable.create(function (sink) {\n      var both = function both(action) {\n        return function () {\n          try {\n            observer[action] && observer[action].apply(observer, arguments);\n          } catch (error) {\n            hostReportError(error, true /* isUncaughtThrownError */);\n          }\n\n          sink[action] && sink[action].apply(sink, arguments);\n        };\n      };\n      return _this3.subscribe({\n        start: both('start'),\n        next: both('next'),\n        error: both('error'),\n        complete: both('complete'),\n        unsubscribe: both('unsubscribe')\n      });\n    });\n  }\n\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the finally callback is performed after completion,\n   * whether normal or due to error or unsubscription.\n   *\n   * This is useful for cleanup such as resource finalization.\n   */;\n  _proto[\"finally\"] = function _finally(fn) {\n    var _this4 = this;\n    return RelayObservable.create(function (sink) {\n      var subscription = _this4.subscribe(sink);\n      return function () {\n        subscription.unsubscribe();\n        fn();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which is identical to this one, unless this\n   * Observable completes before yielding any values, in which case the new\n   * Observable will yield the values from the alternate Observable.\n   *\n   * If this Observable does yield values, the alternate is never subscribed to.\n   *\n   * This is useful for scenarios where values may come from multiple sources\n   * which should be tried in order, i.e. from a cache before a network.\n   */;\n  _proto.ifEmpty = function ifEmpty(alternate) {\n    var _this5 = this;\n    return RelayObservable.create(function (sink) {\n      var hasValue = false;\n      var current = _this5.subscribe({\n        next: function next(value) {\n          hasValue = true;\n          sink.next(value);\n        },\n        error: sink.error,\n        complete: function complete() {\n          if (hasValue) {\n            sink.complete();\n          } else {\n            current = alternate.subscribe(sink);\n          }\n        }\n      });\n      return function () {\n        current.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Observable's primary API: returns an unsubscribable Subscription to the\n   * source of this Observable.\n   *\n   * Note: A sink may be passed directly to .subscribe() as its observer,\n   * allowing for easily composing Observables.\n   */;\n  _proto.subscribe = function subscribe(observer) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // Early runtime errors for ill-formed observers.\n      if (!observer || typeof observer !== 'object') {\n        throw new Error('Observer must be an Object with callbacks: ' + String(observer));\n      }\n    }\n    return _subscribe(this._source, observer);\n  }\n\n  /**\n   * Returns a new Observerable where each value has been transformed by\n   * the mapping function.\n   */;\n  _proto.map = function map(fn) {\n    var _this6 = this;\n    return RelayObservable.create(function (sink) {\n      var subscription = _this6.subscribe({\n        complete: sink.complete,\n        error: sink.error,\n        next: function next(value) {\n          try {\n            var mapValue = fn(value);\n            sink.next(mapValue);\n          } catch (error) {\n            sink.error(error, true /* isUncaughtThrownError */);\n          }\n        }\n      });\n\n      return function () {\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable where each value is replaced with a new Observable\n   * by the mapping function, the results of which returned as a single\n   * merged Observable.\n   */;\n  _proto.mergeMap = function mergeMap(fn) {\n    var _this7 = this;\n    return RelayObservable.create(function (sink) {\n      var subscriptions = [];\n      function start(subscription) {\n        this._sub = subscription;\n        subscriptions.push(subscription);\n      }\n      function complete() {\n        subscriptions.splice(subscriptions.indexOf(this._sub), 1);\n        if (subscriptions.length === 0) {\n          sink.complete();\n        }\n      }\n      _this7.subscribe({\n        start: start,\n        next: function next(value) {\n          try {\n            if (!sink.closed) {\n              RelayObservable.from(fn(value)).subscribe({\n                start: start,\n                next: sink.next,\n                error: sink.error,\n                complete: complete\n              });\n            }\n          } catch (error) {\n            sink.error(error, true /* isUncaughtThrownError */);\n          }\n        },\n\n        error: sink.error,\n        complete: complete\n      });\n      return function () {\n        subscriptions.forEach(function (sub) {\n          return sub.unsubscribe();\n        });\n        subscriptions.length = 0;\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which first mirrors this Observable, then when it\n   * completes, waits for `pollInterval` milliseconds before re-subscribing to\n   * this Observable again, looping in this manner until unsubscribed.\n   *\n   * The returned Observable never completes.\n   */;\n  _proto.poll = function poll(pollInterval) {\n    var _this8 = this;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof pollInterval !== 'number' || pollInterval <= 0) {\n        throw new Error('RelayObservable: Expected pollInterval to be positive, got: ' + pollInterval);\n      }\n    }\n    return RelayObservable.create(function (sink) {\n      var subscription;\n      var timeout;\n      var poll = function poll() {\n        subscription = _this8.subscribe({\n          next: sink.next,\n          error: sink.error,\n          complete: function complete() {\n            timeout = setTimeout(poll, pollInterval);\n          }\n        });\n      };\n      poll();\n      return function () {\n        clearTimeout(timeout);\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a Promise which resolves when this Observable yields a first value\n   * or when it completes with no value.\n   *\n   * NOTE: The source Observable is *NOT* canceled when the returned Promise\n   * resolves. The Observable is always run to completion.\n   */;\n  _proto.toPromise = function toPromise() {\n    var _this9 = this;\n    return new Promise(function (resolve, reject) {\n      var resolved = false;\n      _this9.subscribe({\n        next: function next(val) {\n          if (!resolved) {\n            resolved = true;\n            resolve(val);\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n  return RelayObservable;\n}(); // Use declarations to teach Flow how to check isObservable.\nfunction isObservable(obj) {\n  return typeof obj === 'object' && obj !== null && typeof obj.subscribe === 'function';\n}\nfunction fromObservable(obj) {\n  return obj instanceof RelayObservable ? obj : RelayObservable.create(function (sink) {\n    return obj.subscribe(sink);\n  });\n}\nfunction fromPromise(promise) {\n  return RelayObservable.create(function (sink) {\n    // Since sink methods do not throw, the resulting Promise can be ignored.\n    promise.then(function (value) {\n      sink.next(value);\n      sink.complete();\n    }, sink.error);\n  });\n}\nfunction fromValue(value) {\n  return RelayObservable.create(function (sink) {\n    sink.next(value);\n    sink.complete();\n  });\n}\nfunction _subscribe(source, observer) {\n  var closed = false;\n  var cleanup;\n\n  // Ideally we would simply describe a `get closed()` method on the Sink and\n  // Subscription objects below, however not all flow environments we expect\n  // Relay to be used within will support property getters, and many minifier\n  // tools still do not support ES5 syntax. Instead, we can use defineProperty.\n  var withClosed = function withClosed(obj) {\n    return Object.defineProperty(obj, 'closed', {\n      get: function get() {\n        return closed;\n      }\n    });\n  };\n  function doCleanup() {\n    if (cleanup) {\n      if (cleanup.unsubscribe) {\n        cleanup.unsubscribe();\n      } else {\n        try {\n          cleanup();\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        }\n      }\n\n      cleanup = undefined;\n    }\n  }\n\n  // Create a Subscription.\n  var subscription = withClosed({\n    unsubscribe: function unsubscribe() {\n      if (!closed) {\n        closed = true;\n\n        // Tell Observer that unsubscribe was called.\n        try {\n          observer.unsubscribe && observer.unsubscribe(subscription);\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  });\n\n  // Tell Observer that observation is about to begin.\n  try {\n    observer.start && observer.start(subscription);\n  } catch (error) {\n    hostReportError(error, true /* isUncaughtThrownError */);\n  }\n\n  // If closed already, don't bother creating a Sink.\n  if (closed) {\n    return subscription;\n  }\n\n  // Create a Sink respecting subscription state and cleanup.\n  var sink = withClosed({\n    next: function next(value) {\n      if (!closed && observer.next) {\n        try {\n          observer.next(value);\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        }\n      }\n    },\n    error: function error(_error3, isUncaughtThrownError) {\n      if (closed || !observer.error) {\n        closed = true;\n        hostReportError(_error3, isUncaughtThrownError || false);\n        doCleanup();\n      } else {\n        closed = true;\n        try {\n          observer.error(_error3);\n        } catch (error2) {\n          hostReportError(error2, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    },\n    complete: function complete() {\n      if (!closed) {\n        closed = true;\n        try {\n          observer.complete && observer.complete();\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  });\n\n  // If anything goes wrong during observing the source, handle the error.\n  try {\n    cleanup = source(sink);\n  } catch (error) {\n    sink.error(error, true /* isUncaughtThrownError */);\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // Early runtime errors for ill-formed returned cleanup.\n    if (cleanup !== undefined && typeof cleanup !== 'function' && (!cleanup || typeof cleanup.unsubscribe !== 'function')) {\n      throw new Error('Returned cleanup function which cannot be called: ' + String(cleanup));\n    }\n  }\n\n  // If closed before the source function existed, cleanup now.\n  if (closed) {\n    doCleanup();\n  }\n  return subscription;\n}\nfunction swallowError(_error, _isUncaughtThrownError) {\n  // do nothing.\n}\nif (process.env.NODE_ENV !== \"production\") {\n  // Default implementation of HostReportErrors() in development builds.\n  // Can be replaced by the host application environment.\n  RelayObservable.onUnhandledError(function (error, isUncaughtThrownError) {\n    if (typeof fail === 'function') {\n      // In test environments (Jest), fail() immediately fails the current test.\n      fail(String(error));\n    } else if (isUncaughtThrownError) {\n      // Rethrow uncaught thrown errors on the next frame to avoid breaking\n      // current logic.\n      setTimeout(function () {\n        throw error;\n      });\n    } else if (typeof console !== 'undefined') {\n      // Otherwise, log the unhandled error for visibility.\n      // eslint-disable-next-line no-console\n      console.error('RelayObservable: Unhandled Error', error);\n    }\n  });\n}\nmodule.exports = RelayObservable;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar stableCopy = require('../util/stableCopy');\nvar invariant = require('invariant');\n/**\n * A cache for storing query responses, featuring:\n * - `get` with TTL\n * - cache size limiting, with least-recently *updated* entries purged first\n */\nvar RelayQueryResponseCache = /*#__PURE__*/function () {\n  function RelayQueryResponseCache(_ref) {\n    var size = _ref.size,\n      ttl = _ref.ttl;\n    !(size > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max cache size to be > 0, got ' + '`%s`.', size) : invariant(false) : void 0;\n    !(ttl > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max ttl to be > 0, got `%s`.', ttl) : invariant(false) : void 0;\n    this._responses = new Map();\n    this._size = size;\n    this._ttl = ttl;\n  }\n  var _proto = RelayQueryResponseCache.prototype;\n  _proto.clear = function clear() {\n    this._responses.clear();\n  };\n  _proto.get = function get(queryID, variables) {\n    var _this = this;\n    var cacheKey = getCacheKey(queryID, variables);\n    this._responses.forEach(function (response, key) {\n      if (!isCurrent(response.fetchTime, _this._ttl)) {\n        _this._responses[\"delete\"](key);\n      }\n    });\n    var response = this._responses.get(cacheKey);\n    if (response == null) {\n      return null;\n    }\n    if (Array.isArray(response.payload)) {\n      return response.payload.map(function (payload) {\n        return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, payload), {}, {\n          extensions: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, payload.extensions), {}, {\n            cacheTimestamp: response.fetchTime\n          })\n        });\n      });\n    }\n    return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, response.payload), {}, {\n      extensions: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, response.payload.extensions), {}, {\n        cacheTimestamp: response.fetchTime\n      })\n    });\n  };\n  _proto.set = function set(queryID, variables, payload) {\n    var fetchTime = Date.now();\n    var cacheKey = getCacheKey(queryID, variables);\n    this._responses[\"delete\"](cacheKey); // deletion resets key ordering\n    this._responses.set(cacheKey, {\n      fetchTime: fetchTime,\n      payload: payload\n    });\n    // Purge least-recently updated key when max size reached\n    if (this._responses.size > this._size) {\n      var firstKey = this._responses.keys().next();\n      if (!firstKey.done) {\n        this._responses[\"delete\"](firstKey.value);\n      }\n    }\n  };\n  return RelayQueryResponseCache;\n}();\nfunction getCacheKey(queryID, variables) {\n  return JSON.stringify(stableCopy({\n    queryID: queryID,\n    variables: variables\n  }));\n}\n\n/**\n * Determine whether a response fetched at `fetchTime` is still valid given\n * some `ttl`.\n */\nfunction isCurrent(fetchTime, ttl) {\n  return fetchTime + ttl >= Date.now();\n}\nmodule.exports = RelayQueryResponseCache;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar generateID = require('../util/generateID');\n\n/**\n * Wraps the network with logging to ensure that network requests are\n * always logged. Relying on each network callsite to be wrapped is\n * untenable and will eventually lead to holes in the logging.\n * NOTE: This function takes an environment instance, because Relay\n * devtools will mutate the `env.__log` method, and the devtools rely\n * on it to receive network events.\n */\nfunction wrapNetworkWithLogObserver(env, network) {\n  return {\n    execute: function execute(params, variables, cacheConfig, uploadables) {\n      var networkRequestId = generateID();\n      var logObserver = {\n        start: function start(subscription) {\n          env.__log({\n            name: 'network.start',\n            networkRequestId: networkRequestId,\n            params: params,\n            variables: variables,\n            cacheConfig: cacheConfig\n          });\n        },\n        next: function next(response) {\n          env.__log({\n            name: 'network.next',\n            networkRequestId: networkRequestId,\n            response: response\n          });\n        },\n        error: function error(_error) {\n          env.__log({\n            name: 'network.error',\n            networkRequestId: networkRequestId,\n            error: _error\n          });\n        },\n        complete: function complete() {\n          env.__log({\n            name: 'network.complete',\n            networkRequestId: networkRequestId\n          });\n        },\n        unsubscribe: function unsubscribe() {\n          env.__log({\n            name: 'network.unsubscribe',\n            networkRequestId: networkRequestId\n          });\n        }\n      };\n      var logRequestInfo = function logRequestInfo(info) {\n        env.__log({\n          name: 'network.info',\n          networkRequestId: networkRequestId,\n          info: info\n        });\n      };\n      return network.execute(params, variables, cacheConfig, uploadables, logRequestInfo)[\"do\"](logObserver);\n    }\n  };\n}\nmodule.exports = wrapNetworkWithLogObserver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n// The type of a graphql`...` tagged template expression.\n\n/**\n * Runtime function to correspond to the `graphql` tagged template function.\n * All calls to this function should be transformed by the plugin.\n */\nfunction graphql(strings) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'graphql: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `graphql`. Note also that there cannot be ' + 'a space between graphql and the backtick that follows.') : invariant(false) : void 0;\n}\nfunction getNode(taggedNode) {\n  var node = taggedNode;\n  if (typeof node === 'function') {\n    node = node();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayGraphQLTag: node `%s` unexpectedly wrapped in a function.', node.kind === 'Fragment' ? node.name : node.operation.name) : void 0;\n  } else if (node[\"default\"]) {\n    // Support for languages that work (best) with ES6 modules, such as TypeScript.\n    node = node[\"default\"];\n  }\n  return node;\n}\nfunction isFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.FRAGMENT;\n}\nfunction isRequest(node) {\n  var request = getNode(node);\n  return typeof request === 'object' && request !== null && request.kind === RelayConcreteNode.REQUEST;\n}\nfunction isUpdatableQuery(node) {\n  var updatableQuery = getNode(node);\n  return typeof updatableQuery === 'object' && updatableQuery !== null && updatableQuery.kind === RelayConcreteNode.UPDATABLE_QUERY;\n}\nfunction isInlineDataFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.INLINE_DATA_FRAGMENT;\n}\nfunction getFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\nfunction getPaginationFragment(taggedNode) {\n  var _fragment$metadata;\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.refetch;\n  var connection = refetch === null || refetch === void 0 ? void 0 : refetch.connection;\n  if (refetch === null || typeof refetch !== 'object' || connection === null || typeof connection !== 'object') {\n    return null;\n  }\n  return fragment;\n}\nfunction getRefetchableFragment(taggedNode) {\n  var _fragment$metadata2;\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata2 = fragment.metadata) === null || _fragment$metadata2 === void 0 ? void 0 : _fragment$metadata2.refetch;\n  if (refetch === null || typeof refetch !== 'object') {\n    return null;\n  }\n  return fragment;\n}\nfunction getRequest(taggedNode) {\n  var request = getNode(taggedNode);\n  !isRequest(request) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(request)) : invariant(false) : void 0;\n  return request;\n}\nfunction getUpdatableQuery(taggedNode) {\n  var updatableQuery = getNode(taggedNode);\n  !isUpdatableQuery(updatableQuery) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(updatableQuery)) : invariant(false) : void 0;\n  return updatableQuery;\n}\nfunction getInlineDataFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isInlineDataFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected an inline data fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\nmodule.exports = {\n  getFragment: getFragment,\n  getNode: getNode,\n  getPaginationFragment: getPaginationFragment,\n  getRefetchableFragment: getRefetchableFragment,\n  getRequest: getRequest,\n  getUpdatableQuery: getUpdatableQuery,\n  getInlineDataFragment: getInlineDataFragment,\n  graphql: graphql,\n  isFragment: isFragment,\n  isRequest: isRequest,\n  isUpdatableQuery: isUpdatableQuery,\n  isInlineDataFragment: isInlineDataFragment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar PreloadableQueryRegistry = /*#__PURE__*/function () {\n  function PreloadableQueryRegistry() {\n    this._preloadableQueries = new Map();\n    this._callbacks = new Map();\n  }\n  var _proto = PreloadableQueryRegistry.prototype;\n  _proto.set = function set(key, value) {\n    this._preloadableQueries.set(key, value);\n    var callbacks = this._callbacks.get(key);\n    if (callbacks != null) {\n      callbacks.forEach(function (cb) {\n        try {\n          cb(value);\n        } catch (e) {\n          // We do *not* want to throw in this tick, as this callback is executed\n          // while a query is required for the very first time.\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      });\n    }\n  };\n  _proto.get = function get(key) {\n    return this._preloadableQueries.get(key);\n  };\n  _proto.onLoad = function onLoad(key, callback) {\n    var _this$_callbacks$get;\n    var callbacks = (_this$_callbacks$get = this._callbacks.get(key)) !== null && _this$_callbacks$get !== void 0 ? _this$_callbacks$get : new Set();\n    callbacks.add(callback);\n    var dispose = function dispose() {\n      callbacks[\"delete\"](callback);\n    };\n    this._callbacks.set(key, callbacks);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.clear = function clear() {\n    this._preloadableQueries.clear();\n  };\n  return PreloadableQueryRegistry;\n}();\nvar preloadableQueryRegistry = new PreloadableQueryRegistry();\nmodule.exports = preloadableQueryRegistry;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar _require = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require.createOperationDescriptor;\nvar handlePotentialSnapshotErrors = require('../util/handlePotentialSnapshotErrors');\nvar fetchQueryInternal = require('./fetchQueryInternal');\nvar _require2 = require('./GraphQLTag'),\n  getRequest = _require2.getRequest;\nvar invariant = require('invariant');\n\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. Subscribe optionally takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subsctiption) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * Request Promise:\n * ================\n * The obervable can be converted to a Promise with .toPromise(), which will\n * resolve to a snapshot of the query data when the first response is received\n * from the server.\n *\n * ```\n * fetchQuery(environment, query, variables).toPromise().then((data) => {\n *   // ...\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will NOT retain query data, meaning that it is not guaranteed\n * that the fetched data will remain in the Relay store after the request has\n * completed.\n * If you need to retain the query data outside of the network request,\n * you need to use `environment.retain()`.\n *\n *\n * Cancelling requests:\n * ====================\n * If the disposable returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const disposable = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * disposable.dispose();\n * ```\n * NOTE: When using .toPromise(), the request cannot be cancelled.\n */\nfunction fetchQuery(environment, query, variables, options) {\n  var _options$fetchPolicy;\n  var queryNode = getRequest(query);\n  !(queryNode.params.operationKind === 'query') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'fetchQuery: Expected query operation') : invariant(false) : void 0;\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])({\n    force: true\n  }, options === null || options === void 0 ? void 0 : options.networkCacheConfig);\n  var operation = createOperationDescriptor(queryNode, variables, networkCacheConfig);\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'network-only';\n  function readData(snapshot) {\n    handlePotentialSnapshotErrors(environment, snapshot.missingRequiredFields, snapshot.relayResolverErrors);\n    /* $FlowFixMe[incompatible-return] we assume readData returns the right\n     * data just having written it from network or checked availability. */\n    return snapshot.data;\n  }\n  switch (fetchPolicy) {\n    case 'network-only':\n      {\n        return getNetworkObservable(environment, operation).map(readData);\n      }\n    case 'store-or-network':\n      {\n        if (environment.check(operation).status === 'available') {\n          return RelayObservable.from(environment.lookup(operation.fragment)).map(readData);\n        }\n        return getNetworkObservable(environment, operation).map(readData);\n      }\n    default:\n      fetchPolicy;\n      throw new Error('fetchQuery: Invalid fetchPolicy ' + fetchPolicy);\n  }\n}\nfunction getNetworkObservable(environment, operation) {\n  return fetchQueryInternal.fetchQuery(environment, operation).map(function () {\n    return environment.lookup(operation.fragment);\n  });\n}\nmodule.exports = fetchQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar Observable = require('../network/RelayObservable');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar RelayReplaySubject = require('../util/RelayReplaySubject');\nvar invariant = require('invariant');\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar requestCachesByEnvironment = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\n\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. subscribe() takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subscription) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will not retain any query data outside the scope of the\n * request, which means it is not guaranteed that it won't be garbage\n * collected after the request completes.\n * If you need to retain data, you can do so manually with environment.retain().\n *\n * Cancelling requests:\n * ====================\n * If the subscription returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const subscription = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * subscription.unsubscribe();\n * ```\n */\nfunction fetchQuery(environment, operation) {\n  return fetchQueryDeduped(environment, operation.request.identifier, function () {\n    return environment.execute({\n      operation: operation\n    });\n  });\n}\n\n/**\n * Low-level implementation details of `fetchQuery`.\n *\n * `fetchQueryDeduped` can also be used to share a single cache for\n * requests that aren't using `fetchQuery` directly (e.g. because they don't\n * have an `OperationDescriptor` when they are called).\n */\nfunction fetchQueryDeduped(environment, identifier, fetchFn) {\n  return Observable.create(function (sink) {\n    var requestCache = getRequestCache(environment);\n    var cachedRequest = requestCache.get(identifier);\n    if (!cachedRequest) {\n      fetchFn()[\"finally\"](function () {\n        return requestCache[\"delete\"](identifier);\n      }).subscribe({\n        start: function start(subscription) {\n          cachedRequest = {\n            identifier: identifier,\n            subject: new RelayReplaySubject(),\n            subjectForInFlightStatus: new RelayReplaySubject(),\n            subscription: subscription,\n            promise: null\n          };\n          requestCache.set(identifier, cachedRequest);\n        },\n        next: function next(response) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.next(response);\n          cachedReq.subjectForInFlightStatus.next(response);\n        },\n        error: function error(_error) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.error(_error);\n          cachedReq.subjectForInFlightStatus.error(_error);\n        },\n        complete: function complete() {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.complete();\n          cachedReq.subjectForInFlightStatus.complete();\n        },\n        unsubscribe: function unsubscribe(subscription) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.unsubscribe();\n          cachedReq.subjectForInFlightStatus.unsubscribe();\n        }\n      });\n    }\n    !(cachedRequest != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] fetchQueryDeduped: Expected `start` to be ' + 'called synchronously') : invariant(false) : void 0;\n    return getObservableForCachedRequest(requestCache, cachedRequest).subscribe(sink);\n  });\n}\n\n/**\n * @private\n */\nfunction getObservableForCachedRequest(requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subject.subscribe(sink);\n    return function () {\n      subscription.unsubscribe();\n      var cachedRequestInstance = requestCache.get(cachedRequest.identifier);\n      if (cachedRequestInstance) {\n        var requestSubscription = cachedRequestInstance.subscription;\n        if (requestSubscription != null && cachedRequestInstance.subject.getObserverCount() === 0) {\n          requestSubscription.unsubscribe();\n          requestCache[\"delete\"](cachedRequest.identifier);\n        }\n      }\n    };\n  });\n}\n\n/**\n * @private\n */\nfunction getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subjectForInFlightStatus.subscribe({\n      error: sink.error,\n      next: function next(response) {\n        if (!environment.isRequestActive(cachedRequest.identifier)) {\n          sink.complete();\n          return;\n        }\n        sink.next();\n      },\n      complete: sink.complete,\n      unsubscribe: sink.complete\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  });\n}\n\n/**\n * If a request is active for the given query, variables and environment,\n * this function will return a Promise that will resolve when that request\n * stops being active (receives a final payload), and the data has been saved\n * to the store.\n * If no request is active, null will be returned\n */\nfunction getPromiseForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  if (RelayFeatureFlags.USE_REACT_CACHE) {\n    var existing = cachedRequest.promise;\n    if (existing) {\n      return existing;\n    }\n  }\n  var promise = new Promise(function (resolve, reject) {\n    var resolveOnNext = false;\n    getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest).subscribe({\n      complete: resolve,\n      error: reject,\n      next: function next(response) {\n        /*\n         * The underlying `RelayReplaySubject` will synchronously replay events\n         * as soon as we subscribe, but since we want the *next* asynchronous\n         * one, we'll ignore them until the replay finishes.\n         */\n        if (resolveOnNext) {\n          resolve(response);\n        }\n      }\n    });\n    resolveOnNext = true;\n  });\n  if (RelayFeatureFlags.USE_REACT_CACHE) {\n    // React Suspense should get thrown the same promise each time, so we cache it.\n    // However, the promise gets resolved on each payload, so subsequently we need\n    // to provide a new fresh promise that isn't already resolved. (When the feature\n    // flag is off we do this in QueryResource.)\n    cachedRequest.promise = promise;\n    var cleanup = function cleanup() {\n      cachedRequest.promise = null;\n    };\n    promise.then(cleanup, cleanup);\n  }\n  return promise;\n}\n\n/**\n * If there is a pending request for the given query, returns an Observable of\n * *all* its responses. Existing responses are published synchronously and\n * subsequent responses are published asynchronously. Returns null if there is\n * no pending request. This is similar to fetchQuery() except that it will not\n * issue a fetch if there isn't already one pending.\n */\nfunction getObservableForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  return getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest);\n}\n\n/**\n * @private\n */\nfunction getRequestCache(environment) {\n  var cached = requestCachesByEnvironment.get(environment);\n  if (cached != null) {\n    return cached;\n  }\n  var requestCache = new Map();\n  requestCachesByEnvironment.set(environment, requestCache);\n  return requestCache;\n}\n\n/**\n * @private\n */\nfunction getCachedRequest(requestCache, identifier) {\n  var cached = requestCache.get(identifier);\n  !(cached != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] getCachedRequest: Expected request to be cached') : invariant(false) : void 0;\n  return cached;\n}\nmodule.exports = {\n  fetchQuery: fetchQuery,\n  fetchQueryDeduped: fetchQueryDeduped,\n  getPromiseForActiveRequest: getPromiseForActiveRequest,\n  getObservableForActiveRequest: getObservableForActiveRequest\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require.createOperationDescriptor;\nvar _require2 = require('./GraphQLTag'),\n  getRequest = _require2.getRequest;\n\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\n\nfunction fetchQuery_DEPRECATED(environment, taggedNode, variables, cacheConfig) {\n  var query = getRequest(taggedNode);\n  if (query.params.operationKind !== 'query') {\n    throw new Error('fetchQuery: Expected query operation');\n  }\n  var operation = createOperationDescriptor(query, variables, cacheConfig);\n  return environment.execute({\n    operation: operation\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\nmodule.exports = fetchQuery_DEPRECATED;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('../util/StringInterner'),\n  intern = _require.intern;\nvar PREFIX = 'client:';\nfunction generateClientID(id, storageKey, index) {\n  var internedId = RelayFeatureFlags.STRING_INTERN_LEVEL <= 0 ? id : intern(id, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n  var key = internedId + ':' + storageKey;\n  if (index != null) {\n    key += ':' + index;\n  }\n  if (key.indexOf(PREFIX) !== 0) {\n    key = PREFIX + key;\n  }\n  return key;\n}\nfunction isClientID(id) {\n  return id.indexOf(PREFIX) === 0;\n}\nvar localID = 0;\nfunction generateUniqueClientID() {\n  return \"\".concat(PREFIX, \"local:\").concat(localID++);\n}\n\n// Client objects backed by Relay Resolvers may not be able to provide a\n// globally unique ID, so we provide a namespace.\nfunction generateClientObjectClientID(typename, localId, index) {\n  var key = \"\".concat(PREFIX).concat(typename, \":\").concat(localId);\n  if (index != null) {\n    key += ':' + index;\n  }\n  return key;\n}\nmodule.exports = {\n  generateClientID: generateClientID,\n  generateClientObjectClientID: generateClientObjectClientID,\n  generateUniqueClientID: generateUniqueClientID,\n  isClientID: isClientID\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\nvar getOperation = require('../util/getOperation');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('./ClientID'),\n  isClientID = _require.isClientID;\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\nvar cloneRelayScalarHandleSourceField = require('./cloneRelayScalarHandleSourceField');\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayRecordState'),\n  EXISTENT = _require3.EXISTENT,\n  UNKNOWN = _require3.UNKNOWN;\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require4 = require('./TypeID'),\n  TYPE_SCHEMA_TYPE = _require4.TYPE_SCHEMA_TYPE,\n  generateTypeID = _require4.generateTypeID;\nvar invariant = require('invariant');\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n  CONDITION = RelayConcreteNode.CONDITION,\n  CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n  CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = RelayConcreteNode.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  DEFER = RelayConcreteNode.DEFER,\n  FLIGHT_FIELD = RelayConcreteNode.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n  LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n  LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n  MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n  RELAY_RESOLVER = RelayConcreteNode.RELAY_RESOLVER,\n  SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n  SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n  STREAM = RelayConcreteNode.STREAM,\n  TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR;\nvar ROOT_ID = RelayStoreUtils.ROOT_ID,\n  getModuleOperationKey = RelayStoreUtils.getModuleOperationKey,\n  getStorageKey = RelayStoreUtils.getStorageKey,\n  getArgumentValues = RelayStoreUtils.getArgumentValues;\n\n/**\n * Synchronously check whether the records required to fulfill the given\n * `selector` are present in `source`.\n *\n * If a field is missing, it uses the provided handlers to attempt to substitute\n * data. The `target` will store all records that are modified because of a\n * successful substitution.\n *\n * If all records are present, returns `true`, otherwise `false`.\n */\nfunction check(getSourceForActor, getTargetForActor, defaultActorIdentifier, selector, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var checker = new DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents);\n  return checker.check(node, dataID);\n}\n\n/**\n * @private\n */\nvar DataChecker = /*#__PURE__*/function () {\n  function DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n    this._getSourceForActor = getSourceForActor;\n    this._getTargetForActor = getTargetForActor;\n    this._getDataID = getDataID;\n    this._source = getSourceForActor(defaultActorIdentifier);\n    this._mutatorRecordSourceProxyCache = new Map();\n    var _this$_getMutatorAndR = this._getMutatorAndRecordProxyForActor(defaultActorIdentifier),\n      mutator = _this$_getMutatorAndR[0],\n      recordSourceProxy = _this$_getMutatorAndR[1];\n    this._mostRecentlyInvalidatedAt = null;\n    this._handlers = handlers;\n    this._mutator = mutator;\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._recordSourceProxy = recordSourceProxy;\n    this._recordWasMissing = false;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n  var _proto = DataChecker.prototype;\n  _proto._getMutatorAndRecordProxyForActor = function _getMutatorAndRecordProxyForActor(actorIdentifier) {\n    var tuple = this._mutatorRecordSourceProxyCache.get(actorIdentifier);\n    if (tuple == null) {\n      var target = this._getTargetForActor(actorIdentifier);\n      var mutator = new RelayRecordSourceMutator(this._getSourceForActor(actorIdentifier), target);\n      var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, undefined, this._handlers);\n      tuple = [mutator, recordSourceProxy];\n      this._mutatorRecordSourceProxyCache.set(actorIdentifier, tuple);\n    }\n    return tuple;\n  };\n  _proto.check = function check(node, dataID) {\n    this._assignClientAbstractTypes(node);\n    this._traverse(node, dataID);\n    return this._recordWasMissing === true ? {\n      status: 'missing',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    } : {\n      status: 'available',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    };\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._handleMissing = function _handleMissing() {\n    this._recordWasMissing = true;\n  };\n  _proto._handleMissingScalarField = function _handleMissingScalarField(field, dataID) {\n    if (field.name === 'id' && field.alias == null && isClientID(dataID)) {\n      return undefined;\n    }\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var handler = _step.value;\n        if (handler.kind === 'scalar') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue !== undefined) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    this._handleMissing();\n  };\n  _proto._handleMissingLinkField = function _handleMissingLinkField(field, dataID) {\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var handler = _step2.value;\n        if (handler.kind === 'linked') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue !== undefined && (newValue === null || this._mutator.getStatus(newValue) === EXISTENT)) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    this._handleMissing();\n  };\n  _proto._handleMissingPluralLinkField = function _handleMissingPluralLinkField(field, dataID) {\n    var _this = this;\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var handler = _step3.value;\n        if (handler.kind === 'pluralLinked') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue != null) {\n            var allItemsKnown = newValue.every(function (linkedID) {\n              return linkedID != null && _this._mutator.getStatus(linkedID) === EXISTENT;\n            });\n            if (allItemsKnown) {\n              return newValue;\n            }\n          } else if (newValue === null) {\n            return null;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    this._handleMissing();\n  };\n  _proto._traverse = function _traverse(node, dataID) {\n    var status = this._mutator.getStatus(dataID);\n    if (status === UNKNOWN) {\n      this._handleMissing();\n    }\n    if (status === EXISTENT) {\n      var record = this._source.get(dataID);\n      var invalidatedAt = RelayModernRecord.getInvalidationEpoch(record);\n      if (invalidatedAt != null) {\n        this._mostRecentlyInvalidatedAt = this._mostRecentlyInvalidatedAt != null ? Math.max(this._mostRecentlyInvalidatedAt, invalidatedAt) : invalidatedAt;\n      }\n      this._traverseSelections(node.selections, dataID);\n    }\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, dataID) {\n    var _this2 = this;\n    selections.forEach(function (selection) {\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n          _this2._checkScalar(selection, dataID);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this2._checkPluralLink(selection, dataID);\n          } else {\n            _this2._checkLink(selection, dataID);\n          }\n          break;\n        case ACTOR_CHANGE:\n          _this2._checkActorChange(selection.linkedField, dataID);\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(_this2._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            _this2._traverseSelections(selection.selections, dataID);\n          }\n          break;\n        case INLINE_FRAGMENT:\n          {\n            var _abstractKey = selection.abstractKey;\n            if (_abstractKey == null) {\n              // concrete type refinement: only check data if the type exactly matches\n              var typeName = _this2._mutator.getType(dataID);\n              if (typeName === selection.type) {\n                _this2._traverseSelections(selection.selections, dataID);\n              }\n            } else {\n              // Abstract refinement: check data depending on whether the type\n              // conforms to the interface/union or not:\n              // - Type known to _not_ implement the interface: don't check the selections.\n              // - Type is known _to_ implement the interface: check selections.\n              // - Unknown whether the type implements the interface: don't check the selections\n              //   and treat the data as missing; we do this because the Relay Compiler\n              //   guarantees that the type discriminator will always be fetched.\n              var _recordType = _this2._mutator.getType(dataID);\n              !(_recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n              var _typeID = generateTypeID(_recordType);\n              var _implementsInterface = _this2._mutator.getValue(_typeID, _abstractKey);\n              if (_implementsInterface === true) {\n                _this2._traverseSelections(selection.selections, dataID);\n              } else if (_implementsInterface == null) {\n                // unsure if the type implements the interface: data is\n                // missing so don't bother reading the fragment\n                _this2._handleMissing();\n              } // else false: known to not implement the interface\n            }\n\n            break;\n          }\n        case LINKED_HANDLE:\n          {\n            // Handles have no selections themselves; traverse the original field\n            // where the handle was set-up instead.\n            var handleField = cloneRelayHandleSourceField(selection, selections, _this2._variables);\n            if (handleField.plural) {\n              _this2._checkPluralLink(handleField, dataID);\n            } else {\n              _this2._checkLink(handleField, dataID);\n            }\n            break;\n          }\n        case SCALAR_HANDLE:\n          {\n            var _handleField = cloneRelayScalarHandleSourceField(selection, selections, _this2._variables);\n            _this2._checkScalar(_handleField, dataID);\n            break;\n          }\n        case MODULE_IMPORT:\n          _this2._checkModuleImport(selection, dataID);\n          break;\n        case DEFER:\n        case STREAM:\n          _this2._traverseSelections(selection.selections, dataID);\n          break;\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this2._variables;\n          _this2._variables = getLocalVariables(_this2._variables, selection.fragment.argumentDefinitions, selection.args);\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n          _this2._variables = prevVariables;\n          break;\n        case CLIENT_EXTENSION:\n          var recordWasMissing = _this2._recordWasMissing;\n          _this2._traverseSelections(selection.selections, dataID);\n          _this2._recordWasMissing = recordWasMissing;\n          break;\n        case TYPE_DISCRIMINATOR:\n          var abstractKey = selection.abstractKey;\n          var recordType = _this2._mutator.getType(dataID);\n          !(recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n          var typeID = generateTypeID(recordType);\n          var implementsInterface = _this2._mutator.getValue(typeID, abstractKey);\n          if (implementsInterface == null) {\n            // unsure if the type implements the interface: data is\n            // missing\n            _this2._handleMissing();\n          } // else: if it does or doesn't implement, we don't need to check or skip anything else\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            _this2._checkFlightField(selection, dataID);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case CLIENT_COMPONENT:\n          if (_this2._shouldProcessClientComponents === false) {\n            break;\n          }\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n          break;\n        case RELAY_RESOLVER:\n          _this2._checkResolver(selection, dataID);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          _this2._checkResolver(selection.backingField, dataID);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    });\n  };\n  _proto._checkResolver = function _checkResolver(resolver, dataID) {\n    if (resolver.fragment) {\n      this._traverseSelections([resolver.fragment], dataID);\n    }\n  };\n  _proto._checkModuleImport = function _checkModuleImport(moduleImport, dataID) {\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using `@module`.') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = this._mutator.getValue(dataID, operationKey);\n    if (operationReference == null) {\n      if (operationReference === undefined) {\n        this._handleMissing();\n      }\n      return;\n    }\n    var normalizationRootNode = operationLoader.get(operationReference);\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n      this._traverse(operation, dataID);\n      this._variables = prevVariables;\n    } else {\n      // If the fragment is not available, we assume that the data cannot have been\n      // processed yet and must therefore be missing.\n      this._handleMissing();\n    }\n  };\n  _proto._checkScalar = function _checkScalar(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = this._mutator.getValue(dataID, storageKey);\n    if (fieldValue === undefined) {\n      fieldValue = this._handleMissingScalarField(field, dataID);\n      if (fieldValue !== undefined) {\n        this._mutator.setValue(dataID, storageKey, fieldValue);\n      }\n    }\n  };\n  _proto._checkLink = function _checkLink(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n    if (linkedID === undefined) {\n      linkedID = this._handleMissingLinkField(field, dataID);\n      if (linkedID != null) {\n        this._mutator.setLinkedRecordID(dataID, storageKey, linkedID);\n      } else if (linkedID === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n    if (linkedID != null) {\n      this._traverse(field, linkedID);\n    }\n  };\n  _proto._checkPluralLink = function _checkPluralLink(field, dataID) {\n    var _this3 = this;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = this._mutator.getLinkedRecordIDs(dataID, storageKey);\n    if (linkedIDs === undefined) {\n      linkedIDs = this._handleMissingPluralLinkField(field, dataID);\n      if (linkedIDs != null) {\n        this._mutator.setLinkedRecordIDs(dataID, storageKey, linkedIDs);\n      } else if (linkedIDs === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n    if (linkedIDs) {\n      linkedIDs.forEach(function (linkedID) {\n        if (linkedID != null) {\n          _this3._traverse(field, linkedID);\n        }\n      });\n    }\n  };\n  _proto._checkActorChange = function _checkActorChange(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var record = this._source.get(dataID);\n    var tuple = record != null ? RelayModernRecord.getActorLinkedRecordID(record, storageKey) : record;\n    if (tuple == null) {\n      if (tuple === undefined) {\n        this._handleMissing();\n      }\n    } else {\n      var actorIdentifier = tuple[0],\n        linkedID = tuple[1];\n      var prevSource = this._source;\n      var prevMutator = this._mutator;\n      var prevRecordSourceProxy = this._recordSourceProxy;\n      var _this$_getMutatorAndR2 = this._getMutatorAndRecordProxyForActor(actorIdentifier),\n        mutator = _this$_getMutatorAndR2[0],\n        recordSourceProxy = _this$_getMutatorAndR2[1];\n      this._source = this._getSourceForActor(actorIdentifier);\n      this._mutator = mutator;\n      this._recordSourceProxy = recordSourceProxy;\n      this._assignClientAbstractTypes(field);\n      this._traverse(field, linkedID);\n      this._source = prevSource;\n      this._mutator = prevMutator;\n      this._recordSourceProxy = prevRecordSourceProxy;\n    }\n  };\n  _proto._checkFlightField = function _checkFlightField(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n    if (linkedID == null) {\n      if (linkedID === undefined) {\n        this._handleMissing();\n        return;\n      }\n      return;\n    }\n    var tree = this._mutator.getValue(linkedID, RelayStoreReactFlightUtils.REACT_FLIGHT_TREE_STORAGE_KEY);\n    var reachableExecutableDefinitions = this._mutator.getValue(linkedID, RelayStoreReactFlightUtils.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY);\n    if (tree == null || !Array.isArray(reachableExecutableDefinitions)) {\n      this._handleMissing();\n      return;\n    }\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using ' + 'React Flight.') : invariant(false) : void 0;\n    // In Flight, the variables that are in scope for reachable executable\n    // definitions aren't the same as what's in scope for the outer query.\n    var prevVariables = this._variables;\n    // $FlowFixMe[incompatible-cast]\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(reachableExecutableDefinitions),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var definition = _step4.value;\n        this._variables = definition.variables;\n        var normalizationRootNode = operationLoader.get(definition.module);\n        if (normalizationRootNode != null) {\n          var operation = getOperation(normalizationRootNode);\n          this._traverseSelections(operation.selections, ROOT_ID);\n        } else {\n          // If the fragment is not available, we assume that the data cannot have\n          // been processed yet and must therefore be missing.\n          this._handleMissing();\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    this._variables = prevVariables;\n  }\n\n  // For abstract types defined in the client schema extension, we won't be\n  // getting `__is<AbstractType>` hints from the server. To handle this, the\n  // compiler attaches additional metadata on the normalization artifact,\n  // which we need to record into the store.\n  ;\n  _proto._assignClientAbstractTypes = function _assignClientAbstractTypes(node) {\n    var clientAbstractTypes = node.clientAbstractTypes;\n    if (clientAbstractTypes != null) {\n      for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {\n        var abstractType = _Object$keys[_i];\n        var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(clientAbstractTypes[abstractType]),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var concreteType = _step5.value;\n            var typeID = generateTypeID(concreteType);\n            if (this._source.get(typeID) == null) {\n              this._mutator.create(typeID, TYPE_SCHEMA_TYPE);\n            }\n            if (this._mutator.getValue(typeID, abstractType) == null) {\n              this._mutator.setValue(typeID, abstractType, true);\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  };\n  return DataChecker;\n}();\nmodule.exports = {\n  check: check\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar generateID = require('../util/generateID');\nvar getOperation = require('../util/getOperation');\nvar RelayError = require('../util/RelayError');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar stableCopy = require('../util/stableCopy');\nvar withDuration = require('../util/withDuration');\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID;\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require3.createNormalizationSelector,\n  createReaderSelector = _require3.createReaderSelector;\nvar RelayRecordSource = require('./RelayRecordSource');\nvar RelayResponseNormalizer = require('./RelayResponseNormalizer');\nvar _require4 = require('./RelayStoreUtils'),\n  ROOT_TYPE = _require4.ROOT_TYPE,\n  TYPENAME_KEY = _require4.TYPENAME_KEY,\n  getStorageKey = _require4.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction execute(config) {\n  return new Executor(config);\n}\n\n/**\n * Coordinates the execution of a query, handling network callbacks\n * including optimistic payloads, standard payloads, resolution of match\n * dependencies, etc.\n */\nvar Executor = /*#__PURE__*/function () {\n  function Executor(_ref2) {\n    var _this = this;\n    var actorIdentifier = _ref2.actorIdentifier,\n      getDataID = _ref2.getDataID,\n      getPublishQueue = _ref2.getPublishQueue,\n      getStore = _ref2.getStore,\n      isClientPayload = _ref2.isClientPayload,\n      operation = _ref2.operation,\n      operationExecutions = _ref2.operationExecutions,\n      operationLoader = _ref2.operationLoader,\n      operationTracker = _ref2.operationTracker,\n      optimisticConfig = _ref2.optimisticConfig,\n      _reactFlightPayloadDeserializer = _ref2.reactFlightPayloadDeserializer,\n      reactFlightServerErrorHandler = _ref2.reactFlightServerErrorHandler,\n      scheduler = _ref2.scheduler,\n      shouldProcessClientComponents = _ref2.shouldProcessClientComponents,\n      sink = _ref2.sink,\n      source = _ref2.source,\n      treatMissingFieldsAsNull = _ref2.treatMissingFieldsAsNull,\n      updater = _ref2.updater,\n      log = _ref2.log;\n    (0, _defineProperty2[\"default\"])(this, \"_deserializeReactFlightPayloadWithLogging\", function (tree) {\n      var reactFlightPayloadDeserializer = _this._reactFlightPayloadDeserializer;\n      !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected reactFlightPayloadDeserializer to be available when calling _deserializeReactFlightPayloadWithLogging.') : invariant(false) : void 0;\n      var _withDuration = withDuration(function () {\n          return reactFlightPayloadDeserializer(tree);\n        }),\n        duration = _withDuration[0],\n        result = _withDuration[1];\n      _this._log({\n        name: 'execute.flight.payload_deserialize',\n        executeId: _this._executeId,\n        operationName: _this._operation.request.node.params.name,\n        duration: duration\n      });\n      return result;\n    });\n    this._actorIdentifier = actorIdentifier;\n    this._getDataID = getDataID;\n    this._treatMissingFieldsAsNull = treatMissingFieldsAsNull;\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults = new Map();\n    this._log = log;\n    this._executeId = generateID();\n    this._nextSubscriptionId = 0;\n    this._operation = operation;\n    this._operationExecutions = operationExecutions;\n    this._operationLoader = operationLoader;\n    this._operationTracker = operationTracker;\n    this._operationUpdateEpochs = new Map();\n    this._optimisticUpdates = null;\n    this._pendingModulePayloadsCount = 0;\n    this._getPublishQueue = getPublishQueue;\n    this._scheduler = scheduler;\n    this._sink = sink;\n    this._source = new Map();\n    this._state = 'started';\n    this._getStore = getStore;\n    this._subscriptions = new Map();\n    this._updater = updater;\n    this._isClientPayload = isClientPayload === true;\n    this._reactFlightPayloadDeserializer = _reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._isSubscriptionOperation = this._operation.request.node.params.operationKind === 'subscription';\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n    this._retainDisposables = new Map();\n    this._seenActors = new Set();\n    this._completeFns = [];\n    var id = this._nextSubscriptionId++;\n    source.subscribe({\n      complete: function complete() {\n        return _this._complete(id);\n      },\n      error: function error(_error2) {\n        return _this._error(_error2);\n      },\n      next: function next(response) {\n        try {\n          _this._next(id, response);\n        } catch (error) {\n          sink.error(error);\n        }\n      },\n      start: function start(subscription) {\n        var _this$_operation$requ;\n        _this._start(id, subscription);\n        _this._log({\n          name: 'execute.start',\n          executeId: _this._executeId,\n          params: _this._operation.request.node.params,\n          variables: _this._operation.request.variables,\n          cacheConfig: (_this$_operation$requ = _this._operation.request.cacheConfig) !== null && _this$_operation$requ !== void 0 ? _this$_operation$requ : {}\n        });\n      }\n    });\n    if (optimisticConfig != null) {\n      this._processOptimisticResponse(optimisticConfig.response != null ? {\n        data: optimisticConfig.response\n      } : null, optimisticConfig.updater, false);\n    }\n  }\n\n  // Cancel any pending execution tasks and mark the executor as completed.\n  var _proto = Executor.prototype;\n  _proto.cancel = function cancel() {\n    var _this2 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    this._state = 'completed';\n    this._operationExecutions[\"delete\"](this._operation.request.identifier);\n    if (this._subscriptions.size !== 0) {\n      this._subscriptions.forEach(function (sub) {\n        return sub.unsubscribe();\n      });\n      this._subscriptions.clear();\n    }\n    var optimisticUpdates = this._optimisticUpdates;\n    if (optimisticUpdates !== null) {\n      this._optimisticUpdates = null;\n      optimisticUpdates.forEach(function (update) {\n        return _this2._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      // OK: run revert on cancel\n      this._runPublishQueue();\n    }\n    this._incrementalResults.clear();\n    if (this._asyncStoreUpdateDisposable != null) {\n      this._asyncStoreUpdateDisposable.dispose();\n      this._asyncStoreUpdateDisposable = null;\n    }\n    this._completeFns = [];\n    this._completeOperationTracker();\n    this._disposeRetainedData();\n  };\n  _proto._updateActiveState = function _updateActiveState() {\n    var activeState;\n    switch (this._state) {\n      case 'started':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'loading_incremental':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'completed':\n        {\n          activeState = 'inactive';\n          break;\n        }\n      case 'loading_final':\n        {\n          activeState = this._pendingModulePayloadsCount > 0 ? 'active' : 'inactive';\n          break;\n        }\n      default:\n        this._state;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid executor state.') : invariant(false) : void 0;\n    }\n    this._operationExecutions.set(this._operation.request.identifier, activeState);\n  };\n  _proto._schedule = function _schedule(task) {\n    var _this3 = this;\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      var id = this._nextSubscriptionId++;\n      RelayObservable.create(function (sink) {\n        var cancellationToken = scheduler.schedule(function () {\n          try {\n            task();\n            sink.complete();\n          } catch (error) {\n            sink.error(error);\n          }\n        });\n        return function () {\n          return scheduler.cancel(cancellationToken);\n        };\n      }).subscribe({\n        complete: function complete() {\n          return _this3._complete(id);\n        },\n        error: function error(_error3) {\n          return _this3._error(_error3);\n        },\n        start: function start(subscription) {\n          return _this3._start(id, subscription);\n        }\n      });\n    } else {\n      task();\n    }\n  };\n  _proto._complete = function _complete(id) {\n    this._subscriptions[\"delete\"](id);\n    if (this._subscriptions.size === 0) {\n      this.cancel();\n      this._sink.complete();\n      this._log({\n        name: 'execute.complete',\n        executeId: this._executeId\n      });\n    }\n  };\n  _proto._error = function _error(error) {\n    this.cancel();\n    this._sink.error(error);\n    this._log({\n      name: 'execute.error',\n      executeId: this._executeId,\n      error: error\n    });\n  };\n  _proto._start = function _start(id, subscription) {\n    this._subscriptions.set(id, subscription);\n    this._updateActiveState();\n  }\n\n  // Handle a raw GraphQL response.\n  ;\n  _proto._next = function _next(_id, response) {\n    var _this4 = this;\n    this._schedule(function () {\n      var _withDuration2 = withDuration(function () {\n          _this4._handleNext(response);\n          _this4._maybeCompleteSubscriptionOperationTracking();\n        }),\n        duration = _withDuration2[0];\n      _this4._log({\n        name: 'execute.next',\n        executeId: _this4._executeId,\n        response: response,\n        duration: duration\n      });\n    });\n  };\n  _proto._handleErrorResponse = function _handleErrorResponse(responses) {\n    var _this5 = this;\n    var results = [];\n    responses.forEach(function (response) {\n      if (response.data === null && response.extensions != null && !response.hasOwnProperty('errors')) {\n        // Skip extensions-only payloads\n        return;\n      } else if (response.data == null) {\n        // Error if any other payload in the batch is missing data, regardless of whether\n        // it had `errors` or not.\n        var errors = response.hasOwnProperty('errors') && response.errors != null ? response.errors : null;\n        var messages = errors ? errors.map(function (_ref3) {\n          var message = _ref3.message;\n          return message;\n        }).join('\\n') : '(No errors)';\n        var error = RelayError.create('RelayNetwork', 'No data returned for operation `' + _this5._operation.request.node.params.name + '`, got error(s):\\n' + messages + '\\n\\nSee the error `source` property for more information.');\n        error.source = {\n          errors: errors,\n          operation: _this5._operation.request.node,\n          variables: _this5._operation.request.variables\n        };\n        // In V8, Error objects keep the closure scope chain alive until the\n        // err.stack property is accessed.\n        error.stack;\n        throw error;\n      } else {\n        var responseWithData = response;\n        results.push(responseWithData);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * This method return boolean to indicate if the optimistic\n   * response has been handled\n   */;\n  _proto._handleOptimisticResponses = function _handleOptimisticResponses(responses) {\n    var _response$extensions;\n    if (responses.length > 1) {\n      if (responses.some(function (responsePart) {\n        var _responsePart$extensi;\n        return ((_responsePart$extensi = responsePart.extensions) === null || _responsePart$extensi === void 0 ? void 0 : _responsePart$extensi.isOptimistic) === true;\n      })) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Optimistic responses cannot be batched.') : invariant(false) : void 0;\n      }\n      return false;\n    }\n    var response = responses[0];\n    var isOptimistic = ((_response$extensions = response.extensions) === null || _response$extensions === void 0 ? void 0 : _response$extensions.isOptimistic) === true;\n    if (isOptimistic && this._state !== 'started') {\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic payload received after server payload.') : invariant(false) : void 0;\n    }\n    if (isOptimistic) {\n      this._processOptimisticResponse(response, null, this._treatMissingFieldsAsNull);\n      this._sink.next(response);\n      return true;\n    }\n    return false;\n  };\n  _proto._handleNext = function _handleNext(response) {\n    if (this._state === 'completed') {\n      return;\n    }\n    this._seenActors.clear();\n    var responses = Array.isArray(response) ? response : [response];\n    var responsesWithData = this._handleErrorResponse(responses);\n    if (responsesWithData.length === 0) {\n      // no results with data, nothing to process\n      // this can occur with extensions-only payloads\n      var isFinal = responses.some(function (x) {\n        var _x$extensions;\n        return ((_x$extensions = x.extensions) === null || _x$extensions === void 0 ? void 0 : _x$extensions.is_final) === true;\n      });\n      if (isFinal) {\n        this._state = 'loading_final';\n        this._updateActiveState();\n        this._incrementalPayloadsPending = false;\n      }\n      this._sink.next(response);\n      return;\n    }\n\n    // Next, handle optimistic responses\n    var isOptimistic = this._handleOptimisticResponses(responsesWithData);\n    if (isOptimistic) {\n      return;\n    }\n    var _partitionGraphQLResp = partitionGraphQLResponses(responsesWithData),\n      nonIncrementalResponses = _partitionGraphQLResp[0],\n      incrementalResponses = _partitionGraphQLResp[1];\n    var hasNonIncrementalResponses = nonIncrementalResponses.length > 0;\n\n    // In theory this doesn't preserve the ordering of the batch.\n    // The idea is that a batch is always:\n    //  * at most one non-incremental payload\n    //  * followed by zero or more incremental payloads\n    // The non-incremental payload can appear if the server sends a batch\n    // with the initial payload followed by some early-to-resolve incremental\n    // payloads (although, can that even happen?)\n    if (hasNonIncrementalResponses) {\n      // For subscriptions, to avoid every new payload from overwriting existing\n      // data from previous payloads, assign a unique rootID for every new\n      // non-incremental payload.\n      if (this._isSubscriptionOperation) {\n        var nextID = generateUniqueClientID();\n        this._operation = {\n          request: this._operation.request,\n          fragment: createReaderSelector(this._operation.fragment.node, nextID, this._operation.fragment.variables, this._operation.fragment.owner),\n          root: createNormalizationSelector(this._operation.root.node, nextID, this._operation.root.variables)\n        };\n      }\n      var payloadFollowups = this._processResponses(nonIncrementalResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n    if (incrementalResponses.length > 0) {\n      var _payloadFollowups = this._processIncrementalResponses(incrementalResponses);\n      this._processPayloadFollowups(_payloadFollowups);\n    }\n    if (this._isSubscriptionOperation) {\n      // We attach the id to allow the `requestSubscription` to read from the store using\n      // the current id in its `onNext` callback\n      if (responsesWithData[0].extensions == null) {\n        // $FlowFixMe[cannot-write]\n        responsesWithData[0].extensions = {\n          __relay_subscription_root_id: this._operation.fragment.dataID\n        };\n      } else {\n        responsesWithData[0].extensions.__relay_subscription_root_id = this._operation.fragment.dataID;\n      }\n    }\n\n    // OK: run once after each new payload\n    // If we have non-incremental responses, we passing `this._operation` to\n    // the publish queue here, which will later be passed to the store (via\n    // notify) to indicate that this operation caused the store to update\n    var updatedOwners = this._runPublishQueue(hasNonIncrementalResponses ? this._operation : undefined);\n    if (hasNonIncrementalResponses) {\n      if (this._incrementalPayloadsPending) {\n        this._retainData();\n      }\n    }\n    this._updateOperationTracker(updatedOwners);\n    this._sink.next(response);\n  };\n  _proto._processOptimisticResponse = function _processOptimisticResponse(response, updater, treatMissingFieldsAsNull) {\n    var _this6 = this;\n    !(this._optimisticUpdates === null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: environment.execute: only support one optimistic response per ' + 'execute.') : invariant(false) : void 0;\n    if (response == null && updater == null) {\n      return;\n    }\n    var optimisticUpdates = [];\n    if (response) {\n      var payload = normalizeResponse(response, this._operation.root, ROOT_TYPE, {\n        actorIdentifier: this._actorIdentifier,\n        getDataID: this._getDataID,\n        path: [],\n        reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n        reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n        shouldProcessClientComponents: this._shouldProcessClientComponents,\n        treatMissingFieldsAsNull: treatMissingFieldsAsNull\n      });\n      validateOptimisticResponsePayload(payload);\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: payload,\n        updater: updater\n      });\n      this._processOptimisticFollowups(payload, optimisticUpdates);\n    } else if (updater) {\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: {\n          errors: null,\n          fieldPayloads: null,\n          incrementalPlaceholders: null,\n          followupPayloads: null,\n          source: RelayRecordSource.create(),\n          isFinal: false\n        },\n        updater: updater\n      });\n    }\n    this._optimisticUpdates = optimisticUpdates;\n    optimisticUpdates.forEach(function (update) {\n      return _this6._getPublishQueueAndSaveActor().applyUpdate(update);\n    });\n    // OK: only called on construction and when receiving an optimistic payload from network,\n    // which doesn't fall-through to the regular next() handling\n    this._runPublishQueue();\n  };\n  _proto._processOptimisticFollowups = function _processOptimisticFollowups(payload, optimisticUpdates) {\n    if (payload.followupPayloads && payload.followupPayloads.length) {\n      var followupPayloads = payload.followupPayloads;\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(followupPayloads),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var followupPayload = _step.value;\n          switch (followupPayload.kind) {\n            case 'ModuleImportPayload':\n              var operationLoader = this._expectOperationLoader();\n              var operation = operationLoader.get(followupPayload.operationReference);\n              if (operation == null) {\n                this._processAsyncOptimisticModuleImport(followupPayload);\n              } else {\n                var moduleImportOptimisticUpdates = this._processOptimisticModuleImport(operation, followupPayload);\n                optimisticUpdates.push.apply(optimisticUpdates, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n              }\n              break;\n            case 'ActorPayload':\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected optimistic ActorPayload. These updates are not supported.') : void 0;\n              break;\n            default:\n              followupPayload;\n              !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`. when processing optimistic updates.', followupPayload.kind) : invariant(false) : void 0;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n\n  /**\n   * Normalize Data for @module payload, and actor-specific payload\n   */;\n  _proto._normalizeFollowupPayload = function _normalizeFollowupPayload(followupPayload, normalizationNode) {\n    var variables;\n    if (normalizationNode.kind === 'SplitOperation' && followupPayload.kind === 'ModuleImportPayload') {\n      variables = getLocalVariables(followupPayload.variables, normalizationNode.argumentDefinitions, followupPayload.args);\n    } else {\n      variables = followupPayload.variables;\n    }\n    var selector = createNormalizationSelector(normalizationNode, followupPayload.dataID, variables);\n    return normalizeResponse({\n      data: followupPayload.data\n    }, selector, followupPayload.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: followupPayload.path,\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n  };\n  _proto._processOptimisticModuleImport = function _processOptimisticModuleImport(normalizationRootNode, moduleImportPayload) {\n    var operation = getOperation(normalizationRootNode);\n    var optimisticUpdates = [];\n    var modulePayload = this._normalizeFollowupPayload(moduleImportPayload, operation);\n    validateOptimisticResponsePayload(modulePayload);\n    optimisticUpdates.push({\n      operation: this._operation,\n      payload: modulePayload,\n      updater: null\n    });\n    this._processOptimisticFollowups(modulePayload, optimisticUpdates);\n    return optimisticUpdates;\n  };\n  _proto._processAsyncOptimisticModuleImport = function _processAsyncOptimisticModuleImport(moduleImportPayload) {\n    var _this7 = this;\n    // $FlowFixMe[unused-promise]\n    this._expectOperationLoader().load(moduleImportPayload.operationReference).then(function (operation) {\n      if (operation == null || _this7._state !== 'started') {\n        return;\n      }\n      var moduleImportOptimisticUpdates = _this7._processOptimisticModuleImport(operation, moduleImportPayload);\n      moduleImportOptimisticUpdates.forEach(function (update) {\n        return _this7._getPublishQueueAndSaveActor().applyUpdate(update);\n      });\n      if (_this7._optimisticUpdates == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected ModuleImport optimistic ' + 'update in operation %s.' + _this7._operation.request.node.params.name) : void 0;\n      } else {\n        var _this$_optimisticUpda;\n        (_this$_optimisticUpda = _this7._optimisticUpdates).push.apply(_this$_optimisticUpda, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n        // OK: always have to run() after an module import resolves async\n        _this7._runPublishQueue();\n      }\n    });\n  };\n  _proto._processResponses = function _processResponses(responses) {\n    var _this8 = this;\n    if (this._optimisticUpdates !== null) {\n      this._optimisticUpdates.forEach(function (update) {\n        _this8._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._optimisticUpdates = null;\n    }\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults.clear();\n    this._source.clear();\n    return responses.map(function (payloadPart) {\n      var relayPayload = normalizeResponse(payloadPart, _this8._operation.root, ROOT_TYPE, {\n        actorIdentifier: _this8._actorIdentifier,\n        getDataID: _this8._getDataID,\n        path: [],\n        reactFlightPayloadDeserializer: _this8._reactFlightPayloadDeserializer != null ? _this8._deserializeReactFlightPayloadWithLogging : null,\n        reactFlightServerErrorHandler: _this8._reactFlightServerErrorHandler,\n        treatMissingFieldsAsNull: _this8._treatMissingFieldsAsNull,\n        shouldProcessClientComponents: _this8._shouldProcessClientComponents\n      });\n      _this8._getPublishQueueAndSaveActor().commitPayload(_this8._operation, relayPayload, _this8._updater);\n      return relayPayload;\n    });\n  }\n\n  /**\n   * Handles any follow-up actions for a Relay payload for @match, @defer,\n   * and @stream directives.\n   */;\n  _proto._processPayloadFollowups = function _processPayloadFollowups(payloads) {\n    var _this9 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    payloads.forEach(function (payload) {\n      var incrementalPlaceholders = payload.incrementalPlaceholders,\n        followupPayloads = payload.followupPayloads,\n        isFinal = payload.isFinal;\n      _this9._state = isFinal ? 'loading_final' : 'loading_incremental';\n      _this9._updateActiveState();\n      if (isFinal) {\n        _this9._incrementalPayloadsPending = false;\n      }\n      if (followupPayloads && followupPayloads.length !== 0) {\n        followupPayloads.forEach(function (followupPayload) {\n          var _followupPayload$acto;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_followupPayload$acto = followupPayload.actorIdentifier) !== null && _followupPayload$acto !== void 0 ? _followupPayload$acto : _this9._actorIdentifier;\n          _this9._processFollowupPayload(followupPayload);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n      }\n      if (incrementalPlaceholders && incrementalPlaceholders.length !== 0) {\n        _this9._incrementalPayloadsPending = _this9._state !== 'loading_final';\n        incrementalPlaceholders.forEach(function (incrementalPlaceholder) {\n          var _incrementalPlacehold;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_incrementalPlacehold = incrementalPlaceholder.actorIdentifier) !== null && _incrementalPlacehold !== void 0 ? _incrementalPlacehold : _this9._actorIdentifier;\n          _this9._processIncrementalPlaceholder(payload, incrementalPlaceholder);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n        if (_this9._isClientPayload || _this9._state === 'loading_final') {\n          // The query has defer/stream selections that are enabled, but either\n          // the server indicated that this is a \"final\" payload: no incremental\n          // payloads will be delivered, then warn that the query was (likely)\n          // executed on the server in non-streaming mode, with incremental\n          // delivery disabled; or this is a client payload, and there will be\n          // no incremental payload.\n          process.env.NODE_ENV !== \"production\" ? warning(_this9._isClientPayload, 'RelayModernEnvironment: Operation `%s` contains @defer/@stream ' + 'directives but was executed in non-streaming mode. See ' + 'https://fburl.com/relay-incremental-delivery-non-streaming-warning.', _this9._operation.request.node.params.name) : void 0;\n          // But eagerly process any deferred payloads\n          var relayPayloads = [];\n          incrementalPlaceholders.forEach(function (placeholder) {\n            if (placeholder.kind === 'defer') {\n              relayPayloads.push(_this9._processDeferResponse(placeholder.label, placeholder.path, placeholder, {\n                data: placeholder.data\n              }));\n            }\n          });\n          if (relayPayloads.length > 0) {\n            _this9._processPayloadFollowups(relayPayloads);\n          }\n        }\n      }\n    });\n  };\n  _proto._maybeCompleteSubscriptionOperationTracking = function _maybeCompleteSubscriptionOperationTracking() {\n    if (!this._isSubscriptionOperation) {\n      return;\n    }\n    if (this._pendingModulePayloadsCount === 0 && this._incrementalPayloadsPending === false) {\n      this._completeOperationTracker();\n    }\n  }\n\n  /**\n   * Processes a ModuleImportPayload, asynchronously resolving the normalization\n   * AST and using it to normalize the field data into a RelayResponsePayload.\n   * The resulting payload may contain other incremental payloads (match,\n   * defer, stream, etc); these are handled by calling\n   * `_processPayloadFollowups()`.\n   */;\n  _proto._processFollowupPayload = function _processFollowupPayload(followupPayload) {\n    var _this10 = this;\n    switch (followupPayload.kind) {\n      case 'ModuleImportPayload':\n        var operationLoader = this._expectOperationLoader();\n        var node = operationLoader.get(followupPayload.operationReference);\n        if (node != null) {\n          // If the operation module is available synchronously, normalize the\n          // data synchronously.\n          this._processFollowupPayloadWithNormalizationNode(followupPayload, getOperation(node));\n        } else {\n          // Otherwise load the operation module and schedule a task to normalize\n          // the data when the module is available.\n          var id = this._nextSubscriptionId++;\n          this._pendingModulePayloadsCount++;\n          var decrementPendingCount = function decrementPendingCount() {\n            _this10._pendingModulePayloadsCount--;\n            _this10._maybeCompleteSubscriptionOperationTracking();\n          };\n\n          // Observable.from(operationLoader.load()) wouldn't catch synchronous\n          // errors thrown by the load function, which is user-defined. Guard\n          // against that with Observable.from(new Promise(<work>)).\n          var networkObservable = RelayObservable.from(new Promise(function (resolve, reject) {\n            operationLoader.load(followupPayload.operationReference).then(resolve, reject);\n          }));\n          RelayObservable.create(function (sink) {\n            var cancellationToken;\n            var subscription = networkObservable.subscribe({\n              next: function next(loadedNode) {\n                if (loadedNode != null) {\n                  var publishModuleImportPayload = function publishModuleImportPayload() {\n                    try {\n                      var operation = getOperation(loadedNode);\n                      var batchAsyncModuleUpdatesFN = RelayFeatureFlags.BATCH_ASYNC_MODULE_UPDATES_FN;\n                      var shouldScheduleAsyncStoreUpdate = batchAsyncModuleUpdatesFN != null && _this10._pendingModulePayloadsCount > 1;\n                      var _withDuration3 = withDuration(function () {\n                          _this10._handleFollowupPayload(followupPayload, operation);\n                          // OK: always have to run after an async module import resolves\n                          if (shouldScheduleAsyncStoreUpdate) {\n                            _this10._scheduleAsyncStoreUpdate(\n                            // $FlowFixMe[incompatible-call] `shouldScheduleAsyncStoreUpdate` check should cover `null` case\n                            batchAsyncModuleUpdatesFN, sink.complete);\n                          } else {\n                            var updatedOwners = _this10._runPublishQueue();\n                            _this10._updateOperationTracker(updatedOwners);\n                          }\n                        }),\n                        duration = _withDuration3[0];\n                      _this10._log({\n                        name: 'execute.async.module',\n                        executeId: _this10._executeId,\n                        operationName: operation.name,\n                        duration: duration\n                      });\n                      if (!shouldScheduleAsyncStoreUpdate) {\n                        sink.complete();\n                      }\n                    } catch (error) {\n                      sink.error(error);\n                    }\n                  };\n                  var scheduler = _this10._scheduler;\n                  if (scheduler == null) {\n                    publishModuleImportPayload();\n                  } else {\n                    cancellationToken = scheduler.schedule(publishModuleImportPayload);\n                  }\n                } else {\n                  sink.complete();\n                }\n              },\n              error: sink.error\n            });\n            return function () {\n              subscription.unsubscribe();\n              if (_this10._scheduler != null && cancellationToken != null) {\n                _this10._scheduler.cancel(cancellationToken);\n              }\n            };\n          }).subscribe({\n            complete: function complete() {\n              _this10._complete(id);\n              decrementPendingCount();\n            },\n            error: function error(_error4) {\n              _this10._error(_error4);\n              decrementPendingCount();\n            },\n            start: function start(subscription) {\n              return _this10._start(id, subscription);\n            }\n          });\n        }\n        break;\n      case 'ActorPayload':\n        this._processFollowupPayloadWithNormalizationNode(followupPayload, followupPayload.node);\n        break;\n      default:\n        followupPayload;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`.', followupPayload.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._processFollowupPayloadWithNormalizationNode = function _processFollowupPayloadWithNormalizationNode(followupPayload, normalizationNode) {\n    this._handleFollowupPayload(followupPayload, normalizationNode);\n    this._maybeCompleteSubscriptionOperationTracking();\n  };\n  _proto._handleFollowupPayload = function _handleFollowupPayload(followupPayload, normalizationNode) {\n    var relayPayload = this._normalizeFollowupPayload(followupPayload, normalizationNode);\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    this._processPayloadFollowups([relayPayload]);\n  }\n\n  /**\n   * The executor now knows that GraphQL responses are expected for a given\n   * label/path:\n   * - Store the placeholder in order to process any future responses that may\n   *   arrive.\n   * - Then process any responses that had already arrived.\n   *\n   * The placeholder contains the normalization selector, path (for nested\n   * defer/stream), and other metadata used to normalize the incremental\n   * response(s).\n   */;\n  _proto._processIncrementalPlaceholder = function _processIncrementalPlaceholder(relayPayload, placeholder) {\n    var _relayPayload$fieldPa;\n    // Update the label => path => placeholder map\n    var label = placeholder.label,\n      path = placeholder.path;\n    var pathKey = path.map(String).join('.');\n    var resultForLabel = this._incrementalResults.get(label);\n    if (resultForLabel == null) {\n      resultForLabel = new Map();\n      this._incrementalResults.set(label, resultForLabel);\n    }\n    var resultForPath = resultForLabel.get(pathKey);\n    var pendingResponses = resultForPath != null && resultForPath.kind === 'response' ? resultForPath.responses : null;\n    resultForLabel.set(pathKey, {\n      kind: 'placeholder',\n      placeholder: placeholder\n    });\n\n    // Store references to the parent node to allow detecting concurrent\n    // modifications to the parent before items arrive and to replay\n    // handle field payloads to account for new information on source records.\n    var parentID;\n    if (placeholder.kind === 'stream') {\n      parentID = placeholder.parentID;\n    } else if (placeholder.kind === 'defer') {\n      parentID = placeholder.selector.dataID;\n    } else {\n      placeholder;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unsupported incremental placeholder kind `%s`.', placeholder.kind) : invariant(false) : void 0;\n    }\n    var parentRecord = relayPayload.source.get(parentID);\n    var parentPayloads = ((_relayPayload$fieldPa = relayPayload.fieldPayloads) !== null && _relayPayload$fieldPa !== void 0 ? _relayPayload$fieldPa : []).filter(function (fieldPayload) {\n      var fieldID = generateClientID(fieldPayload.dataID, fieldPayload.fieldKey);\n      return (\n        // handlers applied to the streamed field itself\n        fieldPayload.dataID === parentID ||\n        // handlers applied to a field on an ancestor object, where\n        // ancestor.field links to the parent record (example: connections)\n        fieldID === parentID\n      );\n    });\n    // If an incremental payload exists for some id that record should also\n    // exist.\n    !(parentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to exist.', parentID) : invariant(false) : void 0;\n    var nextParentRecord;\n    var nextParentPayloads;\n    var previousParentEntry = this._source.get(parentID);\n    if (previousParentEntry != null) {\n      // If a previous entry exists, merge the previous/next records and\n      // payloads together.\n      nextParentRecord = RelayModernRecord.update(previousParentEntry.record, parentRecord);\n      var handlePayloads = new Map();\n      var dedupePayload = function dedupePayload(payload) {\n        var key = stableStringify(payload);\n        handlePayloads.set(key, payload);\n      };\n      previousParentEntry.fieldPayloads.forEach(dedupePayload);\n      parentPayloads.forEach(dedupePayload);\n      nextParentPayloads = Array.from(handlePayloads.values());\n    } else {\n      nextParentRecord = parentRecord;\n      nextParentPayloads = parentPayloads;\n    }\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: nextParentPayloads\n    });\n\n    // If there were any queued responses, process them now that placeholders\n    // are in place\n    if (pendingResponses != null) {\n      var payloadFollowups = this._processIncrementalResponses(pendingResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n  }\n\n  /**\n   * Lookup the placeholder the describes how to process an incremental\n   * response, normalize/publish it, and process any nested defer/match/stream\n   * metadata.\n   */;\n  _proto._processIncrementalResponses = function _processIncrementalResponses(incrementalResponses) {\n    var _this11 = this;\n    var relayPayloads = [];\n    incrementalResponses.forEach(function (incrementalResponse) {\n      var label = incrementalResponse.label,\n        path = incrementalResponse.path,\n        response = incrementalResponse.response;\n      var resultForLabel = _this11._incrementalResults.get(label);\n      if (resultForLabel == null) {\n        resultForLabel = new Map();\n        _this11._incrementalResults.set(label, resultForLabel);\n      }\n      if (label.indexOf('$defer$') !== -1) {\n        var pathKey = path.map(String).join('.');\n        var resultForPath = resultForLabel.get(pathKey);\n        if (resultForPath == null) {\n          resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(pathKey, resultForPath);\n          return;\n        } else if (resultForPath.kind === 'response') {\n          resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var placeholder = resultForPath.placeholder;\n        !(placeholder.kind === 'defer') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @defer, was `@%s`.', pathKey, label, placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processDeferResponse(label, path, placeholder, response));\n      } else {\n        // @stream payload path values end in the field name and item index,\n        // but Relay records paths relative to the parent of the stream node:\n        // therefore we strip the last two elements just to lookup the path\n        // (the item index is used later to insert the element in the list)\n        var _pathKey = path.slice(0, -2).map(String).join('.');\n        var _resultForPath = resultForLabel.get(_pathKey);\n        if (_resultForPath == null) {\n          _resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(_pathKey, _resultForPath);\n          return;\n        } else if (_resultForPath.kind === 'response') {\n          _resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var _placeholder = _resultForPath.placeholder;\n        !(_placeholder.kind === 'stream') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @stream, was `@%s`.', _pathKey, label, _placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processStreamResponse(label, path, _placeholder, response));\n      }\n    });\n    return relayPayloads;\n  };\n  _proto._processDeferResponse = function _processDeferResponse(label, path, placeholder, response) {\n    var _placeholder$actorIde;\n    var parentID = placeholder.selector.dataID;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = (_placeholder$actorIde = placeholder.actorIdentifier) !== null && _placeholder$actorIde !== void 0 ? _placeholder$actorIde : this._actorIdentifier;\n    var relayPayload = normalizeResponse(response, placeholder.selector, placeholder.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: placeholder.path,\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n\n    // Load the version of the parent record from which this incremental data\n    // was derived\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @defer ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var fieldPayloads = parentEntry.fieldPayloads;\n    if (fieldPayloads.length !== 0) {\n      var _response$extensions2;\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: ((_response$extensions2 = response.extensions) === null || _response$extensions2 === void 0 ? void 0 : _response$extensions2.is_final) === true\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  }\n\n  /**\n   * Process the data for one item in a @stream field.\n   */;\n  _proto._processStreamResponse = function _processStreamResponse(label, path, placeholder, response) {\n    var parentID = placeholder.parentID,\n      node = placeholder.node,\n      variables = placeholder.variables,\n      actorIdentifier = placeholder.actorIdentifier;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = actorIdentifier !== null && actorIdentifier !== void 0 ? actorIdentifier : this._actorIdentifier;\n    // Find the LinkedField where @stream was applied\n    var field = node.selections[0];\n    !(field != null && field.kind === 'LinkedField' && field.plural === true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream to be used on a plural field.') : invariant(false) : void 0;\n    var _this$_normalizeStrea = this._normalizeStreamItem(response, parentID, field, variables, path, placeholder.path),\n      fieldPayloads = _this$_normalizeStrea.fieldPayloads,\n      itemID = _this$_normalizeStrea.itemID,\n      itemIndex = _this$_normalizeStrea.itemIndex,\n      prevIDs = _this$_normalizeStrea.prevIDs,\n      relayPayload = _this$_normalizeStrea.relayPayload,\n      storageKey = _this$_normalizeStrea.storageKey;\n    // Publish the new item and update the parent record to set\n    // field[index] = item *if* the parent record hasn't been concurrently\n    // modified.\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload, function (store) {\n      var currentParentRecord = store.get(parentID);\n      if (currentParentRecord == null) {\n        // parent has since been deleted, stream data is stale\n        return;\n      }\n      var currentItems = currentParentRecord.getLinkedRecords(storageKey);\n      if (currentItems == null) {\n        // field has since been deleted, stream data is stale\n        return;\n      }\n      if (currentItems.length !== prevIDs.length || currentItems.some(function (currentItem, index) {\n        return prevIDs[index] !== (currentItem && currentItem.getDataID());\n      })) {\n        // field has been modified by something other than this query,\n        // stream data is stale\n        return;\n      }\n      // parent.field has not been concurrently modified:\n      // update `parent.field[index] = item`\n      var nextItems = (0, _toConsumableArray2[\"default\"])(currentItems);\n      nextItems[itemIndex] = store.get(itemID);\n      currentParentRecord.setLinkedRecords(nextItems, storageKey);\n    });\n\n    // Now that the parent record has been updated to include the new item,\n    // also update any handle fields that are derived from the parent record.\n    if (fieldPayloads.length !== 0) {\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: false\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._normalizeStreamItem = function _normalizeStreamItem(response, parentID, field, variables, path, normalizationPath) {\n    var _field$alias, _field$concreteType, _ref, _this$_getDataID;\n    var data = response.data;\n    !(typeof data === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the GraphQL @stream payload `data` ' + 'value to be an object.') : invariant(false) : void 0;\n    var responseKey = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    var storageKey = getStorageKey(field, variables);\n\n    // Load the version of the parent record from which this incremental data\n    // was derived\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @stream ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var parentRecord = parentEntry.record,\n      fieldPayloads = parentEntry.fieldPayloads;\n\n    // Load the field value (items) that were created by *this* query executor\n    // in order to check if there has been any concurrent modifications by some\n    // other operation.\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(parentRecord, storageKey);\n    !(prevIDs != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to have fetched field ' + '`%s` with @stream.', parentID, field.name) : invariant(false) : void 0;\n\n    // Determine the index in the field of the new item\n    var finalPathEntry = path[path.length - 1];\n    var itemIndex = parseInt(finalPathEntry, 10);\n    !(itemIndex === finalPathEntry && itemIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected path for @stream to end in a ' + 'positive integer index, got `%s`', finalPathEntry) : invariant(false) : void 0;\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : data[TYPENAME_KEY];\n    !(typeof typeName === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream field `%s` to have a ' + '__typename.', field.name) : invariant(false) : void 0;\n\n    // Determine the __id of the new item: this must equal the value that would\n    // be assigned had the item not been streamed\n    var itemID = (_ref = (_this$_getDataID = this._getDataID(data, typeName)) !== null && _this$_getDataID !== void 0 ? _this$_getDataID : prevIDs === null || prevIDs === void 0 ? void 0 : prevIDs[itemIndex]) !== null && _ref !== void 0 ? _ref :\n    // Reuse previously generated client IDs\n    generateClientID(parentID, storageKey, itemIndex);\n    !(typeof itemID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n\n    // Build a selector to normalize the item data with\n    var selector = createNormalizationSelector(field, itemID, variables);\n\n    // Update the cached version of the parent record to reflect the new item:\n    // this is used when subsequent stream payloads arrive to see if there\n    // have been concurrent modifications to the list\n    var nextParentRecord = RelayModernRecord.clone(parentRecord);\n    var nextIDs = (0, _toConsumableArray2[\"default\"])(prevIDs);\n    nextIDs[itemIndex] = itemID;\n    RelayModernRecord.setLinkedRecordIDs(nextParentRecord, storageKey, nextIDs);\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: fieldPayloads\n    });\n    var relayPayload = normalizeResponse(response, selector, typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(normalizationPath), [responseKey, String(itemIndex)]),\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    return {\n      fieldPayloads: fieldPayloads,\n      itemID: itemID,\n      itemIndex: itemIndex,\n      prevIDs: prevIDs,\n      relayPayload: relayPayload,\n      storageKey: storageKey\n    };\n  };\n  _proto._scheduleAsyncStoreUpdate = function _scheduleAsyncStoreUpdate(scheduleFn, completeFn) {\n    var _this12 = this;\n    this._completeFns.push(completeFn);\n    if (this._asyncStoreUpdateDisposable != null) {\n      return;\n    }\n    this._asyncStoreUpdateDisposable = scheduleFn(function () {\n      _this12._asyncStoreUpdateDisposable = null;\n      var updatedOwners = _this12._runPublishQueue();\n      _this12._updateOperationTracker(updatedOwners);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(_this12._completeFns),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var complete = _step2.value;\n          complete();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      _this12._completeFns = [];\n    });\n  };\n  _proto._updateOperationTracker = function _updateOperationTracker(updatedOwners) {\n    if (updatedOwners != null && updatedOwners.length > 0) {\n      this._operationTracker.update(this._operation.request, new Set(updatedOwners));\n    }\n  };\n  _proto._completeOperationTracker = function _completeOperationTracker() {\n    this._operationTracker.complete(this._operation.request);\n  };\n  _proto._getPublishQueueAndSaveActor = function _getPublishQueueAndSaveActor() {\n    this._seenActors.add(this._actorIdentifier);\n    return this._getPublishQueue(this._actorIdentifier);\n  };\n  _proto._getActorsToVisit = function _getActorsToVisit() {\n    if (this._seenActors.size === 0) {\n      return new Set([this._actorIdentifier]);\n    } else {\n      return this._seenActors;\n    }\n  };\n  _proto._runPublishQueue = function _runPublishQueue(operation) {\n    var updatedOwners = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var actorIdentifier = _step3.value;\n        var owners = this._getPublishQueue(actorIdentifier).run(operation);\n        owners.forEach(function (owner) {\n          return updatedOwners.add(owner);\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return Array.from(updatedOwners);\n  };\n  _proto._retainData = function _retainData() {\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var actorIdentifier = _step4.value;\n        if (!this._retainDisposables.has(actorIdentifier)) {\n          this._retainDisposables.set(actorIdentifier, this._getStore(actorIdentifier).retain(this._operation));\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n  _proto._disposeRetainedData = function _disposeRetainedData() {\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(this._retainDisposables.values()),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var disposable = _step5.value;\n        disposable.dispose();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._retainDisposables.clear();\n  };\n  _proto._expectOperationLoader = function _expectOperationLoader() {\n    var operationLoader = this._operationLoader;\n    !operationLoader ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected an operationLoader to be ' + 'configured when using `@match`.') : invariant(false) : void 0;\n    return operationLoader;\n  };\n  return Executor;\n}();\nfunction partitionGraphQLResponses(responses) {\n  var nonIncrementalResponses = [];\n  var incrementalResponses = [];\n  responses.forEach(function (response) {\n    if (response.path != null || response.label != null) {\n      var label = response.label,\n        path = response.path;\n      if (label == null || path == null) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid incremental payload, expected ' + '`path` and `label` to either both be null/undefined, or ' + '`path` to be an `Array<string | number>` and `label` to be a ' + '`string`.') : invariant(false) : void 0;\n      }\n      incrementalResponses.push({\n        label: label,\n        path: path,\n        response: response\n      });\n    } else {\n      nonIncrementalResponses.push(response);\n    }\n  });\n  return [nonIncrementalResponses, incrementalResponses];\n}\nfunction normalizeResponse(response, selector, typeName, options) {\n  var _response$extensions3;\n  var data = response.data,\n    errors = response.errors;\n  var source = RelayRecordSource.create();\n  var record = RelayModernRecord.create(selector.dataID, typeName);\n  source.set(selector.dataID, record);\n  var relayPayload = RelayResponseNormalizer.normalize(source, selector, data, options);\n  return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, relayPayload), {}, {\n    errors: errors,\n    isFinal: ((_response$extensions3 = response.extensions) === null || _response$extensions3 === void 0 ? void 0 : _response$extensions3.is_final) === true\n  });\n}\nfunction stableStringify(value) {\n  var _JSON$stringify;\n  return (_JSON$stringify = JSON.stringify(stableCopy(value))) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : ''; // null-check for flow\n}\n\nfunction validateOptimisticResponsePayload(payload) {\n  var incrementalPlaceholders = payload.incrementalPlaceholders;\n  if (incrementalPlaceholders != null && incrementalPlaceholders.length !== 0) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic responses cannot be returned ' + 'for operations that use incremental data delivery (@defer, ' + '@stream, and @stream_connection).') : invariant(false) : void 0;\n  }\n}\nmodule.exports = {\n  execute: execute\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('./RelayStoreUtils'),\n  getArgumentValues = _require.getArgumentValues;\nvar invariant = require('invariant');\n\n/**\n * Determines the variables that are in scope for a fragment given the variables\n * in scope at the root query as well as any arguments applied at the fragment\n * spread via `@arguments`.\n *\n * Note that this is analagous to determining function arguments given a function call.\n */\nfunction getFragmentVariables(fragment, rootVariables, argumentVariables) {\n  // TODO: Support for legacy ReaderInlineDataFragmentSpread nodes.\n  // Remove this once all we've updated the ReaderInlineDataFragmentSpread\n  // type to indicate that all compiled artifacts have been updated.\n  if (fragment.argumentDefinitions == null) {\n    return argumentVariables;\n  }\n  var variables;\n  fragment.argumentDefinitions.forEach(function (definition) {\n    if (argumentVariables.hasOwnProperty(definition.name)) {\n      return;\n    }\n    variables = variables || (0, _objectSpread2[\"default\"])({}, argumentVariables);\n    switch (definition.kind) {\n      case 'LocalArgument':\n        variables[definition.name] = definition.defaultValue;\n        break;\n      case 'RootArgument':\n        if (!rootVariables.hasOwnProperty(definition.name)) {\n          /*\n           * Global variables passed as values of @arguments are not required to\n           * be declared unless they are used by the callee fragment or a\n           * descendant. In this case, the root variable may not be defined when\n           * resolving the callee's variables. The value is explicitly set to\n           * undefined to conform to the check in\n           * RelayStoreUtils.getStableVariableValue() that variable keys are all\n           * present.\n           */\n          variables[definition.name] = undefined;\n          break;\n        }\n        variables[definition.name] = rootVariables[definition.name];\n        break;\n      default:\n        definition;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayConcreteVariables: Unexpected node kind `%s` in fragment `%s`.', definition.kind, fragment.name) : invariant(false) : void 0;\n    }\n  });\n  return variables || argumentVariables;\n}\n\n/**\n * Determines the variables that are in scope for a given operation given values\n * for some/all of its arguments.\n * - extraneous input variables are filtered from the output\n * - missing variables are set to default values (if given in the\n * operation's definition).\n * - variables with provider modules are added\n */\nfunction getOperationVariables(operation, providedVariables, variables) {\n  var operationVariables = {};\n  operation.argumentDefinitions.forEach(function (def) {\n    var value = def.defaultValue;\n    if (variables[def.name] != null) {\n      value = variables[def.name];\n    }\n    operationVariables[def.name] = value;\n  });\n  if (providedVariables != null) {\n    Object.keys(providedVariables).forEach(function (varName) {\n      operationVariables[varName] = providedVariables[varName].get();\n    });\n  }\n  return operationVariables;\n}\nfunction getLocalVariables(currentVariables, argumentDefinitions, args) {\n  if (argumentDefinitions == null) {\n    return currentVariables;\n  }\n  var nextVariables = (0, _objectSpread2[\"default\"])({}, currentVariables);\n  var nextArgs = args ? getArgumentValues(args, currentVariables) : {};\n  argumentDefinitions.forEach(function (def) {\n    var _nextArgs$def$name;\n    var value = (_nextArgs$def$name = nextArgs[def.name]) !== null && _nextArgs$def$name !== void 0 ? _nextArgs$def$name : def.defaultValue;\n    nextVariables[def.name] = value;\n  });\n  return nextVariables;\n}\nmodule.exports = {\n  getLocalVariables: getLocalVariables,\n  getFragmentVariables: getFragmentVariables,\n  getOperationVariables: getOperationVariables\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayDefaultHandlerProvider = require('../handlers/RelayDefaultHandlerProvider');\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n  assertInternalActorIdentifier = _require.assertInternalActorIdentifier;\nvar RelayObservable = require('../network/RelayObservable');\nvar wrapNetworkWithLogObserver = require('../network/wrapNetworkWithLogObserver');\nvar RelayOperationTracker = require('../store/RelayOperationTracker');\nvar registerEnvironmentWithDevTools = require('../util/registerEnvironmentWithDevTools');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar defaultGetDataID = require('./defaultGetDataID');\nvar defaultRequiredFieldLogger = require('./defaultRequiredFieldLogger');\nvar OperationExecutor = require('./OperationExecutor');\nvar RelayPublishQueue = require('./RelayPublishQueue');\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar RelayModernEnvironment = /*#__PURE__*/function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n    var _config$log, _config$requiredField, _config$UNSTABLE_defa, _config$getDataID, _config$missingFieldH, _config$handlerProvid, _config$scheduler, _config$isServer, _config$operationTrac;\n    this.configName = config.configName;\n    this._treatMissingFieldsAsNull = config.treatMissingFieldsAsNull === true;\n    var operationLoader = config.operationLoader;\n    var reactFlightPayloadDeserializer = config.reactFlightPayloadDeserializer;\n    var reactFlightServerErrorHandler = config.reactFlightServerErrorHandler;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (operationLoader != null) {\n        !(typeof operationLoader === 'object' && typeof operationLoader.get === 'function' && typeof operationLoader.load === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `operationLoader` to be an object ' + 'with get() and load() functions, got `%s`.', operationLoader) : invariant(false) : void 0;\n      }\n      if (reactFlightPayloadDeserializer != null) {\n        !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `reactFlightPayloadDeserializer` ' + ' to be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n      }\n    }\n    this.__log = (_config$log = config.log) !== null && _config$log !== void 0 ? _config$log : emptyFunction;\n    this.requiredFieldLogger = (_config$requiredField = config.requiredFieldLogger) !== null && _config$requiredField !== void 0 ? _config$requiredField : defaultRequiredFieldLogger;\n    this._defaultRenderPolicy = ((_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) !== null && _config$UNSTABLE_defa !== void 0 ? _config$UNSTABLE_defa : RelayFeatureFlags.ENABLE_PARTIAL_RENDERING_DEFAULT === true) ? 'partial' : 'full';\n    this._operationLoader = operationLoader;\n    this._operationExecutions = new Map();\n    this._network = wrapNetworkWithLogObserver(this, config.network);\n    this._getDataID = (_config$getDataID = config.getDataID) !== null && _config$getDataID !== void 0 ? _config$getDataID : defaultGetDataID;\n    this._missingFieldHandlers = (_config$missingFieldH = config.missingFieldHandlers) !== null && _config$missingFieldH !== void 0 ? _config$missingFieldH : [];\n    this._publishQueue = new RelayPublishQueue(config.store, (_config$handlerProvid = config.handlerProvider) !== null && _config$handlerProvid !== void 0 ? _config$handlerProvid : RelayDefaultHandlerProvider, this._getDataID, this._missingFieldHandlers);\n    this._scheduler = (_config$scheduler = config.scheduler) !== null && _config$scheduler !== void 0 ? _config$scheduler : null;\n    this._store = config.store;\n    this.options = config.options;\n    this._isServer = (_config$isServer = config.isServer) !== null && _config$isServer !== void 0 ? _config$isServer : false;\n    this.__setNet = function (newNet) {\n      return _this._network = wrapNetworkWithLogObserver(_this, newNet);\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      var _require2 = require('./StoreInspector'),\n        inspect = _require2.inspect;\n      this.DEBUG_inspect = function (dataID) {\n        return inspect(_this, dataID);\n      };\n    }\n    this._operationTracker = (_config$operationTrac = config.operationTracker) !== null && _config$operationTrac !== void 0 ? _config$operationTrac : new RelayOperationTracker();\n    this._reactFlightPayloadDeserializer = reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = config.shouldProcessClientComponents;\n\n    // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n    registerEnvironmentWithDevTools(this);\n  }\n  var _proto = RelayModernEnvironment.prototype;\n  _proto.getStore = function getStore() {\n    return this._store;\n  };\n  _proto.getNetwork = function getNetwork() {\n    return this._network;\n  };\n  _proto.getOperationTracker = function getOperationTracker() {\n    return this._operationTracker;\n  };\n  _proto.getScheduler = function getScheduler() {\n    return this._scheduler;\n  };\n  _proto.isRequestActive = function isRequestActive(requestIdentifier) {\n    var activeState = this._operationExecutions.get(requestIdentifier);\n    return activeState === 'active';\n  };\n  _proto.UNSTABLE_getDefaultRenderPolicy = function UNSTABLE_getDefaultRenderPolicy() {\n    return this._defaultRenderPolicy;\n  };\n  _proto.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n    var dispose = function dispose() {\n      _this2._scheduleUpdates(function () {\n        _this2._publishQueue.revertUpdate(optimisticUpdate);\n        _this2._publishQueue.run();\n      });\n    };\n    this._scheduleUpdates(function () {\n      _this2._publishQueue.applyUpdate(optimisticUpdate);\n      _this2._publishQueue.run();\n    });\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.revertUpdate = function revertUpdate(update) {\n    var _this3 = this;\n    this._scheduleUpdates(function () {\n      _this3._publishQueue.revertUpdate(update);\n      _this3._publishQueue.run();\n    });\n  };\n  _proto.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    var _this4 = this;\n    this._scheduleUpdates(function () {\n      _this4._publishQueue.revertUpdate(update);\n      _this4._publishQueue.applyUpdate(newUpdate);\n      _this4._publishQueue.run();\n    });\n  };\n  _proto.applyMutation = function applyMutation(optimisticConfig) {\n    var subscription = this._execute({\n      createSource: function createSource() {\n        return RelayObservable.create(function (_sink) {});\n      },\n      isClientPayload: false,\n      operation: optimisticConfig.operation,\n      optimisticConfig: optimisticConfig,\n      updater: null\n    }).subscribe({});\n    return {\n      dispose: function dispose() {\n        return subscription.unsubscribe();\n      }\n    };\n  };\n  _proto.check = function check(operation) {\n    if (this._missingFieldHandlers.length === 0 && !operationHasClientAbstractTypes(operation)) {\n      return this._store.check(operation);\n    }\n    return this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers);\n  };\n  _proto.commitPayload = function commitPayload(operation, payload) {\n    this._execute({\n      createSource: function createSource() {\n        return RelayObservable.from({\n          data: payload\n        });\n      },\n      isClientPayload: true,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    }).subscribe({});\n  };\n  _proto.commitUpdate = function commitUpdate(updater) {\n    var _this5 = this;\n    this._scheduleUpdates(function () {\n      _this5._publishQueue.commitUpdate(updater);\n      _this5._publishQueue.run();\n    });\n  };\n  _proto.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n  _proto.retain = function retain(operation) {\n    return this._store.retain(operation);\n  };\n  _proto.isServer = function isServer() {\n    return this._isServer;\n  };\n  _proto._checkSelectorAndHandleMissingFields = function _checkSelectorAndHandleMissingFields(operation, handlers) {\n    var _this6 = this;\n    var target = RelayRecordSource.create();\n    var source = this._store.getSource();\n    var result = this._store.check(operation, {\n      handlers: handlers,\n      defaultActorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n      getSourceForActor: function getSourceForActor(actorIdentifier) {\n        assertInternalActorIdentifier(actorIdentifier);\n        return source;\n      },\n      getTargetForActor: function getTargetForActor(actorIdentifier) {\n        assertInternalActorIdentifier(actorIdentifier);\n        return target;\n      }\n    });\n    if (target.size() > 0) {\n      this._scheduleUpdates(function () {\n        _this6._publishQueue.commitSource(target);\n        _this6._publishQueue.run();\n      });\n    }\n    return result;\n  };\n  _proto._scheduleUpdates = function _scheduleUpdates(task) {\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      scheduler.schedule(task);\n    } else {\n      task();\n    }\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */;\n  _proto.execute = function execute(_ref) {\n    var _this7 = this;\n    var operation = _ref.operation;\n    return this._execute({\n      createSource: function createSource() {\n        return _this7.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */;\n  _proto.executeSubscription = function executeSubscription(_ref2) {\n    var _this8 = this;\n    var operation = _ref2.operation,\n      updater = _ref2.updater;\n    return this._execute({\n      createSource: function createSource() {\n        return _this8.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: updater\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */;\n  _proto.executeMutation = function executeMutation(_ref3) {\n    var _this9 = this;\n    var operation = _ref3.operation,\n      optimisticResponse = _ref3.optimisticResponse,\n      optimisticUpdater = _ref3.optimisticUpdater,\n      updater = _ref3.updater,\n      uploadables = _ref3.uploadables;\n    var optimisticConfig;\n    if (optimisticResponse || optimisticUpdater) {\n      optimisticConfig = {\n        operation: operation,\n        response: optimisticResponse,\n        updater: optimisticUpdater\n      };\n    }\n    return this._execute({\n      createSource: function createSource() {\n        return _this9.getNetwork().execute(operation.request.node.params, operation.request.variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, operation.request.cacheConfig), {}, {\n          force: true\n        }), uploadables);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: optimisticConfig,\n      updater: updater\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation responses, the result of which is\n   * then normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeWithSource({...}).subscribe({...}).\n   */;\n  _proto.executeWithSource = function executeWithSource(_ref4) {\n    var operation = _ref4.operation,\n      source = _ref4.source;\n    return this._execute({\n      createSource: function createSource() {\n        return source;\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  };\n  _proto.toJSON = function toJSON() {\n    var _this$configName;\n    return \"RelayModernEnvironment(\".concat((_this$configName = this.configName) !== null && _this$configName !== void 0 ? _this$configName : '', \")\");\n  };\n  _proto._execute = function _execute(_ref5) {\n    var _this10 = this;\n    var createSource = _ref5.createSource,\n      isClientPayload = _ref5.isClientPayload,\n      operation = _ref5.operation,\n      optimisticConfig = _ref5.optimisticConfig,\n      updater = _ref5.updater;\n    var publishQueue = this._publishQueue;\n    var store = this._store;\n    return RelayObservable.create(function (sink) {\n      var executor = OperationExecutor.execute({\n        actorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n        getDataID: _this10._getDataID,\n        isClientPayload: isClientPayload,\n        log: _this10.__log,\n        operation: operation,\n        operationExecutions: _this10._operationExecutions,\n        operationLoader: _this10._operationLoader,\n        operationTracker: _this10._operationTracker,\n        optimisticConfig: optimisticConfig,\n        getPublishQueue: function getPublishQueue(actorIdentifier) {\n          assertInternalActorIdentifier(actorIdentifier);\n          return publishQueue;\n        },\n        reactFlightPayloadDeserializer: _this10._reactFlightPayloadDeserializer,\n        reactFlightServerErrorHandler: _this10._reactFlightServerErrorHandler,\n        scheduler: _this10._scheduler,\n        shouldProcessClientComponents: _this10._shouldProcessClientComponents,\n        sink: sink,\n        // NOTE: Some product tests expect `Network.execute` to be called only\n        //       when the Observable is executed.\n        source: createSource(),\n        getStore: function getStore(actorIdentifier) {\n          assertInternalActorIdentifier(actorIdentifier);\n          return store;\n        },\n        treatMissingFieldsAsNull: _this10._treatMissingFieldsAsNull,\n        updater: updater\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  };\n  return RelayModernEnvironment;\n}();\nfunction operationHasClientAbstractTypes(operation) {\n  return operation.root.node.kind === 'Operation' && operation.root.node.clientAbstractTypes != null;\n}\n\n// Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\nfunction emptyFunction() {}\nmodule.exports = RelayModernEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar getPendingOperationsForFragment = require('../util/getPendingOperationsForFragment');\nvar handlePotentialSnapshotErrors = require('../util/handlePotentialSnapshotErrors');\nvar isScalarAndEqual = require('../util/isScalarAndEqual');\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('./RelayModernOperationDescriptor'),\n  createRequestDescriptor = _require.createRequestDescriptor;\nvar _require2 = require('./RelayModernSelector'),\n  areEqualSelectors = _require2.areEqualSelectors,\n  createReaderSelector = _require2.createReaderSelector,\n  getSelectorsFromObject = _require2.getSelectorsFromObject;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * A utility for resolving and subscribing to the results of a fragment spec\n * (key -> fragment mapping) given some \"props\" that determine the root ID\n * and variables to use when reading each fragment. When props are changed via\n * `setProps()`, the resolver will update its results and subscriptions\n * accordingly. Internally, the resolver:\n * - Converts the fragment map & props map into a map of `Selector`s.\n * - Removes any resolvers for any props that became null.\n * - Creates resolvers for any props that became non-null.\n * - Updates resolvers with the latest props.\n *\n * This utility is implemented as an imperative, stateful API for performance\n * reasons: reusing previous resolvers, callback functions, and subscriptions\n * all helps to reduce object allocation and thereby decrease GC time.\n *\n * The `resolve()` function is also lazy and memoized: changes in the store mark\n * the resolver as stale and notify the caller, and the actual results are\n * recomputed the first time `resolve()` is called.\n */\nvar RelayModernFragmentSpecResolver = /*#__PURE__*/function () {\n  function RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function () {\n      _this._stale = true;\n      if (typeof _this._callback === 'function') {\n        _this._callback();\n      }\n    });\n    this._callback = callback;\n    this._context = context;\n    this._data = {};\n    this._fragments = fragments;\n    this._props = {};\n    this._resolvers = {};\n    this._stale = false;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this.setProps(props);\n  }\n  var _proto = RelayModernFragmentSpecResolver.prototype;\n  _proto.dispose = function dispose() {\n    for (var key in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(key)) {\n        disposeCallback(this._resolvers[key]);\n      }\n    }\n  };\n  _proto.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the object multiple times, which could occur if data for\n      // multiple keys changes in the same event loop.\n      var prevData = this._data;\n      var nextData;\n      for (var key in this._resolvers) {\n        if (this._resolvers.hasOwnProperty(key)) {\n          var resolver = this._resolvers[key];\n          var prevItem = prevData[key];\n          if (resolver) {\n            var nextItem = resolver.resolve();\n            if (nextData || nextItem !== prevItem) {\n              nextData = nextData || (0, _objectSpread2[\"default\"])({}, prevData);\n              nextData[key] = nextItem;\n            }\n          } else {\n            var prop = this._props[key];\n            var _nextItem = prop !== undefined ? prop : null;\n            if (nextData || !isScalarAndEqual(_nextItem, prevItem)) {\n              nextData = nextData || (0, _objectSpread2[\"default\"])({}, prevData);\n              nextData[key] = _nextItem;\n            }\n          }\n        }\n      }\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n    return this._data;\n  };\n  _proto.setCallback = function setCallback(props, callback) {\n    this._callback = callback;\n    if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n      this.setProps(props);\n    }\n  };\n  _proto.setProps = function setProps(props) {\n    this._props = {};\n    var ownedSelectors = getSelectorsFromObject(this._fragments, props);\n    for (var key in ownedSelectors) {\n      if (ownedSelectors.hasOwnProperty(key)) {\n        var ownedSelector = ownedSelectors[key];\n        var resolver = this._resolvers[key];\n        if (ownedSelector == null) {\n          if (resolver != null) {\n            resolver.dispose();\n          }\n          resolver = null;\n        } else if (ownedSelector.kind === 'PluralReaderSelector') {\n          if (resolver == null) {\n            resolver = new SelectorListResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, this._callback != null, this._onChange);\n          } else {\n            !(resolver instanceof SelectorListResolver) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an array.', key) : invariant(false) : void 0;\n            resolver.setSelector(ownedSelector);\n          }\n        } else {\n          if (resolver == null) {\n            resolver = new SelectorResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, this._callback != null, this._onChange);\n          } else {\n            !(resolver instanceof SelectorResolver) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an object.', key) : invariant(false) : void 0;\n            resolver.setSelector(ownedSelector);\n          }\n        }\n        this._props[key] = props[key];\n        this._resolvers[key] = resolver;\n      }\n    }\n    this._stale = true;\n  };\n  _proto.setVariables = function setVariables(variables, request) {\n    for (var key in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(key)) {\n        var resolver = this._resolvers[key];\n        if (resolver) {\n          resolver.setVariables(variables, request);\n        }\n      }\n    }\n    this._stale = true;\n  };\n  return RelayModernFragmentSpecResolver;\n}();\n/**\n * A resolver for a single Selector.\n */\nvar SelectorResolver = /*#__PURE__*/function () {\n  function SelectorResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {\n    var _this2 = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function (snapshot) {\n      _this2._data = snapshot.data;\n      _this2._isMissingData = snapshot.isMissingData;\n      _this2._missingRequiredFields = snapshot.missingRequiredFields;\n      _this2._relayResolverErrors = snapshot.relayResolverErrors;\n      _this2._callback();\n    });\n    var _snapshot = environment.lookup(selector);\n    this._callback = callback;\n    this._data = _snapshot.data;\n    this._isMissingData = _snapshot.isMissingData;\n    this._missingRequiredFields = _snapshot.missingRequiredFields;\n    this._relayResolverErrors = _snapshot.relayResolverErrors;\n    this._environment = environment;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this._selector = selector;\n    if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n      if (subscribeOnConstruction) {\n        this._subscription = environment.subscribe(_snapshot, this._onChange);\n      }\n    } else {\n      this._subscription = environment.subscribe(_snapshot, this._onChange);\n    }\n  }\n  var _proto2 = SelectorResolver.prototype;\n  _proto2.dispose = function dispose() {\n    if (this._subscription) {\n      this._subscription.dispose();\n      this._subscription = null;\n    }\n  };\n  _proto2.resolve = function resolve() {\n    if (this._isMissingData === true) {\n      // NOTE: This branch exists to handle the case in which:\n      // - A RelayModern container is rendered as a descendant of a Relay Hook\n      //   root using a \"partial\" renderPolicy (this means that eargerly\n      //   reading any cached data that is available instead of blocking\n      //   at the root until the whole query is fetched).\n      // - A parent Relay Hook didnt' suspend earlier on data being fetched,\n      //   either because the fragment data for the parent was available, or\n      //   the parent fragment didn't have any data dependencies.\n      // Even though our Flow types reflect the possiblity of null data, there\n      // might still be cases where it's not handled at runtime becuase the\n      // Flow types are being ignored, or simply not being used (for example,\n      // the case reported here: https://fburl.com/srnbucf8, was due to\n      // misuse of Flow types here: https://fburl.com/g3m0mqqh).\n      // Additionally, even though the null data might be handled without a\n      // runtime error, we might not suspend when we intended to if a parent\n      // Relay Hook (e.g. that is using @defer) decided not to suspend becuase\n      // it's immediate data was already available (even if it was deferred),\n      // or it didn't actually need any data (was just spreading other fragments).\n      // This should eventually go away with something like @optional, where we only\n      // suspend at specific boundaries depending on whether the boundary\n      // can be fulfilled or not.\n      var pendingOperationsResult = getPendingOperationsForFragment(this._environment, this._selector.node, this._selector.owner);\n      var promise = pendingOperationsResult === null || pendingOperationsResult === void 0 ? void 0 : pendingOperationsResult.promise;\n      if (promise != null) {\n        if (this._rootIsQueryRenderer) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Relay Container for fragment `%s` has missing data and ' + 'would suspend. When using features such as @defer or @module, ' + 'use `useFragment` instead of a Relay Container.', this._selector.node.name) : void 0;\n        } else {\n          var _pendingOperationsRes;\n          var pendingOperations = (_pendingOperationsRes = pendingOperationsResult === null || pendingOperationsResult === void 0 ? void 0 : pendingOperationsResult.pendingOperations) !== null && _pendingOperationsRes !== void 0 ? _pendingOperationsRes : [];\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Relay Container for fragment `%s` suspended. When using ' + 'features such as @defer or @module, use `useFragment` instead ' + 'of a Relay Container.', this._selector.node.name) : void 0;\n          this._environment.__log({\n            name: 'suspense.fragment',\n            data: this._data,\n            fragment: this._selector.node,\n            isRelayHooks: false,\n            isMissingData: this._isMissingData,\n            isPromiseCached: false,\n            pendingOperations: pendingOperations\n          });\n          throw promise;\n        }\n      }\n    }\n    handlePotentialSnapshotErrors(this._environment, this._missingRequiredFields, this._relayResolverErrors);\n    return this._data;\n  };\n  _proto2.setSelector = function setSelector(selector) {\n    if (this._subscription != null && areEqualSelectors(selector, this._selector)) {\n      return;\n    }\n    this.dispose();\n    var snapshot = this._environment.lookup(selector);\n    this._data = recycleNodesInto(this._data, snapshot.data);\n    this._isMissingData = snapshot.isMissingData;\n    this._missingRequiredFields = snapshot.missingRequiredFields;\n    this._relayResolverErrors = snapshot.relayResolverErrors;\n    this._selector = selector;\n    this._subscription = this._environment.subscribe(snapshot, this._onChange);\n  };\n  _proto2.setVariables = function setVariables(variables, request) {\n    if (areEqual(variables, this._selector.variables)) {\n      // If we're not actually setting new variables, we don't actually want\n      // to create a new fragment owner, since areEqualSelectors relies on\n      // owner identity.\n      // In fact, we don't even need to try to attempt to set a new selector.\n      // When fragment ownership is not enabled, setSelector will also bail\n      // out since the selector doesn't really change, so we're doing it here\n      // earlier.\n      return;\n    }\n    // NOTE: We manually create the request descriptor here instead of\n    // calling createOperationDescriptor() because we want to set a\n    // descriptor with *unaltered* variables as the fragment owner.\n    // This is a hack that allows us to preserve existing (broken)\n    // behavior of RelayModern containers while using fragment ownership\n    // to propagate variables instead of Context.\n    // For more details, see the summary of D13999308\n    var requestDescriptor = createRequestDescriptor(request, variables);\n    var selector = createReaderSelector(this._selector.node, this._selector.dataID, variables, requestDescriptor);\n    this.setSelector(selector);\n  };\n  return SelectorResolver;\n}();\n/**\n * A resolver for an array of Selectors.\n */\nvar SelectorListResolver = /*#__PURE__*/function () {\n  function SelectorListResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {\n    var _this3 = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function (data) {\n      _this3._stale = true;\n      _this3._callback();\n    });\n    this._callback = callback;\n    this._data = [];\n    this._environment = environment;\n    this._resolvers = [];\n    this._stale = true;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this._subscribeOnConstruction = subscribeOnConstruction;\n    this.setSelector(selector);\n  }\n  var _proto3 = SelectorListResolver.prototype;\n  _proto3.dispose = function dispose() {\n    this._resolvers.forEach(disposeCallback);\n  };\n  _proto3.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the array multiple times, which could occur if data for\n      // multiple indices changes in the same event loop.\n      var prevData = this._data;\n      var nextData;\n      for (var ii = 0; ii < this._resolvers.length; ii++) {\n        var prevItem = prevData[ii];\n        var nextItem = this._resolvers[ii].resolve();\n        if (nextData || nextItem !== prevItem) {\n          nextData = nextData || prevData.slice(0, ii);\n          nextData.push(nextItem);\n        }\n      }\n      if (!nextData && this._resolvers.length !== prevData.length) {\n        nextData = prevData.slice(0, this._resolvers.length);\n      }\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n    return this._data;\n  };\n  _proto3.setSelector = function setSelector(selector) {\n    var selectors = selector.selectors;\n    while (this._resolvers.length > selectors.length) {\n      var resolver = this._resolvers.pop();\n      resolver.dispose();\n    }\n    for (var ii = 0; ii < selectors.length; ii++) {\n      if (ii < this._resolvers.length) {\n        this._resolvers[ii].setSelector(selectors[ii]);\n      } else {\n        this._resolvers[ii] = new SelectorResolver(this._environment, this._rootIsQueryRenderer, selectors[ii], this._subscribeOnConstruction, this._onChange);\n      }\n    }\n    this._stale = true;\n  };\n  _proto3.setVariables = function setVariables(variables, request) {\n    this._resolvers.forEach(function (resolver) {\n      return resolver.setVariables(variables, request);\n    });\n    this._stale = true;\n  };\n  return SelectorListResolver;\n}();\nfunction disposeCallback(disposable) {\n  disposable && disposable.dispose();\n}\nmodule.exports = RelayModernFragmentSpecResolver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar deepFreeze = require('../util/deepFreeze');\nvar getRequestIdentifier = require('../util/getRequestIdentifier');\nvar _require = require('./RelayConcreteVariables'),\n  getOperationVariables = _require.getOperationVariables;\nvar _require2 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require2.createNormalizationSelector,\n  createReaderSelector = _require2.createReaderSelector;\nvar _require3 = require('./RelayStoreUtils'),\n  ROOT_ID = _require3.ROOT_ID;\n\n/**\n * Creates an instance of the `OperationDescriptor` type defined in\n * `RelayStoreTypes` given an operation and some variables. The input variables\n * are filtered to exclude variables that do not match defined arguments on the\n * operation, and default values are populated for null values.\n */\nfunction createOperationDescriptor(request, variables, cacheConfig) {\n  var dataID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ROOT_ID;\n  var operation = request.operation;\n  var operationVariables = getOperationVariables(operation, request.params.providedVariables, variables);\n  var requestDescriptor = createRequestDescriptor(request, operationVariables, cacheConfig);\n  var operationDescriptor = {\n    fragment: createReaderSelector(request.fragment, dataID, operationVariables, requestDescriptor),\n    request: requestDescriptor,\n    root: createNormalizationSelector(operation, dataID, operationVariables)\n  };\n  if (process.env.NODE_ENV !== \"production\") {\n    // Freezing properties short-circuits a deepFreeze of snapshots that contain\n    // an OperationDescriptor via their selector's owner, avoiding stack\n    // overflow on larger queries.\n    Object.freeze(operationDescriptor.fragment);\n    Object.freeze(operationDescriptor.root);\n    Object.freeze(operationDescriptor);\n  }\n  return operationDescriptor;\n}\nfunction createRequestDescriptor(request, variables, cacheConfig) {\n  var requestDescriptor = {\n    identifier: getRequestIdentifier(request.params, variables),\n    node: request,\n    variables: variables,\n    cacheConfig: cacheConfig\n  };\n  if (process.env.NODE_ENV !== \"production\") {\n    deepFreeze(variables);\n    Object.freeze(request);\n    Object.freeze(requestDescriptor);\n  }\n  return requestDescriptor;\n}\nmodule.exports = {\n  createOperationDescriptor: createOperationDescriptor,\n  createRequestDescriptor: createRequestDescriptor\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar deepFreeze = require('../util/deepFreeze');\nvar _require = require('./ClientID'),\n  generateClientObjectClientID = _require.generateClientObjectClientID,\n  isClientID = _require.isClientID;\nvar _require2 = require('./experimental-live-resolvers/LiveResolverSuspenseSentinel'),\n  isSuspenseSentinel = _require2.isSuspenseSentinel;\nvar _require3 = require('./RelayStoreUtils'),\n  ACTOR_IDENTIFIER_KEY = _require3.ACTOR_IDENTIFIER_KEY,\n  ID_KEY = _require3.ID_KEY,\n  INVALIDATED_AT_KEY = _require3.INVALIDATED_AT_KEY,\n  REF_KEY = _require3.REF_KEY,\n  REFS_KEY = _require3.REFS_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  ROOT_ID = _require3.ROOT_ID,\n  TYPENAME_KEY = _require3.TYPENAME_KEY;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * @public\n *\n * Low-level record manipulation methods.\n *\n * A note about perf: we use long-hand property access rather than computed\n * properties in this file for speed ie.\n *\n *    const object = {};\n *    object[KEY] = value;\n *    record[storageKey] = object;\n *\n * instead of:\n *\n *    record[storageKey] = {\n *      [KEY]: value,\n *    };\n *\n * The latter gets transformed by Babel into something like:\n *\n *    function _defineProperty(obj, key, value) {\n *      if (key in obj) {\n *        Object.defineProperty(obj, key, {\n *          value: value,\n *          enumerable: true,\n *          configurable: true,\n *          writable: true,\n *        });\n *      } else {\n *        obj[key] = value;\n *      }\n *      return obj;\n *    }\n *\n *    record[storageKey] = _defineProperty({}, KEY, value);\n *\n * A quick benchmark shows that computed property access is an order of\n * magnitude slower (times in seconds for 100,000 iterations):\n *\n *               best     avg     sd\n *    computed 0.02175 0.02292 0.00113\n *      manual 0.00110 0.00123 0.00008\n */\n\n/**\n * @public\n *\n * Clone a record.\n */\nfunction clone(record) {\n  return (0, _objectSpread2[\"default\"])({}, record);\n}\n\n/**\n * @public\n *\n * Copies all fields from `source` to `sink`, excluding `__id` and `__typename`.\n *\n * NOTE: This function does not treat `id` specially. To preserve the id,\n * manually reset it after calling this function. Also note that values are\n * copied by reference and not value; callers should ensure that values are\n * copied on write.\n */\nfunction copyFields(source, sink) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      if (key !== ID_KEY && key !== TYPENAME_KEY) {\n        sink[key] = source[key];\n      }\n    }\n  }\n}\n\n/**\n * @public\n *\n * Create a new record.\n */\nfunction create(dataID, typeName) {\n  // See perf note above for why we aren't using computed property access.\n  var record = {};\n  record[ID_KEY] = dataID;\n  record[TYPENAME_KEY] = typeName;\n  return record;\n}\n\n/**\n * @public\n *\n * Get the record's `id` if available or the client-generated identifier.\n */\nfunction getDataID(record) {\n  return record[ID_KEY];\n}\n\n/**\n * @public\n *\n * Get the concrete type of the record.\n */\nfunction getType(record) {\n  return record[TYPENAME_KEY];\n}\n\n/**\n * @public\n *\n * Get a scalar (non-link) field value.\n */\nfunction getValue(record, storageKey) {\n  var value = record[storageKey];\n  if (value && typeof value === 'object') {\n    !(!value.hasOwnProperty(REF_KEY) && !value.hasOwnProperty(REFS_KEY)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getValue(): Expected a scalar (non-link) value for `%s.%s` ' + 'but found %s.', record[ID_KEY], storageKey, value.hasOwnProperty(REF_KEY) ? 'a linked record' : 'plural linked records') : invariant(false) : void 0;\n  }\n  return value;\n}\n\n/**\n * @public\n *\n * Get the value of a field as a reference to another record. Throws if the\n * field has a different type.\n */\nfunction getLinkedRecordID(record, storageKey) {\n  var maybeLink = record[storageKey];\n  if (maybeLink == null) {\n    return maybeLink;\n  }\n  // We reassign here so that the JSON.stringify call in invariant does not invalidate the\n  // non-maybe refinement from above.\n  var link = maybeLink;\n  !(typeof link === 'object' && link && typeof link[REF_KEY] === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordID(): Expected `%s.%s` to be a linked ID, ' + 'was `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(link), typeof link === 'object' && link[REFS_KEY] !== undefined ? ' It appears to be a plural linked record: did you mean to call ' + 'getLinkedRecords() instead of getLinkedRecord()?' : '') : invariant(false) : void 0;\n  // $FlowFixMe[incompatible-return]\n  return link[REF_KEY];\n}\n\n/**\n * @public\n *\n * Get the value of a field as a list of references to other records. Throws if\n * the field has a different type.\n */\nfunction getLinkedRecordIDs(record, storageKey) {\n  var links = record[storageKey];\n  if (links == null) {\n    return links;\n  }\n  !(typeof links === 'object' && Array.isArray(links[REFS_KEY])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordIDs(): Expected `%s.%s` to contain an array ' + 'of linked IDs, got `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(links), typeof links === 'object' && links[REF_KEY] !== undefined ? ' It appears to be a singular linked record: did you mean to call ' + 'getLinkedRecord() instead of getLinkedRecords()?' : '') : invariant(false) : void 0;\n  // assume items of the array are ids\n  return links[REFS_KEY];\n}\n\n/**\n * @public\n *\n * Returns the epoch at which the record was invalidated, if it\n * ever was; otherwise returns null;\n */\nfunction getInvalidationEpoch(record) {\n  if (record == null) {\n    return null;\n  }\n  var invalidatedAt = record[INVALIDATED_AT_KEY];\n  if (typeof invalidatedAt !== 'number') {\n    // If the record has never been invalidated, it isn't stale.\n    return null;\n  }\n  return invalidatedAt;\n}\n\n/**\n * @public\n *\n * Compares the fields of a previous and new record, returning either the\n * previous record if all fields are equal or a new record (with merged fields)\n * if any fields have changed.\n */\nfunction update(prevRecord, nextRecord) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType, _getType2;\n    var prevID = getDataID(prevRecord);\n    var nextID = getDataID(nextRecord);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    // note: coalesce null/undefined to null\n    var prevType = (_getType = getType(prevRecord)) !== null && _getType !== void 0 ? _getType : null;\n    var nextType = (_getType2 = getType(nextRecord)) !== null && _getType2 !== void 0 ? _getType2 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  var updated = null;\n  var keys = Object.keys(nextRecord);\n  for (var ii = 0; ii < keys.length; ii++) {\n    var key = keys[ii];\n    if (updated || !areEqual(prevRecord[key], nextRecord[key])) {\n      updated = updated !== null ? updated : (0, _objectSpread2[\"default\"])({}, prevRecord);\n      updated[key] = nextRecord[key];\n    }\n  }\n  return updated !== null ? updated : prevRecord;\n}\n\n/**\n * @public\n *\n * Returns a new record with the contents of the given records. Fields in the\n * second record will overwrite identical fields in the first record.\n */\nfunction merge(record1, record2) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType3, _getType4;\n    var prevID = getDataID(record1);\n    var nextID = getDataID(record2);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    // note: coalesce null/undefined to null\n    var prevType = (_getType3 = getType(record1)) !== null && _getType3 !== void 0 ? _getType3 : null;\n    var nextType = (_getType4 = getType(record2)) !== null && _getType4 !== void 0 ? _getType4 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, record1), record2);\n}\n\n/**\n * @public\n *\n * Prevent modifications to the record. Attempts to call `set*` functions on a\n * frozen record will fatal at runtime.\n */\nfunction freeze(record) {\n  deepFreeze(record);\n}\n\n/**\n * @public\n *\n * Set the value of a storageKey to a scalar.\n */\nfunction setValue(record, storageKey, value) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var prevID = getDataID(record);\n    if (storageKey === ID_KEY) {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === value, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, value) : void 0;\n    } else if (storageKey === TYPENAME_KEY) {\n      var _getType5;\n      // note: coalesce null/undefined to null\n      var prevType = (_getType5 = getType(record)) !== null && _getType5 !== void 0 ? _getType5 : null;\n      var nextType = value !== null && value !== void 0 ? value : null;\n      process.env.NODE_ENV !== \"production\" ? warning(isClientID(getDataID(record)) && getDataID(record) !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n    }\n  }\n  record[storageKey] = value;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a reference to another record.\n */\nfunction setLinkedRecordID(record, storageKey, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  record[storageKey] = link;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a list of references other records.\n */\nfunction setLinkedRecordIDs(record, storageKey, linkedIDs) {\n  // See perf note above for why we aren't using computed property access.\n  var links = {};\n  links[REFS_KEY] = linkedIDs;\n  record[storageKey] = links;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a reference to another record in the actor specific store.\n */\nfunction setActorLinkedRecordID(record, storageKey, actorIdentifier, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  link[ACTOR_IDENTIFIER_KEY] = actorIdentifier;\n  record[storageKey] = link;\n}\n\n/**\n * @public\n *\n * Get link to a record and the actor identifier for the store.\n */\nfunction getActorLinkedRecordID(record, storageKey) {\n  var link = record[storageKey];\n  if (link == null) {\n    return link;\n  }\n  !(typeof link === 'object' && typeof link[REF_KEY] === 'string' && link[ACTOR_IDENTIFIER_KEY] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getActorLinkedRecordID(): Expected `%s.%s` to be an actor specific linked ID, ' + 'was `%s`.', record[ID_KEY], storageKey, JSON.stringify(link)) : invariant(false) : void 0;\n  return [link[ACTOR_IDENTIFIER_KEY], link[REF_KEY]];\n}\nfunction getResolverLinkedRecordID(record, typeName) {\n  var id = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (id == null || isSuspenseSentinel(id)) {\n    return null;\n  }\n  // TODD: Deprecate client edges that return just id.\n  if (typeof id === 'object') {\n    id = id.id;\n  }\n  !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordID(): Expected value to be a linked ID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n  return generateClientObjectClientID(typeName, id);\n}\nfunction getResolverLinkedRecordIDs(record, typeName) {\n  var resolverValue = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (resolverValue == null || isSuspenseSentinel(resolverValue)) {\n    return null;\n  }\n  !Array.isArray(resolverValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected value to be an array of linked IDs, ' + 'was `%s`.', JSON.stringify(resolverValue)) : invariant(false) : void 0;\n  return resolverValue.map(function (id) {\n    if (id == null) {\n      return null;\n    }\n    // TODD: Deprecate client edges that return just id.\n    if (typeof id === 'object') {\n      id = id.id;\n    }\n    !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected item within resolver linked field to be a DataID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n    return generateClientObjectClientID(typeName, id);\n  });\n}\nmodule.exports = {\n  clone: clone,\n  copyFields: copyFields,\n  create: create,\n  freeze: freeze,\n  getDataID: getDataID,\n  getInvalidationEpoch: getInvalidationEpoch,\n  getLinkedRecordID: getLinkedRecordID,\n  getLinkedRecordIDs: getLinkedRecordIDs,\n  getType: getType,\n  getValue: getValue,\n  merge: merge,\n  setValue: setValue,\n  setLinkedRecordID: setLinkedRecordID,\n  setLinkedRecordIDs: setLinkedRecordIDs,\n  update: update,\n  getActorLinkedRecordID: getActorLinkedRecordID,\n  setActorLinkedRecordID: setActorLinkedRecordID,\n  getResolverLinkedRecordID: getResolverLinkedRecordID,\n  getResolverLinkedRecordIDs: getResolverLinkedRecordIDs\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayConcreteVariables'),\n  getFragmentVariables = _require.getFragmentVariables;\nvar _require2 = require('./RelayStoreUtils'),\n  CLIENT_EDGE_TRAVERSAL_PATH = _require2.CLIENT_EDGE_TRAVERSAL_PATH,\n  FRAGMENT_OWNER_KEY = _require2.FRAGMENT_OWNER_KEY,\n  FRAGMENTS_KEY = _require2.FRAGMENTS_KEY,\n  ID_KEY = _require2.ID_KEY,\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require2.IS_WITHIN_UNMATCHED_TYPE_REFINEMENT;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * @public\n *\n * Given the result `item` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment for that item.\n *\n * Example:\n *\n * Given two fragments as follows:\n *\n * ```\n * fragment Parent on User {\n *   id\n *   ...Child\n * }\n * fragment Child on User {\n *   name\n * }\n * ```\n *\n * And given some object `parent` that is the results of `Parent` for id \"4\",\n * the results of `Child` can be accessed by first getting a selector and then\n * using that selector to `lookup()` the results against the environment:\n *\n * ```\n * const childSelector = getSingularSelector(queryVariables, Child, parent);\n * const childData = environment.lookup(childSelector).data;\n * ```\n */\nfunction getSingularSelector(fragment, item) {\n  !(typeof item === 'object' && item !== null && !Array.isArray(item)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item)) : invariant(false) : void 0;\n  var dataID = item[ID_KEY];\n  var fragments = item[FRAGMENTS_KEY];\n  var mixedOwner = item[FRAGMENT_OWNER_KEY];\n  var isWithinUnmatchedTypeRefinement = item[IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] === true;\n  var mixedClientEdgeTraversalPath = item[CLIENT_EDGE_TRAVERSAL_PATH];\n  if (typeof dataID === 'string' && typeof fragments === 'object' && fragments !== null && typeof fragments[fragment.name] === 'object' && fragments[fragment.name] !== null && typeof mixedOwner === 'object' && mixedOwner !== null && (mixedClientEdgeTraversalPath == null || Array.isArray(mixedClientEdgeTraversalPath))) {\n    var owner = mixedOwner;\n    var clientEdgeTraversalPath = mixedClientEdgeTraversalPath;\n    var argumentVariables = fragments[fragment.name];\n    var fragmentVariables = getFragmentVariables(fragment, owner.variables, argumentVariables);\n    return createReaderSelector(fragment, dataID, fragmentVariables, owner, isWithinUnmatchedTypeRefinement, clientEdgeTraversalPath);\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    var stringifiedItem = JSON.stringify(item);\n    if (stringifiedItem.length > 499) {\n      stringifiedItem = stringifiedItem.substr(0, 498) + \"\\u2026\";\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`.', fragment.name, stringifiedItem, fragment.name) : void 0;\n  }\n  return null;\n}\n\n/**\n * @public\n *\n * Given the result `items` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment on those\n * items. This is similar to `getSingularSelector` but for \"plural\" fragments that\n * expect an array of results and therefore return an array of selectors.\n */\nfunction getPluralSelector(fragment, items) {\n  var selectors = null;\n  items.forEach(function (item, ii) {\n    var selector = item != null ? getSingularSelector(fragment, item) : null;\n    if (selector != null) {\n      selectors = selectors || [];\n      selectors.push(selector);\n    }\n  });\n  if (selectors == null) {\n    return null;\n  } else {\n    return {\n      kind: 'PluralReaderSelector',\n      selectors: selectors\n    };\n  }\n}\nfunction getSelector(fragment, item) {\n  if (item == null) {\n    return item;\n  } else if (fragment.metadata && fragment.metadata.plural === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getPluralSelector(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getSingularSelector(fragment, item);\n  }\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the selectors for those fragments from the results.\n *\n * The canonical use-case for this function is ReactRelayFragmentContainer, which\n * uses this function to convert (props, fragments) into selectors so that it\n * can read the results to pass to the inner component.\n */\nfunction getSelectorsFromObject(fragments, object) {\n  var selectors = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      selectors[key] = getSelector(fragment, item);\n    }\n  }\n  return selectors;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts a mapping of keys -> id(s) of the results.\n *\n * Similar to `getSelectorsFromObject()`, this function can be useful in\n * determining the \"identity\" of the props passed to a component.\n */\nfunction getDataIDsFromObject(fragments, object) {\n  var ids = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      ids[key] = getDataIDsFromFragment(fragment, item);\n    }\n  }\n  return ids;\n}\nfunction getDataIDsFromFragment(fragment, item) {\n  if (item == null) {\n    return item;\n  } else if (fragment.metadata && fragment.metadata.plural === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getDataIDs(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getDataID(fragment, item);\n  }\n}\n\n/**\n * @internal\n */\nfunction getDataIDs(fragment, items) {\n  var ids = null;\n  items.forEach(function (item) {\n    var id = item != null ? getDataID(fragment, item) : null;\n    if (id != null) {\n      ids = ids || [];\n      ids.push(id);\n    }\n  });\n  return ids;\n}\n\n/**\n * @internal\n */\nfunction getDataID(fragment, item) {\n  !(typeof item === 'object' && item !== null && !Array.isArray(item)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item)) : invariant(false) : void 0;\n  var dataID = item[ID_KEY];\n  if (typeof dataID === 'string') {\n    return dataID;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`, or `null` is passed as the fragment ' + \"reference for `%s` if it's conditonally included and the condition isn't met.\", fragment.name, JSON.stringify(item), fragment.name, fragment.name) : void 0;\n  return null;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the merged variables that would be in scope for those\n * fragments/results.\n *\n * This can be useful in determing what varaibles were used to fetch the data\n * for a Relay container, for example.\n */\nfunction getVariablesFromObject(fragments, object) {\n  var variables = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      var itemVariables = getVariablesFromFragment(fragment, item);\n      Object.assign(variables, itemVariables);\n    }\n  }\n  return variables;\n}\nfunction getVariablesFromFragment(fragment, item) {\n  var _fragment$metadata;\n  if (item == null) {\n    return {};\n  } else if (((_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.plural) === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getVariablesFromPluralFragment(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getVariablesFromSingularFragment(fragment, item) || {};\n  }\n}\nfunction getVariablesFromSingularFragment(fragment, item) {\n  var selector = getSingularSelector(fragment, item);\n  if (!selector) {\n    return null;\n  }\n  return selector.variables;\n}\nfunction getVariablesFromPluralFragment(fragment, items) {\n  var variables = {};\n  items.forEach(function (value, ii) {\n    if (value != null) {\n      var itemVariables = getVariablesFromSingularFragment(fragment, value);\n      if (itemVariables != null) {\n        Object.assign(variables, itemVariables);\n      }\n    }\n  });\n  return variables;\n}\nfunction areEqualSingularSelectors(thisSelector, thatSelector) {\n  return thisSelector.owner === thatSelector.owner && thisSelector.dataID === thatSelector.dataID && thisSelector.node === thatSelector.node && areEqual(thisSelector.variables, thatSelector.variables);\n}\n\n/**\n * @public\n *\n * Determine if two selectors are equal (represent the same selection). Note\n * that this function returns `false` when the two queries/fragments are\n * different objects, even if they select the same fields.\n */\nfunction areEqualSelectors(a, b) {\n  if (a === b) {\n    return true;\n  } else if (a == null) {\n    return b == null;\n  } else if (b == null) {\n    return a == null;\n  } else if (a.kind === 'SingularReaderSelector' && b.kind === 'SingularReaderSelector') {\n    return areEqualSingularSelectors(a, b);\n  } else if (a.kind === 'PluralReaderSelector' && b.kind === 'PluralReaderSelector') {\n    return a.selectors.length === b.selectors.length && a.selectors.every(function (s, i) {\n      return areEqualSingularSelectors(s, b.selectors[i]);\n    });\n  } else {\n    return false;\n  }\n}\nfunction createReaderSelector(fragment, dataID, variables, request) {\n  var isWithinUnmatchedTypeRefinement = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var clientEdgeTraversalPath = arguments.length > 5 ? arguments[5] : undefined;\n  return {\n    kind: 'SingularReaderSelector',\n    dataID: dataID,\n    isWithinUnmatchedTypeRefinement: isWithinUnmatchedTypeRefinement,\n    clientEdgeTraversalPath: clientEdgeTraversalPath !== null && clientEdgeTraversalPath !== void 0 ? clientEdgeTraversalPath : null,\n    node: fragment,\n    variables: variables,\n    owner: request\n  };\n}\nfunction createNormalizationSelector(node, dataID, variables) {\n  return {\n    dataID: dataID,\n    node: node,\n    variables: variables\n  };\n}\nmodule.exports = {\n  areEqualSelectors: areEqualSelectors,\n  createReaderSelector: createReaderSelector,\n  createNormalizationSelector: createNormalizationSelector,\n  getDataIDsFromFragment: getDataIDsFromFragment,\n  getDataIDsFromObject: getDataIDsFromObject,\n  getSingularSelector: getSingularSelector,\n  getPluralSelector: getPluralSelector,\n  getSelector: getSelector,\n  getSelectorsFromObject: getSelectorsFromObject,\n  getVariablesFromSingularFragment: getVariablesFromSingularFragment,\n  getVariablesFromPluralFragment: getVariablesFromPluralFragment,\n  getVariablesFromFragment: getVariablesFromFragment,\n  getVariablesFromObject: getVariablesFromObject\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n  assertInternalActorIdentifier = _require.assertInternalActorIdentifier;\nvar deepFreeze = require('../util/deepFreeze');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar resolveImmediate = require('../util/resolveImmediate');\nvar DataChecker = require('./DataChecker');\nvar defaultGetDataID = require('./defaultGetDataID');\nvar RelayModernRecord = require('./RelayModernRecord');\nvar RelayOptimisticRecordSource = require('./RelayOptimisticRecordSource');\nvar RelayReader = require('./RelayReader');\nvar RelayReferenceMarker = require('./RelayReferenceMarker');\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreSubscriptions = require('./RelayStoreSubscriptions');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require2 = require('./RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID,\n  ROOT_TYPE = _require2.ROOT_TYPE;\nvar _require3 = require('./ResolverCache'),\n  RecordResolverCache = _require3.RecordResolverCache;\nvar invariant = require('invariant');\nvar DEFAULT_RELEASE_BUFFER_SIZE = 10;\n\n/**\n * @public\n *\n * An implementation of the `Store` interface defined in `RelayStoreTypes`.\n *\n * Note that a Store takes ownership of all records provided to it: other\n * objects may continue to hold a reference to such records but may not mutate\n * them. The static Relay core is architected to avoid mutating records that may have been\n * passed to a store: operations that mutate records will either create fresh\n * records or clone existing records and modify the clones. Record immutability\n * is also enforced in development mode by freezing all records passed to a store.\n */\nvar RelayModernStore = /*#__PURE__*/function () {\n  function RelayModernStore(source, options) {\n    var _this = this;\n    var _options$gcReleaseBuf, _options$gcScheduler, _options$getDataID, _options$log, _options$operationLoa;\n    (0, _defineProperty2[\"default\"])(this, \"_gcStep\", function () {\n      if (_this._gcRun) {\n        if (_this._gcRun.next().done) {\n          _this._gcRun = null;\n        } else {\n          _this._gcScheduler(_this._gcStep);\n        }\n      }\n    });\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== \"production\") {\n      var storeIDs = source.getRecordIDs();\n      for (var ii = 0; ii < storeIDs.length; ii++) {\n        var record = source.get(storeIDs[ii]);\n        if (record) {\n          RelayModernRecord.freeze(record);\n        }\n      }\n    }\n    this._currentWriteEpoch = 0;\n    this._gcHoldCounter = 0;\n    this._gcReleaseBufferSize = (_options$gcReleaseBuf = options === null || options === void 0 ? void 0 : options.gcReleaseBufferSize) !== null && _options$gcReleaseBuf !== void 0 ? _options$gcReleaseBuf : DEFAULT_RELEASE_BUFFER_SIZE;\n    this._gcRun = null;\n    this._gcScheduler = (_options$gcScheduler = options === null || options === void 0 ? void 0 : options.gcScheduler) !== null && _options$gcScheduler !== void 0 ? _options$gcScheduler : resolveImmediate;\n    this._getDataID = (_options$getDataID = options === null || options === void 0 ? void 0 : options.getDataID) !== null && _options$getDataID !== void 0 ? _options$getDataID : defaultGetDataID;\n    this._globalInvalidationEpoch = null;\n    this._invalidationSubscriptions = new Set();\n    this._invalidatedRecordIDs = new Set();\n    this.__log = (_options$log = options === null || options === void 0 ? void 0 : options.log) !== null && _options$log !== void 0 ? _options$log : null;\n    this._queryCacheExpirationTime = options === null || options === void 0 ? void 0 : options.queryCacheExpirationTime;\n    this._operationLoader = (_options$operationLoa = options === null || options === void 0 ? void 0 : options.operationLoader) !== null && _options$operationLoa !== void 0 ? _options$operationLoa : null;\n    this._optimisticSource = null;\n    this._recordSource = source;\n    this._releaseBuffer = [];\n    this._roots = new Map();\n    this._shouldScheduleGC = false;\n    this._resolverCache = new RecordResolverCache(function () {\n      return _this._getMutableRecordSource();\n    });\n    this._storeSubscriptions = new RelayStoreSubscriptions(options === null || options === void 0 ? void 0 : options.log, this._resolverCache);\n    this._updatedRecordIDs = new Set();\n    this._shouldProcessClientComponents = options === null || options === void 0 ? void 0 : options.shouldProcessClientComponents;\n    initializeRecordSource(this._recordSource);\n  }\n  var _proto = RelayModernStore.prototype;\n  _proto.getSource = function getSource() {\n    var _this$_optimisticSour;\n    return (_this$_optimisticSour = this._optimisticSource) !== null && _this$_optimisticSour !== void 0 ? _this$_optimisticSour : this._recordSource;\n  };\n  _proto._getMutableRecordSource = function _getMutableRecordSource() {\n    var _this$_optimisticSour2;\n    return (_this$_optimisticSour2 = this._optimisticSource) !== null && _this$_optimisticSour2 !== void 0 ? _this$_optimisticSour2 : this._recordSource;\n  };\n  _proto.check = function check(operation, options) {\n    var _options$handlers, _options$getSourceFor, _options$getTargetFor, _options$defaultActor;\n    var selector = operation.root;\n    var source = this._getMutableRecordSource();\n    var globalInvalidationEpoch = this._globalInvalidationEpoch;\n    var rootEntry = this._roots.get(operation.request.identifier);\n    var operationLastWrittenAt = rootEntry != null ? rootEntry.epoch : null;\n\n    // Check if store has been globally invalidated\n    if (globalInvalidationEpoch != null) {\n      // If so, check if the operation we're checking was last written\n      // before or after invalidation occurred.\n      if (operationLastWrittenAt == null || operationLastWrittenAt <= globalInvalidationEpoch) {\n        // If the operation was written /before/ global invalidation occurred,\n        // or if this operation has never been written to the store before,\n        // we will consider the data for this operation to be stale\n        // (i.e. not resolvable from the store).\n        return {\n          status: 'stale'\n        };\n      }\n    }\n    var handlers = (_options$handlers = options === null || options === void 0 ? void 0 : options.handlers) !== null && _options$handlers !== void 0 ? _options$handlers : [];\n    var getSourceForActor = (_options$getSourceFor = options === null || options === void 0 ? void 0 : options.getSourceForActor) !== null && _options$getSourceFor !== void 0 ? _options$getSourceFor : function (actorIdentifier) {\n      assertInternalActorIdentifier(actorIdentifier);\n      return source;\n    };\n    var getTargetForActor = (_options$getTargetFor = options === null || options === void 0 ? void 0 : options.getTargetForActor) !== null && _options$getTargetFor !== void 0 ? _options$getTargetFor : function (actorIdentifier) {\n      assertInternalActorIdentifier(actorIdentifier);\n      return source;\n    };\n    var operationAvailability = DataChecker.check(getSourceForActor, getTargetForActor, (_options$defaultActor = options === null || options === void 0 ? void 0 : options.defaultActorIdentifier) !== null && _options$defaultActor !== void 0 ? _options$defaultActor : INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE, selector, handlers, this._operationLoader, this._getDataID, this._shouldProcessClientComponents);\n    return getAvailabilityStatus(operationAvailability, operationLastWrittenAt, rootEntry === null || rootEntry === void 0 ? void 0 : rootEntry.fetchTime, this._queryCacheExpirationTime);\n  };\n  _proto.retain = function retain(operation) {\n    var _this2 = this;\n    var id = operation.request.identifier;\n    var disposed = false;\n    var dispose = function dispose() {\n      // Ensure each retain can only dispose once\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      // For Flow: guard against the entry somehow not existing\n      var rootEntry = _this2._roots.get(id);\n      if (rootEntry == null) {\n        return;\n      }\n      // Decrement the ref count: if it becomes zero it is eligible\n      // for release.\n      rootEntry.refCount--;\n      if (rootEntry.refCount === 0) {\n        var _queryCacheExpirationTime = _this2._queryCacheExpirationTime;\n        var rootEntryIsStale = rootEntry.fetchTime != null && _queryCacheExpirationTime != null && rootEntry.fetchTime <= Date.now() - _queryCacheExpirationTime;\n        if (rootEntryIsStale) {\n          _this2._roots[\"delete\"](id);\n          _this2.scheduleGC();\n        } else {\n          _this2._releaseBuffer.push(id);\n\n          // If the release buffer is now over-full, remove the least-recently\n          // added entry and schedule a GC. Note that all items in the release\n          // buffer have a refCount of 0.\n          if (_this2._releaseBuffer.length > _this2._gcReleaseBufferSize) {\n            var _id = _this2._releaseBuffer.shift();\n            _this2._roots[\"delete\"](_id);\n            _this2.scheduleGC();\n          }\n        }\n      }\n    };\n    var rootEntry = this._roots.get(id);\n    if (rootEntry != null) {\n      if (rootEntry.refCount === 0) {\n        // This entry should be in the release buffer, but it no longer belongs\n        // there since it's retained. Remove it to maintain the invariant that\n        // all release buffer entries have a refCount of 0.\n        this._releaseBuffer = this._releaseBuffer.filter(function (_id) {\n          return _id !== id;\n        });\n      }\n      // If we've previously retained this operation, increment the refCount\n      rootEntry.refCount += 1;\n    } else {\n      // Otherwise create a new entry for the operation\n      this._roots.set(id, {\n        operation: operation,\n        refCount: 1,\n        epoch: null,\n        fetchTime: null\n      });\n    }\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.lookup = function lookup(selector) {\n    var source = this.getSource();\n    var snapshot = RelayReader.read(source, selector, this._resolverCache);\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(snapshot);\n    }\n    return snapshot;\n  }\n\n  // This method will return a list of updated owners from the subscriptions\n  ;\n  _proto.notify = function notify(sourceOperation, invalidateStore) {\n    var _this3 = this;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.notify.start',\n        sourceOperation: sourceOperation\n      });\n    }\n\n    // Increment the current write when notifying after executing\n    // a set of changes to the store.\n    this._currentWriteEpoch++;\n    if (invalidateStore === true) {\n      this._globalInvalidationEpoch = this._currentWriteEpoch;\n    }\n    if (RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n      // When a record is updated, we need to also handle records that depend on it,\n      // specifically Relay Resolver result records containing results based on the\n      // updated records. This both adds to updatedRecordIDs and invalidates any\n      // cached data as needed.\n      this._resolverCache.invalidateDataIDs(this._updatedRecordIDs);\n    }\n    var source = this.getSource();\n    var updatedOwners = [];\n    this._storeSubscriptions.updateSubscriptions(source, this._updatedRecordIDs, updatedOwners, sourceOperation);\n    this._invalidationSubscriptions.forEach(function (subscription) {\n      _this3._updateInvalidationSubscription(subscription, invalidateStore === true);\n    });\n    if (log != null) {\n      log({\n        name: 'store.notify.complete',\n        sourceOperation: sourceOperation,\n        updatedRecordIDs: this._updatedRecordIDs,\n        invalidatedRecordIDs: this._invalidatedRecordIDs\n      });\n    }\n    this._updatedRecordIDs.clear();\n    this._invalidatedRecordIDs.clear();\n\n    // If a source operation was provided (indicating the operation\n    // that produced this update to the store), record the current epoch\n    // at which this operation was written.\n    if (sourceOperation != null) {\n      // We only track the epoch at which the operation was written if\n      // it was previously retained, to keep the size of our operation\n      // epoch map bounded. If a query wasn't retained, we assume it can\n      // may be deleted at any moment and thus is not relevant for us to track\n      // for the purposes of invalidation.\n      var id = sourceOperation.request.identifier;\n      var rootEntry = this._roots.get(id);\n      if (rootEntry != null) {\n        rootEntry.epoch = this._currentWriteEpoch;\n        rootEntry.fetchTime = Date.now();\n      } else if (sourceOperation.request.node.params.operationKind === 'query' && this._gcReleaseBufferSize > 0 && this._releaseBuffer.length < this._gcReleaseBufferSize) {\n        // The operation isn't retained but there is space in the release buffer:\n        // temporarily track this operation in case the data can be reused soon.\n        var temporaryRootEntry = {\n          operation: sourceOperation,\n          refCount: 0,\n          epoch: this._currentWriteEpoch,\n          fetchTime: Date.now()\n        };\n        this._releaseBuffer.push(id);\n        this._roots.set(id, temporaryRootEntry);\n      }\n    }\n    return updatedOwners;\n  };\n  _proto.publish = function publish(source, idsMarkedForInvalidation) {\n    var target = this._getMutableRecordSource();\n    updateTargetFromSource(target, source,\n    // We increment the current epoch at the end of the set of updates,\n    // in notify(). Here, we pass what will be the incremented value of\n    // the epoch to use to write to invalidated records.\n    this._currentWriteEpoch + 1, idsMarkedForInvalidation, this._updatedRecordIDs, this._invalidatedRecordIDs);\n    // NOTE: log *after* processing the source so that even if a bad log function\n    // mutates the source, it doesn't affect Relay processing of it.\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.publish',\n        source: source,\n        optimistic: target === this._optimisticSource\n      });\n    }\n  };\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._storeSubscriptions.subscribe(snapshot, callback);\n  };\n  _proto.holdGC = function holdGC() {\n    var _this4 = this;\n    if (this._gcRun) {\n      this._gcRun = null;\n      this._shouldScheduleGC = true;\n    }\n    this._gcHoldCounter++;\n    var dispose = function dispose() {\n      if (_this4._gcHoldCounter > 0) {\n        _this4._gcHoldCounter--;\n        if (_this4._gcHoldCounter === 0 && _this4._shouldScheduleGC) {\n          _this4.scheduleGC();\n          _this4._shouldScheduleGC = false;\n        }\n      }\n    };\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.toJSON = function toJSON() {\n    return 'RelayModernStore()';\n  };\n  _proto.getEpoch = function getEpoch() {\n    return this._currentWriteEpoch;\n  }\n\n  // Internal API\n  ;\n  _proto.__getUpdatedRecordIDs = function __getUpdatedRecordIDs() {\n    return this._updatedRecordIDs;\n  };\n  _proto.lookupInvalidationState = function lookupInvalidationState(dataIDs) {\n    var _this5 = this;\n    var invalidations = new Map();\n    dataIDs.forEach(function (dataID) {\n      var _RelayModernRecord$ge;\n      var record = _this5.getSource().get(dataID);\n      invalidations.set(dataID, (_RelayModernRecord$ge = RelayModernRecord.getInvalidationEpoch(record)) !== null && _RelayModernRecord$ge !== void 0 ? _RelayModernRecord$ge : null);\n    });\n    invalidations.set('global', this._globalInvalidationEpoch);\n    return {\n      dataIDs: dataIDs,\n      invalidations: invalidations\n    };\n  };\n  _proto.checkInvalidationState = function checkInvalidationState(prevInvalidationState) {\n    var latestInvalidationState = this.lookupInvalidationState(prevInvalidationState.dataIDs);\n    var currentInvalidations = latestInvalidationState.invalidations;\n    var prevInvalidations = prevInvalidationState.invalidations;\n\n    // Check if global invalidation has changed\n    if (currentInvalidations.get('global') !== prevInvalidations.get('global')) {\n      return true;\n    }\n\n    // Check if the invalidation state for any of the ids has changed.\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(prevInvalidationState.dataIDs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var dataID = _step.value;\n        if (currentInvalidations.get(dataID) !== prevInvalidations.get(dataID)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return false;\n  };\n  _proto.subscribeToInvalidationState = function subscribeToInvalidationState(invalidationState, callback) {\n    var _this6 = this;\n    var subscription = {\n      callback: callback,\n      invalidationState: invalidationState\n    };\n    var dispose = function dispose() {\n      _this6._invalidationSubscriptions[\"delete\"](subscription);\n    };\n    this._invalidationSubscriptions.add(subscription);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto._updateInvalidationSubscription = function _updateInvalidationSubscription(subscription, invalidatedStore) {\n    var _this7 = this;\n    var callback = subscription.callback,\n      invalidationState = subscription.invalidationState;\n    var dataIDs = invalidationState.dataIDs;\n    var isSubscribedToInvalidatedIDs = invalidatedStore || dataIDs.some(function (dataID) {\n      return _this7._invalidatedRecordIDs.has(dataID);\n    });\n    if (!isSubscribedToInvalidatedIDs) {\n      return;\n    }\n    callback();\n  };\n  _proto.snapshot = function snapshot() {\n    !(this._optimisticSource == null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernStore: Unexpected call to snapshot() while a previous ' + 'snapshot exists.') : invariant(false) : void 0;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.snapshot'\n      });\n    }\n    this._storeSubscriptions.snapshotSubscriptions(this.getSource());\n    if (this._gcRun) {\n      this._gcRun = null;\n      this._shouldScheduleGC = true;\n    }\n    this._optimisticSource = RelayOptimisticRecordSource.create(this.getSource());\n  };\n  _proto.restore = function restore() {\n    !(this._optimisticSource != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernStore: Unexpected call to restore(), expected a snapshot ' + 'to exist (make sure to call snapshot()).') : invariant(false) : void 0;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.restore'\n      });\n    }\n    this._optimisticSource = null;\n    if (this._shouldScheduleGC) {\n      this.scheduleGC();\n    }\n    this._storeSubscriptions.restoreSubscriptions();\n  };\n  _proto.scheduleGC = function scheduleGC() {\n    if (this._gcHoldCounter > 0) {\n      this._shouldScheduleGC = true;\n      return;\n    }\n    if (this._gcRun) {\n      return;\n    }\n    this._gcRun = this._collect();\n    this._gcScheduler(this._gcStep);\n  }\n\n  /**\n   * Run a full GC synchronously.\n   */;\n  _proto.__gc = function __gc() {\n    // Don't run GC while there are optimistic updates applied\n    if (this._optimisticSource != null) {\n      return;\n    }\n    var gcRun = this._collect();\n    while (!gcRun.next().done) {}\n  };\n  _proto._collect = function* _collect() {\n    /* eslint-disable no-labels */\n    top: while (true) {\n      var startEpoch = this._currentWriteEpoch;\n      var references = new Set();\n\n      // Mark all records that are traversable from a root\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._roots.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var operation = _step2.value.operation;\n          var selector = operation.root;\n          RelayReferenceMarker.mark(this._recordSource, selector, references, this._operationLoader, this._shouldProcessClientComponents);\n          // Yield for other work after each operation\n          yield;\n\n          // If the store was updated, restart\n          if (startEpoch !== this._currentWriteEpoch) {\n            continue top;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var log = this.__log;\n      if (log != null) {\n        log({\n          name: 'store.gc',\n          references: references\n        });\n      }\n\n      // Sweep records without references\n      if (references.size === 0) {\n        // Short-circuit if *nothing* is referenced\n        this._recordSource.clear();\n      } else {\n        // Evict any unreferenced nodes\n        var storeIDs = this._recordSource.getRecordIDs();\n        for (var ii = 0; ii < storeIDs.length; ii++) {\n          var dataID = storeIDs[ii];\n          if (!references.has(dataID)) {\n            this._recordSource.remove(dataID);\n          }\n        }\n      }\n      return;\n    }\n  };\n  return RelayModernStore;\n}();\nfunction initializeRecordSource(target) {\n  if (!target.has(ROOT_ID)) {\n    var rootRecord = RelayModernRecord.create(ROOT_ID, ROOT_TYPE);\n    target.set(ROOT_ID, rootRecord);\n  }\n}\n\n/**\n * Updates the target with information from source, also updating a mapping of\n * which records in the target were changed as a result.\n * Additionally, will mark records as invalidated at the current write epoch\n * given the set of record ids marked as stale in this update.\n */\nfunction updateTargetFromSource(target, source, currentWriteEpoch, idsMarkedForInvalidation, updatedRecordIDs, invalidatedRecordIDs) {\n  // First, update any records that were marked for invalidation.\n  // For each provided dataID that was invalidated, we write the\n  // INVALIDATED_AT_KEY on the record, indicating\n  // the epoch at which the record was invalidated.\n  if (idsMarkedForInvalidation) {\n    idsMarkedForInvalidation.forEach(function (dataID) {\n      var targetRecord = target.get(dataID);\n      var sourceRecord = source.get(dataID);\n\n      // If record was deleted during the update (and also invalidated),\n      // we don't need to count it as an invalidated id\n      if (sourceRecord === null) {\n        return;\n      }\n      var nextRecord;\n      if (targetRecord != null) {\n        // If the target record exists, use it to set the epoch\n        // at which it was invalidated. This record will be updated with\n        // any changes from source in the section below\n        // where we update the target records based on the source.\n        nextRecord = RelayModernRecord.clone(targetRecord);\n      } else {\n        // If the target record doesn't exist, it means that a new record\n        // in the source was created (and also invalidated), so we use that\n        // record to set the epoch at which it was invalidated. This record\n        // will be updated with any changes from source in the section below\n        // where we update the target records based on the source.\n        nextRecord = sourceRecord != null ? RelayModernRecord.clone(sourceRecord) : null;\n      }\n      if (!nextRecord) {\n        return;\n      }\n      RelayModernRecord.setValue(nextRecord, RelayStoreUtils.INVALIDATED_AT_KEY, currentWriteEpoch);\n      invalidatedRecordIDs.add(dataID);\n      target.set(dataID, nextRecord);\n    });\n  }\n\n  // Update the target based on the changes present in source\n  var dataIDs = source.getRecordIDs();\n  for (var ii = 0; ii < dataIDs.length; ii++) {\n    var dataID = dataIDs[ii];\n    var sourceRecord = source.get(dataID);\n    var targetRecord = target.get(dataID);\n\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== \"production\") {\n      if (sourceRecord) {\n        RelayModernRecord.freeze(sourceRecord);\n      }\n    }\n    if (sourceRecord && targetRecord) {\n      // ReactFlightClientResponses are lazy and only materialize when readRoot\n      // is called when we read the field, so if the record is a Flight field\n      // we always use the new record's data regardless of whether\n      // it actually changed. Let React take care of reconciliation instead.\n      var nextRecord = RelayModernRecord.getType(targetRecord) === RelayStoreReactFlightUtils.REACT_FLIGHT_TYPE_NAME ? sourceRecord : RelayModernRecord.update(targetRecord, sourceRecord);\n      if (nextRecord !== targetRecord) {\n        // Prevent mutation of a record from outside the store.\n        if (process.env.NODE_ENV !== \"production\") {\n          RelayModernRecord.freeze(nextRecord);\n        }\n        updatedRecordIDs.add(dataID);\n        target.set(dataID, nextRecord);\n      }\n    } else if (sourceRecord === null) {\n      target[\"delete\"](dataID);\n      if (targetRecord !== null) {\n        updatedRecordIDs.add(dataID);\n      }\n    } else if (sourceRecord) {\n      target.set(dataID, sourceRecord);\n      updatedRecordIDs.add(dataID);\n    } // don't add explicit undefined\n  }\n}\n\n/**\n * Returns an OperationAvailability given the Availability returned\n * by checking an operation, and when that operation was last written to the store.\n * Specifically, the provided Availability of an operation will contain the\n * value of when a record referenced by the operation was most recently\n * invalidated; given that value, and given when this operation was last\n * written to the store, this function will return the overall\n * OperationAvailability for the operation.\n */\nfunction getAvailabilityStatus(operationAvailability, operationLastWrittenAt, operationFetchTime, queryCacheExpirationTime) {\n  var mostRecentlyInvalidatedAt = operationAvailability.mostRecentlyInvalidatedAt,\n    status = operationAvailability.status;\n  if (typeof mostRecentlyInvalidatedAt === 'number') {\n    // If some record referenced by this operation is stale, then the operation itself is stale\n    // if either the operation itself was never written *or* the operation was last written\n    // before the most recent invalidation of its reachable records.\n    if (operationLastWrittenAt == null || mostRecentlyInvalidatedAt > operationLastWrittenAt) {\n      return {\n        status: 'stale'\n      };\n    }\n  }\n  if (status === 'missing') {\n    return {\n      status: 'missing'\n    };\n  }\n  if (operationFetchTime != null && queryCacheExpirationTime != null) {\n    var isStale = operationFetchTime <= Date.now() - queryCacheExpirationTime;\n    if (isStale) {\n      return {\n        status: 'stale'\n      };\n    }\n  }\n\n  // There were no invalidations of any reachable records *or* the operation is known to have\n  // been fetched after the most recent record invalidation.\n  return {\n    status: 'available',\n    fetchTime: operationFetchTime !== null && operationFetchTime !== void 0 ? operationFetchTime : null\n  };\n}\nmodule.exports = RelayModernStore;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar invariant = require('invariant');\nvar RelayOperationTracker = /*#__PURE__*/function () {\n  function RelayOperationTracker() {\n    this._ownersToPendingOperations = new Map();\n    this._pendingOperationsToOwners = new Map();\n    this._ownersToPendingPromise = new Map();\n  }\n\n  /**\n   * Update the map of current processing operations with the set of\n   * affected owners and notify subscribers\n   */\n  var _proto = RelayOperationTracker.prototype;\n  _proto.update = function update(pendingOperation, affectedOwners) {\n    if (affectedOwners.size === 0) {\n      return;\n    }\n    var pendingOperationIdentifier = pendingOperation.identifier;\n    var newlyAffectedOwnersIdentifier = new Set();\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(affectedOwners),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var owner = _step.value;\n        var ownerIdentifier = owner.identifier;\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n        if (pendingOperationsAffectingOwner != null) {\n          // In this case the `ownerIdentifier` already affected by some operations\n          // We just need to detect, is it the same operation that we already\n          // have in the list, or it's a new operation\n          if (!pendingOperationsAffectingOwner.has(pendingOperationIdentifier)) {\n            pendingOperationsAffectingOwner.set(pendingOperationIdentifier, pendingOperation);\n            newlyAffectedOwnersIdentifier.add(ownerIdentifier);\n          }\n        } else {\n          // This is a new `ownerIdentifier` that is affected by the operation\n          this._ownersToPendingOperations.set(ownerIdentifier, new Map([[pendingOperationIdentifier, pendingOperation]]));\n          newlyAffectedOwnersIdentifier.add(ownerIdentifier);\n        }\n      }\n\n      // No new owners were affected by this operation, we may stop here\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (newlyAffectedOwnersIdentifier.size === 0) {\n      return;\n    }\n\n    // But, if some owners were affected we need to add them to\n    // the `_pendingOperationsToOwners` set\n    var ownersAffectedByPendingOperation = this._pendingOperationsToOwners.get(pendingOperationIdentifier) || new Set();\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(newlyAffectedOwnersIdentifier),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _ownerIdentifier = _step2.value;\n        this._resolveOwnerResolvers(_ownerIdentifier);\n        ownersAffectedByPendingOperation.add(_ownerIdentifier);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    this._pendingOperationsToOwners.set(pendingOperationIdentifier, ownersAffectedByPendingOperation);\n  }\n\n  /**\n   * Once pending operation is completed we need to remove it\n   * from all tracking maps\n   */;\n  _proto.complete = function complete(pendingOperation) {\n    var pendingOperationIdentifier = pendingOperation.identifier;\n    var affectedOwnersIdentifier = this._pendingOperationsToOwners.get(pendingOperationIdentifier);\n    if (affectedOwnersIdentifier == null) {\n      return;\n    }\n    // These were the owners affected only by `pendingOperationIdentifier`\n    var completedOwnersIdentifier = new Set();\n\n    // These were the owners affected by `pendingOperationIdentifier`\n    // and some other operations\n    var updatedOwnersIdentifier = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(affectedOwnersIdentifier),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var ownerIdentifier = _step3.value;\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n        if (!pendingOperationsAffectingOwner) {\n          continue;\n        }\n        pendingOperationsAffectingOwner[\"delete\"](pendingOperationIdentifier);\n        if (pendingOperationsAffectingOwner.size > 0) {\n          updatedOwnersIdentifier.add(ownerIdentifier);\n        } else {\n          completedOwnersIdentifier.add(ownerIdentifier);\n        }\n      }\n\n      // Complete subscriptions for all owners, affected by `pendingOperationIdentifier`\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(completedOwnersIdentifier),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _ownerIdentifier2 = _step4.value;\n        this._resolveOwnerResolvers(_ownerIdentifier2);\n        this._ownersToPendingOperations[\"delete\"](_ownerIdentifier2);\n      }\n\n      // Update all ownerIdentifier that were updated by `pendingOperationIdentifier` but still\n      // are affected by other operations\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(updatedOwnersIdentifier),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _ownerIdentifier3 = _step5.value;\n        this._resolveOwnerResolvers(_ownerIdentifier3);\n      }\n\n      // Finally, remove pending operation identifier\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._pendingOperationsToOwners[\"delete\"](pendingOperationIdentifier);\n  };\n  _proto._resolveOwnerResolvers = function _resolveOwnerResolvers(ownerIdentifier) {\n    var promiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);\n    if (promiseEntry != null) {\n      promiseEntry.resolve();\n    }\n    this._ownersToPendingPromise[\"delete\"](ownerIdentifier);\n  };\n  _proto.getPendingOperationsAffectingOwner = function getPendingOperationsAffectingOwner(owner) {\n    var ownerIdentifier = owner.identifier;\n    var pendingOperationsForOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n    if (pendingOperationsForOwner == null || pendingOperationsForOwner.size === 0) {\n      return null;\n    }\n    var cachedPromiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);\n    if (cachedPromiseEntry != null) {\n      return {\n        promise: cachedPromiseEntry.promise,\n        pendingOperations: cachedPromiseEntry.pendingOperations\n      };\n    }\n    var resolve;\n    var promise = new Promise(function (r) {\n      resolve = r;\n    });\n    !(resolve != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayOperationTracker: Expected resolver to be defined. If you' + 'are seeing this, it is likely a bug in Relay.') : invariant(false) : void 0;\n    var pendingOperations = Array.from(pendingOperationsForOwner.values());\n    this._ownersToPendingPromise.set(ownerIdentifier, {\n      promise: promise,\n      resolve: resolve,\n      pendingOperations: pendingOperations\n    });\n    return {\n      promise: promise,\n      pendingOperations: pendingOperations\n    };\n  };\n  return RelayOperationTracker;\n}();\nmodule.exports = RelayOperationTracker;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n  var _proto = RelayOptimisticRecordSource.prototype;\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n    this._sink.clear();\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n    var merged = (0, _objectSpread2[\"default\"])({}, this._base.toJSON());\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n    return merged;\n  };\n  _proto.getOptimisticRecordIDs = function getOptimisticRecordIDs() {\n    return new Set(this._sink.getRecordIDs());\n  };\n  return RelayOptimisticRecordSource;\n}();\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\nfunction getOptimisticRecordIDs(source) {\n  !(source instanceof RelayOptimisticRecordSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getOptimisticRecordIDs: Instance of RelayOptimisticRecordSource is expected') : invariant(false) : void 0;\n  return source.getOptimisticRecordIDs();\n}\nmodule.exports = {\n  create: create,\n  getOptimisticRecordIDs: getOptimisticRecordIDs\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _global$ErrorUtils$ap, _global$ErrorUtils;\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\nvar RelayRecordSourceSelectorProxy = require('../mutations/RelayRecordSourceSelectorProxy');\nvar RelayReader = require('./RelayReader');\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\nvar applyWithGuard = (_global$ErrorUtils$ap = _global === null || _global === void 0 ? void 0 : (_global$ErrorUtils = _global.ErrorUtils) === null || _global$ErrorUtils === void 0 ? void 0 : _global$ErrorUtils.applyWithGuard) !== null && _global$ErrorUtils$ap !== void 0 ? _global$ErrorUtils$ap : function (callback, context, args, onError, name) {\n  return callback.apply(context, args);\n};\n\n/**\n * Coordinates the concurrent modification of a `Store` due to optimistic and\n * non-revertable client updates and server payloads:\n * - Applies optimistic updates.\n * - Reverts optimistic updates, rebasing any subsequent updates.\n * - Commits client updates (typically for client schema extensions).\n * - Commits server updates:\n *   - Normalizes query/mutation/subscription responses.\n *   - Executes handlers for \"handle\" fields.\n *   - Reverts and reapplies pending optimistic updates.\n */\nvar RelayPublishQueue = /*#__PURE__*/function () {\n  // True if the next `run()` should apply the backup and rerun all optimistic\n  // updates performing a rebase.\n\n  // Payloads to apply or Sources to publish to the store with the next `run()`.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // Optimistic updaters to add with the next `run()`.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // Optimistic updaters that are already added and might be rerun in order to\n  // rebase them.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // For _pendingOptimisticUpdates, _appliedOptimisticUpdates, and _pendingData,\n  // we want to parametrize by \"any\" since the type is effectively\n  // \"the union of all T's that PublishQueue's methods were called with\".\n\n  // Garbage collection hold, should rerun gc on dispose\n\n  function RelayPublishQueue(store, handlerProvider, getDataID, missingFieldHandlers) {\n    this._hasStoreSnapshot = false;\n    this._handlerProvider = handlerProvider || null;\n    this._pendingBackupRebase = false;\n    this._pendingData = new Set();\n    this._pendingOptimisticUpdates = new Set();\n    this._store = store;\n    this._appliedOptimisticUpdates = new Set();\n    this._gcHold = null;\n    this._getDataID = getDataID;\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n\n  /**\n   * Schedule applying an optimistic updates on the next `run()`.\n   */\n  var _proto = RelayPublishQueue.prototype;\n  _proto.applyUpdate = function applyUpdate(updater) {\n    !(!this._appliedOptimisticUpdates.has(updater) && !this._pendingOptimisticUpdates.has(updater)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayPublishQueue: Cannot apply the same update function more than ' + 'once concurrently.') : invariant(false) : void 0;\n    this._pendingOptimisticUpdates.add(updater);\n  }\n\n  /**\n   * Schedule reverting an optimistic updates on the next `run()`.\n   */;\n  _proto.revertUpdate = function revertUpdate(updater) {\n    if (this._pendingOptimisticUpdates.has(updater)) {\n      // Reverted before it was applied\n      this._pendingOptimisticUpdates[\"delete\"](updater);\n    } else if (this._appliedOptimisticUpdates.has(updater)) {\n      this._pendingBackupRebase = true;\n      this._appliedOptimisticUpdates[\"delete\"](updater);\n    }\n  }\n\n  /**\n   * Schedule a revert of all optimistic updates on the next `run()`.\n   */;\n  _proto.revertAll = function revertAll() {\n    this._pendingBackupRebase = true;\n    this._pendingOptimisticUpdates.clear();\n    this._appliedOptimisticUpdates.clear();\n  }\n\n  /**\n   * Schedule applying a payload to the store on the next `run()`.\n   */;\n  _proto.commitPayload = function commitPayload(operation, payload, updater) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'payload',\n      operation: operation,\n      payload: payload,\n      updater: updater\n    });\n  }\n\n  /**\n   * Schedule an updater to mutate the store on the next `run()` typically to\n   * update client schema fields.\n   */;\n  _proto.commitUpdate = function commitUpdate(updater) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'updater',\n      updater: updater\n    });\n  }\n\n  /**\n   * Schedule a publish to the store from the provided source on the next\n   * `run()`. As an example, to update the store with substituted fields that\n   * are missing in the store.\n   */;\n  _proto.commitSource = function commitSource(source) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'source',\n      source: source\n    });\n  }\n\n  /**\n   * Execute all queued up operations from the other public methods.\n   */;\n  _proto.run = function run(sourceOperation) {\n    var runWillClearGcHold = this._appliedOptimisticUpdates === 0 && !!this._gcHold;\n    var runIsANoop =\n    // this._pendingBackupRebase is true if an applied optimistic\n    // update has potentially been reverted or if this._pendingData is not empty.\n    !this._pendingBackupRebase && this._pendingOptimisticUpdates.size === 0 && !runWillClearGcHold;\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(!runIsANoop, 'RelayPublishQueue.run was called, but the call would have been a noop.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(this._isRunning !== true, 'A store update was detected within another store update. Please ' + \"make sure new store updates aren't being executed within an \" + 'updater function for a different update.') : void 0;\n      this._isRunning = true;\n    }\n    if (runIsANoop) {\n      if (process.env.NODE_ENV !== \"production\") {\n        this._isRunning = false;\n      }\n      return [];\n    }\n    if (this._pendingBackupRebase) {\n      if (this._hasStoreSnapshot) {\n        this._store.restore();\n        this._hasStoreSnapshot = false;\n      }\n    }\n    var invalidatedStore = this._commitData();\n    if (this._pendingOptimisticUpdates.size || this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      if (!this._hasStoreSnapshot) {\n        this._store.snapshot();\n        this._hasStoreSnapshot = true;\n      }\n      this._applyUpdates();\n    }\n    this._pendingBackupRebase = false;\n    if (this._appliedOptimisticUpdates.size > 0) {\n      if (!this._gcHold) {\n        this._gcHold = this._store.holdGC();\n      }\n    } else {\n      if (this._gcHold) {\n        this._gcHold.dispose();\n        this._gcHold = null;\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      this._isRunning = false;\n    }\n    return this._store.notify(sourceOperation, invalidatedStore);\n  }\n\n  /**\n   * _publishSourceFromPayload will return a boolean indicating if the\n   * publish caused the store to be globally invalidated.\n   */;\n  _proto._publishSourceFromPayload = function _publishSourceFromPayload(pendingPayload) {\n    var _this = this;\n    var payload = pendingPayload.payload,\n      operation = pendingPayload.operation,\n      updater = pendingPayload.updater;\n    var source = payload.source,\n      fieldPayloads = payload.fieldPayloads;\n    var mutator = new RelayRecordSourceMutator(this._store.getSource(), source);\n    var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider, this._missingFieldHandlers);\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for ' + 'handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(recordSourceProxy, fieldPayload);\n      });\n    }\n    if (updater) {\n      var selector = operation.fragment;\n      !(selector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a selector to be provided with updater function.') : invariant(false) : void 0;\n      var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, selector, this._missingFieldHandlers);\n      var selectorData = lookupSelector(source, selector);\n      updater(recordSourceSelectorProxy, selectorData);\n    }\n    var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();\n    this._store.publish(source, idsMarkedForInvalidation);\n    return recordSourceProxy.isStoreMarkedForInvalidation();\n  }\n\n  /**\n   * _commitData will return a boolean indicating if any of\n   * the pending commits caused the store to be globally invalidated.\n   */;\n  _proto._commitData = function _commitData() {\n    var _this2 = this;\n    if (!this._pendingData.size) {\n      return false;\n    }\n    var invalidatedStore = false;\n    this._pendingData.forEach(function (data) {\n      if (data.kind === 'payload') {\n        var payloadInvalidatedStore = _this2._publishSourceFromPayload(data);\n        invalidatedStore = invalidatedStore || payloadInvalidatedStore;\n      } else if (data.kind === 'source') {\n        var source = data.source;\n        _this2._store.publish(source);\n      } else {\n        var updater = data.updater;\n        var sink = RelayRecordSource.create();\n        var mutator = new RelayRecordSourceMutator(_this2._store.getSource(), sink);\n        var recordSourceProxy = new RelayRecordSourceProxy(mutator, _this2._getDataID, _this2._handlerProvider, _this2._missingFieldHandlers);\n        applyWithGuard(updater, null, [recordSourceProxy], null, 'RelayPublishQueue:commitData');\n        invalidatedStore = invalidatedStore || recordSourceProxy.isStoreMarkedForInvalidation();\n        var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();\n        _this2._store.publish(sink, idsMarkedForInvalidation);\n      }\n    });\n    this._pendingData.clear();\n    return invalidatedStore;\n  }\n\n  /**\n   * Note that unlike _commitData, _applyUpdates will NOT return a boolean\n   * indicating if the store was globally invalidated, since invalidating the\n   * store during an optimistic update is a no-op.\n   */;\n  _proto._applyUpdates = function _applyUpdates() {\n    var _this3 = this;\n    var sink = RelayRecordSource.create();\n    var mutator = new RelayRecordSourceMutator(this._store.getSource(), sink);\n    var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider, this._missingFieldHandlers);\n\n    // $FlowFixMe[unclear-type] see explanation above.\n    var processUpdate = function processUpdate(optimisticUpdate) {\n      if (optimisticUpdate.storeUpdater) {\n        var storeUpdater = optimisticUpdate.storeUpdater;\n        applyWithGuard(storeUpdater, null, [recordSourceProxy], null, 'RelayPublishQueue:applyUpdates');\n      } else {\n        var operation = optimisticUpdate.operation,\n          payload = optimisticUpdate.payload,\n          updater = optimisticUpdate.updater;\n        var source = payload.source,\n          fieldPayloads = payload.fieldPayloads;\n        if (source) {\n          recordSourceProxy.publishSource(source, fieldPayloads);\n        }\n        if (updater) {\n          var selectorData;\n          if (source) {\n            selectorData = lookupSelector(source, operation.fragment);\n          }\n          var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, operation.fragment, _this3._missingFieldHandlers);\n          applyWithGuard(updater, null, [recordSourceSelectorProxy, selectorData], null, 'RelayPublishQueue:applyUpdates');\n        }\n      }\n    };\n\n    // rerun all updaters in case we are running a rebase\n    if (this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      this._appliedOptimisticUpdates.forEach(processUpdate);\n    }\n\n    // apply any new updaters\n    if (this._pendingOptimisticUpdates.size) {\n      this._pendingOptimisticUpdates.forEach(function (optimisticUpdate) {\n        processUpdate(optimisticUpdate);\n        _this3._appliedOptimisticUpdates.add(optimisticUpdate);\n      });\n      this._pendingOptimisticUpdates.clear();\n    }\n    this._store.publish(sink);\n  };\n  return RelayPublishQueue;\n}();\nfunction lookupSelector(source, selector) {\n  var selectorData = RelayReader.read(source, selector).data;\n  if (process.env.NODE_ENV !== \"production\") {\n    var deepFreeze = require('../util/deepFreeze');\n    if (selectorData) {\n      deepFreeze(selectorData);\n    }\n  }\n  return selectorData;\n}\nmodule.exports = RelayPublishQueue;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require.ACTOR_CHANGE,\n  ALIASED_FRAGMENT_SPREAD = _require.ALIASED_FRAGMENT_SPREAD,\n  ALIASED_INLINE_FRAGMENT_SPREAD = _require.ALIASED_INLINE_FRAGMENT_SPREAD,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EDGE_TO_SERVER_OBJECT = _require.CLIENT_EDGE_TO_SERVER_OBJECT,\n  CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n  CONDITION = _require.CONDITION,\n  DEFER = _require.DEFER,\n  FLIGHT_FIELD = _require.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n  INLINE_DATA_FRAGMENT_SPREAD = _require.INLINE_DATA_FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n  LINKED_FIELD = _require.LINKED_FIELD,\n  MODULE_IMPORT = _require.MODULE_IMPORT,\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER,\n  RELAY_RESOLVER = _require.RELAY_RESOLVER,\n  REQUIRED_FIELD = _require.REQUIRED_FIELD,\n  SCALAR_FIELD = _require.SCALAR_FIELD,\n  STREAM = _require.STREAM;\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require2 = require('./experimental-live-resolvers/LiveResolverSuspenseSentinel'),\n  isSuspenseSentinel = _require2.isSuspenseSentinel;\nvar RelayConcreteVariables = require('./RelayConcreteVariables');\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayStoreReactFlightUtils'),\n  getReactFlightClientResponse = _require3.getReactFlightClientResponse;\nvar _require4 = require('./RelayStoreUtils'),\n  CLIENT_EDGE_TRAVERSAL_PATH = _require4.CLIENT_EDGE_TRAVERSAL_PATH,\n  FRAGMENT_OWNER_KEY = _require4.FRAGMENT_OWNER_KEY,\n  FRAGMENT_PROP_NAME_KEY = _require4.FRAGMENT_PROP_NAME_KEY,\n  FRAGMENTS_KEY = _require4.FRAGMENTS_KEY,\n  ID_KEY = _require4.ID_KEY,\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require4.IS_WITHIN_UNMATCHED_TYPE_REFINEMENT,\n  MODULE_COMPONENT_KEY = _require4.MODULE_COMPONENT_KEY,\n  ROOT_ID = _require4.ROOT_ID,\n  getArgumentValues = _require4.getArgumentValues,\n  getModuleComponentKey = _require4.getModuleComponentKey,\n  getStorageKey = _require4.getStorageKey;\nvar _require5 = require('./ResolverCache'),\n  NoopResolverCache = _require5.NoopResolverCache;\nvar _require6 = require('./ResolverFragments'),\n  RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL = _require6.RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL,\n  withResolverContext = _require6.withResolverContext;\nvar _require7 = require('./TypeID'),\n  generateTypeID = _require7.generateTypeID;\nvar invariant = require('invariant');\nfunction read(recordSource, selector, resolverCache) {\n  var reader = new RelayReader(recordSource, selector, resolverCache !== null && resolverCache !== void 0 ? resolverCache : new NoopResolverCache());\n  return reader.read();\n}\n\n/**\n * @private\n */\nvar RelayReader = /*#__PURE__*/function () {\n  function RelayReader(recordSource, selector, resolverCache) {\n    var _selector$clientEdgeT;\n    this._clientEdgeTraversalPath = RelayFeatureFlags.ENABLE_CLIENT_EDGES && (_selector$clientEdgeT = selector.clientEdgeTraversalPath) !== null && _selector$clientEdgeT !== void 0 && _selector$clientEdgeT.length ? (0, _toConsumableArray2[\"default\"])(selector.clientEdgeTraversalPath) : [];\n    this._missingClientEdges = [];\n    this._missingLiveResolverFields = [];\n    this._isMissingData = false;\n    this._isWithinUnmatchedTypeRefinement = false;\n    this._missingRequiredFields = null;\n    this._owner = selector.owner;\n    this._recordSource = recordSource;\n    this._seenRecords = new Set();\n    this._selector = selector;\n    this._variables = selector.variables;\n    this._resolverCache = resolverCache;\n    this._resolverErrors = [];\n    this._fragmentName = selector.node.name;\n    this._updatedDataIDs = new Set();\n  }\n  var _proto = RelayReader.prototype;\n  _proto.read = function read() {\n    var _this$_selector = this._selector,\n      node = _this$_selector.node,\n      dataID = _this$_selector.dataID,\n      isWithinUnmatchedTypeRefinement = _this$_selector.isWithinUnmatchedTypeRefinement;\n    var abstractKey = node.abstractKey;\n    var record = this._recordSource.get(dataID);\n\n    // Relay historically allowed child fragments to be read even if the root object\n    // did not match the type of the fragment: either the root object has a different\n    // concrete type than the fragment (for concrete fragments) or the root object does\n    // not conform to the interface/union for abstract fragments.\n    // For suspense purposes, however, we want to accurately compute whether any data\n    // is missing: but if the fragment type doesn't match (or a parent type didn't\n    // match), then no data is expected to be present.\n\n    // By default data is expected to be present unless this selector was read out\n    // from within a non-matching type refinement in a parent fragment:\n    var isDataExpectedToBePresent = !isWithinUnmatchedTypeRefinement;\n\n    // If this is a concrete fragment and the concrete type of the record does not\n    // match, then no data is expected to be present.\n    if (isDataExpectedToBePresent && abstractKey == null && record != null) {\n      var recordType = RelayModernRecord.getType(record);\n      if (recordType !== node.type &&\n      // The root record type is a special `__Root` type and may not match the\n      // type on the ast, so ignore type mismatches at the root.\n      // We currently detect whether we're at the root by checking against ROOT_ID,\n      // but this does not work for mutations/subscriptions which generate unique\n      // root ids. This is acceptable in practice as we don't read data for mutations/\n      // subscriptions in a situation where we would use isMissingData to decide whether\n      // to suspend or not.\n      // TODO T96653810: Correctly detect reading from root of mutation/subscription\n      dataID !== ROOT_ID) {\n        isDataExpectedToBePresent = false;\n      }\n    }\n\n    // If this is an abstract fragment (and the precise refinement GK is enabled)\n    // then data is only expected to be present if the record type is known to\n    // implement the interface. If we aren't sure whether the record implements\n    // the interface, that itself constitutes \"expected\" data being missing.\n    if (isDataExpectedToBePresent && abstractKey != null && record != null) {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n      if (implementsInterface === false) {\n        // Type known to not implement the interface\n        isDataExpectedToBePresent = false;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._isMissingData = true;\n      }\n    }\n    this._isWithinUnmatchedTypeRefinement = !isDataExpectedToBePresent;\n    var data = this._traverse(node, dataID, null);\n    if (this._updatedDataIDs.size > 0) {\n      this._resolverCache.notifyUpdatedSubscribers(this._updatedDataIDs);\n      this._updatedDataIDs.clear();\n    }\n    return {\n      data: data,\n      isMissingData: this._isMissingData && isDataExpectedToBePresent,\n      missingClientEdges: RelayFeatureFlags.ENABLE_CLIENT_EDGES && this._missingClientEdges.length ? this._missingClientEdges : null,\n      missingLiveResolverFields: this._missingLiveResolverFields,\n      seenRecords: this._seenRecords,\n      selector: this._selector,\n      missingRequiredFields: this._missingRequiredFields,\n      relayResolverErrors: this._resolverErrors\n    };\n  };\n  _proto._markDataAsMissing = function _markDataAsMissing() {\n    this._isMissingData = true;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && this._clientEdgeTraversalPath.length) {\n      var top = this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1];\n      // Top can be null if we've traversed past a client edge into an ordinary\n      // client extension field; we never want to fetch in response to missing\n      // data off of a client extension field.\n      if (top !== null) {\n        this._missingClientEdges.push({\n          request: top.readerClientEdge.operation,\n          clientEdgeDestinationID: top.clientEdgeDestinationID\n        });\n      }\n    }\n  };\n  _proto._traverse = function _traverse(node, dataID, prevData) {\n    var record = this._recordSource.get(dataID);\n    this._seenRecords.add(dataID);\n    if (record == null) {\n      if (record === undefined) {\n        this._markDataAsMissing();\n      }\n      return record;\n    }\n    var data = prevData || {};\n    var hadRequiredData = this._traverseSelections(node.selections, record, data);\n    return hadRequiredData ? data : null;\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._maybeReportUnexpectedNull = function _maybeReportUnexpectedNull(fieldPath, action, _record) {\n    var _this$_missingRequire;\n    if (((_this$_missingRequire = this._missingRequiredFields) === null || _this$_missingRequire === void 0 ? void 0 : _this$_missingRequire.action) === 'THROW') {\n      // Chained @required directives may cause a parent `@required(action:\n      // THROW)` field to become null, so the first missing field we\n      // encounter is likely to be the root cause of the error.\n      return;\n    }\n    var owner = this._fragmentName;\n    switch (action) {\n      case 'THROW':\n        this._missingRequiredFields = {\n          action: action,\n          field: {\n            path: fieldPath,\n            owner: owner\n          }\n        };\n        return;\n      case 'LOG':\n        if (this._missingRequiredFields == null) {\n          this._missingRequiredFields = {\n            action: action,\n            fields: [{\n              path: fieldPath,\n              owner: owner\n            }]\n          };\n        } else {\n          this._missingRequiredFields = {\n            action: action,\n            fields: [].concat((0, _toConsumableArray2[\"default\"])(this._missingRequiredFields.fields), [{\n              path: fieldPath,\n              owner: owner\n            }])\n          };\n        }\n        return;\n      default:\n        action;\n    }\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, record, data) /* had all expected data */{\n    for (var i = 0; i < selections.length; i++) {\n      var selection = selections[i];\n      switch (selection.kind) {\n        case REQUIRED_FIELD:\n          {\n            var fieldValue = this._readRequiredField(selection, record, data);\n            if (fieldValue == null) {\n              var action = selection.action;\n              if (action !== 'NONE') {\n                this._maybeReportUnexpectedNull(selection.path, action, record);\n              }\n              // We are going to throw, or our parent is going to get nulled out.\n              // Either way, sibling values are going to be ignored, so we can\n              // bail early here as an optimization.\n              return false;\n            }\n            break;\n          }\n        case SCALAR_FIELD:\n          this._readScalar(selection, record, data);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            this._readPluralLink(selection, record, data);\n          } else {\n            this._readLink(selection, record, data);\n          }\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            var hasExpectedData = this._traverseSelections(selection.selections, record, data);\n            if (!hasExpectedData) {\n              return false;\n            }\n          }\n          break;\n        case INLINE_FRAGMENT:\n          {\n            if (this._readInlineFragment(selection, record, data) === false) {\n              return false;\n            }\n            break;\n          }\n        case RELAY_LIVE_RESOLVER:\n        case RELAY_RESOLVER:\n          {\n            if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n              throw new Error('Relay Resolver fields are not yet supported.');\n            }\n            this._readResolverField(selection, record, data);\n            break;\n          }\n        case FRAGMENT_SPREAD:\n          this._createFragmentPointer(selection, record, data);\n          break;\n        case ALIASED_FRAGMENT_SPREAD:\n          data[selection.name] = this._createAliasedFragmentSpread(selection, record);\n          break;\n        case ALIASED_INLINE_FRAGMENT_SPREAD:\n          {\n            var _fieldValue = this._readInlineFragment(selection.fragment, record, {});\n            if (_fieldValue === false) {\n              _fieldValue = null;\n            }\n            data[selection.name] = _fieldValue;\n            break;\n          }\n        case MODULE_IMPORT:\n          this._readModuleImport(selection, record, data);\n          break;\n        case INLINE_DATA_FRAGMENT_SPREAD:\n          this._createInlineDataOrResolverFragmentPointer(selection, record, data);\n          break;\n        case DEFER:\n        case CLIENT_EXTENSION:\n          {\n            var isMissingData = this._isMissingData;\n            var alreadyMissingClientEdges = this._missingClientEdges.length;\n            if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n              this._clientEdgeTraversalPath.push(null);\n            }\n            var _hasExpectedData = this._traverseSelections(selection.selections, record, data);\n            // The only case where we want to suspend due to missing data off of\n            // a client extension is if we reached a client edge that we might be\n            // able to fetch, or there is a missing data in one of the live resolvers.\n            this._isMissingData = isMissingData || this._missingClientEdges.length > alreadyMissingClientEdges || this._missingLiveResolverFields.length > 0;\n            if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n              this._clientEdgeTraversalPath.pop();\n            }\n            if (!_hasExpectedData) {\n              return false;\n            }\n            break;\n          }\n        case STREAM:\n          {\n            var _hasExpectedData2 = this._traverseSelections(selection.selections, record, data);\n            if (!_hasExpectedData2) {\n              return false;\n            }\n            break;\n          }\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            this._readFlightField(selection, record, data);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case ACTOR_CHANGE:\n          this._readActorChange(selection, record, data);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n        case CLIENT_EDGE_TO_SERVER_OBJECT:\n          if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n            this._readClientEdge(selection, record, data);\n          } else {\n            throw new Error('Client edges are not yet supported.');\n          }\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    }\n    return true;\n  };\n  _proto._readRequiredField = function _readRequiredField(selection, record, data) {\n    switch (selection.field.kind) {\n      case SCALAR_FIELD:\n        return this._readScalar(selection.field, record, data);\n      case LINKED_FIELD:\n        if (selection.field.plural) {\n          return this._readPluralLink(selection.field, record, data);\n        } else {\n          return this._readLink(selection.field, record, data);\n        }\n      case RELAY_RESOLVER:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readResolverField(selection.field, record, data);\n      case RELAY_LIVE_RESOLVER:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readResolverField(selection.field, record, data);\n      case CLIENT_EDGE_TO_CLIENT_OBJECT:\n      case CLIENT_EDGE_TO_SERVER_OBJECT:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readClientEdge(selection.field, record, data);\n      default:\n        selection.field.kind;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._readResolverField = function _readResolverField(field, record, data) {\n    var _this = this;\n    var _field$alias;\n    var fragment = field.fragment;\n    var parentRecordID = RelayModernRecord.getDataID(record);\n\n    // Found when reading the resolver fragment, which can happen either when\n    // evaluating the resolver and it calls readFragment, or when checking if the\n    // inputs have changed since a previous evaluation:\n    var snapshot;\n\n    // The function `getDataForResolverFragment` serves two purposes:\n    // 1. To memoize reads of the resolver's root fragment. This is important\n    //    because we may read it twice. Once to check if the results have changed\n    //    since last read, and once when we actually evaluate.\n    // 2. To intercept the snapshot so that it can be cached by the resolver\n    //    cache. This is what enables the change detection described in #1.\n    //\n    // Note: In the future this can be moved into the ResolverCache.\n    var getDataForResolverFragment = function getDataForResolverFragment(singularReaderSelector) {\n      if (snapshot != null) {\n        // It was already read when checking for input staleness; no need to read it again.\n        // Note that the variables like fragmentSeenRecordIDs in the outer closure will have\n        // already been set and will still be used in this case.\n        return {\n          data: snapshot.data,\n          isMissingData: snapshot.isMissingData\n        };\n      }\n      snapshot = read(_this._recordSource, singularReaderSelector, _this._resolverCache);\n      return {\n        data: snapshot.data,\n        isMissingData: snapshot.isMissingData\n      };\n    };\n\n    // This function `evaluate` tells the resolver cache how to read this\n    // resolver. It returns an `EvaluationResult` which gives the resolver cache:\n    // * `resolverResult` The value returned by the resolver function\n    // * `snapshot` The snapshot returned when reading the resolver's root fragment (if it has one)\n    // * `error` If the resolver throws, its error is caught (inside\n    //   `getResolverValue`) and converted into an error object.\n    var evaluate = function evaluate() {\n      if (fragment != null) {\n        var key = {\n          __id: parentRecordID,\n          __fragmentOwner: _this._owner,\n          __fragments: (0, _defineProperty2[\"default\"])({}, fragment.name, fragment.args ? getArgumentValues(fragment.args, _this._variables) : {})\n        };\n        var resolverContext = {\n          getDataForResolverFragment: getDataForResolverFragment\n        };\n        return withResolverContext(resolverContext, function () {\n          var _getResolverValue = getResolverValue(field, _this._variables, key, _this._fragmentName),\n            resolverResult = _getResolverValue[0],\n            resolverError = _getResolverValue[1];\n          return {\n            resolverResult: resolverResult,\n            snapshot: snapshot,\n            error: resolverError\n          };\n        });\n      } else {\n        var _getResolverValue2 = getResolverValue(field, _this._variables, null, _this._fragmentName),\n          resolverResult = _getResolverValue2[0],\n          _resolverError = _getResolverValue2[1];\n        return {\n          resolverResult: resolverResult,\n          snapshot: undefined,\n          error: _resolverError\n        };\n      }\n    };\n    var _this$_resolverCache$ = this._resolverCache.readFromCacheOrEvaluate(parentRecordID, field, this._variables, evaluate, getDataForResolverFragment),\n      result = _this$_resolverCache$[0],\n      seenRecord = _this$_resolverCache$[1],\n      resolverError = _this$_resolverCache$[2],\n      cachedSnapshot = _this$_resolverCache$[3],\n      suspenseID = _this$_resolverCache$[4],\n      updatedDataIDs = _this$_resolverCache$[5];\n\n    // The resolver's root fragment (if there is one) may be missing data, have\n    // errors, or be in a suspended state. Here we propagate those cases\n    // upwards to mimic the behavior of having traversed into that fragment directly.\n    if (cachedSnapshot != null) {\n      if (cachedSnapshot.missingRequiredFields != null) {\n        this._addMissingRequiredFields(cachedSnapshot.missingRequiredFields);\n      }\n      if (cachedSnapshot.missingClientEdges != null) {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.missingClientEdges),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var missing = _step.value;\n            this._missingClientEdges.push(missing);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      if (cachedSnapshot.missingLiveResolverFields != null) {\n        this._isMissingData = this._isMissingData || cachedSnapshot.missingLiveResolverFields.length > 0;\n        var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.missingLiveResolverFields),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var missingResolverField = _step2.value;\n            this._missingLiveResolverFields.push(missingResolverField);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.relayResolverErrors),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var error = _step3.value;\n          this._resolverErrors.push(error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._isMissingData = this._isMissingData || cachedSnapshot.isMissingData;\n    }\n\n    // If the resolver errored, we track that as part of our traversal so that\n    // the errors can be attached to this read's snapshot. This allows the error\n    // to be logged.\n    if (resolverError) {\n      this._resolverErrors.push(resolverError);\n    }\n\n    // The resolver itself creates a record in the store. We record that we've\n    // read this record so that subscribers to this snapshot also subscribe to\n    // this resolver.\n    if (seenRecord != null) {\n      this._seenRecords.add(seenRecord);\n    }\n\n    // If this resolver, or a dependency of this resolver, has suspended, we\n    // need to report that in our snapshot. The `suspenseID` is the key in to\n    // store where the suspended LiveState value lives. This ID allows readers\n    // of the snapshot to subscribe to updates on that live resolver so that\n    // they know when to unsuspend.\n    if (suspenseID != null) {\n      this._isMissingData = true;\n      this._missingLiveResolverFields.push({\n        path: \"\".concat(this._fragmentName, \".\").concat(field.path),\n        liveStateID: suspenseID\n      });\n    }\n    if (updatedDataIDs != null) {\n      var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(updatedDataIDs),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var recordID = _step4.value;\n          this._updatedDataIDs.add(recordID);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n    var applicationName = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    data[applicationName] = result;\n    return result;\n  };\n  _proto._readClientEdge = function _readClientEdge(field, record, data) {\n    var _backingField$alias;\n    var backingField = field.backingField;\n\n    // Because ReaderClientExtension doesn't have `alias` or `name` and so I don't know\n    // how to get its applicationName or storageKey yet:\n    !(backingField.kind !== 'ClientExtension') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client extension client edges are not yet implemented.') : invariant(false) : void 0;\n    var applicationName = (_backingField$alias = backingField.alias) !== null && _backingField$alias !== void 0 ? _backingField$alias : backingField.name;\n    var backingFieldData = {};\n    this._traverseSelections([backingField], record, backingFieldData);\n    // At this point, backingFieldData is an object with a single key (applicationName)\n    // whose value is the value returned from the resolver, or a suspense sentinel.\n\n    var clientEdgeResolverResponse = backingFieldData[applicationName];\n    if (clientEdgeResolverResponse == null || isSuspenseSentinel(clientEdgeResolverResponse)) {\n      data[applicationName] = clientEdgeResolverResponse;\n      return;\n    }\n    var validClientEdgeResolverResponse = assertValidClientEdgeResolverResponse(field, clientEdgeResolverResponse);\n    switch (validClientEdgeResolverResponse.kind) {\n      case 'PluralConcrete':\n        var storeIDs = getStoreIDsForPluralClientEdgeResolver(field, validClientEdgeResolverResponse.ids, this._resolverCache);\n        this._clientEdgeTraversalPath.push(null);\n        data[applicationName] = this._readLinkedIds(field.linkedField, storeIDs, record, data);\n        this._clientEdgeTraversalPath.pop();\n        break;\n      case 'SingularConcrete':\n        var _getStoreIDAndTravers = getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver(field, validClientEdgeResolverResponse.id, this._resolverCache),\n          storeID = _getStoreIDAndTravers[0],\n          traversalPathSegment = _getStoreIDAndTravers[1];\n        this._clientEdgeTraversalPath.push(traversalPathSegment);\n        var prevData = data[applicationName];\n        !(prevData == null || typeof prevData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n        data[applicationName] = this._traverse(field.linkedField, storeID,\n        // $FlowFixMe[incompatible-variance]\n        prevData);\n        this._clientEdgeTraversalPath.pop();\n        break;\n      default:\n        validClientEdgeResolverResponse.kind;\n    }\n  };\n  _proto._readFlightField = function _readFlightField(field, record, data) {\n    var _field$alias2;\n    var applicationName = (_field$alias2 = field.alias) !== null && _field$alias2 !== void 0 ? _field$alias2 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var reactFlightClientResponseRecordID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (reactFlightClientResponseRecordID == null) {\n      data[applicationName] = reactFlightClientResponseRecordID;\n      if (reactFlightClientResponseRecordID === undefined) {\n        this._markDataAsMissing();\n      }\n      return reactFlightClientResponseRecordID;\n    }\n    var reactFlightClientResponseRecord = this._recordSource.get(reactFlightClientResponseRecordID);\n    this._seenRecords.add(reactFlightClientResponseRecordID);\n    if (reactFlightClientResponseRecord == null) {\n      data[applicationName] = reactFlightClientResponseRecord;\n      if (reactFlightClientResponseRecord === undefined) {\n        this._markDataAsMissing();\n      }\n      return reactFlightClientResponseRecord;\n    }\n    var clientResponse = getReactFlightClientResponse(reactFlightClientResponseRecord);\n    data[applicationName] = clientResponse;\n    return clientResponse;\n  };\n  _proto._readScalar = function _readScalar(field, record, data) {\n    var _field$alias3;\n    var applicationName = (_field$alias3 = field.alias) !== null && _field$alias3 !== void 0 ? _field$alias3 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var value = RelayModernRecord.getValue(record, storageKey);\n    if (value === undefined) {\n      this._markDataAsMissing();\n    }\n    data[applicationName] = value;\n    return value;\n  };\n  _proto._readLink = function _readLink(field, record, data) {\n    var _field$alias4;\n    var applicationName = (_field$alias4 = field.alias) !== null && _field$alias4 !== void 0 ? _field$alias4 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      data[applicationName] = linkedID;\n      if (linkedID === undefined) {\n        this._markDataAsMissing();\n      }\n      return linkedID;\n    }\n    var prevData = data[applicationName];\n    !(prevData == null || typeof prevData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n    // $FlowFixMe[incompatible-variance]\n    var value = this._traverse(field, linkedID, prevData);\n    data[applicationName] = value;\n    return value;\n  };\n  _proto._readActorChange = function _readActorChange(field, record, data) {\n    var _field$alias5;\n    var applicationName = (_field$alias5 = field.alias) !== null && _field$alias5 !== void 0 ? _field$alias5 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var externalRef = RelayModernRecord.getActorLinkedRecordID(record, storageKey);\n    if (externalRef == null) {\n      data[applicationName] = externalRef;\n      if (externalRef === undefined) {\n        this._markDataAsMissing();\n      }\n      return data[applicationName];\n    }\n    var actorIdentifier = externalRef[0],\n      dataID = externalRef[1];\n    var fragmentRef = {};\n    this._createFragmentPointer(field.fragmentSpread, {\n      __id: dataID\n    }, fragmentRef);\n    data[applicationName] = {\n      __fragmentRef: fragmentRef,\n      __viewer: actorIdentifier\n    };\n    return data[applicationName];\n  };\n  _proto._readPluralLink = function _readPluralLink(field, record, data) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    return this._readLinkedIds(field, linkedIDs, record, data);\n  };\n  _proto._readLinkedIds = function _readLinkedIds(field, linkedIDs, record, data) {\n    var _this2 = this;\n    var _field$alias6;\n    var applicationName = (_field$alias6 = field.alias) !== null && _field$alias6 !== void 0 ? _field$alias6 : field.name;\n    if (linkedIDs == null) {\n      data[applicationName] = linkedIDs;\n      if (linkedIDs === undefined) {\n        this._markDataAsMissing();\n      }\n      return linkedIDs;\n    }\n    var prevData = data[applicationName];\n    !(prevData == null || Array.isArray(prevData)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an array, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n    var linkedArray = prevData || [];\n    linkedIDs.forEach(function (linkedID, nextIndex) {\n      if (linkedID == null) {\n        if (linkedID === undefined) {\n          _this2._markDataAsMissing();\n        }\n        // $FlowFixMe[cannot-write]\n        linkedArray[nextIndex] = linkedID;\n        return;\n      }\n      var prevItem = linkedArray[nextIndex];\n      !(prevItem == null || typeof prevItem === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevItem) : invariant(false) : void 0;\n      // $FlowFixMe[cannot-write]\n      // $FlowFixMe[incompatible-variance]\n      linkedArray[nextIndex] = _this2._traverse(field, linkedID, prevItem);\n    });\n    data[applicationName] = linkedArray;\n    return linkedArray;\n  }\n\n  /**\n   * Reads a ReaderModuleImport, which was generated from using the @module\n   * directive.\n   */;\n  _proto._readModuleImport = function _readModuleImport(moduleImport, record, data) {\n    // Determine the component module from the store: if the field is missing\n    // it means we don't know what component to render the match with.\n    var componentKey = getModuleComponentKey(moduleImport.documentName);\n    var component = RelayModernRecord.getValue(record, componentKey);\n    if (component == null) {\n      if (component === undefined) {\n        this._markDataAsMissing();\n      }\n      return;\n    }\n\n    // Otherwise, read the fragment and module associated to the concrete\n    // type, and put that data with the result:\n    // - For the matched fragment, create the relevant fragment pointer and add\n    //   the expected fragmentPropName\n    // - For the matched module, create a reference to the module\n    this._createFragmentPointer({\n      kind: 'FragmentSpread',\n      name: moduleImport.fragmentName,\n      args: moduleImport.args\n    }, record, data);\n    data[FRAGMENT_PROP_NAME_KEY] = moduleImport.fragmentPropName;\n    data[MODULE_COMPONENT_KEY] = component;\n  };\n  _proto._createAliasedFragmentSpread = function _createAliasedFragmentSpread(namedFragmentSpread, record) {\n    var abstractKey = namedFragmentSpread.abstractKey;\n    if (abstractKey == null) {\n      // concrete type refinement: only read data if the type exactly matches\n      var typeName = RelayModernRecord.getType(record);\n      if (typeName == null || typeName !== namedFragmentSpread.type) {\n        // This selection does not match the fragment spread. Do nothing.\n        return null;\n      }\n    } else {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n      if (implementsInterface === false) {\n        // Type known to not implement the interface, no data expected\n        return null;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._markDataAsMissing();\n        // Judgement call here. In some cases this will cause us to hide data that is actually valid.\n        return undefined;\n      }\n    }\n    var fieldData = {};\n    this._createFragmentPointer(namedFragmentSpread.fragment, record, fieldData);\n    return fieldData;\n  }\n\n  // Has three possible return values:\n  // * null: The type condition did not match\n  // * undefined: We are missing data\n  // * false: The selection contained missing @required fields\n  // * data: The successfully populated SelectorData object\n  ;\n  _proto._readInlineFragment = function _readInlineFragment(inlineFragment, record, data) {\n    var abstractKey = inlineFragment.abstractKey;\n    if (abstractKey == null) {\n      // concrete type refinement: only read data if the type exactly matches\n      var typeName = RelayModernRecord.getType(record);\n      if (typeName == null || typeName !== inlineFragment.type) {\n        // This selection does not match the fragment spread. Do nothing.\n        return null;\n      } else {\n        var hasExpectedData = this._traverseSelections(inlineFragment.selections, record, data);\n        if (!hasExpectedData) {\n          // Bubble up null due to a missing @required field\n          return false;\n        }\n      }\n    } else {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n\n      // store flags to reset after reading\n      var parentIsMissingData = this._isMissingData;\n      var parentIsWithinUnmatchedTypeRefinement = this._isWithinUnmatchedTypeRefinement;\n      this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement || implementsInterface === false;\n\n      // @required is not allowed within inline fragments on abstract types, so\n      // we can ignore the `hasMissingData` result of `_traverseSelections`.\n      this._traverseSelections(inlineFragment.selections, record, data);\n\n      // Reset\n      this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement;\n      if (implementsInterface === false) {\n        // Type known to not implement the interface, no data expected\n        this._isMissingData = parentIsMissingData;\n        return undefined;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._markDataAsMissing();\n        return null;\n      }\n    }\n    return data;\n  };\n  _proto._createFragmentPointer = function _createFragmentPointer(fragmentSpread, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n    if (fragmentPointers == null) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n    !(typeof fragmentPointers === 'object' && fragmentPointers != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers) : invariant(false) : void 0;\n    if (data[ID_KEY] == null) {\n      data[ID_KEY] = RelayModernRecord.getDataID(record);\n    }\n    // $FlowFixMe[cannot-write] - writing into read-only field\n    fragmentPointers[fragmentSpread.name] = fragmentSpread.args ? getArgumentValues(fragmentSpread.args, this._variables) : {};\n    data[FRAGMENT_OWNER_KEY] = this._owner;\n    data[IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] = this._isWithinUnmatchedTypeRefinement;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      if (this._clientEdgeTraversalPath.length > 0 && this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1] !== null) {\n        data[CLIENT_EDGE_TRAVERSAL_PATH] = (0, _toConsumableArray2[\"default\"])(this._clientEdgeTraversalPath);\n      }\n    }\n  };\n  _proto._createInlineDataOrResolverFragmentPointer = function _createInlineDataOrResolverFragmentPointer(fragmentSpreadOrFragment, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n    if (fragmentPointers == null) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n    !(typeof fragmentPointers === 'object' && fragmentPointers != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers) : invariant(false) : void 0;\n    if (data[ID_KEY] == null) {\n      data[ID_KEY] = RelayModernRecord.getDataID(record);\n    }\n    var inlineData = {};\n    var parentFragmentName = this._fragmentName;\n    this._fragmentName = fragmentSpreadOrFragment.name;\n    var parentVariables = this._variables;\n\n    // If the inline fragment spread has arguments, we need to temporarily\n    // switch this._variables to include the fragment spread's arguments\n    // for the duration of its traversal.\n    var argumentVariables = fragmentSpreadOrFragment.args ? getArgumentValues(fragmentSpreadOrFragment.args, this._variables) : {};\n    this._variables = RelayConcreteVariables.getFragmentVariables(fragmentSpreadOrFragment, this._owner.variables, argumentVariables);\n    this._traverseSelections(fragmentSpreadOrFragment.selections, record, inlineData);\n\n    // Put the parent variables back\n    this._variables = parentVariables;\n    this._fragmentName = parentFragmentName;\n    // $FlowFixMe[cannot-write] - writing into read-only field\n    fragmentPointers[fragmentSpreadOrFragment.name] = inlineData;\n  };\n  _proto._addMissingRequiredFields = function _addMissingRequiredFields(additional) {\n    if (this._missingRequiredFields == null) {\n      this._missingRequiredFields = additional;\n      return;\n    }\n    if (this._missingRequiredFields.action === 'THROW') {\n      return;\n    }\n    if (additional.action === 'THROW') {\n      this._missingRequiredFields = additional;\n      return;\n    }\n    this._missingRequiredFields = {\n      action: 'LOG',\n      fields: [].concat((0, _toConsumableArray2[\"default\"])(this._missingRequiredFields.fields), (0, _toConsumableArray2[\"default\"])(additional.fields))\n    };\n  };\n  _proto._implementsInterface = function _implementsInterface(record, abstractKey) {\n    var typeName = RelayModernRecord.getType(record);\n    var typeRecord = this._recordSource.get(generateTypeID(typeName));\n    var implementsInterface = typeRecord != null ? RelayModernRecord.getValue(typeRecord, abstractKey) : null;\n    // $FlowFixMe Casting record value\n    return implementsInterface;\n  };\n  return RelayReader;\n}(); // Constructs the arguments for a resolver function and then evaluates it.\n//\n// If the resolver's fragment is missing data (query is in-flight, a dependency\n// field is suspending, or is missing required fields) then `readFragment` will\n// throw `RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL`. This function ensures that\n// we catch that error and instead create an error object which can be\n// propagated to the reader snapshot.\nfunction getResolverValue(field, variables, fragmentKey, ownerName) {\n  // Support for languages that work (best) with ES6 modules, such as TypeScript.\n  var resolverFunction = typeof field.resolverModule === 'function' ? field.resolverModule : field.resolverModule[\"default\"];\n  var resolverResult = null;\n  var resolverError = null;\n  try {\n    var resolverFunctionArgs = [];\n    if (field.fragment != null) {\n      resolverFunctionArgs.push(fragmentKey);\n    }\n    var args = field.args ? getArgumentValues(field.args, variables) : undefined;\n    resolverFunctionArgs.push(args);\n    resolverResult = resolverFunction.apply(null, resolverFunctionArgs);\n  } catch (e) {\n    if (e === RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL) {\n      resolverResult = undefined;\n    } else {\n      var _field$path;\n      // `field.path` is typed as nullable while we rollout compiler changes.\n      var path = (_field$path = field.path) !== null && _field$path !== void 0 ? _field$path : '[UNKNOWN]';\n      resolverError = {\n        field: {\n          path: path,\n          owner: ownerName\n        },\n        error: e\n      };\n    }\n  }\n  return [resolverResult, resolverError];\n}\nfunction assertValidClientEdgeResolverResponse(field, clientEdgeResolverResponse) {\n  if (field.linkedField.plural) {\n    !Array.isArray(clientEdgeResolverResponse) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected plural Client Edge Relay Resolver to return an array containing IDs or objects with shape {id}.') : invariant(false) : void 0;\n    return {\n      kind: 'PluralConcrete',\n      ids: clientEdgeResolverResponse.map(function (response) {\n        return extractIdFromResponse(response, 'Expected this plural Client Edge Relay Resolver to return an array containing IDs or objects with shape {id}.');\n      })\n    };\n  } else {\n    return {\n      kind: 'SingularConcrete',\n      id: extractIdFromResponse(clientEdgeResolverResponse, 'Expected this Client Edge Relay Resolver to return an ID of type `string` or an object with shape {id}.')\n    };\n  }\n}\n\n// For weak objects:\n// The return value of a client edge resolver is the entire object (though,\n// strong objects become DataIDs or arrays thereof). However, when being read\n// out, these raw objects are turned into DataIDs or arrays thereof.\n//\n// For strong objects:\n// For a singular field, the return value of a client edge resolver is a DataID\n// (i.e. a string). If the edge points to a client type, we namespace the\n// ID with the typename by calling resolverCache.ensureClientRecord.\nfunction getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver(field, clientEdgeResolverResponse, resolverCache) {\n  if (field.kind === CLIENT_EDGE_TO_CLIENT_OBJECT) {\n    if (field.backingField.normalizationInfo == null) {\n      var concreteType = field.concreteType;\n      !(concreteType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected at least one of backingField.normalizationInfo or field.concreteType to be non-null. ' + 'This indicates a bug in Relay.') : invariant(false) : void 0;\n      // @edgeTo case where we need to ensure that the record has `id` field\n      return [resolverCache.ensureClientRecord(clientEdgeResolverResponse, concreteType), null];\n    } else {\n      // The normalization process in LiveResolverCache should take care of generating the correct ID.\n      return [clientEdgeResolverResponse, null];\n    }\n  } else {\n    return [clientEdgeResolverResponse, {\n      readerClientEdge: field,\n      clientEdgeDestinationID: clientEdgeResolverResponse\n    }];\n  }\n}\n\n// For weak objects:\n// The return value of a client edge resolver is the entire object (though,\n// strong objects become DataIDs or arrays thereof). However, when being read\n// out, these raw objects are turned into DataIDs or arrays thereof.\n//\n// For strong objects:\n// For a plural field, the return value of a client edge resolver is an\n// array of DataID's. If the edge points to a client type, we namespace the\n// IDs with the typename by calling resolverCache.ensureClientRecord.\nfunction getStoreIDsForPluralClientEdgeResolver(field, clientEdgeResolverResponse, resolverCache) {\n  if (field.kind === CLIENT_EDGE_TO_CLIENT_OBJECT) {\n    if (field.backingField.normalizationInfo == null) {\n      var concreteType = field.concreteType;\n      !(concreteType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected at least one of backingField.normalizationInfo or field.concreteType to be non-null. ' + 'This indicates a bug in Relay.') : invariant(false) : void 0;\n      // @edgeTo case where we need to ensure that the record has `id` field\n      return clientEdgeResolverResponse.map(function (id) {\n        return resolverCache.ensureClientRecord(id, concreteType);\n      });\n    } else {\n      // The normalization process in LiveResolverCache should take care of generating the correct ID.\n      return clientEdgeResolverResponse;\n    }\n  } else {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Unexpected Client Edge to plural server type. This should be prevented by the compiler.') : invariant(false) : void 0;\n  }\n}\nfunction extractIdFromResponse(individualResponse, errorMessage) {\n  if (typeof individualResponse === 'string') {\n    return individualResponse;\n  } else if (typeof individualResponse === 'object' && individualResponse != null && typeof individualResponse.id === 'string') {\n    return individualResponse.id;\n  }\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, errorMessage) : invariant(false) : void 0;\n}\nmodule.exports = {\n  read: read\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar RelayRecordState = require('./RelayRecordState');\nvar EXISTENT = RelayRecordState.EXISTENT,\n  NONEXISTENT = RelayRecordState.NONEXISTENT,\n  UNKNOWN = RelayRecordState.UNKNOWN;\n\n/**\n * An implementation of the `MutableRecordSource` interface (defined in\n * `RelayStoreTypes`) that holds all records in memory (JS Map).\n */\nvar RelayRecordSource = /*#__PURE__*/function () {\n  function RelayRecordSource(records) {\n    var _this = this;\n    this._records = new Map();\n    if (records != null) {\n      Object.keys(records).forEach(function (key) {\n        _this._records.set(key, records[key]);\n      });\n    }\n  }\n  RelayRecordSource.create = function create(records) {\n    return new RelayRecordSource(records);\n  };\n  var _proto = RelayRecordSource.prototype;\n  _proto.clear = function clear() {\n    this._records = new Map();\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._records.set(dataID, null);\n  };\n  _proto.get = function get(dataID) {\n    return this._records.get(dataID);\n  };\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Array.from(this._records.keys());\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    if (!this._records.has(dataID)) {\n      return UNKNOWN;\n    }\n    return this._records.get(dataID) == null ? NONEXISTENT : EXISTENT;\n  };\n  _proto.has = function has(dataID) {\n    return this._records.has(dataID);\n  };\n  _proto.remove = function remove(dataID) {\n    this._records[\"delete\"](dataID);\n  };\n  _proto.set = function set(dataID, record) {\n    this._records.set(dataID, record);\n  };\n  _proto.size = function size() {\n    return this._records.size;\n  };\n  _proto.toJSON = function toJSON() {\n    var obj = {};\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._records),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _step.value,\n          key = _step$value[0],\n          value = _step$value[1];\n        obj[key] = value;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return obj;\n  };\n  return RelayRecordSource;\n}();\nmodule.exports = RelayRecordSource;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayRecordState = {\n  /**\n   * Record exists (either fetched from the server or produced by a local,\n   * optimistic update).\n   */\n  EXISTENT: 'EXISTENT',\n  /**\n   * Record is known not to exist (either as the result of a mutation, or\n   * because the server returned `null` when queried for the record).\n   */\n  NONEXISTENT: 'NONEXISTENT',\n  /**\n   * Record State is unknown because it has not yet been fetched from the\n   * server.\n   */\n  UNKNOWN: 'UNKNOWN'\n};\nmodule.exports = RelayRecordState;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar getOperation = require('../util/getOperation');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\nvar getOutputTypeRecordIDs = require('./experimental-live-resolvers/getOutputTypeRecordIDs');\nvar _require = require('./RelayConcreteVariables'),\n  getLocalVariables = _require.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require2 = require('./TypeID'),\n  generateTypeID = _require2.generateTypeID;\nvar invariant = require('invariant');\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n  CONDITION = RelayConcreteNode.CONDITION,\n  CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n  CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n  DEFER = RelayConcreteNode.DEFER,\n  FLIGHT_FIELD = RelayConcreteNode.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n  LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n  MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n  LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n  SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n  SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n  STREAM = RelayConcreteNode.STREAM,\n  TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR,\n  RELAY_RESOLVER = RelayConcreteNode.RELAY_RESOLVER,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = RelayConcreteNode.CLIENT_EDGE_TO_CLIENT_OBJECT;\nvar ROOT_ID = RelayStoreUtils.ROOT_ID,\n  getStorageKey = RelayStoreUtils.getStorageKey,\n  getModuleOperationKey = RelayStoreUtils.getModuleOperationKey;\nfunction mark(recordSource, selector, references, operationLoader, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var marker = new RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents);\n  marker.mark(node, dataID);\n}\n\n/**\n * @private\n */\nvar RelayReferenceMarker = /*#__PURE__*/function () {\n  function RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents) {\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._operationName = null;\n    this._recordSource = recordSource;\n    this._references = references;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n  var _proto = RelayReferenceMarker.prototype;\n  _proto.mark = function mark(node, dataID) {\n    if (node.kind === 'Operation' || node.kind === 'SplitOperation') {\n      this._operationName = node.name;\n    }\n    this._traverse(node, dataID);\n  };\n  _proto._traverse = function _traverse(node, dataID) {\n    this._references.add(dataID);\n    var record = this._recordSource.get(dataID);\n    if (record == null) {\n      return;\n    }\n    this._traverseSelections(node.selections, record);\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, record) {\n    var _this = this;\n    selections.forEach(function (selection) {\n      /* eslint-disable no-fallthrough */\n      switch (selection.kind) {\n        case ACTOR_CHANGE:\n          // TODO: T89695151 Support multi-actor record sources in RelayReferenceMarker.js\n          _this._traverseLink(selection.linkedField, record);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this._traversePluralLink(selection, record);\n          } else {\n            _this._traverseLink(selection, record);\n          }\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(_this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            _this._traverseSelections(selection.selections, record);\n          }\n          break;\n        case INLINE_FRAGMENT:\n          if (selection.abstractKey == null) {\n            var typeName = RelayModernRecord.getType(record);\n            if (typeName != null && typeName === selection.type ||\n            // Our root record has a special type of `__Root` which may not\n            // match the schema type of Query/Mutation or whatever the schema\n            // specifies.\n            //\n            // If we have an inline fragment on a concrete type within an\n            // operation root, and our query has been validated, we know that\n            // concrete type must match, since the operation selection must be\n            // on a concrete type.\n            typeName === RelayStoreUtils.ROOT_TYPE) {\n              _this._traverseSelections(selection.selections, record);\n            }\n          } else {\n            var _typeName = RelayModernRecord.getType(record);\n            var typeID = generateTypeID(_typeName);\n            _this._references.add(typeID);\n            _this._traverseSelections(selection.selections, record);\n          }\n          break;\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this._variables;\n          _this._variables = getLocalVariables(_this._variables, selection.fragment.argumentDefinitions, selection.args);\n          _this._traverseSelections(selection.fragment.selections, record);\n          _this._variables = prevVariables;\n          break;\n        case LINKED_HANDLE:\n          // The selections for a \"handle\" field are the same as those of the\n          // original linked field where the handle was applied. Reference marking\n          // therefore requires traversing the original field selections against\n          // the synthesized client field.\n          //\n          // TODO: Instead of finding the source field in `selections`, change\n          // the concrete structure to allow shared subtrees, and have the linked\n          // handle directly refer to the same selections as the LinkedField that\n          // it was split from.\n          var handleField = cloneRelayHandleSourceField(selection, selections, _this._variables);\n          if (handleField.plural) {\n            _this._traversePluralLink(handleField, record);\n          } else {\n            _this._traverseLink(handleField, record);\n          }\n          break;\n        case DEFER:\n        case STREAM:\n          _this._traverseSelections(selection.selections, record);\n          break;\n        case SCALAR_FIELD:\n        case SCALAR_HANDLE:\n          break;\n        case TYPE_DISCRIMINATOR:\n          {\n            var _typeName2 = RelayModernRecord.getType(record);\n            var _typeID = generateTypeID(_typeName2);\n            _this._references.add(_typeID);\n            break;\n          }\n        case MODULE_IMPORT:\n          _this._traverseModuleImport(selection, record);\n          break;\n        case CLIENT_EXTENSION:\n          _this._traverseSelections(selection.selections, record);\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            _this._traverseFlightField(selection, record);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case CLIENT_COMPONENT:\n          if (_this._shouldProcessClientComponents === false) {\n            break;\n          }\n          _this._traverseSelections(selection.fragment.selections, record);\n          break;\n        case RELAY_RESOLVER:\n          _this._traverseResolverField(selection, record);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          _this._traverseClientEdgeToClientObject(selection, record);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker: Unknown AST node `%s`.', selection) : invariant(false) : void 0;\n      }\n    });\n  };\n  _proto._traverseClientEdgeToClientObject = function _traverseClientEdgeToClientObject(field, record) {\n    var dataID = this._traverseResolverField(field.backingField, record);\n    if (dataID == null) {\n      return;\n    }\n    var resolverRecord = this._recordSource.get(dataID);\n    if (resolverRecord == null) {\n      return;\n    }\n    if (field.backingField.isOutputType) {\n      // Mark all @outputType record IDs\n      var outputTypeRecordIDs = getOutputTypeRecordIDs(resolverRecord);\n      if (outputTypeRecordIDs != null) {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(outputTypeRecordIDs),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _dataID = _step.value;\n            this._references.add(_dataID);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    } else {\n      var linkedField = field.linkedField;\n      var concreteType = linkedField.concreteType;\n      if (concreteType == null) {\n        // TODO: Handle retaining abstract client edges to client types.\n        return;\n      }\n      if (linkedField.plural) {\n        var dataIDs = RelayModernRecord.getResolverLinkedRecordIDs(resolverRecord, concreteType);\n        if (dataIDs != null) {\n          var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(dataIDs),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _dataID2 = _step2.value;\n              if (_dataID2 != null) {\n                this._traverse(linkedField, _dataID2);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } else {\n        var _dataID3 = RelayModernRecord.getResolverLinkedRecordID(resolverRecord, concreteType);\n        if (_dataID3 != null) {\n          this._traverse(linkedField, _dataID3);\n        }\n      }\n    }\n  };\n  _proto._traverseResolverField = function _traverseResolverField(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var dataID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n    // If the resolver value has been created, we should retain it.\n    // This record contains our cached resolver value, and potential Live\n    // Resolver subscription.\n    if (dataID != null) {\n      this._references.add(dataID);\n    }\n    var fragment = field.fragment;\n    if (fragment != null) {\n      // Mark the contents of the resolver's data dependencies.\n      this._traverseSelections([fragment], record);\n    }\n    return dataID;\n  };\n  _proto._traverseModuleImport = function _traverseModuleImport(moduleImport, record) {\n    var _this$_operationName;\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker: Expected an operationLoader to be configured when using `@module`. ' + 'Could not load fragment `%s` in operation `%s`.', moduleImport.fragmentName, (_this$_operationName = this._operationName) !== null && _this$_operationName !== void 0 ? _this$_operationName : '(unknown)') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = RelayModernRecord.getValue(record, operationKey);\n    if (operationReference == null) {\n      return;\n    }\n    var normalizationRootNode = operationLoader.get(operationReference);\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n      this._traverseSelections(operation.selections, record);\n      this._variables = prevVariables;\n    }\n    // Otherwise, if the operation is not available, we assume that the data\n    // cannot have been processed yet and therefore isn't in the store to\n    // begin with.\n  };\n  _proto._traverseLink = function _traverseLink(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      return;\n    }\n    this._traverse(field, linkedID);\n  };\n  _proto._traversePluralLink = function _traversePluralLink(field, record) {\n    var _this2 = this;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    if (linkedIDs == null) {\n      return;\n    }\n    linkedIDs.forEach(function (linkedID) {\n      if (linkedID != null) {\n        _this2._traverse(field, linkedID);\n      }\n    });\n  };\n  _proto._traverseFlightField = function _traverseFlightField(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      return;\n    }\n    this._references.add(linkedID);\n    var reactFlightClientResponseRecord = this._recordSource.get(linkedID);\n    if (reactFlightClientResponseRecord == null) {\n      return;\n    }\n    var reachableExecutableDefinitions = RelayModernRecord.getValue(reactFlightClientResponseRecord, RelayStoreReactFlightUtils.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY);\n    if (!Array.isArray(reachableExecutableDefinitions)) {\n      return;\n    }\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using ' + 'React Flight') : invariant(false) : void 0;\n    // In Flight, the variables that are in scope for reachable executable\n    // definitions aren't the same as what's in scope for the outer query.\n    var prevVariables = this._variables;\n    // $FlowFixMe[incompatible-cast]\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(reachableExecutableDefinitions),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var definition = _step3.value;\n        this._variables = definition.variables;\n        var operationReference = definition.module;\n        var normalizationRootNode = operationLoader.get(operationReference);\n        if (normalizationRootNode != null) {\n          var operation = getOperation(normalizationRootNode);\n          this._traverse(operation, ROOT_ID);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    this._variables = prevVariables;\n  };\n  return RelayReferenceMarker;\n}();\nmodule.exports = {\n  mark: mark\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../multi-actor-environment/ActorUtils'),\n  ACTOR_IDENTIFIER_FIELD_NAME = _require.ACTOR_IDENTIFIER_FIELD_NAME,\n  getActorIdentifierFromPayload = _require.getActorIdentifierFromPayload;\nvar _require2 = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require2.ACTOR_CHANGE,\n  CLIENT_COMPONENT = _require2.CLIENT_COMPONENT,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require2.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EXTENSION = _require2.CLIENT_EXTENSION,\n  CONDITION = _require2.CONDITION,\n  DEFER = _require2.DEFER,\n  FLIGHT_FIELD = _require2.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require2.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require2.INLINE_FRAGMENT,\n  LINKED_FIELD = _require2.LINKED_FIELD,\n  LINKED_HANDLE = _require2.LINKED_HANDLE,\n  MODULE_IMPORT = _require2.MODULE_IMPORT,\n  RELAY_RESOLVER = _require2.RELAY_RESOLVER,\n  SCALAR_FIELD = _require2.SCALAR_FIELD,\n  SCALAR_HANDLE = _require2.SCALAR_HANDLE,\n  STREAM = _require2.STREAM,\n  TYPE_DISCRIMINATOR = _require2.TYPE_DISCRIMINATOR;\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require3 = require('./ClientID'),\n  generateClientID = _require3.generateClientID,\n  isClientID = _require3.isClientID;\nvar _require4 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require4.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require5 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require5.createNormalizationSelector;\nvar _require6 = require('./RelayStoreReactFlightUtils'),\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = _require6.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY = _require6.REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME = _require6.REACT_FLIGHT_TYPE_NAME,\n  refineToReactFlightPayloadData = _require6.refineToReactFlightPayloadData;\nvar _require7 = require('./RelayStoreUtils'),\n  ROOT_ID = _require7.ROOT_ID,\n  ROOT_TYPE = _require7.ROOT_TYPE,\n  TYPENAME_KEY = _require7.TYPENAME_KEY,\n  getArgumentValues = _require7.getArgumentValues,\n  getHandleStorageKey = _require7.getHandleStorageKey,\n  getModuleComponentKey = _require7.getModuleComponentKey,\n  getModuleOperationKey = _require7.getModuleOperationKey,\n  getStorageKey = _require7.getStorageKey;\nvar _require8 = require('./TypeID'),\n  TYPE_SCHEMA_TYPE = _require8.TYPE_SCHEMA_TYPE,\n  generateTypeID = _require8.generateTypeID;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Normalizes the results of a query and standard GraphQL response, writing the\n * normalized records/fields into the given MutableRecordSource.\n */\nfunction normalize(recordSource, selector, response, options) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var normalizer = new RelayResponseNormalizer(recordSource, variables, options);\n  return normalizer.normalizeResponse(node, dataID, response);\n}\n\n/**\n * @private\n *\n * Helper for handling payloads.\n */\nvar RelayResponseNormalizer = /*#__PURE__*/function () {\n  function RelayResponseNormalizer(recordSource, variables, options) {\n    this._actorIdentifier = options.actorIdentifier;\n    this._getDataId = options.getDataID;\n    this._handleFieldPayloads = [];\n    this._treatMissingFieldsAsNull = options.treatMissingFieldsAsNull;\n    this._incrementalPlaceholders = [];\n    this._isClientExtension = false;\n    this._isUnmatchedAbstractType = false;\n    this._followupPayloads = [];\n    this._path = options.path ? (0, _toConsumableArray2[\"default\"])(options.path) : [];\n    this._recordSource = recordSource;\n    this._variables = variables;\n    this._reactFlightPayloadDeserializer = options.reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = options.reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = options.shouldProcessClientComponents;\n  }\n  var _proto = RelayResponseNormalizer.prototype;\n  _proto.normalizeResponse = function normalizeResponse(node, dataID, data) {\n    var record = this._recordSource.get(dataID);\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Expected root record `%s` to exist.', dataID) : invariant(false) : void 0;\n    this._assignClientAbstractTypes(node);\n    this._traverseSelections(node, record, data);\n    return {\n      errors: null,\n      fieldPayloads: this._handleFieldPayloads,\n      incrementalPlaceholders: this._incrementalPlaceholders,\n      followupPayloads: this._followupPayloads,\n      source: this._recordSource,\n      isFinal: false\n    };\n  }\n\n  // For abstract types defined in the client schema extension, we won't be\n  // getting `__is<AbstractType>` hints from the server. To handle this, the\n  // compiler attaches additional metadata on the normalization artifact,\n  // which we need to record into the store.\n  ;\n  _proto._assignClientAbstractTypes = function _assignClientAbstractTypes(node) {\n    var clientAbstractTypes = node.clientAbstractTypes;\n    if (clientAbstractTypes != null) {\n      for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {\n        var abstractType = _Object$keys[_i];\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(clientAbstractTypes[abstractType]),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var concreteType = _step.value;\n            var typeID = generateTypeID(concreteType);\n            var typeRecord = this._recordSource.get(typeID);\n            if (typeRecord == null) {\n              typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE);\n              this._recordSource.set(typeID, typeRecord);\n            }\n            RelayModernRecord.setValue(typeRecord, abstractType, true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._getRecordType = function _getRecordType(data) {\n    var typeName = data[TYPENAME_KEY];\n    !(typeName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Expected a typename for record `%s`.', JSON.stringify(data, null, 2)) : invariant(false) : void 0;\n    return typeName;\n  };\n  _proto._traverseSelections = function _traverseSelections(node, record, data) {\n    for (var i = 0; i < node.selections.length; i++) {\n      var selection = node.selections[i];\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n        case LINKED_FIELD:\n          this._normalizeField(node, selection, record, data);\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            this._traverseSelections(selection, record, data);\n          }\n          break;\n        case FRAGMENT_SPREAD:\n          {\n            var prevVariables = this._variables;\n            this._variables = getLocalVariables(this._variables, selection.fragment.argumentDefinitions, selection.args);\n            this._traverseSelections(selection.fragment, record, data);\n            this._variables = prevVariables;\n            break;\n          }\n        case INLINE_FRAGMENT:\n          {\n            var abstractKey = selection.abstractKey;\n            if (abstractKey == null) {\n              var typeName = RelayModernRecord.getType(record);\n              if (typeName === selection.type) {\n                this._traverseSelections(selection, record, data);\n              }\n            } else {\n              var implementsInterface = data.hasOwnProperty(abstractKey);\n              var _typeName = RelayModernRecord.getType(record);\n              var typeID = generateTypeID(_typeName);\n              var typeRecord = this._recordSource.get(typeID);\n              if (typeRecord == null) {\n                typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE);\n                this._recordSource.set(typeID, typeRecord);\n              }\n              RelayModernRecord.setValue(typeRecord, abstractKey, implementsInterface);\n              if (implementsInterface) {\n                this._traverseSelections(selection, record, data);\n              }\n            }\n            break;\n          }\n        case TYPE_DISCRIMINATOR:\n          {\n            var _abstractKey = selection.abstractKey;\n            var _implementsInterface = data.hasOwnProperty(_abstractKey);\n            var _typeName2 = RelayModernRecord.getType(record);\n            var _typeID = generateTypeID(_typeName2);\n            var _typeRecord = this._recordSource.get(_typeID);\n            if (_typeRecord == null) {\n              _typeRecord = RelayModernRecord.create(_typeID, TYPE_SCHEMA_TYPE);\n              this._recordSource.set(_typeID, _typeRecord);\n            }\n            RelayModernRecord.setValue(_typeRecord, _abstractKey, _implementsInterface);\n            break;\n          }\n        case LINKED_HANDLE:\n        case SCALAR_HANDLE:\n          var args = selection.args ? getArgumentValues(selection.args, this._variables) : {};\n          var fieldKey = getStorageKey(selection, this._variables);\n          var handleKey = getHandleStorageKey(selection, this._variables);\n          this._handleFieldPayloads.push({\n            args: args,\n            dataID: RelayModernRecord.getDataID(record),\n            fieldKey: fieldKey,\n            handle: selection.handle,\n            handleKey: handleKey,\n            handleArgs: selection.handleArgs ? getArgumentValues(selection.handleArgs, this._variables) : {}\n          });\n          break;\n        case MODULE_IMPORT:\n          this._normalizeModuleImport(node, selection, record, data);\n          break;\n        case DEFER:\n          this._normalizeDefer(selection, record, data);\n          break;\n        case STREAM:\n          this._normalizeStream(selection, record, data);\n          break;\n        case CLIENT_EXTENSION:\n          var isClientExtension = this._isClientExtension;\n          this._isClientExtension = true;\n          this._traverseSelections(selection, record, data);\n          this._isClientExtension = isClientExtension;\n          break;\n        case CLIENT_COMPONENT:\n          if (this._shouldProcessClientComponents === false) {\n            break;\n          }\n          this._traverseSelections(selection.fragment, record, data);\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            this._normalizeFlightField(node, selection, record, data);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case ACTOR_CHANGE:\n          this._normalizeActorChange(node, selection, record, data);\n          break;\n        case RELAY_RESOLVER:\n          this._normalizeResolver(selection, record, data);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          this._normalizeResolver(selection.backingField, record, data);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    }\n  };\n  _proto._normalizeResolver = function _normalizeResolver(resolver, record, data) {\n    if (resolver.fragment != null) {\n      this._traverseSelections(resolver.fragment, record, data);\n    }\n  };\n  _proto._normalizeDefer = function _normalizeDefer(defer, record, data) {\n    var isDeferred = defer[\"if\"] === null || this._getVariableValue(defer[\"if\"]);\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(typeof isDeferred === 'boolean', 'RelayResponseNormalizer: Expected value for @defer `if` argument to ' + 'be a boolean, got `%s`.', isDeferred) : void 0;\n    }\n    if (isDeferred === false) {\n      // If defer is disabled there will be no additional response chunk:\n      // normalize the data already present.\n      this._traverseSelections(defer, record, data);\n    } else {\n      // Otherwise data *for this selection* should not be present: enqueue\n      // metadata to process the subsequent response chunk.\n      this._incrementalPlaceholders.push({\n        kind: 'defer',\n        data: data,\n        label: defer.label,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        selector: createNormalizationSelector(defer, RelayModernRecord.getDataID(record), this._variables),\n        typeName: RelayModernRecord.getType(record),\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeStream = function _normalizeStream(stream, record, data) {\n    // Always normalize regardless of whether streaming is enabled or not,\n    // this populates the initial array value (including any items when\n    // initial_count > 0).\n    this._traverseSelections(stream, record, data);\n    var isStreamed = stream[\"if\"] === null || this._getVariableValue(stream[\"if\"]);\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(typeof isStreamed === 'boolean', 'RelayResponseNormalizer: Expected value for @stream `if` argument ' + 'to be a boolean, got `%s`.', isStreamed) : void 0;\n    }\n    if (isStreamed === true) {\n      // If streaming is enabled, *also* emit metadata to process any\n      // response chunks that may be delivered.\n      this._incrementalPlaceholders.push({\n        kind: 'stream',\n        label: stream.label,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        parentID: RelayModernRecord.getDataID(record),\n        node: stream,\n        variables: this._variables,\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeModuleImport = function _normalizeModuleImport(parent, moduleImport, record, data) {\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for @module to be an object.') : invariant(false) : void 0;\n    var typeName = RelayModernRecord.getType(record);\n    var componentKey = getModuleComponentKey(moduleImport.documentName);\n    var componentReference = moduleImport.componentModuleProvider || data[componentKey];\n    RelayModernRecord.setValue(record, componentKey, componentReference !== null && componentReference !== void 0 ? componentReference : null);\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = moduleImport.operationModuleProvider || data[operationKey];\n    RelayModernRecord.setValue(record, operationKey, operationReference !== null && operationReference !== void 0 ? operationReference : null);\n    if (operationReference != null) {\n      this._followupPayloads.push({\n        kind: 'ModuleImportPayload',\n        args: moduleImport.args,\n        data: data,\n        dataID: RelayModernRecord.getDataID(record),\n        operationReference: operationReference,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        typeName: typeName,\n        variables: this._variables,\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeField = function _normalizeField(parent, selection, record, data) {\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'writeField(): Expected data for field `%s` to be an object.', selection.name) : invariant(false) : void 0;\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        // Fields may be missing in the response in two main cases:\n        // - Inside a client extension: the server will not generally return\n        //   values for these fields, but a local update may provide them.\n        // - Inside an abstract type refinement where the concrete type does\n        //   not conform to the interface/union.\n        // However an otherwise-required field may also be missing if the server\n        // is configured to skip fields with `null` values, in which case the\n        // client is assumed to be correctly configured with\n        // treatMissingFieldsAsNull=true.\n        var isOptionalField = this._isClientExtension || this._isUnmatchedAbstractType;\n        if (isOptionalField) {\n          // Field not expected to exist regardless of whether the server is pruning null\n          // fields or not.\n          return;\n        } else if (!this._treatMissingFieldsAsNull) {\n          // Not optional and the server is not pruning null fields: field is expected\n          // to be present\n          if (process.env.NODE_ENV !== \"production\") {\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : void 0;\n          }\n          return;\n        }\n      }\n      if (process.env.NODE_ENV !== \"production\") {\n        if (selection.kind === SCALAR_FIELD) {\n          this._validateConflictingFieldsWithIdenticalId(record, storageKey,\n          // When using `treatMissingFieldsAsNull` the conflicting validation raises a false positive\n          // because the value is set using `null` but validated using `fieldValue` which at this point\n          // will be `undefined`.\n          // Setting this to `null` matches the value that we actually set to the `fieldValue`.\n          null);\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    if (selection.kind === SCALAR_FIELD) {\n      if (process.env.NODE_ENV !== \"production\") {\n        this._validateConflictingFieldsWithIdenticalId(record, storageKey, fieldValue);\n      }\n      RelayModernRecord.setValue(record, storageKey, fieldValue);\n    } else if (selection.kind === LINKED_FIELD) {\n      this._path.push(responseKey);\n      if (selection.plural) {\n        this._normalizePluralLink(selection, record, storageKey, fieldValue);\n      } else {\n        this._normalizeLink(selection, record, storageKey, fieldValue);\n      }\n      this._path.pop();\n    } else {\n      selection;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s` during normalization.', selection.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._normalizeActorChange = function _normalizeActorChange(parent, selection, record, data) {\n    var _field$concreteType;\n    var field = selection.linkedField;\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '_normalizeActorChange(): Expected data for field `%s` to be an object.', field.name) : invariant(false) : void 0;\n    var responseKey = field.alias || field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        var isOptionalField = this._isClientExtension || this._isUnmatchedAbstractType;\n        if (isOptionalField) {\n          return;\n        } else if (!this._treatMissingFieldsAsNull) {\n          if (process.env.NODE_ENV !== \"production\") {\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : void 0;\n          }\n          return;\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    var actorIdentifier = getActorIdentifierFromPayload(fieldValue);\n    if (actorIdentifier == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload. Payload is `%s`.', ACTOR_IDENTIFIER_FIELD_NAME, JSON.stringify(fieldValue, null, 2)) : void 0;\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n\n    // $FlowFixMe[incompatible-call]\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : this._getRecordType(fieldValue);\n    var nextID = this._getDataId(\n    // $FlowFixMe[incompatible-call]\n    fieldValue, typeName) || RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);\n    !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey) : invariant(false) : void 0;\n    RelayModernRecord.setActorLinkedRecordID(record, storageKey, actorIdentifier, nextID);\n    this._followupPayloads.push({\n      kind: 'ActorPayload',\n      data: fieldValue,\n      dataID: nextID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(this._path), [responseKey]),\n      typeName: typeName,\n      variables: this._variables,\n      node: field,\n      actorIdentifier: actorIdentifier\n    });\n  };\n  _proto._normalizeFlightField = function _normalizeFlightField(parent, selection, record, data) {\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        // Flight field may be missing in the response if:\n        // - It is inside an abstract type refinement where the concrete type does\n        //   not conform to the interface/union.\n        // However an otherwise-required field may also be missing if the server\n        // is configured to skip fields with `null` values, in which case the\n        // client is assumed to be correctly configured with\n        // treatMissingFieldsAsNull=true.\n        if (this._isUnmatchedAbstractType) {\n          // Field not expected to exist regardless of whether the server is pruning null\n          // fields or not.\n          return;\n        } else {\n          // Not optional and the server is not pruning null fields: field is expected\n          // to be present\n          !this._treatMissingFieldsAsNull ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Payload did not contain a value for ' + 'field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : invariant(false) : void 0;\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    var reactFlightPayload = refineToReactFlightPayloadData(fieldValue);\n    var reactFlightPayloadDeserializer = this._reactFlightPayloadDeserializer;\n    !(reactFlightPayload != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected React Flight payload data to be an ' + 'object with `status`, tree`, `queries` and `errors` properties, got ' + '`%s`.', fieldValue) : invariant(false) : void 0;\n    !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected reactFlightPayloadDeserializer to ' + 'be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n    if (reactFlightPayload.errors.length > 0) {\n      if (typeof this._reactFlightServerErrorHandler === 'function') {\n        this._reactFlightServerErrorHandler(reactFlightPayload.status, reactFlightPayload.errors);\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Received server errors for field `%s`.\\n\\n' + '%s\\n%s', responseKey, reactFlightPayload.errors[0].message, reactFlightPayload.errors[0].stack) : void 0;\n      }\n    }\n    var reactFlightID = generateClientID(RelayModernRecord.getDataID(record), getStorageKey(selection, this._variables));\n    var reactFlightClientResponseRecord = this._recordSource.get(reactFlightID);\n    if (reactFlightClientResponseRecord == null) {\n      reactFlightClientResponseRecord = RelayModernRecord.create(reactFlightID, REACT_FLIGHT_TYPE_NAME);\n      this._recordSource.set(reactFlightID, reactFlightClientResponseRecord);\n    }\n    if (reactFlightPayload.tree == null) {\n      // This typically indicates that a fatal server error prevented rows from\n      // being written. When this occurs, we should not continue normalization of\n      // the Flight field because the row response is malformed.\n      //\n      // Receiving empty rows is OK because it can indicate the start of a stream.\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Expected `tree` not to be null. This ' + 'typically indicates that a fatal server error prevented any Server ' + 'Component rows from being written.') : void 0;\n      // We create the flight record with a null value for the tree\n      // and empty reachable definitions\n      RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_TREE_STORAGE_KEY, null);\n      RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY, []);\n      RelayModernRecord.setLinkedRecordID(record, storageKey, reactFlightID);\n      return;\n    }\n\n    // We store the deserialized reactFlightClientResponse in a separate\n    // record and link it to the parent record. This is so we can GC the Flight\n    // tree later even if the parent record is still reachable.\n    var reactFlightClientResponse = reactFlightPayloadDeserializer(reactFlightPayload.tree);\n    RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_TREE_STORAGE_KEY, reactFlightClientResponse);\n    var reachableExecutableDefinitions = [];\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(reactFlightPayload.queries),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var query = _step2.value;\n        if (query.response.data != null) {\n          this._followupPayloads.push({\n            kind: 'ModuleImportPayload',\n            args: null,\n            data: query.response.data,\n            dataID: ROOT_ID,\n            operationReference: query.module,\n            path: [],\n            typeName: ROOT_TYPE,\n            variables: query.variables,\n            actorIdentifier: this._actorIdentifier\n          });\n        }\n        reachableExecutableDefinitions.push({\n          module: query.module,\n          variables: query.variables\n        });\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(reactFlightPayload.fragments),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var fragment = _step3.value;\n        if (fragment.response.data != null) {\n          this._followupPayloads.push({\n            kind: 'ModuleImportPayload',\n            args: null,\n            data: fragment.response.data,\n            dataID: fragment.__id,\n            operationReference: fragment.module,\n            path: [],\n            typeName: fragment.__typename,\n            variables: fragment.variables,\n            actorIdentifier: this._actorIdentifier\n          });\n        }\n        reachableExecutableDefinitions.push({\n          module: fragment.module,\n          variables: fragment.variables\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY, reachableExecutableDefinitions);\n    RelayModernRecord.setLinkedRecordID(record, storageKey, reactFlightID);\n  };\n  _proto._normalizeLink = function _normalizeLink(field, record, storageKey, fieldValue) {\n    var _field$concreteType2;\n    !(typeof fieldValue === 'object' && fieldValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for field `%s` to be an object.', storageKey) : invariant(false) : void 0;\n    var nextID = this._getDataId(\n    // $FlowFixMe[incompatible-variance]\n    fieldValue, // $FlowFixMe[incompatible-variance]\n    (_field$concreteType2 = field.concreteType) !== null && _field$concreteType2 !== void 0 ? _field$concreteType2 : this._getRecordType(fieldValue)) ||\n    // Reuse previously generated client IDs\n    RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);\n    !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey) : invariant(false) : void 0;\n    if (process.env.NODE_ENV !== \"production\") {\n      this._validateConflictingLinkedFieldsWithIdenticalId(record, RelayModernRecord.getLinkedRecordID(record, storageKey), nextID, storageKey);\n    }\n    RelayModernRecord.setLinkedRecordID(record, storageKey, nextID);\n    var nextRecord = this._recordSource.get(nextID);\n    if (!nextRecord) {\n      // $FlowFixMe[incompatible-variance]\n      var typeName = field.concreteType || this._getRecordType(fieldValue);\n      nextRecord = RelayModernRecord.create(nextID, typeName);\n      this._recordSource.set(nextID, nextRecord);\n    } else if (process.env.NODE_ENV !== \"production\") {\n      this._validateRecordType(nextRecord, field, fieldValue);\n    }\n    // $FlowFixMe[incompatible-variance]\n    this._traverseSelections(field, nextRecord, fieldValue);\n  };\n  _proto._normalizePluralLink = function _normalizePluralLink(field, record, storageKey, fieldValue) {\n    var _this = this;\n    !Array.isArray(fieldValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for field `%s` to be an array ' + 'of objects.', storageKey) : invariant(false) : void 0;\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    var nextIDs = [];\n    fieldValue.forEach(function (item, nextIndex) {\n      var _field$concreteType3;\n      // validate response data\n      if (item == null) {\n        nextIDs.push(item);\n        return;\n      }\n      _this._path.push(String(nextIndex));\n      !(typeof item === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected elements for field `%s` to be ' + 'objects.', storageKey) : invariant(false) : void 0;\n      var nextID = _this._getDataId(\n      // $FlowFixMe[incompatible-variance]\n      item, // $FlowFixMe[incompatible-variance]\n      (_field$concreteType3 = field.concreteType) !== null && _field$concreteType3 !== void 0 ? _field$concreteType3 : _this._getRecordType(item)) || prevIDs && prevIDs[nextIndex] ||\n      // Reuse previously generated client IDs:\n      generateClientID(RelayModernRecord.getDataID(record), storageKey, nextIndex);\n      !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n      nextIDs.push(nextID);\n      var nextRecord = _this._recordSource.get(nextID);\n      if (!nextRecord) {\n        // $FlowFixMe[incompatible-variance]\n        var typeName = field.concreteType || _this._getRecordType(item);\n        nextRecord = RelayModernRecord.create(nextID, typeName);\n        _this._recordSource.set(nextID, nextRecord);\n      } else if (process.env.NODE_ENV !== \"production\") {\n        _this._validateRecordType(nextRecord, field, item);\n      }\n      // NOTE: the check to strip __DEV__ code only works for simple\n      // `if (__DEV__)`\n      if (process.env.NODE_ENV !== \"production\") {\n        if (prevIDs) {\n          _this._validateConflictingLinkedFieldsWithIdenticalId(record, prevIDs[nextIndex], nextID, storageKey);\n        }\n      }\n      // $FlowFixMe[incompatible-variance]\n      _this._traverseSelections(field, nextRecord, item);\n      _this._path.pop();\n    });\n    RelayModernRecord.setLinkedRecordIDs(record, storageKey, nextIDs);\n  }\n\n  /**\n   * Warns if the type of the record does not match the type of the field/payload.\n   */;\n  _proto._validateRecordType = function _validateRecordType(record, field, payload) {\n    var _field$concreteType4;\n    var typeName = (_field$concreteType4 = field.concreteType) !== null && _field$concreteType4 !== void 0 ? _field$concreteType4 : this._getRecordType(payload);\n    var dataID = RelayModernRecord.getDataID(record);\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(dataID) && dataID !== ROOT_ID || RelayModernRecord.getType(record) === typeName, 'RelayResponseNormalizer: Invalid record `%s`. Expected %s to be ' + 'consistent, but the record was assigned conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', dataID, TYPENAME_KEY, RelayModernRecord.getType(record), typeName) : void 0;\n  }\n\n  /**\n   * Warns if a single response contains conflicting fields with the same id\n   */;\n  _proto._validateConflictingFieldsWithIdenticalId = function _validateConflictingFieldsWithIdenticalId(record, storageKey, fieldValue) {\n    // NOTE: Only call this function in DEV\n    if (process.env.NODE_ENV !== \"production\") {\n      var dataID = RelayModernRecord.getDataID(record);\n      var previousValue = RelayModernRecord.getValue(record, storageKey);\n      process.env.NODE_ENV !== \"production\" ? warning(storageKey === TYPENAME_KEY || previousValue === undefined || areEqual(previousValue, fieldValue), 'RelayResponseNormalizer: Invalid record. The record contains two ' + 'instances of the same id: `%s` with conflicting field, %s and its values: %s and %s. ' + 'If two fields are different but share ' + 'the same id, one field will overwrite the other.', dataID, storageKey, previousValue, fieldValue) : void 0;\n    }\n  }\n\n  /**\n   * Warns if a single response contains conflicting fields with the same id\n   */;\n  _proto._validateConflictingLinkedFieldsWithIdenticalId = function _validateConflictingLinkedFieldsWithIdenticalId(record, prevID, nextID, storageKey) {\n    // NOTE: Only call this function in DEV\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === undefined || prevID === nextID, 'RelayResponseNormalizer: Invalid record. The record contains ' + 'references to the conflicting field, %s and its id values: %s and %s. ' + 'We need to make sure that the record the field points ' + 'to remains consistent or one field will overwrite the other.', storageKey, prevID, nextID) : void 0;\n    }\n  };\n  return RelayResponseNormalizer;\n}();\nmodule.exports = {\n  normalize: normalize\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayModernRecord'),\n  getType = _require.getType;\nvar invariant = require('invariant');\n\n// Reachable (client) executable definitions encountered while server component\n// rendering\nvar REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = 'executableDefinitions';\nvar REACT_FLIGHT_TREE_STORAGE_KEY = 'tree';\nvar REACT_FLIGHT_TYPE_NAME = 'ReactFlightComponent';\nfunction refineToReactFlightPayloadData(payload) {\n  if (payload == null || typeof payload !== 'object' || typeof payload.status !== 'string' || !Array.isArray(payload.tree) && payload.tree !== null || !Array.isArray(payload.queries) || !Array.isArray(payload.fragments) || !Array.isArray(payload.errors)) {\n    return null;\n  }\n  return payload;\n}\nfunction getReactFlightClientResponse(record) {\n  !(getType(record) === REACT_FLIGHT_TYPE_NAME) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getReactFlightClientResponse(): Expected a ReactFlightComponentRecord, ' + 'got %s.', record) : invariant(false) : void 0;\n  return record[REACT_FLIGHT_TREE_STORAGE_KEY];\n}\nmodule.exports = {\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY: REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY: REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME: REACT_FLIGHT_TYPE_NAME,\n  getReactFlightClientResponse: getReactFlightClientResponse,\n  refineToReactFlightPayloadData: refineToReactFlightPayloadData\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar deepFreeze = require('../util/deepFreeze');\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar hasOverlappingIDs = require('./hasOverlappingIDs');\nvar RelayReader = require('./RelayReader');\nvar RelayStoreSubscriptions = /*#__PURE__*/function () {\n  function RelayStoreSubscriptions(log, resolverCache) {\n    this._subscriptions = new Set();\n    this.__log = log;\n    this._resolverCache = resolverCache;\n  }\n  var _proto = RelayStoreSubscriptions.prototype;\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    var _this = this;\n    var subscription = {\n      backup: null,\n      callback: callback,\n      snapshot: snapshot,\n      stale: false\n    };\n    var dispose = function dispose() {\n      _this._subscriptions[\"delete\"](subscription);\n    };\n    this._subscriptions.add(subscription);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.snapshotSubscriptions = function snapshotSubscriptions(source) {\n    var _this2 = this;\n    this._subscriptions.forEach(function (subscription) {\n      // Backup occurs after writing a new \"final\" payload(s) and before (re)applying\n      // optimistic changes. Each subscription's `snapshot` represents what was *last\n      // published to the subscriber*, which notably may include previous optimistic\n      // updates. Therefore a subscription can be in any of the following states:\n      // - stale=true: This subscription was restored to a different value than\n      //   `snapshot`. That means this subscription has changes relative to its base,\n      //   but its base has changed (we just applied a final payload): recompute\n      //   a backup so that we can later restore to the state the subscription\n      //   should be in.\n      // - stale=false: This subscription was restored to the same value as\n      //   `snapshot`. That means this subscription does *not* have changes relative\n      //   to its base, so the current `snapshot` is valid to use as a backup.\n      if (!subscription.stale) {\n        subscription.backup = subscription.snapshot;\n        return;\n      }\n      var snapshot = subscription.snapshot;\n      var backup = RelayReader.read(source, snapshot.selector, _this2._resolverCache);\n      var nextData = recycleNodesInto(snapshot.data, backup.data);\n      backup.data = nextData; // backup owns the snapshot and can safely mutate\n      subscription.backup = backup;\n    });\n  };\n  _proto.restoreSubscriptions = function restoreSubscriptions() {\n    this._subscriptions.forEach(function (subscription) {\n      var backup = subscription.backup;\n      subscription.backup = null;\n      if (backup) {\n        if (backup.data !== subscription.snapshot.data) {\n          subscription.stale = true;\n        }\n        subscription.snapshot = {\n          data: subscription.snapshot.data,\n          isMissingData: backup.isMissingData,\n          missingClientEdges: backup.missingClientEdges,\n          missingLiveResolverFields: backup.missingLiveResolverFields,\n          seenRecords: backup.seenRecords,\n          selector: backup.selector,\n          missingRequiredFields: backup.missingRequiredFields,\n          relayResolverErrors: backup.relayResolverErrors\n        };\n      } else {\n        subscription.stale = true;\n      }\n    });\n  };\n  _proto.updateSubscriptions = function updateSubscriptions(source, updatedRecordIDs, updatedOwners, sourceOperation) {\n    var _this3 = this;\n    var hasUpdatedRecords = updatedRecordIDs.size !== 0;\n    this._subscriptions.forEach(function (subscription) {\n      var owner = _this3._updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation);\n      if (owner != null) {\n        updatedOwners.push(owner);\n      }\n    });\n  }\n\n  /**\n   * Notifies the callback for the subscription if the data for the associated\n   * snapshot has changed.\n   * Additionally, updates the subscription snapshot with the latest snapshot,\n   * and marks it as not stale.\n   * Returns the owner (RequestDescriptor) if the subscription was affected by the\n   * latest update, or null if it was not affected.\n   */;\n  _proto._updateSubscription = function _updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation) {\n    var backup = subscription.backup,\n      callback = subscription.callback,\n      snapshot = subscription.snapshot,\n      stale = subscription.stale;\n    var hasOverlappingUpdates = hasUpdatedRecords && hasOverlappingIDs(snapshot.seenRecords, updatedRecordIDs);\n    if (!stale && !hasOverlappingUpdates) {\n      return;\n    }\n    var nextSnapshot = hasOverlappingUpdates || !backup ? RelayReader.read(source, snapshot.selector, this._resolverCache) : backup;\n    var nextData = recycleNodesInto(snapshot.data, nextSnapshot.data);\n    nextSnapshot = {\n      data: nextData,\n      isMissingData: nextSnapshot.isMissingData,\n      missingClientEdges: nextSnapshot.missingClientEdges,\n      missingLiveResolverFields: nextSnapshot.missingLiveResolverFields,\n      seenRecords: nextSnapshot.seenRecords,\n      selector: nextSnapshot.selector,\n      missingRequiredFields: nextSnapshot.missingRequiredFields,\n      relayResolverErrors: nextSnapshot.relayResolverErrors\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(nextSnapshot);\n    }\n    subscription.snapshot = nextSnapshot;\n    subscription.stale = false;\n    if (nextSnapshot.data !== snapshot.data) {\n      if (this.__log && RelayFeatureFlags.ENABLE_NOTIFY_SUBSCRIPTION) {\n        this.__log({\n          name: 'store.notify.subscription',\n          sourceOperation: sourceOperation,\n          snapshot: snapshot,\n          nextSnapshot: nextSnapshot\n        });\n      }\n      callback(nextSnapshot);\n      return snapshot.selector.owner;\n    }\n  };\n  return RelayStoreSubscriptions;\n}();\nmodule.exports = RelayStoreSubscriptions;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar getRelayHandleKey = require('../util/getRelayHandleKey');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar stableCopy = require('../util/stableCopy');\nvar invariant = require('invariant');\nvar VARIABLE = RelayConcreteNode.VARIABLE,\n  LITERAL = RelayConcreteNode.LITERAL,\n  OBJECT_VALUE = RelayConcreteNode.OBJECT_VALUE,\n  LIST_VALUE = RelayConcreteNode.LIST_VALUE;\nvar MODULE_COMPONENT_KEY_PREFIX = '__module_component_';\nvar MODULE_OPERATION_KEY_PREFIX = '__module_operation_';\nfunction getArgumentValue(arg, variables) {\n  if (arg.kind === VARIABLE) {\n    // Variables are provided at runtime and are not guaranteed to be stable.\n    return getStableVariableValue(arg.variableName, variables);\n  } else if (arg.kind === LITERAL) {\n    // The Relay compiler generates stable ConcreteArgument values.\n    return arg.value;\n  } else if (arg.kind === OBJECT_VALUE) {\n    var value = {};\n    arg.fields.forEach(function (field) {\n      value[field.name] = getArgumentValue(field, variables);\n    });\n    return value;\n  } else if (arg.kind === LIST_VALUE) {\n    var _value = [];\n    arg.items.forEach(function (item) {\n      item != null ? _value.push(getArgumentValue(item, variables)) : null;\n    });\n    return _value;\n  }\n}\n\n/**\n * Returns the values of field/fragment arguments as an object keyed by argument\n * names. Guaranteed to return a result with stable ordered nested values.\n */\nfunction getArgumentValues(args, variables) {\n  var values = {};\n  args.forEach(function (arg) {\n    values[arg.name] = getArgumentValue(arg, variables);\n  });\n  return values;\n}\n\n/**\n * Given a handle field and variable values, returns a key that can be used to\n * uniquely identify the combination of the handle name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\nfunction getHandleStorageKey(handleField, variables) {\n  var dynamicKey = handleField.dynamicKey,\n    handle = handleField.handle,\n    key = handleField.key,\n    name = handleField.name,\n    args = handleField.args,\n    filters = handleField.filters;\n  var handleName = getRelayHandleKey(handle, key, name);\n  var filterArgs = null;\n  if (args && filters && args.length !== 0 && filters.length !== 0) {\n    filterArgs = args.filter(function (arg) {\n      return filters.indexOf(arg.name) > -1;\n    });\n  }\n  if (dynamicKey) {\n    // \"Sort\" the arguments by argument name: this is done by the compiler for\n    // user-supplied arguments but the dynamic argument must also be in sorted\n    // order.  Note that dynamic key argument name is double-underscore-\n    // -prefixed, and a double-underscore prefix is disallowed for user-supplied\n    // argument names, so there's no need to actually sort.\n    filterArgs = filterArgs != null ? [dynamicKey].concat((0, _toConsumableArray2[\"default\"])(filterArgs)) : [dynamicKey];\n  }\n  if (filterArgs === null) {\n    return handleName;\n  } else {\n    return formatStorageKey(handleName, getArgumentValues(filterArgs, variables));\n  }\n}\n\n/**\n * Given a field and variable values, returns a key that can be used to\n * uniquely identify the combination of the field name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\nfunction getStorageKey(field, variables) {\n  if (field.storageKey) {\n    // TODO T23663664: Handle nodes do not yet define a static storageKey.\n    return field.storageKey;\n  }\n  var args = getArguments(field);\n  var name = field.name;\n  return args && args.length !== 0 ? formatStorageKey(name, getArgumentValues(args, variables)) : name;\n}\n\n/**\n * Given a field the method returns an array of arguments.\n * For Relay resolver fields, we store arguments on the field and fragment\n * and this method return combined list of arguments.\n */\nfunction getArguments(field) {\n  if (field.kind === 'RelayResolver' || field.kind === 'RelayLiveResolver') {\n    var _field$fragment2;\n    if (field.args == null) {\n      var _field$fragment;\n      return (_field$fragment = field.fragment) === null || _field$fragment === void 0 ? void 0 : _field$fragment.args;\n    }\n    if (((_field$fragment2 = field.fragment) === null || _field$fragment2 === void 0 ? void 0 : _field$fragment2.args) == null) {\n      return field.args;\n    }\n    return field.args.concat(field.fragment.args);\n  }\n  var args = typeof field.args === 'undefined' ? undefined : field.args;\n  return args;\n}\n\n/**\n * Given a `name` (eg. \"foo\") and an object representing argument values\n * (eg. `{orberBy: \"name\", first: 10}`) returns a unique storage key\n * (ie. `foo{\"first\":10,\"orderBy\":\"name\"}`).\n *\n * This differs from getStorageKey which requires a ConcreteNode where arguments\n * are assumed to already be sorted into a stable order.\n */\nfunction getStableStorageKey(name, args) {\n  return formatStorageKey(name, stableCopy(args));\n}\n\n/**\n * Given a name and argument values, format a storage key.\n *\n * Arguments and the values within them are expected to be ordered in a stable\n * alphabetical ordering.\n */\nfunction formatStorageKey(name, argValues) {\n  if (!argValues) {\n    return name;\n  }\n  var values = [];\n  for (var argName in argValues) {\n    if (argValues.hasOwnProperty(argName)) {\n      var value = argValues[argName];\n      if (value != null) {\n        var _JSON$stringify;\n        values.push(argName + ':' + ((_JSON$stringify = JSON.stringify(value)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'undefined'));\n      }\n    }\n  }\n  return values.length === 0 ? name : name + \"(\".concat(values.join(','), \")\");\n}\n\n/**\n * Given Variables and a variable name, return a variable value with\n * all values in a stable order.\n */\nfunction getStableVariableValue(name, variables) {\n  !variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getVariableValue(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n  return stableCopy(variables[name]);\n}\nfunction getModuleComponentKey(documentName) {\n  return \"\".concat(MODULE_COMPONENT_KEY_PREFIX).concat(documentName);\n}\nfunction getModuleOperationKey(documentName) {\n  return \"\".concat(MODULE_OPERATION_KEY_PREFIX).concat(documentName);\n}\n\n/**\n * Constants shared by all implementations of RecordSource/MutableRecordSource/etc.\n */\nvar RelayStoreUtils = {\n  ACTOR_IDENTIFIER_KEY: '__actorIdentifier',\n  CLIENT_EDGE_TRAVERSAL_PATH: '__clientEdgeTraversalPath',\n  FRAGMENTS_KEY: '__fragments',\n  FRAGMENT_OWNER_KEY: '__fragmentOwner',\n  FRAGMENT_PROP_NAME_KEY: '__fragmentPropName',\n  MODULE_COMPONENT_KEY: '__module_component',\n  // alias returned by Reader\n  ID_KEY: '__id',\n  REF_KEY: '__ref',\n  REFS_KEY: '__refs',\n  ROOT_ID: 'client:root',\n  ROOT_TYPE: '__Root',\n  TYPENAME_KEY: '__typename',\n  INVALIDATED_AT_KEY: '__invalidated_at',\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT: '__isWithinUnmatchedTypeRefinement',\n  RELAY_RESOLVER_VALUE_KEY: '__resolverValue',\n  RELAY_RESOLVER_INVALIDATION_KEY: '__resolverValueMayBeInvalid',\n  RELAY_RESOLVER_SNAPSHOT_KEY: '__resolverSnapshot',\n  RELAY_RESOLVER_ERROR_KEY: '__resolverError',\n  RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS: '__resolverOutputTypeRecordIDs',\n  formatStorageKey: formatStorageKey,\n  getArgumentValue: getArgumentValue,\n  getArgumentValues: getArgumentValues,\n  getHandleStorageKey: getHandleStorageKey,\n  getStorageKey: getStorageKey,\n  getStableStorageKey: getStableStorageKey,\n  getModuleComponentKey: getModuleComponentKey,\n  getModuleOperationKey: getModuleOperationKey\n};\nmodule.exports = RelayStoreUtils;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar _require = require('../util/RelayConcreteNode'),\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER;\nvar _require2 = require('./ClientID'),\n  generateClientID = _require2.generateClientID;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayStoreUtils'),\n  RELAY_RESOLVER_ERROR_KEY = _require3.RELAY_RESOLVER_ERROR_KEY,\n  RELAY_RESOLVER_INVALIDATION_KEY = _require3.RELAY_RESOLVER_INVALIDATION_KEY,\n  RELAY_RESOLVER_SNAPSHOT_KEY = _require3.RELAY_RESOLVER_SNAPSHOT_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  getStorageKey = _require3.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n// $FlowFixMe[unclear-type] - will always be empty\nvar emptySet = new Set();\nvar NoopResolverCache = /*#__PURE__*/function () {\n  function NoopResolverCache() {}\n  var _proto = NoopResolverCache.prototype;\n  _proto.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    !(field.kind !== RELAY_LIVE_RESOLVER) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'This store does not support Live Resolvers') : invariant(false) : void 0;\n    var _evaluate = evaluate(),\n      resolverResult = _evaluate.resolverResult,\n      snapshot = _evaluate.snapshot,\n      error = _evaluate.error;\n    return [resolverResult, undefined, error, snapshot, undefined, undefined];\n  };\n  _proto.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {};\n  _proto.ensureClientRecord = function ensureClientRecord(id, typeName) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {};\n  return NoopResolverCache;\n}();\nfunction addDependencyEdge(edges, from, to) {\n  var set = edges.get(from);\n  if (!set) {\n    set = new Set();\n    edges.set(from, set);\n  }\n  set.add(to);\n}\nvar RecordResolverCache = /*#__PURE__*/function () {\n  function RecordResolverCache(getRecordSource) {\n    this._resolverIDToRecordIDs = new Map();\n    this._recordIDToResolverIDs = new Map();\n    this._getRecordSource = getRecordSource;\n  }\n  var _proto2 = RecordResolverCache.prototype;\n  _proto2.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    var recordSource = this._getRecordSource();\n\n    // NOTE: Be very careful with `record` in this scope. After `evaluate` has\n    // been called, the `record` we have here may have been replaced in the\n    // Relay store with a new record containing new information about nested\n    // resolvers on this parent record.\n    var record = recordSource.get(recordID);\n    !(record != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'We expect record to exist in the store.') : invariant(false) : void 0;\n    var storageKey = getStorageKey(field, variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    var linkedRecord = linkedID == null ? null : recordSource.get(linkedID);\n    if (linkedRecord == null || this._isInvalid(linkedRecord, getDataForResolverFragment)) {\n      var _linkedID;\n      // Cache miss; evaluate the selector and store the result in a new record:\n      linkedID = (_linkedID = linkedID) !== null && _linkedID !== void 0 ? _linkedID : generateClientID(recordID, storageKey);\n      linkedRecord = RelayModernRecord.create(linkedID, '__RELAY_RESOLVER__');\n      var evaluationResult = evaluate();\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY, evaluationResult.resolverResult);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY, evaluationResult.snapshot);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY, evaluationResult.error);\n      recordSource.set(linkedID, linkedRecord);\n\n      // Link the resolver value record to the resolver field of the record being read:\n\n      // Note: We get a fresh instance of the parent record from the record\n      // source, because it may have been updated when we traversed into child\n      // resolvers.\n      var currentRecord = recordSource.get(recordID);\n      !(currentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected the parent record to still be in the record source.') : invariant(false) : void 0;\n      var nextRecord = RelayModernRecord.clone(currentRecord);\n      RelayModernRecord.setLinkedRecordID(nextRecord, storageKey, linkedID);\n      recordSource.set(recordID, nextRecord);\n      if (field.fragment != null) {\n        var _evaluationResult$sna;\n        // Put records observed by the resolver into the dependency graph:\n        var fragmentStorageKey = getStorageKey(field.fragment, variables);\n        var resolverID = generateClientID(recordID, fragmentStorageKey);\n        addDependencyEdge(this._resolverIDToRecordIDs, resolverID, linkedID);\n        addDependencyEdge(this._recordIDToResolverIDs, recordID, resolverID);\n        var seenRecordIds = (_evaluationResult$sna = evaluationResult.snapshot) === null || _evaluationResult$sna === void 0 ? void 0 : _evaluationResult$sna.seenRecords;\n        if (seenRecordIds != null) {\n          var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(seenRecordIds),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var seenRecordID = _step.value;\n              addDependencyEdge(this._recordIDToResolverIDs, seenRecordID, resolverID);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n    }\n\n    // $FlowFixMe[incompatible-type] - will always be empty\n    var answer = linkedRecord[RELAY_RESOLVER_VALUE_KEY];\n    // $FlowFixMe[incompatible-type] - casting mixed\n    var snapshot = linkedRecord[RELAY_RESOLVER_SNAPSHOT_KEY];\n    // $FlowFixMe[incompatible-type] - casting mixed\n    var error = linkedRecord[RELAY_RESOLVER_ERROR_KEY];\n    return [answer, linkedID, error, snapshot, undefined, undefined];\n  };\n  _proto2.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs // Mutated in place\n  ) {\n    var recordSource = this._getRecordSource();\n    var visited = new Set();\n    var recordsToVisit = Array.from(updatedDataIDs);\n    while (recordsToVisit.length) {\n      var recordID = recordsToVisit.pop();\n      updatedDataIDs.add(recordID);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_recordIDToReso = this._recordIDToResolverIDs.get(recordID)) !== null && _this$_recordIDToReso !== void 0 ? _this$_recordIDToReso : emptySet),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _this$_recordIDToReso;\n          var fragment = _step2.value;\n          if (!visited.has(fragment)) {\n            var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_resolverIDToRe = this._resolverIDToRecordIDs.get(fragment)) !== null && _this$_resolverIDToRe !== void 0 ? _this$_resolverIDToRe : emptySet),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _this$_resolverIDToRe;\n                var anotherRecordID = _step3.value;\n                this._markInvalidatedResolverRecord(anotherRecordID, recordSource, updatedDataIDs);\n                if (!visited.has(anotherRecordID)) {\n                  recordsToVisit.push(anotherRecordID);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  };\n  _proto2._markInvalidatedResolverRecord = function _markInvalidatedResolverRecord(dataID, recordSource,\n  // Written to\n  updatedDataIDs // Mutated in place\n  ) {\n    var record = recordSource.get(dataID);\n    if (!record) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected a resolver record with ID %s, but it was missing.', dataID) : void 0;\n      return;\n    }\n    var nextRecord = RelayModernRecord.clone(record);\n    RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, true);\n    recordSource.set(dataID, nextRecord);\n  };\n  _proto2._isInvalid = function _isInvalid(record, getDataForResolverFragment) {\n    if (!RelayModernRecord.getValue(record, RELAY_RESOLVER_INVALIDATION_KEY)) {\n      return false;\n    }\n    // $FlowFixMe[incompatible-type] - storing values in records is not typed\n    var snapshot = RelayModernRecord.getValue(record, RELAY_RESOLVER_SNAPSHOT_KEY);\n    var originalInputs = snapshot === null || snapshot === void 0 ? void 0 : snapshot.data;\n    var readerSelector = snapshot === null || snapshot === void 0 ? void 0 : snapshot.selector;\n    if (originalInputs == null || readerSelector == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected previous inputs and reader selector on resolver record with ID %s, but they were missing.', RelayModernRecord.getDataID(record)) : void 0;\n      return true;\n    }\n    var _getDataForResolverFr = getDataForResolverFragment(readerSelector),\n      latestValues = _getDataForResolverFr.data;\n    var recycled = recycleNodesInto(originalInputs, latestValues);\n    if (recycled !== originalInputs) {\n      return true;\n    }\n    return false;\n  };\n  _proto2.ensureClientRecord = function ensureClientRecord(id, typename) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto2.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Processing @outputType records is not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  return RecordResolverCache;\n}();\nmodule.exports = {\n  NoopResolverCache: NoopResolverCache,\n  RecordResolverCache: RecordResolverCache\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getFragment = _require.getFragment;\nvar _require2 = require('./RelayModernSelector'),\n  getSelector = _require2.getSelector;\nvar invariant = require('invariant');\n\n// When we call the user-supplied resolver function, it will in turn call\n// `readFragment`, but that's a global function -- it needs information\n// about what resolver is being executed, which is supplied by putting the\n// info on this stack before we call the resolver function.\n\nvar contextStack = [];\nfunction withResolverContext(context, cb) {\n  contextStack.push(context);\n  try {\n    return cb();\n  } finally {\n    contextStack.pop();\n  }\n}\n\n// NOTE: these declarations are copied from 'useFragment'; it would be good\n// to figure out how to share the same type signature between the two functions.\n// The declarations ensure that the type of the returned data is:\n//   - non-nullable if the provided ref type is non-nullable\n//   - nullable if the provided ref type is nullable\n//   - array of non-nullable if the provided ref type is an array of\n//     non-nullable refs\n//   - array of nullable if the provided ref type is an array of nullable refs\n\nfunction readFragment(fragmentInput, fragmentKey) {\n  if (!contextStack.length) {\n    throw new Error('readFragment should be called only from within a Relay Resolver function.');\n  }\n  var context = contextStack[contextStack.length - 1];\n  var fragmentNode = getFragment(fragmentInput);\n  var fragmentSelector = getSelector(fragmentNode, fragmentKey);\n  !(fragmentSelector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected a selector for the fragment of the resolver \".concat(fragmentNode.name, \", but got null.\")) : invariant(false) : void 0;\n  !(fragmentSelector.kind === 'SingularReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected a singular reader selector for the fragment of the resolver \".concat(fragmentNode.name, \", but it was plural.\")) : invariant(false) : void 0;\n  var _context$getDataForRe = context.getDataForResolverFragment(fragmentSelector, fragmentKey),\n    data = _context$getDataForRe.data,\n    isMissingData = _context$getDataForRe.isMissingData;\n  if (isMissingData) {\n    throw RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL;\n  }\n  return data;\n}\nvar RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL = {};\nmodule.exports = {\n  readFragment: readFragment,\n  withResolverContext: withResolverContext,\n  RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL: RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar PREFIX = 'client:__type:';\nvar TYPE_SCHEMA_TYPE = '__TypeSchema';\nfunction generateTypeID(typeName) {\n  return PREFIX + typeName;\n}\nfunction isTypeID(id) {\n  return id.indexOf(PREFIX) === 0;\n}\nmodule.exports = {\n  generateTypeID: generateTypeID,\n  isTypeID: isTypeID,\n  TYPE_SCHEMA_TYPE: TYPE_SCHEMA_TYPE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('./RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID;\nvar VIEWER_ID = generateClientID(ROOT_ID, 'viewer');\nvar VIEWER_TYPE = 'Viewer';\nmodule.exports = {\n  VIEWER_ID: VIEWER_ID,\n  VIEWER_TYPE: VIEWER_TYPE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../util/RelayConcreteNode'),\n  LINKED_FIELD = _require.LINKED_FIELD;\nvar _require2 = require('./RelayStoreUtils'),\n  getHandleStorageKey = _require2.getHandleStorageKey;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\n\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original linked\n * field (on which the handle was declared) among the sibling `selections`, and\n * copying its selections into the clone.\n */\nfunction cloneRelayHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === LINKED_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);\n  });\n  !(sourceField && sourceField.kind === LINKED_FIELD) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'cloneRelayHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle) : invariant(false) : void 0;\n  var handleKey = getHandleStorageKey(handleField, variables);\n  return {\n    kind: 'LinkedField',\n    alias: sourceField.alias,\n    name: handleKey,\n    storageKey: handleKey,\n    args: null,\n    concreteType: sourceField.concreteType,\n    plural: sourceField.plural,\n    selections: sourceField.selections\n  };\n}\nmodule.exports = cloneRelayHandleSourceField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../util/RelayConcreteNode'),\n  SCALAR_FIELD = _require.SCALAR_FIELD;\nvar _require2 = require('./RelayStoreUtils'),\n  getHandleStorageKey = _require2.getHandleStorageKey;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\n\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original scalar\n * field (on which the handle was declared) among the sibling `selections`.\n */\nfunction cloneRelayScalarHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === SCALAR_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);\n  });\n  !(sourceField && sourceField.kind === SCALAR_FIELD) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'cloneRelayScalarHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle) : invariant(false) : void 0;\n  var handleKey = getHandleStorageKey(handleField, variables);\n  return {\n    kind: 'ScalarField',\n    alias: sourceField.alias,\n    name: handleKey,\n    storageKey: handleKey,\n    args: null\n  };\n}\nmodule.exports = cloneRelayScalarHandleSourceField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernFragmentSpecResolver = require('./RelayModernFragmentSpecResolver');\nvar warning = require(\"fbjs/lib/warning\");\nfunction createFragmentSpecResolver(context, containerName, fragments, props, rootIsQueryRenderer, callback) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var fragmentNames = Object.keys(fragments);\n    fragmentNames.forEach(function (fragmentName) {\n      var propValue = props[fragmentName];\n      process.env.NODE_ENV !== \"production\" ? warning(propValue !== undefined, 'createFragmentSpecResolver: Expected prop `%s` to be supplied to `%s`, but ' + 'got `undefined`. Pass an explicit `null` if this is intentional.', fragmentName, containerName) : void 0;\n    });\n  }\n  return new RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer);\n}\nmodule.exports = createFragmentSpecResolver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n\n// Ideally, we'd just import the type of the react module, but this causes Flow\n// problems.\n\nvar relayContext;\nvar firstReact;\nfunction createRelayContext(react) {\n  if (!relayContext) {\n    relayContext = react.createContext(null);\n    if (process.env.NODE_ENV !== \"production\") {\n      relayContext.displayName = 'RelayContext';\n    }\n    firstReact = react;\n  }\n  !(react === firstReact) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[createRelayContext]: You are passing a different instance of React', react.version) : invariant(false) : void 0;\n  return relayContext;\n}\nmodule.exports = createRelayContext;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./ViewerPattern'),\n  VIEWER_ID = _require.VIEWER_ID,\n  VIEWER_TYPE = _require.VIEWER_TYPE;\nfunction defaultGetDataID(fieldValue, typeName) {\n  if (typeName === VIEWER_TYPE) {\n    return fieldValue.id == null ? VIEWER_ID : fieldValue.id;\n  }\n  return fieldValue.id;\n}\nmodule.exports = defaultGetDataID;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar defaultRequiredFieldLogger = function defaultRequiredFieldLogger(event) {\n  if (process.env.NODE_ENV !== \"production\" && event.kind === 'missing_field.log') {\n    throw new Error('Relay Environment Configuration Error (dev only): `@required(action: LOG)` requires that the Relay Environment be configured with a `requiredFieldLogger`.');\n  }\n};\nmodule.exports = defaultRequiredFieldLogger;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar LIVE_RESOLVER_SUSPENSE_SENTINEL = Object.freeze({\n  __LIVE_RESOLVER_SUSPENSE_SENTINEL: true\n});\nfunction suspenseSentinel() {\n  // $FlowFixMe[incompatible-return]\n  return LIVE_RESOLVER_SUSPENSE_SENTINEL;\n}\nfunction isSuspenseSentinel(value) {\n  return value === LIVE_RESOLVER_SUSPENSE_SENTINEL;\n}\nmodule.exports = {\n  isSuspenseSentinel: isSuspenseSentinel,\n  suspenseSentinel: suspenseSentinel\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../RelayModernRecord');\nvar _require = require('../RelayStoreUtils'),\n  RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS = _require.RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS;\nvar invariant = require('invariant');\nfunction getOutputTypeRecordIDs(record) {\n  var maybeOutputTypeRecordIDs = RelayModernRecord.getValue(record, RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS);\n  if (maybeOutputTypeRecordIDs == null) {\n    return null;\n  }\n  !(maybeOutputTypeRecordIDs instanceof Set) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getOutputTypeRecordIDs: Expected the `%s` field on record `%s` to be of type Set. Instead, it is a %s.', RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS, typeof maybeOutputTypeRecordIDs) : invariant(false) : void 0;\n  return maybeOutputTypeRecordIDs;\n}\nmodule.exports = getOutputTypeRecordIDs;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ITERATOR_KEY = Symbol.iterator;\nfunction hasOverlappingIDs(seenRecords, updatedRecordIDs) {\n  // $FlowFixMe[incompatible-use]: Set is an iterable type, accessing its iterator is allowed.\n  var iterator = seenRecords[ITERATOR_KEY]();\n  var next = iterator.next();\n  while (!next.done) {\n    var key = next.value;\n    if (updatedRecordIDs.has(key)) {\n      return true;\n    }\n    next = iterator.next();\n  }\n  return false;\n}\nmodule.exports = hasOverlappingIDs;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayStoreTypes`.\n *\n * Use a sigil for detection to avoid a realm-specific instanceof check, and to\n * aid in module tree-shaking to avoid requiring all of RelayRuntime just to\n * detect its environment.\n */\nfunction isRelayModernEnvironment(environment) {\n  return Boolean(environment && environment['@@RelayModernEnvironment']);\n}\nmodule.exports = isRelayModernEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getInlineDataFragment = _require.getInlineDataFragment;\nvar _require2 = require('./RelayStoreUtils'),\n  FRAGMENTS_KEY = _require2.FRAGMENTS_KEY;\nvar invariant = require('invariant');\nfunction readInlineData(fragment, fragmentRef) {\n  var _fragmentRef$FRAGMENT;\n  var inlineDataFragment = getInlineDataFragment(fragment);\n  if (fragmentRef == null) {\n    return fragmentRef;\n  }\n  !(typeof fragmentRef === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected an object, got `%s`.', typeof fragmentRef) : invariant(false) : void 0;\n  // $FlowFixMe[incompatible-use]\n  var inlineData = (_fragmentRef$FRAGMENT = fragmentRef[FRAGMENTS_KEY]) === null || _fragmentRef$FRAGMENT === void 0 ? void 0 : _fragmentRef$FRAGMENT[inlineDataFragment.name];\n  !(inlineData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected fragment `%s` to be spread in the parent ' + 'fragment.', inlineDataFragment.name) : invariant(false) : void 0;\n  return inlineData;\n}\nmodule.exports = readInlineData;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayDeclarativeMutationConfig = require('../mutations/RelayDeclarativeMutationConfig');\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require2.createOperationDescriptor;\nvar _require3 = require('../store/RelayModernSelector'),\n  createReaderSelector = _require3.createReaderSelector;\nvar warning = require(\"fbjs/lib/warning\");\nfunction requestSubscription(environment, config) {\n  var subscription = getRequest(config.subscription);\n  if (subscription.params.operationKind !== 'subscription') {\n    throw new Error('requestSubscription: Must use Subscription operation');\n  }\n  var configs = config.configs,\n    onCompleted = config.onCompleted,\n    onError = config.onError,\n    onNext = config.onNext,\n    variables = config.variables,\n    cacheConfig = config.cacheConfig;\n  var operation = createOperationDescriptor(subscription, variables, cacheConfig);\n  process.env.NODE_ENV !== \"production\" ? warning(!(config.updater && configs), 'requestSubscription: Expected only one of `updater` and `configs` to be provided') : void 0;\n  var _ref = configs ? RelayDeclarativeMutationConfig.convert(configs, subscription, null /* optimisticUpdater */, config.updater) : config,\n    updater = _ref.updater;\n  var sub = environment.executeSubscription({\n    operation: operation,\n    updater: updater\n  }).subscribe({\n    next: function next(responses) {\n      if (onNext != null) {\n        var selector = operation.fragment;\n        var nextID;\n        if (Array.isArray(responses)) {\n          var _responses$, _responses$$extension;\n          nextID = (_responses$ = responses[0]) === null || _responses$ === void 0 ? void 0 : (_responses$$extension = _responses$.extensions) === null || _responses$$extension === void 0 ? void 0 : _responses$$extension.__relay_subscription_root_id;\n        } else {\n          var _responses$extensions;\n          nextID = (_responses$extensions = responses.extensions) === null || _responses$extensions === void 0 ? void 0 : _responses$extensions.__relay_subscription_root_id;\n        }\n        if (typeof nextID === 'string') {\n          selector = createReaderSelector(selector.node, nextID, selector.variables, selector.owner);\n        }\n        var data = environment.lookup(selector).data;\n        // $FlowFixMe[incompatible-cast]\n        onNext(data);\n      }\n    },\n    error: onError,\n    complete: onCompleted\n  });\n  return {\n    dispose: sub.unsubscribe\n  };\n}\nmodule.exports = requestSubscription;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Represents a common GraphQL request that can be executed, an `operation`\n * containing information to normalize the results, and a `fragment` derived\n * from that operation to read the response data (masking data from child\n * fragments).\n */\n\n/**\n * Contains the parameters required for executing a GraphQL request.\n * The operation can either be provided as a persisted `id` or `text`. If given\n * in `text` format, a `cacheID` as a hash of the text should be set to be used\n * for local caching.\n */\n\nvar RelayConcreteNode = {\n  ACTOR_CHANGE: 'ActorChange',\n  CONDITION: 'Condition',\n  CLIENT_COMPONENT: 'ClientComponent',\n  CLIENT_EDGE_TO_SERVER_OBJECT: 'ClientEdgeToServerObject',\n  CLIENT_EDGE_TO_CLIENT_OBJECT: 'ClientEdgeToClientObject',\n  CLIENT_EXTENSION: 'ClientExtension',\n  DEFER: 'Defer',\n  CONNECTION: 'Connection',\n  FLIGHT_FIELD: 'FlightField',\n  FRAGMENT: 'Fragment',\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_DATA_FRAGMENT_SPREAD: 'InlineDataFragmentSpread',\n  INLINE_DATA_FRAGMENT: 'InlineDataFragment',\n  INLINE_FRAGMENT: 'InlineFragment',\n  LINKED_FIELD: 'LinkedField',\n  LINKED_HANDLE: 'LinkedHandle',\n  LITERAL: 'Literal',\n  LIST_VALUE: 'ListValue',\n  LOCAL_ARGUMENT: 'LocalArgument',\n  MODULE_IMPORT: 'ModuleImport',\n  ALIASED_FRAGMENT_SPREAD: 'AliasedFragmentSpread',\n  ALIASED_INLINE_FRAGMENT_SPREAD: 'AliasedInlineFragmentSpread',\n  RELAY_RESOLVER: 'RelayResolver',\n  RELAY_LIVE_RESOLVER: 'RelayLiveResolver',\n  REQUIRED_FIELD: 'RequiredField',\n  OBJECT_VALUE: 'ObjectValue',\n  OPERATION: 'Operation',\n  REQUEST: 'Request',\n  ROOT_ARGUMENT: 'RootArgument',\n  SCALAR_FIELD: 'ScalarField',\n  SCALAR_HANDLE: 'ScalarHandle',\n  SPLIT_OPERATION: 'SplitOperation',\n  STREAM: 'Stream',\n  TYPE_DISCRIMINATOR: 'TypeDiscriminator',\n  UPDATABLE_QUERY: 'UpdatableQuery',\n  VARIABLE: 'Variable'\n};\nmodule.exports = RelayConcreteNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nmodule.exports = {\n  DEFAULT_HANDLE_KEY: ''\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * @private\n */\nfunction createError(type, name, messageFormat) {\n  for (var _len = arguments.length, messageParams = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    messageParams[_key - 3] = arguments[_key];\n  }\n  var index = 0;\n  var message = messageFormat.replace(/%s/g, function () {\n    return String(messageParams[index++]);\n  });\n  var err = new Error(message);\n  var error = Object.assign(err, {\n    name: name,\n    messageFormat: messageFormat,\n    messageParams: messageParams,\n    type: type,\n    taalOpcodes: [2, 2] // skip frame (code=2) twice\n  });\n  // In V8, Error objects keep the closure scope chain alive until the\n  // err.stack property is accessed.\n  if (error.stack === undefined) {\n    // IE sets the stack only if error is thrown\n    try {\n      throw error;\n    } catch (_unused) {}\n  }\n  return error;\n}\nmodule.exports = {\n  create: function create(name, messageFormat) {\n    for (var _len2 = arguments.length, messageParams = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      messageParams[_key2 - 2] = arguments[_key2];\n    }\n    return createError.apply(void 0, ['error', name, messageFormat].concat(messageParams));\n  },\n  createWarning: function createWarning(name, messageFormat) {\n    for (var _len3 = arguments.length, messageParams = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      messageParams[_key3 - 2] = arguments[_key3];\n    }\n    return createError.apply(void 0, ['warn', name, messageFormat].concat(messageParams));\n  }\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayFeatureFlags = {\n  ENABLE_CLIENT_EDGES: false,\n  ENABLE_VARIABLE_CONNECTION_KEY: false,\n  ENABLE_PARTIAL_RENDERING_DEFAULT: true,\n  ENABLE_REACT_FLIGHT_COMPONENT_FIELD: false,\n  ENABLE_RELAY_RESOLVERS: false,\n  ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION: false,\n  ENABLE_FRIENDLY_QUERY_NAME_GQL_URL: false,\n  ENABLE_LOAD_QUERY_REQUEST_DEDUPING: true,\n  ENABLE_DO_NOT_WRAP_LIVE_QUERY: false,\n  ENABLE_NOTIFY_SUBSCRIPTION: false,\n  BATCH_ASYNC_MODULE_UPDATES_FN: null,\n  ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT: false,\n  MAX_DATA_ID_LENGTH: null,\n  STRING_INTERN_LEVEL: 0,\n  USE_REACT_CACHE: false,\n  USE_REACT_CACHE_LEGACY_TIMEOUTS: true,\n  ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION: false\n};\nmodule.exports = RelayFeatureFlags;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar profileHandlersByName = {};\nvar defaultProfiler = {\n  stop: function stop() {}\n};\n\n/**\n * @public\n *\n * Instruments methods to allow profiling various parts of Relay. Profiling code\n * in Relay consists of three steps:\n *\n *  - Instrument the function to be profiled.\n *  - Attach handlers to the instrumented function.\n *  - Run the code which triggers the handlers.\n *\n * Handlers attached to instrumented methods are called with an instrumentation\n * name and a callback that must be synchronously executed:\n *\n *   instrumentedMethod.attachHandler(function(name, callback) {\n *     const start = performance.now();\n *     callback();\n *     console.log('Duration', performance.now() - start);\n *   });\n *\n * Handlers for profiles are callbacks that return a stop method:\n *\n *   RelayProfiler.attachProfileHandler('profileName', (name, state) => {\n *     const start = performance.now();\n *     return function stop(name, state) {\n *       console.log(`Duration (${name})`, performance.now() - start);\n *     }\n *   });\n */\nvar RelayProfiler = {\n  /**\n   * Instruments profiling for arbitrarily asynchronous code by a name.\n   *\n   *   const timerProfiler = RelayProfiler.profile('timeout');\n   *   setTimeout(function() {\n   *     timerProfiler.stop();\n   *   }, 1000);\n   *\n   *   RelayProfiler.attachProfileHandler('timeout', ...);\n   *\n   * Arbitrary state can also be passed into `profile` as a second argument. The\n   * attached profile handlers will receive this as the second argument.\n   */\n  profile: function profile(name, state) {\n    var handlers = profileHandlersByName[name];\n    if (handlers && handlers.length > 0) {\n      var stopHandlers = [];\n      for (var ii = handlers.length - 1; ii >= 0; ii--) {\n        var stopHandler = handlers[ii](name, state);\n        stopHandlers.unshift(stopHandler);\n      }\n      return {\n        stop: function stop(error) {\n          stopHandlers.forEach(function (stopHandler) {\n            return stopHandler(error);\n          });\n        }\n      };\n    }\n    return defaultProfiler;\n  },\n  /**\n   * Attaches a handler to profiles with the supplied name.\n   */\n  attachProfileHandler: function attachProfileHandler(name, handler) {\n    if (!profileHandlersByName.hasOwnProperty(name)) {\n      profileHandlersByName[name] = [];\n    }\n    profileHandlersByName[name].push(handler);\n  },\n  /**\n   * Detaches a handler attached via `attachProfileHandler`.\n   */\n  detachProfileHandler: function detachProfileHandler(name, handler) {\n    if (profileHandlersByName.hasOwnProperty(name)) {\n      removeFromArray(profileHandlersByName[name], handler);\n    }\n  }\n};\nfunction removeFromArray(array, element) {\n  var index = array.indexOf(element);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nmodule.exports = RelayProfiler;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar invariant = require('invariant');\n/**\n * An implementation of a `ReplaySubject` for Relay Observables.\n *\n * Records events provided and synchronously plays them back to new subscribers,\n * as well as forwarding new asynchronous events.\n */\nvar RelayReplaySubject = /*#__PURE__*/function () {\n  function RelayReplaySubject() {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_complete\", false);\n    (0, _defineProperty2[\"default\"])(this, \"_events\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_sinks\", new Set());\n    (0, _defineProperty2[\"default\"])(this, \"_subscription\", []);\n    this._observable = RelayObservable.create(function (sink) {\n      _this._sinks.add(sink);\n      var events = _this._events;\n      for (var i = 0; i < events.length; i++) {\n        if (sink.closed) {\n          // Bail if an event made the observer unsubscribe.\n          break;\n        }\n        var event = events[i];\n        switch (event.kind) {\n          case 'complete':\n            sink.complete();\n            break;\n          case 'error':\n            sink.error(event.error);\n            break;\n          case 'next':\n            sink.next(event.data);\n            break;\n          default:\n            event.kind;\n            !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReplaySubject: Unknown event kind `%s`.', event.kind) : invariant(false) : void 0;\n        }\n      }\n      return function () {\n        _this._sinks[\"delete\"](sink);\n      };\n    });\n  }\n  var _proto = RelayReplaySubject.prototype;\n  _proto.complete = function complete() {\n    if (this._complete === true) {\n      return;\n    }\n    this._complete = true;\n    this._events.push({\n      kind: 'complete'\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.complete();\n    });\n  };\n  _proto.error = function error(_error) {\n    if (this._complete === true) {\n      return;\n    }\n    this._complete = true;\n    this._events.push({\n      kind: 'error',\n      error: _error\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.error(_error);\n    });\n  };\n  _proto.next = function next(data) {\n    if (this._complete === true) {\n      return;\n    }\n    this._events.push({\n      kind: 'next',\n      data: data\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.next(data);\n    });\n  };\n  _proto.subscribe = function subscribe(observer) {\n    var subscription = this._observable.subscribe(observer);\n    this._subscription.push(subscription);\n    return subscription;\n  };\n  _proto.unsubscribe = function unsubscribe() {\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._subscription),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var subscription = _step.value;\n        subscription.unsubscribe();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    this._subscription = [];\n  };\n  _proto.getObserverCount = function getObserverCount() {\n    return this._sinks.size;\n  };\n  return RelayReplaySubject;\n}();\nmodule.exports = RelayReplaySubject;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar internTable = new Map();\nvar nextIndex = 1;\nvar digits = initDigitTable();\n\n// Character used as the prefix for interned strings. The specific character is\n// chosen to reduce the likelihood that non-interned input strings need to be\n// escaped (choosing eg a-Z would increase the likelihood we need to escape)\nvar INTERN_PREFIX = '\\t';\n// Character used as the prefix of escaped strings. As above, this is also\n// chosen to be unlikely in normal input strings.\nvar ESCAPE_PREFIX = '\\v';\nfunction initDigitTable() {\n  // disable lint because digits isn't defined when this function is called\n  // eslint-disable-next-line no-shadow\n  var digits = new Set();\n  for (var i = 0; i < 10; ++i) {\n    digits.add(i.toString());\n  }\n  return digits;\n}\n\n// Escape a string so that it cannot conflict with an interned string\nfunction escape(str) {\n  if (\n  // \"\\t<digit>...\" -> \"\\v\\t<digit>...\"\n  str[0] === INTERN_PREFIX && digits.has(str[1]) ||\n  // \"\\v...\" -> \"\\v\\v...\"\n  str[0] === ESCAPE_PREFIX) {\n    return ESCAPE_PREFIX + str;\n  }\n  return str;\n}\n\n// Interns the input string if its length equals or exceeds the given `limit`,\n// returning a shorter replacement string that is uniquely associated with the\n// input: multiple calls to intern() for the equivalent input strings (and limit)\n// will always return the exact same string.\n// Strings shorter than the limit are not interned but are escaped if they\n// could conflict with interned strings.\nfunction intern(str, limit) {\n  if (limit == null || str.length < limit) {\n    return escape(str);\n  }\n  var internedString = internTable.get(str);\n  if (internedString != null) {\n    return internedString;\n  }\n  internedString = INTERN_PREFIX + nextIndex++;\n  internTable.set(str, internedString);\n  return internedString;\n}\nmodule.exports = {\n  intern: intern\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('../store/RelayStoreUtils'),\n  getModuleComponentKey = _require.getModuleComponentKey,\n  getModuleOperationKey = _require.getModuleOperationKey;\nfunction createPayloadFor3DField(name, operation, component, response) {\n  var data = (0, _objectSpread2[\"default\"])({}, response);\n  // $FlowFixMe[prop-missing]\n  data[getModuleComponentKey(name)] = component;\n  // $FlowFixMe[prop-missing]\n  data[getModuleOperationKey(name)] = operation;\n  return data;\n}\nmodule.exports = createPayloadFor3DField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Recursively \"deep\" freezes the supplied object.\n *\n * For convenience, and for consistency with the behavior of `Object.freeze`,\n * returns the now-frozen original object.\n */\nfunction deepFreeze(object) {\n  Object.freeze(object);\n  Object.getOwnPropertyNames(object).forEach(function (name) {\n    var property = object[name];\n    if (property && typeof property === 'object' && !Object.isFrozen(property)) {\n      deepFreeze(property);\n    }\n  });\n  return object;\n}\nmodule.exports = deepFreeze;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar id = 100000;\nfunction generateID() {\n  return id++;\n}\nmodule.exports = generateID;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayModernSelector'),\n  getDataIDsFromFragment = _require.getDataIDsFromFragment,\n  getSelector = _require.getSelector,\n  getVariablesFromFragment = _require.getVariablesFromFragment;\nvar isEmptyObject = require('./isEmptyObject');\nvar RelayFeatureFlags = require('./RelayFeatureFlags');\nvar stableCopy = require('./stableCopy');\nvar _require2 = require('./StringInterner'),\n  intern = _require2.intern;\nfunction getFragmentIdentifier(fragmentNode, fragmentRef) {\n  var selector = getSelector(fragmentNode, fragmentRef);\n  var fragmentOwnerIdentifier = selector == null ? 'null' : selector.kind === 'SingularReaderSelector' ? selector.owner.identifier : '[' + selector.selectors.map(function (sel) {\n    return sel.owner.identifier;\n  }).join(',') + ']';\n  var fragmentVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n  var dataIDs = getDataIDsFromFragment(fragmentNode, fragmentRef);\n  if (RelayFeatureFlags.ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION) {\n    var ids = typeof dataIDs === 'undefined' ? 'missing' : dataIDs == null ? 'null' : Array.isArray(dataIDs) ? '[' + dataIDs.join(',') + ']' : dataIDs;\n    ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? ids : intern(ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + (fragmentVariables == null || isEmptyObject(fragmentVariables) ? '{}' : JSON.stringify(stableCopy(fragmentVariables))) + '/' + ids;\n  } else {\n    var _JSON$stringify;\n    var _ids = (_JSON$stringify = JSON.stringify(dataIDs)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'missing';\n    _ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? _ids : intern(_ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + JSON.stringify(stableCopy(fragmentVariables)) + '/' + _ids;\n  }\n}\nmodule.exports = getFragmentIdentifier;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayConcreteNode'),\n  REQUEST = _require.REQUEST,\n  SPLIT_OPERATION = _require.SPLIT_OPERATION;\n\n/**\n * OperationLoaders can return either a NormalizationSplitOperation or\n * ConcreteRequest.\n */\nfunction getOperation(node) {\n  switch (node.kind) {\n    case REQUEST:\n      return node.operation;\n    case SPLIT_OPERATION:\n    default:\n      return node;\n  }\n}\nmodule.exports = getOperation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar getRefetchMetadata = require('./getRefetchMetadata');\nvar invariant = require('invariant');\nfunction getPaginationMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n    paginationRequest = _getRefetchMetadata.refetchableRequest,\n    refetchMetadata = _getRefetchMetadata.refetchMetadata;\n  var paginationMetadata = refetchMetadata.connection;\n  !(paginationMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var connectionPathInFragmentData = paginationMetadata.path;\n  var connectionMetadata = ((_fragmentNode$metadat = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.connection) !== null && _fragmentNode$metadat !== void 0 ? _fragmentNode$metadat : [])[0];\n  !(connectionMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    connectionPathInFragmentData: connectionPathInFragmentData,\n    identifierField: identifierField,\n    paginationRequest: paginationRequest,\n    paginationMetadata: paginationMetadata,\n    stream: connectionMetadata.stream === true\n  };\n}\nmodule.exports = getPaginationMetadata;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectSpread4 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction getPaginationVariables(direction, count, cursor, baseVariables, extraVariables, paginationMetadata) {\n  var _objectSpread3;\n  var backwardMetadata = paginationMetadata.backward,\n    forwardMetadata = paginationMetadata.forward;\n  if (direction === 'backward') {\n    var _objectSpread2;\n    !(backwardMetadata != null && backwardMetadata.count != null && backwardMetadata.cursor != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected backward pagination metadata to be available. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(backwardMetadata.cursor), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain cursor variable `%s`. This variable is automatically ' + 'determined by Relay.', backwardMetadata.cursor) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(backwardMetadata.count), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain count variable `%s`. This variable is automatically ' + 'determined by Relay.', backwardMetadata.count) : void 0;\n    var _paginationVariables = (0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])({}, baseVariables), extraVariables), {}, (_objectSpread2 = {}, (0, _defineProperty2[\"default\"])(_objectSpread2, backwardMetadata.cursor, cursor), (0, _defineProperty2[\"default\"])(_objectSpread2, backwardMetadata.count, count), _objectSpread2));\n    if (forwardMetadata && forwardMetadata.cursor) {\n      _paginationVariables[forwardMetadata.cursor] = null;\n    }\n    if (forwardMetadata && forwardMetadata.count) {\n      _paginationVariables[forwardMetadata.count] = null;\n    }\n    return _paginationVariables;\n  }\n  !(forwardMetadata != null && forwardMetadata.count != null && forwardMetadata.cursor != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected forward pagination metadata to be available. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(forwardMetadata.cursor), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain cursor variable `%s`. This variable is automatically ' + 'determined by Relay.', forwardMetadata.cursor) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(forwardMetadata.count), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain count variable `%s`. This variable is automatically ' + 'determined by Relay.', forwardMetadata.count) : void 0;\n  var paginationVariables = (0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])({}, baseVariables), extraVariables), {}, (_objectSpread3 = {}, (0, _defineProperty2[\"default\"])(_objectSpread3, forwardMetadata.cursor, cursor), (0, _defineProperty2[\"default\"])(_objectSpread3, forwardMetadata.count, count), _objectSpread3));\n  if (backwardMetadata && backwardMetadata.cursor) {\n    paginationVariables[backwardMetadata.cursor] = null;\n  }\n  if (backwardMetadata && backwardMetadata.count) {\n    paginationVariables[backwardMetadata.count] = null;\n  }\n  return paginationVariables;\n}\nmodule.exports = getPaginationVariables;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/fetchQueryInternal'),\n  getPromiseForActiveRequest = _require.getPromiseForActiveRequest;\nfunction getPendingOperationsForFragment(environment, fragmentNode, fragmentOwner) {\n  var _pendingOperations$ma, _pendingOperations;\n  var pendingOperations = [];\n  var promise = getPromiseForActiveRequest(environment, fragmentOwner);\n  if (promise != null) {\n    pendingOperations = [fragmentOwner];\n  } else {\n    var _result$pendingOperat, _result$promise;\n    var result = environment.getOperationTracker().getPendingOperationsAffectingOwner(fragmentOwner);\n    pendingOperations = (_result$pendingOperat = result === null || result === void 0 ? void 0 : result.pendingOperations) !== null && _result$pendingOperat !== void 0 ? _result$pendingOperat : [];\n    promise = (_result$promise = result === null || result === void 0 ? void 0 : result.promise) !== null && _result$promise !== void 0 ? _result$promise : null;\n  }\n  if (!promise) {\n    return null;\n  }\n  var pendingOperationName = (_pendingOperations$ma = (_pendingOperations = pendingOperations) === null || _pendingOperations === void 0 ? void 0 : _pendingOperations.map(function (op) {\n    return op.node.params.name;\n  }).join(',')) !== null && _pendingOperations$ma !== void 0 ? _pendingOperations$ma : null;\n  if (pendingOperationName == null || pendingOperationName.length === 0) {\n    pendingOperationName = 'Unknown pending operation';\n  }\n  var fragmentName = fragmentNode.name;\n  var promiseDisplayName = pendingOperationName === fragmentName ? \"Relay(\".concat(pendingOperationName, \")\") : \"Relay(\".concat(pendingOperationName, \":\").concat(fragmentName, \")\");\n  // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n  promise.displayName = promiseDisplayName;\n\n  // In order to monitor the efficacy of RelayOperationTracker, we log\n  // enough information to track whether we are suspending on the fragment\n  // owner's operation, or some other operation.\n  environment.__log({\n    name: 'pendingoperation.found',\n    fragment: fragmentNode,\n    fragmentOwner: fragmentOwner,\n    pendingOperations: pendingOperations\n  });\n  return {\n    promise: promise,\n    pendingOperations: pendingOperations\n  };\n}\nmodule.exports = getPendingOperationsForFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\nfunction getRefetchMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n  !(((_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` not to be plural when using ' + '`%s`. Remove `@relay(plural: true)` from fragment `%s` ' + 'in order to use it with `%s`.', fragmentNode.name, componentDisplayName, fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n  var refetchMetadata = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.refetch;\n  !(refetchMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` to be refetchable when using `%s`. ' + 'Did you forget to add a @refetchable directive to the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n\n  // handle both commonjs and es modules\n  var refetchableRequest = refetchMetadata.operation[\"default\"] ? refetchMetadata.operation[\"default\"] : refetchMetadata.operation;\n  var fragmentRefPathInResponse = refetchMetadata.fragmentPathInResult;\n  !(typeof refetchableRequest !== 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected refetch query to be an ' + \"operation and not a string when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', componentDisplayName) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    fragmentRefPathInResponse: fragmentRefPathInResponse,\n    identifierField: identifierField,\n    refetchableRequest: refetchableRequest,\n    refetchMetadata: refetchMetadata\n  };\n}\nmodule.exports = getRefetchMetadata;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayDefaultHandleKey'),\n  DEFAULT_HANDLE_KEY = _require.DEFAULT_HANDLE_KEY;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * Helper to create a unique name for a handle field based on the handle name, handle key and\n * source field.\n */\nfunction getRelayHandleKey(handleName, key, fieldName) {\n  if (key && key !== DEFAULT_HANDLE_KEY) {\n    return \"__\".concat(key, \"_\").concat(handleName);\n  }\n  !(fieldName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getRelayHandleKey: Expected either `fieldName` or `key` in `handle` to be provided') : invariant(false) : void 0;\n  return \"__\".concat(fieldName, \"_\").concat(handleName);\n}\nmodule.exports = getRelayHandleKey;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar stableCopy = require('./stableCopy');\nvar invariant = require('invariant');\n/**\n * Returns a stable identifier for the given pair of `RequestParameters` +\n * variables.\n */\nfunction getRequestIdentifier(parameters, variables) {\n  var requestID = parameters.cacheID != null ? parameters.cacheID : parameters.id;\n  !(requestID != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getRequestIdentifier: Expected request `%s` to have either a ' + 'valid `id` or `cacheID` property', parameters.name) : invariant(false) : void 0;\n  return requestID + JSON.stringify(stableCopy(variables));\n}\nmodule.exports = getRequestIdentifier;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar invariant = require('invariant');\nfunction getValueAtPath(data, path) {\n  var result = data;\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(path),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      if (result == null) {\n        return null;\n      }\n      if (typeof key === 'number') {\n        !Array.isArray(result) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected an array when extracting value at path. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n        result = result[key];\n      } else {\n        !(typeof result === 'object' && !Array.isArray(result)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected an object when extracting value at path. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n        result = result[key];\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n}\nmodule.exports = getValueAtPath;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nfunction handlePotentialSnapshotErrors(environment, missingRequiredFields, relayResolverErrors) {\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(relayResolverErrors),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var resolverError = _step.value;\n      environment.requiredFieldLogger({\n        kind: 'relay_resolver.error',\n        owner: resolverError.field.owner,\n        fieldPath: resolverError.field.path,\n        error: resolverError.error\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (missingRequiredFields != null) {\n    switch (missingRequiredFields.action) {\n      case 'THROW':\n        {\n          var _missingRequiredField = missingRequiredFields.field,\n            path = _missingRequiredField.path,\n            owner = _missingRequiredField.owner;\n          // This gives the consumer the chance to throw their own error if they so wish.\n          environment.requiredFieldLogger({\n            kind: 'missing_field.throw',\n            owner: owner,\n            fieldPath: path\n          });\n          throw new Error(\"Relay: Missing @required value at path '\".concat(path, \"' in '\").concat(owner, \"'.\"));\n        }\n      case 'LOG':\n        missingRequiredFields.fields.forEach(function (_ref) {\n          var path = _ref.path,\n            owner = _ref.owner;\n          environment.requiredFieldLogger({\n            kind: 'missing_field.log',\n            owner: owner,\n            fieldPath: path\n          });\n        });\n        break;\n      default:\n        {\n          missingRequiredFields.action;\n        }\n    }\n  }\n}\nmodule.exports = handlePotentialSnapshotErrors;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n// $FlowFixMe[method-unbinding] added when improving typing for this parameters\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmptyObject(obj) {\n  for (var _key in obj) {\n    if (hasOwnProperty.call(obj, _key)) {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = isEmptyObject;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\nmodule.exports = isPromise;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * A fast test to determine if two values are equal scalars:\n * - compares scalars such as booleans, strings, numbers by value\n * - compares functions by identity\n * - returns false for complex values, since these cannot be cheaply tested for\n *   equality (use `areEquals` instead)\n */\nfunction isScalarAndEqual(valueA, valueB) {\n  return valueA === valueB && (valueA === null || typeof valueA !== 'object');\n}\nmodule.exports = isScalarAndEqual;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar hasWeakSetDefined = typeof WeakSet !== 'undefined';\nvar hasWeakMapDefined = typeof WeakMap !== 'undefined';\n\n/**\n * Recycles subtrees from `prevData` by replacing equal subtrees in `nextData`.\n */\nfunction recycleNodesInto(prevData, nextData) {\n  if (prevData === nextData || typeof prevData !== 'object' || prevData instanceof Set || prevData instanceof Map || hasWeakSetDefined && prevData instanceof WeakSet || hasWeakMapDefined && prevData instanceof WeakMap || !prevData || typeof nextData !== 'object' || nextData instanceof Set || nextData instanceof Map || hasWeakSetDefined && nextData instanceof WeakSet || hasWeakMapDefined && nextData instanceof WeakMap || !nextData) {\n    return nextData;\n  }\n  var canRecycle = false;\n\n  // Assign local variables to preserve Flow type refinement.\n  var prevArray = Array.isArray(prevData) ? prevData : null;\n  var nextArray = Array.isArray(nextData) ? nextData : null;\n  if (prevArray && nextArray) {\n    canRecycle = nextArray.reduce(function (wasEqual, nextItem, ii) {\n      var prevValue = prevArray[ii];\n      var nextValue = recycleNodesInto(prevValue, nextItem);\n      if (nextValue !== nextArray[ii]) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!Object.isFrozen(nextArray)) {\n            nextArray[ii] = nextValue;\n          }\n        } else {\n          nextArray[ii] = nextValue;\n        }\n      }\n      return wasEqual && nextValue === prevArray[ii];\n    }, true) && prevArray.length === nextArray.length;\n  } else if (!prevArray && !nextArray) {\n    // Assign local variables to preserve Flow type refinement.\n    var prevObject = prevData;\n    var nextObject = nextData;\n    var prevKeys = Object.keys(prevObject);\n    var nextKeys = Object.keys(nextObject);\n    canRecycle = nextKeys.reduce(function (wasEqual, key) {\n      var prevValue = prevObject[key];\n      var nextValue = recycleNodesInto(prevValue, nextObject[key]);\n      if (nextValue !== nextObject[key]) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!Object.isFrozen(nextObject)) {\n            // $FlowFixMe[cannot-write]\n            nextObject[key] = nextValue;\n          }\n        } else {\n          // $FlowFixMe[cannot-write]\n          nextObject[key] = nextValue;\n        }\n      }\n      return wasEqual && nextValue === prevObject[key];\n    }, true) && prevKeys.length === nextKeys.length;\n  }\n  return canRecycle ? prevData : nextData;\n}\nmodule.exports = recycleNodesInto;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction registerEnvironmentWithDevTools(environment) {\n  // Register this Relay Environment with Relay DevTools if it exists.\n  // Note: this must always be the last step in the constructor.\n  var _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\n  var devToolsHook = _global && _global.__RELAY_DEVTOOLS_HOOK__;\n  if (devToolsHook) {\n    devToolsHook.registerEnvironment(environment);\n  }\n}\nmodule.exports = registerEnvironmentWithDevTools;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar resolvedPromise = Promise.resolve();\n\n/**\n * An alternative to setImmediate based on Promise.\n */\nfunction resolveImmediate(callback) {\n  resolvedPromise.then(callback)[\"catch\"](throwNext);\n}\nfunction throwNext(error) {\n  setTimeout(function () {\n    throw error;\n  }, 0);\n}\nmodule.exports = resolveImmediate;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Creates a copy of the provided value, ensuring any nested objects have their\n * keys sorted such that equivalent values would have identical JSON.stringify\n * results.\n */\nfunction stableCopy(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map(stableCopy);\n  }\n  var keys = Object.keys(value).sort();\n  var stable = {};\n  for (var i = 0; i < keys.length; i++) {\n    stable[keys[i]] = stableCopy(value[keys[i]]);\n  }\n  return stable;\n}\nmodule.exports = stableCopy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _window, _window$performance;\nvar isPerformanceNowAvailable = typeof window !== 'undefined' && typeof ((_window = window) === null || _window === void 0 ? void 0 : (_window$performance = _window.performance) === null || _window$performance === void 0 ? void 0 : _window$performance.now) === 'function';\nfunction currentTimestamp() {\n  if (isPerformanceNowAvailable) {\n    return window.performance.now();\n  }\n  return Date.now();\n}\nfunction withDuration(cb) {\n  var startTime = currentTimestamp();\n  var result = cb();\n  return [currentTimestamp() - startTime, result];\n}\nmodule.exports = withDuration;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar warning = require(\"fbjs/lib/warning\");\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar debugCache = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction withProvidedVariables(userSuppliedVariables, providedVariables) {\n  if (providedVariables != null) {\n    var operationVariables = {};\n    Object.assign(operationVariables, userSuppliedVariables);\n    Object.keys(providedVariables).forEach(function (varName) {\n      var providerFunction = providedVariables[varName].get;\n      var providerResult = providerFunction();\n\n      // people like to ignore these warnings, so use the cache to\n      // enforce that we only compute the value the first time\n      if (!debugCache.has(providerFunction)) {\n        debugCache.set(providerFunction, providerResult);\n        operationVariables[varName] = providerResult;\n      } else {\n        var cachedResult = debugCache.get(providerFunction);\n        if (process.env.NODE_ENV !== \"production\") {\n          process.env.NODE_ENV !== \"production\" ? warning(areEqual(providerResult, cachedResult), 'Relay: Expected function `%s` for provider `%s` to be a pure function, ' + 'but got conflicting return values `%s` and `%s`', providerFunction.name, varName, providerResult, cachedResult) : void 0;\n        }\n        operationVariables[varName] = cachedResult;\n      }\n    });\n    return operationVariables;\n  } else {\n    return userSuppliedVariables;\n  }\n}\nwithProvidedVariables.tests_only_resetDebugCache = process.env.NODE_ENV !== \"production\" ? function () {\n  debugCache = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\n} : undefined;\nmodule.exports = withProvidedVariables;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["props","_props$locale","locale","children","_ANT_MARK__","React","changeConfirmLocale","Modal","getMemoizedContextValue","Object","assign","exist","LocaleContext","value","dynamicStyleMark","concat","Date","now","Math","random","registerTheme","globalPrefixCls","theme","style","variables","formatColor","color","updater","clone","toRgbString","fillColor","colorVal","type","baseColor","TinyColor","colorPalettes","generate","setAlpha","primaryColor","primaryColors","forEach","index","c","lighten","tint","getAlpha","primaryActiveColor","darken","successColor","warningColor","errorColor","infoColor","cssList","keys","map","key","join","trim","getStyle","canUseDom","updateCSS","componentDisabled","useContext","DisabledContext","componentSize","SizeContext","MotionWrapper","_useToken","useToken","motion","_slicedToArray","needWrapMotionProviderRef","current","MotionProvider","globalIconPrefixCls","globalTheme","iconPrefixCls","csp","_useToken2","token","useStyleRegister","hashId","path","nonce","_defineProperty","resetIcon","display","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","PASSED_PROPS","getGlobalPrefixCls","getGlobalIconPrefixCls","defaultIconPrefixCls","globalConfig","getPrefixCls","suffixCls","customizePrefixCls","getIconPrefixCls","getRootPrefixCls","getTheme","ProviderChildren","customCsp","autoInsertSpaceInButton","alert","anchor","form","direction","space","virtual","dropdownMatchSelectWidth","popupMatchSelectWidth","popupOverflow","legacyLocale","parentContext","customIconPrefixCls","segmented","statistic","spin","calendar","carousel","cascader","collapse","typography","checkbox","descriptions","divider","drawer","skeleton","steps","image","layout","list","mentions","modal","progress","result","slider","breadcrumb","menu","pagination","input","empty","badge","radio","rate","SWITCH","switch","transfer","avatar","message","tag","table","card","tabs","timeline","timePicker","upload","notification","tree","colorPicker","datePicker","prefixCls","mergedPrefixCls","shouldWrapSSR","wrapSSR","useStyle","mergedTheme","parentTheme","themeConfig","parentThemeConfig","inherit","defaultConfig","useMemo","mergedComponents","components","componentName","prev","next","some","prevTheme","nextTheme","isEqual","useTheme","baseConfig","config","undefined","propName","propValue","memoedConfig","prevConfig","currentConfig","prevKeys","currentKeys","memoIconContextValue","childNode","validateMessages","_a","_b","_c","_d","merge","defaultLocale","defaultValidateMessages","Form","ValidateMessagesContext","LocaleProvider","IconContext","SizeContextProvider","size","memoTheme","algorithm","rest","themeObj","Array","isArray","createTheme","defaultSeedToken","DesignTokenContext","DisabledContextProvider","disabled","ConfigContext","ConfigProvider","context","antLocale","_ref","endsWith","isLegacyTheme","useConfig","defineProperty","get","createContext","runtimeLocale","newLocale","getConfirmLocale","aStackPool","bStackPool","eq","a","b","aStack","bStack","objToStr","toString","className","String","isNaN","Number","source","global","multiline","ignoreCase","push","constructor","valueOf","pop","module","exports","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","warning","require","condition","format","d","f","error","Error","args","argIndex","replace","name","framesToPop","getComponentName","component","displayName","getContainerName","Component","createRelayContext","__internal","_interopRequireDefault","_objectSpread2","_objectWithoutPropertiesLoose2","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_excluded","buildReactRelayContainer","assertRelayContext","areEqual","_require3","createFragmentSpecResolver","getDataIDsFromObject","isScalarAndEqual","createContainerWithFragments","fragments","_class","containerName","_React$Component","_props$__rootIsQueryR","_this","resolverFromThisUpdate","state","resolver","setState","updatedState","data","resolve","relayProp","getRelayProp","environment","relayContext","__relayContext","rootIsQueryRenderer","__rootIsQueryRenderer","prevProps","prevPropsContext","getDerivedStateFromProps","nextProps","prevState","_nextProps$__rootIsQu","prevIDs","nextIDs","setProps","_proto","componentDidMount","_subscribeToNewResolverAndRerenderIfStoreHasChanged","componentDidUpdate","dispose","_rerenderIfStoreHasChanged","componentWillUnmount","shouldComponentUpdate","nextState","ii","_this$state","maybeNewData","_this$state2","setCallback","_handleFragmentDataUpdate","render","_this$props","componentRef","createElement","ref","relay","createContainer","fragmentSpec","ReactRelayContext","ReactRelayQueryRendererContext","_require","createOperationDescriptor","getRequest","deepFreeze","useLayoutEffect","useState","useRef","queryRendererContext","query","latestVariables","latestValue","useDeepCompare","operation","request","dataRef","forceUpdate","cleanupFnRef","snapshot","check","res","lookup","fragment","retainDisposable","retain","subscribeDisposable","subscribe","newSnapshot","disposed","cleanupFn","Provider","_extends2","_objectSpread3","_excluded2","_excluded3","getRootVariablesForFragments","ReactRelayQueryFetcher","invariant","ConnectionInterface","Observable","RelayFeatureFlags","getVariablesFromObject","FORWARD","toObserver","observerOrCallback","complete","unsubscribe","subscription","connectionConfig","metadata","foundConnectionMetadata","isRelayModern","fragmentName","connectionMetadata","connection","findConnectionMetadata","getConnectionFromProps","createGetConnectionFromProps","getFragmentVariables","countVariable","count","prevVars","totalCount","createGetFragmentVariables","_resolver","connectionData","_getConnectionData","hasMore","cursor","_refetchSubscription","refetchVariables","_canFetchPage","_refetchVariables","paginatingVariables","_fetchPage","force","pageSize","options","observer","create","sink","edgeCount","_refetchConnection","_ConnectionInterface$","END_CURSOR","START_CURSOR","_isARequestInFlight","ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT","prevContext","contextForChildren","_buildRelayProp","resolverGeneration","_isUnmounted","_hasFetched","UNSAFE_componentWillReceiveProps","_this2","prevRootVariables","nextRootVariables","_cleanup","_hasMore","isLoading","_isLoading","loadMore","_loadMore","refetchConnection","restProps","_ConnectionInterface$2","EDGES","PAGE_INFO","HAS_NEXT_PAGE","HAS_PREV_PAGE","edges","pageInfo","_getQueryFetcher","_queryFetcher","method","fragmentVariables","_this3","_this$props2","rootVariables","fetchVariables","getVariables","cacheConfig","refetchSubscription","cleanup","execute","preservePreviousReferences","mergeMap","payload","prevData","setVariables","node","nextData","onNext","_this$props3","ComponentClass","fetchQuery","isRelayModernEnvironment","_cacheSelectionReference","cacheSelectionReference","_selectionReferences","selectionReferences","getSelectionReferences","lookupInStore","fetchPolicy","status","_retainCachedOperation","getFetchResult","_didFetchFinish","_error","_snapshot","_ref$preservePrevious","reference","disposeSelectionReferences","setOnDataChange","onDataChange","_fetchOptions","onDataChangeCallbacks","fetch","fetchOptions","cacheConfigOverride","fetchHasReturned","disposeRequest","oldOnDataChangeCallbacks","operationOverride","_pendingRequest","_onQueryDataAvailable","notifyFirstResult","err","retry","_rootSubscription","_disposeCacheSelectionReference","r","_ref2","_this$_fetchOptions","maybeNewOnDataChangeCallbacks","_require2","requestCache","ReactRelayQueryRenderer","params","prevRequestCacheKey","requestCacheKey","renderProps","getRenderProps","queryFetcher","retryCallbacks","handleDataChange","handleRetryAfterError","getRequestCacheKey","_maybeHiddenOrFastRefresh","prevPropsEnvironment","prevPropsVariables","prevQuery","fetchQueryAndComputeStateFromProps","resetQueryStateForUpdate","newState","ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION","fetchResult","_fetchResult$snapshot","_fetchResult$error","_handleDataChange","_prevProps","_this$state3","syncSnapshot","JSON","stringify","id","cacheID","prevSelectionReferences","genericEnvironment","storeSnapshot","refetch","taggedNode","renderVariables","_getFragmentVariables","localVariables","latestState","response","start","_refetch","isRelayEnvironment","isRelayContext","assertFragmentMap","getFragment","Container","forwardRef","_queryRendererContext","getSelector","_selector$selectors$","_selector$selectors$2","_selector$owner$varia","fragmentNode","fragmentRef","selector","fragmentOwnerVariables","kind","selectors","owner","ReactRelayFragmentContainer","ReactRelayLocalQueryRenderer","ReactRelayPaginationContainer","ReactRelayRefetchContainer","EntryPointContainer","loadEntryPoint","loadQuery","ProfilerContext","RelayEnvironmentProvider","useClientQuery","useEntryPointLoader","useFragment","useLazyLoadQuery","useMutation","usePaginationFragment","usePreloadedQuery","useQueryLoader","useRefetchableFragment","useRelayEnvironment","useSubscribeToInvalidationState","useSubscription","RelayRuntime","ConnectionHandler","QueryRenderer","LocalQueryRenderer","MutationTypes","RangeOperations","applyOptimisticMutation","commitLocalUpdate","commitMutation","createFragmentContainer","createPaginationContainer","createRefetchContainer","fetchQuery_DEPRECATED","graphql","readInlineData","requestSubscription","useEffect","entryPointReference","getComponent","queries","entryPoints","extraProps","rootModuleID","profilerContext","__log","_toConsumableArray2","LRUCache","getQueryResourceForEnvironment","SuspenseResource","_require2$__internal","getPromiseForActiveRequest","getFragmentIdentifier","getPendingOperationsForFragment","getVariablesFromFragment","handlePotentialSnapshotErrors","isPromise","recycleNodesInto","WEAKMAP_SUPPORTED","WeakMap","CONSTANT_READONLY_EMPTY_ARRAY","freeze","isMissingData","missingLiveResolverFields","filter","Boolean","flat","getFragmentResult","cacheKey","storeEpoch","ClientEdgeQueryResultsCache","Map","_environment","fragmentIdentifier","_this$_cache$get$","_this$_cache$get","_cache","recordQueryResults","existing","existingResults","_suspenseResource","queryResult","temporaryRetain","suspenseResource","_retain","set","_this$_retainCounts$g","retainCount","_retainCounts","_this$_retainCounts$g2","newRetainCount","FragmentResourceImpl","ENABLE_CLIENT_EDGES","_clientEdgeQueryResultsCache","_proto2","read","componentDisplayName","fragmentKey","readWithIdentifier","_fragmentNode$metadat","_fragmentNode$metadat2","_missingLiveResolverF2","_missingLiveResolverF3","getStore","getEpoch","plural","cachedValue","_missingLiveResolverF","promise","isRelayHooks","isPromiseCached","pendingOperations","_throwOrLogErrorsInSnapshot","cached","fragmentSelector","fragmentResult","clientEdgeRequests","hasClientEdges","_snapshot$missingClie","_snapshot$missingClie2","_s$missingClientEdges","_s$missingClientEdges2","missingClientEdges","hasMissingClientEdges","queryResource","queryResults","singularOrPluralForEach","snap","_snap$missingClientEd","_clientEdgeRequests","clientEdgeDestinationID","_this3$_performClient","_performClientEdgeQuery","requestDescriptor","clientEdgePromises","fragmentOwner","parentQueryPromiseResult","_getAndSavePromiseForFragmentRequestInFlight","parentQueryPromiseResultPromise","missingResolverFieldPromises","liveStateID","getLiveResolverPromise","_parentQueryPromiseRe","_clientEdgeRequests2","promises","Promise","all","originalVariables","fetchObservable","prepare","_this4","missingRequiredFields","relayResolverErrors","readSpec","fragmentNodes","fragmentRefs","callback","_this5","renderedSnapshot","_this$checkMissedUpda","checkMissedUpdates","didMissUpdates","currentSnapshot","disposables","idx","latestSnapshot","_updatePluralSnapshot","_this$_clientEdgeQuer","_this$_clientEdgeQuer2","clientEdgeQueryResults","subscribeSpec","fragmentResults","_this6","disposable","currentSnapshots","renderData","currentData","updatedData","updatedCurrentSnapshot","seenRecords","checkMissedUpdatesSpec","_this7","_this8","pendingOperationsResult","networkPromise","then","baseSnapshots","_currentFragmentResul","currentFragmentResult","reportInvalidCachedData","nextSnapshots","nodeName","createFragmentResource","dataResources","getFragmentResourceForEnvironment","newDataResource","implementation","inject","impl","capacity","_capacity","_map","firstKey","done","has","clear","wrapPrepareQueryResource","cb","DEFAULT_FETCH_POLICY","DEFAULT_LIVE_FETCH_POLICY","operationIsLiveQuery","live","getQueryCacheIdentifier","maybeFetchPolicy","maybeRenderPolicy","cacheBreaker","renderPolicy","UNSTABLE_getDefaultRenderPolicy","cacheIdentifier","identifier","getQueryResult","rootFragmentRef","__id","dataID","__fragments","__fragmentOwner","nextID","createCacheEntry","operationAvailability","networkSubscription","onDispose","isLiveQuery","currentValue","currentNetworkSubscription","retention","cacheEntry","processedPayloadsCount","getValue","setValue","val","setNetworkSubscription","permanentRetain","releaseTemporaryRetain","QueryResourceImpl","prepareWithIdentifier","temporaryRetainDisposable","entryWasCached","_fetchAndSaveQuery","observerUnsubscribe","queryAvailability","_getOrCreateCacheEntry","resourceID","TESTS_ONLY__getCacheEntry","_clearCacheEntry","shouldFetch","shouldAllowRender","queryStatus","hasFullQuery","canPartialRender","resolveNetworkPromise","_cacheEntry","_queryResult","observerStart","observerNext","observerError","observerComplete","_cacheEntry2","createQueryResource","getEnvironmentForActor","_retainCount","_retainDisposable","max","_this$_releaseTempora","isServer","releaseQueryTimeout","clearTimeout","_releaseTemporaryRetain","setTimeout","_this$_releaseTempora2","_this$_releaseTempora3","getRetainCount","environmentProvider","entryPoint","entryPointParams","loadingPromise","root","getModuleIfRequired","load","preloadProps","getPreloadProps","preloadedQueries","preloadedEntryPoints","queryPropName","_queries$queryPropNam","environmentProviderOptions","parameters","getEnvironment","networkCacheConfig","__nameForWarning","entryPointPropName","entryPointDescription","nestedEntryPoint","nestedParams","isDisposed","values","innerDispose","_loadingPromise","componentModule","getModuleId","fetchQueryDeduped","PreloadableQueryRegistry","ReplaySubject","getRequestIdentifier","RenderDispatcher","fetchKey","preloadableRequest","_React$__SECRET_INTER3","_React$__SECRET_INTER4","_options$fetchPolicy","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","retainReference","unsubscribeFromNetworkRequest","unsubscribeFromExecution","cancelOnLoadCallback","queryId","didExecuteNetworkSource","executeWithNetworkSource","networkObservable","executeWithSource","executionSubject","returnedObservable","networkError","didMakeNetworkRequest","makeNetworkRequest","observable","subject","ENABLE_LOAD_QUERY_REQUEST_DEDUPING","getNetwork","subjectSubscription","executeDeduped","fetchFn","_fetchQueryDeduped$su","checkAvailabilityAndExecute","concreteRequest","_module","_PreloadableQueryRegi","onLoad","preloadedModule","isReleased","isNetworkRequestCancelled","releaseQuery","cancelNetworkRequest","useTrackLoadQueryInRender","_React$__SECRET_INTER","_React$__SECRET_INTER2","gqlQuery","_createForOfIteratorHelper2","useIsMountedRef","useCallback","initialNullEntryPointReferenceState","_options$TEST_ONLY__i","_options$TEST_ONLY__i2","_options$TEST_ONLY__i3","_options$TEST_ONLY__i4","initialEntryPointReferenceInternal","TEST_ONLY__initialEntryPointData","initialEntryPointParamsInternal","isMountedRef","undisposedEntryPointReferencesRef","Set","_useState","setEntryPointReference","_useState2","setEntryPointParams","disposeEntryPoint","nullEntryPointReference","add","entryPointLoaderCallback","updatedEntryPointReference","maybeHiddenOrFastRefresh","undisposedEntryPointReferences","_step","_iterator","n","undisposedEntryPointReference","_step2","_iterator2","unhandledStateChange","useUnsafeRef_DEPRECATED","subscriptionRef","isFetchingRef","disposeFetch","startFetch","completeFetch","HooksImplementation","useFragmentNode","useStaticFragmentNodeWarning","useDebugValue","useFragment_LEGACY","FragmentResource","isListeningForUpdatesRef","handleDataUpdate","disableStoreUpdates","enableStoreUpdates","getObservableForActiveRequest","isActive","setIsActive","onCompleteOrError","useLazyLoadQueryNode","useMemoOperationDescriptor","UNSTABLE_renderPolicy","useFetchTrackingRef","QueryResource","forceUpdateKey","_useFetchTrackingRef","preparedQueryResult","useIsOperationNodeActive","getPaginationVariables","getValueAtPath","fragmentData","connectionPathInFragmentData","paginationRequest","paginationMetadata","onReset","identifierField","identifierValue","mirroredEnvironment","setMirroredEnvironment","mirroredFragmentIdentifier","setMirroredFragmentIdentifier","isParentQueryActive","_getConnectionState","_pageInfo$END_CURSOR","_pageInfo$START_CURSO","getConnectionState","onComplete","parentVariables","extraVariables","UNSTABLE_extraVariables","baseVariables","paginationVariables","paginationQuery","useMemoVariables","memoVariables","memoCacheConfig","mirroredVariables","setMirroredVariables","defaultCommitMutation","mutation","commitMutationFn","arguments","environmentRef","mutationRef","inFlightMutationsRef","isMutationInFlight","setMutationInFlight","onCompleted","errors","_config$onCompleted","onError","_config$onError","onUnsubscribe","_config$onUnsubscribe","_config$onNext","useLoadMoreFunction","useRefetchableFragmentNode","getPaginationMetadata","useLoadMore","isLoadingMore","setIsLoadingMore","_useLoadMoreFunction","fragmentInput","parentFragmentRef","_getPaginationMetadat","_useRefetchableFragme","_useLoadMore","loadPrevious","hasPrevious","isLoadingPrevious","disposeFetchPrevious","_useLoadMore2","loadNext","hasNext","isLoadingNext","disposeFetchNext","__environment","usePaginationFragment_LEGACY","_require3$__internal","preloadedQuery","useLazyLoadQueryNodeParams","fallbackFetchObservable","ifEmpty","initialNullQueryReferenceState","requestIsLiveQuery","initialQueryReference","initialQueryReferenceInternal","undisposedQueryReferencesRef","queryReference","setQueryReference","previousInitialQueryReference","setPreviousInitialQueryReference","disposeQuery","queryLoaderCallback","mergedOptions","_options$__environmen","updatedQueryReference","undisposedQueryReferences","undisposedQueryReference","useRefetchableFragment_LEGACY","useReducer","_require4","getRefetchMetadata","reducer","action","_action$refetchEnviro","refetchEnvironment","refetchQuery","parentEnvironment","_getRefetchMetadata","refetchableRequest","fragmentRefPathInResponse","_useReducer","refetchState","dispatch","shouldReset","_useQueryLoader","queryRef","process","handleQueryCompleted","maybeError","queryData","_useFragmentNode","providedRefetchVariables","_fragmentSelector$sel","_fragmentSelector$sel2","_fragmentSelector$sel3","_fragmentSelector$sel4","useRefetchFunction","warningContext","dataIDs","disposableRef","stableDataIDs","from","sort","store","invalidationState","lookupInvalidationState","subscribeToInvalidationState","requestSubscriptionFn","actualRequestSubscription","init","MutationHandlers","handle","DeleteRecordHandler","DeleteEdgeHandler","AppendEdgeHandler","PrependEdgeHandler","AppendNodeHandler","PrependNodeHandler","generateClientID","getStableStorageKey","getRelayHandleKey","CONNECTION","NEXT_EDGE_INDEX","buildConnectionEdge","edge","edgeIndex","edgeID","getDataID","connectionEdge","getType","copyFieldsFrom","mergeEdges","sourceEdges","targetEdges","nodeIDs","NODE","getLinkedRecord","nodeID","createEdge","record","edgeType","setLinkedRecord","deleteNode","_ConnectionInterface$5","getLinkedRecords","nextEdges","slice","setLinkedRecords","getConnection","filters","handleKey","getConnectionID","recordID","storageKey","insertEdgeAfter","newEdge","CURSOR","foundCursor","insertEdgeBefore","_ConnectionInterface$4","unshift","update","PAGE_INFO_TYPE","serverConnection","fieldKey","serverPageInfo","clientConnectionID","clientConnectionField","clientConnection","clientPageInfo","_connection","_serverEdges","prevEdges","prevPageInfo","after","before","_nodeIDs","last","startCursor","first","endCursor","serverEdges","CONNECTION_CALLS","find","surrounds","newConfig","isConnectionCall","idOrIds","connections","handleArgs","connectionID","edgeUpdater","nodeUpdater","insertFn","singleServerEdge","_unused","_unused2","serverEdgeList","_loop","serverEdge","serverNode","_step3","serverNodeId","_iterator3","_connection$getLinked","_edge$getLinkedRecord","clientEdge","_serverNodes","singleServerNode","serverNodes","_payload$handleArgs","edgeTypeName","_unused3","_unused4","_step4","serverNodeList","_iterator4","_loop2","_step5","_iterator5","_connection$getLinked2","_edge$getLinkedRecord2","RelayDefaultHandlerProvider","RelayDeclarativeMutationConfig","RelayNetwork","RelayObservable","RelayQueryResponseCache","fetchQueryInternal","GraphQLTag","generateUniqueClientID","isClientID","RelayConcreteVariables","RelayModernEnvironment","RelayModernOperationDescriptor","RelayModernRecord","RelayModernSelector","RelayModernStore","RelayOperationTracker","RelayRecordSource","RelayStoreUtils","ResolverFragments","ViewerPattern","createPayloadFor3DField","RelayConcreteNode","RelayDefaultHandleKey","RelayError","RelayProfiler","RelayReplaySubject","stableCopy","withProvidedVariables","Environment","Network","QueryResponseCache","RecordSource","Record","Store","areEqualSelectors","createNormalizationSelector","createReaderSelector","createRequestDescriptor","getArgumentValues","getDataIDsFromFragment","getNode","getInlineDataFragment","getModuleComponentKey","getModuleOperationKey","getPaginationFragment","getPluralSelector","getRefetchableFragment","getSelectorsFromObject","getSingularSelector","getStorageKey","getVariablesFromPluralFragment","getVariablesFromSingularFragment","isFragment","isInlineDataFragment","isRequest","DefaultHandlerProvider","VIEWER_ID","VIEWER_TYPE","DEFAULT_HANDLE_KEY","FRAGMENTS_KEY","FRAGMENT_OWNER_KEY","ID_KEY","REF_KEY","REFS_KEY","ROOT_ID","ROOT_TYPE","TYPENAME_KEY","OperationTracker","getOperationVariables","INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE","assertInternalActorIdentifier","actorIdentifier","getActorIdentifier","actorID","getDefaultActorIdentifier","ACTOR_IDENTIFIER_FIELD_NAME","getActorIdentifierFromPayload","RANGE_ADD","RANGE_DELETE","NODE_DELETE","APPEND","PREPEND","getRootField","selections","convert","configs","optimisticUpdater","configOptimisticUpdates","configUpdates","nodeDeleteResult","deletedIDFieldName","rootField","deleteID","nodeDelete","rangeAddResult","parentID","connectionInfo","edgeName","parent","info","rangeBehavior","rangeAdd","rangeDeleteResult","connectionKeys","pathToConnection","deleteIDs","deletedIDField","eachField","idObject","recordProxy","rangeDelete","eachOptimisticUpdater","eachUpdater","RelayRecordProxy","mutator","_dataID","_mutator","_source","copyFields","isValidLeafValue","setValue__UNSAFE","linkedID","getLinkedRecordID","setLinkedRecordID","getOrCreateLinkedRecord","typeName","linkedRecord","_this$_source$get","clientID","linkedIDs","getLinkedRecordIDs","records","setLinkedRecordIDs","invalidateRecord","markIDForInvalidation","every","EXISTENT","RelayRecordSourceMutator","base","__sources","_base","_sink","unstable_getRawRecordWithChanges","baseRecord","sinkRecord","_getSinkRecord","sourceID","sinkID","sinkSource","baseSource","copyFieldsFromRecord","getStatus","NONEXISTENT","_readUpdatableFragment","readUpdatableFragment","_readUpdatableQuery","readUpdatableQuery","RelayRecordSourceProxy","handlerProvider","missingFieldHandlers","__mutator","_handlerProvider","_proxies","_getDataID","_invalidatedStore","_idsMarkedForInvalidation","_missingFieldHandlers","publishSource","fieldPayloads","getRecordIDs","sourceRecord","fieldPayload","handler","getRoot","invalidateStore","isStoreMarkedForInvalidation","getIDsMarkedForInvalidation","fragmentReference","RelayRecordSourceSelectorProxy","recordSource","readSelector","__recordSource","_readSelector","getOperationRoot","_getRootField","fieldName","field","selection","getPluralRootField","operationKind","optimisticResponse","applyMutation","commitUpdate","uploadables","_RelayDeclarativeMuta","executeMutation","item","apply","ACTOR_CHANGE","ALIASED_FRAGMENT_SPREAD","ALIASED_INLINE_FRAGMENT_SPREAD","CLIENT_EDGE_TO_CLIENT_OBJECT","CLIENT_EDGE_TO_SERVER_OBJECT","CLIENT_EXTENSION","CONDITION","DEFER","FLIGHT_FIELD","FRAGMENT_SPREAD","INLINE_DATA_FRAGMENT_SPREAD","INLINE_FRAGMENT","LINKED_FIELD","MODULE_IMPORT","RELAY_LIVE_RESOLVER","RELAY_RESOLVER","REQUIRED_FIELD","SCALAR_FIELD","STREAM","nonUpdatableKeys","updateProxyFromSelections","mutableUpdatableProxy","updatableProxyRootRecord","recordSourceProxy","_selection$alias3","_selection$alias","alias","createGetterForPluralLinkedField","createSetterForPluralLinkedField","_selection$alias2","createGetterForSingularLinkedField","createSetterForSingularLinkedField","scalarFieldName","_selection$args","newVariables","getScalarUsingMissingFieldHandlers","includes","newValue","_selection$args2","_selection$args3","recordProxies","newValueRecord","_selection$args4","_selection$args5","linkedRecords","newIds","newId","getPluralLinkedRecordUsingMissingFieldHandlers","updatableProxy","_selection$args6","getLinkedRecordUsingMissingFieldHandlers","createUpdatableProxy","proxy","updatableFragment","fragmentRoot","updatableData","getUpdatableQuery","updatableQuery","CLIENT_COMPONENT","LINKED_HANDLE","SCALAR_HANDLE","TYPE_DISCRIMINATOR","convertFetch","fn","logRequestInfo","observeFetch","operationVariables","providedVariables","pollInterval","poll","hostReportError","_isUncaughtThrownError","onUnhandledError","obj","isObservable","fromObservable","fromPromise","fromValue","sub","_error2","error2","both","alternate","hasValue","closed","withClosed","doCleanup","_error3","isUncaughtThrownError","_subscribe","mapValue","subscriptions","_sub","splice","timeout","toPromise","_this9","reject","resolved","ttl","_responses","_size","_ttl","queryID","getCacheKey","fetchTime","extensions","cacheTimestamp","generateID","env","network","networkRequestId","logObserver","FRAGMENT","REQUEST","isUpdatableQuery","UPDATABLE_QUERY","INLINE_DATA_FRAGMENT","_fragment$metadata","_fragment$metadata2","strings","preloadableQueryRegistry","_preloadableQueries","_callbacks","callbacks","_this$_callbacks$get","getNetworkObservable","queryNode","readData","requestCachesByEnvironment","getRequestCache","cachedRequest","subjectForInFlightStatus","cachedReq","getCachedRequest","cachedRequestInstance","getObserverCount","getObservableForCachedRequest","getActiveStatusObservableForCachedRequest","isRequestActive","USE_REACT_CACHE","resolveOnNext","intern","PREFIX","localID","STRING_INTERN_LEVEL","MAX_DATA_ID_LENGTH","generateClientObjectClientID","typename","localId","getOperation","cloneRelayHandleSourceField","cloneRelayScalarHandleSourceField","getLocalVariables","UNKNOWN","RelayStoreReactFlightUtils","TYPE_SCHEMA_TYPE","generateTypeID","DataChecker","getSourceForActor","getTargetForActor","defaultActorIdentifier","handlers","operationLoader","shouldProcessClientComponents","_getSourceForActor","_getTargetForActor","_mutatorRecordSourceProxyCache","_this$_getMutatorAndR","_getMutatorAndRecordProxyForActor","_mostRecentlyInvalidatedAt","_handlers","_operationLoader","_recordSourceProxy","_recordWasMissing","_variables","_shouldProcessClientComponents","tuple","target","_assignClientAbstractTypes","_traverse","mostRecentlyInvalidatedAt","_getVariableValue","_handleMissing","_handleMissingScalarField","_handleMissingLinkField","_handleMissingPluralLinkField","invalidatedAt","getInvalidationEpoch","_traverseSelections","_checkScalar","_checkPluralLink","_checkLink","_checkActorChange","linkedField","passingValue","_abstractKey","abstractKey","_recordType","_typeID","_implementsInterface","handleField","_handleField","_checkModuleImport","prevVariables","argumentDefinitions","recordWasMissing","recordType","typeID","ENABLE_REACT_FLIGHT_COMPONENT_FIELD","_checkFlightField","_checkResolver","backingField","moduleImport","operationKey","documentName","operationReference","normalizationRootNode","fieldValue","getActorLinkedRecordID","prevSource","prevMutator","prevRecordSourceProxy","_this$_getMutatorAndR2","REACT_FLIGHT_TREE_STORAGE_KEY","reachableExecutableDefinitions","REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY","definition","clientAbstractTypes","_i","_Object$keys","abstractType","concreteType","withDuration","RelayResponseNormalizer","Executor","getPublishQueue","isClientPayload","operationExecutions","operationTracker","optimisticConfig","_reactFlightPayloadDeserializer","reactFlightPayloadDeserializer","reactFlightServerErrorHandler","scheduler","treatMissingFieldsAsNull","log","_withDuration","duration","_log","executeId","_executeId","operationName","_operation","_actorIdentifier","_treatMissingFieldsAsNull","_incrementalPayloadsPending","_incrementalResults","_nextSubscriptionId","_operationExecutions","_operationTracker","_operationUpdateEpochs","_optimisticUpdates","_pendingModulePayloadsCount","_getPublishQueue","_scheduler","_state","_getStore","_subscriptions","_updater","_isClientPayload","_reactFlightServerErrorHandler","_isSubscriptionOperation","_retainDisposables","_seenActors","_completeFns","_complete","_next","_this$_operation$requ","_start","_processOptimisticResponse","cancel","optimisticUpdates","_getPublishQueueAndSaveActor","revertUpdate","_runPublishQueue","_asyncStoreUpdateDisposable","_completeOperationTracker","_disposeRetainedData","_updateActiveState","activeState","_schedule","task","cancellationToken","schedule","_id","_handleNext","_maybeCompleteSubscriptionOperationTracking","_handleErrorResponse","responses","results","messages","_ref3","stack","responseWithData","_handleOptimisticResponses","_response$extensions","responsePart","_responsePart$extensi","isOptimistic","responsesWithData","x","_x$extensions","is_final","_partitionGraphQLResp","nonIncrementalResponses","incrementalResponses","label","partitionGraphQLResponses","hasNonIncrementalResponses","payloadFollowups","_processResponses","_processPayloadFollowups","_payloadFollowups","_processIncrementalResponses","__relay_subscription_root_id","updatedOwners","_retainData","_updateOperationTracker","normalizeResponse","_deserializeReactFlightPayloadWithLogging","validateOptimisticResponsePayload","_processOptimisticFollowups","incrementalPlaceholders","followupPayloads","isFinal","applyUpdate","followupPayload","_expectOperationLoader","_processAsyncOptimisticModuleImport","moduleImportOptimisticUpdates","_processOptimisticModuleImport","_normalizeFollowupPayload","normalizationNode","moduleImportPayload","modulePayload","_this$_optimisticUpda","payloadPart","relayPayload","commitPayload","payloads","_followupPayload$acto","prevActorIdentifier","_processFollowupPayload","incrementalPlaceholder","_incrementalPlacehold","_processIncrementalPlaceholder","relayPayloads","placeholder","_processDeferResponse","_this10","_processFollowupPayloadWithNormalizationNode","decrementPendingCount","loadedNode","publishModuleImportPayload","batchAsyncModuleUpdatesFN","BATCH_ASYNC_MODULE_UPDATES_FN","shouldScheduleAsyncStoreUpdate","_handleFollowupPayload","_scheduleAsyncStoreUpdate","_error4","_relayPayload$fieldPa","pathKey","resultForLabel","resultForPath","pendingResponses","nextParentRecord","nextParentPayloads","parentRecord","parentPayloads","fieldID","previousParentEntry","handlePayloads","dedupePayload","_JSON$stringify","stableStringify","_this11","incrementalResponse","_pathKey","_resultForPath","_placeholder","_processStreamResponse","_placeholder$actorIde","parentEntry","_response$extensions2","handleFieldsRelayPayload","_this$_normalizeStrea","_normalizeStreamItem","itemID","itemIndex","currentParentRecord","currentItems","currentItem","nextItems","normalizationPath","_field$alias","_field$concreteType","_this$_getDataID","responseKey","finalPathEntry","parseInt","scheduleFn","completeFn","_this12","_getActorsToVisit","run","_response$extensions3","normalize","currentVariables","nextVariables","nextArgs","def","_nextArgs$def$name","defaultValue","argumentVariables","varName","wrapNetworkWithLogObserver","registerEnvironmentWithDevTools","defaultGetDataID","defaultRequiredFieldLogger","OperationExecutor","RelayPublishQueue","_config$log","_config$requiredField","_config$UNSTABLE_defa","_config$getDataID","_config$missingFieldH","_config$handlerProvid","_config$scheduler","_config$isServer","_config$operationTrac","configName","requiredFieldLogger","_defaultRenderPolicy","UNSTABLE_defaultRenderPolicy","ENABLE_PARTIAL_RENDERING_DEFAULT","_network","_publishQueue","_store","_isServer","__setNet","newNet","getOperationTracker","getScheduler","requestIdentifier","optimisticUpdate","_scheduleUpdates","replaceUpdate","newUpdate","_execute","createSource","operationHasClientAbstractTypes","_checkSelectorAndHandleMissingFields","getSource","commitSource","executeSubscription","_ref4","toJSON","_this$configName","_ref5","publishQueue","executor","RelayModernFragmentSpecResolver","_stale","_callback","_context","_data","_fragments","_props","_resolvers","_rootIsQueryRenderer","disposeCallback","prevItem","nextItem","prop","_nextItem","ownedSelectors","ownedSelector","SelectorListResolver","_onChange","setSelector","SelectorResolver","subscribeOnConstruction","_isMissingData","_missingRequiredFields","_relayResolverErrors","_selector","_subscription","_pendingOperationsRes","_subscribeOnConstruction","_proto3","isSuspenseSentinel","ACTOR_IDENTIFIER_KEY","INVALIDATED_AT_KEY","RELAY_RESOLVER_VALUE_KEY","maybeLink","link","links","record1","record2","prevRecord","nextRecord","updated","setActorLinkedRecordID","getResolverLinkedRecordID","getResolverLinkedRecordIDs","resolverValue","CLIENT_EDGE_TRAVERSAL_PATH","IS_WITHIN_UNMATCHED_TYPE_REFINEMENT","mixedOwner","isWithinUnmatchedTypeRefinement","mixedClientEdgeTraversalPath","clientEdgeTraversalPath","items","ids","getDataIDs","itemVariables","areEqualSingularSelectors","thisSelector","thatSelector","object","_regeneratorRuntime","resolveImmediate","RelayOptimisticRecordSource","RelayReader","RelayReferenceMarker","RelayStoreSubscriptions","RecordResolverCache","_options$gcReleaseBuf","_options$gcScheduler","_options$getDataID","_options$log","_options$operationLoa","_gcRun","_gcScheduler","_gcStep","_currentWriteEpoch","_gcHoldCounter","_gcReleaseBufferSize","gcReleaseBufferSize","gcScheduler","_globalInvalidationEpoch","_invalidationSubscriptions","_invalidatedRecordIDs","_queryCacheExpirationTime","queryCacheExpirationTime","_optimisticSource","_recordSource","_releaseBuffer","_roots","_shouldScheduleGC","_resolverCache","_getMutableRecordSource","_storeSubscriptions","_updatedRecordIDs","rootRecord","initializeRecordSource","_this$_optimisticSour","_this$_optimisticSour2","_options$handlers","_options$getSourceFor","_options$getTargetFor","_options$defaultActor","globalInvalidationEpoch","rootEntry","operationLastWrittenAt","epoch","operationFetchTime","getAvailabilityStatus","refCount","scheduleGC","shift","notify","sourceOperation","ENABLE_RELAY_RESOLVERS","invalidateDataIDs","updateSubscriptions","_updateInvalidationSubscription","updatedRecordIDs","invalidatedRecordIDs","temporaryRootEntry","publish","idsMarkedForInvalidation","currentWriteEpoch","targetRecord","REACT_FLIGHT_TYPE_NAME","updateTargetFromSource","optimistic","holdGC","__getUpdatedRecordIDs","invalidations","_RelayModernRecord$ge","checkInvalidationState","prevInvalidationState","currentInvalidations","prevInvalidations","invalidatedStore","snapshotSubscriptions","restore","restoreSubscriptions","_collect","__gc","gcRun","mark","startEpoch","references","storeIDs","wrap","abrupt","t0","finish","remove","stop","_ownersToPendingOperations","_pendingOperationsToOwners","_ownersToPendingPromise","pendingOperation","affectedOwners","pendingOperationIdentifier","newlyAffectedOwnersIdentifier","ownerIdentifier","pendingOperationsAffectingOwner","ownersAffectedByPendingOperation","_ownerIdentifier","_resolveOwnerResolvers","affectedOwnersIdentifier","completedOwnersIdentifier","updatedOwnersIdentifier","_ownerIdentifier2","_ownerIdentifier3","promiseEntry","getPendingOperationsAffectingOwner","pendingOperationsForOwner","cachedPromiseEntry","UNPUBLISH_RECORD_SENTINEL","__UNPUBLISH_RECORD_SENTINEL","merged","getOptimisticRecordIDs","_global$ErrorUtils$ap","_global$ErrorUtils","_global","window","applyWithGuard","ErrorUtils","_hasStoreSnapshot","_pendingBackupRebase","_pendingData","_pendingOptimisticUpdates","_appliedOptimisticUpdates","_gcHold","revertAll","runWillClearGcHold","_commitData","_applyUpdates","_publishSourceFromPayload","pendingPayload","lookupSelector","payloadInvalidatedStore","processUpdate","storeUpdater","selectorData","recordSourceSelectorProxy","getReactFlightClientResponse","FRAGMENT_PROP_NAME_KEY","MODULE_COMPONENT_KEY","NoopResolverCache","_require6","RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL","withResolverContext","resolverCache","_selector$clientEdgeT","_clientEdgeTraversalPath","_missingClientEdges","_missingLiveResolverFields","_isWithinUnmatchedTypeRefinement","_owner","_seenRecords","_resolverErrors","_fragmentName","_updatedDataIDs","_this$_selector","isDataExpectedToBePresent","implementsInterface","notifyUpdatedSubscribers","_markDataAsMissing","top","readerClientEdge","_maybeReportUnexpectedNull","fieldPath","_record","_this$_missingRequire","fields","_readRequiredField","_readScalar","_readPluralLink","_readLink","_readInlineFragment","_readResolverField","_createFragmentPointer","_createAliasedFragmentSpread","_fieldValue","_readModuleImport","_createInlineDataOrResolverFragmentPointer","alreadyMissingClientEdges","_hasExpectedData","_readFlightField","_readActorChange","_readClientEdge","parentRecordID","getDataForResolverFragment","singularReaderSelector","_this$_resolverCache$","readFromCacheOrEvaluate","_getResolverValue","getResolverValue","resolverResult","resolverError","_getResolverValue2","seenRecord","cachedSnapshot","suspenseID","updatedDataIDs","_addMissingRequiredFields","missing","missingResolverField","_backingField$alias","applicationName","backingFieldData","clientEdgeResolverResponse","validClientEdgeResolverResponse","extractIdFromResponse","assertValidClientEdgeResolverResponse","normalizationInfo","ensureClientRecord","getStoreIDsForPluralClientEdgeResolver","_readLinkedIds","_getStoreIDAndTravers","getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver","storeID","traversalPathSegment","_field$alias2","reactFlightClientResponseRecordID","reactFlightClientResponseRecord","clientResponse","_field$alias3","_field$alias4","_field$alias5","externalRef","fragmentSpread","__fragmentRef","__viewer","_field$alias6","linkedArray","nextIndex","componentKey","fragmentPropName","namedFragmentSpread","fieldData","inlineFragment","parentIsMissingData","parentIsWithinUnmatchedTypeRefinement","fragmentPointers","fragmentSpreadOrFragment","inlineData","parentFragmentName","additional","typeRecord","ownerName","resolverFunction","resolverModule","resolverFunctionArgs","_field$path","individualResponse","errorMessage","RelayRecordState","_records","_step$value","getOutputTypeRecordIDs","_operationName","_references","_traverseLink","_traversePluralLink","_typeName","_typeName2","_traverseModuleImport","_traverseFlightField","_traverseResolverField","_traverseClientEdgeToClientObject","resolverRecord","isOutputType","outputTypeRecordIDs","_dataID2","_dataID3","refineToReactFlightPayloadData","_require7","getHandleStorageKey","_require8","_getDataId","_handleFieldPayloads","_incrementalPlaceholders","_isClientExtension","_isUnmatchedAbstractType","_followupPayloads","_path","_getRecordType","_normalizeField","_typeRecord","_normalizeModuleImport","_normalizeDefer","_normalizeStream","isClientExtension","_normalizeFlightField","_normalizeActorChange","_normalizeResolver","defer","stream","componentReference","componentModuleProvider","operationModuleProvider","_normalizePluralLink","_normalizeLink","reactFlightPayload","reactFlightID","reactFlightClientResponse","__typename","_field$concreteType2","_field$concreteType3","_validateRecordType","_field$concreteType4","_validateConflictingFieldsWithIdenticalId","_validateConflictingLinkedFieldsWithIdenticalId","prevID","hasOverlappingIDs","backup","stale","hasUpdatedRecords","_updateSubscription","hasOverlappingUpdates","nextSnapshot","ENABLE_NOTIFY_SUBSCRIPTION","VARIABLE","LITERAL","OBJECT_VALUE","LIST_VALUE","getArgumentValue","getStableVariableValue","variableName","_value","formatStorageKey","argValues","argName","RELAY_RESOLVER_INVALIDATION_KEY","RELAY_RESOLVER_SNAPSHOT_KEY","RELAY_RESOLVER_ERROR_KEY","RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS","dynamicKey","handleName","filterArgs","_field$fragment2","_field$fragment","getArguments","emptySet","evaluate","_evaluate","addDependencyEdge","to","getRecordSource","_resolverIDToRecordIDs","_recordIDToResolverIDs","_getRecordSource","_isInvalid","_linkedID","evaluationResult","currentRecord","_evaluationResult$sna","fragmentStorageKey","resolverID","seenRecordIds","seenRecordID","answer","visited","recordsToVisit","_this$_recordIDToReso","_this$_resolverIDToRe","anotherRecordID","_markInvalidatedResolverRecord","originalInputs","readerSelector","latestValues","contextStack","readFragment","_context$getDataForRe","isTypeID","sourceField","firstReact","react","event","LIVE_RESOLVER_SUSPENSE_SENTINEL","__LIVE_RESOLVER_SUSPENSE_SENTINEL","suspenseSentinel","maybeOutputTypeRecordIDs","ITERATOR_KEY","Symbol","iterator","_fragmentRef$FRAGMENT","inlineDataFragment","_responses$","_responses$$extension","_responses$extensions","LOCAL_ARGUMENT","OPERATION","ROOT_ARGUMENT","SPLIT_OPERATION","createError","messageFormat","_len","messageParams","_key","taalOpcodes","_len2","_key2","createWarning","_len3","_key3","ENABLE_VARIABLE_CONNECTION_KEY","ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION","ENABLE_FRIENDLY_QUERY_NAME_GQL_URL","ENABLE_DO_NOT_WRAP_LIVE_QUERY","USE_REACT_CACHE_LEGACY_TIMEOUTS","profileHandlersByName","defaultProfiler","profile","stopHandlers","stopHandler","attachProfileHandler","detachProfileHandler","array","element","removeFromArray","_observable","_sinks","events","_events","internTable","digits","initDigitTable","INTERN_PREFIX","ESCAPE_PREFIX","str","limit","escape","internedString","getOwnPropertyNames","property","isFrozen","isEmptyObject","fragmentOwnerIdentifier","sel","_ids","refetchMetadata","_objectSpread4","backwardMetadata","backward","forwardMetadata","forward","_paginationVariables","_pendingOperations$ma","_pendingOperations","_result$pendingOperat","_result$promise","pendingOperationName","op","promiseDisplayName","fragmentPathInResult","requestID","_missingRequiredField","valueA","valueB","hasWeakSetDefined","WeakSet","hasWeakMapDefined","canRecycle","prevArray","nextArray","reduce","wasEqual","nextValue","prevObject","nextObject","nextKeys","devToolsHook","__RELAY_DEVTOOLS_HOOK__","registerEnvironment","resolvedPromise","throwNext","stable","_window","_window$performance","isPerformanceNowAvailable","performance","currentTimestamp","startTime","debugCache","userSuppliedVariables","providerFunction","providerResult","cachedResult","tests_only_resetDebugCache","arr","len","arr2","__esModule","arrayLikeToArray","self","ReferenceError","unsupportedIterableToArray","o","allowArrayLike","it","F","_e","TypeError","normalCompletion","didErr","step","_e2","toPropertyKey","enumerable","configurable","writable","_extends","bind","setPrototypeOf","subClass","superClass","iter","ownKeys","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","excluded","sourceKeys","_typeof","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","__proto__","awrap","async","reverse","skipTempReset","charAt","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","thrown","delegateYield","_setPrototypeOf","arrayWithoutHoles","iterableToArray","nonIterableSpread","hint","prim","toPrimitive","minLen","test"],"sourceRoot":""}