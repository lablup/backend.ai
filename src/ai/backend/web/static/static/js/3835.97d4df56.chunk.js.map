{"version":3,"file":"static/js/3835.97d4df56.chunk.js","mappings":"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","sources":["components/BAIProgressWithLabel.tsx","components/ComputeSessionNodeItems/ContainerLogModal.tsx","hooks/useMemoWithPrevious.tsx","components/ComputeSessionNodeItems/EditableSessionName.tsx","components/ComputeSessionNodeItems/ContainerCommitModal.tsx","components/ComputeSessionNodeItems/TerminateSessionModal.tsx","components/ComputeSessionNodeItems/SessionActionButtons.tsx","hooks/useBackendAIAppLauncher.tsx","components/ComputeSessionNodeItems/SessionReservation.tsx","components/ComputeSessionNodeItems/SessionStatusTag.tsx","components/ComputeSessionNodeItems/SessionTypeTag.tsx","components/ComputeSessionNodeItems/__generated__/ContainerCommitModalFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/ContainerLogModalFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/EditableSessionNameFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/EditableSessionNameMutation.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionActionButtonsFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionReservationFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionStatusTagFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionTypeTagFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/TerminateSessionModalFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/TerminateSessionModalRefetchQuery.graphql.ts","components/SessionDetailContent.tsx","components/SessionDetailDrawer.tsx","components/SessionUsageMonitor.tsx","components/__generated__/SessionDetailContentLegacyQuery.graphql.ts","components/__generated__/SessionDetailContentQuery.graphql.ts","components/__generated__/SessionUsageMonitorFragment.graphql.ts","helper/csv-util.ts","hooks/usePainKiller.tsx"],"sourcesContent":["import Flex from './Flex';\nimport { ProgressProps, Typography, theme } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\nexport interface BAIProgressWithLabelProps\n  extends Omit<ProgressProps, 'width' | 'size'> {\n  title?: React.ReactNode;\n  valueLabel?: React.ReactNode;\n  percent?: number;\n  width?: React.CSSProperties['width'];\n  strokeColor?: string;\n  labelStyle?: React.CSSProperties;\n  progressStyle?: React.CSSProperties;\n  size?: 'small' | 'middle' | 'large';\n}\nconst BAIProgressWithLabel: React.FC<BAIProgressWithLabelProps> = ({\n  title,\n  valueLabel,\n  percent,\n  width,\n  strokeColor,\n  labelStyle,\n  progressStyle,\n  size = 'small',\n}) => {\n  const { token } = theme.useToken();\n\n  const fontSize =\n    size === 'small'\n      ? token.fontSizeSM\n      : size === 'middle'\n        ? token.fontSize\n        : token.fontSizeLG;\n  return (\n    <Flex\n      style={{\n        padding: 1,\n        border: `1px solid ${token.colorBorder}`,\n        borderRadius: 3,\n        backgroundColor: token.colorBgContainerDisabled,\n        ...(_.isNumber(width) || _.isString(width)\n          ? { width: width }\n          : { flex: 1 }),\n        ...progressStyle,\n      }}\n      direction=\"column\"\n      align=\"stretch\"\n    >\n      <Flex\n        style={{\n          height: '100%',\n          width: `${!percent || _.isNaN(percent) ? 0 : _.min([percent, 100])}%`,\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          backgroundColor: strokeColor ?? token.colorSuccess,\n          opacity: 0.7,\n          zIndex: 0,\n          overflow: 'hidden',\n        }}\n      ></Flex>\n      <Flex direction=\"row\" justify=\"between\">\n        <Typography.Text style={{ fontSize, ...labelStyle }}>\n          {title}\n        </Typography.Text>\n        <Typography.Text\n          style={{\n            fontSize,\n            color:\n              _.isNaN(percent) || _.isUndefined(percent)\n                ? token.colorTextDisabled\n                : undefined,\n            ...labelStyle,\n          }}\n        >\n          {valueLabel}\n        </Typography.Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default BAIProgressWithLabel;\n","import { downloadBlob } from '../../helper/csv-util';\nimport { useSuspendedBackendaiClient } from '../../hooks';\nimport { useCurrentUserRole } from '../../hooks/backendai';\nimport { useTanQuery } from '../../hooks/reactQueryAlias';\nimport { useMemoWithPrevious } from '../../hooks/useMemoWithPrevious';\nimport BAIModal, { BAIModalProps } from '../BAIModal';\nimport BAISelect from '../BAISelect';\nimport Flex from '../Flex';\nimport { ContainerLogModalFragment$key } from './__generated__/ContainerLogModalFragment.graphql';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { LazyLog, ScrollFollow } from '@melloware/react-logviewer';\nimport { Button, Divider, Grid, theme, Tooltip, Typography } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { DownloadIcon } from 'lucide-react';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ContainerLogModalProps extends BAIModalProps {\n  sessionFrgmt: ContainerLogModalFragment$key | null;\n}\n\nconst ContainerLogModal: React.FC<ContainerLogModalProps> = ({\n  sessionFrgmt,\n  ...modalProps\n}) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const userRole = useCurrentUserRole();\n\n  const session = useFragment(\n    graphql`\n      fragment ContainerLogModalFragment on ComputeSessionNode {\n        id\n        row_id @required(action: NONE)\n        name\n        status\n        access_key\n        kernel_nodes {\n          edges {\n            node {\n              id\n              row_id\n              container_id\n              cluster_idx\n              cluster_role\n            }\n          }\n        }\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  const kernelNodes = session?.kernel_nodes?.edges?.map((e) => e?.node) || [];\n  const [selectedKernelId, setSelectedKernelId] = useState(\n    _.find(kernelNodes, (e) => e?.cluster_role === 'main')?.row_id ||\n      kernelNodes[0]?.row_id,\n  );\n\n  useEffect(() => {\n    if (modalProps.open === false) {\n      setSelectedKernelId(undefined);\n    }\n  }, [modalProps.open]);\n\n  // Currently we can only fetch full logs\n  // const [logSize, setLogSize] = useState<100|'full'>('full');\n  const {\n    data: logs,\n    refetch,\n    isPending,\n    isRefetching,\n    dataUpdatedAt,\n  } = useTanQuery<string>({\n    queryKey: [\n      'containerLog',\n      session?.row_id,\n      session?.access_key,\n      selectedKernelId,\n      modalProps.open,\n    ],\n    queryFn: async () => {\n      if (\n        !modalProps.open ||\n        !session?.row_id ||\n        !session?.access_key ||\n        !selectedKernelId\n      ) {\n        return '';\n      }\n      return await baiClient\n        .get_logs(session?.row_id, session?.access_key, selectedKernelId, 15000)\n        .then((req: any) => req.result.logs);\n    },\n    staleTime: 5000,\n  });\n\n  // let queryParams: Array<string> = [];\n  // if (session?.access_key != null) {\n  //   queryParams.push(`owner_access_key=${session.access_key}`);\n  // }\n  // if (baiClient.supports('per-kernel-logs') && selectedKernelId !== null) {\n  //   queryParams.push(`kernel_id=${selectedKernelId}`);\n  // }\n  // let queryString = `/session/${session?.row_id}/logs`;\n  // if (queryParams.length > 0) {\n  //   queryString += `?${queryParams.join('&')}`;\n  // }\n  // // const url = `${baiClient._endpoint}${queryString}`\n\n  // const signed = baiClient.newSignedRequest('GET', queryString, null);\n  // console.log(signed)\n  // console.log(signed.uri);\n\n  const [lastLineNumbers, { resetPrevious: resetPreviousLineNumber }] =\n    useMemoWithPrevious(() => logs?.split('\\n').length || 0, [logs]);\n\n  const { md } = Grid.useBreakpoint();\n  const { t } = useTranslation();\n\n  return (\n    <BAIModal\n      title={\n        <Flex style={{ maxWidth: '100%' }} gap={'sm'}>\n          <Typography.Title level={4} style={{ margin: 0, flexShrink: 0 }}>\n            Logs\n          </Typography.Title>\n          {session ? (\n            <>\n              <Typography.Text style={{ fontWeight: 'normal' }} ellipsis>\n                {session?.name}\n              </Typography.Text>\n              <Typography.Text\n                style={{ fontWeight: 'normal', fontFamily: 'monospace' }}\n                copyable={{\n                  text: session?.row_id,\n                  tooltips: t('button.CopySomething', {\n                    name: t('session.SessionId'),\n                  }),\n                }}\n              >\n                ({md ? session?.row_id : session?.row_id.split('-')?.[0]})\n              </Typography.Text>\n            </>\n          ) : null}\n        </Flex>\n      }\n      width={'100%'}\n      styles={{\n        header: {\n          width: '100%',\n        },\n        body: {\n          height: 'calc(100vh - 100px)',\n          maxHeight: 'calc(100vh - 100px)',\n        },\n      }}\n      {...modalProps}\n      footer={null}\n      destroyOnClose\n    >\n      <Flex\n        direction=\"column\"\n        align=\"start\"\n        style={{ height: '100%' }}\n        gap={'sm'}\n      >\n        <Flex gap=\"sm\" wrap=\"wrap\">\n          Kernel Role\n          <BAISelect\n            value={selectedKernelId}\n            onChange={(value) => {\n              setSelectedKernelId(value);\n              resetPreviousLineNumber();\n            }}\n            autoSelectOption\n            options={_.chain(session?.kernel_nodes?.edges)\n              .sortBy((e) => `${e?.node?.cluster_role} ${e?.node?.cluster_idx}`)\n              .map((e) => {\n                return {\n                  label: (\n                    <>\n                      {e?.node?.cluster_role}\n                      {e?.node?.cluster_role !== 'main'\n                        ? e?.node?.cluster_idx\n                        : ''}\n                      {userRole === 'admin' || userRole === 'superadmin' ? (\n                        <Typography.Text\n                          style={{\n                            fontFamily: 'monospace',\n                            fontSize: token.fontSizeSM,\n                          }}\n                          type=\"secondary\"\n                        >\n                          ({(e?.node?.row_id || '').substring(0, 5)})\n                        </Typography.Text>\n                      ) : null}\n                    </>\n                  ),\n                  value: e?.node?.row_id,\n                };\n              })\n              .value()}\n          />\n          <Divider type=\"vertical\" />\n          {/* Request logs\n          <Select\n            value={logSize}\n            options={[\n              {\n                label: 'last 100 lines',\n                value: 100,\n              },\n              {\n                label: 'Full logs',\n                value: 'full',\n              },\n            ]}\n            onChange={(value) => { \n              setLogSize(value);\n              if(value!=='full'){\n                resetPreviousLineNumber();\n              }\n              refetch();\n            }}\n          ></Select> */}\n          <Tooltip title={t('button.Download')}>\n            <Button\n              size=\"middle\"\n              icon={<DownloadIcon />}\n              disabled={isPending || isRefetching}\n              onClick={() => {\n                const blob = new Blob([logs || ''], { type: 'text/plain' });\n                downloadBlob(\n                  blob,\n                  `${session?.name || 'session'}-logs-${selectedKernelId}-${new Date().toISOString()}.txt`,\n                );\n              }}\n            />\n          </Tooltip>\n          <Tooltip title={t('button.Refresh')}>\n            <Button\n              size=\"middle\"\n              loading={isPending || isRefetching}\n              icon={<ReloadOutlined />}\n              onClick={() => refetch()}\n            />\n          </Tooltip>\n        </Flex>\n\n        <div\n          style={{\n            height: 'calc(100% - 50px)',\n            alignSelf: 'stretch',\n\n            border: `1px solid ${token.colorBorder}`,\n            overflow: 'hidden',\n          }}\n        >\n          <ScrollFollow\n            key={dataUpdatedAt} // to scroll to bottom on new data\n            startFollowing={true}\n            render={({ follow, onScroll }) => (\n              <LazyLog\n                caseInsensitive\n                enableSearch\n                enableSearchNavigation\n                selectableLines\n                text={logs || ''}\n                highlight={lastLineNumbers.previous}\n                extraLines={1}\n                // url={signed.uri}\n                // fetchOptions={\n                //   {\n                //     headers: signed.headers\n                //   }\n                // }\n                // stream\n                follow={follow}\n                onScroll={onScroll}\n              />\n            )}\n          />\n        </div>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ContainerLogModal;\n","import { DependencyList, useEffect, useMemo, useRef, useState } from 'react';\n\nexport const useMemoWithPrevious = <T,>(\n  factory: () => T,\n  deps: DependencyList,\n  { initialPrev }: { initialPrev?: T } | undefined = {},\n) => {\n  const prevRef = useRef(initialPrev);\n  const [prevResetKey, setPrevResetKey] = useState({});\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const current = useMemo(factory, deps);\n  const memoizedPrev = useMemo(() => {\n    return prevRef.current;\n    // Only update when the reset key changes and deps change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...deps, prevResetKey]);\n\n  useEffect(() => {\n    prevRef.current = current;\n    // Only update when deps change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return [\n    {\n      previous: memoizedPrev,\n      current: current,\n    },\n    {\n      resetPrevious: () => {\n        prevRef.current = initialPrev;\n        setPrevResetKey({});\n      },\n    },\n  ] as const;\n};\n","import { useCurrentUserInfo } from '../../hooks/backendai';\nimport { getSessionNameRules } from '../SessionNameFormItem';\nimport { EditableSessionNameFragment$key } from './__generated__/EditableSessionNameFragment.graphql';\nimport { EditableSessionNameMutation } from './__generated__/EditableSessionNameMutation.graphql';\nimport { theme, Form, Input } from 'antd';\nimport Text, { TextProps } from 'antd/es/typography/Text';\nimport Title, { TitleProps } from 'antd/es/typography/Title';\nimport graphql from 'babel-plugin-relay/macro';\nimport { CornerDownLeftIcon } from 'lucide-react';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ntype EditableSessionNameProps = {\n  sessionFrgmt: EditableSessionNameFragment$key;\n} & (\n  | ({ component?: typeof Text } & Omit<TextProps, 'children'>)\n  | ({ component: typeof Title } & Omit<TitleProps, 'children'>)\n);\n\nconst EditableSessionName: React.FC<EditableSessionNameProps> = ({\n  component: Component = Text,\n  sessionFrgmt,\n  editable: editableOfProps,\n  style,\n  ...otherProps\n}) => {\n  const session = useFragment(\n    graphql`\n      fragment EditableSessionNameFragment on ComputeSessionNode {\n        id\n        row_id\n        name\n        priority\n        user_id\n        status\n      }\n    `,\n    sessionFrgmt,\n  );\n  const [optimisticName, setOptimisticName] = useState(session.name);\n  const [userInfo] = useCurrentUserInfo();\n  const [commitEditMutation, isPendingEditMutation] =\n    useMutation<EditableSessionNameMutation>(graphql`\n      mutation EditableSessionNameMutation($input: ModifyComputeSessionInput!) {\n        modify_compute_session(input: $input) {\n          item {\n            id\n            name\n          }\n        }\n      }\n    `);\n\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [isEditing, setIsEditing] = useState(false);\n\n  const isNotPreparingCategoryStatus = ![\n    'RESTARTING',\n    'PREPARING',\n    'PREPARED',\n    'CREATING',\n    'PULLING',\n  ].includes(session.status || '');\n\n  const isEditingAllowed =\n    editableOfProps &&\n    userInfo.uuid === session.user_id &&\n    isNotPreparingCategoryStatus;\n\n  return (\n    <>\n      {(!isEditing || isPendingEditMutation) && (\n        <Component\n          editable={\n            isEditingAllowed && !isPendingEditMutation\n              ? {\n                  onStart: () => {\n                    setIsEditing(true);\n                  },\n                  triggerType: ['icon', 'text'],\n                }\n              : false\n          }\n          copyable\n          style={{\n            ...style,\n            color: isPendingEditMutation\n              ? token.colorTextTertiary\n              : style?.color,\n          }}\n          {...otherProps}\n        >\n          {isPendingEditMutation ? optimisticName : session.name}\n        </Component>\n      )}\n      {isEditing && !isPendingEditMutation && (\n        <Form\n          onFinish={(values) => {\n            setIsEditing(false);\n            setOptimisticName(values.sessionName);\n            commitEditMutation({\n              variables: {\n                input: {\n                  id: session.id,\n                  name: values.sessionName,\n                },\n              },\n              onCompleted(response, errors) {},\n              onError(error) {},\n            });\n          }}\n          initialValues={{\n            sessionName: session.name,\n          }}\n          style={{\n            flex: 1,\n          }}\n        >\n          <Form.Item\n            name=\"sessionName\"\n            rules={getSessionNameRules(t)}\n            style={{\n              margin: 0,\n            }}\n          >\n            <Input\n              size=\"large\"\n              suffix={\n                <CornerDownLeftIcon\n                  style={{\n                    fontSize: '0.8em',\n                    color: token.colorTextTertiary,\n                  }}\n                />\n              }\n              autoFocus\n              onKeyDown={(e) => {\n                // when press escape key, cancel editing\n                if (e.key === 'Escape') {\n                  setIsEditing(false);\n                }\n              }}\n            />\n          </Form.Item>\n        </Form>\n      )}\n    </>\n  );\n};\n\nexport default EditableSessionName;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport { useSetBAINotification } from '../../hooks/useBAINotification';\nimport BAIModal, { BAIModalProps } from '../BAIModal';\nimport Flex from '../Flex';\nimport { ContainerCommitModalFragment$key } from './__generated__/ContainerCommitModalFragment.graphql';\nimport {\n  Descriptions,\n  Divider,\n  Form,\n  FormInstance,\n  Input,\n  Typography,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ContainerCommitModalProps extends BAIModalProps {\n  sessionFrgmt: ContainerCommitModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst ContainerCommitModal: React.FC<ContainerCommitModalProps> = ({\n  sessionFrgmt,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const formRef = useRef<FormInstance>(null);\n  const baiClient = useSuspendedBackendaiClient();\n\n  const { upsertNotification } = useSetBAINotification();\n  const [isConfirmLoading, setIsConfirmLoading] = useState<boolean>(false);\n\n  const session = useFragment(\n    graphql`\n      fragment ContainerCommitModalFragment on ComputeSessionNode {\n        id\n        name\n        row_id @required(action: NONE)\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  const convertSessionToImage = () => {\n    setIsConfirmLoading(true);\n    formRef?.current\n      ?.validateFields()\n      .then((values: { imageName: string }) => {\n        baiClient.computeSession\n          .convertSessionToImage(session?.name ?? '', values.imageName)\n          .then((res: { task_id: string }) => {\n            onRequestClose();\n            upsertNotification({\n              key: 'commitSession:' + session?.name,\n              backgroundTask: {\n                taskId: res.task_id,\n                status: 'pending',\n                statusDescriptions: {\n                  pending: t('session.CommitOnGoing'),\n                  resolved: t('session.CommitFinished'),\n                  rejected: t('session.CommitFailed'),\n                },\n              },\n              duration: 0,\n              message: 'commitSession: ' + session?.name,\n              open: true,\n            });\n          })\n          .catch((err: any) => {\n            if (err?.message) {\n              throw new Error(err.message);\n            } else {\n              throw err;\n            }\n          })\n          .finally(() => {\n            setIsConfirmLoading(false);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <BAIModal\n      title={t('session.CommitSession')}\n      onOk={() => convertSessionToImage()}\n      okButtonProps={{ loading: isConfirmLoading }}\n      onCancel={onRequestClose}\n      {...modalProps}\n      destroyOnClose\n    >\n      <Flex\n        direction=\"column\"\n        gap={'xs'}\n        align=\"stretch\"\n        style={{ overflow: 'hidden' }}\n      >\n        <Typography.Text>{t('session.DescCommitSession')}</Typography.Text>\n        <Descriptions bordered size=\"small\" column={1}>\n          <Descriptions.Item label={t('session.SessionName')}>\n            {session?.name}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.SessionId')}>\n            {session?.row_id}\n          </Descriptions.Item>\n          {/* FIXME: need to use legacy_session */}\n          {/* <Descriptions.Item label={t('session.launcher.Environments')}>\n          </Descriptions.Item>  */}\n        </Descriptions>\n        <Divider style={{ marginTop: 12, marginBottom: 12 }} />\n        <Form ref={formRef}>\n          <Form.Item\n            label={t('session.CommitImageName')}\n            name=\"imageName\"\n            required\n            rules={[\n              { required: true },\n              {\n                min: 4,\n                max: 32,\n              },\n              {\n                pattern: /^[a-zA-Z0-9-_.]+$/,\n                message: t('session.Validation.EnterValidSessionName'),\n              },\n            ]}\n          >\n            <Input placeholder={t('inputLimit.4to32chars')} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ContainerCommitModal;\n","import { BackendAIClient, useSuspendedBackendaiClient } from '../../hooks';\nimport { useCurrentUserRole } from '../../hooks/backendai';\nimport { useTanMutation } from '../../hooks/reactQueryAlias';\nimport { useSetBAINotification } from '../../hooks/useBAINotification';\nimport { useCurrentProjectValue } from '../../hooks/useCurrentProject';\nimport { usePainKiller } from '../../hooks/usePainKiller';\nimport BAIModal from '../BAIModal';\nimport Flex from '../Flex';\nimport {\n  TerminateSessionModalFragment$data,\n  TerminateSessionModalFragment$key,\n} from './__generated__/TerminateSessionModalFragment.graphql';\nimport { TerminateSessionModalRefetchQuery } from './__generated__/TerminateSessionModalRefetchQuery.graphql';\nimport { Card, Checkbox, ModalProps, Typography } from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { fetchQuery, useFragment, useRelayEnvironment } from 'react-relay';\n\ninterface TerminateSessionModalProps\n  extends Omit<ModalProps, 'onOk' | 'onCancel'> {\n  sessionFrgmts: TerminateSessionModalFragment$key;\n  onRequestClose: (success: boolean) => void;\n}\n\nconst useStyle = createStyles(({ css, token }) => {\n  return {\n    custom: css`\n      ul {\n        list-style-type: circle;\n        padding-left: ${token.paddingMD}px;\n      }\n    `,\n  };\n});\n\ntype KernelType = NonNullableNodeOnEdges<\n  NonNullable<TerminateSessionModalFragment$data[number]>['kernel_nodes']\n>;\n\ntype Session = NonNullable<TerminateSessionModalFragment$data[number]>;\n\nconst sendRequest = async (\n  rqst: {\n    uri: string;\n  } & RequestInit,\n) => {\n  let resp;\n  let body;\n  try {\n    if (rqst.method === 'GET') {\n      rqst.body = undefined;\n    }\n    resp = await fetch(rqst.uri, rqst);\n    const contentType = resp.headers.get('Content-Type');\n    if (contentType === null) {\n      body = resp.ok;\n      if (!resp.ok) {\n        // @ts-ignore\n        throw new Error(resp);\n      }\n    } else if (\n      contentType.startsWith('application/json') ||\n      contentType.startsWith('application/problem+json')\n    ) {\n      body = await resp.json();\n    } else if (contentType.startsWith('text/')) {\n      body = await resp.text();\n    } else {\n      body = await resp.blob();\n    }\n    if (!resp.ok) {\n      throw body;\n    }\n  } catch (e) {\n    return resp;\n  }\n  return body;\n};\n\nconst getWSProxyVersion = async (\n  resourceGroupIdOfSession: string,\n  projectId: string,\n  baiClient: BackendAIClient,\n) => {\n  // TODO: remove globalThis.appLauncher(backend-ai-app-launcher) dependency after migration to React\n  if (baiClient.debug === true) {\n    // @ts-ignore\n    if (globalThis.appLauncher?.forceUseV1Proxy?.checked) return 'v1';\n    // @ts-ignore\n    else if (globalThis.appLauncher?.forceUseV2Proxy?.checked) return 'v2';\n  }\n\n  // @ts-ignore\n  if (globalThis.isElectron) {\n    return 'v1';\n  }\n  return baiClient.scalingGroup\n    .getWsproxyVersion(resourceGroupIdOfSession, projectId)\n    .then((result: { wsproxy_version: string }) => {\n      return result.wsproxy_version;\n    });\n};\n\nconst getProxyURL = async (\n  resourceGroupIdOfSession: string,\n  projectId: string,\n  baiClient: BackendAIClient,\n) => {\n  let url = 'http://127.0.0.1:5050/';\n  if (\n    // @ts-ignore\n    globalThis.__local_proxy !== undefined &&\n    // @ts-ignore\n    globalThis.__local_proxy.url !== undefined\n  ) {\n    // @ts-ignore\n    url = globalThis.__local_proxy.url;\n  } else if (baiClient._config.proxyURL !== undefined) {\n    url = baiClient._config.proxyURL;\n  }\n  if (resourceGroupIdOfSession !== undefined && projectId !== undefined) {\n    const wsproxyVersion = await getWSProxyVersion(\n      resourceGroupIdOfSession,\n      projectId,\n      baiClient,\n    );\n    if (wsproxyVersion !== 'v1') {\n      url = new URL(`${wsproxyVersion}/`, url).href;\n    }\n  }\n  return url;\n};\n\nconst terminateApp = async (\n  session: Session,\n  accessKey: string,\n  currentProjectId: string,\n  baiClient: BackendAIClient,\n) => {\n  const proxyURL = await getProxyURL(\n    session.scaling_group,\n    currentProjectId,\n    baiClient,\n  );\n\n  const rqst = {\n    method: 'GET',\n    uri: new URL(`proxy/${accessKey}/${session.row_id}`, proxyURL).href,\n  };\n\n  return sendRequest(rqst).then((response) => {\n    let uri = new URL(`proxy/${accessKey}/${session.row_id}/delete`, proxyURL);\n    if (localStorage.getItem('backendaiwebui.appproxy-permit-key')) {\n      uri.searchParams.set(\n        'permit_key',\n        localStorage.getItem('backendaiwebui.appproxy-permit-key') || '',\n      );\n      uri = new URL(uri.href);\n    }\n    if (response !== undefined && response.code !== 404) {\n      return sendRequest({\n        method: 'GET',\n        uri: uri.href,\n        credentials: 'include',\n        mode: 'cors',\n      });\n    }\n    return true;\n  });\n};\n\nconst TerminateSessionModal: React.FC<TerminateSessionModalProps> = ({\n  sessionFrgmts: sessionFrgmt,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const openTerminateModal = false;\n  const { t } = useTranslation();\n  const { styles } = useStyle();\n  const sessions = useFragment(\n    graphql`\n      fragment TerminateSessionModalFragment on ComputeSessionNode\n      @relay(plural: true) {\n        id\n        row_id\n        name\n        scaling_group @required(action: NONE)\n        kernel_nodes {\n          edges {\n            node {\n              container_id\n              agent_id\n            }\n          }\n        }\n      }\n    `,\n    sessionFrgmt,\n  );\n  const [isForce, setIsForce] = useState(false);\n  const userRole = useCurrentUserRole();\n\n  const baiClient = useSuspendedBackendaiClient();\n\n  const currentProject = useCurrentProjectValue();\n\n  const terminateMutation = useTanMutation({\n    mutationFn: async (session: Session) => {\n      return terminateApp(\n        session,\n        baiClient._config.accessKey,\n        currentProject.id,\n        baiClient,\n      )\n        .catch((e) => {\n          return {\n            error: e,\n          };\n        })\n        .then((result) => {\n          const err = result?.error;\n          if (\n            err === undefined || //no error\n            (err && // Even if wsproxy address is invalid, session must be deleted.\n              err.message &&\n              (err.statusCode === 404 || err.statusCode === 500))\n          ) {\n            // BAI client destroy try to request 3times as default\n            return baiClient.destroy(\n              session.row_id,\n              baiClient._config.accessKey,\n              isForce,\n            );\n          } else {\n            throw err;\n          }\n        });\n    },\n  });\n  const relayEvn = useRelayEnvironment();\n  const painKiller = usePainKiller();\n  const { upsertNotification } = useSetBAINotification();\n\n  return (\n    <BAIModal\n      centered\n      title={t('session.TerminateSession')}\n      open={openTerminateModal}\n      confirmLoading={terminateMutation.isPending}\n      onOk={() => {\n        if (sessions[0]?.row_id) {\n          const session = sessions[0];\n          terminateMutation\n            .mutateAsync(session)\n            .then(() => {\n              setIsForce(false);\n              onRequestClose(true);\n            })\n            .catch((err) => {\n              upsertNotification({\n                message: painKiller.relieve(err?.title),\n                description: err?.message,\n                open: true,\n              });\n            })\n            .finally(() => {\n              // TODO: remove below code after session list migration to React\n              const event = new CustomEvent(\n                'backend-ai-session-list-refreshed',\n                {\n                  detail: 'running',\n                },\n              );\n              document.dispatchEvent(event);\n\n              // refetch session node\n              return fetchQuery<TerminateSessionModalRefetchQuery>(\n                relayEvn,\n                graphql`\n                  query TerminateSessionModalRefetchQuery(\n                    $id: GlobalIDField!\n                    $project_id: UUID!\n                  ) {\n                    compute_session_node(id: $id, project_id: $project_id) {\n                      id\n                      status\n                    }\n                  }\n                `,\n                {\n                  id: session.id,\n                  project_id: currentProject.id,\n                },\n              ).toPromise();\n            });\n        }\n      }}\n      okText={isForce ? t('button.ForceTerminate') : t('session.Terminate')}\n      okType=\"danger\"\n      okButtonProps={{\n        type: isForce ? 'primary' : 'default',\n      }}\n      onCancel={() => {\n        setIsForce(false);\n        onRequestClose(false);\n      }}\n      {...modalProps}\n    >\n      <Flex\n        className={styles.custom}\n        direction=\"column\"\n        align=\"stretch\"\n        gap={'xs'}\n      >\n        <Typography.Text>\n          {t('userSettings.SessionTerminationDialog')}\n        </Typography.Text>\n        <Typography.Text mark>\n          {sessions.length === 1\n            ? sessions[0]?.name\n            : `${sessions.length} sessions`}\n        </Typography.Text>\n        <Checkbox\n          checked={isForce}\n          onChange={(e) => {\n            setIsForce(e.target.checked);\n          }}\n        >\n          {t('button.ForceTerminate')}\n        </Checkbox>\n        {isForce && (\n          <Card>\n            <Typography.Paragraph type=\"danger\">\n              {t('session.ForceTerminateWarningMsg')}\n            </Typography.Paragraph>\n            <ul>\n              <li>{t('session.ForceTerminateWarningMsg2')}</li>\n              <li>{t('session.ForceTerminateWarningMsg3')}</li>\n            </ul>\n            {userRole === 'superadmin' && (\n              <>\n                <Card type=\"inner\" title={t('session.ContainerToCleanUp')}>\n                  {_.chain(sessions)\n                    .map((s) => s?.kernel_nodes?.edges)\n                    .map((edges) => edges?.map((e) => e?.node))\n                    .flatten()\n                    .groupBy('agent_id')\n                    .map((kernels: Array<KernelType>, agentId: string) => {\n                      return (\n                        <>\n                          {agentId}\n                          <ul key={agentId}>\n                            {kernels.map((k) => (\n                              <li key={k.container_id}>\n                                <Typography.Text copyable>\n                                  {k.container_id}\n                                </Typography.Text>\n                              </li>\n                            ))}\n                          </ul>\n                        </>\n                      );\n                    })\n                    .value()}\n                </Card>\n              </>\n            )}\n          </Card>\n        )}\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default TerminateSessionModal;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport { useBackendAIAppLauncher } from '../../hooks/useBackendAIAppLauncher';\nimport ContainerCommitModal from './ContainerCommitModal';\nimport ContainerLogModal from './ContainerLogModal';\nimport TerminateSessionModal from './TerminateSessionModal';\nimport {\n  SessionActionButtonsFragment$data,\n  SessionActionButtonsFragment$key,\n} from './__generated__/SessionActionButtonsFragment.graphql';\nimport { DeliveredProcedureOutlined } from '@ant-design/icons';\nimport { Tooltip, Button, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { TerminalIcon, PowerOffIcon, ScrollTextIcon } from 'lucide-react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface SessionActionButtonsProps {\n  sessionFrgmt: SessionActionButtonsFragment$key | null;\n}\n// const isRunning = (session:SessionActionButtonsFragment$data) => {\n//   return [\n//     'batch',\n//     'interactive',\n//     'inference',\n//     'system',\n//     'running',\n//     'others',\n//   ].includes(session);\n// }\n\nconst isActive = (session: SessionActionButtonsFragment$data) => {\n  return !['TERMINATED', 'CANCELLED'].includes(session?.status || '');\n};\n// const isTransitional = (session: SessionActionButtonsFragment$data) => {\n//   return [\n//     'RESTARTING',\n//     'TERMINATING',\n//     'PENDING',\n//     'PREPARING',\n//     'CREATING',\n//     'PULLING',\n//   ].includes(session?.status || '');\n// };\n\nconst SessionActionButtons: React.FC<SessionActionButtonsProps> = (props) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const appLauncher = useBackendAIAppLauncher();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const session = useFragment(\n    graphql`\n      fragment SessionActionButtonsFragment on ComputeSessionNode {\n        id\n        row_id @required(action: NONE)\n        type\n        status\n        access_key\n        service_ports\n        commit_status\n        ...TerminateSessionModalFragment\n        ...ContainerLogModalFragment\n        ...ContainerCommitModalFragment\n      }\n    `,\n    props.sessionFrgmt,\n  );\n  const [openTerminateModal, setOpenTerminateModal] = useState(false);\n  const [openLogModal, setOpenLogModal] = useState(false);\n  const [openContainerCommitModal, setOpenContainerCommitModal] =\n    useState(false);\n\n  // const isDisabledTermination = !['PENDING'].includes(session?.status || '') && session?.commit_status === 'ongoing'\n  // ${(this._isRunning && !this._isPreparing(rowData.item.status)) ||\n  //   this._isError(rowData.item.status)\n  return (\n    session && (\n      <>\n        {/* <Tooltip title={t('session.SeeAppDialog')}>\n        <Button icon={<LayoutGridIcon />} onClick={()=>{\n          appLauncher.showLauncher({\n            \"access-key\": session?.access_key || '',\n            \"service-ports\": session?.service_ports || '',\n          })\n        }} />\n      </Tooltip> */}\n        <Tooltip title={t('session.ExecuteTerminalApp')}>\n          <Button\n            disabled={!isActive(session)}\n            icon={<TerminalIcon />}\n            onClick={() => {\n              appLauncher.runTerminal(session?.row_id);\n            }}\n          />\n        </Tooltip>\n        {/* Don't put this modal to end of the return array(<></>). */}\n        <TerminateSessionModal\n          sessionFrgmts={[session]}\n          open={openTerminateModal}\n          onRequestClose={() => {\n            setOpenTerminateModal(false);\n          }}\n        />\n\n        <Tooltip title={t('session.SeeContainerLogs')}>\n          <Button\n            icon={<ScrollTextIcon />}\n            onClick={() => {\n              setOpenLogModal(true);\n            }}\n          />\n        </Tooltip>\n        <ContainerLogModal\n          sessionFrgmt={session}\n          open={openLogModal}\n          onCancel={() => {\n            setOpenLogModal(false);\n          }}\n        />\n        <Tooltip title={t('session.RequestContainerCommit')}>\n          <Button\n            disabled={\n              (!baiClient.supports('image-commit') ||\n                !baiClient._config.enableContainerCommit) &&\n              session.type !== 'system'\n            }\n            icon={<DeliveredProcedureOutlined style={{ fontSize: 14 }} />}\n            onClick={() => {\n              setOpenContainerCommitModal(true);\n            }}\n          />\n        </Tooltip>\n        <ContainerCommitModal\n          sessionFrgmt={session}\n          open={openContainerCommitModal}\n          onRequestClose={() => setOpenContainerCommitModal(false)}\n        />\n        <Tooltip title={t('session.TerminateSession')}>\n          <Button\n            disabled={!isActive(session)}\n            icon={\n              <PowerOffIcon\n                color={isActive(session) ? token.colorError : undefined}\n              />\n            }\n            onClick={() => {\n              setOpenTerminateModal(true);\n            }}\n          />\n        </Tooltip>\n      </>\n    )\n  );\n};\n\nexport default SessionActionButtons;\n","export const useBackendAIAppLauncher = () => {\n  // This is not use any React hooks, so it's not a React hook.\n  // But keep it here for the future refactoring.\n\n  // @ts-ignore\n  return {\n    runTerminal: (sessionId: string) => {\n      // @ts-ignore\n      globalThis.appLauncher.runTerminal(sessionId);\n    },\n    showLauncher: (params: {\n      'session-uuid'?: string;\n      'access-key'?: string;\n      'app-services'?: string;\n      mode?: string;\n      'app-services-option'?: string;\n      'service-ports'?: string;\n      runtime?: string;\n      filename?: string;\n      arguments?: string;\n    }) => {},\n  };\n};\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport BAIIntervalView from '../BAIIntervalView';\nimport DoubleTag from '../DoubleTag';\nimport { SessionReservationFragment$key } from './__generated__/SessionReservationFragment.graphql';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst SessionReservation: React.FC<{\n  sessionFrgmt: SessionReservationFragment$key;\n}> = ({ sessionFrgmt }) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const { t } = useTranslation();\n  const session = useFragment(\n    graphql`\n      fragment SessionReservationFragment on ComputeSessionNode {\n        id\n        created_at\n        terminated_at\n      }\n    `,\n    sessionFrgmt,\n  );\n  return (\n    <>\n      {dayjs(session.created_at).format('lll')}\n      <BAIIntervalView\n        callback={() => {\n          return session?.created_at\n            ? baiClient.utils.elapsedTime(\n                session.created_at,\n                session?.terminated_at,\n              )\n            : '-';\n        }}\n        delay={1000}\n        render={(intervalValue) => (\n          <DoubleTag\n            values={[\n              { label: t('session.ElapsedTime') },\n              { label: intervalValue },\n            ]}\n          />\n        )}\n      />\n    </>\n  );\n};\n\nexport default SessionReservation;\n","import Flex from '../Flex';\nimport {\n  SessionStatusTagFragment$data,\n  SessionStatusTagFragment$key,\n} from './__generated__/SessionStatusTagFragment.graphql';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Tag, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface SessionStatusTagProps {\n  sessionFrgmt?: SessionStatusTagFragment$key | null;\n}\nconst statusTagColor = {\n  //prepare\n  RESTARTING: 'blue',\n  PREPARING: 'blue',\n  PREPARED: 'blue',\n  CREATING: 'blue',\n  PULLING: 'blue',\n  //running\n  RUNNING: 'green',\n  PENDING: 'green',\n  SCHEDULED: 'green',\n  //error\n  ERROR: 'red',\n  //finished return undefined\n};\n\nconst isTransitional = (session: SessionStatusTagFragment$data) => {\n  return [\n    'RESTARTING',\n    'TERMINATING',\n    'PENDING',\n    `PREPARING`,\n    'CREATING',\n    'PULLING',\n  ].includes(session?.status || '');\n};\n\nconst statusInfoTagColor = {\n  // 'idle-timeout': undefined,\n  // 'user-requested': undefined,\n  // scheduled: undefined,\n  // 'self-terminated': undefined,\n  'no-available-instances': 'red',\n  'failed-to-start': 'red',\n  'creation-failed': 'red',\n};\nconst SessionStatusTag: React.FC<SessionStatusTagProps> = ({\n  sessionFrgmt,\n}) => {\n  const session = useFragment(\n    graphql`\n      fragment SessionStatusTagFragment on ComputeSessionNode {\n        id\n        name\n        status\n        status_info\n      }\n    `,\n    sessionFrgmt,\n  );\n  const { token } = theme.useToken();\n\n  return session ? (\n    _.isEmpty(session.status_info) ? (\n      <Tag\n        color={\n          session.status ? _.get(statusTagColor, session.status) : undefined\n        }\n        icon={isTransitional(session) ? <LoadingOutlined spin /> : undefined}\n      >\n        {session.status || ' '}\n      </Tag>\n    ) : (\n      <Flex>\n        <Tag\n          style={{ margin: 0, zIndex: 1 }}\n          color={\n            session.status ? _.get(statusTagColor, session.status) : undefined\n          }\n        >\n          {session.status}\n        </Tag>\n        <Tag\n          style={{\n            margin: 0,\n            marginLeft: -1,\n            borderStyle: 'dashed',\n            color:\n              session.status_info &&\n              _.get(statusInfoTagColor, session.status_info)\n                ? undefined\n                : token.colorTextSecondary,\n          }}\n          color={\n            session.status_info\n              ? _.get(statusInfoTagColor, session.status_info)\n              : undefined\n          }\n        >\n          {session.status_info}\n        </Tag>\n      </Flex>\n    )\n  ) : null;\n};\n\nexport default SessionStatusTag;\n","import { SessionTypeTagFragment$key } from './__generated__/SessionTypeTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\nconst typeTagColor = {\n  INTERACTIVE: 'green',\n  BATCH: 'darkgreen',\n  INFERENCE: 'blue',\n};\n\ninterface SessionTypeTagProps {\n  sessionFrgmt: SessionTypeTagFragment$key;\n}\n\nconst SessionTypeTag: React.FC<SessionTypeTagProps> = ({ sessionFrgmt }) => {\n  const session = useFragment(\n    graphql`\n      fragment SessionTypeTagFragment on ComputeSessionNode {\n        type\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  return (\n    <Tag color={_.get(typeTagColor, _.toUpper(session.type || ''))}>\n      {_.toUpper(session.type || '')}\n    </Tag>\n  );\n};\n\nexport default SessionTypeTag;\n","/**\n * @generated SignedSource<<1a5d592adb2c9a662495cd7456262a7f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ContainerCommitModalFragment$data = {\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly row_id: string;\n  readonly \" $fragmentType\": \"ContainerCommitModalFragment\";\n} | null | undefined;\nexport type ContainerCommitModalFragment$key = {\n  readonly \" $data\"?: ContainerCommitModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerCommitModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ContainerCommitModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"row_id\",\n        \"storageKey\": null\n      },\n      \"action\": \"NONE\",\n      \"path\": \"row_id\"\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"8bcd294de1ffd3f00f6ec0ed7177c304\";\n\nexport default node;\n","/**\n * @generated SignedSource<<4ad7686d85570119a8fe237eb7cc0de9>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ContainerLogModalFragment$data = {\n  readonly access_key: string | null | undefined;\n  readonly id: string;\n  readonly kernel_nodes: {\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly cluster_idx: number | null | undefined;\n        readonly cluster_role: string | null | undefined;\n        readonly container_id: string | null | undefined;\n        readonly id: string;\n        readonly row_id: string | null | undefined;\n      } | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n  readonly name: string | null | undefined;\n  readonly row_id: string;\n  readonly status: string | null | undefined;\n  readonly \" $fragmentType\": \"ContainerLogModalFragment\";\n} | null | undefined;\nexport type ContainerLogModalFragment$key = {\n  readonly \" $data\"?: ContainerLogModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerLogModalFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"row_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ContainerLogModalFragment\",\n  \"selections\": [\n    (v0/*: any*/),\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": (v1/*: any*/),\n      \"action\": \"NONE\",\n      \"path\": \"row_id\"\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"access_key\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KernelConnection\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"kernel_nodes\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"KernelEdge\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"edges\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"KernelNode\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"node\",\n              \"plural\": false,\n              \"selections\": [\n                (v0/*: any*/),\n                (v1/*: any*/),\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"container_id\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"cluster_idx\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"cluster_role\",\n                  \"storageKey\": null\n                }\n              ],\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"59dda81185d3d874cd635adcae2ae9d4\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2966b965c5a39abf1f5fe5121ba20420>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EditableSessionNameFragment$data = {\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly priority: number | null | undefined;\n  readonly row_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly user_id: string | null | undefined;\n  readonly \" $fragmentType\": \"EditableSessionNameFragment\";\n};\nexport type EditableSessionNameFragment$key = {\n  readonly \" $data\"?: EditableSessionNameFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EditableSessionNameFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EditableSessionNameFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"row_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"priority\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"9c053b92b568a9b132f7615d1869f32b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<19ec3c0d04347418c016692bdba42836>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ModifyComputeSessionInput = {\n  clientMutationId?: string | null | undefined;\n  id: any;\n  name?: string | null | undefined;\n  priority?: number | null | undefined;\n};\nexport type EditableSessionNameMutation$variables = {\n  input: ModifyComputeSessionInput;\n};\nexport type EditableSessionNameMutation$data = {\n  readonly modify_compute_session: {\n    readonly item: {\n      readonly id: string;\n      readonly name: string | null | undefined;\n    } | null | undefined;\n  } | null | undefined;\n};\nexport type EditableSessionNameMutation = {\n  response: EditableSessionNameMutation$data;\n  variables: EditableSessionNameMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"input\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"input\",\n        \"variableName\": \"input\"\n      }\n    ],\n    \"concreteType\": \"ModifyComputeSessionPayload\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_compute_session\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"item\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"name\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EditableSessionNameMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"EditableSessionNameMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"bea4b6405958ab3b9796129b5807d0fa\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EditableSessionNameMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation EditableSessionNameMutation(\\n  $input: ModifyComputeSessionInput!\\n) {\\n  modify_compute_session(input: $input) {\\n    item {\\n      id\\n      name\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"92003994eaa19ceec71d4fe2efb299cd\";\n\nexport default node;\n","/**\n * @generated SignedSource<<ddb7872e2d8f78fb16d89240bc6bb97c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionActionButtonsFragment$data = {\n  readonly access_key: string | null | undefined;\n  readonly commit_status: string | null | undefined;\n  readonly id: string;\n  readonly row_id: string;\n  readonly service_ports: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly type: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerCommitModalFragment\" | \"ContainerLogModalFragment\" | \"TerminateSessionModalFragment\">;\n  readonly \" $fragmentType\": \"SessionActionButtonsFragment\";\n} | null | undefined;\nexport type SessionActionButtonsFragment$key = {\n  readonly \" $data\"?: SessionActionButtonsFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionActionButtonsFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionActionButtonsFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"row_id\",\n        \"storageKey\": null\n      },\n      \"action\": \"NONE\",\n      \"path\": \"row_id\"\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"access_key\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"service_ports\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"commit_status\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"TerminateSessionModalFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"ContainerLogModalFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"ContainerCommitModalFragment\"\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"691b7c3c1673640d97620822f4fff09f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<074352ad15961ea5f0a3431351c97797>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionReservationFragment$data = {\n  readonly created_at: string | null | undefined;\n  readonly id: string;\n  readonly terminated_at: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionReservationFragment\";\n};\nexport type SessionReservationFragment$key = {\n  readonly \" $data\"?: SessionReservationFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionReservationFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionReservationFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"terminated_at\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"73f2fc395c80c1bf672ef9d0fea66787\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b4f4d1ab8957ce220ae8b55938b0f742>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionStatusTagFragment$data = {\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly status_info: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionStatusTagFragment\";\n};\nexport type SessionStatusTagFragment$key = {\n  readonly \" $data\"?: SessionStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status_info\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"28d44a009b8d8ecc51f60af3fc9ef8c8\";\n\nexport default node;\n","/**\n * @generated SignedSource<<63fa395e8c9335222eada19d6129c0e5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionTypeTagFragment$data = {\n  readonly type: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionTypeTagFragment\";\n};\nexport type SessionTypeTagFragment$key = {\n  readonly \" $data\"?: SessionTypeTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionTypeTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionTypeTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"type\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"6d4ab2b738125ee81d47483324695349\";\n\nexport default node;\n","/**\n * @generated SignedSource<<8239c8c8f6654cf4edb157dc030868c2>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type TerminateSessionModalFragment$data = ReadonlyArray<{\n  readonly id: string;\n  readonly kernel_nodes: {\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly agent_id: string | null | undefined;\n        readonly container_id: string | null | undefined;\n      } | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n  readonly name: string | null | undefined;\n  readonly row_id: string | null | undefined;\n  readonly scaling_group: string;\n  readonly \" $fragmentType\": \"TerminateSessionModalFragment\";\n} | null | undefined>;\nexport type TerminateSessionModalFragment$key = ReadonlyArray<{\n  readonly \" $data\"?: TerminateSessionModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"TerminateSessionModalFragment\">;\n}>;\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": {\n    \"plural\": true\n  },\n  \"name\": \"TerminateSessionModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"row_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"scaling_group\",\n        \"storageKey\": null\n      },\n      \"action\": \"NONE\",\n      \"path\": \"scaling_group\"\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KernelConnection\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"kernel_nodes\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"KernelEdge\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"edges\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"KernelNode\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"node\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"container_id\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"agent_id\",\n                  \"storageKey\": null\n                }\n              ],\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"0987c567ddd892540d949ccabd005e2b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<816f3eecae241f4dab00312761810670>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type TerminateSessionModalRefetchQuery$variables = {\n  id: any;\n  project_id: string;\n};\nexport type TerminateSessionModalRefetchQuery$data = {\n  readonly compute_session_node: {\n    readonly id: string;\n    readonly status: string | null | undefined;\n  } | null | undefined;\n};\nexport type TerminateSessionModalRefetchQuery = {\n  response: TerminateSessionModalRefetchQuery$data;\n  variables: TerminateSessionModalRefetchQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"project_id\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"id\",\n        \"variableName\": \"id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"project_id\",\n        \"variableName\": \"project_id\"\n      }\n    ],\n    \"concreteType\": \"ComputeSessionNode\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"compute_session_node\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"status\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"TerminateSessionModalRefetchQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"TerminateSessionModalRefetchQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"42872ac8084736aaf26675f9531456db\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"TerminateSessionModalRefetchQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query TerminateSessionModalRefetchQuery(\\n  $id: GlobalIDField!\\n  $project_id: UUID!\\n) {\\n  compute_session_node(id: $id, project_id: $project_id) {\\n    id\\n    status\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"6c928af0802a6732e5237c3f6c46db99\";\n\nexport default node;\n","import SessionKernelTags from '../components/ImageTags';\nimport { toGlobalId } from '../helper';\nimport { useCurrentUserRole } from '../hooks/backendai';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport { ResourceNumbersOfSession } from '../pages/SessionLauncherPage';\nimport EditableSessionName from './ComputeSessionNodeItems/EditableSessionName';\nimport SessionActionButtons from './ComputeSessionNodeItems/SessionActionButtons';\nimport SessionReservation from './ComputeSessionNodeItems/SessionReservation';\nimport SessionStatusTag from './ComputeSessionNodeItems/SessionStatusTag';\nimport SessionTypeTag from './ComputeSessionNodeItems/SessionTypeTag';\nimport Flex from './Flex';\nimport ImageMetaIcon from './ImageMetaIcon';\nimport SessionUsageMonitor from './SessionUsageMonitor';\nimport { SessionDetailContentLegacyQuery } from './__generated__/SessionDetailContentLegacyQuery.graphql';\nimport { SessionDetailContentQuery } from './__generated__/SessionDetailContentQuery.graphql';\nimport {\n  Alert,\n  Button,\n  Descriptions,\n  Grid,\n  Tag,\n  theme,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport Title from 'antd/es/typography/Title';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst SessionDetailContent: React.FC<{\n  id: string;\n  fetchKey?: string;\n}> = ({ id, fetchKey = 'initial' }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const currentProject = useCurrentProjectValue();\n  const userRole = useCurrentUserRole();\n\n  const { md } = Grid.useBreakpoint();\n  // TODO: remove and refactor this waterfall request after v24.12.0\n  // get the project id of the session for <= v24.12.0.\n  const { session_for_project_id } =\n    useLazyLoadQuery<SessionDetailContentLegacyQuery>(\n      graphql`\n        query SessionDetailContentLegacyQuery($uuid: UUID!) {\n          session_for_project_id: compute_session(id: $uuid) {\n            group_id\n          }\n        }\n      `,\n      {\n        uuid: id,\n      },\n      {\n        fetchPolicy: 'network-only',\n      },\n    );\n  const { session, legacy_session } =\n    useLazyLoadQuery<SessionDetailContentQuery>(\n      //  In compute_session_node, there are missing fields. We need to use `compute_session` to get the missing fields.\n      graphql`\n        query SessionDetailContentQuery(\n          $id: GlobalIDField!\n          $uuid: UUID!\n          $project_id: UUID!\n        ) {\n          session: compute_session_node(id: $id, project_id: $project_id) {\n            id\n            row_id\n            name\n            project_id\n            user_id\n            resource_opts\n            status\n            kernel_nodes {\n              edges {\n                node {\n                  id\n                  image {\n                    id\n                    name\n                    architecture\n                    tag\n                  }\n                }\n              }\n            }\n            vfolder_mounts\n            created_at @required(action: NONE)\n            terminated_at\n            scaling_group\n            agent_ids\n            requested_slots\n\n            ...SessionStatusTagFragment\n            ...SessionActionButtonsFragment\n            ...SessionTypeTagFragment\n            ...EditableSessionNameFragment\n            ...SessionReservationFragment\n            # fix: This fragment is not used in this component, but it is required by the SessionActionButtonsFragment.\n            # It might be a bug in relay\n            ...ContainerLogModalFragment\n            ...SessionUsageMonitorFragment\n            ...ContainerCommitModalFragment\n          }\n          legacy_session: compute_session(id: $uuid) {\n            image\n            mounts\n            user_email\n            architecture\n          }\n        }\n      `,\n      {\n        id: toGlobalId('ComputeSessionNode', id),\n        uuid: id,\n        project_id: session_for_project_id?.group_id || currentProject.id,\n      },\n      {\n        fetchPolicy: 'network-only',\n        fetchKey: fetchKey,\n      },\n    );\n\n  const imageFullName =\n    legacy_session?.image &&\n    legacy_session?.architecture &&\n    legacy_session.image + '@' + legacy_session.architecture;\n  return session ? (\n    <Flex direction=\"column\" gap={'sm'} align=\"stretch\">\n      {session_for_project_id?.group_id !== currentProject.id && (\n        <Alert message={t('session.NotInProject')} type=\"warning\" showIcon />\n      )}\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        align=\"start\"\n        style={{\n          alignSelf: 'stretch',\n        }}\n        gap={'sm'}\n      >\n        <EditableSessionName\n          sessionFrgmt={session}\n          component={Title}\n          level={3}\n          style={{\n            margin: 0,\n          }}\n          editable\n        />\n        <Button.Group size=\"large\">\n          <SessionActionButtons sessionFrgmt={session} />\n        </Button.Group>\n      </Flex>\n\n      <Descriptions bordered column={md ? 2 : 1}>\n        <Descriptions.Item label={t('session.SessionId')} span={md ? 2 : 1}>\n          <Typography.Text copyable style={{ fontFamily: 'monospace' }}>\n            {session.row_id}\n          </Typography.Text>\n        </Descriptions.Item>\n        {(userRole === 'admin' || userRole === 'superadmin') && (\n          <Descriptions.Item label={t('credential.UserID')} span={md ? 2 : 1}>\n            {legacy_session?.user_email}\n          </Descriptions.Item>\n        )}\n        <Descriptions.Item\n          label={t('session.Status')}\n          contentStyle={{ display: 'flex', gap: token.marginSM }}\n        >\n          <SessionStatusTag sessionFrgmt={session} />\n          {/* <Button type=\"text\" icon={<TriangleAlertIcon />} /> */}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('session.SessionType')}>\n          <SessionTypeTag sessionFrgmt={session} />\n        </Descriptions.Item>\n        <Descriptions.Item label={t('session.launcher.Environments')}>\n          {imageFullName ? (\n            <Flex gap={'sm'}>\n              <ImageMetaIcon image={imageFullName} />\n              <Flex>\n                <SessionKernelTags image={imageFullName} />\n              </Flex>\n            </Flex>\n          ) : (\n            '-'\n          )}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('session.launcher.MountedFolders')}>\n          {legacy_session?.mounts?.join(', ')}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('session.launcher.ResourceAllocation')}>\n          <Flex gap={'sm'} wrap=\"wrap\">\n            <Tooltip title={t('session.ResourceGroup')}>\n              <Tag>{session.scaling_group}</Tag>\n            </Tooltip>\n            <ResourceNumbersOfSession\n              resource={JSON.parse(session.requested_slots || '{}')}\n            />\n          </Flex>\n        </Descriptions.Item>\n        <Descriptions.Item label={t('session.Agent')}>\n          {session.agent_ids || '-'}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('session.Reservation')} span={md ? 2 : 1}>\n          <Flex gap={'xs'} wrap={'wrap'}>\n            <SessionReservation sessionFrgmt={session} />\n          </Flex>\n        </Descriptions.Item>\n        <Descriptions.Item label={'Resource Usage'} span={md ? 2 : 1}>\n          <SessionUsageMonitor sessionFrgmt={session} />\n        </Descriptions.Item>\n      </Descriptions>\n    </Flex>\n  ) : (\n    <Alert\n      showIcon\n      message={t('session.SessionNotFound')}\n      type=\"error\"\n      description={id}\n    ></Alert>\n  );\n};\n\nexport default SessionDetailContent;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport SessionDetailContent from './SessionDetailContent';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { Button, Drawer, Skeleton, Tooltip } from 'antd';\nimport { DrawerProps } from 'antd/lib';\nimport React, { Suspense, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// import { StringParam, useQueryParam } from 'use-query-params';\n\ninterface SessionDetailDrawerProps extends DrawerProps {\n  sessionId?: string;\n}\nconst SessionDetailDrawer: React.FC<SessionDetailDrawerProps> = ({\n  sessionId,\n  ...drawerProps\n}) => {\n  const { t } = useTranslation();\n  // const [sessionId, setSessionId] = useQueryParam('sessionDetail', StringParam);\n  useSuspendedBackendaiClient();\n\n  const [isPendingReload, startReloadTransition] = useTransition();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  return (\n    <Drawer\n      title={t('session.SessionInfo')}\n      width={800}\n      keyboard={false}\n      {...drawerProps}\n      open={!!sessionId}\n      onClose={(e) => {\n        drawerProps.onClose?.(e);\n        // setSessionId(null, 'pushIn');\n      }}\n      extra={\n        <Tooltip title={t('button.Refresh')}>\n          <Button\n            loading={isPendingReload}\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startReloadTransition(() => {\n                updateFetchKey();\n              });\n            }}\n          />\n        </Tooltip>\n      }\n    >\n      <Suspense fallback={<Skeleton />}>\n        {sessionId && (\n          <SessionDetailContent id={sessionId} fetchKey={fetchKey} />\n        )}\n      </Suspense>\n    </Drawer>\n  );\n};\n\nexport default SessionDetailDrawer;\n","import {\n  convertBinarySizeUnit,\n  convertDecimalSizeUnit,\n  toFixedFloorWithoutTrailingZeros,\n} from '../helper';\nimport { useResourceSlotsDetails } from '../hooks/backendai';\nimport BAIProgressWithLabel from './BAIProgressWithLabel';\nimport Flex from './Flex';\nimport { SessionUsageMonitorFragment$key } from './__generated__/SessionUsageMonitorFragment.graphql';\nimport {\n  Progress,\n  ProgressProps,\n  Tooltip,\n  Typography,\n  theme,\n  Row,\n  Col,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useMemo } from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface SessionUsageMonitorProps extends ProgressProps {\n  sessionFrgmt: SessionUsageMonitorFragment$key | null;\n  size?: 'small' | 'default';\n}\n\nconst SessionUsageMonitor: React.FC<SessionUsageMonitorProps> = ({\n  sessionFrgmt,\n  size = 'default',\n}) => {\n  const { token } = theme.useToken();\n  const { mergedResourceSlots } = useResourceSlotsDetails();\n\n  const sessionNode = useFragment(\n    graphql`\n      fragment SessionUsageMonitorFragment on ComputeSessionNode {\n        kernel_nodes {\n          edges {\n            node {\n              live_stat\n              occupied_slots\n            }\n          }\n        }\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  const firstKernelNode = _.get(sessionNode, 'kernel_nodes.edges[0].node');\n  const occupiedSlots = useMemo(\n    () => JSON.parse(firstKernelNode?.occupied_slots ?? '{}'),\n    [firstKernelNode?.occupied_slots],\n  );\n  const resourceSlotNames = _.keysIn(occupiedSlots);\n  const liveStat = JSON.parse(\n    _.get(sessionNode, 'kernel_nodes.edges[0].node.live_stat') ?? '{}',\n  );\n\n  // to display util first, mem second\n  const sortedLiveStat = useMemo(\n    () =>\n      Object.keys(liveStat)\n        .sort((a, b) => {\n          const aUtil = a.includes('_util');\n          const bUtil = b.includes('_util');\n          const aMem = a.includes('_mem');\n          const bMem = b.includes('_mem');\n\n          if (aUtil && !bUtil) return -1;\n          if (!aUtil && bUtil) return 1;\n          if (aMem && !bMem) return -1;\n          if (!aMem && bMem) return 1;\n\n          return 0;\n        })\n        .reduce((acc: { [key: string]: any }, key) => {\n          acc[key] = liveStat[key];\n          return acc;\n        }, {}),\n    [liveStat],\n  );\n\n  const displayMemoryUsage = (\n    current: string,\n    capacity: string,\n    decimalSize: number = 2,\n  ) => {\n    return `${convertBinarySizeUnit(current, 'g', decimalSize)?.numberFixed ?? '-'} / ${\n      convertBinarySizeUnit(capacity, 'g', decimalSize)?.numberFixed ?? '-'\n    } GiB`;\n  };\n\n  return (\n    <Row gutter={[16, 16]}>\n      {sortedLiveStat?.cpu_util ? (\n        <Col xs={24} sm={12}>\n          <Flex direction=\"column\" align=\"stretch\">\n            {size === 'default' ? (\n              <>\n                <Typography.Text>\n                  {mergedResourceSlots?.['cpu']?.human_readable_name}\n                </Typography.Text>\n                <BAIProgressWithLabel\n                  percent={sortedLiveStat?.cpu_util?.pct || 0}\n                  valueLabel={\n                    toFixedFloorWithoutTrailingZeros(\n                      liveStat?.cpu_util?.pct || 0,\n                      1,\n                    ) + '%'\n                  }\n                  strokeColor=\"#BFBFBF\"\n                  progressStyle={{ border: 'none' }}\n                />\n              </>\n            ) : (\n              <Tooltip\n                title={mergedResourceSlots?.['cpu']?.human_readable_name}\n              >\n                <Progress\n                  format={(percent) => (\n                    <Typography.Text style={{ fontSize: token.fontSizeSM }}>\n                      {percent + '%'}\n                    </Typography.Text>\n                  )}\n                  percent={\n                    _.toNumber(\n                      toFixedFloorWithoutTrailingZeros(\n                        sortedLiveStat?.cpu_util?.pct,\n                        1,\n                      ),\n                    ) || 0\n                  }\n                  strokeColor=\"#BFBFBF\"\n                  strokeLinecap=\"butt\"\n                />\n              </Tooltip>\n            )}\n          </Flex>\n        </Col>\n      ) : null}\n\n      {sortedLiveStat?.mem ? (\n        <Col xs={24} sm={12}>\n          <Flex direction=\"column\" align=\"stretch\">\n            {size === 'default' ? (\n              <>\n                <Flex justify=\"between\">\n                  <Typography.Text>\n                    {mergedResourceSlots?.['mem']?.human_readable_name}\n                  </Typography.Text>\n                  <Typography.Text\n                    type=\"secondary\"\n                    style={{ fontSize: token.fontSizeSM }}\n                  >\n                    {displayMemoryUsage(\n                      sortedLiveStat?.mem?.current,\n                      // mem.capacity does not report total amount of memory allocated to\n                      // the container, so, we just replace with the value of occupied slot.\n                      // NOTE: this assumes every containers in a session have the same\n                      // amount of memory.\n                      occupiedSlots?.mem,\n                    )}\n                  </Typography.Text>\n                </Flex>\n                <BAIProgressWithLabel\n                  percent={sortedLiveStat?.mem?.pct || 0}\n                  valueLabel={\n                    toFixedFloorWithoutTrailingZeros(\n                      liveStat?.mem?.pct || 0,\n                      1,\n                    ) + '%'\n                  }\n                  strokeColor=\"#BFBFBF\"\n                  progressStyle={{ border: 'none' }}\n                />\n              </>\n            ) : (\n              <Tooltip\n                title={\n                  <Flex direction=\"column\" align=\"stretch\">\n                    {mergedResourceSlots?.['mem']?.human_readable_name}\n                    <br />\n                    {displayMemoryUsage(\n                      sortedLiveStat?.mem?.current,\n                      // mem.capacity does not report total amount of memory allocated to\n                      // the container, so, we just replace with the value of occupied slot.\n                      // NOTE: this assumes every containers in a session have the same\n                      // amount of memory.\n                      occupiedSlots?.mem,\n                    )}\n                  </Flex>\n                }\n              >\n                <Progress\n                  format={(percent) => (\n                    <Typography.Text style={{ fontSize: token.fontSizeSM }}>\n                      {percent + '%'}\n                    </Typography.Text>\n                  )}\n                  percent={\n                    _.toNumber(\n                      toFixedFloorWithoutTrailingZeros(\n                        sortedLiveStat?.mem?.pct,\n                        1,\n                      ),\n                    ) || 0\n                  }\n                  strokeColor=\"#BFBFBF\"\n                  strokeLinecap=\"butt\"\n                />\n              </Tooltip>\n            )}\n          </Flex>\n        </Col>\n      ) : null}\n\n      {_.map(\n        _.omit(sortedLiveStat, 'cpu_util', 'cpu_used', 'mem'),\n        (value, key) => {\n          const deviceName = _.split(key, '_')[0];\n          const deviceKey = _.find(resourceSlotNames, (name) =>\n            _.includes(name, deviceName),\n          );\n\n          return deviceKey ? (\n            <Col xs={24} sm={12} key={key}>\n              <Flex direction=\"column\" align=\"stretch\">\n                {size === 'default' ? (\n                  <>\n                    <Flex justify=\"between\">\n                      <Typography.Text>\n                        {mergedResourceSlots?.[deviceKey]?.human_readable_name}\n                        <Typography.Text type=\"secondary\">\n                          {_.includes(key, 'util') && ' (util)'}\n                          {_.includes(key, 'mem') && ' (mem)'}\n                        </Typography.Text>\n                      </Typography.Text>\n                      {_.includes(key, 'mem') ? (\n                        <Typography.Text\n                          type=\"secondary\"\n                          style={{ fontSize: token.fontSizeSM }}\n                        >\n                          {displayMemoryUsage(value?.current, value?.capacity)}\n                        </Typography.Text>\n                      ) : null}\n                    </Flex>\n\n                    <BAIProgressWithLabel\n                      percent={value.pct || 0}\n                      valueLabel={\n                        toFixedFloorWithoutTrailingZeros(value.pct || 0, 1) +\n                        '%'\n                      }\n                      strokeColor=\"#BFBFBF\"\n                      progressStyle={{ border: 'none' }}\n                    />\n                  </>\n                ) : (\n                  <Tooltip\n                    title={\n                      <Flex direction=\"column\" align=\"stretch\">\n                        {mergedResourceSlots?.[deviceKey]?.human_readable_name}\n                        {_.includes(key, 'mem') && (\n                          <>\n                            (mem)\n                            <br />\n                            {displayMemoryUsage(\n                              value?.current,\n                              value?.capacity,\n                            )}\n                          </>\n                        )}\n                      </Flex>\n                    }\n                  >\n                    <Progress\n                      format={(percent) => (\n                        <Typography.Text style={{ fontSize: token.fontSizeSM }}>\n                          {percent + '%'}\n                        </Typography.Text>\n                      )}\n                      percent={\n                        _.toNumber(\n                          toFixedFloorWithoutTrailingZeros(value?.pct, 1),\n                        ) || 0\n                      }\n                      strokeColor=\"#BFBFBF\"\n                      strokeLinecap=\"butt\"\n                    />\n                  </Tooltip>\n                )}\n              </Flex>\n            </Col>\n          ) : null;\n        },\n      )}\n      <Col span={24}>\n        <Flex justify=\"end\">\n          <Typography.Text>\n            {`I/O Read: ${convertDecimalSizeUnit(sortedLiveStat?.io_read?.current, 'm')?.numberUnit ?? '-'}B / Write: ${convertDecimalSizeUnit(sortedLiveStat?.io_write?.current, 'm')?.numberUnit ?? '-'}B`}\n          </Typography.Text>\n        </Flex>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SessionUsageMonitor;\n","/**\n * @generated SignedSource<<7704b96e01528e85cdc0f1230b0069c0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type SessionDetailContentLegacyQuery$variables = {\n  uuid: string;\n};\nexport type SessionDetailContentLegacyQuery$data = {\n  readonly session_for_project_id: {\n    readonly group_id: string | null | undefined;\n  } | null | undefined;\n};\nexport type SessionDetailContentLegacyQuery = {\n  response: SessionDetailContentLegacyQuery$data;\n  variables: SessionDetailContentLegacyQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"uuid\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"uuid\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"group_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"SessionDetailContentLegacyQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session_for_project_id\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"SessionDetailContentLegacyQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session_for_project_id\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"1c0255a2836eb7e492954c7ab0212c7f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"SessionDetailContentLegacyQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query SessionDetailContentLegacyQuery(\\n  $uuid: UUID!\\n) {\\n  session_for_project_id: compute_session(id: $uuid) {\\n    group_id\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d6a0dfbccdec8393f1a058dab48a0757\";\n\nexport default node;\n","/**\n * @generated SignedSource<<41fe1bd743df438e6ef5f85de640aca0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionDetailContentQuery$variables = {\n  id: any;\n  project_id: string;\n  uuid: string;\n};\nexport type SessionDetailContentQuery$data = {\n  readonly legacy_session: {\n    readonly architecture: string | null | undefined;\n    readonly image: string | null | undefined;\n    readonly mounts: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly user_email: string | null | undefined;\n  } | null | undefined;\n  readonly session: {\n    readonly agent_ids: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly created_at: string;\n    readonly id: string;\n    readonly kernel_nodes: {\n      readonly edges: ReadonlyArray<{\n        readonly node: {\n          readonly id: string;\n          readonly image: {\n            readonly architecture: string | null | undefined;\n            readonly id: string;\n            readonly name: string | null | undefined;\n            readonly tag: string | null | undefined;\n          } | null | undefined;\n        } | null | undefined;\n      } | null | undefined>;\n    } | null | undefined;\n    readonly name: string | null | undefined;\n    readonly project_id: string | null | undefined;\n    readonly requested_slots: string | null | undefined;\n    readonly resource_opts: string | null | undefined;\n    readonly row_id: string | null | undefined;\n    readonly scaling_group: string | null | undefined;\n    readonly status: string | null | undefined;\n    readonly terminated_at: string | null | undefined;\n    readonly user_id: string | null | undefined;\n    readonly vfolder_mounts: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerCommitModalFragment\" | \"ContainerLogModalFragment\" | \"EditableSessionNameFragment\" | \"SessionActionButtonsFragment\" | \"SessionReservationFragment\" | \"SessionStatusTagFragment\" | \"SessionTypeTagFragment\" | \"SessionUsageMonitorFragment\">;\n  } | null | undefined;\n};\nexport type SessionDetailContentQuery = {\n  response: SessionDetailContentQuery$data;\n  variables: SessionDetailContentQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"uuid\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project_id\",\n    \"variableName\": \"project_id\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"row_id\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project_id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"user_id\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_opts\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"architecture\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"ImageNode\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"image\",\n  \"plural\": false,\n  \"selections\": [\n    (v4/*: any*/),\n    (v6/*: any*/),\n    (v11/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"tag\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"vfolder_mounts\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"terminated_at\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"scaling_group\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"agent_ids\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"requested_slots\",\n  \"storageKey\": null\n},\nv19 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"uuid\"\n  }\n],\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"mounts\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"user_email\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"SessionDetailContentQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"KernelConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"kernel_nodes\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"KernelEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"KernelNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v4/*: any*/),\n                      (v12/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v13/*: any*/),\n          {\n            \"kind\": \"RequiredField\",\n            \"field\": (v14/*: any*/),\n            \"action\": \"NONE\",\n            \"path\": \"session.created_at\"\n          },\n          (v15/*: any*/),\n          (v16/*: any*/),\n          (v17/*: any*/),\n          (v18/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionStatusTagFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionActionButtonsFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionTypeTagFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"EditableSessionNameFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionReservationFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ContainerLogModalFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionUsageMonitorFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ContainerCommitModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"legacy_session\",\n        \"args\": (v19/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v20/*: any*/),\n          (v21/*: any*/),\n          (v22/*: any*/),\n          (v11/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"SessionDetailContentQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"KernelConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"kernel_nodes\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"KernelEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"KernelNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v4/*: any*/),\n                      (v12/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"container_id\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"agent_id\",\n                        \"storageKey\": null\n                      },\n                      (v5/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cluster_idx\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cluster_role\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"live_stat\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"occupied_slots\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v15/*: any*/),\n          (v16/*: any*/),\n          (v17/*: any*/),\n          (v18/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"status_info\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"type\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"access_key\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"service_ports\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"commit_status\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"priority\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"legacy_session\",\n        \"args\": (v19/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v20/*: any*/),\n          (v21/*: any*/),\n          (v22/*: any*/),\n          (v11/*: any*/),\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"971077fc06b23d5d31ceab8a9804a7e1\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"SessionDetailContentQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query SessionDetailContentQuery(\\n  $id: GlobalIDField!\\n  $uuid: UUID!\\n  $project_id: UUID!\\n) {\\n  session: compute_session_node(id: $id, project_id: $project_id) {\\n    id\\n    row_id\\n    name\\n    project_id\\n    user_id\\n    resource_opts\\n    status\\n    kernel_nodes {\\n      edges {\\n        node {\\n          id\\n          image {\\n            id\\n            name\\n            architecture\\n            tag\\n          }\\n        }\\n      }\\n    }\\n    vfolder_mounts\\n    created_at\\n    terminated_at\\n    scaling_group\\n    agent_ids\\n    requested_slots\\n    ...SessionStatusTagFragment\\n    ...SessionActionButtonsFragment\\n    ...SessionTypeTagFragment\\n    ...EditableSessionNameFragment\\n    ...SessionReservationFragment\\n    ...ContainerLogModalFragment\\n    ...SessionUsageMonitorFragment\\n    ...ContainerCommitModalFragment\\n  }\\n  legacy_session: compute_session(id: $uuid) {\\n    image\\n    mounts\\n    user_email\\n    architecture\\n    id\\n  }\\n}\\n\\nfragment ContainerCommitModalFragment on ComputeSessionNode {\\n  id\\n  name\\n  row_id\\n}\\n\\nfragment ContainerLogModalFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  name\\n  status\\n  access_key\\n  kernel_nodes {\\n    edges {\\n      node {\\n        id\\n        row_id\\n        container_id\\n        cluster_idx\\n        cluster_role\\n      }\\n    }\\n  }\\n}\\n\\nfragment EditableSessionNameFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  name\\n  priority\\n  user_id\\n  status\\n}\\n\\nfragment SessionActionButtonsFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  type\\n  status\\n  access_key\\n  service_ports\\n  commit_status\\n  ...TerminateSessionModalFragment\\n  ...ContainerLogModalFragment\\n  ...ContainerCommitModalFragment\\n}\\n\\nfragment SessionReservationFragment on ComputeSessionNode {\\n  id\\n  created_at\\n  terminated_at\\n}\\n\\nfragment SessionStatusTagFragment on ComputeSessionNode {\\n  id\\n  name\\n  status\\n  status_info\\n}\\n\\nfragment SessionTypeTagFragment on ComputeSessionNode {\\n  type\\n}\\n\\nfragment SessionUsageMonitorFragment on ComputeSessionNode {\\n  kernel_nodes {\\n    edges {\\n      node {\\n        live_stat\\n        occupied_slots\\n        id\\n      }\\n    }\\n  }\\n}\\n\\nfragment TerminateSessionModalFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  name\\n  scaling_group\\n  kernel_nodes {\\n    edges {\\n      node {\\n        container_id\\n        agent_id\\n        id\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"12dba14d97770690faabeca4052f1f9a\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b2e03ee4c0f214048203611ced0c343d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionUsageMonitorFragment$data = {\n  readonly kernel_nodes: {\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly live_stat: string | null | undefined;\n        readonly occupied_slots: string | null | undefined;\n      } | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n  readonly \" $fragmentType\": \"SessionUsageMonitorFragment\";\n};\nexport type SessionUsageMonitorFragment$key = {\n  readonly \" $data\"?: SessionUsageMonitorFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionUsageMonitorFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionUsageMonitorFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KernelConnection\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"kernel_nodes\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"KernelEdge\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"edges\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"KernelNode\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"node\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"live_stat\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"occupied_slots\",\n                  \"storageKey\": null\n                }\n              ],\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"62951e4aee90e7e894e7f47a02b84dab\";\n\nexport default node;\n","import _ from 'lodash';\n\n/**\n * Escapes a value for CSV formatting.\n *\n * @param value - The value to escape.\n * @returns The escaped value.\n */\nfunction escapeCsvValue(value: any) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  if (typeof value === 'number' || typeof value === 'boolean') {\n    return String(value);\n  }\n\n  // Convert non-string values to string using JSON.stringify\n  value = _.isString(value) ? value : JSON.stringify(value);\n\n  // Replace double quotes within the value with two double quotes\n  return `\"${value.replace(/\"/g, '\"\"')}\"`;\n}\n\n/**\n * Converts an array of JSON objects to a CSV string.\n *\n * @param data - The array of JSON objects to convert.\n * @param format_rules - The formatting rules for each property in the JSON objects.\n * @returns The CSV string representation of the JSON objects.\n */\nexport const JSONToCSVBody = <T>(\n  data: T[],\n  format_rules?: {\n    [key in keyof T]?: (value: any) => any;\n  },\n) => {\n  const displayedData = _.map(data, (row) => {\n    return _.omit(row as object, '__fragments', '__fragmentOwner', '__id');\n  });\n\n  const CSVTitle = _.keys(displayedData[0]);\n  const CSVData = _.map(displayedData, (row) => {\n    return _.map(row, (value, key) => {\n      if (format_rules?.[key as keyof T]) {\n        return format_rules[key as keyof T]?.(value) || value;\n      }\n      return value;\n    });\n  });\n\n  const csvContent = CSVData.map((row) =>\n    row.map(escapeCsvValue).join(','),\n  ).join('\\n');\n  const csvBody = [CSVTitle.map(escapeCsvValue).join(','), csvContent].join(\n    '\\n',\n  );\n\n  return csvBody;\n};\n\n/**\n * Download a file from the given blob.\n * @param {Blob} blob - The file content.\n * @param {string} filename - The name of the file.\n */\n\nexport const downloadBlob = (blob: Blob, filename: string) => {\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.click();\n  URL.revokeObjectURL(url);\n};\n\nexport const exportCSVWithFormattingRules = <T>(\n  data: T[],\n  filename: string,\n  format_rules?: {\n    [key in keyof T]?: (value: any) => any;\n  },\n) => {\n  const bodyStr = JSONToCSVBody(data, format_rules);\n  const blob = new Blob([bodyStr], { type: 'text/csv' });\n  downloadBlob(blob, `${filename}.csv`);\n};\n","import { useTranslation } from 'react-i18next';\n\nconst errorMessageTable: {\n  [key: string]: string;\n} = {\n  \"Cannot read property 'map' of null\": 'error.APINotSupported',\n  'TypeError: NetworkError when attempting to fetch resource.':\n    'error.NetworkConnectionFailed', //_t('error.NetworkConnectionFailed')\n  // Login\n  'Login failed. Check login information.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'User credential mismatch.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'Authentication failed. Check information and manager status.':\n    'error.AuthenticationFailed', //_t('error.AuthenticationFailed')\n  'Too many failed login attempts': 'error.TooManyLoginFailures', //_t('error.TooManyLoginFailures')\n  // virtual folders\n  'server responded failure: 400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  '400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - One of your accessible vfolders already has the name you requested.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - You cannot create more vfolders.':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (You cannot create more vfolders.)':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Cannot change the options of a vfolder that is not owned by myself.':\n    'error.CannotChangeVirtualFolderOption', //_t('error.CannotChangeVirtualFolderOption')\n  'server responded failure: 403 Forbidden - Cannot share private dot-prefixed vfolders.':\n    'error.CannotSharePrivateAutomountFolder', //_t('error.CannotSharePrivateAutomountFolder')\n  'server responded failure: 404 Not Found - No such vfolder invitation.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  'server responded failure: 404 Not Found - No such user.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  // Resource\n  'server responded failure: 412 Precondition Failed - You have reached your resource limit.':\n    'error.ReachedResourceLimit', //_t('error.ReachedResourceLimit')\n  // User\n  \"Cannot read property 'split' of undefined\": 'error.UserHasNoGroup', //_t('error.UserHasNoGroup')\n};\nconst regexTable: {\n  [key: string]: string;\n} = {\n  '\\\\w*not found matched token with email\\\\w*': 'error.InvalidSignupToken', //_t('error.InvalidSignupToken')\n  '\\\\w*Access key not found\\\\w*': 'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  '\\\\w*401 Unauthorized - Credential/signature mismatch\\\\w*':\n    'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  'integrity error: duplicate key value violates unique constraint \"pk_resource_presets\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ResourcePolicyAlreadyExist', //_t('error.ResourcePolicyAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"pk_scaling_groups\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ScalingGroupAlreadyExist', //_t('error.ScalingGroupAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"uq_users_username\"[\\\\n]DETAIL:  Key \\\\(username\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.UserNameAlreadyExist', //_t('error.UserNameAlreadyExist')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (Your resource quota is exceeded. (cpu=24 mem=512g cuda.shares=80))':\n    'error.ResourceLimitExceed', //_t('error.ResourceLimitExceed')\n  '\\\\w*Key \\\\(name\\\\)=\\\\(.+\\\\) is still referenced from table \"keypairs\"\\\\.\\\\w*':\n    'error.ResourcePolicyStillReferenced', //_t('error.ResourcePolicyStillReferenced')\n  'Your resource request is smaller than the minimum required by the image. (\\\\w*)':\n    'error.SmallerResourceThenImageRequires', //_t('error.SmallerResourceThenImageRequires')\n};\n\nexport const usePainKiller = () => {\n  const { t } = useTranslation();\n  const relieve = (msg: string) => {\n    if (typeof msg === 'undefined') {\n      if (\n        // @ts-ignore\n        globalThis.backendaiclient === undefined ||\n        // @ts-ignore\n        globalThis.backendaiclient === null\n      ) {\n        return '_DISCONNECTED';\n      } else {\n        return 'Problem occurred.';\n      }\n    }\n    // @ts-ignore\n    if (globalThis.backendaiwebui.debug === true) {\n      return msg;\n    }\n    if ({}.hasOwnProperty.call(errorMessageTable, msg)) {\n      return t(errorMessageTable[msg]);\n    } else {\n      for (const regex of Object.keys(regexTable)) {\n        if (RegExp(regex).test(msg)) {\n          return t(regexTable[regex]);\n        }\n      }\n      return msg; // Bypass message. It will log on log panel\n    }\n  };\n  return { relieve };\n};\n"],"names":["_ref","title","valueLabel","percent","width","strokeColor","labelStyle","progressStyle","size","token","theme","useToken","fontSize","fontSizeSM","fontSizeLG","_jsxs","Flex","style","padding","border","colorBorder","borderRadius","backgroundColor","colorBgContainerDisabled","_","flex","direction","align","children","_jsx","height","position","left","top","colorSuccess","opacity","zIndex","overflow","justify","Typography","Text","color","colorTextDisabled","undefined","_session$kernel_nodes","_session$kernel_nodes2","_$find","_kernelNodes$","_session$row_id$split","_session$kernel_nodes3","sessionFrgmt","modalProps","baiClient","useSuspendedBackendaiClient","userRole","useCurrentUserRole","session","useFragment","_ContainerLogModalFragment","require","kernelNodes","kernel_nodes","edges","map","e","node","selectedKernelId","setSelectedKernelId","useState","cluster_role","row_id","useEffect","open","data","logs","refetch","isPending","isRefetching","dataUpdatedAt","useTanQuery","queryKey","access_key","queryFn","async","get_logs","then","req","result","staleTime","lastLineNumbers","resetPrevious","resetPreviousLineNumber","factory","deps","initialPrev","arguments","length","prevRef","useRef","prevResetKey","setPrevResetKey","current","useMemo","memoizedPrev","previous","useMemoWithPrevious","split","md","Grid","useBreakpoint","t","useTranslation","BAIModal","maxWidth","gap","Title","level","margin","flexShrink","_Fragment","fontWeight","ellipsis","name","fontFamily","copyable","text","tooltips","styles","header","body","maxHeight","footer","destroyOnClose","wrap","BAISelect","value","onChange","autoSelectOption","options","sortBy","_e$node","_e$node2","cluster_idx","_e$node3","_e$node4","_e$node5","_e$node6","_e$node7","label","type","substring","Divider","Tooltip","Button","icon","DownloadIcon","disabled","onClick","blob","Blob","downloadBlob","Date","toISOString","loading","ReloadOutlined","alignSelf","ScrollFollow","startFollowing","render","_ref2","follow","onScroll","LazyLog","caseInsensitive","enableSearch","enableSearchNavigation","selectableLines","highlight","extraLines","component","Component","editable","editableOfProps","otherProps","_EditableSessionNameFragment","optimisticName","setOptimisticName","userInfo","useCurrentUserInfo","commitEditMutation","isPendingEditMutation","useMutation","_EditableSessionNameMutation","isEditing","setIsEditing","isNotPreparingCategoryStatus","includes","status","isEditingAllowed","uuid","user_id","onStart","triggerType","colorTextTertiary","Form","onFinish","values","sessionName","variables","input","id","onCompleted","response","errors","onError","error","initialValues","Item","rules","getSessionNameRules","Input","suffix","CornerDownLeftIcon","autoFocus","onKeyDown","key","onRequestClose","formRef","upsertNotification","useSetBAINotification","isConfirmLoading","setIsConfirmLoading","_ContainerCommitModalFragment","onOk","convertSessionToImage","_formRef$current","validateFields","_session$name","computeSession","imageName","res","backgroundTask","taskId","task_id","statusDescriptions","pending","resolved","rejected","duration","message","catch","err","Error","finally","console","log","okButtonProps","onCancel","Descriptions","bordered","column","marginTop","marginBottom","ref","required","min","max","pattern","placeholder","useStyle","createStyles","css","custom","paddingMD","sendRequest","resp","rqst","method","fetch","uri","contentType","headers","get","ok","startsWith","json","getProxyURL","resourceGroupIdOfSession","projectId","url","globalThis","__local_proxy","_config","proxyURL","wsproxyVersion","debug","_globalThis$appLaunch","_globalThis$appLaunch2","_globalThis$appLaunch3","_globalThis$appLaunch4","appLauncher","forceUseV1Proxy","checked","forceUseV2Proxy","isElectron","scalingGroup","getWsproxyVersion","wsproxy_version","getWSProxyVersion","URL","href","_sessions$2","sessionFrgmts","sessions","_TerminateSessionModalFragment","isForce","setIsForce","currentProject","useCurrentProjectValue","terminateMutation","useTanMutation","mutationFn","accessKey","currentProjectId","scaling_group","localStorage","getItem","searchParams","set","code","credentials","mode","terminateApp","statusCode","destroy","relayEvn","useRelayEnvironment","painKiller","usePainKiller","centered","confirmLoading","_sessions$","mutateAsync","relieve","description","event","CustomEvent","detail","document","dispatchEvent","fetchQuery","_TerminateSessionModalRefetchQuery","project_id","toPromise","okText","okType","className","mark","Checkbox","target","Card","Paragraph","s","_s$kernel_nodes","flatten","groupBy","kernels","agentId","k","container_id","isActive","props","runTerminal","sessionId","showLauncher","params","_SessionActionButtonsFragment","openTerminateModal","setOpenTerminateModal","openLogModal","setOpenLogModal","openContainerCommitModal","setOpenContainerCommitModal","TerminalIcon","TerminateSessionModal","ScrollTextIcon","ContainerLogModal","supports","enableContainerCommit","DeliveredProcedureOutlined","ContainerCommitModal","PowerOffIcon","colorError","_SessionReservationFragment","dayjs","created_at","format","BAIIntervalView","callback","utils","elapsedTime","terminated_at","delay","intervalValue","DoubleTag","statusTagColor","RESTARTING","PREPARING","PREPARED","CREATING","PULLING","RUNNING","PENDING","SCHEDULED","ERROR","isTransitional","statusInfoTagColor","_SessionStatusTagFragment","status_info","Tag","LoadingOutlined","spin","marginLeft","borderStyle","colorTextSecondary","typeTagColor","INTERACTIVE","BATCH","INFERENCE","_SessionTypeTagFragment","v0","v1","hash","_legacy_session$mount","fetchKey","session_for_project_id","useLazyLoadQuery","_SessionDetailContentLegacyQuery","fetchPolicy","legacy_session","_SessionDetailContentQuery","toGlobalId","group_id","imageFullName","image","architecture","Alert","showIcon","EditableSessionName","Group","SessionActionButtons","span","user_email","contentStyle","display","marginSM","SessionStatusTag","SessionTypeTag","ImageMetaIcon","SessionKernelTags","mounts","join","ResourceNumbersOfSession","resource","JSON","parse","requested_slots","agent_ids","SessionReservation","SessionUsageMonitor","drawerProps","isPendingReload","startReloadTransition","useTransition","updateFetchKey","useUpdatableState","Drawer","keyboard","onClose","_drawerProps$onClose","call","extra","Suspense","fallback","Skeleton","SessionDetailContent","_$get","_mergedResourceSlots$","_sortedLiveStat$cpu_u","_liveStat$cpu_util","_mergedResourceSlots$2","_sortedLiveStat$cpu_u2","_mergedResourceSlots$3","_sortedLiveStat$mem","_sortedLiveStat$mem2","_liveStat$mem","_mergedResourceSlots$4","_sortedLiveStat$mem3","_sortedLiveStat$mem4","_convertDecimalSizeUn","_convertDecimalSizeUn2","_sortedLiveStat$io_re","_convertDecimalSizeUn3","_convertDecimalSizeUn4","_sortedLiveStat$io_wr","mergedResourceSlots","useResourceSlotsDetails","sessionNode","_SessionUsageMonitorFragment","firstKernelNode","occupiedSlots","_firstKernelNode$occu","occupied_slots","resourceSlotNames","liveStat","sortedLiveStat","Object","keys","sort","a","b","aUtil","bUtil","aMem","bMem","reduce","acc","displayMemoryUsage","capacity","_convertBinarySizeUni","_convertBinarySizeUni2","_convertBinarySizeUni3","_convertBinarySizeUni4","decimalSize","convertBinarySizeUnit","numberFixed","Row","gutter","cpu_util","Col","xs","sm","human_readable_name","BAIProgressWithLabel","pct","toFixedFloorWithoutTrailingZeros","Progress","strokeLinecap","mem","_mergedResourceSlots$5","_mergedResourceSlots$6","deviceName","deviceKey","convertDecimalSizeUnit","io_read","numberUnit","io_write","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","escapeCsvValue","String","stringify","replace","filename","createObjectURL","createElement","download","click","revokeObjectURL","exportCSVWithFormattingRules","format_rules","bodyStr","JSONToCSVBody","displayedData","row","CSVTitle","csvContent","_format_rules","errorMessageTable","regexTable","msg","backendaiclient","backendaiwebui","hasOwnProperty","regex","RegExp","test"],"sourceRoot":""}