{"version":3,"file":"static/js/9781.32d6659a.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/antd@5.20.0_date-fns@2.30.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/antd/es/auto-complete/index.js","components/BAIPropertyFilter.tsx","components/EndpointOwnerInfo.tsx","components/EndpointStatusTag.tsx","components/TableColumnsSettingModal.tsx","components/__generated__/EndpointOwnerInfoFragment.graphql.ts","components/__generated__/EndpointStatusTagFragment.graphql.ts","../node_modules/.pnpm/ahooks@3.8.0_react@18.3.1/node_modules/ahooks/es/useRafInterval/index.js","pages/EndpointListPage.tsx","pages/__generated__/EndpointListPageQuery.graphql.ts"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport genPurePanel from '../_util/PurePanel';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Select from '../select';\nconst {\n  Option\n} = Select;\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return (child === null || child === void 0 ? void 0 : child.type) && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\nconst AutoComplete = (props, ref) => {\n  var _a;\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    popupClassName,\n    dropdownClassName,\n    children,\n    dataSource\n  } = props;\n  const childNodes = toArray(children);\n  // ============================= Input =============================\n  let customizeInput;\n  if (childNodes.length === 1 && /*#__PURE__*/React.isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    [customizeInput] = childNodes;\n  }\n  const getInputElement = customizeInput ? () => customizeInput : undefined;\n  // ============================ Options ============================\n  let optionChildren;\n  // [Legacy] convert `children` or `dataSource` into option children\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(item => {\n      if ( /*#__PURE__*/React.isValidElement(item)) {\n        return item;\n      }\n      switch (typeof item) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n        case 'object':\n          {\n            const {\n              value: optionValue\n            } = item;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n        default:\n          return undefined;\n      }\n    }) : [];\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('AutoComplete');\n    warning.deprecated(!('dataSource' in props), 'dataSource', 'options');\n    process.env.NODE_ENV !== \"production\" ? warning(!customizeInput || !('size' in props), 'usage', 'You need to control style self instead of setting `size` when using customize input.') : void 0;\n    warning.deprecated(!dropdownClassName, 'dropdownClassName', 'popupClassName');\n  }\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('SelectLike', (_a = props.dropdownStyle) === null || _a === void 0 ? void 0 : _a.zIndex);\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    ref: ref,\n    suffixIcon: null\n  }, omit(props, ['dataSource', 'dropdownClassName']), {\n    prefixCls: prefixCls,\n    popupClassName: popupClassName || dropdownClassName,\n    dropdownStyle: Object.assign(Object.assign({}, props.dropdownStyle), {\n      zIndex\n    }),\n    className: classNames(`${prefixCls}-auto-complete`, className),\n    mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n    // Internal api\n    getInputElement\n  }), optionChildren);\n};\nconst RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(RefAutoComplete);\nRefAutoComplete.Option = Option;\nRefAutoComplete._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  RefAutoComplete.displayName = 'AutoComplete';\n}\nexport default RefAutoComplete;","import useControllableState from '../hooks/useControllableState';\nimport Flex from './Flex';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useDynamicList } from 'ahooks';\nimport {\n  AutoComplete,\n  AutoCompleteProps,\n  Button,\n  GetRef,\n  Input,\n  Select,\n  Space,\n  Tag,\n  Tooltip,\n  theme,\n} from 'antd';\nimport _ from 'lodash';\nimport React, {\n  ComponentProps,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\n\n//github.com/lablup/backend.ai/blob/main/src/ai/backend/manager/models/minilang/queryfilter.py\ntype FilterProperty = {\n  key: string;\n  // operators: Array<string>;\n  defaultOperator?: string;\n  propertyLabel: string;\n  // TODO: support array, number\n  type: 'string' | 'boolean';\n  options?: AutoCompleteProps['options'];\n};\nexport interface BAIPropertyFilterProps\n  extends Omit<ComponentProps<typeof Flex>, 'value' | 'onChange'> {\n  value?: string;\n  onChange?: (value: string) => void;\n  defaultValue?: string;\n  filterProperties: Array<FilterProperty>;\n  loading?: boolean;\n}\n\ninterface FilterInput {\n  property: string;\n  operator: string;\n  value: string;\n  label?: ReactNode;\n  type: FilterProperty['type'];\n  propertyLabel: string;\n}\n\nconst DEFAULT_OPERATOR_OF_TYPES = {\n  string: 'ilike',\n  boolean: '==',\n};\n\nconst DEFAULT_OPTIONS_OF_TYPES: {\n  [key: string]: AutoCompleteProps['options'] | undefined;\n} = {\n  boolean: [\n    {\n      label: 'True',\n      value: 'true',\n    },\n    {\n      label: 'False',\n      value: 'false',\n    },\n  ],\n  string: undefined,\n};\n\nfunction trimFilterValue(filterValue: string): string {\n  return filterValue.replace(/^%|%$/g, '');\n}\n\n/**\n * Parses the filter value and returns an object containing the property, operator, and value.\n * @param filter - The filter string to parse.\n * @returns An object containing the parsed property, operator, and value.\n */\nexport function parseFilterValue(filter: string) {\n  // Split the filter string into an array of strings using a regular expression.\n  // The regular expression splits the string at whitespace characters, but ignores whitespace within double quotes.\n  const [property, ...rest] = filter.split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n  // Join the remaining strings in the array and split them again using the same regular expression.\n  // This extracts the operator and the value from the filter string.\n  const [operator, ...valueParts] = rest\n    .join(' ')\n    .split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n  // Join the value parts into a single string and remove any leading or trailing double quotes.\n  const value = valueParts.join(' ').replace(/^\"|\"$/g, '');\n\n  // Return an object containing the parsed property, operator, and value.\n  return { property, operator, value };\n}\n\nconst BAIPropertyFilter: React.FC<BAIPropertyFilterProps> = ({\n  filterProperties,\n  value: propValue,\n  onChange: propOnChange,\n  defaultValue,\n  loading,\n  ...containerProps\n}) => {\n  const [search, setSearch] = useControllableState({});\n  const autoCompleteRef = useRef<GetRef<typeof AutoComplete>>(null);\n  const [isOpenAutoComplete, setIsOpenAutoComplete] = useState(false);\n\n  const [value, setValue] = useControllableState<string | undefined>({\n    value: propValue,\n    defaultValue: defaultValue,\n    onChange: propOnChange,\n  });\n  const filtersFromValue = useMemo(() => {\n    if (value === undefined) return [];\n    const filters = value.split('&').map((filter) => filter.trim());\n    return filters.map((filter) => {\n      const { property, operator, value } = parseFilterValue(filter);\n      return {\n        property,\n        operator,\n        value,\n        propertyLabel:\n          _.find(filterProperties, (f) => f.key === property)?.propertyLabel ||\n          property,\n        type:\n          _.find(filterProperties, (f) => f.key === property)?.type || 'string',\n      };\n    });\n  }, [value, filterProperties]);\n\n  const { t } = useTranslation();\n  const options = _.map(filterProperties, (filterProperty) => {\n    return {\n      label: filterProperty.propertyLabel,\n      value: filterProperty.key,\n      filter: filterProperty,\n    };\n  });\n  const [selectedProperty, setSelectedProperty] = useState(options[0].filter);\n  const { list, remove, push, resetList, getKey } =\n    useDynamicList<FilterInput>(filtersFromValue);\n\n  const { token } = theme.useToken();\n\n  useEffect(() => {\n    if (list.length === 0) {\n      setValue(undefined);\n    } else {\n      setValue(\n        _.map(list, (item) => {\n          const valueStringInResult =\n            item.type === 'string' ? `\"${item.value}\"` : item.value;\n          return `${item.property} ${item.operator} ${valueStringInResult}`;\n        }).join(' & '),\n      );\n    }\n  }, [list, setValue]);\n\n  const onSearch = (value: string) => {\n    if (_.isEmpty(value)) return;\n    setSearch('');\n    const operator =\n      selectedProperty.defaultOperator ||\n      DEFAULT_OPERATOR_OF_TYPES[selectedProperty.type];\n    const filterValue =\n      operator === 'ilike' || operator === 'like' ? `%${value}%` : `${value}`;\n    push({\n      property: selectedProperty.key,\n      propertyLabel: selectedProperty.propertyLabel,\n      operator,\n      value: filterValue,\n      label: selectedProperty.options?.find((o) => o.value === value)?.label,\n      type: selectedProperty.type,\n    });\n  };\n  return (\n    <Flex direction=\"column\" gap={'xs'} style={{ flex: 1 }} align=\"start\">\n      <Space.Compact>\n        <Select\n          popupMatchSelectWidth={false}\n          options={options}\n          value={selectedProperty.key}\n          onChange={(value, options) => {\n            setSelectedProperty(_.castArray(options)[0].filter);\n          }}\n          onSelect={() => {\n            autoCompleteRef.current?.focus();\n            setIsOpenAutoComplete(true);\n          }}\n          showSearch\n          optionFilterProp=\"label\"\n        />\n        <AutoComplete\n          ref={autoCompleteRef}\n          value={search}\n          open={isOpenAutoComplete}\n          onDropdownVisibleChange={setIsOpenAutoComplete}\n          // https://ant.design/components/auto-complete#why-doesnt-the-text-composition-system-work-well-with-onsearch-in-controlled-mode\n          // onSearch={(value) => {}}\n          onSelect={onSearch}\n          onChange={(value) => {\n            setSearch(value);\n          }}\n          style={{\n            minWidth: 200,\n          }}\n          // @ts-ignore\n          options={_.filter(\n            selectedProperty.options ||\n              DEFAULT_OPTIONS_OF_TYPES[selectedProperty.type],\n            (option) => {\n              return _.isEmpty(search)\n                ? true\n                : option.label?.toString().includes(search);\n            },\n          )}\n          placeholder={t('propertyFilter.placeHolder')}\n        >\n          <Input.Search onSearch={onSearch} allowClear />\n        </AutoComplete>\n      </Space.Compact>\n      {list.length > 0 && (\n        <Flex\n          direction=\"row\"\n          gap={'xs'}\n          wrap=\"wrap\"\n          style={{ alignSelf: 'stretch' }}\n        >\n          {_.map(list, (item, index) => {\n            return (\n              <Tag\n                key={getKey(index)}\n                closable\n                onClose={() => {\n                  remove(index);\n                }}\n                style={{ margin: 0 }}\n              >\n                {item.propertyLabel}:{' '}\n                {item.label || trimFilterValue(item.value)}\n              </Tag>\n            );\n          })}\n          {list.length > 1 && (\n            <Tooltip title={t('propertyFilter.ResetFilter')}>\n              <Button\n                size=\"small\"\n                icon={\n                  <CloseCircleOutlined\n                    style={{ color: token.colorTextSecondary }}\n                  />\n                }\n                type=\"text\"\n                onClick={() => {\n                  resetList([]);\n                }}\n              />\n            </Tooltip>\n          )}\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nexport default BAIPropertyFilter;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { EndpointOwnerInfoFragment$key } from './__generated__/EndpointOwnerInfoFragment.graphql';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Tooltip, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointOwnerInfoProps {\n  endpointFrgmt: EndpointOwnerInfoFragment$key | null | undefined;\n}\nconst EndpointOwnerInfo: React.FC<EndpointOwnerInfoProps> = ({\n  endpointFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointOwnerInfoFragment on Endpoint {\n        id\n        created_user_email @since(version: \"23.09.8\")\n        session_owner_email @since(version: \"23.09.8\")\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  if (!baiClient.supports('model-serving-endpoint-user-info'))\n    return baiClient.email || '';\n  if (endpoint?.created_user_email === endpoint?.session_owner_email)\n    return endpoint?.session_owner_email || '';\n  else\n    return (\n      <>\n        {endpoint?.session_owner_email || ''}\n        <Tooltip\n          title={t('modelService.ServiceDelegatedFrom', {\n            createdUser: endpoint?.created_user_email || '',\n            sessionOwner: endpoint?.session_owner_email || '',\n          })}\n        >\n          <Button\n            size=\"small\"\n            type=\"text\"\n            icon={<QuestionCircleOutlined />}\n            style={{ color: token.colorTextSecondary }}\n          />\n        </Tooltip>\n      </>\n    );\n};\n\nexport default EndpointOwnerInfo;\n","import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null | undefined;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","/**\n * @generated SignedSource<<c3b4377344123a47918ffc7a644565f7>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointOwnerInfoFragment$data = {\n  readonly created_user_email: string | null | undefined;\n  readonly id: string | null | undefined;\n  readonly session_owner_email: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointOwnerInfoFragment\";\n};\nexport type EndpointOwnerInfoFragment$key = {\n  readonly \" $data\"?: EndpointOwnerInfoFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointOwnerInfoFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_owner_email\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"fb21a441c8873205b5092ae1a5a7157e\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c89cfa560ee77c51f869290292774e99>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils';\nvar setRafInterval = function (callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setInterval(callback, delay)\n    };\n  }\n  var start = Date.now();\n  var handle = {\n    id: 0\n  };\n  var loop = function () {\n    var current = Date.now();\n    if (current - start >= delay) {\n      callback();\n      start = Date.now();\n    }\n    handle.id = requestAnimationFrame(loop);\n  };\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\nvar clearRafInterval = function (handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearInterval(handle.id);\n  }\n  cancelAnimationFrame(handle.id);\n};\nfunction useRafInterval(fn, delay, options) {\n  var immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  var fnRef = useLatest(fn);\n  var timerRef = useRef();\n  var clear = useCallback(function () {\n    if (timerRef.current) {\n      clearRafInterval(timerRef.current);\n    }\n  }, []);\n  useEffect(function () {\n    if (!isNumber(delay) || delay < 0) {\n      return;\n    }\n    if (immediate) {\n      fnRef.current();\n    }\n    timerRef.current = setRafInterval(function () {\n      fnRef.current();\n    }, delay);\n    return clear;\n  }, [delay]);\n  return clear;\n}\nexport default useRafInterval;","import BAIPropertyFilter from '../components/BAIPropertyFilter';\nimport EndpointOwnerInfo from '../components/EndpointOwnerInfo';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport Flex from '../components/Flex';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport { baiSignedRequestWithPromise, filterEmptyItem } from '../helper';\nimport {\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n  useWebUINavigate,\n} from '../hooks';\nimport { useCurrentUserInfo, useCurrentUserRole } from '../hooks/backendai';\n// import { getSortOrderByName } from '../hooks/reactPaginationQueryOptions';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport {\n  EndpointListPageQuery,\n  EndpointListPageQuery$data,\n} from './__generated__/EndpointListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useRafInterval } from 'ahooks';\nimport { useLocalStorageState } from 'ahooks';\nimport { Button, Table, Typography, theme, Radio, App } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n  useDeferredValue,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { Link } from 'react-router-dom';\nimport { StringParam, useQueryParam } from 'use-query-params';\n\nexport type Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<EndpointListPageQuery$data>['endpoint_list']\n    >['items']\n  >[0]\n>;\n\nexport const isDestroyingStatus = (\n  desiredSessionCount: number | null | undefined,\n  status: string | null | undefined,\n) => {\n  return (\n    (desiredSessionCount ?? 0) < 0 ||\n    _.includes(['DESTROYED', 'DESTROYING'], status ?? '')\n  );\n};\n\ntype LifecycleStage = 'created&destroying' | 'destroyed';\n\nconst EndpointListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const { message, modal } = App.useApp();\n  const baiClient = useSuspendedBackendaiClient();\n  const webuiNavigate = useWebUINavigate();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [selectedLifecycleStage, setSelectedLifecycleStage] =\n    useState<LifecycleStage>('created&destroying');\n  const deferredSelectedLifecycleStage = useDeferredValue(\n    selectedLifecycleStage,\n  );\n  const [paginationState, setPaginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const deferredPaginationState = useDeferredValue(paginationState);\n  const isPendingPaginationAndFilter =\n    selectedLifecycleStage !== deferredSelectedLifecycleStage ||\n    paginationState !== deferredPaginationState;\n  const lifecycleStageFilter =\n    deferredSelectedLifecycleStage === 'created&destroying'\n      ? `lifecycle_stage == \"created\" | lifecycle_stage == \"destroying\"`\n      : `lifecycle_stage == \"${deferredSelectedLifecycleStage}\"`;\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [isFilterPending, startFilterTransition] = useTransition();\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [optimisticDeletingId, setOptimisticDeletingId] = useState<\n    string | null\n  >();\n\n  const [filterStr, setFilterStr] = useQueryParam('filter', StringParam);\n  const [currentUser] = useCurrentUserInfo();\n  const currentUserRole = useCurrentUserRole();\n\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  const columns: ColumnsType<Endpoint> = [\n    {\n      title: t('modelService.EndpointName'),\n      dataIndex: 'endpoint_id',\n      key: 'endpointName',\n      fixed: 'left',\n      render: (endpoint_id, row) => (\n        <Link to={'/serving/' + endpoint_id}>{row.name}</Link>\n      ),\n    },\n    {\n      title: t('modelService.EndpointId'),\n      dataIndex: 'endpoint_id',\n      key: 'endpoint_id',\n      width: 310,\n      render: (endpoint_id) => (\n        <Typography.Text code>{endpoint_id}</Typography.Text>\n      ),\n    },\n    {\n      title: t('modelService.ServiceEndpoint'),\n      dataIndex: 'endpoint_id',\n      key: 'url',\n      render: (endpoint_id, row) =>\n        row.url ? (\n          <Typography.Link copyable href={row.url} target=\"_blank\">\n            {row.url}\n          </Typography.Link>\n        ) : (\n          '-'\n        ),\n    },\n    {\n      title: t('modelService.Controls'),\n      dataIndex: 'controls',\n      key: 'controls',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            style={\n              isDestroyingStatus(row?.desired_session_count, row?.status) ||\n              (!!row.created_user_email &&\n                row.created_user_email !== currentUser.email)\n                ? {\n                    color: token.colorTextDisabled,\n                  }\n                : {\n                    color: token.colorInfo,\n                  }\n            }\n            disabled={\n              isDestroyingStatus(row?.desired_session_count, row?.status) ||\n              (!!row.created_user_email &&\n                row.created_user_email !== currentUser.email)\n            }\n            onClick={() => {\n              webuiNavigate('/service/update/' + row.endpoint_id);\n            }}\n          />\n          <Button\n            type=\"text\"\n            icon={\n              <DeleteOutlined\n                style={\n                  isDestroyingStatus(row?.desired_session_count, row?.status)\n                    ? undefined\n                    : {\n                        color: token.colorError,\n                      }\n                }\n              />\n            }\n            loading={\n              terminateModelServiceMutation.isPending &&\n              optimisticDeletingId === row.endpoint_id\n            }\n            disabled={isDestroyingStatus(\n              row?.desired_session_count,\n              row?.status,\n            )}\n            onClick={() => {\n              modal.confirm({\n                title: t('dialog.ask.DoYouWantToDeleteSomething', {\n                  name: row.name,\n                }),\n                content: t('dialog.warning.CannotBeUndone'),\n                okText: t('button.Delete'),\n                okButtonProps: {\n                  danger: true,\n                  type: 'primary',\n                },\n                onOk: () => {\n                  setOptimisticDeletingId(row.endpoint_id);\n                  // FIXME: any better idea for handling result?\n                  row.endpoint_id &&\n                    terminateModelServiceMutation.mutate(row.endpoint_id, {\n                      onSuccess: (res) => {\n                        startRefetchTransition(() => {\n                          updateServicesFetchKey();\n                        });\n                        // FIXME: temporally refer to mutate input to message\n                        if (res.success) {\n                          message.success(\n                            t('modelService.ServiceTerminated', {\n                              name: row?.name,\n                            }),\n                          );\n                        } else {\n                          message.error(\n                            t('modelService.FailedToTerminateService'),\n                          );\n                        }\n                      },\n                      onError: (err) => {\n                        message.error(\n                          t('modelService.FailedToTerminateService'),\n                        );\n                      },\n                    });\n                },\n              });\n            }}\n          />\n        </Flex>\n      ),\n    },\n    {\n      title: t('modelService.Status'),\n      key: 'status',\n      render: (text, row) => <EndpointStatusTag endpointFrgmt={row} />,\n    },\n    ...(baiClient.is_admin\n      ? [\n          {\n            title: t('modelService.Owner'),\n            // created_user_email is referred by EndpointOwnerInfoFragment\n            dataIndex: 'created_user_email',\n            key: 'session_owner',\n            render: (_: string, endpoint_info: Endpoint) => (\n              <EndpointOwnerInfo endpointFrgmt={endpoint_info} />\n            ),\n          },\n        ]\n      : []),\n    {\n      title: t('modelService.CreatedAt'),\n      dataIndex: 'created_at',\n      key: 'createdAt',\n      render: (created_at) => {\n        return dayjs(created_at).format('ll LT');\n      },\n      defaultSortOrder: 'descend',\n      sortDirections: ['descend', 'ascend', 'descend'],\n      sorter: (a, b) => {\n        const date1 = dayjs(a.created_at);\n        const date2 = dayjs(b.created_at);\n        return date1.diff(date2);\n      },\n    },\n    {\n      title: t('modelService.DesiredSessionCount'),\n      dataIndex: 'desired_session_count',\n      key: 'desiredSessionCount',\n      render: (desired_session_count) => {\n        return desired_session_count < 0 ? '-' : desired_session_count;\n      },\n    },\n    {\n      title: (\n        <Flex direction=\"column\" align=\"start\">\n          {t('modelService.RoutingsCount')}\n          <br />\n          <Typography.Text type=\"secondary\" style={{ fontWeight: 'normal' }}>\n            ({t('modelService.Active/Total')})\n          </Typography.Text>\n        </Flex>\n      ),\n      // dataIndex: \"active_route_count\",\n      key: 'routingCount',\n      render: (text, row) => {\n        return (\n          _.filter(row.routings, (r) => r?.status === 'HEALTHY').length +\n          ' / ' +\n          row.routings?.length\n        );\n        // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n      },\n    },\n    {\n      title: t('modelService.Public'),\n      key: 'public',\n      render: (text, row) =>\n        row.open_to_public ? (\n          <CheckOutlined style={{ color: token.colorSuccess }} />\n        ) : (\n          <CloseOutlined style={{ color: token.colorTextSecondary }} />\n        ),\n    },\n  ];\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.EndpointListPage.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    useLazyLoadQuery<EndpointListPageQuery>(\n      graphql`\n        query EndpointListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n          $filter: String\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: $filter\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              model\n              domain\n              status\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              created_at @since(version: \"23.09.0\")\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              runtime_variant @since(version: \"24.03.5\") {\n                name\n                human_readable_name\n              }\n              created_user_email @since(version: \"23.09.8\")\n              ...EndpointOwnerInfoFragment\n              ...EndpointStatusTagFragment\n            }\n          }\n        }\n      `,\n      {\n        offset:\n          (deferredPaginationState.current - 1) *\n          deferredPaginationState.pageSize,\n        limit: deferredPaginationState.pageSize,\n        projectID: curProject.id,\n        filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n          ? [lifecycleStageFilter, filterStr]\n              .filter(Boolean)\n              .map((v) => `(${v})`)\n              .join(' & ')\n          : undefined,\n      },\n      {\n        fetchPolicy: 'network-only',\n        fetchKey: servicesFetchKey,\n      },\n    );\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, 'name');\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation<\n    {\n      success?: boolean;\n    },\n    unknown,\n    string\n  >({\n    mutationFn: (endpoint_id) => {\n      return baiSignedRequestWithPromise({\n        method: 'DELETE',\n        url: '/services/' + endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        align=\"start\"\n        wrap=\"wrap\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex\n          direction=\"row\"\n          gap={'sm'}\n          align=\"start\"\n          wrap=\"wrap\"\n          style={{ flexShrink: 1 }}\n        >\n          {baiClient.supports('endpoint-lifecycle-stage-filter') && (\n            <>\n              <Radio.Group\n                value={selectedLifecycleStage}\n                onChange={(e) => {\n                  setSelectedLifecycleStage(e.target?.value);\n                  // reset pagination state when filter changes\n                  setPaginationState({\n                    current: 1,\n                    pageSize: paginationState.pageSize,\n                  });\n                }}\n                optionType=\"button\"\n                buttonStyle=\"solid\"\n                options={[\n                  {\n                    label: 'Active',\n                    value: 'created&destroying',\n                  },\n                  {\n                    label: 'Destroyed',\n                    value: 'destroyed',\n                  },\n                ]}\n              />\n              <BAIPropertyFilter\n                value={filterStr || undefined}\n                onChange={(v) => {\n                  startFilterTransition(() => {\n                    setFilterStr(v, 'replaceIn');\n                  });\n                }}\n                loading={isFilterPending}\n                filterProperties={filterEmptyItem([\n                  // https://github.com/lablup/backend.ai/blob/main/src/ai/backend/manager/models/endpoint.py#L766-L773\n                  {\n                    key: 'name',\n                    type: 'string',\n                    propertyLabel: t('modelService.EndpointName'),\n                  },\n                  {\n                    key: 'url',\n                    type: 'string',\n                    propertyLabel: t('modelService.ServiceEndpoint'),\n                  },\n                  currentUserRole === 'admin' ||\n                  currentUserRole === 'superadmin'\n                    ? {\n                        key: 'created_user_email',\n                        type: 'string',\n                        propertyLabel: t('modelService.Owner'),\n                      }\n                    : undefined,\n                  // not supported yet\n                  // {\n                  //   key: 'open_to_public',\n                  //   propertyLabel: t('modelService.Public'),\n                  //   type: 'boolean',\n                  //   options: [\n                  //     {\n                  //       value: 'true',\n                  //     },\n                  //     {\n                  //       value:'false'\n                  //     }\n                  //   ]\n                  // }\n                ])}\n              />\n            </>\n          )}\n        </Flex>\n        <Flex direction=\"row\" gap={'xs'}>\n          <Flex gap={'xs'}>\n            <Button\n              icon={<ReloadOutlined />}\n              loading={isRefetchPending}\n              onClick={() => {\n                startRefetchTransition(() => updateServicesFetchKey());\n              }}\n            />\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                webuiNavigate('/service/start');\n              }}\n            >\n              {t('modelService.StartService')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Table\n        loading={{\n          spinning: isPendingPaginationAndFilter || isFilterPending,\n          indicator: <LoadingOutlined />,\n        }}\n        scroll={{ x: 'max-content' }}\n        rowKey={'endpoint_id'}\n        dataSource={(sortedEndpointList || []) as Endpoint[]}\n        columns={columns.filter((column) =>\n          displayedColumnKeys?.includes(_.toString(column.key)),\n        )}\n        pagination={{\n          pageSize: paginationState.pageSize,\n          current: paginationState.current,\n          pageSizeOptions: ['10', '20', '50'],\n          total: modelServiceList?.total_count || 0,\n          showSizeChanger: true,\n          onChange(page, pageSize) {\n            setPaginationState({\n              current: page,\n              pageSize: pageSize,\n            });\n          },\n          style: { marginRight: token.marginXS },\n        }}\n      />\n      <Flex\n        justify=\"end\"\n        style={{\n          padding: token.paddingXXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            setIsOpenColumnsSetting(true);\n          }}\n        />\n      </Flex>\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(!isOpenColumnsSetting);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </Flex>\n  );\n};\n\nexport default EndpointListPage;\n","/**\n * @generated SignedSource<<3cdbcaa9f3930ade7cd892180f29a11a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointListPageQuery$variables = {\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n};\nexport type EndpointListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly created_user_email: string | null | undefined;\n      readonly desired_session_count: number;\n      readonly domain: string | null | undefined;\n      readonly endpoint_id: string | null | undefined;\n      readonly model: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly open_to_public: boolean | null | undefined;\n      readonly project: string | null | undefined;\n      readonly resource_group: string | null | undefined;\n      readonly resource_slots: string | null | undefined;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null | undefined;\n        readonly routing_id: string | null | undefined;\n        readonly session: string | null | undefined;\n        readonly status: string | null | undefined;\n        readonly traffic_ratio: number | null | undefined;\n      } | null | undefined> | null | undefined;\n      readonly runtime_variant: {\n        readonly human_readable_name: string | null | undefined;\n        readonly name: string | null | undefined;\n      } | null | undefined;\n      readonly status: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\" | \"EndpointStatusTagFragment\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointListPageQuery = {\n  response: EndpointListPageQuery$data;\n  variables: EndpointListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"RuntimeVariantInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"runtime_variant\",\n  \"plural\": false,\n  \"selections\": [\n    (v6/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"human_readable_name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_user_email\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v17/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v22/*: any*/),\n              (v23/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointOwnerInfoFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointStatusTagFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v1/*: any*/),\n      (v3/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v10/*: any*/),\n                  (v24/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v22/*: any*/),\n              (v23/*: any*/),\n              (v24/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"session_owner_email\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"44748285f349a9d059efd5b64975c446\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      model\\n      domain\\n      status\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      created_at @since(version: \\\"23.09.0\\\")\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      runtime_variant @since(version: \\\"24.03.5\\\") {\\n        name\\n        human_readable_name\\n      }\\n      created_user_email @since(version: \\\"23.09.8\\\")\\n      ...EndpointOwnerInfoFragment\\n      ...EndpointStatusTagFragment\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointOwnerInfoFragment on Endpoint {\\n  id\\n  created_user_email @since(version: \\\"23.09.8\\\")\\n  session_owner_email @since(version: \\\"23.09.8\\\")\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"114c24611862a1a2577a867b9bc71359\";\n\nexport default node;\n"],"names":["Option","Select","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","ref","_a","prefixCls","customizePrefixCls","className","popupClassName","dropdownClassName","children","dataSource","childNodes","toArray","customizeInput","length","React","getInputElement","undefined","optionChildren","map","item","key","value","optionValue","text","getPrefixCls","ConfigContext","zIndex","useZIndex","dropdownStyle","Object","assign","suffixIcon","omit","classNames","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","PurePanel","genPurePanel","_InternalPanelDoNotUseOrYouWillBeFired","DEFAULT_OPERATOR_OF_TYPES","string","boolean","DEFAULT_OPTIONS_OF_TYPES","label","_ref","filterProperties","propValue","onChange","propOnChange","defaultValue","loading","containerProps","search","setSearch","useControllableState","autoCompleteRef","useRef","isOpenAutoComplete","setIsOpenAutoComplete","useState","setValue","filtersFromValue","useMemo","split","filter","trim","_$find","_$find2","property","operator","rest","valueParts","join","replace","parseFilterValue","propertyLabel","_","f","t","useTranslation","options","filterProperty","selectedProperty","setSelectedProperty","list","remove","push","resetList","getKey","useDynamicList","token","theme","useToken","useEffect","valueStringInResult","onSearch","_selectedProperty$opt","_selectedProperty$opt2","defaultOperator","filterValue","find","o","_jsxs","Flex","direction","gap","style","flex","align","Space","Compact","_jsx","popupMatchSelectWidth","onSelect","_autoCompleteRef$curr","current","focus","showSearch","optionFilterProp","open","onDropdownVisibleChange","minWidth","option","_option$label","toString","includes","placeholder","Input","Search","allowClear","wrap","alignSelf","index","Tag","closable","onClose","margin","Tooltip","title","Button","size","icon","CloseCircleOutlined","color","colorTextSecondary","onClick","endpointFrgmt","baiClient","useSuspendedBackendaiClient","endpoint","useFragment","_EndpointOwnerInfoFragment","require","supports","created_user_email","session_owner_email","_Fragment","createdUser","sessionOwner","QuestionCircleOutlined","email","_endpoint$status","_EndpointStatusTagFragment","status","toUpperCase","onRequestClose","columns","displayedColumnKeys","modalProps","formRef","columnOptions","column","element","BAIModal","destroyOnClose","centered","onOk","_formRef$current","validateFields","then","values","catch","onCancel","Form","preserve","initialValues","selectedColumnKeys","columnOption","layout","Item","name","marginBottom","prefix","SearchOutlined","marginSM","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","display","height","overflowY","Checkbox","Group","flexDirection","node","clearRafInterval","handle","id","cancelAnimationFrame","clearInterval","fn","delay","immediate","fnRef","useLatest","timerRef","clear","useCallback","isNumber","callback","requestAnimationFrame","setInterval","start","Date","now","loop","setRafInterval","isDestroyingStatus","desiredSessionCount","message","modal","App","useApp","webuiNavigate","useWebUINavigate","curProject","useCurrentProjectValue","isOpenColumnsSetting","setIsOpenColumnsSetting","selectedLifecycleStage","setSelectedLifecycleStage","deferredSelectedLifecycleStage","useDeferredValue","paginationState","setPaginationState","pageSize","deferredPaginationState","isPendingPaginationAndFilter","lifecycleStageFilter","isRefetchPending","startRefetchTransition","useTransition","isFilterPending","startFilterTransition","servicesFetchKey","updateServicesFetchKey","useUpdatableState","optimisticDeletingId","setOptimisticDeletingId","filterStr","setFilterStr","useQueryParam","StringParam","currentUser","useCurrentUserInfo","currentUserRole","useCurrentUserRole","dataIndex","fixed","render","endpoint_id","row","Link","to","width","Typography","Text","code","url","copyable","href","target","SettingOutlined","desired_session_count","colorTextDisabled","colorInfo","disabled","DeleteOutlined","colorError","terminateModelServiceMutation","isPending","confirm","content","okText","okButtonProps","danger","mutate","onSuccess","res","success","error","onError","err","EndpointStatusTag","is_admin","endpoint_info","EndpointOwnerInfo","created_at","dayjs","format","defaultSortOrder","sortDirections","sorter","a","b","date1","date2","diff","fontWeight","_row$routings","routings","r","open_to_public","CheckOutlined","colorSuccess","CloseOutlined","setDisplayedColumnKeys","useLocalStorageState","useRafInterval","startTransitionWithoutPendingState","endpoint_list","modelServiceList","useLazyLoadQuery","_EndpointListPageQuery","offset","limit","projectID","Boolean","v","fetchPolicy","fetchKey","sortedEndpointList","items","useTanMutation","mutationFn","baiSignedRequestWithPromise","method","client","justify","padding","paddingContentVertical","paddingLeft","paddingContentHorizontalSM","paddingRight","flexShrink","Radio","e","_e$target","optionType","buttonStyle","BAIPropertyFilter","filterEmptyItem","ReloadOutlined","Table","spinning","indicator","LoadingOutlined","scroll","x","rowKey","pagination","pageSizeOptions","total","total_count","showSizeChanger","page","marginRight","marginXS","paddingXXS","TableColumnsSettingModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","hash"],"sourceRoot":""}