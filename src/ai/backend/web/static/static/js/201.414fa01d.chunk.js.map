{"version":3,"file":"static/js/201.414fa01d.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","components/EndpointStatusTag.tsx","components/ModelServiceSettingModal.tsx","components/__generated__/EndpointStatusTagFragment.graphql.ts","components/__generated__/ModelServiceSettingModal_endpoint.graphql.ts","components/VFolderSelect.tsx","components/ServiceLauncherModal.tsx","../node_modules/ahooks/es/useRafInterval/index.js","pages/ServingListPage.tsx","pages/__generated__/ServingListPageQuery.graphql.ts","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/SettingOutlined.js","../node_modules/@ant-design/icons/es/icons/SettingOutlined.js","../node_modules/antd/es/modal/PurePanel.js","../node_modules/antd/es/modal/index.js"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import { baiSignedRequestWithPromise } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { ModelServiceSettingModal_endpoint$key } from './__generated__/ModelServiceSettingModal_endpoint.graphql';\nimport { Form, InputNumber, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  endpointFrgmt: ModelServiceSettingModal_endpoint$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\ninterface ServiceSettingFormInput {\n  desired_session_count: number;\n}\n\nconst ModelServiceSettingModal: React.FC<Props> = ({\n  onRequestClose,\n  endpointFrgmt,\n  ...baiModalProps\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment ModelServiceSettingModal_endpoint on Endpoint {\n        endpoint_id\n        desired_session_count\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  const mutationToUpdateService = useTanMutation({\n    mutationFn: (values: ServiceSettingFormInput) => {\n      const body = {\n        to: values.desired_session_count,\n      };\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: `/services/${endpoint?.endpoint_id}/scale`,\n        body,\n        client: baiClient,\n      });\n    },\n  });\n\n  // Apply any operation after clicking OK button\n  const handleOk = (e: React.MouseEvent<HTMLElement>) => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToUpdateService.mutate(values, {\n          onSuccess: () => {\n            console.log('service updated');\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            console.log(error);\n            // TODO: show error message\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{\n        loading: mutationToUpdateService.isLoading,\n      }}\n      title={t('modelService.EditModelService')}\n      {...baiModalProps}\n    >\n      <Flex direction=\"row\" align=\"stretch\" justify=\"around\">\n        <Form\n          form={form}\n          preserve={false}\n          validateTrigger={['onChange', 'onBlur']}\n          initialValues={{\n            desired_session_count: endpoint?.desired_session_count,\n          }}\n          style={{ marginBottom: token.marginLG, marginTop: token.margin }}\n        >\n          <Form.Item\n            name=\"desired_session_count\"\n            label={t('modelService.DesiredSessionCount')}\n            rules={[\n              {\n                pattern: /^[0-9]+$/,\n                message: t('modelService.OnlyAllowsNonNegativeIntegers'),\n              },\n            ]}\n          >\n            <InputNumber type=\"number\" min={0} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelServiceSettingModal;\n","/**\n * @generated SignedSource<<8a960e7428e05bcb25f322a53888680e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null;\n  readonly status: string | null;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7fb89480050795760143361e3c0e5086>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelServiceSettingModal_endpoint$data = {\n  readonly desired_session_count: number | null;\n  readonly endpoint_id: string | null;\n  readonly \" $fragmentType\": \"ModelServiceSettingModal_endpoint\";\n};\nexport type ModelServiceSettingModal_endpoint$key = {\n  readonly \" $data\"?: ModelServiceSettingModal_endpoint$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelServiceSettingModal_endpoint\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelServiceSettingModal_endpoint\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endpoint_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"desired_session_count\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"881f18324b27eba6ff0fcfb83ae241d2\";\n\nexport default node;\n","import { useBaiSignedRequestWithPromise } from '../helper';\nimport { useCurrentProjectValue, useUpdatableState } from '../hooks';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport { Select, SelectProps } from 'antd';\nimport _ from 'lodash';\nimport React, { startTransition, useEffect } from 'react';\n\nexport type VFolder = {\n  name: string;\n  id: string;\n  quota_scope_id: string;\n  host: string;\n  status: string;\n  usage_mode: string;\n  created_at: string;\n  is_owner: boolean;\n  permission: string;\n  user: null;\n  group: string | null;\n  creator: string;\n  user_email: null;\n  group_name: string | null;\n  ownership_type: string;\n  type: string;\n  cloneable: boolean;\n  max_files: number;\n  max_size: null | number;\n  cur_size: number;\n};\n\ninterface VFolderSelectProps extends SelectProps {\n  autoSelectDefault?: boolean;\n  filter?: (vFolder: VFolder) => boolean;\n}\n\nconst VFolderSelect: React.FC<VFolderSelectProps> = ({\n  filter,\n  autoSelectDefault,\n  ...selectProps\n}) => {\n  const currentProject = useCurrentProjectValue();\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  // const { vfolder_list } = useLazyLoadQuery<VFolderSelectQuery>(\n  //   graphql`\n  //     # query VFolderSelectQuery($group_id: UUID) {\n  //     query VFolderSelectQuery {\n  //       vfolder_list(limit: 20, offset: 0) {\n  //         # vfolder_list(limit: 20, offset: 0, group_id: $group_id) {\n  //         items {\n  //           id\n  //           name\n  //           status\n  //           usage_mode\n  //           ownership_type\n  //           user_email\n  //           group\n  //           group_name\n  //         }\n  //         total_count\n  //       }\n  //     }\n  //   `,\n  //   {\n  //     // group_id: currentProject.id,\n  //   },\n  //   {\n  //     fetchPolicy: \"store-and-network\",\n  //   }\n  // );\n  // console.log(\"vfolder_list\", vfolder_list);\n  const [key, checkUpdate] = useUpdatableState('first');\n\n  const { data } = useTanQuery({\n    queryKey: ['VFolderSelectQuery', key],\n    queryFn: () => {\n      return baiRequestWithPromise({\n        method: 'GET',\n        url: `/folders?group_id=${currentProject.id}`,\n      }) as Promise<VFolder[]>;\n    },\n    staleTime: 0,\n  });\n\n  const filteredVFolders = filter ? _.filter(data, filter) : data;\n\n  const autoSelectedOption = _.first(filteredVFolders)\n    ? {\n        label: _.first(filteredVFolders)?.name,\n        value: _.first(filteredVFolders)?.name,\n      }\n    : undefined;\n  useEffect(() => {\n    if (autoSelectDefault && autoSelectedOption) {\n      selectProps.onChange?.(autoSelectedOption.value, autoSelectedOption);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoSelectDefault]);\n  return (\n    <Select\n      showSearch\n      {...selectProps}\n      onDropdownVisibleChange={(open) => {\n        if (open) {\n          startTransition(() => {\n            checkUpdate();\n          });\n        }\n      }}\n    >\n      {_.map(filteredVFolders, (vfolder) => {\n        return (\n          <Select.Option key={vfolder?.id} value={vfolder?.name}>\n            {vfolder?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default VFolderSelect;\n","import { baiSignedRequestWithPromise, iSizeToSize } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentDomainValue } from '../hooks';\nimport { useResourceSlots } from '../hooks/backendai';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport FlexActivityIndicator from './FlexActivityIndicator';\nimport ImageEnvironmentSelectFormItems, {\n  Image,\n  ImageEnvironmentFormInput,\n} from './ImageEnvironmentSelectFormItems';\nimport ResourceGroupSelect from './ResourceGroupSelect';\nimport { ACCELERATOR_UNIT_MAP } from './ResourceNumber';\nimport SliderInputItem from './SliderInputFormItem';\nimport VFolderSelect from './VFolderSelect';\nimport { Card, Form, Input, theme, Select, Switch, message } from 'antd';\nimport _ from 'lodash';\nimport React, { Suspense, useEffect } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\n\ntype ClusterMode = 'single-node' | 'multi-node';\n\ninterface ServiceCreateConfigResourceOptsType {\n  shmem?: number | string;\n}\ninterface ServiceCreateConfigResourceType {\n  cpu: number | string;\n  mem: string;\n  'cuda.device'?: number | string;\n  'cuda.shares'?: number | string;\n  'rocm.device'?: number | string;\n  'tpu.device'?: number | string;\n  'ipu.device'?: number | string;\n  'atom.device'?: number | string;\n  'warboy.device'?: number | string;\n}\n\ninterface ServiceCreateConfigType {\n  model: string;\n  model_version?: string;\n  model_mount_destination: string; // default == \"/models\"\n  environ: object; // environment variable\n  scaling_group: string;\n  resources: ServiceCreateConfigResourceType;\n  resource_opts?: ServiceCreateConfigResourceOptsType;\n}\ninterface ServiceCreateType {\n  name: string;\n  desired_session_count: number;\n  image: string;\n  arch: string;\n  group: string;\n  domain: string;\n  cluster_size: number;\n  cluster_mode: ClusterMode;\n  tag?: string;\n  startup_command?: string;\n  bootstrap_script?: string;\n  owner_access_key?: string;\n  open_to_public: boolean;\n  config: ServiceCreateConfigType;\n}\n\ninterface ServiceLauncherProps\n  extends Omit<BAIModalProps, 'onOK' | 'onCancel'> {\n  extraP?: boolean;\n  onRequestClose: (success?: boolean) => void;\n}\ninterface ServiceLauncherFormInput extends ImageEnvironmentFormInput {\n  serviceName: string;\n  // gpu: number;\n  resource: AIAccelerator;\n  cpu: number;\n  mem: number;\n  shmem: number;\n  resourceGroup: string;\n  vFolderName: string;\n  desiredRoutingCount: number;\n  openToPublic: boolean;\n}\n\ninterface AIAccelerator {\n  accelerator: number;\n  acceleratorType: SelectUIType;\n}\n\ninterface SelectUIType {\n  value: string;\n  label: string;\n}\n\nconst ServiceLauncherModal: React.FC<ServiceLauncherProps> = ({\n  extraP,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  // const [modalText, setModalText] = useState(\"Content of the modal\");\n  const currentDomain = useCurrentDomainValue();\n  const [form] = Form.useForm<ServiceLauncherFormInput>();\n  const [resourceSlots] = useResourceSlots();\n  const currentImage = Form.useWatch(['environments', 'image'], form); //TODO: type // form.getFieldValue(['environments', 'image']);\n  const currentAcceleratorType = form.getFieldValue([\n    'resource',\n    'acceleratorType',\n  ]);\n  const currentImageAcceleratorLimits = _.filter(\n    currentImage?.resource_limits,\n    (limit) =>\n      limit ? !_.includes(['cpu', 'mem', 'shmem'], limit.key) : false,\n  );\n  const currentImageAcceleratorTypeName: string =\n    // NOTE:\n    // filter from resourceSlots since resourceSlots and supported image could be non-identical.\n    // resourceSlots returns \"all resources enable to allocate(including AI accelerator)\"\n    // imageAcceleratorLimit returns \"all resources that is supported in the selected image\"\n    _.filter(currentImageAcceleratorLimits, (acceleratorInfo: any) =>\n      _.keys(resourceSlots).includes(acceleratorInfo?.key),\n    )[0]?.key || '';\n  const acceleratorSlots = _.omit(resourceSlots, ['cpu', 'mem', 'shmem']);\n\n  // change selected accelerator type according to currentImageAcceleratorTypeName\n  useEffect(() => {\n    form.setFieldValue(\n      ['resource', 'accelerator'],\n      getLimitByAccelerator(currentImageAcceleratorTypeName).min || 0,\n    );\n    form.setFieldValue(['resource', 'acceleratorType'], {\n      value: currentImageAcceleratorTypeName,\n      label: ACCELERATOR_UNIT_MAP[currentImageAcceleratorTypeName] || 'UNIT',\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentImage]);\n\n  const getLimitByAccelerator = (acceleratorName: string) => {\n    // FIXME: temporally add hard-coded number when config is undefined\n    let maxLimit = 8;\n    let minLimit = 0;\n\n    // get max\n    switch (acceleratorName) {\n      case 'cuda.device':\n      default:\n        maxLimit = baiClient._config.maxCUDADevicesPerContainer || maxLimit;\n        break;\n      case 'cuda.shares':\n        maxLimit = baiClient._config.maxCUDASharesPerContainer || maxLimit;\n        break;\n      case 'rocm.device':\n        maxLimit = baiClient._config.maxROCMDevicesPerContainer || maxLimit;\n        break;\n      case 'tpu.device':\n        maxLimit = baiClient._config.maxTPUDevicesPerContainer || maxLimit;\n        break;\n      case 'ipu.device':\n        maxLimit = baiClient._config.maxIPUDevicesPerContainer || maxLimit;\n        break;\n      case 'atom.device':\n        maxLimit = baiClient._config.maxATOMDevicesPerContainer || maxLimit;\n        break;\n      case 'warboy.device':\n        maxLimit = baiClient._config.maxWarboyDevicesPerContainer || maxLimit;\n        break;\n    }\n    // get min\n    minLimit = parseInt(\n      _.filter(\n        currentImageAcceleratorLimits,\n        (supportedAcceleratorInfo) =>\n          supportedAcceleratorInfo?.key === currentImageAcceleratorTypeName,\n      )[0]?.min as string,\n    );\n    return {\n      min: minLimit,\n      max: maxLimit,\n    };\n  };\n\n  const mutationToCreateService = useTanMutation<\n    unknown,\n    {\n      message?: string;\n    },\n    ServiceLauncherFormInput\n  >({\n    mutationFn: (values) => {\n      const image: string = `${values.environments.image?.registry}/${values.environments.image?.name}:${values.environments.image?.tag}`;\n      const body: ServiceCreateType = {\n        name: values.serviceName,\n        desired_session_count: values.desiredRoutingCount,\n        image: image,\n        arch: values.environments.image?.architecture as string,\n        group: baiClient.current_group, // current Project Group,\n        domain: currentDomain, // current Domain Group,\n        cluster_size: 1, // FIXME: hardcoded. change it with option later\n        cluster_mode: 'single-node', // FIXME: hardcoded. change it with option later\n        open_to_public: values.openToPublic,\n        config: {\n          model: values.vFolderName,\n          model_mount_destination: '/models', // FIXME: hardcoded. change it with option later\n          environ: {}, // FIXME: hardcoded. change it with option later\n          scaling_group: values.resourceGroup,\n          resources: {\n            cpu: values.cpu,\n            mem: values.mem + 'G',\n          },\n        },\n      };\n      // Set AI accelerator value if set\n      // Currently, we only support one AI accelerator per session\n      if (values.resource.acceleratorType) {\n        const acceleratorTypeName: string =\n          values.resource.acceleratorType?.value;\n        // FIXME: temporally add switch-case\n        switch (acceleratorTypeName) {\n          case 'cuda.shares':\n            body['config'].resources['cuda.shares'] =\n              values.resource.accelerator;\n            break;\n          case 'cuda.device':\n            body['config'].resources['cuda.device'] =\n              values.resource.accelerator;\n            break;\n          case 'rocm.device':\n            body['config'].resources['rocm.device'] =\n              values.resource.accelerator;\n            break;\n          case 'tpu.device':\n            body['config'].resources['tpu.device'] =\n              values.resource.accelerator;\n            break;\n          case 'ipu.device':\n            body['config'].resources['ipu.device'] =\n              values.resource.accelerator;\n            break;\n          case 'warboy.device':\n            body['config'].resources['warboy.device'] =\n              values.resource.accelerator;\n            break;\n        }\n      }\n      if (values.shmem && values.shmem > 0) {\n        body['config'].resource_opts = {\n          shmem: values.shmem + 'G',\n        };\n      }\n      return baiSignedRequestWithPromise({\n        method: 'POST',\n        url: '/services',\n        body,\n        client: baiClient,\n      });\n    },\n  });\n  // const scalingGroupList = use;\n  // modelStorageList: Record<string, any>[];\n  // environmentList: Record<string, any>[];\n  // name?: string;\n  // cpu: number | string;\n  // mem: number | string;\n  // npu?: number | string;\n  // shmem?: number | string;\n\n  // Apply any operation after clicking OK button\n  const handleOk = () => {\n    // setModalText(\"Lorem Ipsum\");\n    // setConfirmLoading(true);\n    // // TODO: send request to start service to manager server\n    // setTimeout(() => {\n    //   setConfirmLoading(false);\n    // }, 2000);\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToCreateService.mutate(values, {\n          onSuccess: () => {\n            onRequestClose(true);\n          },\n          onError: (error) => {\n            if (error?.message) {\n              message.error(\n                _.truncate(error?.message, {\n                  length: 200,\n                }),\n              );\n            } else {\n              message.error(t('modelService.FailedToStartService'));\n            }\n          },\n        });\n      })\n      .catch((err) => {\n        if (err.errorFields?.[0].errors?.[0]) {\n          message.error(err.errorFields?.[0].errors?.[0]);\n        } else {\n          message.error(t('modelService.FormValidationFailed'));\n        }\n      });\n  };\n\n  // Apply any operation after clicking Cancel button\n  const handleCancel = () => {\n    // console.log(\"Clicked cancel button\");\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      title={t('modelService.StartNewServing')}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      maskClosable={false}\n      confirmLoading={mutationToCreateService.isLoading}\n      {...modalProps}\n    >\n      <Suspense fallback={<FlexActivityIndicator />}>\n        <Form\n          disabled={mutationToCreateService.isLoading}\n          form={form}\n          preserve={false}\n          layout=\"vertical\"\n          labelCol={{ span: 12 }}\n          initialValues={\n            {\n              cpu: 1,\n              // gpu: 0,\n              resource: {\n                accelerator: 0,\n              },\n              mem: 0.25,\n              shmem: 0,\n              desiredRoutingCount: 1,\n            } as ServiceLauncherFormInput\n          }\n        >\n          <Form.Item\n            label={t('modelService.ServiceName')}\n            name=\"serviceName\"\n            rules={[\n              {\n                pattern: /^(?=.{4,24}$)\\w[\\w.-]*\\w$/,\n                message: t('modelService.ServiceNameRule'),\n              },\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"resourceGroup\"\n            label={t('session.ResourceGroup')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <ResourceGroupSelect autoSelectDefault />\n          </Form.Item>\n          <Form.Item\n            name=\"openToPublic\"\n            label={t('modelService.OpenToPublic')}\n            valuePropName=\"checked\"\n          >\n            <Switch></Switch>\n          </Form.Item>\n          <Form.Item\n            name={'vFolderName'}\n            label={t('session.launcher.ModelStorageToMount')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <VFolderSelect\n              filter={(vf) => vf.usage_mode === 'model'}\n              autoSelectDefault\n            />\n          </Form.Item>\n          <SliderInputItem\n            label={t('modelService.DesiredRoutingCount')}\n            name=\"desiredRoutingCount\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            inputNumberProps={{\n              //TODO: change unit based on resource limit\n              addonAfter: '#',\n            }}\n            required\n          />\n          <Card\n            style={{\n              marginBottom: token.margin,\n            }}\n          >\n            <ImageEnvironmentSelectFormItems\n            // //TODO: test with real inference images\n            // filter={(image) => {\n            //   return !!_.find(image?.labels, (label) => {\n            //     return (\n            //       label?.key === \"ai.backend.role\" &&\n            //       label.value === \"INFERENCE\" //['COMPUTE', 'INFERENCE', 'SYSTEM']\n            //     );\n            //   });\n            // }}\n            />\n            <Form.Item\n              noStyle\n              shouldUpdate={(prev, cur) =>\n                prev.environments?.image?.digest !==\n                cur.environments?.image?.digest\n              }\n            >\n              {({ getFieldValue }) => {\n                // TODO: change min/max based on selected images resource limit and current user limit\n                const currentImage: Image =\n                  getFieldValue('environments')?.image;\n\n                return (\n                  <>\n                    <SliderInputItem\n                      name={'cpu'}\n                      label={t('session.launcher.CPU')}\n                      tooltip={<Trans i18nKey={'session.launcher.DescCPU'} />}\n                      min={parseInt(\n                        _.find(\n                          currentImage?.resource_limits,\n                          (i) => i?.key === 'cpu',\n                        )?.min || '0',\n                      )}\n                      max={baiClient._config.maxCPUCoresPerContainer || 128}\n                      inputNumberProps={{\n                        addonAfter: t('session.launcher.Core'),\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                    <SliderInputItem\n                      name={'mem'}\n                      label={t('session.launcher.Memory')}\n                      tooltip={\n                        <Trans i18nKey={'session.launcher.DescMemory'} />\n                      }\n                      max={baiClient._config.maxMemoryPerContainer || 1536}\n                      min={0}\n                      inputNumberProps={{\n                        addonAfter: 'GiB',\n                      }}\n                      step={0.25}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                        ({ getFieldValue }) => ({\n                          validator(_form, value) {\n                            const sizeGInfo = iSizeToSize(\n                              _.find(\n                                currentImage?.resource_limits,\n                                (i) => i?.key === 'mem',\n                              )?.min || '0B',\n                              'G',\n                            );\n\n                            if (\n                              sizeGInfo?.number &&\n                              sizeGInfo?.number > value\n                            ) {\n                              return Promise.reject(\n                                new Error(\n                                  t('session.launcher.MinMemory', {\n                                    size: sizeGInfo?.numberUnit,\n                                  }),\n                                ),\n                              );\n                            }\n                            return Promise.resolve();\n                          },\n                        }),\n                      ]}\n                    />\n                    <SliderInputItem\n                      name={'shmem'}\n                      label={t('session.launcher.SharedMemory')}\n                      tooltip={\n                        <Trans i18nKey={'session.launcher.DescSharedMemory'} />\n                      }\n                      max={baiClient._config.maxShmPerContainer || 8}\n                      min={0}\n                      step={0.25}\n                      inputNumberProps={{\n                        addonAfter: 'GiB',\n                      }}\n                      required\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    />\n                  </>\n                );\n              }}\n            </Form.Item>\n            <Form.Item\n              noStyle\n              shouldUpdate={(prev, cur) =>\n                prev.environments?.environment !== cur.environments?.environment\n              }\n            >\n              {() => {\n                return (\n                  <SliderInputItem\n                    name={['resource', 'accelerator']}\n                    label={t(`session.launcher.AIAccelerator`)}\n                    tooltip={\n                      <Trans i18nKey={'session.launcher.DescAIAccelerator'} />\n                    }\n                    sliderProps={\n                      {\n                        // FIXME: temporally comment out min value\n                        // marks: {\n                        //   0: 0,\n                        // },\n                      }\n                    }\n                    min={0}\n                    max={\n                      getLimitByAccelerator(currentImageAcceleratorTypeName).max\n                    }\n                    step={\n                      _.endsWith(currentAcceleratorType, 'shares') ? 0.1 : 1\n                    }\n                    disabled={currentImageAcceleratorLimits.length <= 0}\n                    inputNumberProps={{\n                      addonAfter: (\n                        <Form.Item\n                          noStyle\n                          name={['resource', 'acceleratorType']}\n                          initialValue={currentImageAcceleratorTypeName}\n                        >\n                          <Select\n                            disabled={currentImageAcceleratorLimits.length <= 0}\n                            suffixIcon={\n                              _.size(acceleratorSlots) > 1 ? undefined : null\n                            }\n                            open={\n                              _.size(acceleratorSlots) > 1 ? undefined : false\n                            }\n                            popupMatchSelectWidth={false}\n                            options={_.map(acceleratorSlots, (value, name) => {\n                              return {\n                                value: name,\n                                label: ACCELERATOR_UNIT_MAP[name] || 'UNIT',\n                                disabled:\n                                  currentImageAcceleratorLimits.length > 0 &&\n                                  !_.find(\n                                    currentImageAcceleratorLimits,\n                                    (limit) => {\n                                      return limit?.key === name;\n                                    },\n                                  ),\n                              };\n                            })}\n                          />\n                        </Form.Item>\n                      ),\n                    }}\n                    required\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  />\n                );\n              }}\n            </Form.Item>\n          </Card>\n        </Form>\n      </Suspense>\n    </BAIModal>\n  );\n};\n\nexport default ServiceLauncherModal;\n","import { useCallback, useEffect, useRef } from 'react';\nimport useLatest from '../useLatest';\nimport { isNumber } from '../utils';\nvar setRafInterval = function (callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setInterval(callback, delay)\n    };\n  }\n  var start = new Date().getTime();\n  var handle = {\n    id: 0\n  };\n  var loop = function () {\n    var current = new Date().getTime();\n    if (current - start >= delay) {\n      callback();\n      start = new Date().getTime();\n    }\n    handle.id = requestAnimationFrame(loop);\n  };\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\nvar clearRafInterval = function (handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearInterval(handle.id);\n  }\n  cancelAnimationFrame(handle.id);\n};\nfunction useRafInterval(fn, delay, options) {\n  var immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  var fnRef = useLatest(fn);\n  var timerRef = useRef();\n  useEffect(function () {\n    if (!isNumber(delay) || delay < 0) return;\n    if (immediate) {\n      fnRef.current();\n    }\n    timerRef.current = setRafInterval(function () {\n      fnRef.current();\n    }, delay);\n    return function () {\n      if (timerRef.current) {\n        clearRafInterval(timerRef.current);\n      }\n    };\n  }, [delay]);\n  var clear = useCallback(function () {\n    if (timerRef.current) {\n      clearRafInterval(timerRef.current);\n    }\n  }, []);\n  return clear;\n}\nexport default useRafInterval;","import BAIModal from '../components/BAIModal';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport Flex from '../components/Flex';\nimport ModelServiceSettingModal from '../components/ModelServiceSettingModal';\nimport ServiceLauncherModal from '../components/ServiceLauncherModal';\nimport { baiSignedRequestWithPromise } from '../helper';\nimport {\n  useCurrentProjectValue,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\n// import { getSortOrderByName } from '../hooks/reactPaginationQueryOptions';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport {\n  ServingListPageQuery,\n  ServingListPageQuery$data,\n} from './__generated__/ServingListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useRafInterval } from 'ahooks';\nimport { Button, Table, Tabs, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  Suspense,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { Link } from 'react-router-dom';\n\n// FIXME: need to apply filtering type of service later\ntype TabKey = 'services'; //  \"running\" | \"finished\" | \"others\";\n\ntype Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<ServingListPageQuery$data>['endpoint_list']\n    >['items']\n  >[0]\n>;\n\nconst ServingListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenServiceLauncher, setIsOpenServiceLauncher] = useState(false);\n  const [selectedModelService, setSelectedModelService] = useState<Endpoint>();\n  const [isOpenModelServiceSettingModal, setIsOpenModelServiceSettingModal] =\n    useState(false);\n\n  // const [paginationState, setPaginationState] = useState<{\n  const [paginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 100,\n  });\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [\n    isOpenModelServiceTerminatingModal,\n    setIsOpenModelServiceTerminatingModal,\n  ] = useState(false);\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState('initial-fetch');\n  // FIXME: need to apply filtering type of service later\n  const [selectedTab, setSelectedTab] = useState<TabKey>('services');\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    // TODO: need to convert LazyLoadQuery to pagination query with option\n    useLazyLoadQuery<ServingListPageQuery>(\n      graphql`\n        query ServingListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: \"name != 'koalpaca-test'\"\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              image\n              model\n              domain\n              status\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              created_at @since(version: \"23.09.0\")\n              created_user\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              ...ModelServiceSettingModal_endpoint\n              ...EndpointStatusTagFragment\n            }\n          }\n        }\n      `,\n      {\n        offset: (paginationState.current - 1) * paginationState.pageSize,\n        limit: paginationState.pageSize,\n        projectID: curProject.id,\n      },\n      {\n        fetchPolicy:\n          servicesFetchKey === 'initial-fetch'\n            ? 'store-and-network'\n            : 'network-only',\n        fetchKey: servicesFetchKey,\n      },\n    );\n\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, 'name');\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation({\n    mutationFn: () => {\n      return baiSignedRequestWithPromise({\n        method: 'DELETE',\n        url: '/services/' + selectedModelService?.endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n  // const { data, refetch } = useTanQuery({\n  //   queryKey: \"terminateModelService\",\n  //   queryFn: () => {\n  //     return baiSignedRequestWithPromise({\n  //       method: \"DELETE\",\n  //       url: \"/services/\" + selectedModelService?.id,\n  //       client: baiClient,\n  //     });\n  //   },\n  //   onSuccess: (res: any) => {\n  //     console.log(res);\n  //   },\n  //   onError: (err: any) => {\n  //     console.log(err);\n  //   },\n  //   enabled: false,\n  //   // for to render even this query fails\n  //   suspense: true,\n  // });\n\n  return (\n    <>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{ padding: token.padding, gap: token.margin }}\n      >\n        {/* <Card bordered title={t(\"summary.ResourceStatistics\")}>\n          <p>SessionList</p>\n        </Card> */}\n        {/* <Card bodyStyle={{ paddingTop: 0 }}> */}\n        <Flex direction=\"column\" align=\"stretch\">\n          <Flex style={{ flex: 1 }}>\n            <Tabs\n              // type=\"card\"\n              activeKey={selectedTab}\n              onChange={(key) => setSelectedTab(key as TabKey)}\n              tabBarStyle={{ marginBottom: 0 }}\n              style={{\n                width: '100%',\n                paddingLeft: token.paddingMD,\n                paddingRight: token.paddingMD,\n                borderTopLeftRadius: token.borderRadius,\n                borderTopRightRadius: token.borderRadius,\n              }}\n              items={[\n                { key: 'services', label: t('modelService.Services') },\n                // FIXME: need to apply filtering type of service later\n                // {\n                //   key: \"running\",\n                //   label: t(\"session.Running\"),\n                // },\n                // {\n                //   key: \"finished\",\n                //   label: t(\"session.Finished\"),\n                // },\n                // {\n                //   key: \"others\",\n                //   label: t(\"session.Others\"),\n                // },\n              ]}\n              tabBarExtraContent={{\n                right: (\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      setIsOpenServiceLauncher(true);\n                    }}\n                  >\n                    {t('modelService.StartService')}\n                  </Button>\n                ),\n              }}\n            />\n            {/* <Button type=\"text\" icon={<MoreOutlined />} /> */}\n          </Flex>\n          {/* <Button type=\"primary\" icon={<PoweroffOutlined />}>\n          시작\n        </Button> */}\n\n          {/* @ts-ignore */}\n          {/* <backend-ai-session-launcher\n        location=\"session\"\n        id=\"session-launcher\"\n        active\n      /> */}\n          <Suspense fallback={<div>loading..</div>}>\n            {/* <ServingList\n              loading={isRefetchPending}\n              projectId={curProject.id}\n              status={[]}\n              extraFetchKey={\"\"}\n              dataSource={modelServiceList}\n              onClickEdit={(row) => {\n                setIsOpenModelServiceSettingModal(true);\n                setSelectedModelService(row);\n              }}\n              onClickTerminate={(row) => {\n                setIsOpenModelServiceTerminatingModal(true);\n                setSelectedModelService(row);\n              }}\n            /> */}\n            <Table\n              loading={isRefetchPending}\n              scroll={{ x: 'max-content' }}\n              rowKey={'endpoint_id'}\n              dataSource={(sortedEndpointList || []) as Endpoint[]}\n              columns={[\n                {\n                  title: t('modelService.EndpointName'),\n                  dataIndex: 'endpoint_id',\n                  fixed: 'left',\n                  render: (endpoint_id, row) => (\n                    <Link to={'/serving/' + endpoint_id}>{row.name}</Link>\n                  ),\n                },\n                {\n                  title: t('modelService.EndpointId'),\n                  dataIndex: 'endpoint_id',\n                  width: 310,\n                  render: (endpoint_id) => (\n                    <Typography.Text code>{endpoint_id}</Typography.Text>\n                  ),\n                },\n                {\n                  title: t('modelService.Controls'),\n                  dataIndex: 'controls',\n                  render: (text, row) => (\n                    <Flex direction=\"row\" align=\"stretch\">\n                      <Button\n                        type=\"text\"\n                        icon={<SettingOutlined />}\n                        style={\n                          row.desired_session_count < 0 ||\n                          row.status?.toLowerCase() === 'destroying'\n                            ? undefined\n                            : {\n                                color: '#29b6f6',\n                              }\n                        }\n                        disabled={\n                          row.desired_session_count < 0 ||\n                          row.status?.toLowerCase() === 'destroying'\n                        }\n                        onClick={() => {\n                          setIsOpenModelServiceSettingModal(true);\n                          setSelectedModelService(row);\n                        }}\n                      />\n                      <Button\n                        type=\"text\"\n                        icon={\n                          <DeleteOutlined\n                            style={\n                              row.desired_session_count < 0 ||\n                              row.status?.toLowerCase() === 'destroying'\n                                ? undefined\n                                : {\n                                    color: token.colorError,\n                                  }\n                            }\n                          />\n                        }\n                        disabled={\n                          row.desired_session_count < 0 ||\n                          row.status?.toLowerCase() === 'destroying'\n                        }\n                        onClick={() => {\n                          setIsOpenModelServiceTerminatingModal(true);\n                          setSelectedModelService(row);\n                        }}\n                      />\n                    </Flex>\n                  ),\n                },\n                {\n                  title: t('modelService.Status'),\n                  render: (text, row) => (\n                    <EndpointStatusTag endpointFrgmt={row} />\n                  ),\n                },\n                {\n                  title: t('modelService.CreatedAt'),\n                  dataIndex: 'created_at',\n                  render: (created_at) => {\n                    return dayjs(created_at).format('ll LT');\n                  },\n                  defaultSortOrder: 'descend',\n                  sortDirections: ['descend', 'ascend', 'descend'],\n                  sorter: (a, b) => {\n                    const date1 = dayjs(a.created_at);\n                    const date2 = dayjs(b.created_at);\n                    return date1.diff(date2);\n                  },\n                },\n                {\n                  title: t('modelService.DesiredSessionCount'),\n                  dataIndex: 'desired_session_count',\n                  render: (desired_session_count) => {\n                    return desired_session_count < 0\n                      ? '-'\n                      : desired_session_count;\n                  },\n                },\n                {\n                  title: (\n                    <Flex direction=\"column\" align=\"start\">\n                      {t('modelService.RoutingsCount')}\n                      <br />\n                      <Typography.Text\n                        type=\"secondary\"\n                        style={{ fontWeight: 'normal' }}\n                      >\n                        ({t('modelService.Active/Total')})\n                      </Typography.Text>\n                    </Flex>\n                  ),\n                  // dataIndex: \"active_route_count\",\n                  render: (text, row) => {\n                    return (\n                      _.filter(row.routings, (r) => r?.status === 'HEALTHY')\n                        .length +\n                      ' / ' +\n                      row.routings?.length\n                    );\n                    // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n                  },\n                },\n                {\n                  title: t('modelService.Public'),\n                  render: (text, row) =>\n                    row.open_to_public ? (\n                      <CheckOutlined style={{ color: token.colorSuccess }} />\n                    ) : (\n                      <CloseOutlined\n                        style={{ color: token.colorTextSecondary }}\n                      />\n                    ),\n                },\n              ]}\n              pagination={false}\n              // pagination={{\n              //   pageSize: paginationState.pageSize,\n              //   current: paginationState.current,\n              //   total: modelServiceList?.total_count || 0,\n              //   showSizeChanger: true,\n              //   // showTotal(total, range) {\n              //   //   return `${range[0]}-${range[1]} of ${total}`;\n              //   // },\n              //   onChange(page, pageSize) {\n              //     startRefetchTransition(() => {\n              //       setPaginationState({\n              //         current: page,\n              //         pageSize: pageSize || 100,\n              //       });\n              //     });\n              //   },\n              // }}\n            />\n          </Suspense>\n        </Flex>\n      </Flex>\n      <BAIModal\n        open={isOpenModelServiceTerminatingModal}\n        title={t('dialog.title.LetsDouble-Check')}\n        okButtonProps={{\n          loading: terminateModelServiceMutation.isLoading,\n        }}\n        onOk={() => {\n          // FIXME: any better idea for handling result?\n          terminateModelServiceMutation.mutate(undefined, {\n            onSuccess: (res) => {\n              startRefetchTransition(() => {\n                updateServicesFetchKey();\n              });\n              setIsOpenModelServiceTerminatingModal(false);\n            },\n            onError: (err) => {\n              console.log('terminateModelServiceMutation Error', err);\n            },\n          });\n        }}\n        onCancel={() => {\n          setIsOpenModelServiceTerminatingModal(false);\n        }}\n      >\n        <Flex direction=\"column\" align=\"stretch\" justify=\"center\">\n          <p>\n            {t('modelService.YouAreAboutToTerminate') +\n              (selectedModelService?.name || '') +\n              '.'}\n          </p>\n          <p>{t('dialog.ask.DoYouWantToProceed')}</p>\n        </Flex>\n      </BAIModal>\n      <ModelServiceSettingModal\n        open={isOpenModelServiceSettingModal}\n        onRequestClose={(success) => {\n          setIsOpenModelServiceSettingModal(false);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n        endpointFrgmt={selectedModelService || null}\n      />\n      <ServiceLauncherModal\n        open={isOpenServiceLauncher}\n        onRequestClose={(success) => {\n          setIsOpenServiceLauncher(!isOpenServiceLauncher);\n          if (success) {\n            startRefetchTransition(() => {\n              updateServicesFetchKey();\n            });\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default ServingListPage;\n","/**\n * @generated SignedSource<<924d535c03c0a4c6de25e9db62dfc331>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ServingListPageQuery$variables = {\n  limit: number;\n  offset: number;\n  projectID?: string | null;\n};\nexport type ServingListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly created_user: string | null;\n      readonly desired_session_count: number;\n      readonly domain: string | null;\n      readonly endpoint_id: string | null;\n      readonly image: string | null;\n      readonly model: string | null;\n      readonly name: string | null;\n      readonly open_to_public: boolean | null;\n      readonly project: string | null;\n      readonly resource_group: string | null;\n      readonly resource_slots: any | null;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null;\n        readonly routing_id: string | null;\n        readonly session: string | null;\n        readonly status: string | null;\n        readonly traffic_ratio: number | null;\n      } | null> | null;\n      readonly status: string | null;\n      readonly url: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\" | \"ModelServiceSettingModal_endpoint\">;\n    } | null>;\n    readonly total_count: number;\n  } | null;\n};\nexport type ServingListPageQuery = {\n  response: ServingListPageQuery$data;\n  variables: ServingListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv3 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"filter\",\n    \"value\": \"name != 'koalpaca-test'\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_user\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v18/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v22/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ModelServiceSettingModal_endpoint\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointStatusTagFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ServingListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v5/*: any*/),\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v22/*: any*/),\n                  (v10/*: any*/),\n                  (v23/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v23/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b3f7122c428341734000f9de6c03928c\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ServingListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ServingListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: \\\"name != 'koalpaca-test'\\\") {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      image\\n      model\\n      domain\\n      status\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      created_at @since(version: \\\"23.09.0\\\")\\n      created_user\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      ...ModelServiceSettingModal_endpoint\\n      ...EndpointStatusTagFragment\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\\nfragment ModelServiceSettingModal_endpoint on Endpoint {\\n  endpoint_id\\n  desired_session_count\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"4bdd65d4de1c5a874a4377337f62fe49\";\n\nexport default node;\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DeleteOutlined.displayName = 'DeleteOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar SettingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z\" } }] }, \"name\": \"setting\", \"theme\": \"outlined\" };\nexport default SettingOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SettingOutlinedSvg from \"@ant-design/icons-svg/es/asn/SettingOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SettingOutlined = function SettingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SettingOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SettingOutlined.displayName = 'SettingOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SettingOutlined);","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/jsx-no-useless-fragment */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Panel } from 'rc-dialog';\nimport { withPureRenderTheme } from '../_util/PurePanel';\nimport { ConfigContext } from '../config-provider';\nimport { ConfirmContent } from './ConfirmDialog';\nimport { Footer, renderCloseIcon } from './shared';\nimport useStyle from './style';\nconst PurePanel = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      closeIcon,\n      closable,\n      type,\n      title,\n      children\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"closeIcon\", \"closable\", \"type\", \"title\", \"children\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = customizePrefixCls || getPrefixCls('modal');\n  const [, hashId] = useStyle(prefixCls);\n  const confirmPrefixCls = `${prefixCls}-confirm`;\n  // Choose target props by confirm mark\n  let additionalProps = {};\n  if (type) {\n    additionalProps = {\n      closable: closable !== null && closable !== void 0 ? closable : false,\n      title: '',\n      footer: '',\n      children: /*#__PURE__*/React.createElement(ConfirmContent, Object.assign({}, props, {\n        prefixCls: prefixCls,\n        confirmPrefixCls: confirmPrefixCls,\n        rootPrefixCls: rootPrefixCls,\n        content: children\n      }))\n    };\n  } else {\n    additionalProps = {\n      closable: closable !== null && closable !== void 0 ? closable : true,\n      title,\n      footer: props.footer === undefined ? /*#__PURE__*/React.createElement(Footer, Object.assign({}, props)) : props.footer,\n      children\n    };\n  }\n  return /*#__PURE__*/React.createElement(Panel, Object.assign({\n    prefixCls: prefixCls,\n    className: classNames(hashId, `${prefixCls}-pure-panel`, type && confirmPrefixCls, type && `${confirmPrefixCls}-${type}`, className)\n  }, restProps, {\n    closeIcon: renderCloseIcon(prefixCls, closeIcon),\n    closable: closable\n  }, additionalProps));\n};\nexport default withPureRenderTheme(PurePanel);","\"use client\";\n\nimport confirm, { modalGlobalConfig, withConfirm, withError, withInfo, withSuccess, withWarn } from './confirm';\nimport destroyFns from './destroyFns';\nimport OriginModal from './Modal';\nimport PurePanel from './PurePanel';\nimport useModal from './useModal';\nfunction modalWarn(props) {\n  return confirm(withWarn(props));\n}\nconst Modal = OriginModal;\nModal.useModal = useModal;\nModal.info = function infoFn(props) {\n  return confirm(withInfo(props));\n};\nModal.success = function successFn(props) {\n  return confirm(withSuccess(props));\n};\nModal.error = function errorFn(props) {\n  return confirm(withError(props));\n};\nModal.warning = modalWarn;\nModal.warn = modalWarn;\nModal.confirm = function confirmFn(props) {\n  return confirm(withConfirm(props));\n};\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    const close = destroyFns.pop();\n    if (close) {\n      close();\n    }\n  }\n};\nModal.config = modalGlobalConfig;\nModal._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  Modal.displayName = 'Modal';\n}\nexport default Modal;"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","_endpoint$status","endpointFrgmt","endpoint","useFragment","_EndpointStatusTagFragment","require","color","status","toUpperCase","Tag","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","token","theme","useToken","baiClient","useSuspendedBackendaiClient","t","useTranslation","_Form$useForm","Form","useForm","form","_slicedToArray","_ModelServiceSettingModal_endpoint","mutationToUpdateService","useTanMutation","mutationFn","values","body","to","desired_session_count","baiSignedRequestWithPromise","method","url","concat","endpoint_id","client","BAIModal","style","zIndex","destroyOnClose","onOk","e","validateFields","then","mutate","onSuccess","console","log","onError","error","catch","err","onCancel","okButtonProps","loading","isLoading","title","Flex","direction","align","justify","preserve","validateTrigger","initialValues","marginBottom","marginLG","marginTop","margin","Item","name","label","rules","pattern","message","InputNumber","type","min","node","_$first","_$first2","filter","autoSelectDefault","selectProps","currentProject","useCurrentProjectValue","baiRequestWithPromise","useBaiSignedRequestWithPromise","_useUpdatableState","useUpdatableState","_useUpdatableState2","key","checkUpdate","data","useTanQuery","queryKey","queryFn","id","staleTime","filteredVFolders","_","autoSelectedOption","value","undefined","useEffect","_selectProps$onChange","onChange","call","Select","showSearch","onDropdownVisibleChange","open","startTransition","vfolder","Option","extraP","_$filter$","currentDomain","useCurrentDomainValue","_useResourceSlots","useResourceSlots","resourceSlots","currentImage","useWatch","currentAcceleratorType","getFieldValue","currentImageAcceleratorLimits","resource_limits","limit","currentImageAcceleratorTypeName","acceleratorInfo","includes","acceleratorSlots","setFieldValue","getLimitByAccelerator","ACCELERATOR_UNIT_MAP","acceleratorName","_$filter$2","maxLimit","_config","maxCUDADevicesPerContainer","maxCUDASharesPerContainer","maxROCMDevicesPerContainer","maxTPUDevicesPerContainer","maxIPUDevicesPerContainer","maxATOMDevicesPerContainer","maxWarboyDevicesPerContainer","parseInt","supportedAcceleratorInfo","max","mutationToCreateService","_values$environments$","_values$environments$2","_values$environments$3","_values$environments$4","_values$resource$acce","image","environments","registry","tag","serviceName","desiredRoutingCount","arch","architecture","group","current_group","domain","cluster_size","cluster_mode","open_to_public","openToPublic","config","model","vFolderName","model_mount_destination","environ","scaling_group","resourceGroup","resources","cpu","mem","resource","acceleratorType","accelerator","shmem","resource_opts","length","_err$errorFields","_err$errorFields$0$er","_err$errorFields2","_err$errorFields2$0$e","errorFields","errors","maskClosable","confirmLoading","Suspense","fallback","FlexActivityIndicator","disabled","layout","labelCol","span","required","Input","ResourceGroupSelect","valuePropName","Switch","VFolderSelect","vf","usage_mode","SliderInputItem","inputNumberProps","addonAfter","Card","ImageEnvironmentSelectFormItems","noStyle","shouldUpdate","prev","cur","_prev$environments","_prev$environments$im","_cur$environments","_cur$environments$ima","digest","_ref2","_getFieldValue","_$find","tooltip","Trans","i18nKey","i","maxCPUCoresPerContainer","maxMemoryPerContainer","step","_ref3","validator","_form","_$find2","sizeGInfo","iSizeToSize","number","Promise","reject","Error","size","numberUnit","resolve","maxShmPerContainer","_prev$environments2","_cur$environments2","environment","sliderProps","initialValue","suffixIcon","popupMatchSelectWidth","options","clearRafInterval","handle","cancelAnimationFrame","clearInterval","fn","delay","immediate","fnRef","useLatest","timerRef","useRef","isNumber","current","callback","requestAnimationFrame","setInterval","start","Date","getTime","loop","setRafInterval","useCallback","curProject","_useState","useState","_useState2","isOpenServiceLauncher","setIsOpenServiceLauncher","_useState3","_useState4","selectedModelService","setSelectedModelService","_useState5","_useState6","isOpenModelServiceSettingModal","setIsOpenModelServiceSettingModal","_useState7","pageSize","paginationState","_useTransition","useTransition","_useTransition2","isRefetchPending","startRefetchTransition","_useState9","_useState10","isOpenModelServiceTerminatingModal","setIsOpenModelServiceTerminatingModal","servicesFetchKey","updateServicesFetchKey","_useState11","_useState12","selectedTab","setSelectedTab","useRafInterval","startTransitionWithoutPendingState","modelServiceList","useLazyLoadQuery","_ServingListPageQuery","offset","projectID","fetchPolicy","fetchKey","endpoint_list","sortedEndpointList","items","terminateModelServiceMutation","padding","gap","flex","Tabs","activeKey","tabBarStyle","width","paddingLeft","paddingMD","paddingRight","borderTopLeftRadius","borderRadius","borderTopRightRadius","tabBarExtraContent","right","Button","onClick","Table","scroll","x","rowKey","dataSource","columns","dataIndex","fixed","render","row","Link","Typography","Text","code","text","_row$status","_row$status2","_row$status3","_row$status4","icon","SettingOutlined","toLowerCase","DeleteOutlined","colorError","EndpointStatusTag","created_at","dayjs","format","defaultSortOrder","sortDirections","sorter","a","b","date1","date2","diff","fontWeight","_row$routings","routings","r","CheckOutlined","colorSuccess","CloseOutlined","colorTextSecondary","pagination","res","ModelServiceSettingModal","success","ServiceLauncherModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","hash","props","ref","React","AntdIcon","_extends","DeleteOutlinedSvg","SettingOutlinedSvg","__rest","s","p","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","propertyIsEnumerable","withPureRenderTheme","customizePrefixCls","prefixCls","closeIcon","closable","restProps","getPrefixCls","ConfigContext","rootPrefixCls","_useStyle","useStyle","hashId","confirmPrefixCls","additionalProps","footer","ConfirmContent","content","Footer","Panel","classNames","renderCloseIcon","modalWarn","confirm","withWarn","OriginModal","useModal","info","withInfo","withSuccess","withError","warning","warn","withConfirm","destroyAll","destroyFns","close","pop","modalGlobalConfig","_InternalPanelDoNotUseOrYouWillBeFired","PurePanel"],"sourceRoot":""}