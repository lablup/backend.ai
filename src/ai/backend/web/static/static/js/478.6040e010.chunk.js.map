{"version":3,"file":"static/js/478.6040e010.chunk.js","mappings":"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","sources":["components/DoubleTag.tsx","components/Flex.tsx","components/Information.tsx","helper/index.tsx","hooks/index.ts"],"sourcesContent":["import { Tag } from \"antd\";\nimport Flex from \"./Flex\";\nimport _ from \"lodash\";\n\ntype ObjectValue = {\n  label: string;\n  color?: string;\n};\nconst DoubleTag: React.FC<{\n  values?: string[] | ObjectValue[];\n}> = ({ values = [] }) => {\n  if (values.length === 0) return null;\n  let objectValues: ObjectValue[];\n  if (_.isString(values[0])) {\n    objectValues = values.map((value) => ({\n      label: value as string,\n      color: \"blue\",\n    }));\n  } else {\n    objectValues = values as ObjectValue[];\n  }\n\n  return (\n    <Flex direction=\"row\">\n      {_.map(objectValues, (objValue, idx) => {\n        return (\n          <Tag\n            key={idx}\n            style={\n              _.last(objectValues) === objValue\n                ? undefined\n                : { margin: 0, marginRight: -1, zIndex: 1 }\n            }\n          >\n            {objValue.label}\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default DoubleTag;\n","import { theme } from \"antd\";\nimport React, { PropsWithChildren } from \"react\";\n\nexport interface FlexProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"dir\">,\n    PropsWithChildren {\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n  wrap?: \"nowrap\" | \"wrap\" | \"wrap-reverse\";\n  justify?: \"start\" | \"end\" | \"center\" | \"between\" | \"around\";\n  // | \"evenly\";\n  align?: \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\";\n  gap?: number | \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nconst Flex: React.FC<FlexProps> = ({\n  direction = \"row\",\n  wrap = \"nowrap\",\n  justify = \"flex-start\",\n  align = \"center\",\n  gap = 0,\n  style,\n  children,\n  ...restProps\n}) => {\n  const { token } = theme.useToken();\n\n  const transferConst = [justify, align];\n  const transferConstStyle = transferConst?.map((el) => {\n    let tempTxt;\n    switch (el) {\n      case \"start\":\n        tempTxt = \"flex-start\";\n        break;\n      case \"end\":\n        tempTxt = \"flex-end\";\n        break;\n      case \"between\":\n        tempTxt = \"space-between\";\n        break;\n      case \"around\":\n        tempTxt = \"space-around\";\n        break;\n      default:\n        tempTxt = el;\n        break;\n    }\n\n    return tempTxt;\n  });\n  const flexStyle: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: direction,\n    flexWrap: wrap,\n    justifyContent: transferConstStyle[0],\n    alignItems: transferConstStyle[1],\n    ...style,\n  };\n\n  return (\n    <div\n      style={{\n        alignItems: \"stretch\",\n        backgroundColor: \"transparent\",\n        border: \"0 solid black\",\n        boxSizing: \"border-box\",\n        display: \"flex\",\n        flexBasis: \"auto\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        listStyle: \"none\",\n        margin: 0,\n        minHeight: 0,\n        minWidth: 0,\n        padding: 0,\n        position: \"relative\",\n        textDecoration: \"none\",\n        gap:\n          // @ts-ignore\n          typeof gap === \"string\" ? token[\"padding\" + gap.toUpperCase()] : gap,\n        ...flexStyle,\n      }}\n      {...restProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","import { ReactNode } from \"react\";\nimport { CheckOutlined, WarningOutlined } from \"@ant-design/icons\";\nimport {\n  Descriptions,\n  Typography,\n  Tag,\n  Card,\n  theme,\n  DescriptionsProps,\n  Spin,\n  Row,\n  Col,\n} from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport Flex from \"./Flex\";\nimport { useQuery } from \"react-query\";\nimport { newLineToBrElement } from \"../helper\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport DoubleTag from \"./DoubleTag\";\n\nconst DescriptionLabel: React.FC<{\n  title: string;\n  subtitle?: ReactNode | string | null;\n}> = ({ title, subtitle }) => {\n  // const { token } = theme.useToken();\n  return (\n    <Flex direction=\"column\" align=\"start\">\n      <Typography.Text strong>{title}</Typography.Text>\n      {subtitle && (\n        <Typography.Text type=\"secondary\">{subtitle}</Typography.Text>\n      )}\n    </Flex>\n  );\n};\n\ninterface InformationProps {}\nconst Information: React.FC<InformationProps> = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const baiClient = useSuspendedBackendaiClient();\n\n  let { data: licenseInfo, isLoading: isLoadingLicenseInfo } = useQuery<{\n    valid: boolean;\n    type: string;\n    licensee: string;\n    key: string;\n    expiration: string;\n  }>(\n    \"licenseInfo\",\n    () => {\n      return baiClient.enterprise.getLicense();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    }\n  );\n\n  if (!licenseInfo) {\n    licenseInfo = {\n      valid: false,\n      type: t(\"information.CannotRead\"),\n      licensee: t(\"information.CannotRead\"),\n      key: t(\"information.CannotRead\"),\n      expiration: t(\"information.CannotRead\"),\n    };\n  }\n\n  const columnSetting: DescriptionsProps[\"column\"] = {\n    xxl: 4,\n    xl: 4,\n    lg: 2,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM, gap: token.margin }}\n    >\n      <Row gutter={[token.margin, token.margin]}>\n        <Col xs={24} xxl={12}>\n          <Card\n            style={{\n              height: \"100%\",\n            }}\n          >\n            <Descriptions\n              title={t(\"information.Core\")}\n              bordered\n              column={columnSetting}\n            >\n              <Descriptions.Item\n                label={\n                  <DescriptionLabel title={t(\"information.ManagerVersion\")} />\n                }\n              >\n                <Flex\n                  direction=\"column\"\n                  style={{ gap: token.marginXXS }}\n                  align=\"start\"\n                >\n                  Backend.AI {baiClient.managerVersion}\n                  <DoubleTag\n                    values={[\n                      t(\"information.Installation\"),\n                      baiClient.managerVersion,\n                    ]}\n                  />\n                  {/* TODO: get manager_version_latest  */}\n                  {/* <DoubleTag\n                label={t(\"information.LatestRelease\")}\n                value={\"manager_version_latest\"}\n              /> */}\n                </Flex>\n              </Descriptions.Item>\n              <Descriptions.Item\n                label={<DescriptionLabel title={t(\"information.APIVersion\")} />}\n              >\n                {baiClient.apiVersion}\n              </Descriptions.Item>\n            </Descriptions>\n          </Card>\n        </Col>\n        <Col xs={24} xxl={12}>\n          <Card>\n            <Descriptions\n              title={t(\"information.Security\")}\n              bordered\n              column={columnSetting}\n            >\n              <Descriptions.Item\n                label={\n                  <DescriptionLabel\n                    title={t(\"information.DefaultAdministratorAccountChanged\")}\n                    subtitle={t(\n                      \"information.DescDefaultAdministratorAccountChanged\"\n                    )}\n                  />\n                }\n              >\n                {/* TODO: accountChanged  */}\n                {true ? (\n                  <CheckOutlined title=\"Yes\" />\n                ) : (\n                  <WarningOutlined style={{ color: \"red\" }} title=\"No\" />\n                )}\n              </Descriptions.Item>\n              <Descriptions.Item\n                label={\n                  <DescriptionLabel\n                    title={t(\"information.UsesSSL\")}\n                    subtitle={t(\"information.DescUsesSSL\")}\n                  />\n                }\n              >\n                {baiClient?._config.endpoint.startsWith(\"https:\") ? (\n                  <CheckOutlined title=\"Yes\" />\n                ) : (\n                  <WarningOutlined style={{ color: \"red\" }} title=\"No\" />\n                )}\n              </Descriptions.Item>\n            </Descriptions>\n          </Card>\n        </Col>\n      </Row>\n\n      <Card>\n        <Descriptions\n          title={t(\"information.Component\")}\n          bordered\n          column={{ xxl: 4, xl: 2, lg: 2, md: 1, sm: 1, xs: 1 }}\n        >\n          <Descriptions.Item\n            label={\n              <DescriptionLabel\n                title={t(\"information.DockerVersion\")}\n                subtitle={t(\"information.DescDockerVersion\")}\n              />\n            }\n          >\n            <Tag>{t(\"information.Compatible\")}</Tag>\n          </Descriptions.Item>\n          <Descriptions.Item\n            label={\n              <DescriptionLabel\n                title={t(\"information.PostgreSQLVersion\")}\n                subtitle={t(\"information.DescPostgreSQLVersion\")}\n              />\n            }\n          >\n            <Tag>{t(\"information.Compatible\")}</Tag>\n          </Descriptions.Item>\n          <Descriptions.Item\n            label={\n              <DescriptionLabel\n                title={t(\"information.ETCDVersion\")}\n                subtitle={t(\"information.DescETCDVersion\")}\n              />\n            }\n          >\n            <Tag>{t(\"information.Compatible\")}</Tag>\n          </Descriptions.Item>\n          <Descriptions.Item\n            label={\n              <DescriptionLabel\n                title={t(\"information.RedisVersion\")}\n                subtitle={newLineToBrElement(t(\"information.DescRedisVersion\"))}\n              />\n            }\n          >\n            <Tag>{t(\"information.Compatible\")}</Tag>\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n      <Card>\n        <Spin spinning={isLoadingLicenseInfo}>\n          <Descriptions\n            title={t(\"information.License\")}\n            bordered\n            column={{\n              xxl: 2,\n              xl: 2,\n              lg: 2,\n              md: 1,\n              sm: 1,\n              xs: 1,\n            }}\n          >\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.IsLicenseValid\")}\n                  subtitle={t(\"information.DescIsLicenseValid\")}\n                />\n              }\n            >\n              {licenseInfo.valid ? (\n                <CheckOutlined />\n              ) : (\n                <WarningOutlined style={{ color: \"red\" }} />\n              )}\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.LicenseType\")}\n                  subtitle={newLineToBrElement(\n                    t(\"information.DescLicenseType\")\n                  )}\n                />\n              }\n            >\n              <Tag>\n                {licenseInfo.type === \"fixed\"\n                  ? t(\"information.FixedLicense\")\n                  : t(\"information.DynamicLicense\")}\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.Licensee\")}\n                  subtitle={t(\"information.DescLicensee\")}\n                />\n              }\n            >\n              <Tag>{licenseInfo.licensee}</Tag>\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.LicenseKey\")}\n                  subtitle={t(\"information.DescLicenseKey\")}\n                />\n              }\n            >\n              <Tag>{licenseInfo.key}</Tag>\n            </Descriptions.Item>\n            <Descriptions.Item\n              label={\n                <DescriptionLabel\n                  title={t(\"information.Expiration\")}\n                  subtitle={t(\"information.DescExpiration\")}\n                />\n              }\n            >\n              <Tag>{licenseInfo.expiration}</Tag>\n            </Descriptions.Item>\n          </Descriptions>\n        </Spin>\n      </Card>\n    </Flex>\n  );\n};\n\nexport default Information;\n","import { useSuspendedBackendaiClient } from \"../hooks\";\n\nexport const newLineToBrElement = (\n  text: string,\n  separatorRegExp = /(<br\\s*\\/?>|\\n)/\n) => {\n  return text.split(separatorRegExp).map((line, index) => {\n    return line.match(separatorRegExp) ? <br key={index} /> : line;\n  });\n};\n\nexport const baiSignedRequestWithPromise = ({\n  method,\n  url,\n  body = null,\n  client,\n}: {\n  method: string;\n  url: string;\n  body?: any;\n  client: any;\n}) => {\n  let request = client?.newSignedRequest(method, url, body, null);\n  return client?._wrapWithPromise(request);\n};\n\nexport const useBaiSignedRequestWithPromise = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return ({\n    method,\n    url,\n    body = null,\n  }: {\n    method: string;\n    url: string;\n    body?: any;\n  }) =>\n    baiSignedRequestWithPromise({\n      method,\n      url,\n      body,\n      client: baiClient,\n    });\n};\n\n/**\n * Convert file size with binary unit to human readable unit and value\n *\n * @param {number} bytes\n * @param {number} decimalPoint decimal point set to 2 as a default\n * @return {string} converted file size to human readable value\n */\nexport const _humanReadableDecimalSize = (bytes = 0, decimalPoint = 2) => {\n  if (bytes === 0) return \"0 Bytes\";\n  const k = Math.pow(10, 3);\n  decimalPoint = decimalPoint < 0 ? 0 : decimalPoint;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"];\n  let i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) + \" \" + sizes[i]\n  );\n};\n\nexport const _humanReadableBinarySize = (\n  bytes = 0,\n  decimalPoint = 2,\n  compact = false\n) => {\n  if (!bytes) return 0;\n  if (typeof bytes === \"string\") bytes = parseInt(bytes);\n  const k = Math.pow(2, 10);\n  let i;\n  let unitList;\n  decimalPoint = decimalPoint < 0 || compact ? 0 : decimalPoint;\n  i = Math.floor(Math.log(Math.round(bytes)) / Math.log(k));\n  i = i < 0 ? 0 : i; // avoid negative value\n  if (compact) {\n    unitList = [\"\", \"Ki\", \"Mi\", \"Gi\", \"Ti\", \"Pi\", \"Ei\"];\n  } else {\n    unitList = [\"Bytes\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\"];\n  }\n  return (\n    parseFloat((bytes / Math.pow(k, i)).toFixed(decimalPoint)) +\n    \" \" +\n    unitList[i]\n  );\n};\n\nexport const GBToBytes = (value = 0) => {\n  const gigabyte = Math.pow(10, 9);\n  return Math.round(gigabyte * value);\n};\n\nexport const bytesToGB = (\n  bytes: number,\n  decimalPoint = 2,\n  nullStr: string = \"-\"\n) => {\n  if (bytes === null || bytes === undefined) return nullStr;\n  if (!bytes) return bytes;\n  return (bytes / 10 ** 9).toFixed(decimalPoint);\n};\n\nexport type QuotaScopeType = \"project\" | \"user\";\nexport const addQuotaScopeTypePrefix = (type: QuotaScopeType, str: string) => {\n  if (str === \"\" || str === undefined) return \"\";\n  if (str.startsWith(`${type}:`)) return str;\n  return `${type}:${str}`;\n};\n\nexport const usageIndicatorColor = (percentage: number) => {\n  return percentage < 70\n    ? \"rgba(58, 178, 97, 1)\"\n    : percentage < 90\n    ? \"rgb(223, 179, 23)\"\n    : \"#ef5350\";\n};\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const useBackendAIConnectedState = () => {\n  const [time, setTime] = useState<string>();\n\n  useEffect(() => {\n    const listener = () => {\n      setTime(new Date().toISOString());\n    };\n    document.addEventListener(\"backend-ai-connected\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-connected\", listener);\n    };\n  }, []);\n\n  return time;\n};\n\nexport const useDateISOState = (initialValue?: string) => {\n  const [value, setValue] = useState(initialValue || new Date().toISOString());\n\n  const update = (newValue?: string) => {\n    setValue(newValue || new Date().toISOString());\n  };\n  return [value, update] as const;\n};\n\nexport const useUpdatableState = (initialValue: string) => {\n  return useDateISOState(initialValue);\n};\n\nexport const useCurrentDomainValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  return baiClient._config.domainName;\n};\n\nexport const useCurrentProjectValue = () => {\n  const baiClient = useSuspendedBackendaiClient();\n  const [project, _setProject] = useState<{\n    name: string;\n    id: string;\n  }>({\n    name: baiClient.current_group,\n    id: baiClient.groupIds[baiClient.current_group],\n  });\n\n  useEffect(() => {\n    const listener = (e: any) => {\n      const newProjectName = e.detail;\n      _setProject({\n        name: newProjectName,\n        id: baiClient.groupIds[newProjectName],\n      });\n    };\n    document.addEventListener(\"backend-ai-group-changed\", listener);\n    return () => {\n      document.removeEventListener(\"backend-ai-group-changed\", listener);\n    };\n  });\n\n  return project;\n};\n\nexport const useAnonymousBackendaiClient = ({\n  api_endpoint,\n}: {\n  api_endpoint: string;\n}) => {\n  const client = useMemo(() => {\n    //@ts-ignore\n    const clientConfig = new globalThis.BackendAIClientConfig(\n      \"\",\n      \"\",\n      api_endpoint,\n      \"SESSION\"\n    );\n    //@ts-ignore\n    return new globalThis.BackendAIClient(clientConfig, \"Backend.AI Console.\");\n  }, [api_endpoint]);\n\n  return client;\n};\n\nexport const useSuspendedBackendaiClient = () => {\n  const { data: client } = useQuery<any>({\n    queryKey: \"backendai-client-for-suspense\",\n    queryFn: () =>\n      new Promise((resolve) => {\n        if (\n          //@ts-ignore\n          typeof globalThis.backendaiclient === \"undefined\" ||\n          //@ts-ignore\n          globalThis.backendaiclient === null ||\n          //@ts-ignore\n          globalThis.backendaiclient.ready === false\n        ) {\n          const listener = () => {\n            // @ts-ignore\n            resolve(globalThis.backendaiclient);\n            document.removeEventListener(\"backend-ai-connected\", listener);\n          };\n          document.addEventListener(\"backend-ai-connected\", listener);\n        } else {\n          //@ts-ignore\n          return resolve(globalThis.backendaiclient);\n        }\n      }),\n    retry: false,\n    // enabled: false,\n    suspense: true,\n  });\n\n  return client;\n};\n\ninterface ImageMetadata {\n  name: string;\n  description: string;\n  group: string;\n  tags: string[];\n  icon: string;\n  label: {\n    category: string;\n    tag: string;\n    color: string;\n  }[];\n}\n\nexport const useBackendaiImageMetaData = () => {\n  const { data: metadata } = useQuery({\n    queryKey: \"backendai-metadata-for-suspense\",\n    queryFn: () => {\n      return fetch(\"resources/image_metadata.json\")\n        .then((response) => response.json())\n        .then(\n          (json: {\n            imageInfo: {\n              [key: string]: ImageMetadata;\n            };\n            tagAlias: {\n              [key: string]: string;\n            };\n            tagReplace: {\n              [key: string]: string;\n            };\n          }) => {\n            return json;\n          }\n        );\n    },\n    suspense: true,\n    retry: false,\n  });\n\n  const getImageMeta = (imageName: string) => {\n    // cr.backend.ai/multiarch/python:3.9-ubuntu20.04\n    // key = python, tags = [3.9, ubuntu20.04]\n    if (!imageName) {\n      return {\n        key: \"\",\n        tags: [],\n      };\n    }\n    const specs = imageName.split(\"/\");\n\n    const [key, tag] = (specs[2] || specs[1]).split(\":\");\n    const tags = tag.split(\"-\");\n\n    return { key, tags };\n  };\n\n  return [\n    metadata,\n    {\n      getImageAliasName: (imageName: string) => {\n        const { key } = getImageMeta(imageName);\n        return metadata?.imageInfo[key].name || key;\n      },\n      getImageIcon: (imageName?: string | null, path = \"resources/icons/\") => {\n        if (!imageName) return \"default.png\";\n        const { key } = getImageMeta(imageName);\n        return (\n          path +\n          (metadata?.imageInfo[key].icon !== undefined\n            ? metadata?.imageInfo[key].icon\n            : \"default.png\")\n        );\n      },\n      getImageTags: (imageName: string) => {\n        // const { key, tags } = getImageMeta(imageName);\n      },\n      getBaseVersion: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[0];\n      },\n      getBaseImage: (imageName: string) => {\n        const { tags } = getImageMeta(imageName);\n        return tags[1];\n      },\n      getImageMeta,\n    },\n  ] as const;\n};\n"],"names":["_ref","objectValues","_ref$values","values","length","_","map","value","label","color","_jsx","Flex","direction","children","objValue","idx","Tag","style","undefined","margin","marginRight","zIndex","_ref$direction","_ref$wrap","wrap","_ref$justify","justify","_ref$align","align","_ref$gap","gap","restProps","_objectWithoutProperties","_excluded","token","theme","transferConst","transferConstStyle","el","tempTxt","flexStyle","_objectSpread","display","flexDirection","flexWrap","justifyContent","alignItems","backgroundColor","border","boxSizing","flexBasis","flexShrink","listStyle","minHeight","minWidth","padding","position","textDecoration","toUpperCase","DescriptionLabel","title","subtitle","_jsxs","Typography","strong","type","t","useTranslation","baiClient","useSuspendedBackendaiClient","_useQuery","useQuery","enterprise","getLicense","suspense","licenseInfo","data","isLoadingLicenseInfo","isLoading","valid","licensee","key","expiration","columnSetting","xxl","xl","lg","md","sm","xs","marginSM","Row","gutter","Col","Card","height","Descriptions","bordered","column","marginXXS","managerVersion","DoubleTag","apiVersion","CheckOutlined","_config","endpoint","startsWith","WarningOutlined","newLineToBrElement","Spin","spinning","text","separatorRegExp","arguments","split","line","index","match","baiSignedRequestWithPromise","method","url","_ref$body","body","client","request","newSignedRequest","_wrapWithPromise","useBaiSignedRequestWithPromise","_ref2","_ref2$body","_humanReadableDecimalSize","bytes","decimalPoint","k","Math","pow","i","floor","log","round","parseFloat","toFixed","GBToBytes","gigabyte","bytesToGB","addQuotaScopeTypePrefix","str","concat","usageIndicatorColor","percentage","useUpdatableState","initialValue","_useState3","useState","Date","toISOString","_useState4","_slicedToArray","setValue","newValue","useDateISOState","useCurrentDomainValue","domainName","useCurrentProjectValue","_useState5","name","current_group","id","groupIds","_useState6","project","_setProject","useEffect","listener","e","newProjectName","detail","document","addEventListener","removeEventListener","useAnonymousBackendaiClient","api_endpoint","useMemo","clientConfig","globalThis","BackendAIClientConfig","BackendAIClient","queryKey","queryFn","Promise","resolve","backendaiclient","ready","retry","useBackendaiImageMetaData","metadata","fetch","then","response","json","getImageMeta","imageName","tags","specs","_split","_split2","getImageAliasName","imageInfo","getImageIcon","path","icon","getImageTags","getBaseVersion","getBaseImage"],"sourceRoot":""}