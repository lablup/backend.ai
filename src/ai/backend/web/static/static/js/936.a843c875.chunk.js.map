{"version":3,"file":"static/js/936.a843c875.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/__generated__/DomainSelectorQuery.graphql.ts","components/__generated__/ProjectSelectorQuery.graphql.ts","components/__generated__/QuotaScopeCardFragment.graphql.ts","components/__generated__/QuotaScopeCardUnsetMutation.graphql.ts","components/__generated__/QuotaSettingModalFragment.graphql.ts","components/__generated__/QuotaSettingModalSetMutation.graphql.ts","components/__generated__/StorageHostResourcePanelFragment.graphql.ts","components/__generated__/StorageHostSettingsPanelQuery.graphql.ts","components/__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql.ts","components/__generated__/UserSelectorQuery.graphql.ts","components/StorageHostResourcePanel.tsx","components/DomainSelector.tsx","components/ProjectSelector.tsx","components/QuotaScopeCard.tsx","components/QuotaSettingModal.tsx","components/UserSelector.tsx","components/StorageHostSettingsPanel.tsx","pages/StorageHostSettingPage.tsx","pages/__generated__/StorageHostSettingPageQuery.graphql.ts"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","import { parse, print, visit } from 'graphql';\n\n// Delete nodes in enter\n// Remove unnecessary arguments or directives in leave\nexport function manipulateGraphQLQueryWithClientDirectives(\n  query: string,\n  variables: any = {},\n  isCompatibleWith: (version: string) => boolean,\n) {\n  const ast = parse(query);\n  let newAst = visit(ast, {\n    Field: {\n      enter(node) {\n        if (\n          node?.directives?.find((directive) => {\n            const directiveName = directive.name.value;\n            const firstArgName = directive.arguments?.[0].name.value;\n            // @ts-ignore\n            const firstArgValue = directive.arguments?.[0].value?.value;\n            const arg = directive.arguments?.[0];\n\n            if (directiveName === 'since' && firstArgName === 'version') {\n              if (isCompatibleWith(firstArgValue)) {\n                return true;\n              }\n            } else if (\n              directiveName === 'deprecatedSince' &&\n              firstArgName === 'version'\n            ) {\n              const version =\n                arg?.value.kind === 'StringValue'\n                  ? arg?.value.value\n                  : // @ts-ignore\n                    variables[arg?.value.name.value];\n\n              if (!isCompatibleWith(version)) {\n                return true;\n              }\n            } else if (\n              directiveName === 'skipOnClient' &&\n              firstArgName === 'if'\n            ) {\n              if (arg?.value.kind === 'BooleanValue' && arg.value.value) {\n                return true;\n              }\n\n              if (\n                arg?.value.kind === 'Variable' &&\n                variables[arg.value.name.value]\n              ) {\n                return true;\n              }\n            }\n            return false;\n          })\n        ) {\n          return null;\n        }\n      },\n      leave(node) {\n        // when field has a empty selectionSet, delete it\n        if (\n          node.selectionSet &&\n          node.selectionSet.kind === 'SelectionSet' &&\n          node.selectionSet.selections?.length === 0\n        ) {\n          return null;\n        }\n      },\n    },\n    Directive: {\n      // delete all onClient directives\n      leave(directive) {\n        const directiveName = directive.name.value;\n        if (\n          ['since', 'deprecatedSince', 'skipOnClient'].includes(directiveName)\n        ) {\n          return null;\n        }\n      },\n    },\n  });\n\n  // count used variables\n  const usedVariables: {\n    [key: string]: number;\n  } = {};\n  visit(newAst, {\n    Variable(node) {\n      usedVariables[node.name.value] =\n        (usedVariables[node.name.value] || 0) + 1;\n    },\n  });\n\n  // delete unused variables\n  newAst = visit(newAst, {\n    VariableDefinition: {\n      enter(variableDefinition) {\n        if (usedVariables[variableDefinition.variable.name.value] <= 1) {\n          return null;\n        }\n      },\n    },\n  });\n\n  return print(newAst);\n}\n","// import { createClient } from \"graphql-ws\";\nimport { manipulateGraphQLQueryWithClientDirectives } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  //@ts-ignore\n  if (globalThis.backendaiclient === undefined) {\n    // If globalThis.backendaiclient is not defined, wait for the backend-ai-connected event.\n    await new Promise((resolve) => {\n      const onBackendAIConnected = () => {\n        // When the backend-ai-connected event occurs, remove the event listener and execute the function.\n        document.removeEventListener(\n          'backend-ai-connected',\n          onBackendAIConnected,\n        );\n        resolve(undefined);\n      };\n      document.addEventListener('backend-ai-connected', onBackendAIConnected);\n    });\n  }\n\n  const transformedQuery = manipulateGraphQLQueryWithClientDirectives(\n    request.text || '',\n    variables,\n    (version) => {\n      // @ts-ignore\n      return !globalThis.backendaiclient?.isManagerVersionCompatibleWith(\n        version,\n      );\n    },\n  );\n\n  const reqBody = {\n    query: transformedQuery,\n    variables: variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  const result =\n    //@ts-ignore\n    (await globalThis.backendaiclient\n      ?._wrapWithPromise(reqInfo, false, null, 10000, 0)\n      .catch((err: any) => {\n        // console.log(err);\n      })) || {};\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { App, ConfigProvider } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport localeData from 'dayjs/plugin/localeData';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport weekday from 'dayjs/plugin/weekday';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\n\ndayjs.extend(weekday);\ndayjs.extend(localeData);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (\n    path: string,\n    params?: {\n      [key in string]?: boolean | string | number;\n    },\n  ) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n    react: {\n      transSupportBasicHtmlNodes: true,\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'span', 'code', 'p'],\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // For changing locale globally, use dayjs.locale instead of dayjs().locale\n    dayjs.locale(lang);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n      // For changing locale globally, use dayjs.locale instead of dayjs().locale\n      dayjs.locale(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path, params) => {\n        dispatchEvent('moveTo', { path, params: params });\n      },\n    } as WebComponentContextType;\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return triggerNode?.parentNode || shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <App>\n                      <StyleProvider container={shadowRoot} cache={cache}>\n                        <Suspense fallback=\"\">\n                          <BrowserRouter>\n                            <QueryParamProvider\n                              adapter={ReactRouter6Adapter}\n                              options={\n                                {\n                                  // searchStringToObject: queryString.parse,\n                                  // objectToSearchString: queryString.stringify,\n                                }\n                              }\n                            >\n                              <RoutingEventHandler />\n                              {children}\n                            </QueryParamProvider>\n                          </BrowserRouter>\n                        </Suspense>\n                      </StyleProvider>\n                    </App>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","/**\n * @generated SignedSource<<6ad571f958b08687b3fc333087b06e3d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type DomainSelectorQuery$variables = {};\nexport type DomainSelectorQuery$data = {\n  readonly domains: ReadonlyArray<{\n    readonly name: string | null;\n  } | null> | null;\n};\nexport type DomainSelectorQuery = {\n  response: DomainSelectorQuery$data;\n  variables: DomainSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Domain\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"domains\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": \"domains(is_active:true)\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"9df762094b74dc3eb8079edfcc73765f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DomainSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query DomainSelectorQuery {\\n  domains(is_active: true) {\\n    name\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c14d362fa40cf9a3cef5d1d71202cc5f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<24b91faaeb38995d3c992d9a146b74e7>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ProjectSelectorQuery$variables = {\n  domain_name?: string | null;\n};\nexport type ProjectSelectorQuery$data = {\n  readonly projects: ReadonlyArray<{\n    readonly id: string | null;\n    readonly is_active: boolean | null;\n    readonly name: string | null;\n    readonly resource_policy: string | null;\n  } | null> | null;\n};\nexport type ProjectSelectorQuery = {\n  response: ProjectSelectorQuery$data;\n  variables: ProjectSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domain_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": \"projects\",\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"domain_name\",\n        \"variableName\": \"domain_name\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Group\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"groups\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"is_active\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"resource_policy\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"eecad68ff1a08d753ce22ff2c5136c26\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectSelectorQuery(\\n  $domain_name: String\\n) {\\n  projects: groups(domain_name: $domain_name, is_active: true) {\\n    id\\n    is_active\\n    name\\n    resource_policy\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"2845b31197571f750613f64207ded239\";\n\nexport default node;\n","/**\n * @generated SignedSource<<fa8655d02b2a4ba957bcfae08413c711>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaScopeCardFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n    readonly usage_bytes: any | null;\n  };\n  readonly id: string;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n  readonly \" $fragmentType\": \"QuotaScopeCardFragment\";\n};\nexport type QuotaScopeCardFragment$key = {\n  readonly \" $data\"?: QuotaScopeCardFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaScopeCardFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"usage_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"QuotaSettingModalFragment\"\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"78fe420c92ce5b9c8d5c133d1f9c389f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c9ef98a65aa188713d0d68772c0d71d0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeCardUnsetMutation$variables = {\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaScopeCardUnsetMutation$data = {\n  readonly unset_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: string;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaScopeCardUnsetMutation = {\n  response: QuotaScopeCardUnsetMutation$data;\n  variables: QuotaScopeCardUnsetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"quota_scope_id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"storage_host_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"UnsetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"unset_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"338836966362b14e823520f40fa56a73\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaScopeCardUnsetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n) {\\n  unset_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"272001cc642518fb66015dcc367b9f65\";\n\nexport default node;\n","/**\n * @generated SignedSource<<74b0722713082f1859b11fb47fd59383>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaSettingModalFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n  };\n  readonly id: string;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentType\": \"QuotaSettingModalFragment\";\n};\nexport type QuotaSettingModalFragment$key = {\n  readonly \" $data\"?: QuotaSettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaSettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1c5ad8315a2d78cb376e7436dc6a8627\";\n\nexport default node;\n","/**\n * @generated SignedSource<<6333e8d3a5761c3d9dfece0047077e91>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeInput = {\n  hard_limit_bytes?: any | null;\n};\nexport type QuotaSettingModalSetMutation$variables = {\n  props: QuotaScopeInput;\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaSettingModalSetMutation$data = {\n  readonly set_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: string;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaSettingModalSetMutation = {\n  response: QuotaSettingModalSetMutation$data;\n  variables: QuotaSettingModalSetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"SetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"set_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"d337cab9be9523bfde2bfb7d6bed595b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaSettingModalSetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $props: QuotaScopeInput!\\n) {\\n  set_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name, props: $props) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e8509b3174920c1dd917ece91d41161\";\n\nexport default node;\n","/**\n * @generated SignedSource<<43d4063d6d35b79d500b74f0832dea56>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostResourcePanelFragment$data = {\n  readonly backend: string | null;\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly path: string | null;\n  readonly usage: any | null;\n  readonly \" $fragmentType\": \"StorageHostResourcePanelFragment\";\n};\nexport type StorageHostResourcePanelFragment$key = {\n  readonly \" $data\"?: StorageHostResourcePanelFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostResourcePanelFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"backend\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"path\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"30a1b4101eeb2fae45385780dbc0ddcc\";\n\nexport default node;\n","/**\n * @generated SignedSource<<cc5385d4435185bd015bd7a7fc10a82a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanelQuery$variables = {\n  quota_scope_id: string;\n  skipQuotaScope: boolean;\n  storage_host_name: string;\n};\nexport type StorageHostSettingsPanelQuery$data = {\n  readonly quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\" | \"QuotaSettingModalFragment\">;\n  } | null;\n};\nexport type StorageHostSettingsPanelQuery = {\n  response: StorageHostSettingsPanelQuery$data;\n  variables: StorageHostSettingsPanelQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipQuotaScope\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"quota_scope_id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"storage_host_name\",\n    \"variableName\": \"storage_host_name\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaSettingModalFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaScopeCardFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v3/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"quota_scope_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"storage_host_name\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"QuotaDetails\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"details\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hard_limit_bytes\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"usage_bytes\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"378699d92e64ba9559bfbe8e533d6c6a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingsPanelQuery(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $skipQuotaScope: Boolean!\\n) {\\n  quota_scope(storage_host_name: $storage_host_name, quota_scope_id: $quota_scope_id) @skip(if: $skipQuotaScope) {\\n    ...QuotaSettingModalFragment\\n    ...QuotaScopeCardFragment\\n    id\\n  }\\n}\\n\\nfragment QuotaScopeCardFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n    usage_bytes\\n  }\\n  ...QuotaSettingModalFragment\\n}\\n\\nfragment QuotaSettingModalFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"ef16372a7f5bf0c1844a65d4b63fe4d9\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7acd4325686b832afcb8cccb2a539ff6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$data = {\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly \" $fragmentType\": \"StorageHostSettingsPanel_storageVolumeFrgmt\";\n};\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$key = {\n  readonly \" $data\"?: StorageHostSettingsPanel_storageVolumeFrgmt$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"2f9e5e6060806e6f9265e5cbbd325afe\";\n\nexport default node;\n","/**\n * @generated SignedSource<<bf0b4cbded1569190cc46f94e0dca86c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserSelectorQuery$variables = {\n  filter?: string | null;\n  limit: number;\n  offset: number;\n};\nexport type UserSelectorQuery$data = {\n  readonly user_list: {\n    readonly items: ReadonlyArray<{\n      readonly email: string | null;\n      readonly id: string | null;\n      readonly is_active: boolean | null;\n      readonly resource_policy: string | null;\n    } | null>;\n  } | null;\n};\nexport type UserSelectorQuery = {\n  response: UserSelectorQuery$data;\n  variables: UserSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"filter\",\n        \"variableName\": \"filter\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"limit\",\n        \"variableName\": \"limit\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"offset\",\n        \"variableName\": \"offset\"\n      }\n    ],\n    \"concreteType\": \"UserList\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_list\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"items\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"is_active\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"resource_policy\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f552e13a727e58f49a7a7e49a466d4d2\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSelectorQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $filter: String\\n) {\\n  user_list(limit: $limit, offset: $offset, filter: $filter, is_active: true) {\\n    items {\\n      id\\n      is_active\\n      email\\n      resource_policy\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"323d93fb2d8eb4ee2d1d3677121f9ad2\";\n\nexport default node;\n","import { humanReadableDecimalSize, usageIndicatorColor } from '../helper/index';\nimport { StorageHostResourcePanelFragment$key } from './__generated__/StorageHostResourcePanelFragment.graphql';\nimport { Progress, Descriptions, Typography, Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\nconst StorageHostResourcePanel: React.FC<{\n  storageVolumeFrgmt: StorageHostResourcePanelFragment$key | null;\n}> = ({ storageVolumeFrgmt: resourceFrgmt }) => {\n  const { t } = useTranslation();\n\n  const resource = useFragment(\n    graphql`\n      fragment StorageHostResourcePanelFragment on StorageVolume {\n        id\n        backend\n        capabilities\n        path\n        usage\n      }\n    `,\n    resourceFrgmt,\n  );\n\n  const parsedUsage = JSON.parse(resource?.usage || '{}');\n  const usedBytes = parsedUsage?.used_bytes;\n  const capacityBytes = parsedUsage?.capacity_bytes;\n  const usageRatio = capacityBytes > 0 ? usedBytes / capacityBytes : 0;\n  const storageUsage = {\n    used_bytes: usedBytes,\n    capacity_bytes: capacityBytes,\n    percent: Number((usageRatio * 100).toFixed(1)),\n  };\n\n  return (\n    <Descriptions size=\"small\" bordered column={3}>\n      <Descriptions.Item label={t('storageHost.Usage')} span={3}>\n        {storageUsage?.percent < 100 ? (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            strokeColor={usageIndicatorColor(storageUsage?.percent)}\n          ></Progress>\n        ) : (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            status=\"exception\"\n          ></Progress>\n        )}\n        <Typography.Text type=\"secondary\">\n          {t('storageHost.Used')}:{' '}\n        </Typography.Text>\n        {humanReadableDecimalSize(storageUsage?.used_bytes)}\n        <Typography.Text type=\"secondary\">{' / '}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {t('storageHost.Total')}:{' '}\n        </Typography.Text>\n        {humanReadableDecimalSize(storageUsage?.capacity_bytes)}\n      </Descriptions.Item>\n      <Descriptions.Item label={t('agent.Endpoint')}>\n        {resource?.path}\n      </Descriptions.Item>\n      <Descriptions.Item label={t('agent.BackendType')}>\n        {resource?.backend}\n      </Descriptions.Item>\n      <Descriptions.Item label={t('agent.Capabilities')}>\n        {_.map(resource?.capabilities, (cap) => (\n          <Tag key={cap}>{cap}</Tag>\n        ))}\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default StorageHostResourcePanel;\n","import { DomainSelectorQuery } from './__generated__/DomainSelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends SelectProps {\n  onSelectDomain?: (project: any) => void;\n}\nconst DomainSelector: React.FC<Props> = ({\n  onSelectDomain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { domains } = useLazyLoadQuery<DomainSelectorQuery>(\n    graphql`\n      query DomainSelectorQuery {\n        domains(is_active: true) {\n          name\n        }\n      }\n    `,\n    {},\n    {\n      fetchPolicy: 'store-and-network',\n    },\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectDomain?.(option);\n      }}\n      placeholder={t('storageHost.quotaSettings.SelectDomain')}\n      {...selectProps}\n    >\n      {_.map(domains, (domain) => {\n        return (\n          <Select.Option key={domain?.name} domainName={domain?.name}>\n            {domain?.name}\n          </Select.Option>\n        );\n      })}\n      ;\n    </Select>\n  );\n};\n\nexport default DomainSelector;\n","import { ProjectSelectorQuery } from './__generated__/ProjectSelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends SelectProps {\n  onSelectProject?: (project: any) => void;\n  domain: string;\n}\n\nconst ProjectSelector: React.FC<Props> = ({\n  onSelectProject,\n  domain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { projects } = useLazyLoadQuery<ProjectSelectorQuery>(\n    graphql`\n      query ProjectSelectorQuery($domain_name: String) {\n        projects: groups(domain_name: $domain_name, is_active: true) {\n          id\n          is_active\n          name\n          resource_policy\n        }\n      }\n    `,\n    {\n      domain_name: domain,\n    },\n    {\n      fetchPolicy: 'store-and-network',\n    },\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectProject?.(option);\n      }}\n      placeholder={t('storageHost.quotaSettings.SelectProject')}\n      {...selectProps}\n    >\n      {_.map(projects, (project) => {\n        return (\n          <Select.Option\n            key={project?.id}\n            projectId={project?.id}\n            projectResourcePolicy={project?.resource_policy}\n          >\n            {project?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default ProjectSelector;\n","import { bytesToGB } from '../helper/index';\nimport Flex from './Flex';\nimport { QuotaScopeCardFragment$key } from './__generated__/QuotaScopeCardFragment.graphql';\nimport { QuotaScopeCardUnsetMutation } from './__generated__/QuotaScopeCardUnsetMutation.graphql';\nimport { EditFilled, PlusOutlined, CloseOutlined } from '@ant-design/icons';\nimport {\n  CardProps,\n  Table,\n  Button,\n  Popconfirm,\n  message,\n  Empty,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ninterface Props extends CardProps {\n  quotaScopeFrgmt: QuotaScopeCardFragment$key | null;\n  showAddButtonWhenEmpty: boolean;\n  onClickEdit: () => void;\n}\nconst QuotaScopeCard: React.FC<Props> = ({\n  quotaScopeFrgmt,\n  showAddButtonWhenEmpty,\n  onClickEdit,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const quota_scope = useFragment(\n    graphql`\n      fragment QuotaScopeCardFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n          usage_bytes\n        }\n        ...QuotaSettingModalFragment\n      }\n    `,\n    quotaScopeFrgmt,\n  );\n\n  const [commitUnsetQuotaScope, isInFlightCommitUnsetQuotaScope] =\n    useMutation<QuotaScopeCardUnsetMutation>(graphql`\n      mutation QuotaScopeCardUnsetMutation(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n      ) {\n        unset_quota_scope(\n          quota_scope_id: $quota_scope_id\n          storage_host_name: $storage_host_name\n        ) {\n          quota_scope {\n            id\n            quota_scope_id\n            storage_host_name\n            details {\n              hard_limit_bytes\n            }\n          }\n        }\n      }\n    `);\n\n  const selectProjectOrUserFirst = (\n    <Empty\n      style={{ width: '100%' }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={<div>{t('storageHost.quotaSettings.SelectFirst')}</div>}\n    />\n  );\n\n  const addQuotaConfigsWhenEmpty = (\n    <Empty\n      style={{ width: '100%' }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={\n        <>\n          <div style={{ margin: 10 }}>\n            {t('storageHost.quotaSettings.ClickSettingButton')}\n          </div>\n          <Button\n            icon={<PlusOutlined />}\n            onClick={() => onClickEdit && onClickEdit()}\n          >\n            {t('storageHost.quotaSettings.AddQuotaConfigs')}\n          </Button>\n        </>\n      }\n    />\n  );\n\n  return (\n    <Table\n      bordered\n      rowKey=\"id\"\n      columns={[\n        {\n          title: t('storageHost.quotaSettings.QuotaScopeId'),\n          dataIndex: 'quota_scope_id',\n          key: 'quota_scope_id',\n          render: (value) => <code>{value}</code>,\n        },\n        {\n          title: t('storageHost.HardLimit') + ' (GB)',\n          dataIndex: ['details', 'hard_limit_bytes'],\n          key: 'hard_limit_bytes',\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t('storageHost.Usage') + ' (GB)',\n          dataIndex: ['details', 'usage_bytes'],\n          key: 'usage_bytes',\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t('general.Control'),\n          key: 'control',\n          render: () => (\n            <Flex gap={token.marginSM}>\n              <Button\n                icon={<EditFilled />}\n                onClick={() => onClickEdit && onClickEdit()}\n              >\n                {t('button.Edit')}\n              </Button>\n              <Popconfirm\n                title={t('storageHost.quotaSettings.UnsetCustomSettings')}\n                description={t(\n                  'storageHost.quotaSettings.ConfirmUnsetCustomQuota',\n                )}\n                placement=\"bottom\"\n                onConfirm={() => {\n                  if (quota_scope) {\n                    commitUnsetQuotaScope({\n                      variables: {\n                        quota_scope_id: quota_scope.quota_scope_id,\n                        storage_host_name: quota_scope.storage_host_name,\n                      },\n                      onCompleted() {\n                        message.success(\n                          t(\n                            'storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated',\n                          ),\n                        );\n                      },\n                      onError(error) {\n                        message.error(error?.message);\n                      },\n                    });\n                  }\n                }}\n              >\n                <Button\n                  loading={isInFlightCommitUnsetQuotaScope}\n                  danger\n                  icon={<CloseOutlined />}\n                >\n                  {t('button.Unset')}\n                </Button>\n              </Popconfirm>\n            </Flex>\n          ),\n        },\n      ]}\n      dataSource={quota_scope ? [quota_scope] : []}\n      locale={{\n        emptyText: showAddButtonWhenEmpty\n          ? addQuotaConfigsWhenEmpty\n          : selectProjectOrUserFirst,\n      }}\n      pagination={false}\n    />\n  );\n};\n\nexport default QuotaScopeCard;\n","import { GBToBytes, bytesToGB } from '../helper';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { QuotaSettingModalFragment$key } from './__generated__/QuotaSettingModalFragment.graphql';\nimport { QuotaSettingModalSetMutation } from './__generated__/QuotaSettingModalSetMutation.graphql';\nimport { Form, Input, message } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useMutation } from 'react-relay';\n\ninterface Props extends BAIModalProps {\n  quotaScopeFrgmt?: QuotaSettingModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst QuotaSettingModal: React.FC<Props> = ({\n  quotaScopeFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const quotaScope = useFragment(\n    graphql`\n      fragment QuotaSettingModalFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n        }\n      }\n    `,\n    quotaScopeFrgmt,\n  );\n\n  const [commitSetQuotaScope, isInFlightCommitSetQuotaScope] =\n    useMutation<QuotaSettingModalSetMutation>(graphql`\n      mutation QuotaSettingModalSetMutation(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $props: QuotaScopeInput!\n      ) {\n        set_quota_scope(\n          quota_scope_id: $quota_scope_id\n          storage_host_name: $storage_host_name\n          props: $props\n        ) {\n          quota_scope {\n            id\n            quota_scope_id\n            storage_host_name\n            details {\n              hard_limit_bytes\n            }\n          }\n        }\n      }\n    `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      commitSetQuotaScope({\n        variables: {\n          quota_scope_id: quotaScope?.quota_scope_id || '',\n          storage_host_name: quotaScope?.storage_host_name || '',\n          props: {\n            hard_limit_bytes: GBToBytes(values?.hard_limit_bytes),\n          },\n        },\n        onCompleted(response) {\n          if (response?.set_quota_scope?.quota_scope?.id) {\n            message.success(\n              t('storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated'),\n            );\n          } else {\n            message.error(t('dialog.ErrorOccurred'));\n          }\n          onRequestClose();\n        },\n        onError(error) {\n          console.log(error);\n          message.error(error?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      {...baiModalProps}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitSetQuotaScope}\n      onCancel={onRequestClose}\n      title={t('storageHost.quotaSettings.QuotaSettings')}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ marginBottom: 40, marginTop: 20 }}\n      >\n        <Form.Item\n          name=\"hard_limit_bytes\"\n          label={t('storageHost.HardLimit')}\n          initialValue={bytesToGB(quotaScope?.details?.hard_limit_bytes)}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t('storageHost.quotaSettings.AllowNumberAndDot') ||\n                'Allows numbers and .(dot) only',\n            },\n          ]}\n        >\n          <Input\n            addonAfter=\"GB\"\n            type=\"number\"\n            step={0.25}\n            style={{ width: '70%' }}\n          />\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default QuotaSettingModal;\n","import { UserSelectorQuery } from './__generated__/UserSelectorQuery.graphql';\nimport { Select, SelectProps } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends SelectProps {\n  onSelectUser: (user: any) => void;\n}\n\nconst UserSelector: React.FC<Props> = ({ onSelectUser, ...selectProps }) => {\n  const { t } = useTranslation();\n  const [search, setSearch] = useState<string>('');\n  const deferredSearch = useDeferredValue(search);\n  const { user_list } = useLazyLoadQuery<UserSelectorQuery>(\n    graphql`\n      query UserSelectorQuery($limit: Int!, $offset: Int!, $filter: String) {\n        user_list(\n          limit: $limit\n          offset: $offset\n          filter: $filter\n          is_active: true\n        ) {\n          items {\n            id\n            is_active\n            email\n            resource_policy\n          }\n        }\n      }\n    `,\n    {\n      limit: 150,\n      offset: 0,\n      filter:\n        deferredSearch?.length === 0\n          ? null\n          : 'email ilike \"%' + deferredSearch + '%\"',\n    },\n    {\n      fetchPolicy: 'store-and-network',\n    },\n  );\n  return (\n    <Select\n      filterOption={false}\n      searchValue={search}\n      loading={deferredSearch !== search}\n      onSearch={(value) => {\n        setSearch(value);\n      }}\n      onChange={(value) => {\n        onSelectUser(\n          _.find(user_list?.items, (user) => {\n            return user?.email === value;\n          }),\n        );\n      }}\n      showSearch\n      placeholder={t('storageHost.quotaSettings.SelectUser')}\n      options={_.map(user_list?.items, (user) => {\n        return {\n          value: user?.email,\n          label: user?.email,\n        };\n      }).sort((a, b) => (a.value && b.value && a.value > b.value ? 1 : -1))}\n      {...selectProps}\n    />\n  );\n};\n\nexport default UserSelector;\n","import { QuotaScopeType, addQuotaScopeTypePrefix } from '../helper/index';\nimport { useCurrentDomainValue, useUpdatableState } from '../hooks';\nimport DomainSelector from './DomainSelector';\nimport Flex from './Flex';\nimport ProjectSelector from './ProjectSelector';\nimport QuotaScopeCard from './QuotaScopeCard';\nimport QuotaSettingModal from './QuotaSettingModal';\nimport UserSelector from './UserSelector';\nimport { StorageHostSettingsPanelQuery } from './__generated__/StorageHostSettingsPanelQuery.graphql';\nimport { StorageHostSettingsPanel_storageVolumeFrgmt$key } from './__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql';\nimport { useToggle } from 'ahooks';\nimport { Card, Form, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment, useLazyLoadQuery } from 'react-relay';\n\ninterface StorageHostSettingsPanelProps {\n  extraFetchKey?: string;\n  storageVolumeFrgmt: StorageHostSettingsPanel_storageVolumeFrgmt$key | null;\n}\nconst StorageHostSettingsPanel: React.FC<StorageHostSettingsPanelProps> = ({\n  storageVolumeFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const storageVolume = useFragment(\n    graphql`\n      fragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\n        id\n        capabilities\n      }\n    `,\n    storageVolumeFrgmt,\n  );\n\n  const [isPending, startTransition] = useTransition();\n  const currentDomain = useCurrentDomainValue();\n  const [currentSettingType, setCurrentSettingType] =\n    useState<QuotaScopeType>('user');\n\n  const [selectedDomainName, setSelectedDomainName] =\n    useState<string>(currentDomain);\n  const [selectedProjectId, setSelectedProjectId] = useState<string>();\n  useState<string>();\n  const [selectedUserId, setSelectedUserId] = useState<string>();\n  const [selectedUserEmail, setSelectedUserEmail] = useState<string>();\n  useState<string>();\n\n  const quotaScopeId = addQuotaScopeTypePrefix(\n    currentSettingType,\n    (currentSettingType === 'project' ? selectedProjectId : selectedUserId) ||\n      '',\n  );\n\n  const [isOpenQuotaSettingModal, { toggle: toggleQuotaSettingModal }] =\n    useToggle(false);\n  const [fetchKey] = useUpdatableState('default');\n\n  const { quota_scope } = useLazyLoadQuery<StorageHostSettingsPanelQuery>(\n    graphql`\n      query StorageHostSettingsPanelQuery(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $skipQuotaScope: Boolean!\n      ) {\n        quota_scope(\n          storage_host_name: $storage_host_name\n          quota_scope_id: $quota_scope_id\n        ) @skip(if: $skipQuotaScope) {\n          ...QuotaSettingModalFragment\n          ...QuotaScopeCardFragment\n        }\n      }\n    `,\n    {\n      // quota scope\n      quota_scope_id: quotaScopeId,\n      skipQuotaScope: quotaScopeId === undefined || quotaScopeId === '',\n      storage_host_name: storageVolume?.id || '',\n    },\n    {\n      fetchPolicy: 'network-only',\n      fetchKey: fetchKey,\n    },\n  );\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Card\n        title={t('storageHost.QuotaSettings')}\n        tabList={[\n          {\n            key: 'user',\n            tab: t('storageHost.ForUser'),\n          },\n          {\n            key: 'project',\n            tab: t('storageHost.ForProject'),\n          },\n        ]}\n        activeTabKey={currentSettingType}\n        // eslint-disable-next-line\n        //@ts-ignore\n        onTabChange={(v) => {\n          startTransition(() => {\n            setCurrentSettingType(v as QuotaScopeType);\n          });\n        }}\n      >\n        <Flex justify=\"between\">\n          {currentSettingType === 'project' ? (\n            <Flex style={{ marginBottom: 10 }}>\n              <Form layout=\"inline\">\n                <Form.Item label={t('resourceGroup.Domain')}>\n                  <DomainSelector\n                    style={{ width: '20vw', marginRight: 10 }}\n                    value={selectedDomainName}\n                    onSelectDomain={(domain: any) => {\n                      startTransition(() => {\n                        setSelectedDomainName(domain?.domainName);\n                        setSelectedProjectId(undefined);\n                      });\n                    }}\n                  />\n                </Form.Item>\n                <Form.Item label={t('webui.menu.Project')}>\n                  <ProjectSelector\n                    style={{ width: '20vw' }}\n                    value={selectedProjectId}\n                    disabled={!selectedDomainName}\n                    domain={selectedDomainName || ''}\n                    onSelectProject={(project: any) => {\n                      startTransition(() => {\n                        setSelectedProjectId(project?.projectId);\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Form>\n            </Flex>\n          ) : (\n            <Form layout=\"inline\">\n              <Form.Item label={t('data.User')}>\n                <UserSelector\n                  style={{ width: '30vw', marginBottom: 10 }}\n                  value={selectedUserEmail}\n                  onSelectUser={(user) => {\n                    setSelectedUserEmail(user?.email);\n                    startTransition(() => {\n                      setSelectedUserId(user?.id);\n                    });\n                  }}\n                />\n              </Form.Item>\n            </Form>\n          )}\n        </Flex>\n        <Spin spinning={isPending}>\n          <QuotaScopeCard\n            quotaScopeFrgmt={quota_scope || null}\n            onClickEdit={() => {\n              toggleQuotaSettingModal();\n            }}\n            showAddButtonWhenEmpty={\n              (currentSettingType === 'project' && !!selectedProjectId) ||\n              (currentSettingType === 'user' && !!selectedUserId)\n            }\n          />\n        </Spin>\n        <QuotaSettingModal\n          open={isOpenQuotaSettingModal}\n          quotaScopeFrgmt={quota_scope || null}\n          onRequestClose={() => {\n            toggleQuotaSettingModal();\n          }}\n        />\n      </Card>\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingsPanel;\n","import { useWebComponentInfo } from '../components/DefaultProviders';\nimport Flex from '../components/Flex';\nimport StorageHostResourcePanel from '../components/StorageHostResourcePanel';\nimport StorageHostSettingsPanel from '../components/StorageHostSettingsPanel';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { StorageHostSettingPageQuery } from './__generated__/StorageHostSettingPageQuery.graphql';\nimport { Breadcrumb, Card, Empty, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React, { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface StorageHostSettingPageProps {\n  storageHostId: string;\n}\nconst StorageHostSettingPage: React.FC<StorageHostSettingPageProps> = ({\n  storageHostId,\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { moveTo } = useWebComponentInfo();\n  const { t } = useTranslation();\n  const { storage_volume } = useLazyLoadQuery<StorageHostSettingPageQuery>(\n    graphql`\n      query StorageHostSettingPageQuery($id: String) {\n        storage_volume(id: $id) {\n          id\n          capabilities\n          ...StorageHostResourcePanelFragment\n          ...StorageHostSettingsPanel_storageVolumeFrgmt\n        }\n      }\n    `,\n    {\n      id: storageHostId || '',\n    },\n  );\n\n  const isQuotaSupportedStorage =\n    storage_volume?.capabilities?.includes('quota') ?? false;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM, gap: token.margin }}\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: 'Resources',\n            onClick: (e) => {\n              e.preventDefault();\n              moveTo('/agent');\n            },\n            href: '/agent',\n          },\n          {\n            title: 'Storage setting',\n          },\n        ]}\n      ></Breadcrumb>\n      <Typography.Title level={3} style={{ margin: 0 }}>\n        {storageHostId || ''}\n      </Typography.Title>\n      <StorageHostResourcePanel storageVolumeFrgmt={storage_volume || null} />\n      {baiClient.supports('quota-scope') && (\n        <>\n          {isQuotaSupportedStorage ? (\n            <Suspense fallback={<div>loading...</div>}>\n              <StorageHostSettingsPanel\n                storageVolumeFrgmt={storage_volume || null}\n              />\n            </Suspense>\n          ) : (\n            <Card title={t('storageHost.QuotaSettings')}>\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={t('storageHost.QuotaDoesNotSupported')}\n              />\n            </Card>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingPage;\n","/**\n * @generated SignedSource<<283a752f4675b1e3d4fe6f0da7198984>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingPageQuery$variables = {\n  id?: string | null;\n};\nexport type StorageHostSettingPageQuery$data = {\n  readonly storage_volume: {\n    readonly capabilities: ReadonlyArray<string | null> | null;\n    readonly id: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\" | \"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n  } | null;\n};\nexport type StorageHostSettingPageQuery = {\n  response: StorageHostSettingPageQuery$data;\n  variables: StorageHostSettingPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"capabilities\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostResourcePanelFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"backend\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"path\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"821175f86743d9d81be2a55aca371919\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingPageQuery(\\n  $id: String\\n) {\\n  storage_volume(id: $id) {\\n    id\\n    capabilities\\n    ...StorageHostResourcePanelFragment\\n    ...StorageHostSettingsPanel_storageVolumeFrgmt\\n  }\\n}\\n\\nfragment StorageHostResourcePanelFragment on StorageVolume {\\n  id\\n  backend\\n  capabilities\\n  path\\n  usage\\n}\\n\\nfragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\\n  id\\n  capabilities\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"f6e77057e83b0449ef99e8918e794b24\";\n\nexport default node;\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","manipulateGraphQLQueryWithClientDirectives","query","variables","arguments","length","undefined","isCompatibleWith","ast","parse","newAst","visit","Field","enter","node","_node$directives","directives","find","directive","_directive$arguments","_directive$arguments2","_directive$arguments3","_directive$arguments4","directiveName","name","value","firstArgName","firstArgValue","arg","version","kind","leave","_node$selectionSet$se","selectionSet","selections","Directive","includes","usedVariables","Variable","VariableDefinition","variableDefinition","variable","print","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai2","_globalThis$backendai3","transformedQuery","reqBody","reqInfo","result","wrap","_context","prev","next","globalThis","backendaiclient","Promise","resolve","document","addEventListener","onBackendAIConnected","removeEventListener","text","_globalThis$backendai","isManagerVersionCompatibleWith","newSignedRequest","_wrapWithPromise","catch","err","t0","sent","abrupt","stop","_x","_x2","apply","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","dayjs","weekday","localeData","localizedFormat","relativeTime","utc","timezone","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","react","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","replace","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","_slicedToArray","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","params","RelayEnvironmentProvider","environment","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","App","StyleProvider","container","Suspense","fallback","BrowserRouter","QueryParamProvider","adapter","ReactRouter6Adapter","options","v0","hash","v1","v2","v3","resourceFrgmt","storageVolumeFrgmt","t","resource","useFragment","_StorageHostResourcePanelFragment","require","parsedUsage","JSON","usage","usedBytes","used_bytes","capacityBytes","capacity_bytes","storageUsage","percent","Number","toFixed","Descriptions","size","bordered","column","Item","label","span","Progress","strokeColor","usageIndicatorColor","status","Typography","Text","type","humanReadableDecimalSize","_","capabilities","cap","Tag","onSelectDomain","selectProps","_objectWithoutProperties","_excluded","domains","useLazyLoadQuery","_DomainSelectorQuery","fetchPolicy","Select","onChange","option","placeholder","domain","Option","domainName","onSelectProject","projects","_ProjectSelectorQuery","domain_name","project","projectId","id","projectResourcePolicy","resource_policy","quotaScopeFrgmt","showAddButtonWhenEmpty","onClickEdit","token","useToken","quota_scope","_QuotaScopeCardFragment","_useMutation","useMutation","_QuotaScopeCardUnsetMutation","_useMutation2","commitUnsetQuotaScope","isInFlightCommitUnsetQuotaScope","selectProjectOrUserFirst","Empty","style","width","image","PRESENTED_IMAGE_SIMPLE","description","addQuotaConfigsWhenEmpty","margin","Button","icon","PlusOutlined","onClick","Table","rowKey","columns","title","dataIndex","key","render","bytesToGB","Flex","gap","marginSM","EditFilled","Popconfirm","placement","onConfirm","quota_scope_id","storage_host_name","onCompleted","message","success","onError","error","loading","danger","CloseOutlined","dataSource","emptyText","pagination","_quotaScope$details","_ref$quotaScopeFrgmt","onRequestClose","baiModalProps","_Form$useForm","Form","useForm","form","quotaScope","_QuotaSettingModalFragment","_QuotaSettingModalSetMutation","commitSetQuotaScope","isInFlightCommitSetQuotaScope","BAIModal","zIndex","destroyOnClose","onOk","validateFields","then","values","props","hard_limit_bytes","GBToBytes","response","_response$set_quota_s","_response$set_quota_s2","set_quota_scope","console","log","confirmLoading","onCancel","preserve","labelCol","wrapperCol","validateTrigger","marginBottom","marginTop","initialValue","details","rules","pattern","Input","addonAfter","step","onSelectUser","search","setSearch","deferredSearch","useDeferredValue","user_list","_UserSelectorQuery","limit","offset","filter","filterOption","searchValue","onSearch","items","user","email","showSearch","sort","a","b","storageVolume","_StorageHostSettingsPanel_storageVolumeFrgmt","_useTransition","useTransition","_useTransition2","isPending","startTransition","currentDomain","useCurrentDomainValue","currentSettingType","setCurrentSettingType","_useState3","_useState4","selectedDomainName","setSelectedDomainName","_useState5","_useState6","selectedProjectId","setSelectedProjectId","_useState7","_useState8","selectedUserId","setSelectedUserId","_useState9","_useState10","selectedUserEmail","setSelectedUserEmail","quotaScopeId","addQuotaScopeTypePrefix","_useToggle","useToggle","_useToggle2","isOpenQuotaSettingModal","toggleQuotaSettingModal","toggle","_useUpdatableState","useUpdatableState","fetchKey","_StorageHostSettingsPanelQuery","skipQuotaScope","direction","align","Card","tabList","tab","activeTabKey","onTabChange","v","justify","layout","DomainSelector","marginRight","ProjectSelector","disabled","UserSelector","Spin","spinning","QuotaScopeCard","QuotaSettingModal","open","_storage_volume$capab","_storage_volume$capab2","storageHostId","baiClient","useSuspendedBackendaiClient","storage_volume","_StorageHostSettingPageQuery","isQuotaSupportedStorage","Breadcrumb","preventDefault","href","Title","level","StorageHostResourcePanel","supports","StorageHostSettingsPanel"],"sourceRoot":""}