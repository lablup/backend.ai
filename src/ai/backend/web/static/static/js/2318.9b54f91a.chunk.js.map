{"version":3,"file":"static/js/2318.9b54f91a.chunk.js","mappings":"8QAYA,MA+EA,EA1E6CA,IAC3C,MAAMC,GAAUC,EAAAA,EAAAA,QAEL,OACL,EAAEC,IAAMC,EAAAA,EAAAA,MACRC,GAAgBC,EAAAA,EAAAA,MAEtB,OADAC,EAAAA,EAAAA,OAEEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,IAAKT,EAASU,OAAO,SAASC,aAAa,cAAeZ,EAAKa,SAAA,EACnEC,EAAAA,EAAAA,KAACL,EAAAA,EAAKM,KAAI,CACRC,KAAK,MACLC,MAAOd,EAAE,sBACTe,MAAO,CACL,CACEC,UAAU,GAEZ,CACEC,QAAS,IAAIC,OAAO,qCACpBC,QAASnB,EAAE,8BAEb,CACEoB,KAAM,SACNC,IAAK,OAGTC,MAAO,CACLC,KAAM,GACNb,UAEFC,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACC,YAAazB,EAAE,2BAExBW,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CACLC,MAAMhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAqB,IAC5BR,KAAK,UACLS,QAASA,KAAO,IAADC,EACE,QAAfA,EAAAhC,EAAQiC,eAAO,IAAAD,GAAfA,EACIE,iBACDC,MAAMC,IACL,MAAMC,EAAkCD,EAAOE,IA1CjDC,QAAQ,SAAU,KAClBA,QAAQ,aAAc,6BA0CpB,MAAMC,EAAuD,CAC3DC,YAAa,sBAAuBC,EAAAA,EAAAA,IAAqB,GACzDC,aAAc,CACZC,YAAa,+BAEfC,iBAAkB,sBAAwBR,GAEtCS,EAAS,IAAIC,gBACnBD,EAAOE,IAAI,OAAQ,KACnBF,EAAOE,IAAI,aAAcC,KAAKC,UAAUV,IACxCM,EAAOE,IACL,YACAC,KAAKC,UAAU,CACbC,QAAS,UACTC,SAAUf,EAAYgB,MAAM,KAAKC,SAGrClD,EAAc,kBAAkB0C,EAAOS,aAAc,CACnDC,MAAO,CACLC,KAAM,CACJC,SAAU,UACV1C,MAAOd,EAAE,4BAGb,IAEHyD,OAAM,QAAS,EAClB/C,SAEDV,EAAE,gCAEA,E,eCjFX,MAiBA,EAjByB0D,KACvB,MAAM,EAAE1D,IAAMC,EAAAA,EAAAA,OACR,MAAE0D,GAAUC,EAAAA,EAAMC,WACxB,OACElD,EAAAA,EAAAA,KAACmD,EAAAA,EAAO,CACNC,MAAO/D,EAAE,yBACTgE,aAAW,EACX1C,MAAO,CACL2C,SAAU,IACVC,aAAcP,EAAMQ,WACpBzD,UAEFC,EAAAA,EAAAA,KAACyD,EAAc,KACP,C","sources":["components/ImportNotebook.tsx","pages/ImportAndRunPage.tsx"],"sourcesContent":["import { generateRandomString } from '../helper';\nimport { useSuspendedBackendaiClient, useWebUINavigate } from '../hooks';\nimport {\n  AppOption,\n  SessionLauncherFormValue,\n} from '../pages/SessionLauncherPage';\nimport { SessionLauncherPageLocationState } from './LocationStateBreadCrumb';\nimport { CloudDownloadOutlined } from '@ant-design/icons';\nimport { Button, Form, FormInstance, FormProps, Input } from 'antd';\nimport { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst regularizeGithubURL = (url: string) => {\n  url = url.replace('/blob/', '/');\n  url = url.replace('github.com', 'raw.githubusercontent.com');\n  return url;\n};\nconst ImportNotebook: React.FC<FormProps> = (props) => {\n  const formRef = useRef<FormInstance<{\n    url: string;\n  }> | null>(null);\n  const { t } = useTranslation();\n  const webuiNavigate = useWebUINavigate();\n  useSuspendedBackendaiClient();\n  return (\n    <Form ref={formRef} layout=\"inline\" requiredMark=\"optional\" {...props}>\n      <Form.Item\n        name=\"url\"\n        label={t('import.NotebookURL')}\n        rules={[\n          {\n            required: true,\n          },\n          {\n            pattern: new RegExp('^(https?)://([\\\\w./-]{1,}).ipynb$'),\n            message: t('import.InvalidNotebookURL'),\n          },\n          {\n            type: 'string',\n            max: 2048,\n          },\n        ]}\n        style={{\n          flex: 1,\n        }}\n      >\n        <Input placeholder={t('import.NotebookURL')} />\n      </Form.Item>\n      <Button\n        icon={<CloudDownloadOutlined />}\n        type=\"primary\"\n        onClick={() => {\n          formRef.current\n            ?.validateFields()\n            .then((values) => {\n              const notebookURL = regularizeGithubURL(values.url);\n              const launcherValue: DeepPartial<SessionLauncherFormValue> = {\n                sessionName: 'imported-notebook-' + generateRandomString(5),\n                environments: {\n                  environment: 'cr.backend.ai/stable/python',\n                },\n                bootstrap_script: '#!/bin/sh\\ncurl -O ' + notebookURL,\n              };\n              const params = new URLSearchParams();\n              params.set('step', '4');\n              params.set('formValues', JSON.stringify(launcherValue));\n              params.set(\n                'appOption',\n                JSON.stringify({\n                  runtime: 'jupyter',\n                  filename: notebookURL.split('/').pop(),\n                } as AppOption),\n              );\n              webuiNavigate(`/session/start?${params.toString()}`, {\n                state: {\n                  from: {\n                    pathname: '/import',\n                    label: t('webui.menu.Import&Run'),\n                  },\n                } as SessionLauncherPageLocationState,\n              });\n            })\n            .catch(() => {});\n        }}\n      >\n        {t('import.GetAndRunNotebook')}\n      </Button>\n    </Form>\n  );\n};\n\nexport default ImportNotebook;\n","import BAICard from '../components/BAICard';\nimport ImportNotebook from '../components/ImportNotebook';\nimport { theme } from 'antd';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst ImportAndRunPage = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  return (\n    <BAICard\n      title={t('import.ImportNotebook')}\n      showDivider\n      style={{\n        maxWidth: 728,\n        marginBottom: token.paddingMD,\n      }}\n    >\n      <ImportNotebook />\n    </BAICard>\n  );\n};\n\nexport default ImportAndRunPage;\n"],"names":["props","formRef","useRef","t","useTranslation","webuiNavigate","useWebUINavigate","useSuspendedBackendaiClient","_jsxs","Form","ref","layout","requiredMark","children","_jsx","Item","name","label","rules","required","pattern","RegExp","message","type","max","style","flex","Input","placeholder","Button","icon","CloudDownloadOutlined","onClick","_formRef$current","current","validateFields","then","values","notebookURL","url","replace","launcherValue","sessionName","generateRandomString","environments","environment","bootstrap_script","params","URLSearchParams","set","JSON","stringify","runtime","filename","split","pop","toString","state","from","pathname","catch","ImportAndRunPage","token","theme","useToken","BAICard","title","showDivider","maxWidth","marginBottom","paddingMD","ImportNotebook"],"sourceRoot":""}