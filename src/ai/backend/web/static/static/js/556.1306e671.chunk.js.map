{"version":3,"file":"static/js/556.1306e671.chunk.js","mappings":"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","sources":["components/BAIModal.tsx","helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/UserInfoModal.tsx","components/__generated__/UserInfoModalQuery.graphql.ts"],"sourcesContent":["// @ts-ignore\nimport rawBAIModalCss from './BAIModal.css?raw';\nimport { Modal, ModalProps } from 'antd';\nimport React from 'react';\n\nexport interface BAIModalProps extends ModalProps {\n  okText?: string; // customize text of ok button with adequate content\n}\nconst BAIModal: React.FC<BAIModalProps> = ({ ...modalProps }) => {\n  return (\n    <>\n      <style>{rawBAIModalCss}</style>\n      <Modal\n        centered={modalProps.centered ?? true}\n        className=\"bai-modal\"\n        {...modalProps}\n      />\n    </>\n  );\n};\n\nexport default BAIModal;\n","function parseDirectives(str: string) {\n  const pattern = /(\\w+)\\s@\\s*(\\w+)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/g;\n  const directives = [];\n\n  let result;\n  while ((result = pattern.exec(str)) !== null) {\n    const [originFieldStr, fieldName, directive, argumentName, argumentValue] =\n      result;\n    directives.push({\n      fieldName,\n      directive,\n      argumentName,\n      argumentValue,\n      originFieldStr,\n    });\n  }\n\n  return directives;\n}\n\nexport function removeSkipOnClientDirective(\n  query: string,\n  variables: {\n    [key: string]: any;\n  },\n) {\n  const filteredVariables = { ...variables };\n  const directives = parseDirectives(query);\n  directives.forEach((directive) => {\n    if (\n      directive.directive === 'skipOnClient' &&\n      directive.argumentName === 'if'\n    ) {\n      if (\n        directive.argumentValue &&\n        (variables[directive.argumentValue.substring(1)] === true ||\n          directive.argumentValue === 'true')\n      ) {\n        // remove all lines of query that contains directive\n        query = query.replace(directive.originFieldStr, '');\n      } else {\n        // remove directive only\n        query = query.replace(\n          directive.originFieldStr,\n          directive.originFieldStr.replace(\n            /@\\s*(skipOnClient)\\s*\\(\\s*(\\w+)\\s*:\\s*(\\$?\\w+)\\s*\\)/,\n            '',\n          ),\n        );\n      }\n\n      // if argumentValue is variable and it is not used in query, remove it from variables and argument definition\n      if (\n        directive.argumentValue.startsWith('$') &&\n        query.split(directive.argumentValue).length === 2\n      ) {\n        const argumentNameWithoutDollar = directive.argumentValue.substring(1);\n        const pattern = new RegExp(`.*${argumentNameWithoutDollar}.*\\n`, 'g');\n        query = query.replace(pattern, '');\n        delete filteredVariables[directive.argumentValue.substring(1)];\n      }\n    } else {\n    }\n  });\n  return {\n    query: query,\n    variables: filteredVariables,\n  };\n}\n","// import { createClient } from \"graphql-ws\";\nimport { removeSkipOnClientDirective } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  // @skipOnClient directive modifies GraphQL queries according to the availability of a supported field.\n  const transformedData = removeSkipOnClientDirective(\n    request.text || '',\n    variables,\n  );\n\n  const reqBody = {\n    query: transformedData.query,\n    variables: transformedData.variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  const result =\n    //@ts-ignore\n    (await globalThis.backendaiclient\n      ?._wrapWithPromise(reqInfo, false, null, 10000, 0)\n      .catch((err: any) => {\n        // console.log(err);\n      })) || {};\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { App, ConfigProvider } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport localeData from 'dayjs/plugin/localeData';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport weekday from 'dayjs/plugin/weekday';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\n\ndayjs.extend(weekday);\ndayjs.extend(localeData);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (\n    path: string,\n    params?: {\n      [key in string]?: boolean | string | number;\n    },\n  ) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n    react: {\n      transSupportBasicHtmlNodes: true,\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'span', 'code', 'p'],\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // For changing locale globally, use dayjs.locale instead of dayjs().locale\n    dayjs.locale(lang);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n      // For changing locale globally, use dayjs.locale instead of dayjs().locale\n      dayjs.locale(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path, params) => {\n        dispatchEvent('moveTo', { path, params: params });\n      },\n    } as WebComponentContextType;\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return triggerNode?.parentNode || shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={themeConfig}\n                  >\n                    <App>\n                      <StyleProvider container={shadowRoot} cache={cache}>\n                        <Suspense fallback=\"\">\n                          <BrowserRouter>\n                            <QueryParamProvider\n                              adapter={ReactRouter6Adapter}\n                              options={\n                                {\n                                  // searchStringToObject: queryString.parse,\n                                  // objectToSearchString: queryString.stringify,\n                                }\n                              }\n                            >\n                              <RoutingEventHandler />\n                              {children}\n                            </QueryParamProvider>\n                          </BrowserRouter>\n                        </Suspense>\n                      </StyleProvider>\n                    </App>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport { UserInfoModalQuery } from './__generated__/UserInfoModalQuery.graphql';\nimport { Descriptions, DescriptionsProps, Button, Tag, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends BAIModalProps {}\n\nconst UserInfoModal: React.FC<Props> = ({ ...baiModalProps }) => {\n  const { t } = useTranslation();\n\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    userEmail: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      userEmail: '',\n    };\n  }\n  const { open, userEmail } = parsedValue;\n\n  const baiClient = useSuspendedBackendaiClient();\n  let totpSupported = false;\n  let {\n    data: isManagerSupportingTOTP,\n    isLoading: isLoadingManagerSupportingTOTP,\n  } = useQuery(\n    'isManagerSupportingTOTP',\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    },\n  );\n  totpSupported = baiClient?.supports('2FA') && isManagerSupportingTOTP;\n\n  const { user } = useLazyLoadQuery<UserInfoModalQuery>(\n    graphql`\n      query UserInfoModalQuery($email: String, $isTOTPSupported: Boolean!) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          totp_activated @include(if: $isTOTPSupported)\n        }\n      }\n    `,\n    {\n      email: userEmail,\n      isTOTPSupported: totpSupported ?? false,\n    },\n  );\n\n  const columnSetting: DescriptionsProps['column'] = {\n    xxl: 1,\n    xl: 1,\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <BAIModal\n      open={open}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      centered\n      title={t('credential.UserDetail')}\n      footer={[\n        <Button\n          key=\"ok\"\n          type=\"primary\"\n          onClick={() => {\n            dispatchEvent('cancel', null);\n          }}\n        >\n          {t('button.OK')}\n        </Button>,\n      ]}\n      {...baiModalProps}\n    >\n      <br />\n      <Descriptions\n        size=\"small\"\n        column={columnSetting}\n        title={t('credential.Information')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item label={t('credential.UserID')}>\n          {user?.email}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.UserName')}>\n          {user?.username}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.FullName')}>\n          {user?.full_name}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.DescActiveUser')}>\n          {user?.status === 'active' ? t('button.Yes') : t('button.No')}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.DescRequirePasswordChange')}>\n          {user?.need_password_change ? t('button.Yes') : t('button.No')}\n        </Descriptions.Item>\n        {totpSupported && (\n          <Descriptions.Item label={t('webui.menu.TotpActivated')}>\n            <Spin spinning={isLoadingManagerSupportingTOTP}>\n              {user?.totp_activated ? t('button.Yes') : t('button.No')}\n            </Spin>\n          </Descriptions.Item>\n        )}\n      </Descriptions>\n      <br />\n      <Descriptions\n        size=\"small\"\n        column={columnSetting}\n        title={t('credential.Association')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item label={t('credential.Domain')}>\n          {user?.domain_name}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.Role')}>\n          {user?.role}\n        </Descriptions.Item>\n      </Descriptions>\n      <br />\n      <Descriptions\n        title={t('credential.ProjectAndGroup')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item>\n          {_.map(user?.groups, (group) => {\n            return <Tag key={group?.id}>{group?.name}</Tag>;\n          })}\n        </Descriptions.Item>\n      </Descriptions>\n    </BAIModal>\n  );\n};\n\nexport default UserInfoModal;\n","/**\n * @generated SignedSource<<32e7a7c885c2b657f941440c81d4c291>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserInfoModalQuery$variables = {\n  email?: string | null;\n  isTOTPSupported: boolean;\n};\nexport type UserInfoModalQuery$data = {\n  readonly user: {\n    readonly description: string | null;\n    readonly domain_name: string | null;\n    readonly email: string | null;\n    readonly full_name: string | null;\n    readonly groups: ReadonlyArray<{\n      readonly id: string | null;\n      readonly name: string | null;\n    } | null> | null;\n    readonly need_password_change: boolean | null;\n    readonly role: string | null;\n    readonly status: string | null;\n    readonly totp_activated?: boolean | null;\n    readonly username: string | null;\n  } | null;\n};\nexport type UserInfoModalQuery = {\n  response: UserInfoModalQuery$data;\n  variables: UserInfoModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isTOTPSupported\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"condition\": \"isTOTPSupported\",\n  \"kind\": \"Condition\",\n  \"passingValue\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ]\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"0df215d9d53a960adda4cd628fa40661\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserInfoModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserInfoModalQuery(\\n  $email: String\\n  $isTOTPSupported: Boolean!\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    totp_activated @include(if: $isTOTPSupported)\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"ebbace65870261723ee661def143e3e8\";\n\nexport default node;\n"],"names":["_ref","_modalProps$centered","modalProps","Object","assign","_objectDestructuringEmpty","_jsxs","_Fragment","children","_jsx","Modal","_objectSpread","centered","className","removeSkipOnClientDirective","query","variables","filteredVariables","str","result","pattern","directives","exec","_result","_result2","_slicedToArray","originFieldStr","fieldName","directive","argumentName","argumentValue","push","parseDirectives","forEach","substring","replace","startsWith","split","length","argumentNameWithoutDollar","RegExp","concat","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai","_globalThis$backendai2","transformedData","reqBody","reqInfo","wrap","_context","prev","next","text","globalThis","backendaiclient","newSignedRequest","_wrapWithPromise","catch","err","t0","sent","abrupt","stop","_x","_x2","apply","arguments","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","dayjs","weekday","localeData","localizedFormat","relativeTime","utc","timezone","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","react","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","document","addEventListener","removeEventListener","value","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","componentValues","moveTo","path","params","RelayEnvironmentProvider","environment","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","App","StyleProvider","container","Suspense","fallback","BrowserRouter","QueryParamProvider","adapter","ReactRouter6Adapter","options","_totpSupported","parsedValue","baiModalProps","t","_useWebComponentInfo","JSON","parse","error","open","userEmail","totpSupported","_parsedValue","baiClient","useSuspendedBackendaiClient","_useQuery","useQuery","isManagerSupportingTOTP","data","isLoadingManagerSupportingTOTP","isLoading","supports","user","useLazyLoadQuery","_UserInfoModalQuery","require","email","isTOTPSupported","columnSetting","xxl","xl","lg","md","sm","xs","BAIModal","onCancel","title","footer","Button","type","onClick","Descriptions","size","column","labelStyle","width","Item","label","username","full_name","status","need_password_change","Spin","spinning","totp_activated","domain_name","role","_","groups","group","Tag","name","id","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","hash"],"sourceRoot":""}