{"version":3,"file":"static/js/1198.59a86a58.chunk.js","mappings":"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","sources":["components/BAIText.tsx","__generated__/FileUploadManagerQuery.graphql.ts","components/FileUploadManager.tsx","__generated__/FolderExplorerQuery.graphql.ts","__generated__/FolderExplorerHeaderFragment.graphql.ts","components/FolderExplorerHeader.tsx","__generated__/VFolderNodeDescriptionPermissionRefreshQuery.graphql.ts","__generated__/VFolderNodeDescriptionFragment.graphql.ts","__generated__/useVirtualFolderNodePathFragment.graphql.ts","hooks/useVirtualFolderNodePath.ts","components/VirtualFolderNodeItems/VirtualFolderPath.tsx","components/VFolderNodeDescription.tsx","__generated__/useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery.graphql.ts","__generated__/useMergedAllowedStorageHostPermission_KeypairQuery.graphql.ts","hooks/useMergedAllowedStorageHostPermission.ts","components/FolderExplorer.tsx"],"sourcesContent":["import { Typography } from 'antd';\nimport type { TextProps as AntdTextProps } from 'antd/es/typography/Text';\nimport React from 'react';\n\nexport interface BAITextProps extends AntdTextProps {\n  monospace?: boolean;\n}\n\nconst BAIText: React.FC<BAITextProps> = ({\n  type,\n  style,\n  monospace,\n  children,\n  ...restProps\n}) => {\n  // If monospace prop is true, apply monospace font styling\n  if (monospace) {\n    return (\n      <Typography.Text\n        type={type}\n        {...restProps}\n        style={{\n          fontFamily: 'monospace',\n          ...style,\n        }}\n      >\n        {children}\n      </Typography.Text>\n    );\n  }\n\n  // For non-monospace text, pass all props directly to antd Text\n  return (\n    <Typography.Text type={type} style={style} {...restProps}>\n      {children}\n    </Typography.Text>\n  );\n};\n\nexport default BAIText;\n","/**\n * @generated SignedSource<<4fd862927d80e3a68ed0b64141ce3ac5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type FileUploadManagerQuery$variables = {\n  vfolderGlobalId: string;\n};\nexport type FileUploadManagerQuery$data = {\n  readonly vfolder_node: {\n    readonly name: string;\n  } | null | undefined;\n};\nexport type FileUploadManagerQuery = {\n  response: FileUploadManagerQuery$data;\n  variables: FileUploadManagerQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"vfolderGlobalId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"vfolderGlobalId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"FileUploadManagerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"kind\": \"RequiredField\",\n            \"field\": (v2/*: any*/),\n            \"action\": \"THROW\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"FileUploadManagerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"da162cec4ce77cdb6fcdd31a87d2f135\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"FileUploadManagerQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query FileUploadManagerQuery(\\n  $vfolderGlobalId: String!\\n) {\\n  vfolder_node(id: $vfolderGlobalId) {\\n    name\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"1f3a6bd97dae542b3c85605ab9a61d03\";\n\nexport default node;\n","import { useSetBAINotification } from '../hooks/useBAINotification';\nimport { RcFile } from 'antd/es/upload';\nimport { toGlobalId, useConnectedBAIClient } from 'backend.ai-ui';\nimport { atom, useAtom, useSetAtom } from 'jotai';\nimport { atomFamily } from 'jotai/utils';\nimport _ from 'lodash';\nimport PQueue from 'p-queue';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { FileUploadManagerQuery } from 'src/__generated__/FileUploadManagerQuery.graphql';\nimport { useSuspendedBackendaiClient } from 'src/hooks';\nimport * as tus from 'tus-js-client';\n\ntype UploadRequest = {\n  vFolderId: string;\n  vFolderName: string;\n  uploadFilesNames: Array<string>;\n  startFunctions: Array<\n    (callbacks?: {\n      onProgress?: (\n        bytesUploaded: number,\n        bytesTotal: number,\n        fileName: string,\n      ) => void;\n    }) => Promise<string>\n  >;\n};\ntype UploadStatus = {\n  vFolderName: string;\n  pending: Array<string>;\n  completed: Array<string>;\n  failed: Array<string>;\n};\ntype UploadStatusMap = {\n  [vFolderId: string]: UploadStatus;\n};\n\nconst uploadRequestAtom = atom<UploadRequest[]>([]);\nconst uploadStatusAtom = atom<UploadStatusMap>({});\nconst uploadStatusAtomFamily = atomFamily((vFolderId: string) => {\n  return atom(\n    (get) => get(uploadStatusAtom)[vFolderId],\n    (get, set, newStatus: UploadStatus) => {\n      const prev = get(uploadStatusAtom);\n      set(uploadStatusAtom, {\n        ...prev,\n        [vFolderId]: newStatus,\n      });\n    },\n  );\n});\nconst useUploadStatusAtomStatus = (\n  vFolderId: string,\n): [UploadStatus, (newStatus: UploadStatus) => void] => {\n  return useAtom(uploadStatusAtomFamily(vFolderId));\n};\n\nconst FileUploadManager: React.FC = () => {\n  const { t } = useTranslation();\n  const { upsertNotification } = useSetBAINotification();\n  const baiClient = useSuspendedBackendaiClient();\n  const [uploadRequests, setUploadRequests] = useAtom(uploadRequestAtom);\n  const [uploadStatus, setUploadStatus] = useAtom(uploadStatusAtom);\n  const queue = new PQueue({ concurrency: 1 });\n\n  useEffect(() => {\n    if (uploadRequests.length === 0 || !baiClient) return;\n\n    uploadRequests.forEach((uploadRequest) => {\n      const { vFolderId, vFolderName, uploadFilesNames, startFunctions } =\n        uploadRequest;\n\n      setUploadStatus((prev) => ({\n        ...prev,\n        [vFolderId]: {\n          vFolderName,\n          pending: [...(prev[vFolderId]?.pending || []), ...uploadFilesNames],\n          completed: [],\n          failed: [],\n        },\n      }));\n\n      upsertNotification({\n        key: 'upload:' + vFolderId,\n        open: true,\n        message: t('explorer.UploadToFolder', {\n          folderName: vFolderName,\n        }),\n        backgroundTask: {\n          status: 'pending',\n          percent: 0,\n          onChange: {\n            pending: t('explorer.ProcessingUpload'),\n          },\n        },\n        duration: 0,\n      });\n\n      startFunctions.forEach((startFunction) => {\n        queue.add(async () => {\n          await startFunction({\n            onProgress: (bytesUploaded, bytesTotal, fileName) => {\n              setUploadStatus((prev) => {\n                const remainingFiles = prev[vFolderId]?.pending || [];\n                upsertNotification({\n                  key: 'upload:' + vFolderId,\n                  message: `${t('explorer.UploadToFolder', {\n                    folderName: vFolderName,\n                  })}${remainingFiles.length > 1 ? ` (${remainingFiles.length})` : ''}`,\n                  backgroundTask: {\n                    status: 'pending',\n                    percent: Math.round((bytesUploaded / bytesTotal) * 100) - 1,\n                    onChange: {\n                      pending: t('explorer.FileInProgress', {\n                        fileName: fileName,\n                      }),\n                    },\n                  },\n                });\n\n                return prev;\n              });\n            },\n          })\n            .then((fileName: string) => {\n              setUploadStatus((prev) => ({\n                ...prev,\n                [vFolderId]: {\n                  ...prev[vFolderId],\n                  pending: prev[vFolderId].pending.filter(\n                    (f) => f !== fileName,\n                  ),\n                  completed: [...prev[vFolderId].completed, fileName],\n                },\n              }));\n            })\n            .catch((fileName: string) => {\n              setUploadStatus((prev) => ({\n                ...prev,\n                [vFolderId]: {\n                  ...prev[vFolderId],\n                  pending: prev[vFolderId].pending.filter(\n                    (f) => f !== fileName,\n                  ),\n                  failed: [...prev[vFolderId].failed, fileName],\n                },\n              }));\n            });\n        });\n      });\n    });\n    setUploadRequests([]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uploadRequests]);\n\n  useEffect(() => {\n    Object.entries(uploadStatus).forEach(([vFolderId, status]) => {\n      if (!_.isEmpty(status?.pending)) return;\n\n      if (!_.isEmpty(status?.failed)) {\n        upsertNotification({\n          key: 'upload:' + vFolderId,\n          open: true,\n          message: t('explorer.UploadFailed', {\n            folderName: status?.vFolderName,\n          }),\n          backgroundTask: {\n            status: 'rejected',\n            percent: 0,\n            onChange: {\n              rejected: t('explorer.FileUploadFailed', {\n                folderName: status?.vFolderName,\n              }),\n            },\n          },\n          extraDescription: _.join(status?.failed, ', '),\n        });\n      } else if (!_.isEmpty(status?.completed)) {\n        upsertNotification({\n          key: 'upload:' + vFolderId,\n          open: true,\n          message: t('explorer.SuccessfullyUploadedToFolder', {\n            folderName: status?.vFolderName,\n          }),\n          backgroundTask: {\n            status: 'resolved',\n            percent: 100,\n            onChange: {\n              resolved: ' ',\n            },\n          },\n          duration: 3,\n        });\n        setUploadStatus((prev) => ({\n          ...prev,\n          [vFolderId]: {\n            ...prev[vFolderId],\n            completed: [],\n          },\n        }));\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [uploadStatus]);\n\n  return null;\n};\n\nexport default FileUploadManager;\n\nexport const useFileUploadManager = (vFolderId: string) => {\n  const baiClient = useConnectedBAIClient();\n  const { t } = useTranslation();\n  const { upsertNotification } = useSetBAINotification();\n  const [uploadStatus, setUploadStatus] = useUploadStatusAtomStatus(vFolderId);\n  const setUploadRequests = useSetAtom(uploadRequestAtom);\n\n  const { vfolder_node } = useLazyLoadQuery<FileUploadManagerQuery>(\n    graphql`\n      query FileUploadManagerQuery($vfolderGlobalId: String!) {\n        vfolder_node(id: $vfolderGlobalId) {\n          name @required(action: THROW)\n        }\n      }\n    `,\n    {\n      vfolderGlobalId: toGlobalId('VirtualFolderNode', vFolderId),\n    },\n    {\n      fetchPolicy: vFolderId ? 'network-only' : 'store-only',\n    },\n  );\n\n  const validateUploadRequest = (\n    requestedFiles: Array<RcFile>,\n    vfolderId: string,\n  ) => {\n    const maxPossibleFileSize = baiClient._config.maxFileUploadSize;\n    const maxRequestFileSize = _.map(\n      requestedFiles,\n      (file) => file.size,\n    ).reduce((max, size) => Math.max(max, size), 0);\n\n    if (maxPossibleFileSize > 0 && maxRequestFileSize > maxPossibleFileSize) {\n      upsertNotification({\n        open: true,\n        key: 'upload:' + vfolderId,\n        message: t('explorer.UploadFailed', {\n          folderName: vfolder_node?.name ?? '',\n        }),\n        description: t('data.explorer.FileUploadSizeLimit'),\n        duration: 3,\n        toText: t('data.folders.OpenAFolder'),\n        to: {\n          search: new URLSearchParams({\n            folder: vfolderId,\n          }).toString(),\n        },\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const uploadFiles = async (\n    files: RcFile[],\n    vfolderId: string,\n    currentPath: string,\n  ) => {\n    if (!validateUploadRequest(files, vfolderId)) return;\n\n    let uploadFileNames: Array<string> = [];\n    const startUploadFunctionMap = _.map(files, (file) => {\n      uploadFileNames.push(file.webkitRelativePath || file.name);\n      return async (callbacks?: {\n        onProgress?: (\n          bytesUploaded: number,\n          bytesTotal: number,\n          fileName: string,\n        ) => void;\n      }) => {\n        const uploadPath = [currentPath, file.webkitRelativePath || file.name]\n          .filter(Boolean)\n          .join('/');\n        const uploadUrl: string = await baiClient.vfolder.create_upload_session(\n          uploadPath,\n          file,\n          vfolderId,\n        );\n\n        return new Promise<string>((resolve, reject) => {\n          const upload = new tus.Upload(file, {\n            endpoint: uploadUrl,\n            uploadUrl: uploadUrl,\n            retryDelays: [0, 3000, 5000, 10000, 20000],\n            chunkSize: getOptimalChunkSize(file.size),\n            storeFingerprintForResuming: false, // Disable localStorage storage\n            metadata: {\n              filename: file.name,\n              filetype: file.type,\n            },\n            onProgress: (bytesUploaded, bytesTotal) => {\n              callbacks?.onProgress?.(bytesUploaded, bytesTotal, file.name);\n            },\n            onSuccess: () => {\n              resolve(file.webkitRelativePath || file.name);\n            },\n            onError: () => {\n              reject(file.webkitRelativePath || file.name);\n            },\n          });\n          upload.start();\n        });\n      };\n    });\n\n    const uploadRequestInfo: UploadRequest = {\n      vFolderId: vfolderId,\n      vFolderName: vfolder_node?.name ?? '',\n      uploadFilesNames: uploadFileNames,\n      startFunctions: startUploadFunctionMap,\n    };\n    setUploadRequests((prev) => [...prev, uploadRequestInfo]);\n  };\n\n  return {\n    uploadStatus,\n    setUploadStatus,\n    uploadFiles,\n  };\n};\n\nconst getOptimalChunkSize = (fileSize: number): number => {\n  const MB = 1024 * 1024;\n\n  if (fileSize >= 5 * 1024 * MB) {\n    return 200 * MB;\n  } else if (fileSize >= 1 * 1024 * MB) {\n    return 100 * MB;\n  } else if (fileSize >= 100 * MB) {\n    return 50 * MB;\n  } else {\n    return 15 * MB;\n  }\n};\n","/**\n * @generated SignedSource<<663073e7417e7093e390798e00740db9>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type FolderExplorerQuery$variables = {\n  vfolderGlobalId: string;\n};\nexport type FolderExplorerQuery$data = {\n  readonly vfolder_node: {\n    readonly group: string | null | undefined;\n    readonly host: string | null | undefined;\n    readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n    readonly unmanaged_path: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"FolderExplorerHeaderFragment\" | \"VFolderNameTitleNodeFragment\" | \"VFolderNodeDescriptionFragment\">;\n  } | null | undefined;\n};\nexport type FolderExplorerQuery = {\n  response: FolderExplorerQuery$data;\n  variables: FolderExplorerQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"vfolderGlobalId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"vfolderGlobalId\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"group\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"unmanaged_path\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permissions\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"host\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"FolderExplorerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"FolderExplorerHeaderFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"VFolderNodeDescriptionFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"VFolderNameTitleNodeFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"FolderExplorerQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"user\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"permission\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"status\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"user_email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"group_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"creator\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage_mode\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"ownership_type\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_files\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"max_size\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"created_at\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"last_used\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"num_files\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"cur_size\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"cloneable\",\n            \"storageKey\": null\n          },\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"e60d786710970b21697ea3fcd2727be1\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"FolderExplorerQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query FolderExplorerQuery(\\n  $vfolderGlobalId: String!\\n) {\\n  vfolder_node(id: $vfolderGlobalId) {\\n    group\\n    unmanaged_path @since(version: \\\"25.04.0\\\")\\n    permissions\\n    host\\n    ...FolderExplorerHeaderFragment\\n    ...VFolderNodeDescriptionFragment\\n    ...VFolderNameTitleNodeFragment\\n    id\\n  }\\n}\\n\\nfragment EditableVFolderNameFragment on VirtualFolderNode {\\n  id\\n  name\\n  user\\n  group\\n  status\\n}\\n\\nfragment FolderExplorerHeaderFragment on VirtualFolderNode {\\n  id\\n  user\\n  permission\\n  unmanaged_path @since(version: \\\"25.04.0\\\")\\n  ...VFolderNameTitleNodeFragment\\n  ...VFolderNodeIdenticonFragment\\n  ...EditableVFolderNameFragment\\n}\\n\\nfragment VFolderNameTitleNodeFragment on VirtualFolderNode {\\n  name\\n}\\n\\nfragment VFolderNodeDescriptionFragment on VirtualFolderNode {\\n  id\\n  host\\n  quota_scope_id\\n  user\\n  user_email\\n  group\\n  group_name\\n  creator\\n  usage_mode\\n  permission\\n  ownership_type\\n  max_files\\n  max_size\\n  created_at\\n  last_used\\n  num_files\\n  cur_size\\n  cloneable\\n  status\\n  permissions @since(version: \\\"24.09.0\\\")\\n  unmanaged_path @since(version: \\\"25.04.0\\\")\\n  ...VFolderPermissionCellFragment\\n  ...useVirtualFolderNodePathFragment\\n}\\n\\nfragment VFolderNodeIdenticonFragment on VirtualFolderNode {\\n  id\\n}\\n\\nfragment VFolderPermissionCellFragment on VirtualFolderNode {\\n  permissions\\n}\\n\\nfragment useVirtualFolderNodePathFragment on VirtualFolderNode {\\n  id\\n  host\\n  quota_scope_id\\n  user\\n  user_email\\n  group\\n  group_name\\n  creator\\n  usage_mode\\n  permission\\n  ownership_type\\n  max_files\\n  max_size\\n  created_at\\n  last_used\\n  num_files\\n  cur_size\\n  cloneable\\n  status\\n  permissions @since(version: \\\"24.09.0\\\")\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"f1ac6c7707249c64019aa879886995c4\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b2b12bec204e6b070a8941223acd7d3b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type FolderExplorerHeaderFragment$data = {\n  readonly id: string;\n  readonly permission: string | null | undefined;\n  readonly unmanaged_path: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EditableVFolderNameFragment\" | \"VFolderNameTitleNodeFragment\" | \"VFolderNodeIdenticonFragment\">;\n  readonly \" $fragmentType\": \"FolderExplorerHeaderFragment\";\n};\nexport type FolderExplorerHeaderFragment$key = {\n  readonly \" $data\"?: FolderExplorerHeaderFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"FolderExplorerHeaderFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"FolderExplorerHeaderFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"unmanaged_path\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderNameTitleNodeFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderNodeIdenticonFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"EditableVFolderNameFragment\"\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"b034e00d5b8454a58e6ebb66a4d821a1\";\n\nexport default node;\n","import { FolderExplorerHeaderFragment$key } from '../__generated__/FolderExplorerHeaderFragment.graphql';\nimport EditableVFolderName from './EditableVFolderName';\nimport VFolderNodeIdenticon from './VFolderNodeIdenticon';\nimport { Button, Tooltip, Image, Grid, theme, Typography } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport React, { LegacyRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useFragment } from 'react-relay';\n\ninterface FolderExplorerHeaderProps {\n  vfolderNodeFrgmt?: FolderExplorerHeaderFragment$key | null;\n  folderExplorerRef: LegacyRef<HTMLDivElement>;\n  titleStyle?: React.CSSProperties;\n}\n\nconst FolderExplorerHeader: React.FC<FolderExplorerHeaderProps> = ({\n  vfolderNodeFrgmt,\n  folderExplorerRef,\n  titleStyle,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { lg } = Grid.useBreakpoint();\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment FolderExplorerHeaderFragment on VirtualFolderNode {\n        id\n        user\n        permission\n        unmanaged_path @since(version: \"25.04.0\")\n        ...VFolderNameTitleNodeFragment\n        ...VFolderNodeIdenticonFragment\n        ...EditableVFolderNameFragment\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  return (\n    <BAIFlex\n      data-testid=\"folder-explorer-header\"\n      justify=\"between\"\n      gap={token.marginMD}\n      style={{ width: '100%' }}\n    >\n      <BAIFlex\n        data-testid=\"folder-explorer-title\"\n        gap={'xs'}\n        style={{ flex: 1, ...titleStyle }}\n      >\n        {vfolderNode ? (\n          <VFolderNodeIdenticon\n            vfolderNodeIdenticonFrgmt={vfolderNode}\n            style={{\n              fontSize: token.fontSizeHeading4,\n            }}\n          />\n        ) : (\n          <BAIFlex\n            style={{\n              borderColor: token.colorBorderSecondary,\n              borderWidth: 1,\n              borderStyle: 'solid',\n              width: token.fontSizeHeading3,\n              height: token.fontSizeHeading3,\n              borderRadius: token.borderRadius,\n            }}\n          />\n        )}\n        {vfolderNode && (\n          <EditableVFolderName\n            vfolderFrgmt={vfolderNode}\n            enableLink={false}\n            component={Typography.Title}\n            level={3}\n            style={{\n              margin: 0,\n              width: '100%',\n            }}\n            ellipsis\n            editable={{\n              triggerType: ['icon', 'text'],\n            }}\n            inputProps={{\n              size: 'large',\n            }}\n          />\n        )}\n      </BAIFlex>\n      <BAIFlex\n        data-testid=\"folder-explorer-actions\"\n        justify=\"end\"\n        gap={token.marginSM}\n      >\n        {!vfolderNode?.unmanaged_path ? (\n          <>\n            <Tooltip title={!lg && t('data.explorer.ExecuteFileBrowser')}>\n              <Button\n                icon={\n                  <Image\n                    width=\"18px\"\n                    src=\"/resources/icons/filebrowser.svg\"\n                    alt=\"File Browser\"\n                    preview={false}\n                  />\n                }\n                onClick={() =>\n                  // @ts-ignore\n                  folderExplorerRef.current?._executeFileBrowser()\n                }\n              >\n                {lg && t('data.explorer.ExecuteFileBrowser')}\n              </Button>\n            </Tooltip>\n            <Tooltip title={!lg && t('data.explorer.RunSSH/SFTPserver')}>\n              <Button\n                icon={\n                  <Image\n                    width=\"18px\"\n                    src=\"/resources/icons/sftp.png\"\n                    alt=\"SSH / SFTP\"\n                    preview={false}\n                  />\n                }\n                onClick={() => {\n                  // @ts-ignore\n                  folderExplorerRef.current?._executeSSHProxyAgent();\n                }}\n              >\n                {lg && t('data.explorer.RunSSH/SFTPserver')}\n              </Button>\n            </Tooltip>\n          </>\n        ) : null}\n      </BAIFlex>\n    </BAIFlex>\n  );\n};\n\nexport default FolderExplorerHeader;\n","/**\n * @generated SignedSource<<b08d2a6eb206a397bad8ea27d9db9ef7>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type VFolderNodeDescriptionPermissionRefreshQuery$variables = {\n  id: string;\n};\nexport type VFolderNodeDescriptionPermissionRefreshQuery$data = {\n  readonly vfolder_node: {\n    readonly permission: string | null | undefined;\n    readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  } | null | undefined;\n};\nexport type VFolderNodeDescriptionPermissionRefreshQuery = {\n  response: VFolderNodeDescriptionPermissionRefreshQuery$data;\n  variables: VFolderNodeDescriptionPermissionRefreshQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permission\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"permissions\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"VirtualFolderNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"vfolder_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3aee063a4b508648c2365ba6c7f0f44a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"VFolderNodeDescriptionPermissionRefreshQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query VFolderNodeDescriptionPermissionRefreshQuery(\\n  $id: String!\\n) {\\n  vfolder_node(id: $id) {\\n    permission\\n    permissions\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"36063c8300310d9ef6c369b49127a2a2\";\n\nexport default node;\n","/**\n * @generated SignedSource<<462af5f9df0e58aaa2ad869af29774cb>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type VFolderNodeDescriptionFragment$data = {\n  readonly cloneable: boolean | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly creator: string | null | undefined;\n  readonly cur_size: any | null | undefined;\n  readonly group: string | null | undefined;\n  readonly group_name: string | null | undefined;\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly last_used: string | null | undefined;\n  readonly max_files: number | null | undefined;\n  readonly max_size: any | null | undefined;\n  readonly num_files: number | null | undefined;\n  readonly ownership_type: string | null | undefined;\n  readonly permission: string | null | undefined;\n  readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  readonly quota_scope_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly unmanaged_path: string | null | undefined;\n  readonly usage_mode: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderPermissionCellFragment\" | \"useVirtualFolderNodePathFragment\">;\n  readonly \" $fragmentType\": \"VFolderNodeDescriptionFragment\";\n};\nexport type VFolderNodeDescriptionFragment$key = {\n  readonly \" $data\"?: VFolderNodeDescriptionFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"VFolderNodeDescriptionFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"VFolderNodeDescriptionFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"creator\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage_mode\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"ownership_type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cur_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cloneable\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permissions\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"unmanaged_path\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"VFolderPermissionCellFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"useVirtualFolderNodePathFragment\"\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f4ca4470ea635f85c8c346eed0a5fe8c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7a027844ee7c6caf9ae1cc064636660b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type useVirtualFolderNodePathFragment$data = {\n  readonly cloneable: boolean | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly creator: string | null | undefined;\n  readonly cur_size: any | null | undefined;\n  readonly group: string | null | undefined;\n  readonly group_name: string | null | undefined;\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly last_used: string | null | undefined;\n  readonly max_files: number | null | undefined;\n  readonly max_size: any | null | undefined;\n  readonly num_files: number | null | undefined;\n  readonly ownership_type: string | null | undefined;\n  readonly permission: string | null | undefined;\n  readonly permissions: ReadonlyArray<any | null | undefined> | null | undefined;\n  readonly quota_scope_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly usage_mode: string | null | undefined;\n  readonly user: string | null | undefined;\n  readonly user_email: string | null | undefined;\n  readonly \" $fragmentType\": \"useVirtualFolderNodePathFragment\";\n};\nexport type useVirtualFolderNodePathFragment$key = {\n  readonly \" $data\"?: useVirtualFolderNodePathFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"useVirtualFolderNodePathFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"useVirtualFolderNodePathFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"group_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"creator\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage_mode\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permission\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"ownership_type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"last_used\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"num_files\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cur_size\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"cloneable\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"permissions\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"439221036e87c57ca3ec1ce737e0cdf7\";\n\nexport default node;\n","import { useVirtualFolderNodePathFragment$key } from '../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { toLocalId } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport { graphql, useFragment } from 'react-relay';\n\nexport const useVirtualFolderPath = (\n  vfolderNodeFrgmt: useVirtualFolderNodePathFragment$key,\n) => {\n  const vfolderNode = useFragment(\n    graphql`\n      fragment useVirtualFolderNodePathFragment on VirtualFolderNode {\n        id\n        host\n        quota_scope_id\n        user\n        user_email\n        group\n        group_name\n        creator\n        usage_mode\n        permission\n        ownership_type\n        max_files\n        max_size\n        created_at\n        last_used\n        num_files\n        cur_size\n        cloneable\n        status\n        permissions @since(version: \"24.09.0\")\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  const [quotaScopeType, quotaScopeIdWithoutType] = _.split(\n    vfolderNode?.quota_scope_id,\n    ':',\n  );\n  const vfolderId = toLocalId(vfolderNode?.id);\n  const vfolderIdPrefix1 = vfolderId.slice(0, 2);\n  const vfolderIdPrefix2 = vfolderId.slice(2, 4);\n  const vfolderIdRest = vfolderId.slice(4);\n  const vfolderPath = `${quotaScopeIdWithoutType.replaceAll('-', '')}/${vfolderIdPrefix1}/${vfolderIdPrefix2}/${vfolderIdRest.replaceAll('-', '')}`;\n\n  return {\n    quotaScopeType,\n    quotaScopeIdWithoutType,\n    vfolderId,\n    vfolderIdPrefix1,\n    vfolderIdPrefix2,\n    vfolderIdRest,\n    vfolderPath,\n  };\n};\n","import { useVirtualFolderNodePathFragment$key } from '../../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { useVirtualFolderPath } from '../../hooks/useVirtualFolderNodePath';\nimport BAIText from '../BAIText';\nimport { theme } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport React from 'react';\n\ninterface VirtualFolderPathProps {\n  vfolderNodeFrgmt: useVirtualFolderNodePathFragment$key;\n}\n\nconst VirtualFolderPath: React.FC<VirtualFolderPathProps> = ({\n  vfolderNodeFrgmt,\n}) => {\n  const {\n    quotaScopeType,\n    quotaScopeIdWithoutType,\n    vfolderId,\n    vfolderIdPrefix1,\n    vfolderIdPrefix2,\n    vfolderIdRest,\n  } = useVirtualFolderPath(vfolderNodeFrgmt);\n\n  const { token } = theme.useToken();\n\n  return (\n    <BAIFlex direction=\"row\" align=\"start\" justify=\"start\" wrap=\"wrap\" gap={3}>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        (root)\n      </BAIText>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        /\n      </BAIText>\n      <BAIFlex direction=\"column\" align=\"start\" justify=\"start\">\n        <BAIText\n          monospace\n          copyable={{\n            text: quotaScopeIdWithoutType,\n          }}\n          style={{ fontSize: '0.9em' }}\n        >\n          {_.truncate(quotaScopeIdWithoutType.replaceAll('-', ''), {\n            length: 15,\n          })}\n        </BAIText>\n        <BAIText\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n          }}\n        >\n          Quota Scope ID ({_.upperFirst(quotaScopeType)})\n        </BAIText>\n      </BAIFlex>\n      <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n        /\n      </BAIText>\n      <BAIFlex direction=\"column\" align=\"start\" justify=\"start\">\n        <BAIFlex gap={3}>\n          <BAIText monospace style={{ fontSize: '0.9em' }}>\n            {vfolderIdPrefix1}\n          </BAIText>\n          <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n            /\n          </BAIText>\n          <BAIText monospace style={{ fontSize: '0.9em' }}>\n            {vfolderIdPrefix2}\n          </BAIText>\n          <BAIText monospace type=\"secondary\" style={{ fontSize: '0.9em' }}>\n            /\n          </BAIText>\n          <BAIText\n            monospace\n            copyable={{\n              text: vfolderId,\n            }}\n            style={{ fontSize: '0.9em' }}\n          >\n            {_.truncate(vfolderIdRest.replaceAll('-', ''), { length: 7 })}\n          </BAIText>\n        </BAIFlex>\n        <BAIText\n          type=\"secondary\"\n          style={{\n            fontSize: token.fontSizeSM,\n          }}\n        >\n          VFolder ID\n        </BAIText>\n      </BAIFlex>\n    </BAIFlex>\n  );\n};\n\nexport default VirtualFolderPath;\n","import { VFolderNodeDescriptionFragment$key } from '../__generated__/VFolderNodeDescriptionFragment.graphql';\nimport { VFolderNodeDescriptionPermissionRefreshQuery } from '../__generated__/VFolderNodeDescriptionPermissionRefreshQuery.graphql';\nimport { useVirtualFolderNodePathFragment$key } from '../__generated__/useVirtualFolderNodePathFragment.graphql';\nimport { convertToDecimalUnit } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport { useVirtualFolderPath } from '../hooks/useVirtualFolderNodePath';\nimport BAISelect from './BAISelect';\nimport BAITag from './BAITag';\nimport { statusTagColor } from './VFolderNodes';\nimport VirtualFolderPath from './VirtualFolderNodeItems/VirtualFolderPath';\nimport { CheckCircleOutlined, UserOutlined } from '@ant-design/icons';\nimport {\n  App,\n  Descriptions,\n  theme,\n  Typography,\n  type DescriptionsProps,\n} from 'antd';\nimport {\n  filterOutEmpty,\n  BAIUserUnionIcon,\n  toLocalId,\n  BAIFlex,\n  useErrorMessageResolver,\n} from 'backend.ai-ui';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  graphql,\n  fetchQuery,\n  useFragment,\n  useRelayEnvironment,\n} from 'react-relay';\n\ninterface VFolderNodeDescriptionProps extends DescriptionsProps {\n  vfolderNodeFrgmt: VFolderNodeDescriptionFragment$key;\n  onRequestRefresh?: () => void;\n}\n\nconst VFolderNodeDescription: React.FC<VFolderNodeDescriptionProps> = ({\n  vfolderNodeFrgmt,\n  onRequestRefresh,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n  const { getErrorMessage } = useErrorMessageResolver();\n\n  const relayEnv = useRelayEnvironment();\n  const currentProject = useCurrentProjectValue();\n  const baiClient = useSuspendedBackendaiClient();\n  const [currentUser] = useCurrentUserInfo();\n\n  const updateMutation = useTanMutation({\n    mutationFn: ({ permission, id }: { permission: string; id: string }) => {\n      return baiClient.vfolder.update_folder({ permission }, id);\n    },\n  });\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment VFolderNodeDescriptionFragment on VirtualFolderNode {\n        id\n        host\n        quota_scope_id\n        user\n        user_email\n        group\n        group_name\n        creator\n        usage_mode\n        permission\n        ownership_type\n        max_files\n        max_size\n        created_at\n        last_used\n        num_files\n        cur_size\n        cloneable\n        status\n        permissions @since(version: \"24.09.0\")\n        unmanaged_path @since(version: \"25.04.0\")\n        ...VFolderPermissionCellFragment\n        ...useVirtualFolderNodePathFragment\n      }\n    `,\n    vfolderNodeFrgmt,\n  );\n\n  const { vfolderPath } = useVirtualFolderPath(\n    // Temporary type assertion to suppress TS error – not actually needed at runtime\n    vfolderNode as useVirtualFolderNodePathFragment$key,\n  );\n\n  const vfolderId = toLocalId(vfolderNode.id);\n\n  const items: DescriptionsProps['items'] = filterOutEmpty([\n    !vfolderNode?.unmanaged_path && {\n      key: 'path',\n      label: (\n        <Typography.Text\n          copyable={{\n            text: vfolderPath,\n          }}\n          style={{\n            color: token.colorTextLabel,\n          }}\n        >\n          {t('data.folders.Path')}\n        </Typography.Text>\n      ),\n      children: <VirtualFolderPath vfolderNodeFrgmt={vfolderNode} />,\n    },\n    {\n      key: 'status',\n      label: t('data.folders.Status'),\n      children: (\n        <BAITag\n          color={\n            vfolderNode.status\n              ? statusTagColor[\n                  vfolderNode.status as keyof typeof statusTagColor\n                ]\n              : undefined\n          }\n        >\n          {_.toUpper(vfolderNode.status || '')}\n        </BAITag>\n      ),\n    },\n    {\n      key: 'host',\n      label: t('data.Host'),\n      children: vfolderNode.host,\n    },\n    {\n      key: 'ownership_type',\n      label: t('data.folders.Ownership'),\n      children:\n        vfolderNode?.ownership_type === 'user' ? (\n          <BAIFlex gap={'xs'}>\n            <Typography.Text>{t('data.User')}</Typography.Text>\n            <UserOutlined style={{ color: token.colorTextTertiary }} />\n          </BAIFlex>\n        ) : (\n          <BAIFlex gap={'xs'}>\n            <Typography.Text>{t('data.Project')}</Typography.Text>\n            <BAIUserUnionIcon style={{ color: token.colorTextTertiary }} />\n          </BAIFlex>\n        ),\n    },\n    (vfolderNode?.user === currentUser.uuid ||\n      (baiClient.is_admin && vfolderNode?.group === currentProject?.id)) && {\n      key: 'permission',\n      label: t('data.folders.MountPermission'),\n      children: (\n        <BAISelect\n          defaultValue={\n            vfolderNode.permission === 'wd' ? 'rw' : vfolderNode.permission\n          }\n          options={[\n            { value: 'ro', label: t('data.ReadOnly') },\n            { value: 'rw', label: t('data.ReadWrite') },\n          ]}\n          onChange={(value) => {\n            updateMutation.mutate(\n              { permission: value, id: vfolderId },\n              {\n                onSuccess: () => {\n                  message.success(t('data.permission.PermissionModified'));\n                  document.dispatchEvent(\n                    new CustomEvent('backend-ai-folder-updated'),\n                  );\n\n                  // To update GraphQL relay node\n                  fetchQuery<VFolderNodeDescriptionPermissionRefreshQuery>(\n                    relayEnv,\n                    graphql`\n                      query VFolderNodeDescriptionPermissionRefreshQuery(\n                        $id: String!\n                      ) {\n                        vfolder_node(id: $id) {\n                          permission\n                          permissions\n                        }\n                      }\n                    `,\n                    {\n                      id: vfolderNode.id,\n                    },\n                  ).toPromise();\n                  onRequestRefresh?.();\n                },\n                onError: (error) => {\n                  message.error(getErrorMessage(error));\n                },\n              },\n            );\n          }}\n          popupMatchSelectWidth={false}\n        />\n      ),\n    },\n    {\n      key: 'owner',\n      label: t('data.folders.Owner'),\n      children:\n        vfolderNode?.user === currentUser?.uuid ||\n        (baiClient.is_admin && vfolderNode?.group === currentProject?.id) ? (\n          <BAIFlex justify=\"start\">\n            <CheckCircleOutlined />\n          </BAIFlex>\n        ) : null,\n    },\n    vfolderNode.user_email !== null && {\n      key: 'user_email',\n      label: t('data.User'),\n      children: (\n        <Typography.Text copyable>{vfolderNode.user_email}</Typography.Text>\n      ),\n    },\n    vfolderNode.group_name !== null && {\n      key: 'group_name',\n      label: t('data.Project'),\n      children: vfolderNode.group_name,\n    },\n    {\n      key: 'cloneable',\n      label: t('data.folders.Cloneable'),\n      children: vfolderNode.cloneable ? (\n        <BAIFlex justify=\"start\">\n          <CheckCircleOutlined />\n        </BAIFlex>\n      ) : null,\n    },\n    {\n      key: 'max_size',\n      label: t('data.folders.MaxSize'),\n      children: vfolderNode.max_size\n        ? convertToDecimalUnit(vfolderNode.max_size, 'g', 2)?.displayValue\n        : '∞',\n    },\n    {\n      key: 'usage',\n      label: t('data.UsageMode'),\n      children: vfolderNode.usage_mode,\n    },\n    {\n      key: 'created_at',\n      label: t('data.folders.CreatedAt'),\n      children: dayjs(vfolderNode.created_at).format('lll'),\n    },\n  ]);\n\n  return (\n    <Descriptions\n      bordered\n      column={1}\n      size=\"small\"\n      items={items}\n      styles={{\n        content: {\n          wordBreak: 'break-word',\n          overflowWrap: 'break-word',\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default VFolderNodeDescription;\n","/**\n * @generated SignedSource<<01f84eec24a9462f4d8a239a0f8488c5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery$variables = {\n  domainName?: string | null | undefined;\n  projectId: string;\n  resourcePolicyName?: string | null | undefined;\n};\nexport type useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery$data = {\n  readonly domain: {\n    readonly allowed_vfolder_hosts: string | null | undefined;\n  } | null | undefined;\n  readonly group: {\n    readonly allowed_vfolder_hosts: string | null | undefined;\n  } | null | undefined;\n  readonly keypair_resource_policy: {\n    readonly allowed_vfolder_hosts: string | null | undefined;\n  } | null | undefined;\n};\nexport type useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery = {\n  response: useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery$data;\n  variables: useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domainName\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"projectId\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"resourcePolicyName\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"allowed_vfolder_hosts\",\n    \"storageKey\": null\n  }\n],\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"domainName\"\n      }\n    ],\n    \"concreteType\": \"Domain\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"domain\",\n    \"plural\": false,\n    \"selections\": (v1/*: any*/),\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"domain_name\",\n        \"variableName\": \"domainName\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"id\",\n        \"variableName\": \"projectId\"\n      }\n    ],\n    \"concreteType\": \"Group\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"group\",\n    \"plural\": false,\n    \"selections\": (v1/*: any*/),\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"resourcePolicyName\"\n      }\n    ],\n    \"concreteType\": \"KeyPairResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"keypair_resource_policy\",\n    \"plural\": false,\n    \"selections\": (v1/*: any*/),\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f7d16150a7d77cb465733a2933a08261\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery(\\n  $domainName: String\\n  $projectId: UUID!\\n  $resourcePolicyName: String\\n) {\\n  domain(name: $domainName) {\\n    allowed_vfolder_hosts\\n  }\\n  group(id: $projectId, domain_name: $domainName) {\\n    allowed_vfolder_hosts\\n  }\\n  keypair_resource_policy(name: $resourcePolicyName) {\\n    allowed_vfolder_hosts\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"616594ca9d6c787458c32688c1a25b1f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0c48992dcb96317e2eeb05bd6a3f0b1a>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type useMergedAllowedStorageHostPermission_KeypairQuery$variables = {\n  accessKey?: string | null | undefined;\n  domainName: string;\n};\nexport type useMergedAllowedStorageHostPermission_KeypairQuery$data = {\n  readonly keypair: {\n    readonly resource_policy: string;\n  };\n};\nexport type useMergedAllowedStorageHostPermission_KeypairQuery = {\n  response: useMergedAllowedStorageHostPermission_KeypairQuery$data;\n  variables: useMergedAllowedStorageHostPermission_KeypairQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"accessKey\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"domainName\"\n},\nv2 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"access_key\",\n    \"variableName\": \"accessKey\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"domain_name\",\n    \"variableName\": \"domainName\"\n  }\n],\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_policy\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"useMergedAllowedStorageHostPermission_KeypairQuery\",\n    \"selections\": [\n      {\n        \"kind\": \"RequiredField\",\n        \"field\": {\n          \"alias\": null,\n          \"args\": (v2/*: any*/),\n          \"concreteType\": \"KeyPair\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"keypair\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"kind\": \"RequiredField\",\n              \"field\": (v3/*: any*/),\n              \"action\": \"THROW\"\n            }\n          ],\n          \"storageKey\": null\n        },\n        \"action\": \"THROW\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"useMergedAllowedStorageHostPermission_KeypairQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v2/*: any*/),\n        \"concreteType\": \"KeyPair\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"keypair\",\n        \"plural\": false,\n        \"selections\": [\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"ca4270af888b8158a6bbb4fe9dc305ca\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"useMergedAllowedStorageHostPermission_KeypairQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query useMergedAllowedStorageHostPermission_KeypairQuery(\\n  $domainName: String!\\n  $accessKey: String\\n) {\\n  keypair(domain_name: $domainName, access_key: $accessKey) {\\n    resource_policy\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"43280e755e9e0f52dcd74eb7aa29d60c\";\n\nexport default node;\n","import { useSuspendedBackendaiClient } from '.';\nimport { useSuspenseQuery } from '@tanstack/react-query';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery } from 'src/__generated__/useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery.graphql';\nimport { useMergedAllowedStorageHostPermission_KeypairQuery } from 'src/__generated__/useMergedAllowedStorageHostPermission_KeypairQuery.graphql';\n\nexport const useMergedAllowedStorageHostPermission = (\n  domain: string,\n  projectId: string,\n  userAccessKey: string,\n) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const { keypair } =\n    useLazyLoadQuery<useMergedAllowedStorageHostPermission_KeypairQuery>(\n      graphql`\n        query useMergedAllowedStorageHostPermission_KeypairQuery(\n          $domainName: String!\n          $accessKey: String\n        ) {\n          keypair(domain_name: $domainName, access_key: $accessKey)\n            @required(action: THROW) {\n            resource_policy @required(action: THROW)\n          }\n        }\n      `,\n      {\n        domainName: domain,\n        accessKey: userAccessKey,\n      },\n      {\n        fetchPolicy: 'store-or-network',\n      },\n    );\n  const mergedAllowedVFolderHosts =\n    useLazyLoadQuery<useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery>(\n      graphql`\n        query useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery(\n          $domainName: String\n          $projectId: UUID!\n          $resourcePolicyName: String\n        ) {\n          domain(name: $domainName) {\n            allowed_vfolder_hosts\n          }\n          group(id: $projectId, domain_name: $domainName) {\n            allowed_vfolder_hosts\n          }\n          keypair_resource_policy(name: $resourcePolicyName) {\n            allowed_vfolder_hosts\n          }\n        }\n      `,\n      {\n        domainName: domain,\n        projectId,\n        resourcePolicyName: keypair?.resource_policy,\n      },\n      {\n        fetchPolicy: 'store-or-network',\n      },\n    );\n\n  const allowedPermissionForDomainsByVolume = JSON.parse(\n    mergedAllowedVFolderHosts?.domain?.allowed_vfolder_hosts || '{}',\n  );\n  const allowedPermissionForGroupsByVolume = JSON.parse(\n    mergedAllowedVFolderHosts?.group?.allowed_vfolder_hosts || '{}',\n  );\n  const allowedPermissionForResourcePolicyByVolume = JSON.parse(\n    mergedAllowedVFolderHosts?.keypair_resource_policy?.allowed_vfolder_hosts ||\n      '{}',\n  );\n\n  const _mergeDedupe = (arr: any[]) => [\n    ...new Set([].concat(...arr.filter(Boolean))),\n  ];\n\n  const { data: vhostInfo } = useSuspenseQuery({\n    queryKey: ['vhostInfo'],\n    queryFn: async () => {\n      return await baiClient.vfolder.list_hosts();\n    },\n    staleTime: 1000 * 60 * 5,\n    gcTime: 0,\n  });\n  const unitedAllowedPermissionByVolume = Object.assign(\n    {},\n    ...vhostInfo.allowed.map((volume: string) => {\n      return {\n        [volume]: _mergeDedupe([\n          allowedPermissionForDomainsByVolume[volume],\n          allowedPermissionForGroupsByVolume[volume],\n          allowedPermissionForResourcePolicyByVolume[volume],\n        ]),\n      };\n    }),\n  );\n\n  return {\n    StorageHostPermissionByDomain: allowedPermissionForDomainsByVolume,\n    StorageHostPermissionByGroup: allowedPermissionForGroupsByVolume,\n    StorageHostPermissionByResourcePolicy:\n      allowedPermissionForResourcePolicyByVolume,\n    unitedAllowedPermissionByVolume,\n  };\n};\n","import { useFileUploadManager } from './FileUploadManager';\nimport FolderExplorerHeader from './FolderExplorerHeader';\nimport VFolderNodeDescription from './VFolderNodeDescription';\nimport { Alert, Divider, Grid, Splitter, theme } from 'antd';\nimport { createStyles } from 'antd-style';\nimport { RcFile } from 'antd/es/upload';\nimport {\n  BAIFileExplorer,\n  BAIFlex,\n  BAIModal,\n  BAIModalProps,\n  toGlobalId,\n} from 'backend.ai-ui';\nimport _ from 'lodash';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { FolderExplorerQuery } from 'src/__generated__/FolderExplorerQuery.graphql';\nimport {\n  useCurrentDomainValue,\n  useFetchKey,\n  useSuspendedBackendaiClient,\n} from 'src/hooks';\nimport { useCurrentProjectValue } from 'src/hooks/useCurrentProject';\nimport { useMergedAllowedStorageHostPermission } from 'src/hooks/useMergedAllowedStorageHostPermission';\n\nconst useStyles = createStyles(({ css }) => ({\n  baiModalHeader: css`\n    .ant-modal-title {\n      width: 100%;\n    }\n  `,\n}));\n\nexport interface FolderExplorerElement extends HTMLDivElement {\n  _fetchVFolder: () => void;\n  _openDeleteMultipleFileDialog: () => void;\n  openMkdirDialog: () => void;\n  handleUpload: (name: 'file' | 'folder') => void;\n}\n\ninterface FolderExplorerProps extends BAIModalProps {\n  vfolderID: string;\n  onRequestClose: () => void;\n}\n\nconst FolderExplorer: React.FC<FolderExplorerProps> = ({\n  vfolderID,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { xl } = Grid.useBreakpoint();\n  const { styles } = useStyles();\n  const folderExplorerRef = useRef<FolderExplorerElement>(null);\n  const { uploadStatus, uploadFiles } = useFileUploadManager(vfolderID);\n  const [fetchKey, updateFetchKey] = useFetchKey();\n  const baiClient = useSuspendedBackendaiClient();\n  const currentDomain = useCurrentDomainValue();\n  const currentProject = useCurrentProjectValue();\n  const currentUserAccessKey = baiClient?._config?.accessKey;\n  const { unitedAllowedPermissionByVolume } =\n    useMergedAllowedStorageHostPermission(\n      currentDomain,\n      currentProject.id,\n      currentUserAccessKey,\n    );\n  const bodyRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (uploadStatus && _.isEmpty(uploadStatus.pending)) {\n      updateFetchKey();\n    }\n  }, [uploadStatus, updateFetchKey]);\n\n  const { vfolder_node } = useLazyLoadQuery<FolderExplorerQuery>(\n    graphql`\n      query FolderExplorerQuery($vfolderGlobalId: String!) {\n        vfolder_node(id: $vfolderGlobalId) {\n          group\n          unmanaged_path @since(version: \"25.04.0\")\n          permissions\n          host\n\n          ...FolderExplorerHeaderFragment\n          ...VFolderNodeDescriptionFragment\n          ...VFolderNameTitleNodeFragment\n        }\n      }\n    `,\n    { vfolderGlobalId: toGlobalId('VirtualFolderNode', vfolderID) },\n    {\n      fetchPolicy: modalProps.open ? 'network-only' : 'store-only',\n    },\n  );\n\n  const hasDownloadContentPermission = _.includes(\n    unitedAllowedPermissionByVolume[vfolder_node?.host ?? ''],\n    'download-file',\n  );\n  const hasDeleteContentPermission = _.includes(\n    vfolder_node?.permissions,\n    'delete_content',\n  );\n  const hasWriteContentPermission = _.includes(\n    vfolder_node?.permissions,\n    'write_content',\n  );\n  // TODO: Skip permission check due to inaccurate API response. Update when API is fixed.\n  const hasNoPermissions = false;\n\n  const fileExplorerElement = vfolder_node?.unmanaged_path ? (\n    <Alert\n      message={t('explorer.NoExplorerSupportForUnmanagedFolder')}\n      showIcon\n    />\n  ) : !hasNoPermissions ? (\n    <BAIFileExplorer\n      targetVFolderId={vfolderID}\n      fetchKey={fetchKey}\n      onUpload={(files: RcFile[], currentPath: string) => {\n        uploadFiles(files, vfolderID, currentPath);\n      }}\n      enableDownload={hasDownloadContentPermission}\n      enableDelete={hasDeleteContentPermission}\n      enableWrite={hasWriteContentPermission}\n      tableProps={{\n        scroll: xl\n          ? { x: 'max-content' }\n          : { x: 'max-content', y: 'calc(100vh - 400px)' },\n      }}\n      style={{\n        paddingBottom: xl ? token.paddingLG : 0,\n      }}\n      fileDropContainerRef={bodyRef}\n    />\n  ) : null;\n\n  const vFolderDescriptionElement = vfolder_node ? (\n    <VFolderNodeDescription\n      vfolderNodeFrgmt={vfolder_node}\n      onRequestRefresh={() => {\n        folderExplorerRef.current?._fetchVFolder();\n      }}\n    />\n  ) : null;\n\n  return (\n    <BAIModal\n      className={styles.baiModalHeader}\n      width={'90%'}\n      centered\n      destroyOnClose\n      footer={null}\n      title={\n        vfolder_node ? (\n          <FolderExplorerHeader\n            titleStyle={{\n              zIndex: token.zIndexPopupBase + 2,\n            }}\n            vfolderNodeFrgmt={vfolder_node}\n            folderExplorerRef={folderExplorerRef}\n          />\n        ) : null\n      }\n      bodyProps={{\n        ref: bodyRef,\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <BAIFlex direction=\"column\" gap={'lg'} align=\"stretch\">\n        {!vfolder_node ? (\n          <Alert\n            message={t('explorer.FolderNotFoundOrNoAccess')}\n            type=\"error\"\n            showIcon\n          />\n        ) : hasNoPermissions ? (\n          <Alert message={t('explorer.NoPermissions')} type=\"error\" showIcon />\n        ) : currentProject?.id !== vfolder_node?.group &&\n          !!vfolder_node?.group ? (\n          <Alert message={t('data.NotInProject')} type=\"warning\" showIcon />\n        ) : null}\n\n        {xl ? (\n          <Splitter\n            // Force re-render component when xl breakpoint changes to reset panel sizes\n            // This ensures defaultSize is recalculated based on current screen size\n            key={xl ? 'large' : 'small'}\n            style={{\n              gap: token.size,\n              // maxHeight: 'calc(100vh - 220px)',\n            }}\n            layout={xl ? 'horizontal' : 'vertical'}\n          >\n            <Splitter.Panel resizable={false}>\n              {fileExplorerElement}\n            </Splitter.Panel>\n            <Splitter.Panel defaultSize={500}>\n              {vFolderDescriptionElement}\n            </Splitter.Panel>\n          </Splitter>\n        ) : (\n          <BAIFlex direction=\"column\" align=\"stretch\">\n            {fileExplorerElement}\n            <Divider\n              style={{\n                borderColor: token.colorBorderSecondary,\n              }}\n            />\n            {vFolderDescriptionElement}\n          </BAIFlex>\n        )}\n        <div style={{ display: 'none' }}>\n          {/* @ts-ignore  TODO: delete below after https://lablup.atlassian.net/browse/FR-1150 */}\n          <backend-ai-folder-explorer\n            ref={folderExplorerRef}\n            active\n            vfolderID={vfolderID}\n          />\n        </div>\n      </BAIFlex>\n    </BAIModal>\n  );\n};\n\nexport default FolderExplorer;\n"],"names":["_ref","type","style","monospace","children","restProps","_jsx","Typography","Text","fontFamily","node","v0","v1","v2","hash","uploadRequestAtom","atom","uploadStatusAtom","uploadStatusAtomFamily","atomFamily","vFolderId","get","set","newStatus","prev","FileUploadManager","t","useTranslation","upsertNotification","useSetBAINotification","baiClient","useSuspendedBackendaiClient","uploadRequests","setUploadRequests","useAtom","uploadStatus","setUploadStatus","queue","PQueue","concurrency","useEffect","length","forEach","uploadRequest","vFolderName","uploadFilesNames","startFunctions","_prev$vFolderId","pending","completed","failed","key","open","message","folderName","backgroundTask","status","percent","onChange","duration","startFunction","add","async","onProgress","bytesUploaded","bytesTotal","fileName","_prev$vFolderId2","remainingFiles","Math","round","then","filter","f","catch","Object","entries","_","resolved","rejected","extraDescription","useFileUploadManager","useConnectedBAIClient","useUploadStatusAtomStatus","useSetAtom","vfolder_node","useLazyLoadQuery","_FileUploadManagerQuery","vfolderGlobalId","toGlobalId","fetchPolicy","uploadFiles","files","vfolderId","currentPath","_vfolder_node$name2","validateUploadRequest","requestedFiles","maxPossibleFileSize","_config","maxFileUploadSize","maxRequestFileSize","file","size","reduce","max","_vfolder_node$name","name","description","toText","to","search","URLSearchParams","folder","toString","uploadFileNames","startUploadFunctionMap","push","webkitRelativePath","uploadPath","Boolean","join","uploadUrl","vfolder","create_upload_session","Promise","resolve","reject","tus","endpoint","retryDelays","chunkSize","getOptimalChunkSize","storeFingerprintForResuming","metadata","filename","filetype","_callbacks$onProgress","callbacks","call","onSuccess","onError","start","uploadRequestInfo","fileSize","MB","v3","v4","v5","vfolderNodeFrgmt","folderExplorerRef","titleStyle","token","theme","useToken","lg","Grid","useBreakpoint","vfolderNode","useFragment","_FolderExplorerHeaderFragment","_jsxs","BAIFlex","justify","gap","marginMD","width","flex","VFolderNodeIdenticon","vfolderNodeIdenticonFrgmt","fontSize","fontSizeHeading4","borderColor","colorBorderSecondary","borderWidth","borderStyle","fontSizeHeading3","height","borderRadius","EditableVFolderName","vfolderFrgmt","enableLink","component","Title","level","margin","ellipsis","editable","triggerType","inputProps","marginSM","unmanaged_path","_Fragment","Tooltip","title","Button","icon","Image","src","alt","preview","onClick","_folderExplorerRef$cu","current","_executeFileBrowser","_folderExplorerRef$cu2","_executeSSHProxyAgent","useVirtualFolderPath","_useVirtualFolderNodePathFragment","quotaScopeType","quotaScopeIdWithoutType","quota_scope_id","toLocalId","id","vfolderIdPrefix1","slice","vfolderIdPrefix2","vfolderIdRest","vfolderPath","replaceAll","direction","align","wrap","BAIText","copyable","text","fontSizeSM","_convertToDecimalUnit","onRequestRefresh","props","App","useApp","getErrorMessage","useErrorMessageResolver","relayEnv","useRelayEnvironment","currentProject","useCurrentProjectValue","currentUser","useCurrentUserInfo","updateMutation","useTanMutation","mutationFn","_ref2","permission","update_folder","_VFolderNodeDescriptionFragment","items","filterOutEmpty","label","color","colorTextLabel","VirtualFolderPath","BAITag","statusTagColor","undefined","host","ownership_type","UserOutlined","colorTextTertiary","BAIUserUnionIcon","user","uuid","is_admin","group","BAISelect","defaultValue","options","value","mutate","success","document","dispatchEvent","CustomEvent","fetchQuery","_VFolderNodeDescriptionPermissionRefreshQuery","toPromise","error","popupMatchSelectWidth","CheckCircleOutlined","user_email","group_name","cloneable","max_size","convertToDecimalUnit","displayValue","usage_mode","dayjs","created_at","format","Descriptions","bordered","column","styles","content","wordBreak","overflowWrap","useStyles","createStyles","css","baiModalHeader","_baiClient$_config","_vfolder_node$host","vfolderID","onRequestClose","modalProps","xl","useRef","fetchKey","updateFetchKey","useFetchKey","currentDomain","useCurrentDomainValue","currentUserAccessKey","accessKey","unitedAllowedPermissionByVolume","useMergedAllowedStorageHostPermission","domain","projectId","userAccessKey","_mergedAllowedVFolder","_mergedAllowedVFolder2","_mergedAllowedVFolder3","keypair","_useMergedAllowedStorageHostPermission_KeypairQuery","domainName","mergedAllowedVFolderHosts","_useMergedAllowedStorageHostPermission_AllowedVFolderHostsQuery","resourcePolicyName","resource_policy","allowedPermissionForDomainsByVolume","JSON","parse","allowed_vfolder_hosts","allowedPermissionForGroupsByVolume","allowedPermissionForResourcePolicyByVolume","keypair_resource_policy","data","vhostInfo","useSuspenseQuery","queryKey","queryFn","list_hosts","staleTime","gcTime","assign","allowed","map","volume","arr","Set","concat","StorageHostPermissionByDomain","StorageHostPermissionByGroup","StorageHostPermissionByResourcePolicy","bodyRef","_FolderExplorerQuery","hasDownloadContentPermission","hasDeleteContentPermission","permissions","hasWriteContentPermission","fileExplorerElement","Alert","showIcon","BAIFileExplorer","targetVFolderId","onUpload","enableDownload","enableDelete","enableWrite","tableProps","scroll","x","y","paddingBottom","paddingLG","fileDropContainerRef","vFolderDescriptionElement","VFolderNodeDescription","_fetchVFolder","BAIModal","className","centered","destroyOnClose","footer","FolderExplorerHeader","zIndex","zIndexPopupBase","bodyProps","ref","onCancel","Splitter","layout","Panel","resizable","defaultSize","Divider","display","active"],"sourceRoot":""}