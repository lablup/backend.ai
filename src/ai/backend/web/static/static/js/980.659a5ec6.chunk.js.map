{"version":3,"file":"static/js/980.659a5ec6.chunk.js","mappings":"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","sources":["../node_modules/fbjs/lib/areEqual.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/fbjs/lib/warning.js","../node_modules/invariant/browser.js","../node_modules/react-relay/index.js","../node_modules/react-relay/lib/ReactRelayContainerUtils.js","../node_modules/react-relay/lib/ReactRelayContext.js","../node_modules/react-relay/lib/ReactRelayFragmentContainer.js","../node_modules/react-relay/lib/ReactRelayLocalQueryRenderer.js","../node_modules/react-relay/lib/ReactRelayPaginationContainer.js","../node_modules/react-relay/lib/ReactRelayQueryFetcher.js","../node_modules/react-relay/lib/ReactRelayQueryRenderer.js","../node_modules/react-relay/lib/ReactRelayQueryRendererContext.js","../node_modules/react-relay/lib/ReactRelayRefetchContainer.js","../node_modules/react-relay/lib/RelayContext.js","../node_modules/react-relay/lib/assertFragmentMap.js","../node_modules/react-relay/lib/buildReactRelayContainer.js","../node_modules/react-relay/lib/getRootVariablesForFragments.js","../node_modules/react-relay/lib/index.js","../node_modules/react-relay/lib/isRelayEnvironment.js","../node_modules/react-relay/lib/relay-hooks/EntryPointContainer.react.js","../node_modules/react-relay/lib/relay-hooks/FragmentResource.js","../node_modules/react-relay/lib/relay-hooks/HooksImplementation.js","../node_modules/react-relay/lib/relay-hooks/LRUCache.js","../node_modules/react-relay/lib/relay-hooks/ProfilerContext.js","../node_modules/react-relay/lib/relay-hooks/QueryResource.js","../node_modules/react-relay/lib/relay-hooks/RelayEnvironmentProvider.js","../node_modules/react-relay/lib/relay-hooks/SuspenseResource.js","../node_modules/react-relay/lib/relay-hooks/loadEntryPoint.js","../node_modules/react-relay/lib/relay-hooks/loadQuery.js","../node_modules/react-relay/lib/relay-hooks/useClientQuery.js","../node_modules/react-relay/lib/relay-hooks/useEntryPointLoader.js","../node_modules/react-relay/lib/relay-hooks/useFetchTrackingRef.js","../node_modules/react-relay/lib/relay-hooks/useFragment.js","../node_modules/react-relay/lib/relay-hooks/useFragmentNode.js","../node_modules/react-relay/lib/relay-hooks/useIsMountedRef.js","../node_modules/react-relay/lib/relay-hooks/useIsOperationNodeActive.js","../node_modules/react-relay/lib/relay-hooks/useLazyLoadQuery.js","../node_modules/react-relay/lib/relay-hooks/useLazyLoadQueryNode.js","../node_modules/react-relay/lib/relay-hooks/useLoadMoreFunction.js","../node_modules/react-relay/lib/relay-hooks/useMemoOperationDescriptor.js","../node_modules/react-relay/lib/relay-hooks/useMemoVariables.js","../node_modules/react-relay/lib/relay-hooks/useMutation.js","../node_modules/react-relay/lib/relay-hooks/usePaginationFragment.js","../node_modules/react-relay/lib/relay-hooks/usePreloadedQuery.js","../node_modules/react-relay/lib/relay-hooks/useQueryLoader.js","../node_modules/react-relay/lib/relay-hooks/useRefetchableFragment.js","../node_modules/react-relay/lib/relay-hooks/useRefetchableFragmentNode.js","../node_modules/react-relay/lib/relay-hooks/useRelayEnvironment.js","../node_modules/react-relay/lib/relay-hooks/useStaticFragmentNodeWarning.js","../node_modules/react-relay/lib/relay-hooks/useSubscribeToInvalidationState.js","../node_modules/react-relay/lib/relay-hooks/useSubscription.js","../node_modules/react-relay/lib/relay-hooks/useUnsafeRef_DEPRECATED.js","../node_modules/relay-runtime/index.js","../node_modules/relay-runtime/lib/handlers/RelayDefaultHandlerProvider.js","../node_modules/relay-runtime/lib/handlers/connection/ConnectionHandler.js","../node_modules/relay-runtime/lib/handlers/connection/ConnectionInterface.js","../node_modules/relay-runtime/lib/handlers/connection/MutationHandlers.js","../node_modules/relay-runtime/lib/index.js","../node_modules/relay-runtime/lib/multi-actor-environment/ActorIdentifier.js","../node_modules/relay-runtime/lib/multi-actor-environment/ActorUtils.js","../node_modules/relay-runtime/lib/mutations/RelayDeclarativeMutationConfig.js","../node_modules/relay-runtime/lib/mutations/RelayRecordProxy.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceMutator.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceProxy.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceSelectorProxy.js","../node_modules/relay-runtime/lib/mutations/applyOptimisticMutation.js","../node_modules/relay-runtime/lib/mutations/commitLocalUpdate.js","../node_modules/relay-runtime/lib/mutations/commitMutation.js","../node_modules/relay-runtime/lib/mutations/createUpdatableProxy.js","../node_modules/relay-runtime/lib/mutations/readUpdatableFragment.js","../node_modules/relay-runtime/lib/mutations/readUpdatableQuery.js","../node_modules/relay-runtime/lib/mutations/validateMutation.js","../node_modules/relay-runtime/lib/network/ConvertToExecuteFunction.js","../node_modules/relay-runtime/lib/network/RelayNetwork.js","../node_modules/relay-runtime/lib/network/RelayObservable.js","../node_modules/relay-runtime/lib/network/RelayQueryResponseCache.js","../node_modules/relay-runtime/lib/network/wrapNetworkWithLogObserver.js","../node_modules/relay-runtime/lib/query/GraphQLTag.js","../node_modules/relay-runtime/lib/query/PreloadableQueryRegistry.js","../node_modules/relay-runtime/lib/query/fetchQuery.js","../node_modules/relay-runtime/lib/query/fetchQueryInternal.js","../node_modules/relay-runtime/lib/query/fetchQuery_DEPRECATED.js","../node_modules/relay-runtime/lib/store/ClientID.js","../node_modules/relay-runtime/lib/store/DataChecker.js","../node_modules/relay-runtime/lib/store/OperationExecutor.js","../node_modules/relay-runtime/lib/store/RelayConcreteVariables.js","../node_modules/relay-runtime/lib/store/RelayModernEnvironment.js","../node_modules/relay-runtime/lib/store/RelayModernFragmentSpecResolver.js","../node_modules/relay-runtime/lib/store/RelayModernOperationDescriptor.js","../node_modules/relay-runtime/lib/store/RelayModernRecord.js","../node_modules/relay-runtime/lib/store/RelayModernSelector.js","../node_modules/relay-runtime/lib/store/RelayModernStore.js","../node_modules/relay-runtime/lib/store/RelayOperationTracker.js","../node_modules/relay-runtime/lib/store/RelayOptimisticRecordSource.js","../node_modules/relay-runtime/lib/store/RelayPublishQueue.js","../node_modules/relay-runtime/lib/store/RelayReader.js","../node_modules/relay-runtime/lib/store/RelayRecordSource.js","../node_modules/relay-runtime/lib/store/RelayRecordState.js","../node_modules/relay-runtime/lib/store/RelayReferenceMarker.js","../node_modules/relay-runtime/lib/store/RelayResponseNormalizer.js","../node_modules/relay-runtime/lib/store/RelayStoreReactFlightUtils.js","../node_modules/relay-runtime/lib/store/RelayStoreSubscriptions.js","../node_modules/relay-runtime/lib/store/RelayStoreUtils.js","../node_modules/relay-runtime/lib/store/ResolverCache.js","../node_modules/relay-runtime/lib/store/ResolverFragments.js","../node_modules/relay-runtime/lib/store/TypeID.js","../node_modules/relay-runtime/lib/store/ViewerPattern.js","../node_modules/relay-runtime/lib/store/cloneRelayHandleSourceField.js","../node_modules/relay-runtime/lib/store/cloneRelayScalarHandleSourceField.js","../node_modules/relay-runtime/lib/store/createFragmentSpecResolver.js","../node_modules/relay-runtime/lib/store/createRelayContext.js","../node_modules/relay-runtime/lib/store/defaultGetDataID.js","../node_modules/relay-runtime/lib/store/defaultRequiredFieldLogger.js","../node_modules/relay-runtime/lib/store/experimental-live-resolvers/LiveResolverSuspenseSentinel.js","../node_modules/relay-runtime/lib/store/experimental-live-resolvers/getOutputTypeRecordIDs.js","../node_modules/relay-runtime/lib/store/hasOverlappingIDs.js","../node_modules/relay-runtime/lib/store/isRelayModernEnvironment.js","../node_modules/relay-runtime/lib/store/readInlineData.js","../node_modules/relay-runtime/lib/subscription/requestSubscription.js","../node_modules/relay-runtime/lib/util/RelayConcreteNode.js","../node_modules/relay-runtime/lib/util/RelayDefaultHandleKey.js","../node_modules/relay-runtime/lib/util/RelayError.js","../node_modules/relay-runtime/lib/util/RelayFeatureFlags.js","../node_modules/relay-runtime/lib/util/RelayProfiler.js","../node_modules/relay-runtime/lib/util/RelayReplaySubject.js","../node_modules/relay-runtime/lib/util/StringInterner.js","../node_modules/relay-runtime/lib/util/createPayloadFor3DField.js","../node_modules/relay-runtime/lib/util/deepFreeze.js","../node_modules/relay-runtime/lib/util/generateID.js","../node_modules/relay-runtime/lib/util/getFragmentIdentifier.js","../node_modules/relay-runtime/lib/util/getOperation.js","../node_modules/relay-runtime/lib/util/getPaginationMetadata.js","../node_modules/relay-runtime/lib/util/getPaginationVariables.js","../node_modules/relay-runtime/lib/util/getPendingOperationsForFragment.js","../node_modules/relay-runtime/lib/util/getRefetchMetadata.js","../node_modules/relay-runtime/lib/util/getRelayHandleKey.js","../node_modules/relay-runtime/lib/util/getRequestIdentifier.js","../node_modules/relay-runtime/lib/util/getValueAtPath.js","../node_modules/relay-runtime/lib/util/handlePotentialSnapshotErrors.js","../node_modules/relay-runtime/lib/util/isEmptyObject.js","../node_modules/relay-runtime/lib/util/isPromise.js","../node_modules/relay-runtime/lib/util/isScalarAndEqual.js","../node_modules/relay-runtime/lib/util/recycleNodesInto.js","../node_modules/relay-runtime/lib/util/registerEnvironmentWithDevTools.js","../node_modules/relay-runtime/lib/util/resolveImmediate.js","../node_modules/relay-runtime/lib/util/stableCopy.js","../node_modules/relay-runtime/lib/util/withDuration.js","../node_modules/relay-runtime/lib/util/withProvidedVariables.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require(\"./emptyFunction\");\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\n\nfunction printWarning(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var argIndex = 0;\n  var message = 'Warning: ' + format.replace(/%s/g, function () {\n    return args[argIndex++];\n  });\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    // --- Welcome to debugging React ---\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n  } catch (x) {}\n}\n\nvar warning = process.env.NODE_ENV !== \"production\" ? function (condition, format) {\n  if (format === undefined) {\n    throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n  }\n\n  if (!condition) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    printWarning.apply(void 0, [format].concat(args));\n  }\n} : emptyFunction;\nmodule.exports = warning;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * Relay v15.0.0\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/index.js');\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction getComponentName(component) {\n  return component.displayName || component.name || 'Component';\n}\nfunction getContainerName(Component) {\n  return 'Relay(' + getComponentName(Component) + ')';\n}\nmodule.exports = {\n  getComponentName: getComponentName,\n  getContainerName: getContainerName\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createRelayContext = _require.__internal.createRelayContext;\nmodule.exports = createRelayContext(React);","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _excluded = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar _require = require('./ReactRelayContainerUtils'),\n  getContainerName = _require.getContainerName;\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\n/**\n * Composes a React component class, returning a new class that intercepts\n * props, resolving them with the provided fragments and subscribing for\n * updates.\n */\nfunction createContainerWithFragments(Component, fragments) {\n  var _class;\n  var containerName = getContainerName(Component);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        var resolverFromThisUpdate = _this.state.resolver;\n        _this.setState(function (updatedState) {\n          return (\n            // If this event belongs to the current data source, update.\n            // Otherwise we should ignore it.\n            resolverFromThisUpdate === updatedState.resolver ? {\n              data: updatedState.resolver.resolve(),\n              relayProp: getRelayProp(updatedState.relayProp.environment)\n            } : null\n          );\n        });\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      // Do not provide a subscription/callback here.\n      // It is possible for this render to be interrupted or aborted,\n      // In which case the subscription would cause a leak.\n      // We will add the subscription in componentDidMount().\n      var resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      _this.state = {\n        data: resolver.resolve(),\n        prevProps: props,\n        prevPropsContext: relayContext,\n        relayProp: getRelayProp(relayContext.environment),\n        resolver: resolver\n      };\n      return _this;\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */\n    _class.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$__rootIsQu;\n      // Any props change could impact the query, so we mirror props in state.\n      // This is an unusual pattern, but necessary for this container usecase.\n      var prevProps = prevState.prevProps;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, prevProps);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var resolver = prevState.resolver;\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (prevState.prevPropsContext.environment !== relayContext.environment || !areEqual(prevIDs, nextIDs)) {\n        // Do not provide a subscription/callback here.\n        // It is possible for this render to be interrupted or aborted,\n        // In which case the subscription would cause a leak.\n        // We will add the subscription in componentDidUpdate().\n        resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        return {\n          data: resolver.resolve(),\n          prevPropsContext: relayContext,\n          prevProps: nextProps,\n          relayProp: getRelayProp(relayContext.environment),\n          resolver: resolver\n        };\n      } else {\n        resolver.setProps(nextProps);\n        var data = resolver.resolve();\n        if (data !== prevState.data) {\n          return {\n            data: data,\n            prevProps: nextProps,\n            prevPropsContext: relayContext,\n            relayProp: getRelayProp(relayContext.environment)\n          };\n        }\n      }\n      return null;\n    };\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (this.state.resolver !== prevState.resolver) {\n        prevState.resolver.dispose();\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      } else {\n        this._rerenderIfStoreHasChanged();\n      }\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.state.resolver.dispose();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (nextState.prevPropsContext.environment !== this.state.prevPropsContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var _this$state = this.state,\n        data = _this$state.data,\n        resolver = _this$state.resolver;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var _this$state2 = this.state,\n        data = _this$state2.data,\n        resolver = _this$state2.resolver;\n      var maybeNewData = resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    // $FlowFixMe[missing-local-annot]\n    ;\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        componentRef = _this$props.componentRef,\n        __relayContext = _this$props.__relayContext,\n        __rootIsQueryRenderer = _this$props.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      return React.createElement(Component, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, props), this.state.data), {}, {\n        ref: componentRef,\n        relay: this.state.relayProp\n      }));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\nfunction getRelayProp(environment) {\n  return {\n    environment: environment\n  };\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, createContainerWithFragments);\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createOperationDescriptor = _require.createOperationDescriptor,\n  deepFreeze = _require.deepFreeze,\n  getRequest = _require.getRequest;\nvar useLayoutEffect = React.useLayoutEffect,\n  useState = React.useState,\n  useRef = React.useRef,\n  useMemo = React.useMemo;\nvar queryRendererContext = {\n  rootIsQueryRenderer: true\n};\nfunction useDeepCompare(value) {\n  var latestValue = React.useRef(value);\n  if (!areEqual(latestValue.current, value)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(value);\n    }\n    latestValue.current = value;\n  }\n  return latestValue.current;\n}\nfunction ReactRelayLocalQueryRenderer(props) {\n  var environment = props.environment,\n    query = props.query,\n    variables = props.variables,\n    render = props.render;\n  var latestVariables = useDeepCompare(variables);\n  var operation = useMemo(function () {\n    var request = getRequest(query);\n    return createOperationDescriptor(request, latestVariables);\n  }, [query, latestVariables]);\n  var relayContext = useMemo(function () {\n    return {\n      environment: environment\n    };\n  }, [environment]);\n\n  // Use a ref to prevent rendering twice when data changes\n  // because of props change\n  var dataRef = useRef(null);\n  var _useState = useState(null),\n    forceUpdate = _useState[1];\n  var cleanupFnRef = useRef(null);\n  var snapshot = useMemo(function () {\n    environment.check(operation);\n    var res = environment.lookup(operation.fragment);\n    dataRef.current = res.data;\n\n    // Run effects here so that the data can be retained\n    // and subscribed before the component commits\n    var retainDisposable = environment.retain(operation);\n    var subscribeDisposable = environment.subscribe(res, function (newSnapshot) {\n      dataRef.current = newSnapshot.data;\n      forceUpdate(dataRef.current);\n    });\n    var disposed = false;\n    function nextCleanupFn() {\n      if (!disposed) {\n        disposed = true;\n        cleanupFnRef.current = null;\n        retainDisposable.dispose();\n        subscribeDisposable.dispose();\n      }\n    }\n    if (cleanupFnRef.current) {\n      cleanupFnRef.current();\n    }\n    cleanupFnRef.current = nextCleanupFn;\n    return res;\n  }, [environment, operation]);\n  useLayoutEffect(function () {\n    var cleanupFn = cleanupFnRef.current;\n    return function () {\n      cleanupFn && cleanupFn();\n    };\n  }, [snapshot]);\n  return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n    value: relayContext\n  }, /*#__PURE__*/React.createElement(ReactRelayQueryRendererContext.Provider, {\n    value: queryRendererContext\n  }, render({\n    props: dataRef.current\n  })));\n}\nmodule.exports = ReactRelayLocalQueryRenderer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectSpread3 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _excluded = [\"componentRef\"],\n  _excluded2 = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"],\n  _excluded3 = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar getRootVariablesForFragments = require('./getRootVariablesForFragments');\nvar _require = require('./ReactRelayContainerUtils'),\n  getComponentName = _require.getComponentName,\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  ConnectionInterface = _require3.ConnectionInterface,\n  Observable = _require3.Observable,\n  RelayFeatureFlags = _require3.RelayFeatureFlags,\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  createOperationDescriptor = _require3.createOperationDescriptor,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  getRequest = _require3.getRequest,\n  getVariablesFromObject = _require3.getVariablesFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\nvar warning = require(\"fbjs/lib/warning\");\nvar FORWARD = 'forward';\n/**\n * Extends the functionality of RelayFragmentContainer by providing a mechanism\n * to load more data from a connection.\n *\n * # Configuring a PaginationContainer\n *\n * PaginationContainer accepts the standard FragmentContainer arguments and an\n * additional `connectionConfig` argument:\n *\n * - `Component`: the component to be wrapped/rendered.\n * - `fragments`: an object whose values are `graphql` fragments. The object\n *   keys determine the prop names by which fragment data is available.\n * - `connectionConfig`: an object that determines how to load more connection\n *   data. Details below.\n *\n * # Loading More Data\n *\n * Use `props.relay.hasMore()` to determine if there are more items to load.\n *\n * ```\n * hasMore(): boolean\n * ```\n *\n * Use `props.relay.isLoading()` to determine if a previous call to `loadMore()`\n * is still pending. This is convenient for avoiding duplicate load calls.\n *\n * ```\n * isLoading(): boolean\n * ```\n *\n * Use `props.relay.loadMore()` to load more items. This will return null if\n * there are no more items to fetch, otherwise it will fetch more items and\n * return a Disposable that can be used to cancel the fetch.\n *\n * `pageSize` should be the number of *additional* items to fetch (not the\n * total).\n *\n * ```\n * loadMore(pageSize: number, callback: ?(error: ?Error) => void): ?Disposable\n * ```\n *\n * A complete example:\n *\n * ```\n * class Foo extends React.Component {\n *   ...\n *   _onEndReached() {\n *     if (!this.props.relay.hasMore() || this.props.relay.isLoading()) {\n *       return;\n *     }\n *     this.props.relay.loadMore(10);\n *   }\n *   ...\n * }\n * ```\n *\n * # Connection Config\n *\n * Here's an example, followed by details of each config property:\n *\n * ```\n * ReactRelayPaginationContainer.createContainer(\n *   Component,\n *   {\n *     user: graphql`fragment FriendsFragment on User {\n *       friends(after: $afterCursor first: $count) @connection {\n *         edges { ... }\n *         pageInfo {\n *           startCursor\n *           endCursor\n *           hasNextPage\n *           hasPreviousPage\n *         }\n *       }\n *     }`,\n *   },\n *   {\n *     direction: 'forward',\n *     getConnectionFromProps(props) {\n *       return props.user && props.user.friends;\n *     },\n *     getFragmentVariables(vars, totalCount) {\n *       // The component presumably wants *all* edges, not just those after\n *       // the cursor, so notice that we don't set $afterCursor here.\n *       return {\n *         ...vars,\n *         count: totalCount,\n *       };\n *     },\n *     getVariables(props, {count, cursor}, fragmentVariables) {\n *       return {\n *         id: props.user.id,\n *         afterCursor: cursor,\n *         count,\n *       },\n *     },\n *     query: graphql`\n *       query FriendsQuery($id: ID!, $afterCursor: ID, $count: Int!) {\n *         node(id: $id) {\n *           ...FriendsFragment\n *         }\n *       }\n *     `,\n *   }\n * );\n * ```\n *\n * ## Config Properties\n *\n * - `direction`: Either \"forward\" to indicate forward pagination using\n *   after/first, or \"backward\" to indicate backward pagination using\n *   before/last.\n * - `getConnectionFromProps(props)`: PaginationContainer doesn't magically know\n *   which connection data you mean to fetch more of (a container might fetch\n *   multiple connections, but can only paginate one of them). This function is\n *   given the fragment props only (not full props), and should return the\n *   connection data. See the above example that returns the friends data via\n *   `props.user.friends`.\n * - `getFragmentVariables(previousVars, totalCount)`: Given the previous variables\n *   and the new total number of items, get the variables to use when reading\n *   your fragments. Typically this means setting whatever your local \"count\"\n *   variable is to the value of `totalCount`. See the example.\n * - `getVariables(props, {count, cursor})`: Get the variables to use when\n *   fetching the pagination `query`. You may determine the root object id from\n *   props (see the example that uses `props.user.id`) and may also set whatever\n *   variables you use for the after/first/before/last calls based on the count\n *   and cursor.\n * - `query`: A query to use when fetching more connection data. This should\n *   typically reference one of the container's fragment (as in the example)\n *   to ensure that all the necessary fields for sub-components are fetched.\n */\n\nfunction createGetConnectionFromProps(metadata) {\n  var path = metadata.path;\n  !path ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to synthesize a ' + 'getConnectionFromProps function.') : invariant(false) : void 0;\n  return function (props) {\n    var data = props[metadata.fragmentName];\n    for (var i = 0; i < path.length; i++) {\n      if (!data || typeof data !== 'object') {\n        return null;\n      }\n      data = data[path[i]];\n    }\n    return data;\n  };\n}\nfunction createGetFragmentVariables(metadata) {\n  var countVariable = metadata.count;\n  !countVariable ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to synthesize a ' + 'getFragmentVariables function.') : invariant(false) : void 0;\n  return function (prevVars, totalCount) {\n    return (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, prevVars), {}, (0, _defineProperty2[\"default\"])({}, countVariable, totalCount));\n  };\n}\nfunction findConnectionMetadata(fragments) {\n  var foundConnectionMetadata = null;\n  var isRelayModern = false;\n  for (var fragmentName in fragments) {\n    var fragment = fragments[fragmentName];\n    var connectionMetadata = fragment.metadata && fragment.metadata.connection;\n    // HACK: metadata is always set to `undefined` in classic. In modern, even\n    // if empty, it is set to null (never undefined). We use that knowlege to\n    // check if we're dealing with classic or modern\n    if (fragment.metadata !== undefined) {\n      isRelayModern = true;\n    }\n    if (connectionMetadata) {\n      !(connectionMetadata.length === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Only a single @connection is ' + 'supported, `%s` has %s.', fragmentName, connectionMetadata.length) : invariant(false) : void 0;\n      !!foundConnectionMetadata ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Only a single fragment with ' + '@connection is supported.') : invariant(false) : void 0;\n      foundConnectionMetadata = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, connectionMetadata[0]), {}, {\n        fragmentName: fragmentName\n      });\n    }\n  }\n  !(!isRelayModern || foundConnectionMetadata !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: A @connection directive must be present.') : invariant(false) : void 0;\n  return foundConnectionMetadata || {};\n}\nfunction toObserver(observerOrCallback) {\n  return typeof observerOrCallback === 'function' ? {\n    error: observerOrCallback,\n    complete: observerOrCallback,\n    unsubscribe: function unsubscribe(subscription) {\n      typeof observerOrCallback === 'function' && observerOrCallback();\n    }\n  } : observerOrCallback || {};\n}\nfunction createContainerWithFragments(Component, fragments, connectionConfig) {\n  var _class;\n  var componentName = getComponentName(Component);\n  var containerName = getContainerName(Component);\n  var metadata = findConnectionMetadata(fragments);\n  var getConnectionFromProps = connectionConfig.getConnectionFromProps || createGetConnectionFromProps(metadata);\n  var direction = connectionConfig.direction || metadata.direction;\n  !direction ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to infer direction of the ' + 'connection, possibly because both first and last are provided.') : invariant(false) : void 0;\n  var getFragmentVariables = connectionConfig.getFragmentVariables || createGetFragmentVariables(metadata);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        _this.setState({\n          data: _this._resolver.resolve()\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_hasMore\", function () {\n        var connectionData = _this._getConnectionData();\n        return !!(connectionData && connectionData.hasMore && connectionData.cursor);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_isLoading\", function () {\n        return !!_this._refetchSubscription;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_refetchConnection\", function (totalCount, observerOrCallback, refetchVariables) {\n        if (!_this._canFetchPage('refetchConnection')) {\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        _this._refetchVariables = refetchVariables;\n        var paginatingVariables = {\n          count: totalCount,\n          cursor: null,\n          totalCount: totalCount\n        };\n        var fetch = _this._fetchPage(paginatingVariables, toObserver(observerOrCallback), {\n          force: true\n        });\n        return {\n          dispose: fetch.unsubscribe\n        };\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_loadMore\", function (pageSize, observerOrCallback, options) {\n        if (!_this._canFetchPage('loadMore')) {\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        var observer = toObserver(observerOrCallback);\n        var connectionData = _this._getConnectionData();\n        if (!connectionData) {\n          Observable.create(function (sink) {\n            return sink.complete();\n          }).subscribe(observer);\n          return null;\n        }\n        var totalCount = connectionData.edgeCount + pageSize;\n        if (options && options.force) {\n          return _this._refetchConnection(totalCount, observerOrCallback);\n        }\n        var _ConnectionInterface$ = ConnectionInterface.get(),\n          END_CURSOR = _ConnectionInterface$.END_CURSOR,\n          START_CURSOR = _ConnectionInterface$.START_CURSOR;\n        var cursor = connectionData.cursor;\n        process.env.NODE_ENV !== \"production\" ? warning(cursor != null && cursor !== '', 'ReactRelayPaginationContainer: Cannot `loadMore` without valid `%s` (got `%s`)', direction === FORWARD ? END_CURSOR : START_CURSOR, cursor) : void 0;\n        var paginatingVariables = {\n          count: pageSize,\n          cursor: cursor,\n          totalCount: totalCount\n        };\n        var fetch = _this._fetchPage(paginatingVariables, observer, options);\n        return {\n          dispose: fetch.unsubscribe\n        };\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      _this._isARequestInFlight = false;\n      _this._refetchSubscription = null;\n      _this._refetchVariables = null;\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        _this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      } else {\n        _this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer, _this._handleFragmentDataUpdate);\n      }\n      _this.state = {\n        data: _this._resolver.resolve(),\n        prevContext: relayContext,\n        contextForChildren: relayContext,\n        relayProp: _this._buildRelayProp(relayContext),\n        resolverGeneration: 0\n      };\n      _this._isUnmounted = false;\n      _this._hasFetched = false;\n      return _this;\n    }\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._isUnmounted = false;\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      }\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        if (prevState.resolverGeneration !== this.state.resolverGeneration) {\n          this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n        } else {\n          this._rerenderIfStoreHasChanged();\n        }\n      }\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */;\n    _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      var _nextProps$__rootIsQu;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, this.props);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var prevRootVariables = getRootVariablesForFragments(fragments, this.props);\n      var nextRootVariables = getRootVariablesForFragments(fragments, nextProps);\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (relayContext.environment !== this.state.prevContext.environment || !areEqual(prevRootVariables, nextRootVariables) || !areEqual(prevIDs, nextIDs)) {\n        this._cleanup();\n        // Child containers rely on context.relay being mutated (for gDSFP).\n        if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n          this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        } else {\n          this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer, this._handleFragmentDataUpdate);\n        }\n        this.setState(function (prevState) {\n          return {\n            prevContext: relayContext,\n            contextForChildren: relayContext,\n            relayProp: _this2._buildRelayProp(relayContext),\n            resolverGeneration: prevState.resolverGeneration + 1\n          };\n        });\n      } else if (!this._hasFetched) {\n        this._resolver.setProps(nextProps);\n      }\n      var data = this._resolver.resolve();\n      if (data !== this.state.data) {\n        this.setState({\n          data: data\n        });\n      }\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._isUnmounted = true;\n      this._cleanup();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp || nextState.resolverGeneration !== this.state.resolverGeneration) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (nextState.prevContext.environment !== this.state.prevContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    _proto._buildRelayProp = function _buildRelayProp(relayContext) {\n      return {\n        hasMore: this._hasMore,\n        isLoading: this._isLoading,\n        loadMore: this._loadMore,\n        refetchConnection: this._refetchConnection,\n        environment: relayContext.environment\n      };\n    };\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var data = this.state.data;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = this._resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var data = this.state.data;\n      var maybeNewData = this._resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      this._resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._getConnectionData = function _getConnectionData() {\n      // Extract connection data and verify there are more edges to fetch\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        _ = _this$props.componentRef,\n        restProps = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      var props = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, restProps), this.state.data);\n      var connectionData = getConnectionFromProps(props);\n      if (connectionData == null) {\n        return null;\n      }\n      var _ConnectionInterface$2 = ConnectionInterface.get(),\n        EDGES = _ConnectionInterface$2.EDGES,\n        PAGE_INFO = _ConnectionInterface$2.PAGE_INFO,\n        HAS_NEXT_PAGE = _ConnectionInterface$2.HAS_NEXT_PAGE,\n        HAS_PREV_PAGE = _ConnectionInterface$2.HAS_PREV_PAGE,\n        END_CURSOR = _ConnectionInterface$2.END_CURSOR,\n        START_CURSOR = _ConnectionInterface$2.START_CURSOR;\n      !(typeof connectionData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return `null` or a plain object with %s and %s properties, got `%s`.', componentName, EDGES, PAGE_INFO, connectionData) : invariant(false) : void 0;\n      var edges = connectionData[EDGES];\n      var pageInfo = connectionData[PAGE_INFO];\n      if (edges == null || pageInfo == null) {\n        return null;\n      }\n      !Array.isArray(edges) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return an object with %s: Array, got `%s`.', componentName, EDGES, edges) : invariant(false) : void 0;\n      !(typeof pageInfo === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return an object with %s: Object, got `%s`.', componentName, PAGE_INFO, pageInfo) : invariant(false) : void 0;\n      var hasMore = direction === FORWARD ? pageInfo[HAS_NEXT_PAGE] : pageInfo[HAS_PREV_PAGE];\n      var cursor = direction === FORWARD ? pageInfo[END_CURSOR] : pageInfo[START_CURSOR];\n      if (typeof hasMore !== 'boolean' || edges.length !== 0 && typeof cursor === 'undefined') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayPaginationContainer: Cannot paginate without %s fields in `%s`. ' + 'Be sure to fetch %s (got `%s`) and %s (got `%s`).', PAGE_INFO, componentName, direction === FORWARD ? HAS_NEXT_PAGE : HAS_PREV_PAGE, hasMore, direction === FORWARD ? END_CURSOR : START_CURSOR, cursor) : void 0;\n        return null;\n      }\n      return {\n        cursor: cursor,\n        edgeCount: edges.length,\n        hasMore: hasMore\n      };\n    };\n    _proto._getQueryFetcher = function _getQueryFetcher() {\n      if (!this._queryFetcher) {\n        this._queryFetcher = new ReactRelayQueryFetcher();\n      }\n      return this._queryFetcher;\n    };\n    _proto._canFetchPage = function _canFetchPage(method) {\n      if (this._isUnmounted) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayPaginationContainer: Unexpected call of `%s` ' + 'on unmounted container `%s`. It looks like some instances ' + 'of your container still trying to fetch data but they already ' + 'unmounted. Please make sure you clear all timers, intervals, async ' + 'calls, etc that may trigger `%s` call.', method, containerName, method) : void 0;\n        return false;\n      }\n      return true;\n    };\n    _proto._fetchPage = function _fetchPage(paginatingVariables, observer, options) {\n      var _this3 = this;\n      var _assertRelayContext = assertRelayContext(this.props.__relayContext),\n        environment = _assertRelayContext.environment;\n      var _this$props2 = this.props,\n        _ = _this$props2.componentRef,\n        __relayContext = _this$props2.__relayContext,\n        __rootIsQueryRenderer = _this$props2.__rootIsQueryRenderer,\n        restProps = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props2, _excluded2);\n      var props = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, restProps), this.state.data);\n      var fragmentVariables;\n      var rootVariables = getRootVariablesForFragments(fragments, restProps);\n      fragmentVariables = getVariablesFromObject(fragments, restProps);\n      fragmentVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, rootVariables), fragmentVariables), this._refetchVariables);\n      var fetchVariables = connectionConfig.getVariables(props, {\n        count: paginatingVariables.count,\n        cursor: paginatingVariables.cursor\n      }, fragmentVariables);\n      !(typeof fetchVariables === 'object' && fetchVariables !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getVariables()` to ' + 'return an object, got `%s` in `%s`.', fetchVariables, componentName) : invariant(false) : void 0;\n      fetchVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, fetchVariables), this._refetchVariables);\n      fragmentVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, fetchVariables), fragmentVariables);\n      var cacheConfig = options ? {\n        force: !!options.force\n      } : undefined;\n      if (cacheConfig != null && (options === null || options === void 0 ? void 0 : options.metadata) != null) {\n        cacheConfig.metadata = options === null || options === void 0 ? void 0 : options.metadata;\n      }\n      var request = getRequest(connectionConfig.query);\n      var operation = createOperationDescriptor(request, fetchVariables, cacheConfig);\n      var refetchSubscription = null;\n      if (this._refetchSubscription) {\n        this._refetchSubscription.unsubscribe();\n      }\n      this._hasFetched = true;\n      var onNext = function onNext(payload, complete) {\n        var prevData = _this3._resolver.resolve();\n        _this3._resolver.setVariables(getFragmentVariables(fragmentVariables, paginatingVariables.totalCount), operation.request.node);\n        var nextData = _this3._resolver.resolve();\n\n        // Workaround slightly different handling for connection in different\n        // core implementations:\n        // - Classic core requires the count to be explicitly incremented\n        // - Modern core automatically appends new items, updating the count\n        //   isn't required to see new data.\n        //\n        // `setState` is only required if changing the variables would change the\n        // resolved data.\n        // TODO #14894725: remove PaginationContainer equal check\n        if (!areEqual(prevData, nextData)) {\n          _this3.setState({\n            data: nextData,\n            contextForChildren: {\n              environment: _this3.props.__relayContext.environment\n            }\n          }, complete);\n        } else {\n          complete();\n        }\n      };\n      var cleanup = function cleanup() {\n        if (_this3._refetchSubscription === refetchSubscription) {\n          _this3._refetchSubscription = null;\n          _this3._isARequestInFlight = false;\n        }\n      };\n      this._isARequestInFlight = true;\n      refetchSubscription = this._getQueryFetcher().execute({\n        environment: environment,\n        operation: operation,\n        preservePreviousReferences: true\n      }).mergeMap(function (payload) {\n        return Observable.create(function (sink) {\n          onNext(payload, function () {\n            sink.next(); // pass void to public observer's `next`\n            sink.complete();\n          });\n        });\n      })\n      // use do instead of finally so that observer's `complete` fires after cleanup\n      [\"do\"]({\n        error: cleanup,\n        complete: cleanup,\n        unsubscribe: cleanup\n      }).subscribe(observer || {});\n      this._refetchSubscription = this._isARequestInFlight ? refetchSubscription : null;\n      return refetchSubscription;\n    };\n    _proto._cleanup = function _cleanup() {\n      this._resolver.dispose();\n      this._refetchVariables = null;\n      this._hasFetched = false;\n      if (this._refetchSubscription) {\n        this._refetchSubscription.unsubscribe();\n        this._refetchSubscription = null;\n        this._isARequestInFlight = false;\n      }\n      if (this._queryFetcher) {\n        this._queryFetcher.dispose();\n      }\n    }\n\n    // $FlowFixMe[missing-local-annot]\n    ;\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props3 = this.props,\n        componentRef = _this$props3.componentRef,\n        __relayContext = _this$props3.__relayContext,\n        __rootIsQueryRenderer = _this$props3.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props3, _excluded3);\n      return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n        value: this.state.contextForChildren\n      }, /*#__PURE__*/React.createElement(Component, (0, _extends2[\"default\"])({}, props, this.state.data, {\n        ref: componentRef,\n        relay: this.state.relayProp\n      })));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec, connectionConfig) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, function (ComponentClass, fragments) {\n    return createContainerWithFragments(ComponentClass, fragments, connectionConfig);\n  });\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar invariant = require('invariant');\nvar _require = require('relay-runtime'),\n  fetchQuery = _require.__internal.fetchQuery,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  isRelayModernEnvironment = _require.isRelayModernEnvironment;\nvar ReactRelayQueryFetcher = /*#__PURE__*/function () {\n  function ReactRelayQueryFetcher(args) {\n    (0, _defineProperty2[\"default\"])(this, \"_selectionReferences\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_didFetchFinish\", false);\n    if (args != null) {\n      this._cacheSelectionReference = args.cacheSelectionReference;\n      this._selectionReferences = args.selectionReferences;\n    }\n  }\n  var _proto = ReactRelayQueryFetcher.prototype;\n  _proto.getSelectionReferences = function getSelectionReferences() {\n    return {\n      cacheSelectionReference: this._cacheSelectionReference,\n      selectionReferences: this._selectionReferences\n    };\n  };\n  _proto.lookupInStore = function lookupInStore(environment, operation, fetchPolicy) {\n    if (fetchPolicy === 'store-and-network' || fetchPolicy === 'store-or-network') {\n      if (environment.check(operation).status === 'available') {\n        this._retainCachedOperation(environment, operation);\n        return environment.lookup(operation.fragment);\n      }\n    }\n    return null;\n  };\n  _proto.getFetchResult = function getFetchResult() {\n    if (this._didFetchFinish) {\n      // We don't reset '_didFetchFinish' because another callback may be set\n      if (this._error != null) {\n        return {\n          error: this._error\n        };\n      } else if (this._snapshot != null) {\n        return {\n          snapshot: this._snapshot\n        };\n      }\n    } else {\n      return null;\n    }\n  };\n  _proto.execute = function execute(_ref) {\n    var _this = this;\n    var environment = _ref.environment,\n      operation = _ref.operation,\n      _ref$preservePrevious = _ref.preservePreviousReferences,\n      preservePreviousReferences = _ref$preservePrevious === void 0 ? false : _ref$preservePrevious;\n    var reference = environment.retain(operation);\n    var error = function error() {\n      // We may have partially fulfilled the request, so let the next request\n      // or the unmount dispose of the references.\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var complete = function complete() {\n      if (!preservePreviousReferences) {\n        _this.disposeSelectionReferences();\n      }\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var unsubscribe = function unsubscribe() {\n      // Let the next request or the unmount code dispose of the references.\n      // We may have partially fulfilled the request.\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    if (!isRelayModernEnvironment(environment)) {\n      return environment.execute({\n        operation: operation\n      })[\"do\"]({\n        error: error,\n        complete: complete,\n        unsubscribe: unsubscribe\n      });\n    }\n    return fetchQuery(environment, operation)[\"do\"]({\n      error: error,\n      complete: complete,\n      unsubscribe: unsubscribe\n    });\n  };\n  _proto.setOnDataChange = function setOnDataChange(onDataChange) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `setOnDataChange` should have been called after having called `fetch`') : invariant(false) : void 0;\n    if (typeof onDataChange === 'function') {\n      // Mutate the most recent fetchOptions in place,\n      // So that in-progress requests can access the updated callback.\n      this._fetchOptions.onDataChangeCallbacks = this._fetchOptions.onDataChangeCallbacks || [];\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n      if (this._didFetchFinish) {\n        // We don't reset '_didFetchFinish' because another callback may be set\n        if (this._error != null) {\n          onDataChange({\n            error: this._error\n          });\n        } else if (this._snapshot != null) {\n          onDataChange({\n            snapshot: this._snapshot\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * `fetch` fetches the data for the given operation.\n   * If a result is immediately available synchronously, it will be synchronously\n   * returned by this function.\n   *\n   * Otherwise, the fetched result will be communicated via the `onDataChange` callback.\n   * `onDataChange` will be called with the first result (**if it wasn't returned synchronously**),\n   * and then subsequently whenever the data changes.\n   */;\n  _proto.fetch = function fetch(fetchOptions, cacheConfigOverride) {\n    var _this2 = this;\n    var environment = fetchOptions.environment,\n      operation = fetchOptions.operation,\n      onDataChange = fetchOptions.onDataChange;\n    var fetchHasReturned = false;\n    var _error;\n    this.disposeRequest();\n    var oldOnDataChangeCallbacks = this._fetchOptions && this._fetchOptions.onDataChangeCallbacks;\n    this._fetchOptions = {\n      environment: environment,\n      onDataChangeCallbacks: oldOnDataChangeCallbacks || [],\n      operation: operation\n    };\n    if (onDataChange && this._fetchOptions.onDataChangeCallbacks.indexOf(onDataChange) === -1) {\n      // $FlowFixMe[incompatible-use]\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n    }\n    var operationOverride = cacheConfigOverride ? createOperationDescriptor(operation.request.node, operation.request.variables, cacheConfigOverride) : operation;\n    var request = this.execute({\n      environment: environment,\n      operation: operationOverride\n    })[\"finally\"](function () {\n      _this2._pendingRequest = null;\n    }).subscribe({\n      next: function next() {\n        // If we received a response,\n        // Make a note that to notify the callback when it's later added.\n        _this2._didFetchFinish = true;\n        _this2._error = null;\n\n        // Only notify of the first result if `next` is being called **asynchronously**\n        // (i.e. after `fetch` has returned).\n        _this2._onQueryDataAvailable({\n          notifyFirstResult: fetchHasReturned\n        });\n      },\n      error: function error(err) {\n        // If we received a response when we didn't have a change callback,\n        // Make a note that to notify the callback when it's later added.\n        _this2._didFetchFinish = true;\n        _this2._error = err;\n        _this2._snapshot = null;\n        var onDataChangeCallbacks = _this2._fetchOptions && _this2._fetchOptions.onDataChangeCallbacks;\n\n        // Only notify of error if `error` is being called **asynchronously**\n        // (i.e. after `fetch` has returned).\n        if (fetchHasReturned) {\n          if (onDataChangeCallbacks) {\n            onDataChangeCallbacks.forEach(function (onDataChange) {\n              onDataChange({\n                error: err\n              });\n            });\n          }\n        } else {\n          _error = err;\n        }\n      }\n    });\n    this._pendingRequest = {\n      dispose: function dispose() {\n        request.unsubscribe();\n      }\n    };\n    fetchHasReturned = true;\n    if (_error) {\n      throw _error;\n    }\n    return this._snapshot;\n  };\n  _proto.retry = function retry(cacheConfigOverride) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `retry` should be called after having called `fetch`') : invariant(false) : void 0;\n    return this.fetch({\n      environment: this._fetchOptions.environment,\n      operation: this._fetchOptions.operation,\n      onDataChange: null // If there are onDataChangeCallbacks they will be reused\n    }, cacheConfigOverride);\n  };\n  _proto.dispose = function dispose() {\n    this.disposeRequest();\n    this.disposeSelectionReferences();\n  };\n  _proto.disposeRequest = function disposeRequest() {\n    this._error = null;\n    this._snapshot = null;\n\n    // order is important, dispose of pendingFetch before selectionReferences\n    if (this._pendingRequest) {\n      this._pendingRequest.dispose();\n    }\n    if (this._rootSubscription) {\n      this._rootSubscription.dispose();\n      this._rootSubscription = null;\n    }\n  };\n  _proto._retainCachedOperation = function _retainCachedOperation(environment, operation) {\n    this._disposeCacheSelectionReference();\n    this._cacheSelectionReference = environment.retain(operation);\n  };\n  _proto._disposeCacheSelectionReference = function _disposeCacheSelectionReference() {\n    this._cacheSelectionReference && this._cacheSelectionReference.dispose();\n    this._cacheSelectionReference = null;\n  };\n  _proto.disposeSelectionReferences = function disposeSelectionReferences() {\n    this._disposeCacheSelectionReference();\n    this._selectionReferences.forEach(function (r) {\n      return r.dispose();\n    });\n    this._selectionReferences = [];\n  };\n  _proto._onQueryDataAvailable = function _onQueryDataAvailable(_ref2) {\n    var _this3 = this;\n    var notifyFirstResult = _ref2.notifyFirstResult;\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `_onQueryDataAvailable` should have been called after having called `fetch`') : invariant(false) : void 0;\n    var _this$_fetchOptions = this._fetchOptions,\n      environment = _this$_fetchOptions.environment,\n      onDataChangeCallbacks = _this$_fetchOptions.onDataChangeCallbacks,\n      operation = _this$_fetchOptions.operation;\n\n    // `_onQueryDataAvailable` can be called synchronously the first time and can be called\n    // multiple times by network layers that support data subscriptions.\n    // Wait until the first payload to call `onDataChange` and subscribe for data updates.\n    if (this._snapshot) {\n      return;\n    }\n    this._snapshot = environment.lookup(operation.fragment);\n\n    // Subscribe to changes in the data of the root fragment\n    this._rootSubscription = environment.subscribe(this._snapshot, function (snapshot) {\n      // Read from this._fetchOptions in case onDataChange() was lazily added.\n      if (_this3._fetchOptions != null) {\n        var maybeNewOnDataChangeCallbacks = _this3._fetchOptions.onDataChangeCallbacks;\n        if (Array.isArray(maybeNewOnDataChangeCallbacks)) {\n          maybeNewOnDataChangeCallbacks.forEach(function (onDataChange) {\n            return onDataChange({\n              snapshot: snapshot\n            });\n          });\n        }\n      }\n    });\n    if (this._snapshot && notifyFirstResult && Array.isArray(onDataChangeCallbacks)) {\n      var snapshot = this._snapshot;\n      onDataChangeCallbacks.forEach(function (onDataChange) {\n        return onDataChange({\n          snapshot: snapshot\n        });\n      });\n    }\n  };\n  return ReactRelayQueryFetcher;\n}();\nmodule.exports = ReactRelayQueryFetcher;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  RelayFeatureFlags = _require.RelayFeatureFlags;\nvar _require2 = require('relay-runtime'),\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  deepFreeze = _require2.deepFreeze,\n  getRequest = _require2.getRequest;\n/**\n * React may double-fire the constructor, and we call 'fetch' in the\n * constructor. If a request is already in flight from a previous call to the\n * constructor, just reuse the query fetcher and wait for the response.\n */\nvar requestCache = {};\nvar queryRendererContext = {\n  rootIsQueryRenderer: true\n};\n/**\n * @public\n *\n * Orchestrates fetching and rendering data for a single view or view hierarchy:\n * - Fetches the query/variables using the given network implementation.\n * - Normalizes the response(s) to that query, publishing them to the given\n *   store.\n * - Renders the pending/fail/success states with the provided render function.\n * - Subscribes for updates to the root data and re-renders with any changes.\n */\nvar ReactRelayQueryRenderer = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2[\"default\"])(ReactRelayQueryRenderer, _React$Component);\n  function ReactRelayQueryRenderer(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this;\n\n    // Callbacks are attached to the current instance and shared with static\n    // lifecyles by bundling with state. This is okay to do because the\n    // callbacks don't change in reaction to props. However we should not\n    // \"leak\" them before mounting (since we would be unable to clean up). For\n    // that reason, we define them as null initially and fill them in after\n    // mounting to avoid leaking memory.\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleDataChange\", function (params) {\n      var error = params.error == null ? null : params.error;\n      var snapshot = params.snapshot == null ? null : params.snapshot;\n      _this.setState(function (prevState) {\n        var prevRequestCacheKey = prevState.requestCacheKey;\n        if (prevRequestCacheKey) {\n          delete requestCache[prevRequestCacheKey];\n        }\n\n        // Don't update state if nothing has changed.\n        if (snapshot === prevState.snapshot && error === prevState.error) {\n          return null;\n        }\n        return {\n          renderProps: getRenderProps(error, snapshot, prevState.queryFetcher, prevState.retryCallbacks),\n          snapshot: snapshot,\n          requestCacheKey: null\n        };\n      });\n    });\n    var retryCallbacks = {\n      handleDataChange: null,\n      handleRetryAfterError: null\n    };\n    var queryFetcher;\n    var requestCacheKey;\n    if (props.query) {\n      var query = props.query;\n      var request = getRequest(query);\n      requestCacheKey = getRequestCacheKey(request.params, props.variables);\n      queryFetcher = requestCache[requestCacheKey] ? requestCache[requestCacheKey].queryFetcher : new ReactRelayQueryFetcher();\n    } else {\n      queryFetcher = new ReactRelayQueryFetcher();\n    }\n    _this._maybeHiddenOrFastRefresh = false;\n    _this.state = (0, _objectSpread2[\"default\"])({\n      prevPropsEnvironment: props.environment,\n      prevPropsVariables: props.variables,\n      prevQuery: props.query,\n      queryFetcher: queryFetcher,\n      retryCallbacks: retryCallbacks\n    }, fetchQueryAndComputeStateFromProps(props, queryFetcher, retryCallbacks, requestCacheKey));\n    return _this;\n  }\n  ReactRelayQueryRenderer.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.prevQuery !== nextProps.query || prevState.prevPropsEnvironment !== nextProps.environment || !areEqual(prevState.prevPropsVariables, nextProps.variables)) {\n      return resetQueryStateForUpdate(nextProps, prevState);\n    }\n    return null;\n  };\n  var _proto = ReactRelayQueryRenderer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n    if (this._maybeHiddenOrFastRefresh === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current cached resource will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, so that the query is re-evaluated\n      // (and potentially cause a refetch).\n      this._maybeHiddenOrFastRefresh = false;\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState(function (prevState) {\n        var newState = resetQueryStateForUpdate(_this2.props, prevState);\n        var requestCacheKey = newState.requestCacheKey,\n          queryFetcher = newState.queryFetcher;\n        if (requestCacheKey != null && requestCache[requestCacheKey] != null) {\n          if (RelayFeatureFlags.ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION) {\n            var fetchResult = queryFetcher.getFetchResult();\n            if (fetchResult != null) {\n              var _fetchResult$snapshot, _fetchResult$error;\n              var snapshot = (_fetchResult$snapshot = fetchResult.snapshot) !== null && _fetchResult$snapshot !== void 0 ? _fetchResult$snapshot : null;\n              var error = (_fetchResult$error = fetchResult.error) !== null && _fetchResult$error !== void 0 ? _fetchResult$error : null;\n              var prevRequestCacheKey = prevState.requestCacheKey;\n              if (prevRequestCacheKey != null) {\n                delete requestCache[prevRequestCacheKey];\n              }\n              newState.renderProps = getRenderProps(error, snapshot, queryFetcher, prevState.retryCallbacks);\n              newState.snapshot = snapshot;\n              newState.requestCacheKey = null;\n            } else {\n              queryFetcher.setOnDataChange(_this2._handleDataChange);\n            }\n          } else {\n            queryFetcher.setOnDataChange(_this2._handleDataChange);\n          }\n        }\n        return newState;\n      });\n      return;\n    }\n    var _this$state = this.state,\n      retryCallbacks = _this$state.retryCallbacks,\n      queryFetcher = _this$state.queryFetcher,\n      requestCacheKey = _this$state.requestCacheKey;\n    // We don't need to cache the request after the component commits\n    if (requestCacheKey) {\n      delete requestCache[requestCacheKey];\n    }\n    retryCallbacks.handleDataChange = this._handleDataChange;\n    retryCallbacks.handleRetryAfterError = function (error) {\n      return _this2.setState(function (prevState) {\n        var prevRequestCacheKey = prevState.requestCacheKey;\n        if (prevRequestCacheKey) {\n          delete requestCache[prevRequestCacheKey];\n        }\n        return {\n          renderProps: getLoadingRenderProps(),\n          requestCacheKey: null\n        };\n      });\n    };\n\n    // Re-initialize the ReactRelayQueryFetcher with callbacks.\n    // If data has changed since constructions, this will re-render.\n    if (this.props.query) {\n      queryFetcher.setOnDataChange(this._handleDataChange);\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(_prevProps, prevState) {\n    // We don't need to cache the request after the component commits\n    var _this$state2 = this.state,\n      queryFetcher = _this$state2.queryFetcher,\n      requestCacheKey = _this$state2.requestCacheKey;\n    if (requestCacheKey) {\n      delete requestCache[requestCacheKey];\n      // HACK\n      delete this.state.requestCacheKey;\n    }\n    if (this.props.query && queryFetcher !== prevState.queryFetcher) {\n      queryFetcher.setOnDataChange(this._handleDataChange);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.state.queryFetcher.dispose();\n    this._maybeHiddenOrFastRefresh = true;\n  };\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.render !== this.props.render || nextState.renderProps !== this.state.renderProps;\n  };\n  _proto.render = function render() {\n    var _this$state3 = this.state,\n      renderProps = _this$state3.renderProps,\n      relayContext = _this$state3.relayContext;\n    // Note that the root fragment results in `renderProps.props` is already\n    // frozen by the store; this call is to freeze the renderProps object and\n    // error property if set.\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(renderProps);\n    }\n    return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n      value: relayContext\n    }, /*#__PURE__*/React.createElement(ReactRelayQueryRendererContext.Provider, {\n      value: queryRendererContext\n    }, this.props.render(renderProps)));\n  };\n  return ReactRelayQueryRenderer;\n}(React.Component);\nfunction getLoadingRenderProps() {\n  return {\n    error: null,\n    props: null,\n    // `props: null` indicates that the data is being fetched (i.e. loading)\n    retry: null\n  };\n}\nfunction getEmptyRenderProps() {\n  return {\n    error: null,\n    props: {},\n    // `props: {}` indicates no data available\n    retry: null\n  };\n}\nfunction getRenderProps(error, snapshot, queryFetcher, retryCallbacks) {\n  return {\n    error: error ? error : null,\n    props: snapshot ? snapshot.data : null,\n    retry: function retry(cacheConfigOverride) {\n      var syncSnapshot = queryFetcher.retry(cacheConfigOverride);\n      if (syncSnapshot && typeof retryCallbacks.handleDataChange === 'function') {\n        retryCallbacks.handleDataChange({\n          snapshot: syncSnapshot\n        });\n      } else if (error && typeof retryCallbacks.handleRetryAfterError === 'function') {\n        // If retrying after an error and no synchronous result available,\n        // reset the render props\n        retryCallbacks.handleRetryAfterError(error);\n      }\n    }\n  };\n}\nfunction getRequestCacheKey(request, variables) {\n  return JSON.stringify({\n    id: request.cacheID ? request.cacheID : request.id,\n    variables: variables\n  });\n}\nfunction resetQueryStateForUpdate(props, prevState) {\n  var query = props.query;\n  var prevSelectionReferences = prevState.queryFetcher.getSelectionReferences();\n  prevState.queryFetcher.disposeRequest();\n  var queryFetcher;\n  if (query) {\n    var request = getRequest(query);\n    var requestCacheKey = getRequestCacheKey(request.params, props.variables);\n    queryFetcher = requestCache[requestCacheKey] ? requestCache[requestCacheKey].queryFetcher : new ReactRelayQueryFetcher(prevSelectionReferences);\n  } else {\n    queryFetcher = new ReactRelayQueryFetcher(prevSelectionReferences);\n  }\n  return (0, _objectSpread2[\"default\"])({\n    prevQuery: props.query,\n    prevPropsEnvironment: props.environment,\n    prevPropsVariables: props.variables,\n    queryFetcher: queryFetcher\n  }, fetchQueryAndComputeStateFromProps(props, queryFetcher, prevState.retryCallbacks\n  // passing no requestCacheKey will cause it to be recalculated internally\n  // and we want the updated requestCacheKey, since variables may have changed\n  ));\n}\n\nfunction fetchQueryAndComputeStateFromProps(props, queryFetcher, retryCallbacks, requestCacheKey) {\n  var environment = props.environment,\n    query = props.query,\n    variables = props.variables,\n    cacheConfig = props.cacheConfig;\n  var genericEnvironment = environment;\n  if (query) {\n    var request = getRequest(query);\n    var operation = createOperationDescriptor(request, variables, cacheConfig);\n    var relayContext = {\n      environment: genericEnvironment\n    };\n    if (typeof requestCacheKey === 'string' && requestCache[requestCacheKey]) {\n      // This same request is already in flight.\n\n      var snapshot = requestCache[requestCacheKey].snapshot;\n      if (snapshot) {\n        // Use the cached response\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getRenderProps(null, snapshot, queryFetcher, retryCallbacks),\n          snapshot: snapshot,\n          requestCacheKey: requestCacheKey\n        };\n      } else {\n        // Render loading state\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getLoadingRenderProps(),\n          snapshot: null,\n          requestCacheKey: requestCacheKey\n        };\n      }\n    }\n    try {\n      var storeSnapshot = queryFetcher.lookupInStore(genericEnvironment, operation, props.fetchPolicy);\n      var querySnapshot = queryFetcher.fetch({\n        environment: genericEnvironment,\n        onDataChange: null,\n        operation: operation\n      });\n\n      // Use network data first, since it may be fresher\n      var _snapshot = querySnapshot || storeSnapshot;\n\n      // cache the request to avoid duplicate requests\n      requestCacheKey = requestCacheKey || getRequestCacheKey(request.params, props.variables);\n      requestCache[requestCacheKey] = {\n        queryFetcher: queryFetcher,\n        snapshot: _snapshot\n      };\n      if (!_snapshot) {\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getLoadingRenderProps(),\n          snapshot: null,\n          requestCacheKey: requestCacheKey\n        };\n      }\n      return {\n        error: null,\n        relayContext: relayContext,\n        renderProps: getRenderProps(null, _snapshot, queryFetcher, retryCallbacks),\n        snapshot: _snapshot,\n        requestCacheKey: requestCacheKey\n      };\n    } catch (error) {\n      return {\n        error: error,\n        relayContext: relayContext,\n        renderProps: getRenderProps(error, null, queryFetcher, retryCallbacks),\n        snapshot: null,\n        requestCacheKey: requestCacheKey\n      };\n    }\n  } else {\n    queryFetcher.dispose();\n    var _relayContext = {\n      environment: genericEnvironment\n    };\n    return {\n      error: null,\n      relayContext: _relayContext,\n      renderProps: getEmptyRenderProps(),\n      requestCacheKey: null // if there is an error, don't cache request\n    };\n  }\n}\n\nmodule.exports = ReactRelayQueryRenderer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar React = require('react');\nmodule.exports = React.createContext({\n  rootIsQueryRenderer: false\n});","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _excluded = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar getRootVariablesForFragments = require('./getRootVariablesForFragments');\nvar _require = require('./ReactRelayContainerUtils'),\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  Observable = _require3.Observable,\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  createOperationDescriptor = _require3.createOperationDescriptor,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  getRequest = _require3.getRequest,\n  getVariablesFromObject = _require3.getVariablesFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Composes a React component class, returning a new class that intercepts\n * props, resolving them with the provided fragments and subscribing for\n * updates.\n */\nfunction createContainerWithFragments(Component, fragments, taggedNode) {\n  var _class;\n  var containerName = getContainerName(Component);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        var resolverFromThisUpdate = _this.state.resolver;\n        _this.setState(function (updatedState) {\n          return (\n            // If this event belongs to the current data source, update.\n            // Otherwise we should ignore it.\n            resolverFromThisUpdate === updatedState.resolver ? {\n              data: updatedState.resolver.resolve()\n            } : null\n          );\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_refetch\", function (refetchVariables, renderVariables, observerOrCallback, options) {\n        if (_this._isUnmounted) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayRefetchContainer: Unexpected call of `refetch` ' + 'on unmounted container `%s`. It looks like some instances ' + 'of your container still trying to refetch the data but they already ' + 'unmounted. Please make sure you clear all timers, intervals, async ' + 'calls, etc that may trigger `refetch`.', containerName) : void 0;\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        var _assertRelayContext = assertRelayContext(_this.props.__relayContext),\n          environment = _assertRelayContext.environment;\n        var rootVariables = getRootVariablesForFragments(fragments, _this.props);\n        var fetchVariables = typeof refetchVariables === 'function' ? refetchVariables(_this._getFragmentVariables()) : refetchVariables;\n        fetchVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, rootVariables), fetchVariables);\n        var fragmentVariables = renderVariables ? (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, fetchVariables), renderVariables) : fetchVariables;\n        var cacheConfig = options ? {\n          force: !!options.force\n        } : undefined;\n        if (cacheConfig != null && (options === null || options === void 0 ? void 0 : options.metadata) != null) {\n          cacheConfig.metadata = options === null || options === void 0 ? void 0 : options.metadata;\n        }\n        var observer = typeof observerOrCallback === 'function' ? {\n          // callback is not exectued on complete or unsubscribe\n          // for backward compatibility\n          next: observerOrCallback,\n          error: observerOrCallback\n        } : observerOrCallback || {};\n        var query = getRequest(taggedNode);\n        var operation = createOperationDescriptor(query, fetchVariables, cacheConfig);\n\n        // TODO: T26288752 find a better way\n        _this.state.localVariables = fetchVariables;\n\n        // Cancel any previously running refetch.\n        _this._refetchSubscription && _this._refetchSubscription.unsubscribe();\n\n        // Declare refetchSubscription before assigning it in .start(), since\n        // synchronous completion may call callbacks .subscribe() returns.\n        var refetchSubscription;\n        var storeSnapshot = _this._getQueryFetcher().lookupInStore(environment, operation, options === null || options === void 0 ? void 0 : options.fetchPolicy);\n        if (storeSnapshot != null) {\n          _this.state.resolver.setVariables(fragmentVariables, operation.request.node);\n          _this.setState(function (latestState) {\n            return {\n              data: latestState.resolver.resolve(),\n              contextForChildren: {\n                environment: _this.props.__relayContext.environment\n              }\n            };\n          }, function () {\n            observer.next && observer.next();\n            observer.complete && observer.complete();\n          });\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        _this._getQueryFetcher().execute({\n          environment: environment,\n          operation: operation,\n          // TODO (T26430099): Cleanup old references\n          preservePreviousReferences: true\n        }).mergeMap(function (response) {\n          _this.state.resolver.setVariables(fragmentVariables, operation.request.node);\n          return Observable.create(function (sink) {\n            return _this.setState(function (latestState) {\n              return {\n                data: latestState.resolver.resolve(),\n                contextForChildren: {\n                  environment: _this.props.__relayContext.environment\n                }\n              };\n            }, function () {\n              sink.next();\n              sink.complete();\n            });\n          });\n        })[\"finally\"](function () {\n          // Finalizing a refetch should only clear this._refetchSubscription\n          // if the finizing subscription is the most recent call.\n          if (_this._refetchSubscription === refetchSubscription) {\n            _this._refetchSubscription = null;\n          }\n        }).subscribe((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n          start: function start(subscription) {\n            _this._refetchSubscription = refetchSubscription = subscription;\n            observer.start && observer.start(subscription);\n          }\n        }));\n        return {\n          dispose: function dispose() {\n            refetchSubscription && refetchSubscription.unsubscribe();\n          }\n        };\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      _this._refetchSubscription = null;\n      // Do not provide a subscription/callback here.\n      // It is possible for this render to be interrupted or aborted,\n      // In which case the subscription would cause a leak.\n      // We will add the subscription in componentDidMount().\n      var resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      _this.state = {\n        data: resolver.resolve(),\n        localVariables: null,\n        prevProps: props,\n        prevPropsContext: relayContext,\n        contextForChildren: relayContext,\n        relayProp: getRelayProp(relayContext.environment, _this._refetch),\n        resolver: resolver\n      };\n      _this._isUnmounted = false;\n      return _this;\n    }\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._isUnmounted = false;\n      this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (this.state.resolver !== prevState.resolver) {\n        prevState.resolver.dispose();\n        this._queryFetcher && this._queryFetcher.dispose();\n        this._refetchSubscription && this._refetchSubscription.unsubscribe();\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      } else {\n        this._rerenderIfStoreHasChanged();\n      }\n    }\n\n    /**\n     * When new props are received, read data for the new props and add it to\n     * state. Props may be the same in which case previous data can be reused.\n     */;\n    _class.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$__rootIsQu;\n      // Any props change could impact the query, so we mirror props in state.\n      // This is an unusual pattern, but necessary for this container usecase.\n      var prevProps = prevState.prevProps;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, prevProps);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var prevRootVariables = getRootVariablesForFragments(fragments, prevProps);\n      var nextRootVariables = getRootVariablesForFragments(fragments, nextProps);\n      var resolver = prevState.resolver;\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (prevState.prevPropsContext.environment !== relayContext.environment || !areEqual(prevRootVariables, nextRootVariables) || !areEqual(prevIDs, nextIDs)) {\n        // Do not provide a subscription/callback here.\n        // It is possible for this render to be interrupted or aborted,\n        // In which case the subscription would cause a leak.\n        // We will add the subscription in componentDidUpdate().\n        resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        return {\n          data: resolver.resolve(),\n          localVariables: null,\n          prevProps: nextProps,\n          prevPropsContext: relayContext,\n          contextForChildren: relayContext,\n          relayProp: getRelayProp(relayContext.environment, prevState.relayProp.refetch),\n          resolver: resolver\n        };\n      } else if (!prevState.localVariables) {\n        resolver.setProps(nextProps);\n      }\n      var data = resolver.resolve();\n      if (data !== prevState.data) {\n        return {\n          data: data,\n          prevProps: nextProps\n        };\n      }\n      return null;\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._isUnmounted = true;\n      this.state.resolver.dispose();\n      this._queryFetcher && this._queryFetcher.dispose();\n      this._refetchSubscription && this._refetchSubscription.unsubscribe();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (this.state.prevPropsContext.environment !== nextState.prevPropsContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var _this$state = this.state,\n        data = _this$state.data,\n        resolver = _this$state.resolver;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var _this$state2 = this.state,\n        data = _this$state2.data,\n        resolver = _this$state2.resolver;\n      var maybeNewData = resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._getFragmentVariables = function _getFragmentVariables() {\n      return getVariablesFromObject(fragments, this.props);\n    };\n    _proto._getQueryFetcher = function _getQueryFetcher() {\n      if (!this._queryFetcher) {\n        this._queryFetcher = new ReactRelayQueryFetcher();\n      }\n      return this._queryFetcher;\n    };\n    // $FlowFixMe[missing-local-annot]\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        componentRef = _this$props.componentRef,\n        __relayContext = _this$props.__relayContext,\n        __rootIsQueryRenderer = _this$props.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      var _this$state3 = this.state,\n        relayProp = _this$state3.relayProp,\n        contextForChildren = _this$state3.contextForChildren;\n      return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n        value: contextForChildren\n      }, /*#__PURE__*/React.createElement(Component, (0, _extends2[\"default\"])({}, props, this.state.data, {\n        ref: componentRef,\n        relay: relayProp\n      })));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\nfunction getRelayProp(environment, refetch) {\n  return {\n    environment: environment,\n    refetch: refetch\n  };\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec, taggedNode) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, function (ComponentClass, fragments) {\n    return createContainerWithFragments(ComponentClass, fragments, taggedNode);\n  });\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar isRelayEnvironment = require('./isRelayEnvironment');\nvar invariant = require('invariant');\n\n/**\n * Asserts that the input is a matches the `RelayContext` type defined in\n * `RelayEnvironmentTypes` and returns it as that type.\n */\nfunction assertRelayContext(relay) {\n  !isRelayContext(relay) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayContext: Expected `context.relay` to be an object conforming to ' + 'the `RelayContext` interface, got `%s`.', relay) : invariant(false) : void 0;\n  return relay;\n}\n\n/**\n * Determine if the input is a plain object that matches the `RelayContext`\n * type defined in `RelayEnvironmentTypes`.\n */\nfunction isRelayContext(context) {\n  return typeof context === 'object' && context !== null && !Array.isArray(context) && isRelayEnvironment(context.environment);\n}\nmodule.exports = {\n  assertRelayContext: assertRelayContext,\n  isRelayContext: isRelayContext\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n\n/**\n * Fail fast if the user supplies invalid fragments as input.\n */\nfunction assertFragmentMap(componentName, fragmentSpec) {\n  !(fragmentSpec && typeof fragmentSpec === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'Expected a set of GraphQL fragments, got `%s` instead.', componentName, fragmentSpec) : invariant(false) : void 0;\n  for (var key in fragmentSpec) {\n    if (fragmentSpec.hasOwnProperty(key)) {\n      var fragment = fragmentSpec[key];\n      !(fragment && (typeof fragment === 'object' || typeof fragment === 'function')) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'The value of fragment `%s` was expected to be a fragment, got `%s` instead.', componentName, key, fragment) : invariant(false) : void 0;\n    }\n  }\n}\nmodule.exports = assertFragmentMap;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar assertFragmentMap = require('./assertFragmentMap');\nvar _require = require('./ReactRelayContainerUtils'),\n  getComponentName = _require.getComponentName,\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment;\nvar useContext = React.useContext;\n/**\n * Helper to create the Relay HOCs with ref forwarding, setting the displayName\n * and reading the React context.\n */\nfunction buildReactRelayContainer(ComponentClass, fragmentSpec, createContainerWithFragments) {\n  // Sanity-check user-defined fragment input\n  var containerName = getContainerName(ComponentClass);\n  assertFragmentMap(getComponentName(ComponentClass), fragmentSpec);\n  var fragments = {};\n  for (var key in fragmentSpec) {\n    fragments[key] = getFragment(fragmentSpec[key]);\n  }\n  var Container = createContainerWithFragments(ComponentClass, fragments);\n  Container.displayName = containerName;\n  function forwardRef(props, ref) {\n    var _queryRendererContext;\n    var context = useContext(ReactRelayContext);\n    !(context != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`%s` tried to render a context that was not valid this means that ' + '`%s` was rendered outside of a query renderer.', containerName, containerName) : invariant(false) : void 0;\n    var queryRendererContext = useContext(ReactRelayQueryRendererContext);\n    return /*#__PURE__*/React.createElement(Container, (0, _extends2[\"default\"])({}, props, {\n      __relayContext: context,\n      __rootIsQueryRenderer: (_queryRendererContext = queryRendererContext === null || queryRendererContext === void 0 ? void 0 : queryRendererContext.rootIsQueryRenderer) !== null && _queryRendererContext !== void 0 ? _queryRendererContext : false,\n      componentRef: props.componentRef || ref\n    }));\n  }\n  forwardRef.displayName = containerName;\n  var ForwardContainer = React.forwardRef(forwardRef);\n  if (process.env.NODE_ENV !== \"production\") {\n    // Used by RelayModernTestUtils\n    ForwardContainer.__ComponentClass = ComponentClass;\n    ForwardContainer.displayName = containerName;\n  }\n\n  // $FlowFixMe[incompatible-return]\n  return ForwardContainer;\n}\nmodule.exports = buildReactRelayContainer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('relay-runtime'),\n  getSelector = _require.getSelector;\nfunction getRootVariablesForFragments(fragments, props) {\n  var rootVariables = {};\n  // NOTE: For extra safety, we make sure the rootVariables include the\n  // variables from all owners in this fragmentSpec, even though they\n  // should all point to the same owner\n  Object.keys(fragments).forEach(function (key) {\n    var _selector$selectors$, _selector$selectors$2, _selector$owner$varia;\n    var fragmentNode = fragments[key];\n    var fragmentRef = props[key];\n    var selector = getSelector(fragmentNode, fragmentRef);\n    var fragmentOwnerVariables = selector != null && selector.kind === 'PluralReaderSelector' ? (_selector$selectors$ = (_selector$selectors$2 = selector.selectors[0]) === null || _selector$selectors$2 === void 0 ? void 0 : _selector$selectors$2.owner.variables) !== null && _selector$selectors$ !== void 0 ? _selector$selectors$ : {} : (_selector$owner$varia = selector === null || selector === void 0 ? void 0 : selector.owner.variables) !== null && _selector$owner$varia !== void 0 ? _selector$owner$varia : {};\n    rootVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, rootVariables), fragmentOwnerVariables);\n  });\n  return rootVariables;\n}\nmodule.exports = getRootVariablesForFragments;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayFragmentContainer = require('./ReactRelayFragmentContainer');\nvar ReactRelayLocalQueryRenderer = require('./ReactRelayLocalQueryRenderer');\nvar ReactRelayPaginationContainer = require('./ReactRelayPaginationContainer');\nvar ReactRelayQueryRenderer = require('./ReactRelayQueryRenderer');\nvar ReactRelayRefetchContainer = require('./ReactRelayRefetchContainer');\nvar EntryPointContainer = require('./relay-hooks/EntryPointContainer.react');\nvar loadEntryPoint = require('./relay-hooks/loadEntryPoint');\nvar _require = require('./relay-hooks/loadQuery'),\n  loadQuery = _require.loadQuery;\nvar ProfilerContext = require('./relay-hooks/ProfilerContext');\nvar RelayEnvironmentProvider = require('./relay-hooks/RelayEnvironmentProvider');\nvar useClientQuery = require('./relay-hooks/useClientQuery');\nvar useEntryPointLoader = require('./relay-hooks/useEntryPointLoader');\nvar useFragment = require('./relay-hooks/useFragment');\nvar useLazyLoadQuery = require('./relay-hooks/useLazyLoadQuery');\nvar useMutation = require('./relay-hooks/useMutation');\nvar usePaginationFragment = require('./relay-hooks/usePaginationFragment');\nvar usePreloadedQuery = require('./relay-hooks/usePreloadedQuery');\nvar useQueryLoader = require('./relay-hooks/useQueryLoader');\nvar useRefetchableFragment = require('./relay-hooks/useRefetchableFragment');\nvar useRelayEnvironment = require('./relay-hooks/useRelayEnvironment');\nvar useSubscribeToInvalidationState = require('./relay-hooks/useSubscribeToInvalidationState');\nvar useSubscription = require('./relay-hooks/useSubscription');\nvar RelayRuntime = require('relay-runtime');\n/**\n * The public interface to react-relay.\n * Currently contains both Relay Hooks and legacy Container APIs.\n * Will eventually only export the interface from ./hooks.js.\n */\nmodule.exports = {\n  ConnectionHandler: RelayRuntime.ConnectionHandler,\n  QueryRenderer: ReactRelayQueryRenderer,\n  LocalQueryRenderer: ReactRelayLocalQueryRenderer,\n  MutationTypes: RelayRuntime.MutationTypes,\n  RangeOperations: RelayRuntime.RangeOperations,\n  ReactRelayContext: ReactRelayContext,\n  applyOptimisticMutation: RelayRuntime.applyOptimisticMutation,\n  commitLocalUpdate: RelayRuntime.commitLocalUpdate,\n  commitMutation: RelayRuntime.commitMutation,\n  createFragmentContainer: ReactRelayFragmentContainer.createContainer,\n  createPaginationContainer: ReactRelayPaginationContainer.createContainer,\n  createRefetchContainer: ReactRelayRefetchContainer.createContainer,\n  fetchQuery_DEPRECATED: RelayRuntime.fetchQuery_DEPRECATED,\n  graphql: RelayRuntime.graphql,\n  readInlineData: RelayRuntime.readInlineData,\n  requestSubscription: RelayRuntime.requestSubscription,\n  // Relay Hooks\n  EntryPointContainer: EntryPointContainer,\n  RelayEnvironmentProvider: RelayEnvironmentProvider,\n  ProfilerContext: ProfilerContext,\n  fetchQuery: RelayRuntime.fetchQuery,\n  loadQuery: loadQuery,\n  loadEntryPoint: loadEntryPoint,\n  useClientQuery: useClientQuery,\n  useFragment: useFragment,\n  useLazyLoadQuery: useLazyLoadQuery,\n  useEntryPointLoader: useEntryPointLoader,\n  useQueryLoader: useQueryLoader,\n  useMutation: useMutation,\n  usePaginationFragment: usePaginationFragment,\n  usePreloadedQuery: usePreloadedQuery,\n  useRefetchableFragment: useRefetchableFragment,\n  useRelayEnvironment: useRelayEnvironment,\n  useSubscribeToInvalidationState: useSubscribeToInvalidationState,\n  useSubscription: useSubscription\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayEnvironmentTypes`.\n */\nfunction isRelayEnvironment(environment) {\n  return typeof environment === 'object' && environment !== null &&\n  // TODO: add applyMutation/sendMutation once ready in both cores\n  typeof environment.check === 'function' && typeof environment.lookup === 'function' && typeof environment.retain === 'function' && typeof environment.execute === 'function' && typeof environment.subscribe === 'function';\n}\nmodule.exports = isRelayEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ProfilerContext = require('./ProfilerContext');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar _require = require('react'),\n  useContext = _require.useContext,\n  useEffect = _require.useEffect;\nvar warning = require(\"fbjs/lib/warning\");\nfunction EntryPointContainer(_ref) {\n  var entryPointReference = _ref.entryPointReference,\n    props = _ref.props;\n  process.env.NODE_ENV !== \"production\" ? warning(entryPointReference.isDisposed === false, '<EntryPointContainer>: Expected entryPointReference to not be disposed ' + 'yet. This is because disposing the entrypoint marks it for future garbage ' + 'collection, and as such may no longer be present in the Relay store. ' + 'In the future, this will become a hard error.') : void 0;\n  var getComponent = entryPointReference.getComponent,\n    queries = entryPointReference.queries,\n    entryPoints = entryPointReference.entryPoints,\n    extraProps = entryPointReference.extraProps,\n    rootModuleID = entryPointReference.rootModuleID;\n  var Component = getComponent();\n  var profilerContext = useContext(ProfilerContext);\n  var environment = useRelayEnvironment();\n  useEffect(function () {\n    environment.__log({\n      name: 'entrypoint.root.consume',\n      profilerContext: profilerContext,\n      rootModuleID: rootModuleID\n    });\n  }, [environment, profilerContext, rootModuleID]);\n  return /*#__PURE__*/React.createElement(Component, {\n    entryPoints: entryPoints,\n    extraProps: extraProps,\n    props: props,\n    queries: queries\n  });\n}\nmodule.exports = EntryPointContainer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar LRUCache = require('./LRUCache');\nvar _require = require('./QueryResource'),\n  getQueryResourceForEnvironment = _require.getQueryResourceForEnvironment;\nvar SuspenseResource = require('./SuspenseResource');\nvar invariant = require('invariant');\nvar _require2 = require('relay-runtime'),\n  _require2$__internal = _require2.__internal,\n  fetchQuery = _require2$__internal.fetchQuery,\n  getPromiseForActiveRequest = _require2$__internal.getPromiseForActiveRequest,\n  RelayFeatureFlags = _require2.RelayFeatureFlags,\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  getFragmentIdentifier = _require2.getFragmentIdentifier,\n  getPendingOperationsForFragment = _require2.getPendingOperationsForFragment,\n  getSelector = _require2.getSelector,\n  getVariablesFromFragment = _require2.getVariablesFromFragment,\n  handlePotentialSnapshotErrors = _require2.handlePotentialSnapshotErrors,\n  isPromise = _require2.isPromise,\n  recycleNodesInto = _require2.recycleNodesInto;\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\n// TODO: Fix to not rely on LRU. If the number of active fragments exceeds this\n// capacity, readSpec() will fail to find cached entries and break object\n// identity even if data hasn't changed.\nvar CACHE_CAPACITY = 1000000;\n\n// this is frozen so that users don't accidentally push data into the array\nvar CONSTANT_READONLY_EMPTY_ARRAY = Object.freeze([]);\nfunction isMissingData(snapshot) {\n  if (Array.isArray(snapshot)) {\n    return snapshot.some(function (s) {\n      return s.isMissingData;\n    });\n  }\n  return snapshot.isMissingData;\n}\nfunction hasMissingClientEdges(snapshot) {\n  var _snapshot$missingClie, _snapshot$missingClie2;\n  if (Array.isArray(snapshot)) {\n    return snapshot.some(function (s) {\n      var _s$missingClientEdges, _s$missingClientEdges2;\n      return ((_s$missingClientEdges = (_s$missingClientEdges2 = s.missingClientEdges) === null || _s$missingClientEdges2 === void 0 ? void 0 : _s$missingClientEdges2.length) !== null && _s$missingClientEdges !== void 0 ? _s$missingClientEdges : 0) > 0;\n    });\n  }\n  return ((_snapshot$missingClie = (_snapshot$missingClie2 = snapshot.missingClientEdges) === null || _snapshot$missingClie2 === void 0 ? void 0 : _snapshot$missingClie2.length) !== null && _snapshot$missingClie !== void 0 ? _snapshot$missingClie : 0) > 0;\n}\nfunction missingLiveResolverFields(snapshot) {\n  if (Array.isArray(snapshot)) {\n    return snapshot.map(function (s) {\n      return s.missingLiveResolverFields;\n    }).filter(Boolean).flat();\n  }\n  return snapshot.missingLiveResolverFields;\n}\nfunction singularOrPluralForEach(snapshot, f) {\n  if (Array.isArray(snapshot)) {\n    snapshot.forEach(f);\n  } else {\n    f(snapshot);\n  }\n}\nfunction getFragmentResult(cacheKey, snapshot, storeEpoch) {\n  if (Array.isArray(snapshot)) {\n    return {\n      cacheKey: cacheKey,\n      snapshot: snapshot,\n      data: snapshot.map(function (s) {\n        return s.data;\n      }),\n      isMissingData: isMissingData(snapshot),\n      storeEpoch: storeEpoch\n    };\n  }\n  return {\n    cacheKey: cacheKey,\n    snapshot: snapshot,\n    data: snapshot.data,\n    isMissingData: isMissingData(snapshot),\n    storeEpoch: storeEpoch\n  };\n}\n\n/**\n * The purpose of this cache is to allow information to be passed from an\n * initial read which suspends through to the commit that follows a subsequent\n * successful read. Specifically, the QueryResource result for the data fetch\n * is passed through so that that query can be retained on commit.\n */\nvar ClientEdgeQueryResultsCache = /*#__PURE__*/function () {\n  function ClientEdgeQueryResultsCache(environment) {\n    (0, _defineProperty2[\"default\"])(this, \"_cache\", new Map());\n    (0, _defineProperty2[\"default\"])(this, \"_retainCounts\", new Map());\n    this._environment = environment;\n  }\n  var _proto = ClientEdgeQueryResultsCache.prototype;\n  _proto.get = function get(fragmentIdentifier) {\n    var _this$_cache$get$, _this$_cache$get;\n    return (_this$_cache$get$ = (_this$_cache$get = this._cache.get(fragmentIdentifier)) === null || _this$_cache$get === void 0 ? void 0 : _this$_cache$get[0]) !== null && _this$_cache$get$ !== void 0 ? _this$_cache$get$ : undefined;\n  };\n  _proto.recordQueryResults = function recordQueryResults(fragmentIdentifier, value // may be mutated after being passed here\n  ) {\n    var _this = this;\n    var existing = this._cache.get(fragmentIdentifier);\n    if (!existing) {\n      var suspenseResource = new SuspenseResource(function () {\n        return _this._retain(fragmentIdentifier);\n      });\n      this._cache.set(fragmentIdentifier, [value, suspenseResource]);\n      suspenseResource.temporaryRetain(this._environment);\n    } else {\n      var existingResults = existing[0],\n        _suspenseResource = existing[1];\n      value.forEach(function (queryResult) {\n        existingResults.push(queryResult);\n      });\n      _suspenseResource.temporaryRetain(this._environment);\n    }\n  };\n  _proto._retain = function _retain(id) {\n    var _this2 = this;\n    var _this$_retainCounts$g;\n    var retainCount = ((_this$_retainCounts$g = this._retainCounts.get(id)) !== null && _this$_retainCounts$g !== void 0 ? _this$_retainCounts$g : 0) + 1;\n    this._retainCounts.set(id, retainCount);\n    return {\n      dispose: function dispose() {\n        var _this$_retainCounts$g2;\n        var newRetainCount = ((_this$_retainCounts$g2 = _this2._retainCounts.get(id)) !== null && _this$_retainCounts$g2 !== void 0 ? _this$_retainCounts$g2 : 0) - 1;\n        if (newRetainCount > 0) {\n          _this2._retainCounts.set(id, newRetainCount);\n        } else {\n          _this2._retainCounts[\"delete\"](id);\n          _this2._cache[\"delete\"](id);\n        }\n      }\n    };\n  };\n  return ClientEdgeQueryResultsCache;\n}();\nvar FragmentResourceImpl = /*#__PURE__*/function () {\n  function FragmentResourceImpl(environment) {\n    this._environment = environment;\n    this._cache = LRUCache.create(CACHE_CAPACITY);\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      this._clientEdgeQueryResultsCache = new ClientEdgeQueryResultsCache(environment);\n    }\n  }\n\n  /**\n   * This function should be called during a Component's render function,\n   * to read the data for a fragment, or suspend if the fragment is being\n   * fetched.\n   */\n  var _proto2 = FragmentResourceImpl.prototype;\n  _proto2.read = function read(fragmentNode, fragmentRef, componentDisplayName, fragmentKey) {\n    return this.readWithIdentifier(fragmentNode, fragmentRef, getFragmentIdentifier(fragmentNode, fragmentRef), componentDisplayName, fragmentKey);\n  }\n\n  /**\n   * Like `read`, but with a pre-computed fragmentIdentifier that should be\n   * equal to `getFragmentIdentifier(fragmentNode, fragmentRef)` from the\n   * arguments.\n   */;\n  _proto2.readWithIdentifier = function readWithIdentifier(fragmentNode, fragmentRef, fragmentIdentifier, componentDisplayName, fragmentKey) {\n    var _this3 = this;\n    var _fragmentNode$metadat, _fragmentNode$metadat2, _missingLiveResolverF2, _missingLiveResolverF3;\n    var environment = this._environment;\n\n    // If fragmentRef is null or undefined, pass it directly through.\n    // This is a convenience when consuming fragments via a HOC API, when the\n    // prop corresponding to the fragment ref might be passed as null.\n    if (fragmentRef == null) {\n      return {\n        cacheKey: fragmentIdentifier,\n        data: null,\n        isMissingData: false,\n        snapshot: null,\n        storeEpoch: 0\n      };\n    }\n    var storeEpoch = environment.getStore().getEpoch();\n\n    // If fragmentRef is plural, ensure that it is an array.\n    // If it's empty, return the empty array directly before doing any more work.\n    if ((fragmentNode === null || fragmentNode === void 0 ? void 0 : (_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) === true) {\n      !Array.isArray(fragmentRef) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected fragment pointer%s for fragment `%s` to be ' + 'an array, instead got `%s`. Remove `@relay(plural: true)` ' + 'from fragment `%s` to allow the prop to be an object.', fragmentKey != null ? \" for key `\".concat(fragmentKey, \"`\") : '', fragmentNode.name, typeof fragmentRef, fragmentNode.name) : invariant(false) : void 0;\n      if (fragmentRef.length === 0) {\n        return {\n          cacheKey: fragmentIdentifier,\n          data: CONSTANT_READONLY_EMPTY_ARRAY,\n          isMissingData: false,\n          snapshot: CONSTANT_READONLY_EMPTY_ARRAY,\n          storeEpoch: storeEpoch\n        };\n      }\n    }\n\n    // Now we actually attempt to read the fragment:\n\n    // 1. Check if there's a cached value for this fragment\n    var cachedValue = this._cache.get(fragmentIdentifier);\n    if (cachedValue != null) {\n      var _missingLiveResolverF;\n      if (cachedValue.kind === 'pending' && isPromise(cachedValue.promise)) {\n        environment.__log({\n          name: 'suspense.fragment',\n          data: cachedValue.result.data,\n          fragment: fragmentNode,\n          isRelayHooks: true,\n          isMissingData: cachedValue.result.isMissingData,\n          isPromiseCached: true,\n          pendingOperations: cachedValue.pendingOperations\n        });\n        throw cachedValue.promise;\n      }\n      if (cachedValue.kind === 'done' && cachedValue.result.snapshot && !((_missingLiveResolverF = missingLiveResolverFields(cachedValue.result.snapshot)) !== null && _missingLiveResolverF !== void 0 && _missingLiveResolverF.length)) {\n        this._throwOrLogErrorsInSnapshot(\n        // $FlowFixMe[incompatible-call]\n        cachedValue.result.snapshot);\n\n        // This cache gets populated directly whenever the store notifies us of\n        // an update. That mechanism does not check for missing data, or\n        // in-flight requests.\n        if (cachedValue.result.isMissingData) {\n          environment.__log({\n            name: 'fragmentresource.missing_data',\n            data: cachedValue.result.data,\n            fragment: fragmentNode,\n            isRelayHooks: true,\n            cached: true\n          });\n        }\n        return cachedValue.result;\n      }\n    }\n\n    // 2. If not, try reading the fragment from the Relay store.\n    // If the snapshot has data, return it and save it in cache\n    var fragmentSelector = getSelector(fragmentNode, fragmentRef);\n    !(fragmentSelector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to receive an object where `...%s` was spread, ' + 'but the fragment reference was not found`. This is most ' + 'likely the result of:\\n' + \"- Forgetting to spread `%s` in `%s`'s parent's fragment.\\n\" + '- Conditionally fetching `%s` but unconditionally passing %s prop ' + 'to `%s`. If the parent fragment only fetches the fragment conditionally ' + '- with e.g. `@include`, `@skip`, or inside a `... on SomeType { }` ' + 'spread  - then the fragment reference will not exist. ' + 'In this case, pass `null` if the conditions for evaluating the ' + 'fragment are not met (e.g. if the `@include(if)` value is false.)', fragmentNode.name, fragmentNode.name, componentDisplayName, fragmentNode.name, fragmentKey == null ? 'a fragment reference' : \"the `\".concat(fragmentKey, \"`\"), componentDisplayName) : invariant(false) : void 0;\n    var snapshot = fragmentSelector.kind === 'PluralReaderSelector' ? fragmentSelector.selectors.map(function (s) {\n      return environment.lookup(s);\n    }) : environment.lookup(fragmentSelector);\n    var fragmentResult = getFragmentResult(fragmentIdentifier, snapshot, storeEpoch);\n    if (!fragmentResult.isMissingData) {\n      this._throwOrLogErrorsInSnapshot(snapshot);\n      this._cache.set(fragmentIdentifier, {\n        kind: 'done',\n        result: fragmentResult\n      });\n      return fragmentResult;\n    }\n\n    // 3. If we don't have data in the store, there's two cases where we should\n    // suspend to await the data: First if any client edges were traversed where\n    // the destination record was missing data; in that case we initiate a query\n    // here to fetch the missing data. Second, there may already be a request\n    // in flight for the fragment's parent query, or for another operation that\n    //  may affect the parent's query data, such as a mutation or subscription.\n    // For any of these cases we can get a promise, which we will cache and\n    // suspend on.\n\n    // First, initiate a query for any client edges that were missing data:\n    var clientEdgeRequests = null;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && ((_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.hasClientEdges) === true && hasMissingClientEdges(snapshot)) {\n      clientEdgeRequests = [];\n      var queryResource = getQueryResourceForEnvironment(this._environment);\n      var queryResults = [];\n      singularOrPluralForEach(snapshot, function (snap) {\n        var _snap$missingClientEd;\n        (_snap$missingClientEd = snap.missingClientEdges) === null || _snap$missingClientEd === void 0 ? void 0 : _snap$missingClientEd.forEach(function (_ref) {\n          var _clientEdgeRequests;\n          var request = _ref.request,\n            clientEdgeDestinationID = _ref.clientEdgeDestinationID;\n          var _this3$_performClient = _this3._performClientEdgeQuery(queryResource, fragmentNode, fragmentRef, request, clientEdgeDestinationID),\n            queryResult = _this3$_performClient.queryResult,\n            requestDescriptor = _this3$_performClient.requestDescriptor;\n          queryResults.push(queryResult);\n          (_clientEdgeRequests = clientEdgeRequests) === null || _clientEdgeRequests === void 0 ? void 0 : _clientEdgeRequests.push(requestDescriptor);\n        });\n      });\n      // Store the query so that it can be retained when our own fragment is\n      // subscribed to. This merges with any existing query results:\n      !(this._clientEdgeQueryResultsCache != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client edge query result cache should exist when ENABLE_CLIENT_EDGES is on.') : invariant(false) : void 0;\n      this._clientEdgeQueryResultsCache.recordQueryResults(fragmentIdentifier, queryResults);\n    }\n    var clientEdgePromises = [];\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && clientEdgeRequests) {\n      clientEdgePromises = clientEdgeRequests.map(function (request) {\n        return getPromiseForActiveRequest(_this3._environment, request);\n      }).filter(Boolean);\n    }\n\n    // Finally look for operations in flight for our parent query:\n    var fragmentOwner = fragmentSelector.kind === 'PluralReaderSelector' ? fragmentSelector.selectors[0].owner : fragmentSelector.owner;\n    var parentQueryPromiseResult = this._getAndSavePromiseForFragmentRequestInFlight(fragmentIdentifier, fragmentNode, fragmentOwner, fragmentResult);\n    var parentQueryPromiseResultPromise = parentQueryPromiseResult === null || parentQueryPromiseResult === void 0 ? void 0 : parentQueryPromiseResult.promise; // for refinement\n    var missingResolverFieldPromises = (_missingLiveResolverF2 = (_missingLiveResolverF3 = missingLiveResolverFields(snapshot)) === null || _missingLiveResolverF3 === void 0 ? void 0 : _missingLiveResolverF3.map(function (_ref2) {\n      var liveStateID = _ref2.liveStateID;\n      var store = environment.getStore();\n\n      // $FlowFixMe[prop-missing] This is expected to be a LiveResolverStore\n      return store.getLiveResolverPromise(liveStateID);\n    })) !== null && _missingLiveResolverF2 !== void 0 ? _missingLiveResolverF2 : [];\n    if (clientEdgePromises.length || missingResolverFieldPromises.length || isPromise(parentQueryPromiseResultPromise)) {\n      var _parentQueryPromiseRe, _clientEdgeRequests2;\n      environment.__log({\n        name: 'suspense.fragment',\n        data: fragmentResult.data,\n        fragment: fragmentNode,\n        isRelayHooks: true,\n        isPromiseCached: false,\n        isMissingData: fragmentResult.isMissingData,\n        // TODO! Attach information here about missing live resolver fields\n        pendingOperations: [].concat((0, _toConsumableArray2[\"default\"])((_parentQueryPromiseRe = parentQueryPromiseResult === null || parentQueryPromiseResult === void 0 ? void 0 : parentQueryPromiseResult.pendingOperations) !== null && _parentQueryPromiseRe !== void 0 ? _parentQueryPromiseRe : []), (0, _toConsumableArray2[\"default\"])((_clientEdgeRequests2 = clientEdgeRequests) !== null && _clientEdgeRequests2 !== void 0 ? _clientEdgeRequests2 : []))\n      });\n      var promises = [];\n      if (clientEdgePromises.length > 0) {\n        promises = promises.concat(clientEdgePromises);\n      }\n      if (missingResolverFieldPromises.length > 0) {\n        promises = promises.concat(missingResolverFieldPromises);\n      }\n      if (promises.length > 0) {\n        if (parentQueryPromiseResultPromise) {\n          promises.push(parentQueryPromiseResultPromise);\n        }\n        throw Promise.all(promises);\n      }\n\n      // Note: we are re-throwing the `parentQueryPromiseResultPromise` here,\n      // because some of our suspense-related code is relying on the instance equality\n      // of thrown promises. See FragmentResource-test.js\n      if (parentQueryPromiseResultPromise) {\n        throw parentQueryPromiseResultPromise;\n      }\n    }\n    this._throwOrLogErrorsInSnapshot(snapshot);\n\n    // At this point, there's nothing we can do. We don't have all the expected\n    // data, but there's no indication the missing data will be fulfilled. So we\n    // choose to return potentially non-typesafe data. The data returned here\n    // might not match the generated types for this fragment/operation.\n    environment.__log({\n      name: 'fragmentresource.missing_data',\n      data: fragmentResult.data,\n      fragment: fragmentNode,\n      isRelayHooks: true,\n      cached: false\n    });\n    return getFragmentResult(fragmentIdentifier, snapshot, storeEpoch);\n  };\n  _proto2._performClientEdgeQuery = function _performClientEdgeQuery(queryResource, fragmentNode, fragmentRef, request, clientEdgeDestinationID) {\n    var originalVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n    var variables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, originalVariables), {}, {\n      id: clientEdgeDestinationID // TODO should be a reserved name\n    });\n\n    var operation = createOperationDescriptor(request, variables, {} //  TODO cacheConfig should probably inherent from parent operation\n    );\n\n    var fetchObservable = fetchQuery(this._environment, operation);\n    var queryResult = queryResource.prepare(operation, fetchObservable\n    // TODO should inherent render policy etc. from parent operation\n    );\n\n    return {\n      requestDescriptor: operation.request,\n      queryResult: queryResult\n    };\n  };\n  _proto2._throwOrLogErrorsInSnapshot = function _throwOrLogErrorsInSnapshot(snapshot) {\n    var _this4 = this;\n    if (Array.isArray(snapshot)) {\n      snapshot.forEach(function (s) {\n        handlePotentialSnapshotErrors(_this4._environment, s.missingRequiredFields, s.relayResolverErrors);\n      });\n    } else {\n      handlePotentialSnapshotErrors(this._environment, snapshot.missingRequiredFields, snapshot.relayResolverErrors);\n    }\n  };\n  _proto2.readSpec = function readSpec(fragmentNodes, fragmentRefs, componentDisplayName) {\n    var result = {};\n    for (var key in fragmentNodes) {\n      result[key] = this.read(fragmentNodes[key], fragmentRefs[key], componentDisplayName, key);\n    }\n    return result;\n  };\n  _proto2.subscribe = function subscribe(fragmentResult, callback) {\n    var _this5 = this;\n    var environment = this._environment;\n    var cacheKey = fragmentResult.cacheKey;\n    var renderedSnapshot = fragmentResult.snapshot;\n    if (!renderedSnapshot) {\n      return {\n        dispose: function dispose() {}\n      };\n    }\n\n    // 1. Check for any updates missed during render phase\n    // TODO(T44066760): More efficiently detect if we missed an update\n    var _this$checkMissedUpda = this.checkMissedUpdates(fragmentResult),\n      didMissUpdates = _this$checkMissedUpda[0],\n      currentSnapshot = _this$checkMissedUpda[1];\n\n    // 2. If an update was missed, notify the component so it updates with\n    // the latest data.\n    if (didMissUpdates) {\n      callback();\n    }\n\n    // 3. Establish subscriptions on the snapshot(s)\n    var disposables = [];\n    if (Array.isArray(renderedSnapshot)) {\n      !Array.isArray(currentSnapshot) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected snapshots to be plural. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n      currentSnapshot.forEach(function (snapshot, idx) {\n        disposables.push(environment.subscribe(snapshot, function (latestSnapshot) {\n          var storeEpoch = environment.getStore().getEpoch();\n          _this5._updatePluralSnapshot(cacheKey, currentSnapshot, latestSnapshot, idx, storeEpoch);\n          callback();\n        }));\n      });\n    } else {\n      !(currentSnapshot != null && !Array.isArray(currentSnapshot)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected snapshot to be singular. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n      disposables.push(environment.subscribe(currentSnapshot, function (latestSnapshot) {\n        var storeEpoch = environment.getStore().getEpoch();\n        _this5._cache.set(cacheKey, {\n          kind: 'done',\n          result: getFragmentResult(cacheKey, latestSnapshot, storeEpoch)\n        });\n        callback();\n      }));\n    }\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      var _this$_clientEdgeQuer, _this$_clientEdgeQuer2;\n      var clientEdgeQueryResults = (_this$_clientEdgeQuer = (_this$_clientEdgeQuer2 = this._clientEdgeQueryResultsCache) === null || _this$_clientEdgeQuer2 === void 0 ? void 0 : _this$_clientEdgeQuer2.get(cacheKey)) !== null && _this$_clientEdgeQuer !== void 0 ? _this$_clientEdgeQuer : undefined;\n      if (clientEdgeQueryResults !== null && clientEdgeQueryResults !== void 0 && clientEdgeQueryResults.length) {\n        var queryResource = getQueryResourceForEnvironment(this._environment);\n        clientEdgeQueryResults.forEach(function (queryResult) {\n          disposables.push(queryResource.retain(queryResult));\n        });\n      }\n    }\n    return {\n      dispose: function dispose() {\n        disposables.forEach(function (s) {\n          return s.dispose();\n        });\n        _this5._cache[\"delete\"](cacheKey);\n      }\n    };\n  };\n  _proto2.subscribeSpec = function subscribeSpec(fragmentResults, callback) {\n    var _this6 = this;\n    var disposables = Object.keys(fragmentResults).map(function (key) {\n      return _this6.subscribe(fragmentResults[key], callback);\n    });\n    return {\n      dispose: function dispose() {\n        disposables.forEach(function (disposable) {\n          disposable.dispose();\n        });\n      }\n    };\n  };\n  _proto2.checkMissedUpdates = function checkMissedUpdates(fragmentResult) {\n    var environment = this._environment;\n    var renderedSnapshot = fragmentResult.snapshot;\n    if (!renderedSnapshot) {\n      return [false, null];\n    }\n    var storeEpoch = null;\n    // Bail out if the store hasn't been written since last read\n    storeEpoch = environment.getStore().getEpoch();\n    if (fragmentResult.storeEpoch === storeEpoch) {\n      return [false, fragmentResult.snapshot];\n    }\n    var cacheKey = fragmentResult.cacheKey;\n    if (Array.isArray(renderedSnapshot)) {\n      var didMissUpdates = false;\n      var currentSnapshots = [];\n      renderedSnapshot.forEach(function (snapshot, idx) {\n        var currentSnapshot = environment.lookup(snapshot.selector);\n        var renderData = snapshot.data;\n        var currentData = currentSnapshot.data;\n        var updatedData = recycleNodesInto(renderData, currentData);\n        if (updatedData !== renderData) {\n          currentSnapshot = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, currentSnapshot), {}, {\n            data: updatedData\n          });\n          didMissUpdates = true;\n        }\n        currentSnapshots[idx] = currentSnapshot;\n      });\n      // Only update the cache when the data is changed to avoid\n      // returning different `data` instances\n      if (didMissUpdates) {\n        this._cache.set(cacheKey, {\n          kind: 'done',\n          result: getFragmentResult(cacheKey, currentSnapshots, storeEpoch)\n        });\n      }\n      return [didMissUpdates, currentSnapshots];\n    }\n    var currentSnapshot = environment.lookup(renderedSnapshot.selector);\n    var renderData = renderedSnapshot.data;\n    var currentData = currentSnapshot.data;\n    var updatedData = recycleNodesInto(renderData, currentData);\n    var updatedCurrentSnapshot = {\n      data: updatedData,\n      isMissingData: currentSnapshot.isMissingData,\n      missingClientEdges: currentSnapshot.missingClientEdges,\n      missingLiveResolverFields: currentSnapshot.missingLiveResolverFields,\n      seenRecords: currentSnapshot.seenRecords,\n      selector: currentSnapshot.selector,\n      missingRequiredFields: currentSnapshot.missingRequiredFields,\n      relayResolverErrors: currentSnapshot.relayResolverErrors\n    };\n    if (updatedData !== renderData) {\n      this._cache.set(cacheKey, {\n        kind: 'done',\n        result: getFragmentResult(cacheKey, updatedCurrentSnapshot, storeEpoch)\n      });\n    }\n    return [updatedData !== renderData, updatedCurrentSnapshot];\n  };\n  _proto2.checkMissedUpdatesSpec = function checkMissedUpdatesSpec(fragmentResults) {\n    var _this7 = this;\n    return Object.keys(fragmentResults).some(function (key) {\n      return _this7.checkMissedUpdates(fragmentResults[key])[0];\n    });\n  };\n  _proto2._getAndSavePromiseForFragmentRequestInFlight = function _getAndSavePromiseForFragmentRequestInFlight(cacheKey, fragmentNode, fragmentOwner, fragmentResult) {\n    var _this8 = this;\n    var pendingOperationsResult = getPendingOperationsForFragment(this._environment, fragmentNode, fragmentOwner);\n    if (pendingOperationsResult == null) {\n      return null;\n    }\n\n    // When the Promise for the request resolves, we need to make sure to\n    // update the cache with the latest data available in the store before\n    // resolving the Promise\n    var networkPromise = pendingOperationsResult.promise;\n    var pendingOperations = pendingOperationsResult.pendingOperations;\n    var promise = networkPromise.then(function () {\n      _this8._cache[\"delete\"](cacheKey);\n    })[\"catch\"](function (error) {\n      _this8._cache[\"delete\"](cacheKey);\n    });\n    // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n    promise.displayName = networkPromise.displayName;\n    this._cache.set(cacheKey, {\n      kind: 'pending',\n      pendingOperations: pendingOperations,\n      promise: promise,\n      result: fragmentResult\n    });\n    return {\n      promise: promise,\n      pendingOperations: pendingOperations\n    };\n  };\n  _proto2._updatePluralSnapshot = function _updatePluralSnapshot(cacheKey, baseSnapshots, latestSnapshot, idx, storeEpoch) {\n    var _currentFragmentResul;\n    var currentFragmentResult = this._cache.get(cacheKey);\n    if (isPromise(currentFragmentResult)) {\n      reportInvalidCachedData(latestSnapshot.selector.node.name);\n      return;\n    }\n    var currentSnapshot = currentFragmentResult === null || currentFragmentResult === void 0 ? void 0 : (_currentFragmentResul = currentFragmentResult.result) === null || _currentFragmentResul === void 0 ? void 0 : _currentFragmentResul.snapshot;\n    if (currentSnapshot && !Array.isArray(currentSnapshot)) {\n      reportInvalidCachedData(latestSnapshot.selector.node.name);\n      return;\n    }\n    var nextSnapshots = currentSnapshot ? (0, _toConsumableArray2[\"default\"])(currentSnapshot) : (0, _toConsumableArray2[\"default\"])(baseSnapshots);\n    nextSnapshots[idx] = latestSnapshot;\n    this._cache.set(cacheKey, {\n      kind: 'done',\n      result: getFragmentResult(cacheKey, nextSnapshots, storeEpoch)\n    });\n  };\n  return FragmentResourceImpl;\n}();\nfunction reportInvalidCachedData(nodeName) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to find cached data for plural fragment `%s` when ' + 'receiving a subscription. ' + \"If you're seeing this, this is likely a bug in Relay.\", nodeName) : invariant(false) : void 0;\n}\nfunction createFragmentResource(environment) {\n  return new FragmentResourceImpl(environment);\n}\nvar dataResources = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction getFragmentResourceForEnvironment(environment) {\n  var cached = dataResources.get(environment);\n  if (cached) {\n    return cached;\n  }\n  var newDataResource = createFragmentResource(environment);\n  dataResources.set(environment, newDataResource);\n  return newDataResource;\n}\nmodule.exports = {\n  createFragmentResource: createFragmentResource,\n  getFragmentResourceForEnvironment: getFragmentResourceForEnvironment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar warning = require(\"fbjs/lib/warning\");\nvar implementation = null;\nfunction inject(impl) {\n  process.env.NODE_ENV !== \"production\" ? warning(implementation !== null, 'Relay HooksImplementation was injected twice.') : void 0;\n  implementation = impl;\n}\nfunction get() {\n  return implementation;\n}\nmodule.exports = {\n  inject: inject,\n  get: get\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n/**\n * JS maps (both plain objects and Map) maintain key insertion\n * order, which means there is an easy way to simulate LRU behavior\n * that should also perform quite well:\n *\n * To insert a new value, first delete the key from the inner _map,\n * then _map.set(k, v). By deleting and reinserting, you ensure that the\n * map sees the key as the last inserted key.\n *\n * Get does the same: if the key is present, delete and reinsert it.\n */\nvar LRUCache = /*#__PURE__*/function () {\n  function LRUCache(capacity) {\n    this._capacity = capacity;\n    !(this._capacity > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LRUCache: Unable to create instance of cache with zero or negative capacity.') : invariant(false) : void 0;\n    this._map = new Map();\n  }\n  var _proto = LRUCache.prototype;\n  _proto.set = function set(key, value) {\n    this._map[\"delete\"](key);\n    this._map.set(key, value);\n    if (this._map.size > this._capacity) {\n      var firstKey = this._map.keys().next();\n      if (!firstKey.done) {\n        this._map[\"delete\"](firstKey.value);\n      }\n    }\n  };\n  _proto.get = function get(key) {\n    var value = this._map.get(key);\n    if (value != null) {\n      this._map[\"delete\"](key);\n      this._map.set(key, value);\n    }\n    return value;\n  };\n  _proto.has = function has(key) {\n    return this._map.has(key);\n  };\n  _proto[\"delete\"] = function _delete(key) {\n    this._map[\"delete\"](key);\n  };\n  _proto.size = function size() {\n    return this._map.size;\n  };\n  _proto.capacity = function capacity() {\n    return this._capacity - this._map.size;\n  };\n  _proto.clear = function clear() {\n    this._map.clear();\n  };\n  return LRUCache;\n}();\nfunction create(capacity) {\n  return new LRUCache(capacity);\n}\nmodule.exports = {\n  create: create\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n// This contextual profiler can be used to wrap a react sub-tree. It will bind\n// the RelayProfiler during the render phase of these components. Allows\n// collecting metrics for a specific part of your application.\n\n'use strict';\n\nvar React = require('react');\nvar ProfilerContext = React.createContext({\n  wrapPrepareQueryResource: function wrapPrepareQueryResource(cb) {\n    return cb();\n  }\n});\nmodule.exports = ProfilerContext;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar LRUCache = require('./LRUCache');\nvar SuspenseResource = require('./SuspenseResource');\nvar invariant = require('invariant');\nvar _require = require('relay-runtime'),\n  isPromise = _require.isPromise;\nvar warning = require(\"fbjs/lib/warning\");\nvar CACHE_CAPACITY = 1000;\nvar DEFAULT_FETCH_POLICY = 'store-or-network';\nvar DEFAULT_LIVE_FETCH_POLICY = 'store-and-network';\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nfunction operationIsLiveQuery(operation) {\n  return operation.request.node.params.metadata.live !== undefined;\n}\nfunction getQueryCacheIdentifier(environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker) {\n  var fetchPolicy = maybeFetchPolicy !== null && maybeFetchPolicy !== void 0 ? maybeFetchPolicy : operationIsLiveQuery(operation) ? DEFAULT_LIVE_FETCH_POLICY : DEFAULT_FETCH_POLICY;\n  var renderPolicy = maybeRenderPolicy !== null && maybeRenderPolicy !== void 0 ? maybeRenderPolicy : environment.UNSTABLE_getDefaultRenderPolicy();\n  var cacheIdentifier = \"\".concat(fetchPolicy, \"-\").concat(renderPolicy, \"-\").concat(operation.request.identifier);\n  if (cacheBreaker != null) {\n    return \"\".concat(cacheIdentifier, \"-\").concat(cacheBreaker);\n  }\n  return cacheIdentifier;\n}\nfunction getQueryResult(operation, cacheIdentifier) {\n  var rootFragmentRef = {\n    __id: operation.fragment.dataID,\n    __fragments: (0, _defineProperty2[\"default\"])({}, operation.fragment.node.name, operation.request.variables),\n    __fragmentOwner: operation.request\n  };\n  return {\n    cacheIdentifier: cacheIdentifier,\n    fragmentNode: operation.request.node.fragment,\n    fragmentRef: rootFragmentRef,\n    operation: operation\n  };\n}\nvar nextID = 200000;\nfunction createCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription, onDispose) {\n  var isLiveQuery = operationIsLiveQuery(operation);\n  var currentValue = value;\n  var currentNetworkSubscription = networkSubscription;\n  var suspenseResource = new SuspenseResource(function (environment) {\n    var retention = environment.retain(operation);\n    return {\n      dispose: function dispose() {\n        // Normally if this entry never commits, the request would've ended by the\n        // time this timeout expires and the temporary retain is released. However,\n        // we need to do this for live queries which remain open indefinitely.\n        if (isLiveQuery && currentNetworkSubscription != null) {\n          currentNetworkSubscription.unsubscribe();\n        }\n        retention.dispose();\n        onDispose(cacheEntry);\n      }\n    };\n  });\n  var cacheEntry = {\n    cacheIdentifier: cacheIdentifier,\n    id: nextID++,\n    processedPayloadsCount: 0,\n    operationAvailability: operationAvailability,\n    getValue: function getValue() {\n      return currentValue;\n    },\n    setValue: function setValue(val) {\n      currentValue = val;\n    },\n    setNetworkSubscription: function setNetworkSubscription(subscription) {\n      if (isLiveQuery && currentNetworkSubscription != null) {\n        currentNetworkSubscription.unsubscribe();\n      }\n      currentNetworkSubscription = subscription;\n    },\n    temporaryRetain: function temporaryRetain(environment) {\n      return suspenseResource.temporaryRetain(environment);\n    },\n    permanentRetain: function permanentRetain(environment) {\n      return suspenseResource.permanentRetain(environment);\n    },\n    releaseTemporaryRetain: function releaseTemporaryRetain() {\n      suspenseResource.releaseTemporaryRetain();\n    }\n  };\n  return cacheEntry;\n}\nvar QueryResourceImpl = /*#__PURE__*/function () {\n  function QueryResourceImpl(environment) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_clearCacheEntry\", function (cacheEntry) {\n      _this._cache[\"delete\"](cacheEntry.cacheIdentifier);\n    });\n    this._environment = environment;\n    this._cache = LRUCache.create(CACHE_CAPACITY);\n  }\n  var _proto = QueryResourceImpl.prototype;\n  _proto.prepare = function prepare(operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, cacheBreaker, profilerContext) {\n    var cacheIdentifier = getQueryCacheIdentifier(this._environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker);\n    return this.prepareWithIdentifier(cacheIdentifier, operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, profilerContext);\n  }\n\n  /**\n   * This function should be called during a Component's render function,\n   * to either read an existing cached value for the query, or fetch the query\n   * and suspend.\n   */;\n  _proto.prepareWithIdentifier = function prepareWithIdentifier(cacheIdentifier, operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, profilerContext) {\n    var environment = this._environment;\n    var fetchPolicy = maybeFetchPolicy !== null && maybeFetchPolicy !== void 0 ? maybeFetchPolicy : operationIsLiveQuery(operation) ? DEFAULT_LIVE_FETCH_POLICY : DEFAULT_FETCH_POLICY;\n    var renderPolicy = maybeRenderPolicy !== null && maybeRenderPolicy !== void 0 ? maybeRenderPolicy : environment.UNSTABLE_getDefaultRenderPolicy();\n\n    // 1. Check if there's a cached value for this operation, and reuse it if\n    // it's available\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    var temporaryRetainDisposable = null;\n    var entryWasCached = cacheEntry != null;\n    if (cacheEntry == null) {\n      // 2. If a cached value isn't available, try fetching the operation.\n      // _fetchAndSaveQuery will update the cache with either a Promise or\n      // an Error to throw, or a QueryResult to return.\n      cacheEntry = this._fetchAndSaveQuery(cacheIdentifier, operation, fetchObservable, fetchPolicy, renderPolicy, profilerContext, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n        unsubscribe: function unsubscribe(subscription) {\n          // 4. If the request is cancelled, make sure to dispose\n          // of the temporary retain; this will ensure that a promise\n          // doesn't remain unnecessarily cached until the temporary retain\n          // expires. Not clearing the temporary retain might cause the\n          // query to incorrectly re-suspend.\n          if (temporaryRetainDisposable != null) {\n            temporaryRetainDisposable.dispose();\n          }\n          var observerUnsubscribe = observer === null || observer === void 0 ? void 0 : observer.unsubscribe;\n          observerUnsubscribe && observerUnsubscribe(subscription);\n        }\n      }));\n    }\n\n    // 3. Temporarily retain here in render phase. When the component reading\n    // the operation is committed, we will transfer ownership of data retention\n    // to the component.\n    // In case the component never commits (mounts or updates) from this render,\n    // this data retention hold will auto-release itself after a timeout.\n    temporaryRetainDisposable = cacheEntry.temporaryRetain(environment);\n    var cachedValue = cacheEntry.getValue();\n    if (isPromise(cachedValue)) {\n      environment.__log({\n        name: 'suspense.query',\n        fetchPolicy: fetchPolicy,\n        isPromiseCached: entryWasCached,\n        operation: operation,\n        queryAvailability: cacheEntry.operationAvailability,\n        renderPolicy: renderPolicy\n      });\n      throw cachedValue;\n    }\n    if (cachedValue instanceof Error) {\n      throw cachedValue;\n    }\n    return cachedValue;\n  }\n\n  /**\n   * This function should be called during a component's commit phase\n   * (e.g. inside useEffect), in order to retain the operation in the Relay store\n   * and transfer ownership of the operation to the component lifecycle.\n   */;\n  _proto.retain = function retain(queryResult, profilerContext) {\n    var environment = this._environment;\n    var cacheIdentifier = queryResult.cacheIdentifier,\n      operation = queryResult.operation;\n    var cacheEntry = this._getOrCreateCacheEntry(cacheIdentifier, operation, null, queryResult, null);\n    var disposable = cacheEntry.permanentRetain(environment);\n    environment.__log({\n      name: 'queryresource.retain',\n      profilerContext: profilerContext,\n      resourceID: cacheEntry.id\n    });\n    return {\n      dispose: function dispose() {\n        disposable.dispose();\n      }\n    };\n  };\n  _proto.releaseTemporaryRetain = function releaseTemporaryRetain(queryResult) {\n    var cacheEntry = this._cache.get(queryResult.cacheIdentifier);\n    if (cacheEntry != null) {\n      cacheEntry.releaseTemporaryRetain();\n    }\n  };\n  _proto.TESTS_ONLY__getCacheEntry = function TESTS_ONLY__getCacheEntry(operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker) {\n    var environment = this._environment;\n    var cacheIdentifier = getQueryCacheIdentifier(environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker);\n    return this._cache.get(cacheIdentifier);\n  };\n  _proto._getOrCreateCacheEntry = function _getOrCreateCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription) {\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    if (cacheEntry == null) {\n      cacheEntry = createCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription, this._clearCacheEntry);\n      this._cache.set(cacheIdentifier, cacheEntry);\n    }\n    return cacheEntry;\n  };\n  _proto._fetchAndSaveQuery = function _fetchAndSaveQuery(cacheIdentifier, operation, fetchObservable, fetchPolicy, renderPolicy, profilerContext, observer) {\n    var _this2 = this;\n    var environment = this._environment;\n\n    // NOTE: Running `check` will write missing data to the store using any\n    // missing data handlers specified on the environment;\n    // We run it here first to make the handlers get a chance to populate\n    // missing data.\n    var queryAvailability = environment.check(operation);\n    var queryStatus = queryAvailability.status;\n    var hasFullQuery = queryStatus === 'available';\n    var canPartialRender = hasFullQuery || renderPolicy === 'partial' && queryStatus !== 'stale';\n    var shouldFetch;\n    var shouldAllowRender;\n    // Different definitions for Promise in our repos can cause this variable\n    // to cause errors when synced elsewhere\n    var resolveNetworkPromise = function resolveNetworkPromise() {};\n    switch (fetchPolicy) {\n      case 'store-only':\n        {\n          shouldFetch = false;\n          shouldAllowRender = true;\n          break;\n        }\n      case 'store-or-network':\n        {\n          shouldFetch = !hasFullQuery;\n          shouldAllowRender = canPartialRender;\n          break;\n        }\n      case 'store-and-network':\n        {\n          shouldFetch = true;\n          shouldAllowRender = canPartialRender;\n          break;\n        }\n      case 'network-only':\n      default:\n        {\n          shouldFetch = true;\n          shouldAllowRender = false;\n          break;\n        }\n    }\n\n    // NOTE: If this value is false, we will cache a promise for this\n    // query, which means we will suspend here at this query root.\n    // If it's true, we will cache the query resource and allow rendering to\n    // continue.\n    if (shouldAllowRender) {\n      var queryResult = getQueryResult(operation, cacheIdentifier);\n      var _cacheEntry = createCacheEntry(cacheIdentifier, operation, queryAvailability, queryResult, null, this._clearCacheEntry);\n      this._cache.set(cacheIdentifier, _cacheEntry);\n    }\n    if (shouldFetch) {\n      var _queryResult = getQueryResult(operation, cacheIdentifier);\n      var networkSubscription;\n      fetchObservable.subscribe({\n        start: function start(subscription) {\n          networkSubscription = subscription;\n          var cacheEntry = _this2._cache.get(cacheIdentifier);\n          if (cacheEntry) {\n            cacheEntry.setNetworkSubscription(networkSubscription);\n          }\n          var observerStart = observer === null || observer === void 0 ? void 0 : observer.start;\n          if (observerStart) {\n            var subscriptionWithConditionalCancelation = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, subscription), {}, {\n              unsubscribe: function unsubscribe() {\n                // Only live queries should have their network requests canceled.\n                if (operationIsLiveQuery(operation)) {\n                  subscription.unsubscribe();\n                }\n              }\n            });\n            observerStart(subscriptionWithConditionalCancelation);\n          }\n        },\n        next: function next() {\n          var cacheEntry = _this2._getOrCreateCacheEntry(cacheIdentifier, operation, queryAvailability, _queryResult, networkSubscription);\n          cacheEntry.processedPayloadsCount += 1;\n          cacheEntry.setValue(_queryResult);\n          resolveNetworkPromise();\n          var observerNext = observer === null || observer === void 0 ? void 0 : observer.next;\n          if (observerNext != null) {\n            var snapshot = environment.lookup(operation.fragment);\n            observerNext(snapshot);\n          }\n        },\n        error: function error(_error) {\n          var cacheEntry = _this2._getOrCreateCacheEntry(cacheIdentifier, operation, queryAvailability, _error, networkSubscription);\n\n          // If, this is the first thing we receive for the query,\n          // before any other payload handled is error, we will cache and\n          // re-throw that error later.\n\n          // We will ignore errors for any incremental payloads we receive.\n          if (cacheEntry.processedPayloadsCount === 0) {\n            cacheEntry.setValue(_error);\n          } else {\n            // TODO:T92030819 Remove this warning and actually throw the network error\n            // To complete this task we need to have a way of precisely tracking suspendable points\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'QueryResource: An incremental payload for query `%s` returned an error: `%s`.', operation.fragment.node.name, String(_error.message)) : void 0;\n          }\n          resolveNetworkPromise();\n          networkSubscription = null;\n          cacheEntry.setNetworkSubscription(null);\n          var observerError = observer === null || observer === void 0 ? void 0 : observer.error;\n          observerError && observerError(_error);\n        },\n        complete: function complete() {\n          resolveNetworkPromise();\n          networkSubscription = null;\n          var cacheEntry = _this2._cache.get(cacheIdentifier);\n          if (cacheEntry) {\n            cacheEntry.setNetworkSubscription(null);\n          }\n          var observerComplete = observer === null || observer === void 0 ? void 0 : observer.complete;\n          observerComplete && observerComplete();\n        },\n        unsubscribe: observer === null || observer === void 0 ? void 0 : observer.unsubscribe\n      });\n      var _cacheEntry2 = this._cache.get(cacheIdentifier);\n      if (!_cacheEntry2) {\n        var networkPromise = new Promise(function (resolve) {\n          resolveNetworkPromise = resolve;\n        });\n\n        // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n        networkPromise.displayName = 'Relay(' + operation.fragment.node.name + ')';\n        _cacheEntry2 = createCacheEntry(cacheIdentifier, operation, queryAvailability, networkPromise, networkSubscription, this._clearCacheEntry);\n        this._cache.set(cacheIdentifier, _cacheEntry2);\n      }\n    } else {\n      var observerComplete = observer === null || observer === void 0 ? void 0 : observer.complete;\n      observerComplete && observerComplete();\n    }\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    !(cacheEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to have cached a result when attempting to fetch query.' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n    environment.__log({\n      name: 'queryresource.fetch',\n      resourceID: cacheEntry.id,\n      operation: operation,\n      profilerContext: profilerContext,\n      fetchPolicy: fetchPolicy,\n      renderPolicy: renderPolicy,\n      queryAvailability: queryAvailability,\n      shouldFetch: shouldFetch\n    });\n    return cacheEntry;\n  };\n  return QueryResourceImpl;\n}();\nfunction createQueryResource(environment) {\n  return new QueryResourceImpl(environment);\n}\nvar dataResources = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction getQueryResourceForEnvironment(environment) {\n  var cached = dataResources.get(environment);\n  if (cached) {\n    return cached;\n  }\n  var newDataResource = createQueryResource(environment);\n  dataResources.set(environment, newDataResource);\n  return newDataResource;\n}\nmodule.exports = {\n  createQueryResource: createQueryResource,\n  getQueryResourceForEnvironment: getQueryResourceForEnvironment,\n  getQueryCacheIdentifier: getQueryCacheIdentifier\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./../ReactRelayContext');\nvar React = require('react');\nvar useMemo = React.useMemo;\nfunction RelayEnvironmentProvider(props) {\n  var children = props.children,\n    environment = props.environment,\n    getEnvironmentForActor = props.getEnvironmentForActor;\n  var context = useMemo(function () {\n    return {\n      environment: environment,\n      getEnvironmentForActor: getEnvironmentForActor\n    };\n  }, [environment, getEnvironmentForActor]);\n  return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n    value: context\n  }, children);\n}\nmodule.exports = RelayEnvironmentProvider;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar invariant = require('invariant');\nvar TEMPORARY_RETAIN_DURATION_MS = 5 * 60 * 1000;\n\n/**\n * Allows you to retain a resource as part of a component lifecycle accounting\n * for Suspense. You temporarily retain the resource during render, then\n * permanently retain it during commit and release it during unmount.\n */\nvar SuspenseResource = /*#__PURE__*/function () {\n  function SuspenseResource(retain) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_retainCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_retainDisposable\", null);\n    (0, _defineProperty2[\"default\"])(this, \"_releaseTemporaryRetain\", null);\n    this._retain = function (environment) {\n      _this._retainCount++;\n      if (_this._retainCount === 1) {\n        _this._retainDisposable = retain(environment);\n      }\n      return {\n        dispose: function dispose() {\n          _this._retainCount = Math.max(0, _this._retainCount - 1);\n          if (_this._retainCount === 0) {\n            !(_this._retainDisposable != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected disposable to release query to be defined.' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n            _this._retainDisposable.dispose();\n            _this._retainDisposable = null;\n          }\n        }\n      };\n    };\n  }\n  var _proto = SuspenseResource.prototype;\n  _proto.temporaryRetain = function temporaryRetain(environment) {\n    var _this2 = this;\n    var _this$_releaseTempora;\n    // If we're executing in a server environment, there's no need\n    // to create temporary retains, since the component will never commit.\n    if (environment.isServer()) {\n      return {\n        dispose: function dispose() {}\n      };\n    }\n\n    // temporaryRetain is called during the render phase. However,\n    // given that we can't tell if this render will eventually commit or not,\n    // we create a timer to autodispose of this retain in case the associated\n    // component never commits.\n    // If the component /does/ commit, permanentRetain will clear this timeout\n    // and permanently retain the data.\n    var retention = this._retain(environment);\n    var releaseQueryTimeout = null;\n    var releaseTemporaryRetain = function releaseTemporaryRetain() {\n      clearTimeout(releaseQueryTimeout);\n      releaseQueryTimeout = null;\n      _this2._releaseTemporaryRetain = null;\n      retention.dispose();\n    };\n    releaseQueryTimeout = setTimeout(releaseTemporaryRetain, TEMPORARY_RETAIN_DURATION_MS);\n\n    // NOTE: Since temporaryRetain can be called multiple times, we release\n    // the previous temporary retain after we re-establish a new one, since\n    // we only ever need a single temporary retain until the permanent retain is\n    // established.\n    // temporaryRetain may be called multiple times by React during the render\n    // phase, as well as multiple times by other query components that are\n    // rendering the same query/variables.\n    (_this$_releaseTempora = this._releaseTemporaryRetain) === null || _this$_releaseTempora === void 0 ? void 0 : _this$_releaseTempora.call(this);\n    this._releaseTemporaryRetain = releaseTemporaryRetain;\n    return {\n      dispose: function dispose() {\n        var _this$_releaseTempora2;\n        (_this$_releaseTempora2 = _this2._releaseTemporaryRetain) === null || _this$_releaseTempora2 === void 0 ? void 0 : _this$_releaseTempora2.call(_this2);\n      }\n    };\n  };\n  _proto.permanentRetain = function permanentRetain(environment) {\n    var disposable = this._retain(environment);\n    this.releaseTemporaryRetain();\n    return disposable;\n  };\n  _proto.releaseTemporaryRetain = function releaseTemporaryRetain() {\n    var _this$_releaseTempora3;\n    (_this$_releaseTempora3 = this._releaseTemporaryRetain) === null || _this$_releaseTempora3 === void 0 ? void 0 : _this$_releaseTempora3.call(this);\n    this._releaseTemporaryRetain = null;\n  };\n  _proto.getRetainCount = function getRetainCount() {\n    return this._retainCount;\n  };\n  return SuspenseResource;\n}();\nmodule.exports = SuspenseResource;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  loadQuery = _require.loadQuery;\nfunction loadEntryPoint(environmentProvider, entryPoint, entryPointParams) {\n  // Start loading the code for the entrypoint\n  var loadingPromise = null;\n  if (entryPoint.root.getModuleIfRequired() == null) {\n    loadingPromise = entryPoint.root.load();\n  }\n  var preloadProps = entryPoint.getPreloadProps(entryPointParams);\n  var queries = preloadProps.queries,\n    entryPoints = preloadProps.entryPoints,\n    extraProps = preloadProps.extraProps;\n  var preloadedQueries = {};\n  var preloadedEntryPoints = {};\n  if (queries != null) {\n    var queriesPropNames = Object.keys(queries);\n    queriesPropNames.forEach(function (queryPropName) {\n      var _queries$queryPropNam = queries[queryPropName],\n        environmentProviderOptions = _queries$queryPropNam.environmentProviderOptions,\n        options = _queries$queryPropNam.options,\n        parameters = _queries$queryPropNam.parameters,\n        variables = _queries$queryPropNam.variables;\n      var environment = environmentProvider.getEnvironment(environmentProviderOptions);\n\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      preloadedQueries[queryPropName] = loadQuery(environment, parameters, variables, {\n        fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n        networkCacheConfig: options === null || options === void 0 ? void 0 : options.networkCacheConfig,\n        __nameForWarning: 'loadEntryPoint'\n      }, environmentProviderOptions);\n    });\n  }\n  if (entryPoints != null) {\n    var entryPointPropNames = Object.keys(entryPoints);\n    entryPointPropNames.forEach(function (entryPointPropName) {\n      var entryPointDescription = entryPoints[entryPointPropName];\n      if (entryPointDescription == null) {\n        return;\n      }\n      var nestedEntryPoint = entryPointDescription.entryPoint,\n        nestedParams = entryPointDescription.entryPointParams;\n      preloadedEntryPoints[entryPointPropName] = loadEntryPoint(environmentProvider, nestedEntryPoint, nestedParams);\n    });\n  }\n  var isDisposed = false;\n  return {\n    dispose: function dispose() {\n      if (isDisposed) {\n        return;\n      }\n      if (preloadedQueries != null) {\n        Object.values(preloadedQueries).forEach(function (_ref) {\n          var innerDispose = _ref.dispose;\n          innerDispose();\n        });\n      }\n      if (preloadedEntryPoints != null) {\n        Object.values(preloadedEntryPoints).forEach(function (_ref2) {\n          var innerDispose = _ref2.dispose;\n          innerDispose();\n        });\n      }\n      isDisposed = true;\n    },\n    entryPoints: preloadedEntryPoints,\n    extraProps: extraProps !== null && extraProps !== void 0 ? extraProps : null,\n    getComponent: function getComponent() {\n      var componentModule = entryPoint.root.getModuleIfRequired();\n      if (componentModule == null) {\n        var _loadingPromise;\n        loadingPromise = (_loadingPromise = loadingPromise) !== null && _loadingPromise !== void 0 ? _loadingPromise : entryPoint.root.load();\n        throw loadingPromise;\n      }\n\n      // On certain platforms, getting an es6 module with a default export from a JSResource will return an object like\n      // {default: module}, so let's assume that if the \"component\" has a static property named \"default\"\n      // that it's actually an es6 module wrapper, so unwrap it. This won't work for React classes with a static property named \"default\", but\n      // that's probably a worthwhile trade-off.\n      var component =\n      // $FlowIgnore[prop-missing]\n      componentModule[\"default\"] != null ? componentModule[\"default\"] : componentModule;\n      // $FlowFixMe[incompatible-cast] - trust me Flow, its entryPoint component\n      return component;\n    },\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get isDisposed() {\n      return isDisposed;\n    },\n    queries: preloadedQueries,\n    rootModuleID: entryPoint.root.getModuleId()\n  };\n}\nmodule.exports = loadEntryPoint;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  fetchQueryDeduped = _require.__internal.fetchQueryDeduped,\n  Observable = _require.Observable,\n  PreloadableQueryRegistry = _require.PreloadableQueryRegistry,\n  RelayFeatureFlags = _require.RelayFeatureFlags,\n  ReplaySubject = _require.ReplaySubject,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  getRequest = _require.getRequest,\n  getRequestIdentifier = _require.getRequestIdentifier;\nvar warning = require(\"fbjs/lib/warning\");\nvar RenderDispatcher = null;\nvar fetchKey = 100001;\nfunction useTrackLoadQueryInRender() {\n  if (RenderDispatcher === null) {\n    var _React$__SECRET_INTER, _React$__SECRET_INTER2;\n    // Flow does not know of React internals (rightly so), but we need to\n    // ensure here that this function isn't called inside render.\n    RenderDispatcher = // $FlowFixMe[prop-missing]\n    (_React$__SECRET_INTER = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER === void 0 ? void 0 : (_React$__SECRET_INTER2 = _React$__SECRET_INTER.ReactCurrentDispatcher) === null || _React$__SECRET_INTER2 === void 0 ? void 0 : _React$__SECRET_INTER2.current;\n  }\n}\nfunction loadQuery(environment, preloadableRequest, variables, options, environmentProviderOptions) {\n  var _React$__SECRET_INTER3, _React$__SECRET_INTER4, _options$__nameForWar, _options$fetchPolicy;\n  // This code ensures that we don't call loadQuery during render.\n  var CurrentDispatcher = // $FlowFixMe[prop-missing]\n  (_React$__SECRET_INTER3 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER3 === void 0 ? void 0 : (_React$__SECRET_INTER4 = _React$__SECRET_INTER3.ReactCurrentDispatcher) === null || _React$__SECRET_INTER4 === void 0 ? void 0 : _React$__SECRET_INTER4.current;\n  process.env.NODE_ENV !== \"production\" ? warning(RenderDispatcher == null || CurrentDispatcher !== RenderDispatcher, 'Relay: `%s` should not be called inside a React render function.', (_options$__nameForWar = options === null || options === void 0 ? void 0 : options.__nameForWarning) !== null && _options$__nameForWar !== void 0 ? _options$__nameForWar : 'loadQuery') : void 0;\n\n  // Every time you call loadQuery, we will generate a new fetchKey.\n  // This will ensure that every query reference that is created and\n  // passed to usePreloadedQuery is independently evaluated,\n  // even if they are for the same query/variables.\n  // Specifically, we want to avoid a case where we try to refetch a\n  // query by calling loadQuery a second time, and have the Suspense\n  // cache in usePreloadedQuery reuse the cached result instead of\n  // re-evaluating the new query ref and triggering a refetch if\n  // necessary.\n  fetchKey++;\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'store-or-network';\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options === null || options === void 0 ? void 0 : options.networkCacheConfig), {}, {\n    force: true\n  });\n\n  // executeWithNetworkSource will retain and execute an operation\n  // against the Relay store, given an Observable that would provide\n  // the network events for the operation.\n  var retainReference;\n  var didExecuteNetworkSource = false;\n  var executeWithNetworkSource = function executeWithNetworkSource(operation, networkObservable) {\n    didExecuteNetworkSource = true;\n    return environment.executeWithSource({\n      operation: operation,\n      source: networkObservable\n    });\n  };\n\n  // N.B. For loadQuery, we unconventionally want to return an Observable\n  // that isn't lazily executed, meaning that we don't want to wait\n  // until the returned Observable is subscribed to to actually start\n  // fetching and executing an operation; i.e. we want to execute the\n  // operation eagerly, when loadQuery is called.\n  // For this reason, we use an intermediate executionSubject which\n  // allows us to capture the events that occur during the eager execution\n  // of the operation, and then replay them to the Observable we\n  // ultimately return.\n  var executionSubject = new ReplaySubject();\n  var returnedObservable = Observable.create(function (sink) {\n    return executionSubject.subscribe(sink);\n  });\n  var unsubscribeFromNetworkRequest;\n  var networkError = null;\n  // makeNetworkRequest will immediately start a raw network request if\n  // one isn't already in flight and return an Observable that when\n  // subscribed to will replay the network events that have occured so far,\n  // as well as subsequent events.\n  var didMakeNetworkRequest = false;\n  var makeNetworkRequest = function makeNetworkRequest(params) {\n    // N.B. this function is called synchronously or not at all\n    // didMakeNetworkRequest is safe to rely on in the returned value\n    // Even if the request gets deduped below, we still wan't to return an\n    // observable that provides the replayed network events for the query,\n    // so we set this to true before deduping, to guarantee that the\n    // `source` observable is returned.\n    didMakeNetworkRequest = true;\n    var observable;\n    var subject = new ReplaySubject();\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      // Here, we are calling fetchQueryDeduped at the network layer level,\n      // which ensures that only a single network request is active for a given\n      // (environment, identifier) pair.\n      // Since network requests can be started /before/ we have the query ast\n      // necessary to process the results, we need to dedupe the raw requests\n      // separately from deduping the operation execution; specifically,\n      // if `loadQuery` is called multiple times before the query ast is available,\n      // we still want the network request to be deduped.\n      // - If a duplicate active network request is found, it will return an\n      // Observable that replays the events of the already active request.\n      // - If no duplicate active network request is found, it will call the fetchFn\n      // to start the request, and return an Observable that will replay\n      // the events from the network request.\n      // We provide an extra key to the identifier to distinguish deduping\n      // of raw network requests vs deduping of operation executions.\n      var identifier = 'raw-network-request-' + getRequestIdentifier(params, variables);\n      observable = fetchQueryDeduped(environment, identifier, function () {\n        var network = environment.getNetwork();\n        return network.execute(params, variables, networkCacheConfig);\n      });\n    } else {\n      var network = environment.getNetwork();\n      observable = network.execute(params, variables, networkCacheConfig);\n    }\n    var _observable$subscribe = observable.subscribe({\n        error: function error(err) {\n          networkError = err;\n          subject.error(err);\n        },\n        next: function next(data) {\n          subject.next(data);\n        },\n        complete: function complete() {\n          subject.complete();\n        }\n      }),\n      unsubscribe = _observable$subscribe.unsubscribe;\n    unsubscribeFromNetworkRequest = unsubscribe;\n    return Observable.create(function (sink) {\n      var subjectSubscription = subject.subscribe(sink);\n      return function () {\n        subjectSubscription.unsubscribe();\n        unsubscribeFromNetworkRequest();\n      };\n    });\n  };\n  var unsubscribeFromExecution;\n  var executeDeduped = function executeDeduped(operation, fetchFn) {\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      // N.B. at this point, if we're calling execute with a query ast (OperationDescriptor),\n      // we are guaranteed to have started a network request. We set this to\n      // true here as well since `makeNetworkRequest` might get skipped in the case\n      // where the query ast is already available and the query executions get deduped.\n      // Even if the execution gets deduped below, we still wan't to return\n      // an observable that provides the replayed network events for the query,\n      // so we set this to true before deduping, to guarantee that the `source`\n      // observable is returned.\n      didMakeNetworkRequest = true;\n    }\n\n    // Here, we are calling fetchQueryDeduped, which ensures that only\n    // a single operation is active for a given (environment, identifier) pair,\n    // and also tracks the active state of the operation, which is necessary\n    // for our Suspense infra to later be able to suspend (or not) on\n    // active operations. Even though we already dedupe raw network requests,\n    // we also need to dedupe and keep track operation execution for our Suspense\n    // infra, and we also want to avoid processing responses more than once, for\n    // the cases where `loadQuery` might be called multiple times after the query ast\n    // is available.\n    // - If a duplicate active operation is found, it will return an\n    // Observable that replays the events of the already active operation.\n    // - If no duplicate active operation is found, it will call the fetchFn\n    // to execute the operation, and return an Observable that will provide\n    // the events for executing the operation.\n    var _fetchQueryDeduped$su = fetchQueryDeduped(environment, operation.request.identifier, fetchFn).subscribe({\n      error: function error(err) {\n        executionSubject.error(err);\n      },\n      next: function next(data) {\n        executionSubject.next(data);\n      },\n      complete: function complete() {\n        executionSubject.complete();\n      }\n    });\n    unsubscribeFromExecution = _fetchQueryDeduped$su.unsubscribe;\n  };\n  var checkAvailabilityAndExecute = function checkAvailabilityAndExecute(concreteRequest) {\n    var operation = createOperationDescriptor(concreteRequest, variables, networkCacheConfig);\n    retainReference = environment.retain(operation);\n    if (fetchPolicy === 'store-only') {\n      return;\n    }\n\n    // N.B. If the fetch policy allows fulfillment from the store but the\n    // environment already has the data for that operation cached in the store,\n    // then we do nothing.\n    var shouldFetch = fetchPolicy !== 'store-or-network' || environment.check(operation).status !== 'available';\n    if (shouldFetch) {\n      executeDeduped(operation, function () {\n        // N.B. Since we have the operation synchronously available here,\n        // we can immediately fetch and execute the operation.\n        var networkObservable = makeNetworkRequest(concreteRequest.params);\n        var executeObservable = executeWithNetworkSource(operation, networkObservable);\n        return executeObservable;\n      });\n    }\n  };\n  var params;\n  var cancelOnLoadCallback;\n  var queryId;\n  if (preloadableRequest.kind === 'PreloadableConcreteRequest') {\n    var preloadableConcreteRequest = preloadableRequest;\n    params = preloadableConcreteRequest.params;\n    var _params = params;\n    queryId = _params.id;\n    !(queryId !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: `loadQuery` requires that preloadable query `%s` has a persisted query id', params.name) : invariant(false) : void 0;\n    var _module = PreloadableQueryRegistry.get(queryId);\n    if (_module != null) {\n      checkAvailabilityAndExecute(_module);\n    } else {\n      // If the module isn't synchronously available, we launch the\n      // network request immediately if the fetchPolicy might produce\n      // a network fetch, regardless of the state of the store cache. We\n      // do this because we can't check if a query is cached without the\n      // ast, and we know that if we don't have the query ast\n      // available, then this query could've never been written to the\n      // store in the first place, so it couldn't have been cached.\n      var networkObservable = fetchPolicy === 'store-only' ? null : makeNetworkRequest(params);\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      var _PreloadableQueryRegi = PreloadableQueryRegistry.onLoad(queryId, function (preloadedModule) {\n        cancelOnLoadCallback();\n        var operation = createOperationDescriptor(preloadedModule, variables, networkCacheConfig);\n        retainReference = environment.retain(operation);\n        if (networkObservable != null) {\n          executeDeduped(operation, function () {\n            return executeWithNetworkSource(operation, networkObservable);\n          });\n        }\n      });\n      cancelOnLoadCallback = _PreloadableQueryRegi.dispose;\n    }\n  } else {\n    var graphQlTaggedNode = preloadableRequest;\n    var request = getRequest(graphQlTaggedNode);\n    params = request.params;\n    queryId = params.cacheID != null ? params.cacheID : params.id;\n    checkAvailabilityAndExecute(request);\n  }\n  var isDisposed = false;\n  var isReleased = false;\n  var isNetworkRequestCancelled = false;\n  var releaseQuery = function releaseQuery() {\n    if (isReleased) {\n      return;\n    }\n    retainReference && retainReference.dispose();\n    isReleased = true;\n  };\n  var cancelNetworkRequest = function cancelNetworkRequest() {\n    if (isNetworkRequestCancelled) {\n      return;\n    }\n    if (didExecuteNetworkSource) {\n      unsubscribeFromExecution && unsubscribeFromExecution();\n    } else {\n      unsubscribeFromNetworkRequest && unsubscribeFromNetworkRequest();\n    }\n    cancelOnLoadCallback && cancelOnLoadCallback();\n    isNetworkRequestCancelled = true;\n  };\n  return {\n    kind: 'PreloadedQuery',\n    environment: environment,\n    environmentProviderOptions: environmentProviderOptions,\n    dispose: function dispose() {\n      if (isDisposed) {\n        return;\n      }\n      releaseQuery();\n      cancelNetworkRequest();\n      isDisposed = true;\n    },\n    releaseQuery: releaseQuery,\n    cancelNetworkRequest: cancelNetworkRequest,\n    fetchKey: fetchKey,\n    id: queryId,\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get isDisposed() {\n      return isDisposed || isReleased;\n    },\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get networkError() {\n      return networkError;\n    },\n    name: params.name,\n    networkCacheConfig: networkCacheConfig,\n    fetchPolicy: fetchPolicy,\n    source: didMakeNetworkRequest ? returnedObservable : undefined,\n    variables: variables\n  };\n}\nmodule.exports = {\n  loadQuery: loadQuery,\n  useTrackLoadQueryInRender: useTrackLoadQueryInRender\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useLazyLoadQuery = require('./useLazyLoadQuery');\n\n/**\n * This hook can be used to render client-only queries.\n * These queries are consist of queries for client-only data,\n * schematized via local schema extensions and/or Relay resolvers.\n */\nfunction useClientQuery(gqlQuery, variables, options) {\n  // $FlowFixMe[incompatible-type] client queries can be used with useLazyLoadQuery, but only with `store-only` policy.\n  var query = gqlQuery;\n  return useLazyLoadQuery(query, variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options), {}, {\n    fetchPolicy: 'store-only'\n  }));\n}\nmodule.exports = useClientQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar loadEntryPoint = require('./loadEntryPoint');\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useIsMountedRef = require('./useIsMountedRef');\nvar _require2 = require('react'),\n  useCallback = _require2.useCallback,\n  useEffect = _require2.useEffect,\n  useRef = _require2.useRef,\n  useState = _require2.useState;\nvar initialNullEntryPointReferenceState = {\n  kind: 'NullEntryPointReference'\n};\nfunction useLoadEntryPoint(environmentProvider, entryPoint, options) {\n  var _options$TEST_ONLY__i, _options$TEST_ONLY__i2, _options$TEST_ONLY__i3, _options$TEST_ONLY__i4;\n  /**\n   * We want to always call `entryPointReference.dispose()` for every call to\n   * `setEntryPointReference(loadEntryPoint(...))` so that no leaks of data in Relay\n   * stores will occur.\n   *\n   * However, a call to `setState(newState)` is not always followed by a commit where\n   * this value is reflected in the state. Thus, we cannot reliably clean up each ref\n   * with `useEffect(() => () => entryPointReference.dispose(), [entryPointReference])`.\n   *\n   * Instead, we keep track of each call to `loadEntryPoint` in a ref.\n   * Relying on the fact that if a state change commits, no state changes that were\n   * initiated prior to the currently committing state change will ever subsequently\n   * commit, we can safely dispose of all preloaded entry point references\n   * associated with state changes initiated prior to the currently committing state\n   * change.\n   *\n   * Finally, when the hook unmounts, we also dispose of all remaining uncommitted\n   * entry point references.\n   */\n\n  useTrackLoadQueryInRender();\n  var initialEntryPointReferenceInternal = (_options$TEST_ONLY__i = options === null || options === void 0 ? void 0 : (_options$TEST_ONLY__i2 = options.TEST_ONLY__initialEntryPointData) === null || _options$TEST_ONLY__i2 === void 0 ? void 0 : _options$TEST_ONLY__i2.entryPointReference) !== null && _options$TEST_ONLY__i !== void 0 ? _options$TEST_ONLY__i : initialNullEntryPointReferenceState;\n  var initialEntryPointParamsInternal = (_options$TEST_ONLY__i3 = options === null || options === void 0 ? void 0 : (_options$TEST_ONLY__i4 = options.TEST_ONLY__initialEntryPointData) === null || _options$TEST_ONLY__i4 === void 0 ? void 0 : _options$TEST_ONLY__i4.entryPointParams) !== null && _options$TEST_ONLY__i3 !== void 0 ? _options$TEST_ONLY__i3 : null;\n  var isMountedRef = useIsMountedRef();\n  var undisposedEntryPointReferencesRef = useRef(new Set([initialEntryPointReferenceInternal]));\n  var _useState = useState(initialEntryPointReferenceInternal),\n    entryPointReference = _useState[0],\n    setEntryPointReference = _useState[1];\n  var _useState2 = useState(initialEntryPointParamsInternal),\n    entryPointParams = _useState2[0],\n    setEntryPointParams = _useState2[1];\n  var disposeEntryPoint = useCallback(function () {\n    if (isMountedRef.current) {\n      var nullEntryPointReference = {\n        kind: 'NullEntryPointReference'\n      };\n      undisposedEntryPointReferencesRef.current.add(nullEntryPointReference);\n      setEntryPointReference(nullEntryPointReference);\n    }\n  }, [setEntryPointReference, isMountedRef]);\n  var entryPointLoaderCallback = useCallback(function (params) {\n    if (isMountedRef.current) {\n      var updatedEntryPointReference = loadEntryPoint(environmentProvider, entryPoint, params);\n      undisposedEntryPointReferencesRef.current.add(updatedEntryPointReference);\n      setEntryPointReference(updatedEntryPointReference);\n      setEntryPointParams(params);\n    }\n  }, [environmentProvider, entryPoint, setEntryPointReference, isMountedRef]);\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current entryPointReference will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly leave our\n      // current entryPointReference disposed, we need to load the entryPoint again\n      // and force a re-render by calling entryPointLoaderCallback again,\n      // so that the entryPointReference's queries are correctly re-retained, and\n      // potentially refetched if necessary.\n      maybeHiddenOrFastRefresh.current = false;\n      if (entryPointReference.kind !== 'NullEntryPointReference' && entryPointParams != null) {\n        entryPointLoaderCallback(entryPointParams);\n      }\n      return;\n    }\n\n    // When a new entryPointReference is committed, we iterate over all\n    // entrypoint refs in undisposedEntryPointReferences and dispose all of\n    // the refs that aren't the currently committed one. This ensures\n    // that we don't leave any dangling entrypoint references for the\n    // case that loadEntryPoint is called multiple times before commit; when\n    // this happens, multiple state updates will be scheduled, but only one\n    // will commit, meaning that we need to keep track of and dispose any\n    // query references that don't end up committing.\n    // - We are relying on the fact that sets iterate in insertion order, and we\n    // can remove items from a set as we iterate over it (i.e. no iterator\n    // invalidation issues.) Thus, it is safe to loop through\n    // undisposedEntryPointReferences until we find entryPointReference, and\n    // remove and dispose all previous references.\n    // - We are guaranteed to find entryPointReference in the set, because if a\n    // state change results in a commit, no state changes initiated prior to that\n    // one will be committed, and we are disposing and removing references\n    // associated with commits that were initiated prior to the currently\n    // committing state change. (A useEffect callback is called during the commit\n    // phase.)\n    var undisposedEntryPointReferences = undisposedEntryPointReferencesRef.current;\n    if (isMountedRef.current) {\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(undisposedEntryPointReferences),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var undisposedEntryPointReference = _step.value;\n          if (undisposedEntryPointReference === entryPointReference) {\n            break;\n          }\n          undisposedEntryPointReferences[\"delete\"](undisposedEntryPointReference);\n          if (undisposedEntryPointReference.kind !== 'NullEntryPointReference') {\n            undisposedEntryPointReference.dispose();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, [entryPointReference, entryPointParams, entryPointLoaderCallback, isMountedRef]);\n  useEffect(function () {\n    return function disposeAllRemainingEntryPointReferences() {\n      // undisposedEntryPointReferences.current is never reassigned\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(undisposedEntryPointReferencesRef.current),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var unhandledStateChange = _step2.value;\n          if (unhandledStateChange.kind !== 'NullEntryPointReference') {\n            unhandledStateChange.dispose();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n  }, []);\n  return [entryPointReference.kind === 'NullEntryPointReference' ? null : entryPointReference, entryPointLoaderCallback, disposeEntryPoint];\n}\nmodule.exports = useLoadEntryPoint;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useEffect = _require.useEffect;\n\n/**\n * This hook returns a mutable React ref that holds the value of whether a\n * fetch request is in flight. The reason this is a mutable ref instead of\n * state is because we don't actually want to trigger an update when this\n * changes, but instead synchronously keep track of whether the network request\n * is in flight, for example in order to bail out of a request if one is\n * already in flight. If this was state, due to the nature of concurrent\n * updates, this value wouldn't be in sync with when the request is actually\n * in flight.\n * The additional functions returned by this Hook can be used to mutate\n * the ref.\n */\nfunction useFetchTrackingRef() {\n  var subscriptionRef = useUnsafeRef_DEPRECATED(null);\n  var isFetchingRef = useUnsafeRef_DEPRECATED(false);\n  var disposeFetch = useCallback(function () {\n    if (subscriptionRef.current != null) {\n      subscriptionRef.current.unsubscribe();\n      subscriptionRef.current = null;\n    }\n    isFetchingRef.current = false;\n  }, []);\n  var startFetch = useCallback(function (subscription) {\n    subscriptionRef.current = subscription;\n    isFetchingRef.current = true;\n  }, []);\n  var completeFetch = useCallback(function () {\n    subscriptionRef.current = null;\n    isFetchingRef.current = false;\n  }, []);\n\n  // Dipose of ongoing fetch on unmount\n  useEffect(function () {\n    return disposeFetch;\n  }, [disposeFetch]);\n  return {\n    isFetchingRef: isFetchingRef,\n    startFetch: startFetch,\n    disposeFetch: disposeFetch,\n    completeFetch: completeFetch\n  };\n}\nmodule.exports = useFetchTrackingRef;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar HooksImplementation = require('./HooksImplementation');\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useFragmentNode = require('./useFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require2 = require('react'),\n  useDebugValue = _require2.useDebugValue;\nvar _require3 = require('relay-runtime'),\n  getFragment = _require3.getFragment;\nfunction useFragment_LEGACY(fragment, key) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var fragmentNode = getFragment(fragment);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of useFragment()');\n  var _useFragmentNode = useFragmentNode(fragmentNode, key, 'useFragment()'),\n    data = _useFragmentNode.data;\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: data\n    });\n  }\n  return data;\n}\nfunction useFragment(fragment, key) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    // $FlowFixMe This is safe because impl.useFragment has the type of useFragment...\n    return impl.useFragment(fragment, key);\n    // (i.e. type declared above, but not the supertype used in this function definition)\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useFragment_LEGACY(fragment, key);\n  }\n}\nmodule.exports = useFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./FragmentResource'),\n  getFragmentResourceForEnvironment = _require.getFragmentResourceForEnvironment;\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar _require2 = require('react'),\n  useEffect = _require2.useEffect,\n  useState = _require2.useState;\nvar _require3 = require('relay-runtime'),\n  getFragmentIdentifier = _require3.getFragmentIdentifier;\nvar warning = require(\"fbjs/lib/warning\");\nfunction useFragmentNode(fragmentNode, fragmentRef, componentDisplayName) {\n  var environment = useRelayEnvironment();\n  var FragmentResource = getFragmentResourceForEnvironment(environment);\n  var isMountedRef = useUnsafeRef_DEPRECATED(false);\n  var _useState = useState(0),\n    forceUpdate = _useState[1];\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, fragmentRef);\n\n  // Read fragment data; this might suspend.\n  var fragmentResult = FragmentResource.readWithIdentifier(fragmentNode, fragmentRef, fragmentIdentifier, componentDisplayName);\n  var isListeningForUpdatesRef = useUnsafeRef_DEPRECATED(true);\n  function enableStoreUpdates() {\n    isListeningForUpdatesRef.current = true;\n    var didMissUpdates = FragmentResource.checkMissedUpdates(fragmentResult)[0];\n    if (didMissUpdates) {\n      handleDataUpdate();\n    }\n  }\n  function disableStoreUpdates() {\n    isListeningForUpdatesRef.current = false;\n  }\n  function handleDataUpdate() {\n    if (isMountedRef.current === false || isListeningForUpdatesRef.current === false) {\n      return;\n    }\n\n    // React bails out on noop state updates as an optimization.\n    // If we want to force an update via setState, we need to pass an value.\n    // The actual value can be arbitrary though, e.g. an incremented number.\n    forceUpdate(function (count) {\n      return count + 1;\n    });\n  }\n\n  // Establish Relay store subscriptions in the commit phase, only if\n  // rendering for the first time, or if we need to subscribe to new data\n  // If the fragment identifier changes, it means that the variables on the\n  // fragment owner changed, or the fragment ref points to different records.\n  // In this case, we need to resubscribe to the Relay store.\n  useEffect(function () {\n    isMountedRef.current = true;\n    var disposable = FragmentResource.subscribe(fragmentResult, handleDataUpdate);\n    return function () {\n      // When unmounting or resubscribing to new data, clean up current\n      // subscription. This will also make sure fragment data is no longer\n      // cached so that next time it its read, it will be freshly read from\n      // the Relay store\n      isMountedRef.current = false;\n      disposable.dispose();\n    };\n    // NOTE: We disable react-hooks-deps warning because environment and fragmentIdentifier\n    // is capturing all information about whether the effect should be re-ran.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [environment, fragmentIdentifier]);\n  if (process.env.NODE_ENV !== \"production\") {\n    if (fragmentRef != null && (fragmentResult.data === undefined || Array.isArray(fragmentResult.data) && fragmentResult.data.length > 0 && fragmentResult.data.every(function (data) {\n      return data === undefined;\n    }))) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected to have been able to read non-null data for ' + 'fragment `%s` declared in ' + '`%s`, since fragment reference was non-null. ' + \"Make sure that that `%s`'s parent isn't \" + 'holding on to and/or passing a fragment reference for data that ' + 'has been deleted.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n    }\n  }\n  return {\n    // $FlowFixMe[incompatible-return]\n    data: fragmentResult.data,\n    disableStoreUpdates: disableStoreUpdates,\n    enableStoreUpdates: enableStoreUpdates\n  };\n}\nmodule.exports = useFragmentNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('react'),\n  useEffect = _require.useEffect,\n  useRef = _require.useRef;\nfunction useIsMountedRef() {\n  var isMountedRef = useRef(true);\n  useEffect(function () {\n    isMountedRef.current = true;\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []);\n  return isMountedRef;\n}\nmodule.exports = useIsMountedRef;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  getObservableForActiveRequest = _require.__internal.getObservableForActiveRequest,\n  getSelector = _require.getSelector;\nvar useEffect = React.useEffect,\n  useState = React.useState,\n  useMemo = React.useMemo;\nfunction useIsOperationNodeActive(fragmentNode, fragmentRef) {\n  var environment = useRelayEnvironment();\n  var observable = useMemo(function () {\n    var selector = getSelector(fragmentNode, fragmentRef);\n    if (selector == null) {\n      return null;\n    }\n    !(selector.kind === 'SingularReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useIsOperationNodeActive: Plural fragments are not supported.') : invariant(false) : void 0;\n    return getObservableForActiveRequest(environment, selector.owner);\n  }, [environment, fragmentNode, fragmentRef]);\n  var _useState = useState(observable != null),\n    isActive = _useState[0],\n    setIsActive = _useState[1];\n  useEffect(function () {\n    var subscription;\n    setIsActive(observable != null);\n    if (observable != null) {\n      var onCompleteOrError = function onCompleteOrError() {\n        setIsActive(false);\n      };\n      subscription = observable.subscribe({\n        complete: onCompleteOrError,\n        error: onCompleteOrError\n      });\n    }\n    return function () {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [observable]);\n  return isActive;\n}\nmodule.exports = useIsOperationNodeActive;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useLazyLoadQueryNode = require('./useLazyLoadQueryNode');\nvar useMemoOperationDescriptor = require('./useMemoOperationDescriptor');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require2 = require('relay-runtime'),\n  fetchQuery = _require2.__internal.fetchQuery;\n\n// This separate type export is only needed as long as we are injecting\n// a separate hooks implementation in ./HooksImplementation -- it can\n// be removed after we stop doing that.\n\nfunction useLazyLoadQuery(gqlQuery, variables, options) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var environment = useRelayEnvironment();\n  var query = useMemoOperationDescriptor(gqlQuery, variables, options && options.networkCacheConfig ? options.networkCacheConfig : {\n    force: true\n  });\n  var data = useLazyLoadQueryNode({\n    componentDisplayName: 'useLazyLoadQuery()',\n    fetchKey: options === null || options === void 0 ? void 0 : options.fetchKey,\n    fetchObservable: fetchQuery(environment, query),\n    fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n    query: query,\n    renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n  });\n  return data;\n}\nmodule.exports = useLazyLoadQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ProfilerContext = require('./ProfilerContext');\nvar _require = require('./QueryResource'),\n  getQueryCacheIdentifier = _require.getQueryCacheIdentifier,\n  getQueryResourceForEnvironment = _require.getQueryResourceForEnvironment;\nvar useFetchTrackingRef = require('./useFetchTrackingRef');\nvar useFragmentNode = require('./useFragmentNode');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar useContext = React.useContext,\n  useEffect = React.useEffect,\n  useState = React.useState,\n  useRef = React.useRef;\nfunction useLazyLoadQueryNode(_ref) {\n  var query = _ref.query,\n    componentDisplayName = _ref.componentDisplayName,\n    fetchObservable = _ref.fetchObservable,\n    fetchPolicy = _ref.fetchPolicy,\n    fetchKey = _ref.fetchKey,\n    renderPolicy = _ref.renderPolicy;\n  var environment = useRelayEnvironment();\n  var profilerContext = useContext(ProfilerContext);\n  var QueryResource = getQueryResourceForEnvironment(environment);\n  var _useState = useState(0),\n    forceUpdateKey = _useState[0],\n    forceUpdate = _useState[1];\n  var _useFetchTrackingRef = useFetchTrackingRef(),\n    startFetch = _useFetchTrackingRef.startFetch,\n    completeFetch = _useFetchTrackingRef.completeFetch;\n  var cacheBreaker = \"\".concat(forceUpdateKey, \"-\").concat(fetchKey !== null && fetchKey !== void 0 ? fetchKey : '');\n  var cacheIdentifier = getQueryCacheIdentifier(environment, query, fetchPolicy, renderPolicy, cacheBreaker);\n  var preparedQueryResult = profilerContext.wrapPrepareQueryResource(function () {\n    return QueryResource.prepareWithIdentifier(cacheIdentifier, query, fetchObservable, fetchPolicy, renderPolicy, {\n      start: startFetch,\n      complete: completeFetch,\n      error: completeFetch\n    }, profilerContext);\n  });\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current cached resource will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly attempt to\n      // retain a cached query resource that was disposed, we need to force\n      // a re-render so that the cache entry for this query is re-intiliazed and\n      // and re-evaluated (and potentially cause a refetch).\n      maybeHiddenOrFastRefresh.current = false;\n      forceUpdate(function (n) {\n        return n + 1;\n      });\n      return;\n    }\n    var disposable = QueryResource.retain(preparedQueryResult, profilerContext);\n    return function () {\n      disposable.dispose();\n    };\n    // NOTE: We disable react-hooks-deps warning because the `environment`\n    // and `cacheIdentifier` identities are capturing all information about whether\n    // the effect should be re-executed and the query re-retained.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [environment, cacheIdentifier]);\n  useEffect(function () {\n    // Release any temporary retain that's not released. At this point, if the\n    // cacheIdentifier doesn't change, the query is still permanently retained,\n    // and the temporary retain is redundant.\n    QueryResource.releaseTemporaryRetain(preparedQueryResult);\n    // This effect is intended to run on every commit, thus no dependency\n  });\n\n  var fragmentNode = preparedQueryResult.fragmentNode,\n    fragmentRef = preparedQueryResult.fragmentRef;\n  var _useFragmentNode = useFragmentNode(fragmentNode, fragmentRef, componentDisplayName),\n    data = _useFragmentNode.data;\n  return data;\n}\nmodule.exports = useLazyLoadQueryNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useFetchTrackingRef = require('./useFetchTrackingRef');\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useIsOperationNodeActive = require('./useIsOperationNodeActive');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useEffect = _require.useEffect,\n  useState = _require.useState;\nvar _require2 = require('relay-runtime'),\n  fetchQuery = _require2.__internal.fetchQuery,\n  ConnectionInterface = _require2.ConnectionInterface,\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  getPaginationVariables = _require2.getPaginationVariables,\n  getSelector = _require2.getSelector,\n  getValueAtPath = _require2.getValueAtPath;\nvar warning = require(\"fbjs/lib/warning\");\nfunction useLoadMoreFunction(args) {\n  var direction = args.direction,\n    fragmentNode = args.fragmentNode,\n    fragmentRef = args.fragmentRef,\n    fragmentIdentifier = args.fragmentIdentifier,\n    fragmentData = args.fragmentData,\n    connectionPathInFragmentData = args.connectionPathInFragmentData,\n    paginationRequest = args.paginationRequest,\n    paginationMetadata = args.paginationMetadata,\n    componentDisplayName = args.componentDisplayName,\n    observer = args.observer,\n    onReset = args.onReset,\n    identifierField = args.identifierField;\n  var environment = useRelayEnvironment();\n  var _useFetchTrackingRef = useFetchTrackingRef(),\n    isFetchingRef = _useFetchTrackingRef.isFetchingRef,\n    startFetch = _useFetchTrackingRef.startFetch,\n    disposeFetch = _useFetchTrackingRef.disposeFetch,\n    completeFetch = _useFetchTrackingRef.completeFetch;\n  var identifierValue = identifierField != null && fragmentData != null && typeof fragmentData === 'object' ? fragmentData[identifierField] : null;\n  var isMountedRef = useIsMountedRef();\n  var _useState = useState(environment),\n    mirroredEnvironment = _useState[0],\n    setMirroredEnvironment = _useState[1];\n  var _useState2 = useState(fragmentIdentifier),\n    mirroredFragmentIdentifier = _useState2[0],\n    setMirroredFragmentIdentifier = _useState2[1];\n  var isParentQueryActive = useIsOperationNodeActive(fragmentNode, fragmentRef);\n  var shouldReset = environment !== mirroredEnvironment || fragmentIdentifier !== mirroredFragmentIdentifier;\n  if (shouldReset) {\n    disposeFetch();\n    onReset();\n    setMirroredEnvironment(environment);\n    setMirroredFragmentIdentifier(fragmentIdentifier);\n  }\n  var _getConnectionState = getConnectionState(direction, fragmentNode, fragmentData, connectionPathInFragmentData),\n    cursor = _getConnectionState.cursor,\n    hasMore = _getConnectionState.hasMore;\n\n  // Dispose of pagination requests in flight when unmounting\n  useEffect(function () {\n    return function () {\n      disposeFetch();\n    };\n  }, [disposeFetch]);\n  var loadMore = useCallback(function (count, options) {\n    // TODO(T41131846): Fetch/Caching policies for loadMore\n\n    var onComplete = options === null || options === void 0 ? void 0 : options.onComplete;\n    if (isMountedRef.current !== true) {\n      // Bail out and warn if we're trying to paginate after the component\n      // has unmounted\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected fetch on unmounted component for fragment ' + '`%s` in `%s`. It looks like some instances of your component are ' + 'still trying to fetch data but they already unmounted. ' + 'Please make sure you clear all timers, intervals, ' + 'async calls, etc that may trigger a fetch.', fragmentNode.name, componentDisplayName) : void 0;\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    var fragmentSelector = getSelector(fragmentNode, fragmentRef);\n    if (isFetchingRef.current === true || fragmentData == null || isParentQueryActive) {\n      if (fragmentSelector == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected fetch while using a null fragment ref ' + 'for fragment `%s` in `%s`. When fetching more items, we expect ' + \"initial fragment data to be non-null. Please make sure you're \" + 'passing a valid fragment ref to `%s` before paginating.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n      }\n      if (onComplete) {\n        onComplete(null);\n      }\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    !(fragmentSelector != null && fragmentSelector.kind !== 'PluralReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to be able to find a non-plural fragment owner for ' + \"fragment `%s` when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n    var parentVariables = fragmentSelector.owner.variables;\n    var fragmentVariables = fragmentSelector.variables;\n    var extraVariables = options === null || options === void 0 ? void 0 : options.UNSTABLE_extraVariables;\n    var baseVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, parentVariables), fragmentVariables);\n    var paginationVariables = getPaginationVariables(direction, count, cursor, baseVariables, (0, _objectSpread2[\"default\"])({}, extraVariables), paginationMetadata);\n\n    // If the query needs an identifier value ('id' or similar) and one\n    // was not explicitly provided, read it from the fragment data.\n    if (identifierField != null) {\n      // @refetchable fragments are guaranteed to have an `id` selection\n      // if the type is Node, implements Node, or is @fetchable. Double-check\n      // that there actually is a value at runtime.\n      if (typeof identifierValue !== 'string') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected result to have a string  ' + '`%s` in order to refetch, got `%s`.', identifierField, identifierValue) : void 0;\n      }\n      paginationVariables.id = identifierValue;\n    }\n    var paginationQuery = createOperationDescriptor(paginationRequest, paginationVariables, {\n      force: true\n    });\n    fetchQuery(environment, paginationQuery).subscribe((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n      start: function start(subscription) {\n        startFetch(subscription);\n        observer.start && observer.start(subscription);\n      },\n      complete: function complete() {\n        completeFetch();\n        observer.complete && observer.complete();\n        onComplete && onComplete(null);\n      },\n      error: function error(_error) {\n        completeFetch();\n        observer.error && observer.error(_error);\n        onComplete && onComplete(_error);\n      }\n    }));\n    return {\n      dispose: disposeFetch\n    };\n  },\n  // NOTE: We disable react-hooks-deps warning because all values\n  // inside paginationMetadata are static\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [environment, identifierValue, direction, cursor, startFetch, disposeFetch, completeFetch, isFetchingRef, isParentQueryActive, fragmentData, fragmentNode.name, fragmentRef, componentDisplayName]);\n  return [loadMore, hasMore, disposeFetch];\n}\nfunction getConnectionState(direction, fragmentNode, fragmentData, connectionPathInFragmentData) {\n  var _pageInfo$END_CURSOR, _pageInfo$START_CURSO;\n  var _ConnectionInterface$ = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$.EDGES,\n    PAGE_INFO = _ConnectionInterface$.PAGE_INFO,\n    HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE,\n    HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE,\n    END_CURSOR = _ConnectionInterface$.END_CURSOR,\n    START_CURSOR = _ConnectionInterface$.START_CURSOR;\n  var connection = getValueAtPath(fragmentData, connectionPathInFragmentData);\n  if (connection == null) {\n    return {\n      cursor: null,\n      hasMore: false\n    };\n  }\n  !(typeof connection === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have been `null`, or ' + 'a plain object with %s and %s properties. Instead got `%s`.', fragmentNode.name, EDGES, PAGE_INFO, connection) : invariant(false) : void 0;\n  var edges = connection[EDGES];\n  var pageInfo = connection[PAGE_INFO];\n  if (edges == null || pageInfo == null) {\n    return {\n      cursor: null,\n      hasMore: false\n    };\n  }\n  !Array.isArray(edges) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have a plural `%s` field. ' + 'Instead got `%s`.', fragmentNode.name, EDGES, edges) : invariant(false) : void 0;\n  !(typeof pageInfo === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have a `%s` field. ' + 'Instead got `%s`.', fragmentNode.name, PAGE_INFO, pageInfo) : invariant(false) : void 0;\n  var cursor = direction === 'forward' ? (_pageInfo$END_CURSOR = pageInfo[END_CURSOR]) !== null && _pageInfo$END_CURSOR !== void 0 ? _pageInfo$END_CURSOR : null : (_pageInfo$START_CURSO = pageInfo[START_CURSOR]) !== null && _pageInfo$START_CURSO !== void 0 ? _pageInfo$START_CURSO : null;\n  !(cursor === null || typeof cursor === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected page info for connection in fragment `%s` to have a ' + 'valid `%s`. Instead got `%s`.', fragmentNode.name, START_CURSOR, cursor) : invariant(false) : void 0;\n  var hasMore;\n  if (direction === 'forward') {\n    hasMore = cursor != null && pageInfo[HAS_NEXT_PAGE] === true;\n  } else {\n    hasMore = cursor != null && pageInfo[HAS_PREV_PAGE] === true;\n  }\n  return {\n    cursor: cursor,\n    hasMore: hasMore\n  };\n}\nmodule.exports = useLoadMoreFunction;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useMemoVariables = require('./useMemoVariables');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createOperationDescriptor = _require.createOperationDescriptor,\n  getRequest = _require.getRequest;\nvar useMemo = React.useMemo;\nfunction useMemoOperationDescriptor(gqlQuery, variables, cacheConfig) {\n  var memoVariables = useMemoVariables(variables);\n  var memoCacheConfig = useMemoVariables(cacheConfig || {});\n  return useMemo(function () {\n    return createOperationDescriptor(getRequest(gqlQuery), memoVariables, memoCacheConfig);\n  }, [gqlQuery, memoVariables, memoCacheConfig]);\n}\nmodule.exports = useMemoOperationDescriptor;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar _require = require('react'),\n  useState = _require.useState;\n\n/**\n * Memoizes the passed in `variables` object based on `areEqual` equality.\n * This is useful when a `variables` object is used as a value in a depencency\n * array as it might often be constructed during render.\n */\nfunction useMemoVariables(variables) {\n  var _useState = useState(variables),\n    mirroredVariables = _useState[0],\n    setMirroredVariables = _useState[1];\n  if (areEqual(variables, mirroredVariables)) {\n    return mirroredVariables;\n  } else {\n    setMirroredVariables(variables);\n    return variables;\n  }\n}\nmodule.exports = useMemoVariables;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  defaultCommitMutation = _require.commitMutation;\nvar useState = React.useState,\n  useEffect = React.useEffect,\n  useRef = React.useRef,\n  useCallback = React.useCallback;\nfunction useMutation(mutation) {\n  var commitMutationFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultCommitMutation;\n  var environment = useRelayEnvironment();\n  var isMountedRef = useIsMountedRef();\n  var environmentRef = useRef(environment);\n  var mutationRef = useRef(mutation);\n  var inFlightMutationsRef = useRef(new Set());\n  var _useState = useState(false),\n    isMutationInFlight = _useState[0],\n    setMutationInFlight = _useState[1];\n  var cleanup = useCallback(function (disposable) {\n    if (environmentRef.current === environment && mutationRef.current === mutation) {\n      inFlightMutationsRef.current[\"delete\"](disposable);\n      if (isMountedRef.current) {\n        setMutationInFlight(inFlightMutationsRef.current.size > 0);\n      }\n    }\n  }, [environment, isMountedRef, mutation]);\n  useEffect(function () {\n    if (environmentRef.current !== environment || mutationRef.current !== mutation) {\n      inFlightMutationsRef.current = new Set();\n      if (isMountedRef.current) {\n        setMutationInFlight(false);\n      }\n      environmentRef.current = environment;\n      mutationRef.current = mutation;\n    }\n  }, [environment, isMountedRef, mutation]);\n  var commit = useCallback(function (config) {\n    if (isMountedRef.current) {\n      setMutationInFlight(true);\n    }\n    var disposable = commitMutationFn(environment, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, config), {}, {\n      mutation: mutation,\n      onCompleted: function onCompleted(response, errors) {\n        var _config$onCompleted;\n        cleanup(disposable);\n        (_config$onCompleted = config.onCompleted) === null || _config$onCompleted === void 0 ? void 0 : _config$onCompleted.call(config, response, errors);\n      },\n      onError: function onError(error) {\n        var _config$onError;\n        cleanup(disposable);\n        (_config$onError = config.onError) === null || _config$onError === void 0 ? void 0 : _config$onError.call(config, error);\n      },\n      onUnsubscribe: function onUnsubscribe() {\n        var _config$onUnsubscribe;\n        cleanup(disposable);\n        (_config$onUnsubscribe = config.onUnsubscribe) === null || _config$onUnsubscribe === void 0 ? void 0 : _config$onUnsubscribe.call(config);\n      },\n      onNext: function onNext() {\n        var _config$onNext;\n        (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n      }\n    }));\n    inFlightMutationsRef.current.add(disposable);\n    return disposable;\n  }, [cleanup, commitMutationFn, environment, isMountedRef, mutation]);\n  return [commit, isMutationInFlight];\n}\nmodule.exports = useMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar HooksImplementation = require('./HooksImplementation');\nvar useLoadMoreFunction = require('./useLoadMoreFunction');\nvar useRefetchableFragmentNode = require('./useRefetchableFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useDebugValue = _require.useDebugValue,\n  useState = _require.useState;\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment,\n  getFragmentIdentifier = _require2.getFragmentIdentifier,\n  getPaginationMetadata = _require2.getPaginationMetadata;\n\n// This separate type export is only needed as long as we are injecting\n// a separate hooks implementation in ./HooksImplementation -- it can\n// be removed after we stop doing that.\n\nfunction usePaginationFragment_LEGACY(fragmentInput, parentFragmentRef) {\n  var fragmentNode = getFragment(fragmentInput);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of usePaginationFragment()');\n  var componentDisplayName = 'usePaginationFragment()';\n  var _getPaginationMetadat = getPaginationMetadata(fragmentNode, componentDisplayName),\n    connectionPathInFragmentData = _getPaginationMetadat.connectionPathInFragmentData,\n    paginationRequest = _getPaginationMetadat.paginationRequest,\n    paginationMetadata = _getPaginationMetadat.paginationMetadata,\n    identifierField = _getPaginationMetadat.identifierField;\n  var _useRefetchableFragme = useRefetchableFragmentNode(fragmentNode, parentFragmentRef, componentDisplayName),\n    fragmentData = _useRefetchableFragme.fragmentData,\n    fragmentRef = _useRefetchableFragme.fragmentRef,\n    refetch = _useRefetchableFragme.refetch;\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, fragmentRef);\n\n  // Backward pagination\n  var _useLoadMore = useLoadMore({\n      componentDisplayName: componentDisplayName,\n      connectionPathInFragmentData: connectionPathInFragmentData,\n      direction: 'backward',\n      fragmentData: fragmentData,\n      fragmentIdentifier: fragmentIdentifier,\n      fragmentNode: fragmentNode,\n      fragmentRef: fragmentRef,\n      identifierField: identifierField,\n      paginationMetadata: paginationMetadata,\n      paginationRequest: paginationRequest\n    }),\n    loadPrevious = _useLoadMore[0],\n    hasPrevious = _useLoadMore[1],\n    isLoadingPrevious = _useLoadMore[2],\n    disposeFetchPrevious = _useLoadMore[3];\n\n  // Forward pagination\n  var _useLoadMore2 = useLoadMore({\n      componentDisplayName: componentDisplayName,\n      connectionPathInFragmentData: connectionPathInFragmentData,\n      direction: 'forward',\n      fragmentData: fragmentData,\n      fragmentIdentifier: fragmentIdentifier,\n      fragmentNode: fragmentNode,\n      fragmentRef: fragmentRef,\n      identifierField: identifierField,\n      paginationMetadata: paginationMetadata,\n      paginationRequest: paginationRequest\n    }),\n    loadNext = _useLoadMore2[0],\n    hasNext = _useLoadMore2[1],\n    isLoadingNext = _useLoadMore2[2],\n    disposeFetchNext = _useLoadMore2[3];\n  var refetchPagination = useCallback(function (variables, options) {\n    disposeFetchNext();\n    disposeFetchPrevious();\n    return refetch(variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options), {}, {\n      __environment: undefined\n    }));\n  }, [disposeFetchNext, disposeFetchPrevious, refetch]);\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: fragmentData,\n      hasNext: hasNext,\n      isLoadingNext: isLoadingNext,\n      hasPrevious: hasPrevious,\n      isLoadingPrevious: isLoadingPrevious\n    });\n  }\n  return {\n    data: fragmentData,\n    loadNext: loadNext,\n    loadPrevious: loadPrevious,\n    hasNext: hasNext,\n    hasPrevious: hasPrevious,\n    isLoadingNext: isLoadingNext,\n    isLoadingPrevious: isLoadingPrevious,\n    refetch: refetchPagination\n  };\n}\nfunction useLoadMore(args) {\n  var _useState = useState(false),\n    isLoadingMore = _useState[0],\n    setIsLoadingMore = _useState[1];\n  var observer = {\n    start: function start() {\n      return setIsLoadingMore(true);\n    },\n    complete: function complete() {\n      return setIsLoadingMore(false);\n    },\n    error: function error() {\n      return setIsLoadingMore(false);\n    }\n  };\n  var handleReset = function handleReset() {\n    return setIsLoadingMore(false);\n  };\n  var _useLoadMoreFunction = useLoadMoreFunction((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, args), {}, {\n      observer: observer,\n      onReset: handleReset\n    })),\n    loadMore = _useLoadMoreFunction[0],\n    hasMore = _useLoadMoreFunction[1],\n    disposeFetch = _useLoadMoreFunction[2];\n  return [loadMore, hasMore, isLoadingMore, disposeFetch];\n}\nfunction usePaginationFragment(fragmentInput, parentFragmentRef) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    return impl.usePaginationFragment(fragmentInput, parentFragmentRef);\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return usePaginationFragment_LEGACY(fragmentInput, parentFragmentRef);\n  }\n}\nmodule.exports = usePaginationFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useLazyLoadQueryNode = require('./useLazyLoadQueryNode');\nvar useMemoOperationDescriptor = require('./useMemoOperationDescriptor');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require2 = require('react'),\n  useDebugValue = _require2.useDebugValue;\nvar _require3 = require('relay-runtime'),\n  _require3$__internal = _require3.__internal,\n  fetchQueryDeduped = _require3$__internal.fetchQueryDeduped,\n  fetchQuery = _require3$__internal.fetchQuery;\nvar warning = require(\"fbjs/lib/warning\");\nfunction usePreloadedQuery(gqlQuery, preloadedQuery, options) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var environment = useRelayEnvironment();\n  var fetchKey = preloadedQuery.fetchKey,\n    fetchPolicy = preloadedQuery.fetchPolicy,\n    source = preloadedQuery.source,\n    variables = preloadedQuery.variables,\n    networkCacheConfig = preloadedQuery.networkCacheConfig;\n  var operation = useMemoOperationDescriptor(gqlQuery, variables, networkCacheConfig);\n  var useLazyLoadQueryNodeParams;\n  if (preloadedQuery.kind === 'PreloadedQuery_DEPRECATED') {\n    !(operation.request.node.params.name === preloadedQuery.name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'usePreloadedQuery(): Expected data to be prefetched for query `%s`, ' + 'got prefetch results for query `%s`.', operation.request.node.params.name, preloadedQuery.name) : invariant(false) : void 0;\n    useLazyLoadQueryNodeParams = {\n      componentDisplayName: 'usePreloadedQuery()',\n      fetchKey: fetchKey,\n      fetchObservable: fetchQueryDeduped(environment, operation.request.identifier, function () {\n        if (environment === preloadedQuery.environment && source != null) {\n          return environment.executeWithSource({\n            operation: operation,\n            source: source\n          });\n        } else {\n          return environment.execute({\n            operation: operation\n          });\n        }\n      }),\n      fetchPolicy: fetchPolicy,\n      query: operation,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    };\n  } else {\n    process.env.NODE_ENV !== \"production\" ? warning(preloadedQuery.isDisposed === false, 'usePreloadedQuery(): Expected preloadedQuery to not be disposed yet. ' + 'This is because disposing the query marks it for future garbage ' + 'collection, and as such query results may no longer be present in the Relay ' + 'store. In the future, this will become a hard error.') : void 0;\n    var fallbackFetchObservable = fetchQuery(environment, operation);\n    var fetchObservable;\n    if (source != null && environment === preloadedQuery.environment) {\n      // If the source observable exists and the environments match, reuse\n      // the source observable.\n      // If the source observable happens to be empty, we need to fall back\n      // and re-execute and de-dupe the query (at render time).\n      fetchObservable = source.ifEmpty(fallbackFetchObservable);\n    } else if (environment !== preloadedQuery.environment) {\n      // If a call to loadQuery is made with a particular environment, and that\n      // preloaded query is passed to usePreloadedQuery in a different environment\n      // context, we cannot re-use the existing preloaded query.\n      // Instead, we need to fall back and re-execute and de-dupe the query with\n      // the new environment (at render time).\n      // TODO T68036756 track occurences of this warning and turn it into a hard error\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usePreloadedQuery(): usePreloadedQuery was passed a preloaded query ' + 'that was created with a different environment than the one that is currently ' + 'in context. In the future, this will become a hard error.') : void 0;\n      fetchObservable = fallbackFetchObservable;\n    } else {\n      // if (source == null)\n      // If the source observable does not exist, we need to\n      // fall back and re-execute and de-dupe the query (at render time).\n      fetchObservable = fallbackFetchObservable;\n    }\n    useLazyLoadQueryNodeParams = {\n      componentDisplayName: 'usePreloadedQuery()',\n      fetchObservable: fetchObservable,\n      fetchKey: fetchKey,\n      fetchPolicy: fetchPolicy,\n      query: operation,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    };\n  }\n  var data = useLazyLoadQueryNode(useLazyLoadQueryNodeParams);\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      query: preloadedQuery.name,\n      variables: preloadedQuery.variables,\n      data: data,\n      fetchKey: fetchKey,\n      fetchPolicy: fetchPolicy,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    });\n  }\n  return data;\n}\nmodule.exports = usePreloadedQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _require = require('./loadQuery'),\n  loadQuery = _require.loadQuery,\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require2 = require('react'),\n  useCallback = _require2.useCallback,\n  useEffect = _require2.useEffect,\n  useRef = _require2.useRef,\n  useState = _require2.useState;\nvar _require3 = require('relay-runtime'),\n  getRequest = _require3.getRequest;\nvar initialNullQueryReferenceState = {\n  kind: 'NullQueryReference'\n};\nfunction requestIsLiveQuery(preloadableRequest) {\n  if (preloadableRequest.kind === 'PreloadableConcreteRequest') {\n    return preloadableRequest.params.metadata.live !== undefined;\n  }\n  var request = getRequest(preloadableRequest);\n  return request.params.metadata.live !== undefined;\n}\nfunction useQueryLoader(preloadableRequest, initialQueryReference) {\n  /**\n   * We want to always call `queryReference.dispose()` for every call to\n   * `setQueryReference(loadQuery(...))` so that no leaks of data in Relay stores\n   * will occur.\n   *\n   * However, a call to `setState(newState)` is not always followed by a commit where\n   * this value is reflected in the state. Thus, we cannot reliably clean up each\n   * ref with `useEffect(() => () => queryReference.dispose(), [queryReference])`.\n   *\n   * Instead, we keep track of each call to `loadQuery` in a ref.\n   * Relying on the fact that if a state change commits, no state changes that were\n   * initiated prior to the currently committing state change will ever subsequently\n   * commit, we can safely dispose of all preloaded query references\n   * associated with state changes initiated prior to the currently committing state\n   * change.\n   *\n   * Finally, when the hook unmounts, we also dispose of all remaining uncommitted\n   * query references.\n   */\n\n  var initialQueryReferenceInternal = initialQueryReference !== null && initialQueryReference !== void 0 ? initialQueryReference : initialNullQueryReferenceState;\n  var environment = useRelayEnvironment();\n  useTrackLoadQueryInRender();\n  var isMountedRef = useIsMountedRef();\n  var undisposedQueryReferencesRef = useRef(new Set([initialQueryReferenceInternal]));\n  var _useState = useState(function () {\n      return initialQueryReferenceInternal;\n    }),\n    queryReference = _useState[0],\n    setQueryReference = _useState[1];\n  var _useState2 = useState(function () {\n      return initialQueryReferenceInternal;\n    }),\n    previousInitialQueryReference = _useState2[0],\n    setPreviousInitialQueryReference = _useState2[1];\n  if (initialQueryReferenceInternal !== previousInitialQueryReference) {\n    // Rendering the query reference makes it \"managed\" by this hook, so\n    // we start keeping track of it so we can dispose it when it is no longer\n    // necessary here\n    // TODO(T78446637): Handle disposal of managed query references in\n    // components that were never mounted after rendering\n    undisposedQueryReferencesRef.current.add(initialQueryReferenceInternal);\n    setPreviousInitialQueryReference(initialQueryReferenceInternal);\n    setQueryReference(initialQueryReferenceInternal);\n  }\n  var disposeQuery = useCallback(function () {\n    if (isMountedRef.current) {\n      undisposedQueryReferencesRef.current.add(initialNullQueryReferenceState);\n      setQueryReference(initialNullQueryReferenceState);\n    }\n  }, [isMountedRef]);\n  var queryLoaderCallback = useCallback(function (variables, options) {\n    var mergedOptions = options != null && options.hasOwnProperty('__environment') ? {\n      fetchPolicy: options.fetchPolicy,\n      networkCacheConfig: options.networkCacheConfig,\n      __nameForWarning: options.__nameForWarning\n    } : options;\n    if (isMountedRef.current) {\n      var _options$__environmen;\n      var updatedQueryReference = loadQuery((_options$__environmen = options === null || options === void 0 ? void 0 : options.__environment) !== null && _options$__environmen !== void 0 ? _options$__environmen : environment, preloadableRequest, variables, mergedOptions);\n      undisposedQueryReferencesRef.current.add(updatedQueryReference);\n      setQueryReference(updatedQueryReference);\n    }\n  }, [environment, preloadableRequest, setQueryReference, isMountedRef]);\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current queryReference will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly leave our\n      // current queryReference disposed, we need to load the query again\n      // and force a re-render by calling queryLoaderCallback again,\n      // so that the queryReference is correctly re-retained, and\n      // potentially refetched if necessary.\n      maybeHiddenOrFastRefresh.current = false;\n      if (queryReference.kind !== 'NullQueryReference') {\n        queryLoaderCallback(queryReference.variables, {\n          fetchPolicy: queryReference.fetchPolicy,\n          networkCacheConfig: queryReference.networkCacheConfig\n        });\n      }\n      return;\n    }\n\n    // When a new queryReference is committed, we iterate over all\n    // query references in undisposedQueryReferences and dispose all of\n    // the refs that aren't the currently committed one. This ensures\n    // that we don't leave any dangling query references for the\n    // case that loadQuery is called multiple times before commit; when\n    // this happens, multiple state updates will be scheduled, but only one\n    // will commit, meaning that we need to keep track of and dispose any\n    // query references that don't end up committing.\n    // - We are relying on the fact that sets iterate in insertion order, and we\n    // can remove items from a set as we iterate over it (i.e. no iterator\n    // invalidation issues.) Thus, it is safe to loop through\n    // undisposedQueryReferences until we find queryReference, and\n    // remove and dispose all previous references.\n    // - We are guaranteed to find queryReference in the set, because if a\n    // state update results in a commit, no state updates initiated prior to that\n    // one will be committed, and we are disposing and removing references\n    // associated with updates that were scheduled prior to the currently\n    // committing state change. (A useEffect callback is called during the commit\n    // phase.)\n    var undisposedQueryReferences = undisposedQueryReferencesRef.current;\n    if (isMountedRef.current) {\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(undisposedQueryReferences),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var undisposedQueryReference = _step.value;\n          if (undisposedQueryReference === queryReference) {\n            break;\n          }\n          undisposedQueryReferences[\"delete\"](undisposedQueryReference);\n          if (undisposedQueryReference.kind !== 'NullQueryReference') {\n            if (requestIsLiveQuery(preloadableRequest)) {\n              undisposedQueryReference.dispose && undisposedQueryReference.dispose();\n            } else {\n              undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, [queryReference, isMountedRef, queryLoaderCallback, preloadableRequest]);\n  useEffect(function () {\n    return function disposeAllRemainingQueryReferences() {\n      // undisposedQueryReferences.current is never reassigned\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(undisposedQueryReferencesRef.current),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var undisposedQueryReference = _step2.value;\n          if (undisposedQueryReference.kind !== 'NullQueryReference') {\n            if (requestIsLiveQuery(preloadableRequest)) {\n              undisposedQueryReference.dispose && undisposedQueryReference.dispose();\n            } else {\n              undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n  }, [preloadableRequest]);\n  return [queryReference.kind === 'NullQueryReference' ? null : queryReference, queryLoaderCallback, disposeQuery];\n}\nmodule.exports = useQueryLoader;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar HooksImplementation = require('./HooksImplementation');\nvar useRefetchableFragmentNode = require('./useRefetchableFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require = require('react'),\n  useDebugValue = _require.useDebugValue;\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment;\nfunction useRefetchableFragment_LEGACY(fragmentInput, fragmentRef) {\n  var fragmentNode = getFragment(fragmentInput);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of useRefetchableFragment()');\n  var _useRefetchableFragme = useRefetchableFragmentNode(fragmentNode, fragmentRef, 'useRefetchableFragment()'),\n    fragmentData = _useRefetchableFragme.fragmentData,\n    refetch = _useRefetchableFragme.refetch;\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: fragmentData\n    });\n  }\n\n  // $FlowFixMe[incompatible-return]\n  // $FlowFixMe[prop-missing]\n  return [fragmentData, refetch];\n}\nfunction useRefetchableFragment(fragmentInput, parentFragmentRef) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    return impl.useRefetchableFragment(fragmentInput, parentFragmentRef);\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useRefetchableFragment_LEGACY(fragmentInput, parentFragmentRef);\n  }\n}\nmodule.exports = useRefetchableFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('./FragmentResource'),\n  getFragmentResourceForEnvironment = _require.getFragmentResourceForEnvironment;\nvar ProfilerContext = require('./ProfilerContext');\nvar _require2 = require('./QueryResource'),\n  getQueryResourceForEnvironment = _require2.getQueryResourceForEnvironment;\nvar useFragmentNode = require('./useFragmentNode');\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useQueryLoader = require('./useQueryLoader');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require3 = require('react'),\n  useCallback = _require3.useCallback,\n  useContext = _require3.useContext,\n  useReducer = _require3.useReducer;\nvar _require4 = require('relay-runtime'),\n  fetchQuery = _require4.__internal.fetchQuery,\n  createOperationDescriptor = _require4.createOperationDescriptor,\n  getFragmentIdentifier = _require4.getFragmentIdentifier,\n  getRefetchMetadata = _require4.getRefetchMetadata,\n  getSelector = _require4.getSelector,\n  getValueAtPath = _require4.getValueAtPath;\nvar warning = require(\"fbjs/lib/warning\");\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'refetch':\n      {\n        var _action$refetchEnviro;\n        return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, state), {}, {\n          fetchPolicy: action.fetchPolicy,\n          mirroredEnvironment: (_action$refetchEnviro = action.refetchEnvironment) !== null && _action$refetchEnviro !== void 0 ? _action$refetchEnviro : state.mirroredEnvironment,\n          onComplete: action.onComplete,\n          refetchEnvironment: action.refetchEnvironment,\n          refetchQuery: action.refetchQuery,\n          renderPolicy: action.renderPolicy\n        });\n      }\n    case 'reset':\n      {\n        return {\n          fetchPolicy: undefined,\n          mirroredEnvironment: action.environment,\n          mirroredFragmentIdentifier: action.fragmentIdentifier,\n          onComplete: undefined,\n          refetchQuery: null,\n          renderPolicy: undefined\n        };\n      }\n    default:\n      {\n        action.type;\n        throw new Error('useRefetchableFragmentNode: Unexpected action type');\n      }\n  }\n}\nfunction useRefetchableFragmentNode(fragmentNode, parentFragmentRef, componentDisplayName) {\n  var parentEnvironment = useRelayEnvironment();\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n    refetchableRequest = _getRefetchMetadata.refetchableRequest,\n    fragmentRefPathInResponse = _getRefetchMetadata.fragmentRefPathInResponse,\n    identifierField = _getRefetchMetadata.identifierField;\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, parentFragmentRef);\n  var _useReducer = useReducer(reducer, {\n      fetchPolicy: undefined,\n      mirroredEnvironment: parentEnvironment,\n      mirroredFragmentIdentifier: fragmentIdentifier,\n      onComplete: undefined,\n      refetchEnvironment: null,\n      refetchQuery: null,\n      renderPolicy: undefined\n    }),\n    refetchState = _useReducer[0],\n    dispatch = _useReducer[1];\n  var fetchPolicy = refetchState.fetchPolicy,\n    mirroredEnvironment = refetchState.mirroredEnvironment,\n    mirroredFragmentIdentifier = refetchState.mirroredFragmentIdentifier,\n    onComplete = refetchState.onComplete,\n    refetchEnvironment = refetchState.refetchEnvironment,\n    refetchQuery = refetchState.refetchQuery,\n    renderPolicy = refetchState.renderPolicy;\n  var environment = refetchEnvironment !== null && refetchEnvironment !== void 0 ? refetchEnvironment : parentEnvironment;\n  var QueryResource = getQueryResourceForEnvironment(environment);\n  var FragmentResource = getFragmentResourceForEnvironment(environment);\n  var profilerContext = useContext(ProfilerContext);\n  var shouldReset = environment !== mirroredEnvironment || fragmentIdentifier !== mirroredFragmentIdentifier;\n  var _useQueryLoader = useQueryLoader(refetchableRequest),\n    queryRef = _useQueryLoader[0],\n    loadQuery = _useQueryLoader[1],\n    disposeQuery = _useQueryLoader[2];\n  var fragmentRef = parentFragmentRef;\n  if (shouldReset) {\n    dispatch({\n      type: 'reset',\n      environment: environment,\n      fragmentIdentifier: fragmentIdentifier\n    });\n    disposeQuery();\n  } else if (refetchQuery != null && queryRef != null) {\n    // If refetch was called, we expect to have a refetchQuery and queryRef\n    // in state, since both state updates to set the refetchQuery and the\n    // queryRef occur simultaneously.\n    // In this case, we need to read the refetched query data (potentially\n    // suspending if it's in flight), and extract the new fragment ref\n    // from the query in order read the current @refetchable fragment\n    // with the updated fragment owner as the new refetchQuery.\n\n    // Before observing the refetch, record the current ID and typename\n    // so that, if we are refetching existing data on\n    // a field that implements Node, after refetching we\n    // can validate that the received data is consistent\n    var debugPreviousIDAndTypename;\n    if (process.env.NODE_ENV !== \"production\") {\n      debugPreviousIDAndTypename = debugFunctions.getInitialIDAndType(refetchQuery.request.variables, fragmentRefPathInResponse, environment);\n    }\n    var handleQueryCompleted = function handleQueryCompleted(maybeError) {\n      onComplete && onComplete(maybeError !== null && maybeError !== void 0 ? maybeError : null);\n    };\n\n    // The queryRef.source obtained from useQueryLoader will be\n    // an observable we can consume /if/ a network request was\n    // started. Otherwise, given that QueryResource.prepare\n    // always expects an observable we fall back to a new network\n    // observable. Note however that if loadQuery did not make a network\n    // request, we don't expect to make one here, unless the state of\n    // the cache has changed between the call to refetch and this\n    // render.\n    var fetchObservable = queryRef.source != null ? queryRef.source : fetchQuery(environment, refetchQuery);\n\n    // Now wwe can we read the refetch query here using the\n    // queryRef provided from useQueryLoader. Note that the\n    // network request is started during the call to refetch,\n    // but if the refetch query is still in flight, we will suspend\n    // at this point:\n    var queryResult = profilerContext.wrapPrepareQueryResource(function () {\n      return QueryResource.prepare(refetchQuery, fetchObservable, fetchPolicy, renderPolicy, {\n        error: handleQueryCompleted,\n        complete: function complete() {\n          // Validate that the type of the object we got back matches the type\n          // of the object already in the store\n          if (process.env.NODE_ENV !== \"production\") {\n            debugFunctions.checkSameTypeAfterRefetch(debugPreviousIDAndTypename, environment, fragmentNode, componentDisplayName);\n          }\n          handleQueryCompleted();\n        }\n      }, queryRef.fetchKey, profilerContext);\n    });\n    var queryData = FragmentResource.read(queryResult.fragmentNode, queryResult.fragmentRef, componentDisplayName).data;\n    !(queryData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to be able to read refetch query response. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n\n    // After reading/fetching the refetch query, we extract from the\n    // refetch query response the new fragment ref we need to use to read\n    // the fragment. The new fragment ref will point to the refetch query\n    // as its fragment owner.\n    var refetchedFragmentRef = getValueAtPath(queryData, fragmentRefPathInResponse);\n    fragmentRef = refetchedFragmentRef;\n    if (process.env.NODE_ENV !== \"production\") {\n      // Validate that the id of the object we got back matches the id\n      // we queried for in the variables.\n      // We do this during render instead of onComplete to make sure we are\n      // only validating the most recent refetch.\n      debugFunctions.checkSameIDAfterRefetch(debugPreviousIDAndTypename, fragmentRef, fragmentNode, componentDisplayName);\n    }\n  }\n\n  // We read and subscribe to the fragment using useFragmentNode.\n  // If refetch was called, we read the fragment using the new computed\n  // fragment ref from the refetch query response; otherwise, we use the\n  // fragment ref passed by the caller as normal.\n  var _useFragmentNode = useFragmentNode(fragmentNode, fragmentRef, componentDisplayName),\n    fragmentData = _useFragmentNode.data,\n    disableStoreUpdates = _useFragmentNode.disableStoreUpdates,\n    enableStoreUpdates = _useFragmentNode.enableStoreUpdates;\n  var refetch = useRefetchFunction(componentDisplayName, dispatch, disposeQuery, fragmentData, fragmentIdentifier, fragmentNode, fragmentRefPathInResponse, identifierField, loadQuery, parentFragmentRef, refetchableRequest);\n  return {\n    fragmentData: fragmentData,\n    fragmentRef: fragmentRef,\n    refetch: refetch,\n    disableStoreUpdates: disableStoreUpdates,\n    enableStoreUpdates: enableStoreUpdates\n  };\n}\nfunction useRefetchFunction(componentDisplayName, dispatch, disposeQuery, fragmentData, fragmentIdentifier, fragmentNode, fragmentRefPathInResponse, identifierField, loadQuery, parentFragmentRef, refetchableRequest) {\n  var isMountedRef = useIsMountedRef();\n  var identifierValue = identifierField != null && fragmentData != null && typeof fragmentData === 'object' ? fragmentData[identifierField] : null;\n  return useCallback(function (providedRefetchVariables, options) {\n    // Bail out and warn if we're trying to refetch after the component\n    // has unmounted\n    if (isMountedRef.current !== true) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected call to `refetch` on unmounted component for fragment ' + '`%s` in `%s`. It looks like some instances of your component are ' + 'still trying to fetch data but they already unmounted. ' + 'Please make sure you clear all timers, intervals, ' + 'async calls, etc that may trigger a fetch.', fragmentNode.name, componentDisplayName) : void 0;\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    if (parentFragmentRef == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected call to `refetch` while using a null fragment ref ' + 'for fragment `%s` in `%s`. When calling `refetch`, we expect ' + \"initial fragment data to be non-null. Please make sure you're \" + 'passing a valid fragment ref to `%s` before calling ' + '`refetch`, or make sure you pass all required variables to `refetch`.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n    }\n    var refetchEnvironment = options === null || options === void 0 ? void 0 : options.__environment;\n    var fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy;\n    var renderPolicy = options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy;\n    var onComplete = options === null || options === void 0 ? void 0 : options.onComplete;\n    var fragmentSelector = getSelector(fragmentNode, parentFragmentRef);\n    var parentVariables;\n    var fragmentVariables;\n    if (fragmentSelector == null) {\n      parentVariables = {};\n      fragmentVariables = {};\n    } else if (fragmentSelector.kind === 'PluralReaderSelector') {\n      var _fragmentSelector$sel, _fragmentSelector$sel2, _fragmentSelector$sel3, _fragmentSelector$sel4;\n      parentVariables = (_fragmentSelector$sel = (_fragmentSelector$sel2 = fragmentSelector.selectors[0]) === null || _fragmentSelector$sel2 === void 0 ? void 0 : _fragmentSelector$sel2.owner.variables) !== null && _fragmentSelector$sel !== void 0 ? _fragmentSelector$sel : {};\n      fragmentVariables = (_fragmentSelector$sel3 = (_fragmentSelector$sel4 = fragmentSelector.selectors[0]) === null || _fragmentSelector$sel4 === void 0 ? void 0 : _fragmentSelector$sel4.variables) !== null && _fragmentSelector$sel3 !== void 0 ? _fragmentSelector$sel3 : {};\n    } else {\n      parentVariables = fragmentSelector.owner.variables;\n      fragmentVariables = fragmentSelector.variables;\n    }\n\n    // A user of `useRefetchableFragment()` may pass a subset of\n    // all variables required by the fragment when calling `refetch()`.\n    // We fill in any variables not passed by the call to `refetch()` with the\n    // variables from the original parent fragment owner.\n    var refetchVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, parentVariables), fragmentVariables), providedRefetchVariables);\n\n    // If the query needs an identifier value ('id' or similar) and one\n    // was not explicitly provided, read it from the fragment data.\n    if (identifierField != null && !providedRefetchVariables.hasOwnProperty('id')) {\n      // @refetchable fragments are guaranteed to have an `id` selection\n      // if the type is Node, implements Node, or is @fetchable. Double-check\n      // that there actually is a value at runtime.\n      if (typeof identifierValue !== 'string') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected result to have a string  ' + '`%s` in order to refetch, got `%s`.', identifierField, identifierValue) : void 0;\n      }\n      refetchVariables.id = identifierValue;\n    }\n    var refetchQuery = createOperationDescriptor(refetchableRequest, refetchVariables, {\n      force: true\n    });\n\n    // We call loadQuery which will start a network request if necessary\n    // and update the querRef from useQueryLoader.\n    // Note the following:\n    // - loadQuery will dispose of any previously refetched queries.\n    // - We use the variables extracted off the OperationDescriptor\n    // so that they have been filtered out to include only the\n    // variables actually declared in the query.\n    loadQuery(refetchQuery.request.variables, {\n      fetchPolicy: fetchPolicy,\n      __environment: refetchEnvironment,\n      __nameForWarning: 'refetch'\n    });\n    dispatch({\n      type: 'refetch',\n      fetchPolicy: fetchPolicy,\n      onComplete: onComplete,\n      refetchEnvironment: refetchEnvironment,\n      refetchQuery: refetchQuery,\n      renderPolicy: renderPolicy\n    });\n    return {\n      dispose: disposeQuery\n    };\n  },\n  // NOTE: We disable react-hooks-deps warning because:\n  //   - We know fragmentRefPathInResponse is static, so it can be omitted from\n  //     deps\n  //   - We know fragmentNode is static, so it can be omitted from deps.\n  //   - fragmentNode and parentFragmentRef are also captured by including\n  //     fragmentIdentifier\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [fragmentIdentifier, dispatch, disposeQuery, identifierValue, loadQuery]);\n}\nvar debugFunctions;\nif (process.env.NODE_ENV !== \"production\") {\n  debugFunctions = {\n    getInitialIDAndType: function getInitialIDAndType(memoRefetchVariables, fragmentRefPathInResponse, environment) {\n      var _require5 = require('relay-runtime'),\n        Record = _require5.Record;\n      var id = memoRefetchVariables === null || memoRefetchVariables === void 0 ? void 0 : memoRefetchVariables.id;\n      if (fragmentRefPathInResponse.length !== 1 || fragmentRefPathInResponse[0] !== 'node' || id == null) {\n        return null;\n      }\n      var recordSource = environment.getStore().getSource();\n      var record = recordSource.get(id);\n      var typename = record && Record.getType(record);\n      if (typename == null) {\n        return null;\n      }\n      return {\n        id: id,\n        typename: typename\n      };\n    },\n    checkSameTypeAfterRefetch: function checkSameTypeAfterRefetch(previousIDAndType, environment, fragmentNode, componentDisplayName) {\n      var _require6 = require('relay-runtime'),\n        Record = _require6.Record;\n      if (!previousIDAndType) {\n        return;\n      }\n      var recordSource = environment.getStore().getSource();\n      var record = recordSource.get(previousIDAndType.id);\n      var typename = record && Record.getType(record);\n      if (typename !== previousIDAndType.typename) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Call to `refetch` returned data with a different ' + '__typename: was `%s`, now `%s`, on `%s` in `%s`. ' + 'Please make sure the server correctly implements' + 'unique id requirement.', previousIDAndType.typename, typename, fragmentNode.name, componentDisplayName) : void 0;\n      }\n    },\n    checkSameIDAfterRefetch: function checkSameIDAfterRefetch(previousIDAndTypename, refetchedFragmentRef, fragmentNode, componentDisplayName) {\n      if (previousIDAndTypename == null) {\n        return;\n      }\n      var _require7 = require('relay-runtime'),\n        ID_KEY = _require7.ID_KEY;\n      // $FlowExpectedError[incompatible-use]\n      var resultID = refetchedFragmentRef[ID_KEY];\n      if (resultID != null && resultID !== previousIDAndTypename.id) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Call to `refetch` returned a different id, expected ' + '`%s`, got `%s`, on `%s` in `%s`. ' + 'Please make sure the server correctly implements ' + 'unique id requirement.', resultID, previousIDAndTypename.id, fragmentNode.name, componentDisplayName) : void 0;\n      }\n    }\n  };\n}\nmodule.exports = useRefetchableFragmentNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./../ReactRelayContext');\nvar invariant = require('invariant');\nvar _require = require('react'),\n  useContext = _require.useContext;\nfunction useRelayEnvironment() {\n  var context = useContext(ReactRelayContext);\n  !(context != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useRelayEnvironment: Expected to have found a Relay environment provided by ' + 'a `RelayEnvironmentProvider` component. ' + 'This usually means that useRelayEnvironment was used in a ' + 'component that is not a descendant of a `RelayEnvironmentProvider`. ' + 'Please make sure a `RelayEnvironmentProvider` has been rendered somewhere ' + 'as a parent or ancestor of your component.') : invariant(false) : void 0;\n  return context.environment;\n}\nmodule.exports = useRelayEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar warning = require(\"fbjs/lib/warning\");\nfunction useStaticFragmentNodeWarning(fragmentNode, warningContext) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // This is calling `useRef` conditionally, but based on the environment\n    // __DEV__ setting which shouldn't change. This allows us to only pay the\n    // cost of `useRef` in development mode to produce the warning.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var initialPropRef = useUnsafeRef_DEPRECATED(fragmentNode.name);\n    process.env.NODE_ENV !== \"production\" ? warning(initialPropRef.current === fragmentNode.name, 'Relay: The %s has to remain the same over the lifetime of a component. ' + 'Changing it is not supported and will result in unexpected behavior.', warningContext) : void 0;\n  }\n}\nmodule.exports = useStaticFragmentNodeWarning;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require = require('react'),\n  useEffect = _require.useEffect,\n  useRef = _require.useRef;\n\n/**\n * This hook subscribes a callback to the invalidation state of the given data\n * ids.\n * Any time the invalidation state of the given data ids changes, the provided\n * callback will be called.\n * If new ids or a new callback are provided, the subscription will be\n * re-established and the previous one will be disposed.\n * The subscription will automatically be disposed on unmount\n */\nfunction useSubscribeToInvalidationState(dataIDs, callback) {\n  var environment = useRelayEnvironment();\n  var disposableRef = useRef(null);\n  var stableDataIDs = Array.from(dataIDs).sort().join('');\n  useEffect(function () {\n    var store = environment.getStore();\n    var invalidationState = store.lookupInvalidationState(dataIDs);\n    var disposable = store.subscribeToInvalidationState(invalidationState, callback);\n    disposableRef.current = disposable;\n    return function () {\n      return disposable.dispose();\n    };\n\n    // Intentionally excluding dataIDs, since we're using stableDataIDs\n    // instead\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stableDataIDs, callback, environment]);\n  return {\n    dispose: function dispose() {\n      if (disposableRef.current != null) {\n        disposableRef.current.dispose();\n      }\n    }\n  };\n}\nmodule.exports = useSubscribeToInvalidationState;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require = require('react'),\n  useEffect = _require.useEffect;\nvar _require2 = require('relay-runtime'),\n  requestSubscription = _require2.requestSubscription;\nfunction useSubscription(config, requestSubscriptionFn) {\n  // N.B. this will re-subscribe every render if config or requestSubscriptionFn\n  // are not memoized.\n  // Please do not pass an object defined in-line.\n  var actualRequestSubscription = requestSubscriptionFn !== null && requestSubscriptionFn !== void 0 ? requestSubscriptionFn : requestSubscription;\n  var environment = useRelayEnvironment();\n  useEffect(function () {\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    var _actualRequestSubscri = actualRequestSubscription(environment, config),\n      dispose = _actualRequestSubscri.dispose;\n    return dispose;\n  }, [environment, config, actualRequestSubscription]);\n}\nmodule.exports = useSubscription;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('react'),\n  useMemo = _require.useMemo;\n\n/**\n * Like `useRef`, but does not warn when accessed during render. It's a bad\n * pattern to read or write from a ref during render as it does not trigger\n * a rerender and might result in bugs.\n */\nfunction useUnsafeRef_DEPRECATED(init) {\n  return useMemo(function () {\n    return {\n      current: init\n    };\n  }, []);\n}\nmodule.exports = useUnsafeRef_DEPRECATED;","/**\n * Relay v15.0.0\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/index.js');\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ConnectionHandler = require('./connection/ConnectionHandler');\nvar MutationHandlers = require('./connection/MutationHandlers');\nvar invariant = require('invariant');\nfunction RelayDefaultHandlerProvider(handle) {\n  switch (handle) {\n    case 'connection':\n      return ConnectionHandler;\n    case 'deleteRecord':\n      return MutationHandlers.DeleteRecordHandler;\n    case 'deleteEdge':\n      return MutationHandlers.DeleteEdgeHandler;\n    case 'appendEdge':\n      return MutationHandlers.AppendEdgeHandler;\n    case 'prependEdge':\n      return MutationHandlers.PrependEdgeHandler;\n    case 'appendNode':\n      return MutationHandlers.AppendNodeHandler;\n    case 'prependNode':\n      return MutationHandlers.PrependNodeHandler;\n  }\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayDefaultHandlerProvider: No handler provided for `%s`.', handle) : invariant(false) : void 0;\n}\nmodule.exports = RelayDefaultHandlerProvider;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../../store/ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('../../store/RelayStoreUtils'),\n  getStableStorageKey = _require2.getStableStorageKey;\nvar getRelayHandleKey = require('../../util/getRelayHandleKey');\nvar ConnectionInterface = require('./ConnectionInterface');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar CONNECTION = 'connection';\n\n// Per-instance incrementing index used to generate unique edge IDs\nvar NEXT_EDGE_INDEX = '__connection_next_edge_index';\n\n/**\n * @public\n *\n * A default runtime handler for connection fields that appends newly fetched\n * edges onto the end of a connection, regardless of the arguments used to fetch\n * those edges.\n */\nfunction update(store, payload) {\n  var record = store.get(payload.dataID);\n  if (!record) {\n    return;\n  }\n  var _ConnectionInterface$ = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$.EDGES,\n    END_CURSOR = _ConnectionInterface$.END_CURSOR,\n    HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE,\n    HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE,\n    PAGE_INFO = _ConnectionInterface$.PAGE_INFO,\n    PAGE_INFO_TYPE = _ConnectionInterface$.PAGE_INFO_TYPE,\n    START_CURSOR = _ConnectionInterface$.START_CURSOR;\n  var serverConnection = record.getLinkedRecord(payload.fieldKey);\n  var serverPageInfo = serverConnection && serverConnection.getLinkedRecord(PAGE_INFO);\n  if (!serverConnection) {\n    record.setValue(null, payload.handleKey);\n    return;\n  }\n  // In rare cases the handleKey field may be unset even though the client\n  // connection record exists, in this case new edges should still be merged\n  // into the existing client connection record (and the field reset to point\n  // to that record).\n  var clientConnectionID = generateClientID(record.getDataID(), payload.handleKey);\n  var clientConnectionField = record.getLinkedRecord(payload.handleKey);\n  var clientConnection = clientConnectionField !== null && clientConnectionField !== void 0 ? clientConnectionField : store.get(clientConnectionID);\n  var clientPageInfo = clientConnection && clientConnection.getLinkedRecord(PAGE_INFO);\n  if (!clientConnection) {\n    // Initial fetch with data: copy fields from the server record\n    var connection = store.create(clientConnectionID, serverConnection.getType());\n    connection.setValue(0, NEXT_EDGE_INDEX);\n    connection.copyFieldsFrom(serverConnection);\n    var serverEdges = serverConnection.getLinkedRecords(EDGES);\n    if (serverEdges) {\n      serverEdges = serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, connection, edge);\n      });\n      connection.setLinkedRecords(serverEdges, EDGES);\n    }\n    record.setLinkedRecord(connection, payload.handleKey);\n    clientPageInfo = store.create(generateClientID(connection.getDataID(), PAGE_INFO), PAGE_INFO_TYPE);\n    clientPageInfo.setValue(false, HAS_NEXT_PAGE);\n    clientPageInfo.setValue(false, HAS_PREV_PAGE);\n    clientPageInfo.setValue(null, END_CURSOR);\n    clientPageInfo.setValue(null, START_CURSOR);\n    if (serverPageInfo) {\n      clientPageInfo.copyFieldsFrom(serverPageInfo);\n    }\n    connection.setLinkedRecord(clientPageInfo, PAGE_INFO);\n  } else {\n    if (clientConnectionField == null) {\n      // If the handleKey field was unset but the client connection record\n      // existed, update the field to point to the record\n      record.setLinkedRecord(clientConnection, payload.handleKey);\n    }\n    var _connection = clientConnection;\n    // Subsequent fetches:\n    // - updated fields on the connection\n    // - merge prev/next edges, de-duplicating by node id\n    // - synthesize page info fields\n    var _serverEdges = serverConnection.getLinkedRecords(EDGES);\n    if (_serverEdges) {\n      _serverEdges = _serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, _connection, edge);\n      });\n    }\n    var prevEdges = _connection.getLinkedRecords(EDGES);\n    var prevPageInfo = _connection.getLinkedRecord(PAGE_INFO);\n    _connection.copyFieldsFrom(serverConnection);\n    // Reset EDGES and PAGE_INFO fields\n    if (prevEdges) {\n      _connection.setLinkedRecords(prevEdges, EDGES);\n    }\n    if (prevPageInfo) {\n      _connection.setLinkedRecord(prevPageInfo, PAGE_INFO);\n    }\n    var nextEdges = [];\n    var args = payload.args;\n    if (prevEdges && _serverEdges) {\n      if (args.after != null) {\n        // Forward pagination from the end of the connection: append edges\n        if (clientPageInfo && args.after === clientPageInfo.getValue(END_CURSOR)) {\n          var nodeIDs = new Set();\n          mergeEdges(prevEdges, nextEdges, nodeIDs);\n          mergeEdges(_serverEdges, nextEdges, nodeIDs);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected after cursor `%s`, edges must ' + 'be fetched from the end of the list (`%s`).', args.after, clientPageInfo && clientPageInfo.getValue(END_CURSOR)) : void 0;\n          return;\n        }\n      } else if (args.before != null) {\n        // Backward pagination from the start of the connection: prepend edges\n        if (clientPageInfo && args.before === clientPageInfo.getValue(START_CURSOR)) {\n          var _nodeIDs = new Set();\n          mergeEdges(_serverEdges, nextEdges, _nodeIDs);\n          mergeEdges(prevEdges, nextEdges, _nodeIDs);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected before cursor `%s`, edges must ' + 'be fetched from the beginning of the list (`%s`).', args.before, clientPageInfo && clientPageInfo.getValue(START_CURSOR)) : void 0;\n          return;\n        }\n      } else {\n        // The connection was refetched from the beginning/end: replace edges\n        nextEdges = _serverEdges;\n      }\n    } else if (_serverEdges) {\n      nextEdges = _serverEdges;\n    } else {\n      // $FlowFixMe[incompatible-type]\n      nextEdges = prevEdges;\n    }\n    // Update edges only if they were updated, the null check is\n    // for Flow (prevEdges could be null).\n    if (nextEdges != null && nextEdges !== prevEdges) {\n      _connection.setLinkedRecords(nextEdges, EDGES);\n    }\n    // Page info should be updated even if no new edge were returned.\n    if (clientPageInfo && serverPageInfo) {\n      if (args.after == null && args.before == null) {\n        // The connection was refetched from the beginning/end: replace\n        // page_info\n        clientPageInfo.copyFieldsFrom(serverPageInfo);\n      } else if (args.before != null || args.after == null && args.last) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_PREV_PAGE), HAS_PREV_PAGE);\n        var startCursor = serverPageInfo.getValue(START_CURSOR);\n        if (typeof startCursor === 'string') {\n          clientPageInfo.setValue(startCursor, START_CURSOR);\n        }\n      } else if (args.after != null || args.before == null && args.first) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_NEXT_PAGE), HAS_NEXT_PAGE);\n        var endCursor = serverPageInfo.getValue(END_CURSOR);\n        if (typeof endCursor === 'string') {\n          clientPageInfo.setValue(endCursor, END_CURSOR);\n        }\n      }\n    }\n  }\n}\n\n/**\n * @public\n *\n * Given a record and the name of the schema field for which a connection was\n * fetched, returns the linked connection record.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * The `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   // Access fields on the connection:\n *   const edges = friends.getLinkedRecords('edges');\n * }\n * ```\n *\n * TODO: t15733312\n * Currently we haven't run into this case yet, but we need to add a `getConnections`\n * that returns an array of the connections under the same `key` regardless of the variables.\n */\nfunction getConnection(record, key, filters) {\n  var handleKey = getRelayHandleKey(CONNECTION, key, null);\n  return record.getLinkedRecord(handleKey, filters);\n}\n\n/**\n * @public\n *\n * Given a record ID, the key of a connection field, and optional filters used\n * to identify the connection, returns the connection ID.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<user-id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *     edges {\n *       node {\n *         id\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * The ID of the `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const connectionID = ConnectionHandler.getConnectionID('<user-id>', 'FriendsFragment_friends');\n * }\n * ```\n */\nfunction getConnectionID(recordID, key, filters) {\n  var handleKey = getRelayHandleKey(CONNECTION, key, null);\n  var storageKey = getStableStorageKey(handleKey, filters);\n  return generateClientID(recordID, storageKey);\n}\n\n/**\n * @public\n *\n * Inserts an edge after the given cursor, or at the end of the list if no\n * cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be appended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   ConnectionHandler.insertEdgeAfter(friends, edge);\n * }\n * ```\n */\nfunction insertEdgeAfter(record, newEdge, cursor) {\n  var _ConnectionInterface$2 = ConnectionInterface.get(),\n    CURSOR = _ConnectionInterface$2.CURSOR,\n    EDGES = _ConnectionInterface$2.EDGES;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n  var nextEdges;\n  if (cursor == null) {\n    nextEdges = edges.concat(newEdge);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      nextEdges.push(edge);\n      if (edge == null) {\n        continue;\n      }\n      var edgeCursor = edge.getValue(CURSOR);\n      if (cursor === edgeCursor) {\n        nextEdges.push(newEdge);\n        foundCursor = true;\n      }\n    }\n    if (!foundCursor) {\n      nextEdges.push(newEdge);\n    }\n  }\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n\n/**\n * @public\n *\n * Creates an edge for a connection record, given a node and edge type.\n */\nfunction createEdge(store, record, node, edgeType) {\n  var _ConnectionInterface$3 = ConnectionInterface.get(),\n    NODE = _ConnectionInterface$3.NODE;\n\n  // An index-based client ID could easily conflict (unless it was\n  // auto-incrementing, but there is nowhere to the store the id)\n  // Instead, construct a client ID based on the connection ID and node ID,\n  // which will only conflict if the same node is added to the same connection\n  // twice. This is acceptable since the `insertEdge*` functions ignore\n  // duplicates.\n  var edgeID = generateClientID(record.getDataID(), node.getDataID());\n  var edge = store.get(edgeID);\n  if (!edge) {\n    edge = store.create(edgeID, edgeType);\n  }\n  edge.setLinkedRecord(node, NODE);\n  if (edge.getValue('cursor') == null) {\n    // Always use null instead of undefined value for cursor\n    // to avoid considering it as missing data\n    edge.setValue(null, 'cursor');\n  }\n  return edge;\n}\n\n/**\n * @public\n *\n * Inserts an edge before the given cursor, or at the beginning of the list if\n * no cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be prepended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   ConnectionHandler.insertEdgeBefore(friends, edge);\n * }\n * ```\n */\nfunction insertEdgeBefore(record, newEdge, cursor) {\n  var _ConnectionInterface$4 = ConnectionInterface.get(),\n    CURSOR = _ConnectionInterface$4.CURSOR,\n    EDGES = _ConnectionInterface$4.EDGES;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n  var nextEdges;\n  if (cursor == null) {\n    nextEdges = [newEdge].concat(edges);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      if (edge != null) {\n        var edgeCursor = edge.getValue(CURSOR);\n        if (cursor === edgeCursor) {\n          nextEdges.push(newEdge);\n          foundCursor = true;\n        }\n      }\n      nextEdges.push(edge);\n    }\n    if (!foundCursor) {\n      nextEdges.unshift(newEdge);\n    }\n  }\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n\n/**\n * @public\n *\n * Remove any edges whose `node.id` matches the given id.\n */\nfunction deleteNode(record, nodeID) {\n  var _ConnectionInterface$5 = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$5.EDGES,\n    NODE = _ConnectionInterface$5.NODE;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    return;\n  }\n  var nextEdges;\n  for (var ii = 0; ii < edges.length; ii++) {\n    var edge = edges[ii];\n    var node = edge && edge.getLinkedRecord(NODE);\n    if (node != null && node.getDataID() === nodeID) {\n      if (nextEdges === undefined) {\n        nextEdges = edges.slice(0, ii);\n      }\n    } else if (nextEdges !== undefined) {\n      nextEdges.push(edge);\n    }\n  }\n  if (nextEdges !== undefined) {\n    record.setLinkedRecords(nextEdges, EDGES);\n  }\n}\n\n/**\n * @internal\n *\n * Creates a copy of an edge with a unique ID based on per-connection-instance\n * incrementing edge index. This is necessary to avoid collisions between edges,\n * which can occur because (edge) client IDs are assigned deterministically\n * based on the path from the nearest node with an id.\n *\n * Example: if the first N edges of the same connection are refetched, the edges\n * from the second fetch will be assigned the same IDs as the first fetch, even\n * though the nodes they point to may be different (or the same and in different\n * order).\n */\nfunction buildConnectionEdge(store, connection, edge) {\n  if (edge == null) {\n    return edge;\n  }\n  var _ConnectionInterface$6 = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$6.EDGES;\n  var edgeIndex = connection.getValue(NEXT_EDGE_INDEX);\n  !(typeof edgeIndex === 'number') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ConnectionHandler: Expected %s to be a number, got `%s`.', NEXT_EDGE_INDEX, edgeIndex) : invariant(false) : void 0;\n  var edgeID = generateClientID(connection.getDataID(), EDGES, edgeIndex);\n  var connectionEdge = store.create(edgeID, edge.getType());\n  connectionEdge.copyFieldsFrom(edge);\n  if (connectionEdge.getValue('cursor') == null) {\n    // Always use null instead of undefined value for cursor\n    // to avoid considering it as missing data\n    connectionEdge.setValue(null, 'cursor');\n  }\n  connection.setValue(edgeIndex + 1, NEXT_EDGE_INDEX);\n  return connectionEdge;\n}\n\n/**\n * @internal\n *\n * Adds the source edges to the target edges, skipping edges with\n * duplicate node ids.\n */\nfunction mergeEdges(sourceEdges, targetEdges, nodeIDs) {\n  var _ConnectionInterface$7 = ConnectionInterface.get(),\n    NODE = _ConnectionInterface$7.NODE;\n  for (var ii = 0; ii < sourceEdges.length; ii++) {\n    var edge = sourceEdges[ii];\n    if (!edge) {\n      continue;\n    }\n    var node = edge.getLinkedRecord(NODE);\n    var nodeID = node && node.getDataID();\n    if (nodeID) {\n      if (nodeIDs.has(nodeID)) {\n        continue;\n      }\n      nodeIDs.add(nodeID);\n    }\n    targetEdges.push(edge);\n  }\n}\nmodule.exports = {\n  buildConnectionEdge: buildConnectionEdge,\n  createEdge: createEdge,\n  deleteNode: deleteNode,\n  getConnection: getConnection,\n  getConnectionID: getConnectionID,\n  insertEdgeAfter: insertEdgeAfter,\n  insertEdgeBefore: insertEdgeBefore,\n  update: update\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar CONNECTION_CALLS = {\n  after: true,\n  before: true,\n  find: true,\n  first: true,\n  last: true,\n  surrounds: true\n};\nvar config = {\n  CURSOR: 'cursor',\n  EDGES: 'edges',\n  END_CURSOR: 'endCursor',\n  HAS_NEXT_PAGE: 'hasNextPage',\n  HAS_PREV_PAGE: 'hasPreviousPage',\n  NODE: 'node',\n  PAGE_INFO_TYPE: 'PageInfo',\n  PAGE_INFO: 'pageInfo',\n  START_CURSOR: 'startCursor'\n};\n\n/**\n * @internal\n *\n * Defines logic relevant to the informal \"Connection\" GraphQL interface.\n */\nvar ConnectionInterface = {\n  inject: function inject(newConfig) {\n    config = newConfig;\n  },\n  get: function get() {\n    return config;\n  },\n  /**\n   * Checks whether a call exists strictly to encode which parts of a connection\n   * to fetch. Fields that only differ by connection call values should have the\n   * same identity.\n   */\n  isConnectionCall: function isConnectionCall(call) {\n    return CONNECTION_CALLS.hasOwnProperty(call.name);\n  }\n};\nmodule.exports = ConnectionInterface;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar ConnectionHandler = require('./ConnectionHandler');\nvar ConnectionInterface = require('./ConnectionInterface');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar DeleteRecordHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n    if (record != null) {\n      var idOrIds = record.getValue(payload.fieldKey);\n      if (typeof idOrIds === 'string') {\n        store[\"delete\"](idOrIds);\n      } else if (Array.isArray(idOrIds)) {\n        idOrIds.forEach(function (id) {\n          if (typeof id === 'string') {\n            store[\"delete\"](id);\n          }\n        });\n      }\n    }\n  }\n};\nvar DeleteEdgeHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var idOrIds = record.getValue(payload.fieldKey);\n    var idList = Array.isArray(idOrIds) ? idOrIds : [idOrIds];\n    idList.forEach(function (id) {\n      if (typeof id === 'string') {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var connectionID = _step.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            ConnectionHandler.deleteNode(connection, id);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    });\n  }\n};\nvar AppendEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeBefore)\n};\nvar AppendNodeHandler = {\n  update: nodeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependNodeHandler = {\n  update: nodeUpdater(ConnectionHandler.insertEdgeBefore)\n};\nfunction edgeUpdater(insertFn) {\n  return function (store, payload) {\n    var _serverEdges;\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var singleServerEdge, serverEdges;\n    try {\n      singleServerEdge = record.getLinkedRecord(payload.fieldKey);\n    } catch (_unused) {}\n    if (!singleServerEdge) {\n      try {\n        serverEdges = record.getLinkedRecords(payload.fieldKey);\n      } catch (_unused2) {}\n    }\n    if (singleServerEdge == null && serverEdges == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'MutationHandlers: Expected the server edge to be non-null.') : void 0;\n      return;\n    }\n    var _ConnectionInterface$ = ConnectionInterface.get(),\n      NODE = _ConnectionInterface$.NODE,\n      EDGES = _ConnectionInterface$.EDGES;\n    var serverEdgeList = (_serverEdges = serverEdges) !== null && _serverEdges !== void 0 ? _serverEdges : [singleServerEdge];\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(serverEdgeList),\n      _step2;\n    try {\n      var _loop = function _loop() {\n        var serverEdge = _step2.value;\n        if (serverEdge == null) {\n          return \"continue\";\n        }\n        var serverNode = serverEdge.getLinkedRecord('node');\n        if (!serverNode) {\n          return \"continue\";\n        }\n        var serverNodeId = serverNode.getDataID();\n        var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var connectionID = _step3.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            var nodeAlreadyExistsInConnection = (_connection$getLinked = connection.getLinkedRecords(EDGES)) === null || _connection$getLinked === void 0 ? void 0 : _connection$getLinked.some(function (edge) {\n              var _edge$getLinkedRecord;\n              return (edge === null || edge === void 0 ? void 0 : (_edge$getLinkedRecord = edge.getLinkedRecord(NODE)) === null || _edge$getLinkedRecord === void 0 ? void 0 : _edge$getLinkedRecord.getDataID()) === serverNodeId;\n            });\n            if (nodeAlreadyExistsInConnection) {\n              continue;\n            }\n            var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n            !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n            insertFn(connection, clientEdge);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      };\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _connection$getLinked;\n        var _ret = _loop();\n        if (_ret === \"continue\") continue;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  };\n}\nfunction nodeUpdater(insertFn) {\n  return function (store, payload) {\n    var _serverNodes;\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var _payload$handleArgs = payload.handleArgs,\n      connections = _payload$handleArgs.connections,\n      edgeTypeName = _payload$handleArgs.edgeTypeName;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    !(edgeTypeName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected edge typename to be specified.') : invariant(false) : void 0;\n    var singleServerNode;\n    var serverNodes;\n    try {\n      singleServerNode = record.getLinkedRecord(payload.fieldKey);\n    } catch (_unused3) {}\n    if (!singleServerNode) {\n      try {\n        serverNodes = record.getLinkedRecords(payload.fieldKey);\n      } catch (_unused4) {}\n    }\n    if (singleServerNode == null && serverNodes == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'MutationHandlers: Expected target node to exist.') : void 0;\n      return;\n    }\n    var _ConnectionInterface$2 = ConnectionInterface.get(),\n      NODE = _ConnectionInterface$2.NODE,\n      EDGES = _ConnectionInterface$2.EDGES;\n    var serverNodeList = (_serverNodes = serverNodes) !== null && _serverNodes !== void 0 ? _serverNodes : [singleServerNode];\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(serverNodeList),\n      _step4;\n    try {\n      var _loop2 = function _loop2() {\n        var serverNode = _step4.value;\n        if (serverNode == null) {\n          return \"continue\";\n        }\n        var serverNodeId = serverNode.getDataID();\n        var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var connectionID = _step5.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            var nodeAlreadyExistsInConnection = (_connection$getLinked2 = connection.getLinkedRecords(EDGES)) === null || _connection$getLinked2 === void 0 ? void 0 : _connection$getLinked2.some(function (edge) {\n              var _edge$getLinkedRecord2;\n              return (edge === null || edge === void 0 ? void 0 : (_edge$getLinkedRecord2 = edge.getLinkedRecord(NODE)) === null || _edge$getLinkedRecord2 === void 0 ? void 0 : _edge$getLinkedRecord2.getDataID()) === serverNodeId;\n            });\n            if (nodeAlreadyExistsInConnection) {\n              continue;\n            }\n            var clientEdge = ConnectionHandler.createEdge(store, connection, serverNode, edgeTypeName);\n            !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n            insertFn(connection, clientEdge);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      };\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _connection$getLinked2;\n        var _ret2 = _loop2();\n        if (_ret2 === \"continue\") continue;\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n}\nmodule.exports = {\n  AppendEdgeHandler: AppendEdgeHandler,\n  DeleteRecordHandler: DeleteRecordHandler,\n  PrependEdgeHandler: PrependEdgeHandler,\n  AppendNodeHandler: AppendNodeHandler,\n  PrependNodeHandler: PrependNodeHandler,\n  DeleteEdgeHandler: DeleteEdgeHandler\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ConnectionHandler = require('./handlers/connection/ConnectionHandler');\nvar ConnectionInterface = require('./handlers/connection/ConnectionInterface');\nvar MutationHandlers = require('./handlers/connection/MutationHandlers');\nvar RelayDefaultHandlerProvider = require('./handlers/RelayDefaultHandlerProvider');\nvar applyOptimisticMutation = require('./mutations/applyOptimisticMutation');\nvar commitLocalUpdate = require('./mutations/commitLocalUpdate');\nvar commitMutation = require('./mutations/commitMutation');\nvar RelayDeclarativeMutationConfig = require('./mutations/RelayDeclarativeMutationConfig');\nvar RelayNetwork = require('./network/RelayNetwork');\nvar RelayObservable = require('./network/RelayObservable');\nvar RelayQueryResponseCache = require('./network/RelayQueryResponseCache');\nvar fetchQuery = require('./query/fetchQuery');\nvar fetchQuery_DEPRECATED = require('./query/fetchQuery_DEPRECATED');\nvar fetchQueryInternal = require('./query/fetchQueryInternal');\nvar GraphQLTag = require('./query/GraphQLTag');\nvar PreloadableQueryRegistry = require('./query/PreloadableQueryRegistry');\nvar _require = require('./store/ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID,\n  isClientID = _require.isClientID;\nvar createFragmentSpecResolver = require('./store/createFragmentSpecResolver');\nvar createRelayContext = require('./store/createRelayContext');\nvar isRelayModernEnvironment = require('./store/isRelayModernEnvironment');\nvar readInlineData = require('./store/readInlineData');\nvar RelayConcreteVariables = require('./store/RelayConcreteVariables');\nvar RelayModernEnvironment = require('./store/RelayModernEnvironment');\nvar RelayModernOperationDescriptor = require('./store/RelayModernOperationDescriptor');\nvar RelayModernRecord = require('./store/RelayModernRecord');\nvar RelayModernSelector = require('./store/RelayModernSelector');\nvar RelayModernStore = require('./store/RelayModernStore');\nvar RelayOperationTracker = require('./store/RelayOperationTracker');\nvar RelayRecordSource = require('./store/RelayRecordSource');\nvar RelayStoreUtils = require('./store/RelayStoreUtils');\nvar ResolverFragments = require('./store/ResolverFragments');\nvar ViewerPattern = require('./store/ViewerPattern');\nvar requestSubscription = require('./subscription/requestSubscription');\nvar createPayloadFor3DField = require('./util/createPayloadFor3DField');\nvar deepFreeze = require('./util/deepFreeze');\nvar getFragmentIdentifier = require('./util/getFragmentIdentifier');\nvar getPaginationMetadata = require('./util/getPaginationMetadata');\nvar getPaginationVariables = require('./util/getPaginationVariables');\nvar getPendingOperationsForFragment = require('./util/getPendingOperationsForFragment');\nvar getRefetchMetadata = require('./util/getRefetchMetadata');\nvar getRelayHandleKey = require('./util/getRelayHandleKey');\nvar getRequestIdentifier = require('./util/getRequestIdentifier');\nvar getValueAtPath = require('./util/getValueAtPath');\nvar handlePotentialSnapshotErrors = require('./util/handlePotentialSnapshotErrors');\nvar isPromise = require('./util/isPromise');\nvar isScalarAndEqual = require('./util/isScalarAndEqual');\nvar recycleNodesInto = require('./util/recycleNodesInto');\nvar RelayConcreteNode = require('./util/RelayConcreteNode');\nvar RelayDefaultHandleKey = require('./util/RelayDefaultHandleKey');\nvar RelayError = require('./util/RelayError');\nvar RelayFeatureFlags = require('./util/RelayFeatureFlags');\nvar RelayProfiler = require('./util/RelayProfiler');\nvar RelayReplaySubject = require('./util/RelayReplaySubject');\nvar stableCopy = require('./util/stableCopy');\nvar withProvidedVariables = require('./util/withProvidedVariables');\n// As early as possible, check for the existence of the JavaScript globals which\n// Relay Runtime relies upon, and produce a clear message if they do not exist.\nif (process.env.NODE_ENV !== \"production\") {\n  var mapStr = typeof Map !== 'function' ? 'Map' : null;\n  var setStr = typeof Set !== 'function' ? 'Set' : null;\n  var promiseStr = typeof Promise !== 'function' ? 'Promise' : null;\n  var objStr = typeof Object.assign !== 'function' ? 'Object.assign' : null;\n  if (mapStr || setStr || promiseStr || objStr) {\n    throw new Error(\"relay-runtime requires \".concat([mapStr, setStr, promiseStr, objStr].filter(Boolean).join(', and '), \" to exist. \") + 'Use a polyfill to provide these for older browsers.');\n  }\n}\n\n/**\n * The public interface to Relay Runtime.\n */\nmodule.exports = {\n  // Core API\n  Environment: RelayModernEnvironment,\n  Network: RelayNetwork,\n  Observable: RelayObservable,\n  QueryResponseCache: RelayQueryResponseCache,\n  RecordSource: RelayRecordSource,\n  Record: RelayModernRecord,\n  ReplaySubject: RelayReplaySubject,\n  Store: RelayModernStore,\n  areEqualSelectors: RelayModernSelector.areEqualSelectors,\n  createFragmentSpecResolver: createFragmentSpecResolver,\n  createNormalizationSelector: RelayModernSelector.createNormalizationSelector,\n  createOperationDescriptor: RelayModernOperationDescriptor.createOperationDescriptor,\n  createReaderSelector: RelayModernSelector.createReaderSelector,\n  createRequestDescriptor: RelayModernOperationDescriptor.createRequestDescriptor,\n  getArgumentValues: RelayStoreUtils.getArgumentValues,\n  getDataIDsFromFragment: RelayModernSelector.getDataIDsFromFragment,\n  getDataIDsFromObject: RelayModernSelector.getDataIDsFromObject,\n  getNode: GraphQLTag.getNode,\n  getFragment: GraphQLTag.getFragment,\n  getInlineDataFragment: GraphQLTag.getInlineDataFragment,\n  getModuleComponentKey: RelayStoreUtils.getModuleComponentKey,\n  getModuleOperationKey: RelayStoreUtils.getModuleOperationKey,\n  getPaginationFragment: GraphQLTag.getPaginationFragment,\n  getPluralSelector: RelayModernSelector.getPluralSelector,\n  getRefetchableFragment: GraphQLTag.getRefetchableFragment,\n  getRequest: GraphQLTag.getRequest,\n  getRequestIdentifier: getRequestIdentifier,\n  getSelector: RelayModernSelector.getSelector,\n  getSelectorsFromObject: RelayModernSelector.getSelectorsFromObject,\n  getSingularSelector: RelayModernSelector.getSingularSelector,\n  getStorageKey: RelayStoreUtils.getStorageKey,\n  getVariablesFromFragment: RelayModernSelector.getVariablesFromFragment,\n  getVariablesFromObject: RelayModernSelector.getVariablesFromObject,\n  getVariablesFromPluralFragment: RelayModernSelector.getVariablesFromPluralFragment,\n  getVariablesFromSingularFragment: RelayModernSelector.getVariablesFromSingularFragment,\n  handlePotentialSnapshotErrors: handlePotentialSnapshotErrors,\n  graphql: GraphQLTag.graphql,\n  isFragment: GraphQLTag.isFragment,\n  isInlineDataFragment: GraphQLTag.isInlineDataFragment,\n  isRequest: GraphQLTag.isRequest,\n  readInlineData: readInlineData,\n  // Declarative mutation API\n  MutationTypes: RelayDeclarativeMutationConfig.MutationTypes,\n  RangeOperations: RelayDeclarativeMutationConfig.RangeOperations,\n  // Extensions\n  DefaultHandlerProvider: RelayDefaultHandlerProvider,\n  ConnectionHandler: ConnectionHandler,\n  MutationHandlers: MutationHandlers,\n  VIEWER_ID: ViewerPattern.VIEWER_ID,\n  VIEWER_TYPE: ViewerPattern.VIEWER_TYPE,\n  // Helpers (can be implemented via the above API)\n  applyOptimisticMutation: applyOptimisticMutation,\n  commitLocalUpdate: commitLocalUpdate,\n  commitMutation: commitMutation,\n  fetchQuery: fetchQuery,\n  fetchQuery_DEPRECATED: fetchQuery_DEPRECATED,\n  isRelayModernEnvironment: isRelayModernEnvironment,\n  requestSubscription: requestSubscription,\n  // Configuration interface for legacy or special uses\n  ConnectionInterface: ConnectionInterface,\n  // Utilities\n  PreloadableQueryRegistry: PreloadableQueryRegistry,\n  RelayProfiler: RelayProfiler,\n  createPayloadFor3DField: createPayloadFor3DField,\n  // INTERNAL-ONLY: These exports might be removed at any point.\n  RelayConcreteNode: RelayConcreteNode,\n  RelayError: RelayError,\n  RelayFeatureFlags: RelayFeatureFlags,\n  DEFAULT_HANDLE_KEY: RelayDefaultHandleKey.DEFAULT_HANDLE_KEY,\n  FRAGMENTS_KEY: RelayStoreUtils.FRAGMENTS_KEY,\n  FRAGMENT_OWNER_KEY: RelayStoreUtils.FRAGMENT_OWNER_KEY,\n  ID_KEY: RelayStoreUtils.ID_KEY,\n  REF_KEY: RelayStoreUtils.REF_KEY,\n  REFS_KEY: RelayStoreUtils.REFS_KEY,\n  ROOT_ID: RelayStoreUtils.ROOT_ID,\n  ROOT_TYPE: RelayStoreUtils.ROOT_TYPE,\n  TYPENAME_KEY: RelayStoreUtils.TYPENAME_KEY,\n  deepFreeze: deepFreeze,\n  generateClientID: generateClientID,\n  generateUniqueClientID: generateUniqueClientID,\n  getRelayHandleKey: getRelayHandleKey,\n  isClientID: isClientID,\n  isPromise: isPromise,\n  isScalarAndEqual: isScalarAndEqual,\n  recycleNodesInto: recycleNodesInto,\n  stableCopy: stableCopy,\n  getFragmentIdentifier: getFragmentIdentifier,\n  getRefetchMetadata: getRefetchMetadata,\n  getPaginationMetadata: getPaginationMetadata,\n  getPaginationVariables: getPaginationVariables,\n  getPendingOperationsForFragment: getPendingOperationsForFragment,\n  getValueAtPath: getValueAtPath,\n  __internal: {\n    ResolverFragments: ResolverFragments,\n    OperationTracker: RelayOperationTracker,\n    createRelayContext: createRelayContext,\n    getOperationVariables: RelayConcreteVariables.getOperationVariables,\n    fetchQuery: fetchQueryInternal.fetchQuery,\n    fetchQueryDeduped: fetchQueryInternal.fetchQueryDeduped,\n    getPromiseForActiveRequest: fetchQueryInternal.getPromiseForActiveRequest,\n    getObservableForActiveRequest: fetchQueryInternal.getObservableForActiveRequest,\n    withProvidedVariables: withProvidedVariables\n  }\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * A unique identifier of the current actor.\n */\nvar invariant = require('invariant');\nvar INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = 'INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE';\nfunction assertInternalActorIdentifier(actorIdentifier) {\n  !(actorIdentifier === INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to use only internal version of the `actorIdentifier`. \"%s\" was provided.', actorIdentifier) : invariant(false) : void 0;\n}\nmodule.exports = {\n  assertInternalActorIdentifier: assertInternalActorIdentifier,\n  getActorIdentifier: function getActorIdentifier(actorID) {\n    return actorID;\n  },\n  getDefaultActorIdentifier: function getDefaultActorIdentifier() {\n    throw new Error('Not Implemented');\n  },\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ACTOR_IDENTIFIER_FIELD_NAME = 'actor_key';\nvar _require = require('./ActorIdentifier'),\n  getActorIdentifier = _require.getActorIdentifier;\nfunction getActorIdentifierFromPayload(payload) {\n  if (payload != null && typeof payload === 'object' && typeof payload[ACTOR_IDENTIFIER_FIELD_NAME] === 'string') {\n    return getActorIdentifier(payload[ACTOR_IDENTIFIER_FIELD_NAME]);\n  }\n}\nmodule.exports = {\n  ACTOR_IDENTIFIER_FIELD_NAME: ACTOR_IDENTIFIER_FIELD_NAME,\n  getActorIdentifierFromPayload: getActorIdentifierFromPayload\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\nvar warning = require(\"fbjs/lib/warning\");\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n        break;\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n        break;\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n  if (!rootField) {\n    return null;\n  }\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n    if (!payload) {\n      return;\n    }\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n    connectionInfo = config.connectionInfo,\n    edgeName = config.edgeName;\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n  var rootField = getRootField(request);\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n  return function (store, data) {\n    var parent = store.get(parentID);\n    if (!parent) {\n      return;\n    }\n    var payload = store.getRootField(rootField);\n    if (!payload) {\n      return;\n    }\n    var serverEdge = payload.getLinkedRecord(edgeName);\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connectionInfo),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var info = _step.value;\n        if (!serverEdge) {\n          continue;\n        }\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n        if (!connection) {\n          continue;\n        }\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n        if (!clientEdge) {\n          continue;\n        }\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n    connectionKeys = config.connectionKeys,\n    pathToConnection = config.pathToConnection,\n    deletedIDFieldName = config.deletedIDFieldName;\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n  var rootField = getRootField(request);\n  if (!rootField) {\n    return null;\n  }\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n    var deleteIDs = [];\n    // the type of data should come from a type parameter associated with ConcreteRequest,\n    // but ConcreteRequest does not contain a type parameter. Hence, we use a FlowFixMe.\n    // $FlowFixMe[incompatible-use] see above\n    var deletedIDField = data[rootField];\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(deletedIDFieldName),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eachField = _step2.value;\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n  if (!parent) {\n    return;\n  }\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n  var recordProxy = parent;\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  }\n  // Should never enter loop except edge cases\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connectionKeys),\n    _step3;\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n  return null;\n}\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('../store/RelayStoreUtils'),\n  getStableStorageKey = _require2.getStableStorageKey;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\nvar RelayRecordProxy = /*#__PURE__*/function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n  var _proto = RelayRecordProxy.prototype;\n  _proto.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n  _proto.getDataID = function getDataID() {\n    return this._dataID;\n  };\n  _proto.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n    !(type != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID) : invariant(false) : void 0;\n    return type;\n  };\n  _proto.getValue = function getValue(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n  _proto.setValue = function setValue(value, name, args) {\n    !isValidLeafValue(value) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value)) : invariant(false) : void 0;\n    return this.setValue__UNSAFE(value, name, args);\n  }\n\n  // This is used in the typesafe updaters.\n  // We already validated that the value has the correct type\n  // so it should be safe to store complex structures as scalar values (custom scalars)\n  ;\n  _proto.setValue__UNSAFE = function setValue__UNSAFE(value, name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    this._mutator.setValue(this._dataID, storageKey, value);\n    return this;\n  };\n  _proto.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n  _proto.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    !(record instanceof RelayRecordProxy) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = record.getDataID();\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n    return this;\n  };\n  _proto.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n    if (!linkedRecord) {\n      var _this$_source$get;\n      var storageKey = getStableStorageKey(name, args);\n      var clientID = generateClientID(this.getDataID(), storageKey);\n      // NOTE: it's possible that a client record for this field exists\n      // but the field itself was unset.\n      linkedRecord = (_this$_source$get = this._source.get(clientID)) !== null && _this$_source$get !== void 0 ? _this$_source$get : this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n    return linkedRecord;\n  };\n  _proto.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n  _proto.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    !Array.isArray(records) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n    return this;\n  };\n  _proto.invalidateRecord = function invalidateRecord() {\n    this._source.markIDForInvalidation(this._dataID);\n  };\n  return RelayRecordProxy;\n}();\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\nmodule.exports = RelayRecordProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\nvar _require = require('../store/RelayRecordState'),\n  EXISTENT = _require.EXISTENT;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * Wrapper API that is an amalgam of the `RelayModernRecord` API and\n * `MutableRecordSource` interface, implementing copy-on-write semantics for records\n * in a record source.\n *\n * Modifications are applied to fresh copies of records:\n * - Records in `base` are never modified.\n * - Modifications cause a fresh version of a record to be created in `sink`.\n *   These sink records contain only modified fields.\n */\nvar RelayRecordSourceMutator = /*#__PURE__*/function () {\n  function RelayRecordSourceMutator(base, sink) {\n    this.__sources = [sink, base];\n    this._base = base;\n    this._sink = sink;\n  }\n\n  /**\n   * **UNSTABLE**\n   * This method is likely to be removed in an upcoming release\n   * and should not be relied upon.\n   * TODO T41593196: Remove unstable_getRawRecordWithChanges\n   */\n  var _proto = RelayRecordSourceMutator.prototype;\n  _proto.unstable_getRawRecordWithChanges = function unstable_getRawRecordWithChanges(dataID) {\n    var baseRecord = this._base.get(dataID);\n    var sinkRecord = this._sink.get(dataID);\n    if (sinkRecord === undefined) {\n      if (baseRecord == null) {\n        return baseRecord;\n      }\n      var nextRecord = RelayModernRecord.clone(baseRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(nextRecord);\n      }\n      return nextRecord;\n    } else if (sinkRecord === null) {\n      return null;\n    } else if (baseRecord != null) {\n      var _nextRecord = RelayModernRecord.update(baseRecord, sinkRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        if (_nextRecord !== baseRecord) {\n          // Prevent mutation of a record from outside the store.\n          RelayModernRecord.freeze(_nextRecord);\n        }\n      }\n      return _nextRecord;\n    } else {\n      var _nextRecord2 = RelayModernRecord.clone(sinkRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(_nextRecord2);\n      }\n      return _nextRecord2;\n    }\n  };\n  _proto._getSinkRecord = function _getSinkRecord(dataID) {\n    var sinkRecord = this._sink.get(dataID);\n    if (!sinkRecord) {\n      var baseRecord = this._base.get(dataID);\n      !baseRecord ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator: Cannot modify non-existent record `%s`.', dataID) : invariant(false) : void 0;\n      sinkRecord = RelayModernRecord.create(dataID, RelayModernRecord.getType(baseRecord));\n      this._sink.set(dataID, sinkRecord);\n    }\n    return sinkRecord;\n  };\n  _proto.copyFields = function copyFields(sourceID, sinkID) {\n    var sinkSource = this._sink.get(sourceID);\n    var baseSource = this._base.get(sourceID);\n    !(sinkSource || baseSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#copyFields(): Cannot copy fields from ' + 'non-existent record `%s`.', sourceID) : invariant(false) : void 0;\n    var sink = this._getSinkRecord(sinkID);\n    if (baseSource) {\n      RelayModernRecord.copyFields(baseSource, sink);\n    }\n    if (sinkSource) {\n      RelayModernRecord.copyFields(sinkSource, sink);\n    }\n  };\n  _proto.copyFieldsFromRecord = function copyFieldsFromRecord(record, sinkID) {\n    var sink = this._getSinkRecord(sinkID);\n    RelayModernRecord.copyFields(record, sink);\n  };\n  _proto.create = function create(dataID, typeName) {\n    !(this._base.getStatus(dataID) !== EXISTENT && this._sink.getStatus(dataID) !== EXISTENT) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#create(): Cannot create a record with id ' + '`%s`, this record already exists.', dataID) : invariant(false) : void 0;\n    var record = RelayModernRecord.create(dataID, typeName);\n    this._sink.set(dataID, record);\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    return this._sink.has(dataID) ? this._sink.getStatus(dataID) : this._base.getStatus(dataID);\n  };\n  _proto.getType = function getType(dataID) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        return RelayModernRecord.getType(record);\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.getValue = function getValue(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var value = RelayModernRecord.getValue(record, storageKey);\n        if (value !== undefined) {\n          return value;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setValue = function setValue(dataID, storageKey, value) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setValue(sinkRecord, storageKey, value);\n  };\n  _proto.getLinkedRecordID = function getLinkedRecordID(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n        if (linkedID !== undefined) {\n          return linkedID;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setLinkedRecordID = function setLinkedRecordID(dataID, storageKey, linkedID) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setLinkedRecordID(sinkRecord, storageKey, linkedID);\n  };\n  _proto.getLinkedRecordIDs = function getLinkedRecordIDs(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n        if (linkedIDs !== undefined) {\n          return linkedIDs;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setLinkedRecordIDs = function setLinkedRecordIDs(dataID, storageKey, linkedIDs) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setLinkedRecordIDs(sinkRecord, storageKey, linkedIDs);\n  };\n  return RelayRecordSourceMutator;\n}();\nmodule.exports = RelayRecordSourceMutator;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\nvar _require = require('../store/RelayRecordState'),\n  EXISTENT = _require.EXISTENT,\n  NONEXISTENT = _require.NONEXISTENT;\nvar _require2 = require('../store/RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID,\n  ROOT_TYPE = _require2.ROOT_TYPE;\nvar _require3 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require3.readUpdatableFragment;\nvar _require4 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require4.readUpdatableQuery;\nvar RelayRecordProxy = require('./RelayRecordProxy');\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A helper for manipulating a `RecordSource` via an imperative/OO-style API.\n */\nvar RelayRecordSourceProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceProxy(mutator, getDataID, handlerProvider, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this._handlerProvider = handlerProvider || null;\n    this._proxies = {};\n    this._getDataID = getDataID;\n    this._invalidatedStore = false;\n    this._idsMarkedForInvalidation = new Set();\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceProxy.prototype;\n  _proto.publishSource = function publishSource(source, fieldPayloads) {\n    var _this = this;\n    var dataIDs = source.getRecordIDs();\n    dataIDs.forEach(function (dataID) {\n      var status = source.getStatus(dataID);\n      if (status === EXISTENT) {\n        var sourceRecord = source.get(dataID);\n        if (sourceRecord) {\n          if (_this.__mutator.getStatus(dataID) !== EXISTENT) {\n            _this.create(dataID, RelayModernRecord.getType(sourceRecord));\n          }\n          _this.__mutator.copyFieldsFromRecord(sourceRecord, dataID);\n        }\n      } else if (status === NONEXISTENT) {\n        _this[\"delete\"](dataID);\n      }\n    });\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(_this, fieldPayload);\n      });\n    }\n  };\n  _proto.create = function create(dataID, typeName) {\n    this.__mutator.create(dataID, typeName);\n    delete this._proxies[dataID];\n    var record = this.get(dataID);\n    // For flow\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#create(): Expected the created record to exist.') : invariant(false) : void 0;\n    return record;\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    !(dataID !== ROOT_ID) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#delete(): Cannot delete the root record.') : invariant(false) : void 0;\n    delete this._proxies[dataID];\n    this.__mutator[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    if (!this._proxies.hasOwnProperty(dataID)) {\n      var status = this.__mutator.getStatus(dataID);\n      if (status === EXISTENT) {\n        this._proxies[dataID] = new RelayRecordProxy(this, this.__mutator, dataID);\n      } else {\n        this._proxies[dataID] = status === NONEXISTENT ? null : undefined;\n      }\n    }\n    return this._proxies[dataID];\n  };\n  _proto.getRoot = function getRoot() {\n    var root = this.get(ROOT_ID);\n    if (!root) {\n      root = this.create(ROOT_ID, ROOT_TYPE);\n    }\n    !(root && root.getType() === ROOT_TYPE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#getRoot(): Expected the source to contain a ' + 'root record, %s.', root == null ? 'no root record found' : \"found a root record of type `\".concat(root.getType(), \"`\")) : invariant(false) : void 0;\n    return root;\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this._invalidatedStore = true;\n  };\n  _proto.isStoreMarkedForInvalidation = function isStoreMarkedForInvalidation() {\n    return this._invalidatedStore;\n  };\n  _proto.markIDForInvalidation = function markIDForInvalidation(dataID) {\n    this._idsMarkedForInvalidation.add(dataID);\n  };\n  _proto.getIDsMarkedForInvalidation = function getIDsMarkedForInvalidation() {\n    return this._idsMarkedForInvalidation;\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceProxy;\n}();\nmodule.exports = RelayRecordSourceProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayStoreUtils'),\n  ROOT_TYPE = _require.ROOT_TYPE,\n  getStorageKey = _require.getStorageKey;\nvar _require2 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require2.readUpdatableFragment;\nvar _require3 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require3.readUpdatableQuery;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A subclass of RecordSourceProxy that provides convenience methods for\n * accessing the root fields of a given query/mutation. These fields accept\n * complex arguments and it can be tedious to re-construct the correct sets of\n * arguments to pass to e.g. `getRoot().getLinkedRecord()`.\n */\nvar RelayRecordSourceSelectorProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceSelectorProxy(mutator, recordSource, readSelector, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this.__recordSource = recordSource;\n    this._readSelector = readSelector;\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceSelectorProxy.prototype;\n  _proto.create = function create(dataID, typeName) {\n    return this.__recordSource.create(dataID, typeName);\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this.__recordSource[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    return this.__recordSource.get(dataID);\n  };\n  _proto.getRoot = function getRoot() {\n    return this.__recordSource.getRoot();\n  };\n  _proto.getOperationRoot = function getOperationRoot() {\n    var root = this.__recordSource.get(this._readSelector.dataID);\n    if (!root) {\n      root = this.__recordSource.create(this._readSelector.dataID, ROOT_TYPE);\n    }\n    return root;\n  };\n  _proto._getRootField = function _getRootField(selector, fieldName, plural) {\n    var field = selector.node.selections.find(function (selection) {\n      return selection.kind === 'LinkedField' && selection.name === fieldName || selection.kind === 'RequiredField' && selection.field.name === fieldName;\n    });\n    if (field && field.kind === 'RequiredField') {\n      field = field.field;\n    }\n    !(field && field.kind === 'LinkedField') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Cannot find root ' + 'field `%s`, no such field is defined on GraphQL document `%s`.', fieldName, selector.node.name) : invariant(false) : void 0;\n    !(field.plural === plural) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Expected root field ' + '`%s` to be %s.', fieldName, plural ? 'plural' : 'singular') : invariant(false) : void 0;\n    return field;\n  };\n  _proto.getRootField = function getRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, false);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecord(storageKey);\n  };\n  _proto.getPluralRootField = function getPluralRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, true);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecords(storageKey);\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this.__recordSource.invalidateStore();\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceSelectorProxy;\n}();\nmodule.exports = RelayRecordSourceSelectorProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require2.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar invariant = require('invariant');\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction applyOptimisticMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  var optimisticUpdater = config.optimisticUpdater;\n  var configs = config.configs,\n    optimisticResponse = config.optimisticResponse,\n    variables = config.variables;\n  var operation = createOperationDescriptor(mutation, variables);\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n  }\n  return environment.applyMutation({\n    operation: operation,\n    response: optimisticResponse,\n    updater: optimisticUpdater\n  });\n}\nmodule.exports = applyOptimisticMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction commitLocalUpdate(environment, updater) {\n  environment.commitUpdate(updater);\n}\nmodule.exports = commitLocalUpdate;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar _require2 = require('../store/ClientID'),\n  generateUniqueClientID = _require2.generateUniqueClientID;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require3 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require3.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar validateMutation = require('./validateMutation');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction commitMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  if (mutation.kind !== 'Request') {\n    throw new Error('commitMutation: Expected mutation to be of type request');\n  }\n  var optimisticResponse = config.optimisticResponse,\n    optimisticUpdater = config.optimisticUpdater,\n    updater = config.updater;\n  var configs = config.configs,\n    cacheConfig = config.cacheConfig,\n    onError = config.onError,\n    onUnsubscribe = config.onUnsubscribe,\n    variables = config.variables,\n    uploadables = config.uploadables;\n  var operation = createOperationDescriptor(mutation, variables, cacheConfig, generateUniqueClientID());\n  // TODO: remove this check after we fix flow.\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'commitMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.') : void 0;\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optimisticResponse instanceof Object) {\n      validateMutation(optimisticResponse, mutation, variables);\n    }\n  }\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n    updater = _RelayDeclarativeMuta.updater;\n  }\n  var errors = [];\n  var subscription = environment.executeMutation({\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribe({\n    next: function next(payload) {\n      var _config$onNext;\n      if (Array.isArray(payload)) {\n        payload.forEach(function (item) {\n          if (item.errors) {\n            errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(item.errors));\n          }\n        });\n      } else {\n        if (payload.errors) {\n          errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(payload.errors));\n        }\n      }\n      (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n    },\n    complete: function complete() {\n      var onCompleted = config.onCompleted;\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, errors.length !== 0 ? errors : null);\n      }\n    },\n    error: onError,\n    unsubscribe: onUnsubscribe\n  });\n  return {\n    dispose: subscription.unsubscribe\n  };\n}\nmodule.exports = commitMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _require = require('../store/RelayStoreUtils'),\n  getArgumentValues = _require.getArgumentValues;\nvar _require2 = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require2.ACTOR_CHANGE,\n  ALIASED_FRAGMENT_SPREAD = _require2.ALIASED_FRAGMENT_SPREAD,\n  ALIASED_INLINE_FRAGMENT_SPREAD = _require2.ALIASED_INLINE_FRAGMENT_SPREAD,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require2.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EDGE_TO_SERVER_OBJECT = _require2.CLIENT_EDGE_TO_SERVER_OBJECT,\n  CLIENT_EXTENSION = _require2.CLIENT_EXTENSION,\n  CONDITION = _require2.CONDITION,\n  DEFER = _require2.DEFER,\n  FLIGHT_FIELD = _require2.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require2.FRAGMENT_SPREAD,\n  INLINE_DATA_FRAGMENT_SPREAD = _require2.INLINE_DATA_FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require2.INLINE_FRAGMENT,\n  LINKED_FIELD = _require2.LINKED_FIELD,\n  MODULE_IMPORT = _require2.MODULE_IMPORT,\n  RELAY_LIVE_RESOLVER = _require2.RELAY_LIVE_RESOLVER,\n  RELAY_RESOLVER = _require2.RELAY_RESOLVER,\n  REQUIRED_FIELD = _require2.REQUIRED_FIELD,\n  SCALAR_FIELD = _require2.SCALAR_FIELD,\n  STREAM = _require2.STREAM;\nvar nonUpdatableKeys = ['id', '__id', '__typename', 'js'];\nfunction createUpdatableProxy(updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers) {\n  var mutableUpdatableProxy = {};\n  updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers);\n  if (process.env.NODE_ENV !== \"production\") {\n    Object.freeze(mutableUpdatableProxy);\n  }\n  // unless ReaderSelection carries more type information, we will never be able\n  // to flowtype mutableUpdatableProxy without a type assertion.\n  // $FlowFixMe[unclear-type]\n  return mutableUpdatableProxy;\n}\nfunction updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers) {\n  var _selection$alias3;\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(selections),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var selection = _step.value;\n      switch (selection.kind) {\n        case LINKED_FIELD:\n          if (selection.plural) {\n            Object.defineProperty(mutableUpdatableProxy, (_selection$alias = selection.alias) !== null && _selection$alias !== void 0 ? _selection$alias : selection.name, {\n              get: createGetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers),\n              set: createSetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy)\n            });\n          } else {\n            Object.defineProperty(mutableUpdatableProxy, (_selection$alias2 = selection.alias) !== null && _selection$alias2 !== void 0 ? _selection$alias2 : selection.name, {\n              get: createGetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers),\n              set: createSetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy)\n            });\n          }\n          break;\n        case SCALAR_FIELD:\n          var scalarFieldName = (_selection$alias3 = selection.alias) !== null && _selection$alias3 !== void 0 ? _selection$alias3 : selection.name;\n          Object.defineProperty(mutableUpdatableProxy, scalarFieldName, {\n            get: function get() {\n              var _selection$args;\n              var newVariables = getArgumentValues((_selection$args = selection.args) !== null && _selection$args !== void 0 ? _selection$args : [], variables);\n              // Flow incorrect assumes that the return value for the get method must match\n              // the set parameter.\n              var value = updatableProxyRootRecord.getValue(selection.name, newVariables\n              // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n              );\n\n              if (value == null) {\n                value = getScalarUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n              }\n              return value;\n            },\n            set: nonUpdatableKeys.includes(selection.name) ? undefined :\n            // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n            function (newValue) {\n              var _selection$args2;\n              var newVariables = getArgumentValues((_selection$args2 = selection.args) !== null && _selection$args2 !== void 0 ? _selection$args2 : [], variables);\n              // $FlowFixMe[prop-missing] Typesafe updaters should prevent people from using untyped values\n              updatableProxyRootRecord.setValue__UNSAFE(newValue, selection.name, newVariables);\n            }\n          });\n          break;\n        case INLINE_FRAGMENT:\n          if (updatableProxyRootRecord.getType() === selection.type) {\n            updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          }\n          break;\n        case CLIENT_EXTENSION:\n          updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          break;\n        case FRAGMENT_SPREAD:\n          // Explicitly ignore\n          break;\n        case CONDITION:\n        case ACTOR_CHANGE:\n        case ALIASED_FRAGMENT_SPREAD:\n        case INLINE_DATA_FRAGMENT_SPREAD:\n        case ALIASED_INLINE_FRAGMENT_SPREAD:\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n        case CLIENT_EDGE_TO_SERVER_OBJECT:\n        case DEFER:\n        case FLIGHT_FIELD:\n        case MODULE_IMPORT:\n        case RELAY_LIVE_RESOLVER:\n        case REQUIRED_FIELD:\n        case STREAM:\n        case RELAY_RESOLVER:\n          // These types of reader nodes are not currently handled.\n          throw new Error('Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.');\n        default:\n          selection.kind;\n          throw new Error('Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.');\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _selection$alias;\n      var _selection$alias2;\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction createSetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy) {\n  return function set(newValue) {\n    var _selection$args3;\n    var newVariables = getArgumentValues((_selection$args3 = selection.args) !== null && _selection$args3 !== void 0 ? _selection$args3 : [], variables);\n    if (newValue == null) {\n      throw new Error('Do not assign null to plural linked fields; assign an empty array instead.');\n    } else {\n      var recordProxies = newValue.map(function (item) {\n        if (item == null) {\n          throw new Error('When assigning an array of items, none of the items should be null or undefined.');\n        }\n        var __id = item.__id;\n        if (__id == null) {\n          throw new Error('The __id field must be present on each item passed to the setter. This indicates a bug in Relay.');\n        }\n        var newValueRecord = recordSourceProxy.get(__id);\n        if (newValueRecord == null) {\n          throw new Error(\"Did not find item with data id \".concat(__id, \" in the store.\"));\n        }\n        return newValueRecord;\n      });\n      updatableProxyRootRecord.setLinkedRecords(recordProxies, selection.name, newVariables);\n    }\n  };\n}\nfunction createSetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy) {\n  return function set(newValue) {\n    var _selection$args4;\n    var newVariables = getArgumentValues((_selection$args4 = selection.args) !== null && _selection$args4 !== void 0 ? _selection$args4 : [], variables);\n    if (newValue == null) {\n      updatableProxyRootRecord.setValue(newValue, selection.name, newVariables);\n    } else {\n      var __id = newValue.__id;\n      if (__id == null) {\n        throw new Error('The __id field must be present on the argument. This indicates a bug in Relay.');\n      }\n      var newValueRecord = recordSourceProxy.get(__id);\n      if (newValueRecord == null) {\n        throw new Error(\"Did not find item with data id \".concat(__id, \" in the store.\"));\n      }\n      updatableProxyRootRecord.setLinkedRecord(newValueRecord, selection.name, newVariables);\n    }\n  };\n}\nfunction createGetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  return function () {\n    var _selection$args5;\n    var newVariables = getArgumentValues((_selection$args5 = selection.args) !== null && _selection$args5 !== void 0 ? _selection$args5 : [], variables);\n    var linkedRecords = updatableProxyRootRecord.getLinkedRecords(selection.name, newVariables);\n    if (linkedRecords === undefined) {\n      linkedRecords = getPluralLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n    }\n    if (linkedRecords != null) {\n      return linkedRecords.map(function (linkedRecord) {\n        if (linkedRecord != null) {\n          var updatableProxy = {};\n          updateProxyFromSelections(updatableProxy, linkedRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          if (process.env.NODE_ENV !== \"production\") {\n            Object.freeze(updatableProxy);\n          }\n          // Flow incorrect assumes that the return value for the get method must match\n          // the set parameter.\n          // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n          return updatableProxy;\n        } else {\n          return linkedRecord;\n        }\n        // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n      });\n    } else {\n      return linkedRecords;\n    }\n  };\n}\nfunction createGetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  return function () {\n    var _selection$args6;\n    var newVariables = getArgumentValues((_selection$args6 = selection.args) !== null && _selection$args6 !== void 0 ? _selection$args6 : [], variables);\n    var linkedRecord = updatableProxyRootRecord.getLinkedRecord(selection.name, newVariables);\n    if (linkedRecord === undefined) {\n      linkedRecord = getLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n    }\n    if (linkedRecord != null) {\n      var updatableProxy = {};\n      updateProxyFromSelections(updatableProxy, linkedRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n      if (process.env.NODE_ENV !== \"production\") {\n        Object.freeze(updatableProxy);\n      }\n      // Flow incorrect assumes that the return value for the get method must match\n      // the set parameter.\n      // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n      return updatableProxy;\n    } else {\n      return linkedRecord;\n    }\n  };\n}\nfunction getLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var handler = _step2.value;\n      if (handler.kind === 'linked') {\n        var newId = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (newId != null) {\n          return recordSourceProxy.get(newId);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nfunction getPluralLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var handler = _step3.value;\n      if (handler.kind === 'pluralLinked') {\n        var newIds = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (newIds != null) {\n          return newIds.map(function (newId) {\n            if (newId != null) {\n              return recordSourceProxy.get(newId);\n            }\n          });\n        }\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nfunction getScalarUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var handler = _step4.value;\n      if (handler.kind === 'scalar') {\n        var value = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n}\nmodule.exports = {\n  createUpdatableProxy: createUpdatableProxy\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getFragment = _require.getFragment;\nvar _require2 = require('../store/RelayModernSelector'),\n  getVariablesFromFragment = _require2.getVariablesFromFragment;\nvar _require3 = require('../store/RelayStoreUtils'),\n  ID_KEY = _require3.ID_KEY;\nvar _require4 = require('./createUpdatableProxy'),\n  createUpdatableProxy = _require4.createUpdatableProxy;\nvar invariant = require('invariant');\n\n// Note: plural fragment references are currently not supported\nfunction readUpdatableFragment(fragment, fragmentReference, proxy, missingFieldHandlers) {\n  var updatableFragment = getFragment(fragment);\n  var fragmentVariables = getVariablesFromFragment(updatableFragment, fragmentReference);\n  // $FlowFixMe[prop-missing] it's there, we just don't include it in the type\n  var id = fragmentReference[ID_KEY];\n  var fragmentRoot = proxy.get(id);\n  !(fragmentRoot != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No record with \".concat(id, \" was found. This likely indicates a problem with Relay.\")) : invariant(false) : void 0;\n  return {\n    // $FlowFixMe[incompatible-call]\n    updatableData: createUpdatableProxy(fragmentRoot, fragmentVariables, updatableFragment.selections, proxy, missingFieldHandlers)\n  };\n}\nmodule.exports = {\n  readUpdatableFragment: readUpdatableFragment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getUpdatableQuery = _require.getUpdatableQuery;\nvar _require2 = require('./createUpdatableProxy'),\n  createUpdatableProxy = _require2.createUpdatableProxy;\nfunction readUpdatableQuery(query, variables, proxy, missingFieldHandlers) {\n  var updatableQuery = getUpdatableQuery(query);\n  return {\n    // $FlowFixMe[incompatible-call]\n    updatableData: createUpdatableProxy(proxy.getRoot(), variables, updatableQuery.fragment.selections, proxy, missingFieldHandlers)\n  };\n}\nmodule.exports = {\n  readUpdatableQuery: readUpdatableQuery\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require.ACTOR_CHANGE,\n  CLIENT_COMPONENT = _require.CLIENT_COMPONENT,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n  CONDITION = _require.CONDITION,\n  DEFER = _require.DEFER,\n  FLIGHT_FIELD = _require.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n  LINKED_FIELD = _require.LINKED_FIELD,\n  LINKED_HANDLE = _require.LINKED_HANDLE,\n  MODULE_IMPORT = _require.MODULE_IMPORT,\n  RELAY_RESOLVER = _require.RELAY_RESOLVER,\n  SCALAR_FIELD = _require.SCALAR_FIELD,\n  SCALAR_HANDLE = _require.SCALAR_HANDLE,\n  STREAM = _require.STREAM,\n  TYPE_DISCRIMINATOR = _require.TYPE_DISCRIMINATOR;\nvar warning = require(\"fbjs/lib/warning\");\n// $FlowFixMe[method-unbinding] added when improving typing for this parameters\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar validateMutation = function validateMutation() {};\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n      deepLoc = deepLoc[key];\n    });\n  };\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {},\n      moduleImportPaths: new Set()\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case CONDITION:\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n      case CLIENT_COMPONENT:\n      case FRAGMENT_SPREAD:\n        validateSelections(optimisticResponse, selection.fragment.selections, context);\n        return;\n      case SCALAR_FIELD:\n      case LINKED_FIELD:\n      case FLIGHT_FIELD:\n        return validateField(optimisticResponse, selection, context);\n      case ACTOR_CHANGE:\n        return validateField(optimisticResponse, selection.linkedField, context);\n      case INLINE_FRAGMENT:\n        var type = selection.type;\n        var isConcreteType = selection.abstractKey == null;\n        validateAbstractKey(context, selection.abstractKey);\n        selection.selections.forEach(function (subselection) {\n          if (isConcreteType && optimisticResponse.__typename !== type) {\n            return;\n          }\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case CLIENT_EXTENSION:\n        selection.selections.forEach(function (subselection) {\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case MODULE_IMPORT:\n        return validateModuleImport(context);\n      case TYPE_DISCRIMINATOR:\n        return validateAbstractKey(context, selection.abstractKey);\n      case RELAY_RESOLVER:\n      case CLIENT_EDGE_TO_CLIENT_OBJECT:\n      case LINKED_HANDLE:\n      case SCALAR_HANDLE:\n      case DEFER:\n      case STREAM:\n        {\n          // TODO(T35864292) - Add missing validations for these types\n          return;\n        }\n      default:\n        selection;\n        return;\n    }\n  };\n  var validateModuleImport = function validateModuleImport(context) {\n    context.moduleImportPaths.add(context.path);\n  };\n  var validateAbstractKey = function validateAbstractKey(context, abstractKey) {\n    if (abstractKey != null) {\n      var path = \"\".concat(context.path, \".\").concat(abstractKey);\n      context.visitedPaths.add(path);\n    }\n  };\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n    switch (field.kind) {\n      case SCALAR_FIELD:\n        if (hasOwnProperty.call(optimisticResponse, fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n        return;\n      case LINKED_FIELD:\n        var selections = field.selections;\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n      case FLIGHT_FIELD:\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n        throw new Error('validateMutation: Flight fields are not compatible with ' + 'optimistic updates, as React does not have the component code ' + 'necessary to process new data on the client. Instead, you ' + 'should update your code to require a full refetch of the Flight ' + 'field so your UI can be updated.');\n    }\n  };\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n      // if it's a module import path we don't have an ast so we cannot validate it\n      if (context.moduleImportPaths.has(path)) {\n        return;\n      }\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n          path: path\n        }));\n      }\n    });\n  };\n}\nmodule.exports = validateMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayObservable = require('./RelayObservable');\n\n/**\n * Converts a FetchFunction into an ExecuteFunction for use by RelayNetwork.\n */\nfunction convertFetch(fn) {\n  return function fetch(request, variables, cacheConfig, uploadables, logRequestInfo) {\n    var result = fn(request, variables, cacheConfig, uploadables, logRequestInfo);\n    // Note: We allow FetchFunction to directly return Error to indicate\n    // a failure to fetch. To avoid handling this special case throughout the\n    // Relay codebase, it is explicitly handled here.\n    if (result instanceof Error) {\n      return RelayObservable.create(function (sink) {\n        return sink.error(result);\n      });\n    }\n    return RelayObservable.from(result);\n  };\n}\nmodule.exports = {\n  convertFetch: convertFetch\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar withProvidedVariables = require('../util/withProvidedVariables');\nvar _require = require('./ConvertToExecuteFunction'),\n  convertFetch = _require.convertFetch;\nvar invariant = require('invariant');\n\n/**\n * Creates an implementation of the `Network` interface defined in\n * `RelayNetworkTypes` given `fetch` and `subscribe` functions.\n */\nfunction create(fetchFn, subscribe) {\n  // Convert to functions that returns RelayObservable.\n  var observeFetch = convertFetch(fetchFn);\n  function execute(request, variables, cacheConfig, uploadables, logRequestInfo) {\n    var operationVariables = withProvidedVariables(variables, request.providedVariables);\n    if (request.operationKind === 'subscription') {\n      !subscribe ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: This network layer does not support Subscriptions. ' + 'To use Subscriptions, provide a custom network layer.') : invariant(false) : void 0;\n      !!uploadables ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: Cannot provide uploadables while subscribing.') : invariant(false) : void 0;\n      return subscribe(request, operationVariables, cacheConfig);\n    }\n    var pollInterval = cacheConfig.poll;\n    if (pollInterval != null) {\n      !!uploadables ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: Cannot provide uploadables while polling.') : invariant(false) : void 0;\n      return observeFetch(request, operationVariables, {\n        force: true\n      }).poll(pollInterval);\n    }\n    return observeFetch(request, operationVariables, cacheConfig, uploadables, logRequestInfo);\n  }\n  return {\n    execute: execute\n  };\n}\nmodule.exports = {\n  create: create\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar isPromise = require('../util/isPromise');\n\n/**\n * A Subscription object is returned from .subscribe(), which can be\n * unsubscribed or checked to see if the resulting subscription has closed.\n */\n\nvar hostReportError = swallowError;\n\n/**\n * Limited implementation of ESObservable, providing the limited set of behavior\n * Relay networking requires.\n *\n * Observables retain the benefit of callbacks which can be called\n * synchronously, avoiding any UI jitter, while providing a compositional API,\n * which simplifies logic and prevents mishandling of errors compared to\n * the direct use of callback functions.\n *\n * ESObservable: https://github.com/tc39/proposal-observable\n */\nvar RelayObservable = /*#__PURE__*/function () {\n  RelayObservable.create = function create(source) {\n    return new RelayObservable(source);\n  }\n\n  // Use RelayObservable.create()\n  ;\n  function RelayObservable(source) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // Early runtime errors for ill-formed sources.\n      if (!source || typeof source !== 'function') {\n        throw new Error('Source must be a Function: ' + String(source));\n      }\n    }\n    this._source = source;\n  }\n\n  /**\n   * When an emitted error event is not handled by an Observer, it is reported\n   * to the host environment (what the ESObservable spec refers to as\n   * \"HostReportErrors()\").\n   *\n   * The default implementation in development rethrows thrown errors, and\n   * logs emitted error events to the console, while in production does nothing\n   * (swallowing unhandled errors).\n   *\n   * Called during application initialization, this method allows\n   * application-specific handling of unhandled errors. Allowing, for example,\n   * integration with error logging or developer tools.\n   *\n   * A second parameter `isUncaughtThrownError` is true when the unhandled error\n   * was thrown within an Observer handler, and false when the unhandled error\n   * was an unhandled emitted event.\n   *\n   *  - Uncaught thrown errors typically represent avoidable errors thrown from\n   *    application code, which should be handled with a try/catch block, and\n   *    usually have useful stack traces.\n   *\n   *  - Unhandled emitted event errors typically represent unavoidable events in\n   *    application flow such as network failure, and may not have useful\n   *    stack traces.\n   */\n  RelayObservable.onUnhandledError = function onUnhandledError(callback) {\n    hostReportError = callback;\n  }\n\n  /**\n   * Accepts various kinds of data sources, and always returns a RelayObservable\n   * useful for accepting the result of a user-provided FetchFunction.\n   */;\n  RelayObservable.from = function from(obj) {\n    return isObservable(obj) ? fromObservable(obj) : isPromise(obj) ? fromPromise(obj) : fromValue(obj);\n  }\n\n  /**\n   * Similar to promise.catch(), observable.catch() handles error events, and\n   * provides an alternative observable to use in it's place.\n   *\n   * If the catch handler throws a new error, it will appear as an error event\n   * on the resulting Observable.\n   */;\n  var _proto = RelayObservable.prototype;\n  _proto[\"catch\"] = function _catch(fn) {\n    var _this = this;\n    return RelayObservable.create(function (sink) {\n      var subscription;\n      _this.subscribe({\n        start: function start(sub) {\n          subscription = sub;\n        },\n        next: sink.next,\n        complete: sink.complete,\n        error: function error(_error2) {\n          try {\n            fn(_error2).subscribe({\n              start: function start(sub) {\n                subscription = sub;\n              },\n              next: sink.next,\n              complete: sink.complete,\n              error: sink.error\n            });\n          } catch (error2) {\n            sink.error(error2, true /* isUncaughtThrownError */);\n          }\n        }\n      });\n\n      return function () {\n        return subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which first yields values from this Observable,\n   * then yields values from the next Observable. This is useful for chaining\n   * together Observables of finite length.\n   */;\n  _proto.concat = function concat(next) {\n    var _this2 = this;\n    return RelayObservable.create(function (sink) {\n      var current;\n      _this2.subscribe({\n        start: function start(subscription) {\n          current = subscription;\n        },\n        next: sink.next,\n        error: sink.error,\n        complete: function complete() {\n          current = next.subscribe(sink);\n        }\n      });\n      return function () {\n        current && current.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the provided Observer is called to perform a side-effects\n   * for all events emitted by the source.\n   *\n   * Any errors that are thrown in the side-effect Observer are unhandled, and\n   * do not affect the source Observable or its Observer.\n   *\n   * This is useful for when debugging your Observables or performing other\n   * side-effects such as logging or performance monitoring.\n   */;\n  _proto[\"do\"] = function _do(observer) {\n    var _this3 = this;\n    return RelayObservable.create(function (sink) {\n      var both = function both(action) {\n        return function () {\n          try {\n            observer[action] && observer[action].apply(observer, arguments);\n          } catch (error) {\n            hostReportError(error, true /* isUncaughtThrownError */);\n          }\n\n          sink[action] && sink[action].apply(sink, arguments);\n        };\n      };\n      return _this3.subscribe({\n        start: both('start'),\n        next: both('next'),\n        error: both('error'),\n        complete: both('complete'),\n        unsubscribe: both('unsubscribe')\n      });\n    });\n  }\n\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the finally callback is performed after completion,\n   * whether normal or due to error or unsubscription.\n   *\n   * This is useful for cleanup such as resource finalization.\n   */;\n  _proto[\"finally\"] = function _finally(fn) {\n    var _this4 = this;\n    return RelayObservable.create(function (sink) {\n      var subscription = _this4.subscribe(sink);\n      return function () {\n        subscription.unsubscribe();\n        fn();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which is identical to this one, unless this\n   * Observable completes before yielding any values, in which case the new\n   * Observable will yield the values from the alternate Observable.\n   *\n   * If this Observable does yield values, the alternate is never subscribed to.\n   *\n   * This is useful for scenarios where values may come from multiple sources\n   * which should be tried in order, i.e. from a cache before a network.\n   */;\n  _proto.ifEmpty = function ifEmpty(alternate) {\n    var _this5 = this;\n    return RelayObservable.create(function (sink) {\n      var hasValue = false;\n      var current = _this5.subscribe({\n        next: function next(value) {\n          hasValue = true;\n          sink.next(value);\n        },\n        error: sink.error,\n        complete: function complete() {\n          if (hasValue) {\n            sink.complete();\n          } else {\n            current = alternate.subscribe(sink);\n          }\n        }\n      });\n      return function () {\n        current.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Observable's primary API: returns an unsubscribable Subscription to the\n   * source of this Observable.\n   *\n   * Note: A sink may be passed directly to .subscribe() as its observer,\n   * allowing for easily composing Observables.\n   */;\n  _proto.subscribe = function subscribe(observer) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // Early runtime errors for ill-formed observers.\n      if (!observer || typeof observer !== 'object') {\n        throw new Error('Observer must be an Object with callbacks: ' + String(observer));\n      }\n    }\n    return _subscribe(this._source, observer);\n  }\n\n  /**\n   * Returns a new Observerable where each value has been transformed by\n   * the mapping function.\n   */;\n  _proto.map = function map(fn) {\n    var _this6 = this;\n    return RelayObservable.create(function (sink) {\n      var subscription = _this6.subscribe({\n        complete: sink.complete,\n        error: sink.error,\n        next: function next(value) {\n          try {\n            var mapValue = fn(value);\n            sink.next(mapValue);\n          } catch (error) {\n            sink.error(error, true /* isUncaughtThrownError */);\n          }\n        }\n      });\n\n      return function () {\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable where each value is replaced with a new Observable\n   * by the mapping function, the results of which returned as a single\n   * merged Observable.\n   */;\n  _proto.mergeMap = function mergeMap(fn) {\n    var _this7 = this;\n    return RelayObservable.create(function (sink) {\n      var subscriptions = [];\n      function start(subscription) {\n        this._sub = subscription;\n        subscriptions.push(subscription);\n      }\n      function complete() {\n        subscriptions.splice(subscriptions.indexOf(this._sub), 1);\n        if (subscriptions.length === 0) {\n          sink.complete();\n        }\n      }\n      _this7.subscribe({\n        start: start,\n        next: function next(value) {\n          try {\n            if (!sink.closed) {\n              RelayObservable.from(fn(value)).subscribe({\n                start: start,\n                next: sink.next,\n                error: sink.error,\n                complete: complete\n              });\n            }\n          } catch (error) {\n            sink.error(error, true /* isUncaughtThrownError */);\n          }\n        },\n\n        error: sink.error,\n        complete: complete\n      });\n      return function () {\n        subscriptions.forEach(function (sub) {\n          return sub.unsubscribe();\n        });\n        subscriptions.length = 0;\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which first mirrors this Observable, then when it\n   * completes, waits for `pollInterval` milliseconds before re-subscribing to\n   * this Observable again, looping in this manner until unsubscribed.\n   *\n   * The returned Observable never completes.\n   */;\n  _proto.poll = function poll(pollInterval) {\n    var _this8 = this;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof pollInterval !== 'number' || pollInterval <= 0) {\n        throw new Error('RelayObservable: Expected pollInterval to be positive, got: ' + pollInterval);\n      }\n    }\n    return RelayObservable.create(function (sink) {\n      var subscription;\n      var timeout;\n      var poll = function poll() {\n        subscription = _this8.subscribe({\n          next: sink.next,\n          error: sink.error,\n          complete: function complete() {\n            timeout = setTimeout(poll, pollInterval);\n          }\n        });\n      };\n      poll();\n      return function () {\n        clearTimeout(timeout);\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a Promise which resolves when this Observable yields a first value\n   * or when it completes with no value.\n   *\n   * NOTE: The source Observable is *NOT* canceled when the returned Promise\n   * resolves. The Observable is always run to completion.\n   */;\n  _proto.toPromise = function toPromise() {\n    var _this9 = this;\n    return new Promise(function (resolve, reject) {\n      var resolved = false;\n      _this9.subscribe({\n        next: function next(val) {\n          if (!resolved) {\n            resolved = true;\n            resolve(val);\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n  return RelayObservable;\n}(); // Use declarations to teach Flow how to check isObservable.\nfunction isObservable(obj) {\n  return typeof obj === 'object' && obj !== null && typeof obj.subscribe === 'function';\n}\nfunction fromObservable(obj) {\n  return obj instanceof RelayObservable ? obj : RelayObservable.create(function (sink) {\n    return obj.subscribe(sink);\n  });\n}\nfunction fromPromise(promise) {\n  return RelayObservable.create(function (sink) {\n    // Since sink methods do not throw, the resulting Promise can be ignored.\n    promise.then(function (value) {\n      sink.next(value);\n      sink.complete();\n    }, sink.error);\n  });\n}\nfunction fromValue(value) {\n  return RelayObservable.create(function (sink) {\n    sink.next(value);\n    sink.complete();\n  });\n}\nfunction _subscribe(source, observer) {\n  var closed = false;\n  var cleanup;\n\n  // Ideally we would simply describe a `get closed()` method on the Sink and\n  // Subscription objects below, however not all flow environments we expect\n  // Relay to be used within will support property getters, and many minifier\n  // tools still do not support ES5 syntax. Instead, we can use defineProperty.\n  var withClosed = function withClosed(obj) {\n    return Object.defineProperty(obj, 'closed', {\n      get: function get() {\n        return closed;\n      }\n    });\n  };\n  function doCleanup() {\n    if (cleanup) {\n      if (cleanup.unsubscribe) {\n        cleanup.unsubscribe();\n      } else {\n        try {\n          cleanup();\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        }\n      }\n\n      cleanup = undefined;\n    }\n  }\n\n  // Create a Subscription.\n  var subscription = withClosed({\n    unsubscribe: function unsubscribe() {\n      if (!closed) {\n        closed = true;\n\n        // Tell Observer that unsubscribe was called.\n        try {\n          observer.unsubscribe && observer.unsubscribe(subscription);\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  });\n\n  // Tell Observer that observation is about to begin.\n  try {\n    observer.start && observer.start(subscription);\n  } catch (error) {\n    hostReportError(error, true /* isUncaughtThrownError */);\n  }\n\n  // If closed already, don't bother creating a Sink.\n  if (closed) {\n    return subscription;\n  }\n\n  // Create a Sink respecting subscription state and cleanup.\n  var sink = withClosed({\n    next: function next(value) {\n      if (!closed && observer.next) {\n        try {\n          observer.next(value);\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        }\n      }\n    },\n    error: function error(_error3, isUncaughtThrownError) {\n      if (closed || !observer.error) {\n        closed = true;\n        hostReportError(_error3, isUncaughtThrownError || false);\n        doCleanup();\n      } else {\n        closed = true;\n        try {\n          observer.error(_error3);\n        } catch (error2) {\n          hostReportError(error2, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    },\n    complete: function complete() {\n      if (!closed) {\n        closed = true;\n        try {\n          observer.complete && observer.complete();\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  });\n\n  // If anything goes wrong during observing the source, handle the error.\n  try {\n    cleanup = source(sink);\n  } catch (error) {\n    sink.error(error, true /* isUncaughtThrownError */);\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // Early runtime errors for ill-formed returned cleanup.\n    if (cleanup !== undefined && typeof cleanup !== 'function' && (!cleanup || typeof cleanup.unsubscribe !== 'function')) {\n      throw new Error('Returned cleanup function which cannot be called: ' + String(cleanup));\n    }\n  }\n\n  // If closed before the source function existed, cleanup now.\n  if (closed) {\n    doCleanup();\n  }\n  return subscription;\n}\nfunction swallowError(_error, _isUncaughtThrownError) {\n  // do nothing.\n}\nif (process.env.NODE_ENV !== \"production\") {\n  // Default implementation of HostReportErrors() in development builds.\n  // Can be replaced by the host application environment.\n  RelayObservable.onUnhandledError(function (error, isUncaughtThrownError) {\n    if (typeof fail === 'function') {\n      // In test environments (Jest), fail() immediately fails the current test.\n      fail(String(error));\n    } else if (isUncaughtThrownError) {\n      // Rethrow uncaught thrown errors on the next frame to avoid breaking\n      // current logic.\n      setTimeout(function () {\n        throw error;\n      });\n    } else if (typeof console !== 'undefined') {\n      // Otherwise, log the unhandled error for visibility.\n      // eslint-disable-next-line no-console\n      console.error('RelayObservable: Unhandled Error', error);\n    }\n  });\n}\nmodule.exports = RelayObservable;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar stableCopy = require('../util/stableCopy');\nvar invariant = require('invariant');\n/**\n * A cache for storing query responses, featuring:\n * - `get` with TTL\n * - cache size limiting, with least-recently *updated* entries purged first\n */\nvar RelayQueryResponseCache = /*#__PURE__*/function () {\n  function RelayQueryResponseCache(_ref) {\n    var size = _ref.size,\n      ttl = _ref.ttl;\n    !(size > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max cache size to be > 0, got ' + '`%s`.', size) : invariant(false) : void 0;\n    !(ttl > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max ttl to be > 0, got `%s`.', ttl) : invariant(false) : void 0;\n    this._responses = new Map();\n    this._size = size;\n    this._ttl = ttl;\n  }\n  var _proto = RelayQueryResponseCache.prototype;\n  _proto.clear = function clear() {\n    this._responses.clear();\n  };\n  _proto.get = function get(queryID, variables) {\n    var _this = this;\n    var cacheKey = getCacheKey(queryID, variables);\n    this._responses.forEach(function (response, key) {\n      if (!isCurrent(response.fetchTime, _this._ttl)) {\n        _this._responses[\"delete\"](key);\n      }\n    });\n    var response = this._responses.get(cacheKey);\n    if (response == null) {\n      return null;\n    }\n    if (Array.isArray(response.payload)) {\n      return response.payload.map(function (payload) {\n        return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, payload), {}, {\n          extensions: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, payload.extensions), {}, {\n            cacheTimestamp: response.fetchTime\n          })\n        });\n      });\n    }\n    return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, response.payload), {}, {\n      extensions: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, response.payload.extensions), {}, {\n        cacheTimestamp: response.fetchTime\n      })\n    });\n  };\n  _proto.set = function set(queryID, variables, payload) {\n    var fetchTime = Date.now();\n    var cacheKey = getCacheKey(queryID, variables);\n    this._responses[\"delete\"](cacheKey); // deletion resets key ordering\n    this._responses.set(cacheKey, {\n      fetchTime: fetchTime,\n      payload: payload\n    });\n    // Purge least-recently updated key when max size reached\n    if (this._responses.size > this._size) {\n      var firstKey = this._responses.keys().next();\n      if (!firstKey.done) {\n        this._responses[\"delete\"](firstKey.value);\n      }\n    }\n  };\n  return RelayQueryResponseCache;\n}();\nfunction getCacheKey(queryID, variables) {\n  return JSON.stringify(stableCopy({\n    queryID: queryID,\n    variables: variables\n  }));\n}\n\n/**\n * Determine whether a response fetched at `fetchTime` is still valid given\n * some `ttl`.\n */\nfunction isCurrent(fetchTime, ttl) {\n  return fetchTime + ttl >= Date.now();\n}\nmodule.exports = RelayQueryResponseCache;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar generateID = require('../util/generateID');\n\n/**\n * Wraps the network with logging to ensure that network requests are\n * always logged. Relying on each network callsite to be wrapped is\n * untenable and will eventually lead to holes in the logging.\n * NOTE: This function takes an environment instance, because Relay\n * devtools will mutate the `env.__log` method, and the devtools rely\n * on it to receive network events.\n */\nfunction wrapNetworkWithLogObserver(env, network) {\n  return {\n    execute: function execute(params, variables, cacheConfig, uploadables) {\n      var networkRequestId = generateID();\n      var logObserver = {\n        start: function start(subscription) {\n          env.__log({\n            name: 'network.start',\n            networkRequestId: networkRequestId,\n            params: params,\n            variables: variables,\n            cacheConfig: cacheConfig\n          });\n        },\n        next: function next(response) {\n          env.__log({\n            name: 'network.next',\n            networkRequestId: networkRequestId,\n            response: response\n          });\n        },\n        error: function error(_error) {\n          env.__log({\n            name: 'network.error',\n            networkRequestId: networkRequestId,\n            error: _error\n          });\n        },\n        complete: function complete() {\n          env.__log({\n            name: 'network.complete',\n            networkRequestId: networkRequestId\n          });\n        },\n        unsubscribe: function unsubscribe() {\n          env.__log({\n            name: 'network.unsubscribe',\n            networkRequestId: networkRequestId\n          });\n        }\n      };\n      var logRequestInfo = function logRequestInfo(info) {\n        env.__log({\n          name: 'network.info',\n          networkRequestId: networkRequestId,\n          info: info\n        });\n      };\n      return network.execute(params, variables, cacheConfig, uploadables, logRequestInfo)[\"do\"](logObserver);\n    }\n  };\n}\nmodule.exports = wrapNetworkWithLogObserver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n// The type of a graphql`...` tagged template expression.\n\n/**\n * Runtime function to correspond to the `graphql` tagged template function.\n * All calls to this function should be transformed by the plugin.\n */\nfunction graphql(strings) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'graphql: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `graphql`. Note also that there cannot be ' + 'a space between graphql and the backtick that follows.') : invariant(false) : void 0;\n}\nfunction getNode(taggedNode) {\n  var node = taggedNode;\n  if (typeof node === 'function') {\n    node = node();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayGraphQLTag: node `%s` unexpectedly wrapped in a function.', node.kind === 'Fragment' ? node.name : node.operation.name) : void 0;\n  } else if (node[\"default\"]) {\n    // Support for languages that work (best) with ES6 modules, such as TypeScript.\n    node = node[\"default\"];\n  }\n  return node;\n}\nfunction isFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.FRAGMENT;\n}\nfunction isRequest(node) {\n  var request = getNode(node);\n  return typeof request === 'object' && request !== null && request.kind === RelayConcreteNode.REQUEST;\n}\nfunction isUpdatableQuery(node) {\n  var updatableQuery = getNode(node);\n  return typeof updatableQuery === 'object' && updatableQuery !== null && updatableQuery.kind === RelayConcreteNode.UPDATABLE_QUERY;\n}\nfunction isInlineDataFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.INLINE_DATA_FRAGMENT;\n}\nfunction getFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\nfunction getPaginationFragment(taggedNode) {\n  var _fragment$metadata;\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.refetch;\n  var connection = refetch === null || refetch === void 0 ? void 0 : refetch.connection;\n  if (refetch === null || typeof refetch !== 'object' || connection === null || typeof connection !== 'object') {\n    return null;\n  }\n  return fragment;\n}\nfunction getRefetchableFragment(taggedNode) {\n  var _fragment$metadata2;\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata2 = fragment.metadata) === null || _fragment$metadata2 === void 0 ? void 0 : _fragment$metadata2.refetch;\n  if (refetch === null || typeof refetch !== 'object') {\n    return null;\n  }\n  return fragment;\n}\nfunction getRequest(taggedNode) {\n  var request = getNode(taggedNode);\n  !isRequest(request) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(request)) : invariant(false) : void 0;\n  return request;\n}\nfunction getUpdatableQuery(taggedNode) {\n  var updatableQuery = getNode(taggedNode);\n  !isUpdatableQuery(updatableQuery) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(updatableQuery)) : invariant(false) : void 0;\n  return updatableQuery;\n}\nfunction getInlineDataFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isInlineDataFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected an inline data fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\nmodule.exports = {\n  getFragment: getFragment,\n  getNode: getNode,\n  getPaginationFragment: getPaginationFragment,\n  getRefetchableFragment: getRefetchableFragment,\n  getRequest: getRequest,\n  getUpdatableQuery: getUpdatableQuery,\n  getInlineDataFragment: getInlineDataFragment,\n  graphql: graphql,\n  isFragment: isFragment,\n  isRequest: isRequest,\n  isUpdatableQuery: isUpdatableQuery,\n  isInlineDataFragment: isInlineDataFragment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar PreloadableQueryRegistry = /*#__PURE__*/function () {\n  function PreloadableQueryRegistry() {\n    this._preloadableQueries = new Map();\n    this._callbacks = new Map();\n  }\n  var _proto = PreloadableQueryRegistry.prototype;\n  _proto.set = function set(key, value) {\n    this._preloadableQueries.set(key, value);\n    var callbacks = this._callbacks.get(key);\n    if (callbacks != null) {\n      callbacks.forEach(function (cb) {\n        try {\n          cb(value);\n        } catch (e) {\n          // We do *not* want to throw in this tick, as this callback is executed\n          // while a query is required for the very first time.\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      });\n    }\n  };\n  _proto.get = function get(key) {\n    return this._preloadableQueries.get(key);\n  };\n  _proto.onLoad = function onLoad(key, callback) {\n    var _this$_callbacks$get;\n    var callbacks = (_this$_callbacks$get = this._callbacks.get(key)) !== null && _this$_callbacks$get !== void 0 ? _this$_callbacks$get : new Set();\n    callbacks.add(callback);\n    var dispose = function dispose() {\n      callbacks[\"delete\"](callback);\n    };\n    this._callbacks.set(key, callbacks);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.clear = function clear() {\n    this._preloadableQueries.clear();\n  };\n  return PreloadableQueryRegistry;\n}();\nvar preloadableQueryRegistry = new PreloadableQueryRegistry();\nmodule.exports = preloadableQueryRegistry;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar _require = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require.createOperationDescriptor;\nvar handlePotentialSnapshotErrors = require('../util/handlePotentialSnapshotErrors');\nvar fetchQueryInternal = require('./fetchQueryInternal');\nvar _require2 = require('./GraphQLTag'),\n  getRequest = _require2.getRequest;\nvar invariant = require('invariant');\n\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. Subscribe optionally takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subsctiption) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * Request Promise:\n * ================\n * The obervable can be converted to a Promise with .toPromise(), which will\n * resolve to a snapshot of the query data when the first response is received\n * from the server.\n *\n * ```\n * fetchQuery(environment, query, variables).toPromise().then((data) => {\n *   // ...\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will NOT retain query data, meaning that it is not guaranteed\n * that the fetched data will remain in the Relay store after the request has\n * completed.\n * If you need to retain the query data outside of the network request,\n * you need to use `environment.retain()`.\n *\n *\n * Cancelling requests:\n * ====================\n * If the disposable returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const disposable = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * disposable.dispose();\n * ```\n * NOTE: When using .toPromise(), the request cannot be cancelled.\n */\nfunction fetchQuery(environment, query, variables, options) {\n  var _options$fetchPolicy;\n  var queryNode = getRequest(query);\n  !(queryNode.params.operationKind === 'query') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'fetchQuery: Expected query operation') : invariant(false) : void 0;\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])({\n    force: true\n  }, options === null || options === void 0 ? void 0 : options.networkCacheConfig);\n  var operation = createOperationDescriptor(queryNode, variables, networkCacheConfig);\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'network-only';\n  function readData(snapshot) {\n    handlePotentialSnapshotErrors(environment, snapshot.missingRequiredFields, snapshot.relayResolverErrors);\n    /* $FlowFixMe[incompatible-return] we assume readData returns the right\n     * data just having written it from network or checked availability. */\n    return snapshot.data;\n  }\n  switch (fetchPolicy) {\n    case 'network-only':\n      {\n        return getNetworkObservable(environment, operation).map(readData);\n      }\n    case 'store-or-network':\n      {\n        if (environment.check(operation).status === 'available') {\n          return RelayObservable.from(environment.lookup(operation.fragment)).map(readData);\n        }\n        return getNetworkObservable(environment, operation).map(readData);\n      }\n    default:\n      fetchPolicy;\n      throw new Error('fetchQuery: Invalid fetchPolicy ' + fetchPolicy);\n  }\n}\nfunction getNetworkObservable(environment, operation) {\n  return fetchQueryInternal.fetchQuery(environment, operation).map(function () {\n    return environment.lookup(operation.fragment);\n  });\n}\nmodule.exports = fetchQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar Observable = require('../network/RelayObservable');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar RelayReplaySubject = require('../util/RelayReplaySubject');\nvar invariant = require('invariant');\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar requestCachesByEnvironment = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\n\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. subscribe() takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subscription) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will not retain any query data outside the scope of the\n * request, which means it is not guaranteed that it won't be garbage\n * collected after the request completes.\n * If you need to retain data, you can do so manually with environment.retain().\n *\n * Cancelling requests:\n * ====================\n * If the subscription returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const subscription = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * subscription.unsubscribe();\n * ```\n */\nfunction fetchQuery(environment, operation) {\n  return fetchQueryDeduped(environment, operation.request.identifier, function () {\n    return environment.execute({\n      operation: operation\n    });\n  });\n}\n\n/**\n * Low-level implementation details of `fetchQuery`.\n *\n * `fetchQueryDeduped` can also be used to share a single cache for\n * requests that aren't using `fetchQuery` directly (e.g. because they don't\n * have an `OperationDescriptor` when they are called).\n */\nfunction fetchQueryDeduped(environment, identifier, fetchFn) {\n  return Observable.create(function (sink) {\n    var requestCache = getRequestCache(environment);\n    var cachedRequest = requestCache.get(identifier);\n    if (!cachedRequest) {\n      fetchFn()[\"finally\"](function () {\n        return requestCache[\"delete\"](identifier);\n      }).subscribe({\n        start: function start(subscription) {\n          cachedRequest = {\n            identifier: identifier,\n            subject: new RelayReplaySubject(),\n            subjectForInFlightStatus: new RelayReplaySubject(),\n            subscription: subscription,\n            promise: null\n          };\n          requestCache.set(identifier, cachedRequest);\n        },\n        next: function next(response) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.next(response);\n          cachedReq.subjectForInFlightStatus.next(response);\n        },\n        error: function error(_error) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.error(_error);\n          cachedReq.subjectForInFlightStatus.error(_error);\n        },\n        complete: function complete() {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.complete();\n          cachedReq.subjectForInFlightStatus.complete();\n        },\n        unsubscribe: function unsubscribe(subscription) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.unsubscribe();\n          cachedReq.subjectForInFlightStatus.unsubscribe();\n        }\n      });\n    }\n    !(cachedRequest != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] fetchQueryDeduped: Expected `start` to be ' + 'called synchronously') : invariant(false) : void 0;\n    return getObservableForCachedRequest(requestCache, cachedRequest).subscribe(sink);\n  });\n}\n\n/**\n * @private\n */\nfunction getObservableForCachedRequest(requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subject.subscribe(sink);\n    return function () {\n      subscription.unsubscribe();\n      var cachedRequestInstance = requestCache.get(cachedRequest.identifier);\n      if (cachedRequestInstance) {\n        var requestSubscription = cachedRequestInstance.subscription;\n        if (requestSubscription != null && cachedRequestInstance.subject.getObserverCount() === 0) {\n          requestSubscription.unsubscribe();\n          requestCache[\"delete\"](cachedRequest.identifier);\n        }\n      }\n    };\n  });\n}\n\n/**\n * @private\n */\nfunction getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subjectForInFlightStatus.subscribe({\n      error: sink.error,\n      next: function next(response) {\n        if (!environment.isRequestActive(cachedRequest.identifier)) {\n          sink.complete();\n          return;\n        }\n        sink.next();\n      },\n      complete: sink.complete,\n      unsubscribe: sink.complete\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  });\n}\n\n/**\n * If a request is active for the given query, variables and environment,\n * this function will return a Promise that will resolve when that request\n * stops being active (receives a final payload), and the data has been saved\n * to the store.\n * If no request is active, null will be returned\n */\nfunction getPromiseForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  if (RelayFeatureFlags.USE_REACT_CACHE) {\n    var existing = cachedRequest.promise;\n    if (existing) {\n      return existing;\n    }\n  }\n  var promise = new Promise(function (resolve, reject) {\n    var resolveOnNext = false;\n    getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest).subscribe({\n      complete: resolve,\n      error: reject,\n      next: function next(response) {\n        /*\n         * The underlying `RelayReplaySubject` will synchronously replay events\n         * as soon as we subscribe, but since we want the *next* asynchronous\n         * one, we'll ignore them until the replay finishes.\n         */\n        if (resolveOnNext) {\n          resolve(response);\n        }\n      }\n    });\n    resolveOnNext = true;\n  });\n  if (RelayFeatureFlags.USE_REACT_CACHE) {\n    // React Suspense should get thrown the same promise each time, so we cache it.\n    // However, the promise gets resolved on each payload, so subsequently we need\n    // to provide a new fresh promise that isn't already resolved. (When the feature\n    // flag is off we do this in QueryResource.)\n    cachedRequest.promise = promise;\n    var cleanup = function cleanup() {\n      cachedRequest.promise = null;\n    };\n    promise.then(cleanup, cleanup);\n  }\n  return promise;\n}\n\n/**\n * If there is a pending request for the given query, returns an Observable of\n * *all* its responses. Existing responses are published synchronously and\n * subsequent responses are published asynchronously. Returns null if there is\n * no pending request. This is similar to fetchQuery() except that it will not\n * issue a fetch if there isn't already one pending.\n */\nfunction getObservableForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  return getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest);\n}\n\n/**\n * @private\n */\nfunction getRequestCache(environment) {\n  var cached = requestCachesByEnvironment.get(environment);\n  if (cached != null) {\n    return cached;\n  }\n  var requestCache = new Map();\n  requestCachesByEnvironment.set(environment, requestCache);\n  return requestCache;\n}\n\n/**\n * @private\n */\nfunction getCachedRequest(requestCache, identifier) {\n  var cached = requestCache.get(identifier);\n  !(cached != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] getCachedRequest: Expected request to be cached') : invariant(false) : void 0;\n  return cached;\n}\nmodule.exports = {\n  fetchQuery: fetchQuery,\n  fetchQueryDeduped: fetchQueryDeduped,\n  getPromiseForActiveRequest: getPromiseForActiveRequest,\n  getObservableForActiveRequest: getObservableForActiveRequest\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require.createOperationDescriptor;\nvar _require2 = require('./GraphQLTag'),\n  getRequest = _require2.getRequest;\n\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\n\nfunction fetchQuery_DEPRECATED(environment, taggedNode, variables, cacheConfig) {\n  var query = getRequest(taggedNode);\n  if (query.params.operationKind !== 'query') {\n    throw new Error('fetchQuery: Expected query operation');\n  }\n  var operation = createOperationDescriptor(query, variables, cacheConfig);\n  return environment.execute({\n    operation: operation\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\nmodule.exports = fetchQuery_DEPRECATED;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('../util/StringInterner'),\n  intern = _require.intern;\nvar PREFIX = 'client:';\nfunction generateClientID(id, storageKey, index) {\n  var internedId = RelayFeatureFlags.STRING_INTERN_LEVEL <= 0 ? id : intern(id, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n  var key = internedId + ':' + storageKey;\n  if (index != null) {\n    key += ':' + index;\n  }\n  if (key.indexOf(PREFIX) !== 0) {\n    key = PREFIX + key;\n  }\n  return key;\n}\nfunction isClientID(id) {\n  return id.indexOf(PREFIX) === 0;\n}\nvar localID = 0;\nfunction generateUniqueClientID() {\n  return \"\".concat(PREFIX, \"local:\").concat(localID++);\n}\n\n// Client objects backed by Relay Resolvers may not be able to provide a\n// globally unique ID, so we provide a namespace.\nfunction generateClientObjectClientID(typename, localId, index) {\n  var key = \"\".concat(PREFIX).concat(typename, \":\").concat(localId);\n  if (index != null) {\n    key += ':' + index;\n  }\n  return key;\n}\nmodule.exports = {\n  generateClientID: generateClientID,\n  generateClientObjectClientID: generateClientObjectClientID,\n  generateUniqueClientID: generateUniqueClientID,\n  isClientID: isClientID\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\nvar getOperation = require('../util/getOperation');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('./ClientID'),\n  isClientID = _require.isClientID;\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\nvar cloneRelayScalarHandleSourceField = require('./cloneRelayScalarHandleSourceField');\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayRecordState'),\n  EXISTENT = _require3.EXISTENT,\n  UNKNOWN = _require3.UNKNOWN;\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require4 = require('./TypeID'),\n  TYPE_SCHEMA_TYPE = _require4.TYPE_SCHEMA_TYPE,\n  generateTypeID = _require4.generateTypeID;\nvar invariant = require('invariant');\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n  CONDITION = RelayConcreteNode.CONDITION,\n  CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n  CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = RelayConcreteNode.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  DEFER = RelayConcreteNode.DEFER,\n  FLIGHT_FIELD = RelayConcreteNode.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n  LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n  LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n  MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n  RELAY_RESOLVER = RelayConcreteNode.RELAY_RESOLVER,\n  SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n  SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n  STREAM = RelayConcreteNode.STREAM,\n  TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR;\nvar ROOT_ID = RelayStoreUtils.ROOT_ID,\n  getModuleOperationKey = RelayStoreUtils.getModuleOperationKey,\n  getStorageKey = RelayStoreUtils.getStorageKey,\n  getArgumentValues = RelayStoreUtils.getArgumentValues;\n\n/**\n * Synchronously check whether the records required to fulfill the given\n * `selector` are present in `source`.\n *\n * If a field is missing, it uses the provided handlers to attempt to substitute\n * data. The `target` will store all records that are modified because of a\n * successful substitution.\n *\n * If all records are present, returns `true`, otherwise `false`.\n */\nfunction check(getSourceForActor, getTargetForActor, defaultActorIdentifier, selector, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var checker = new DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents);\n  return checker.check(node, dataID);\n}\n\n/**\n * @private\n */\nvar DataChecker = /*#__PURE__*/function () {\n  function DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n    this._getSourceForActor = getSourceForActor;\n    this._getTargetForActor = getTargetForActor;\n    this._getDataID = getDataID;\n    this._source = getSourceForActor(defaultActorIdentifier);\n    this._mutatorRecordSourceProxyCache = new Map();\n    var _this$_getMutatorAndR = this._getMutatorAndRecordProxyForActor(defaultActorIdentifier),\n      mutator = _this$_getMutatorAndR[0],\n      recordSourceProxy = _this$_getMutatorAndR[1];\n    this._mostRecentlyInvalidatedAt = null;\n    this._handlers = handlers;\n    this._mutator = mutator;\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._recordSourceProxy = recordSourceProxy;\n    this._recordWasMissing = false;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n  var _proto = DataChecker.prototype;\n  _proto._getMutatorAndRecordProxyForActor = function _getMutatorAndRecordProxyForActor(actorIdentifier) {\n    var tuple = this._mutatorRecordSourceProxyCache.get(actorIdentifier);\n    if (tuple == null) {\n      var target = this._getTargetForActor(actorIdentifier);\n      var mutator = new RelayRecordSourceMutator(this._getSourceForActor(actorIdentifier), target);\n      var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, undefined, this._handlers);\n      tuple = [mutator, recordSourceProxy];\n      this._mutatorRecordSourceProxyCache.set(actorIdentifier, tuple);\n    }\n    return tuple;\n  };\n  _proto.check = function check(node, dataID) {\n    this._assignClientAbstractTypes(node);\n    this._traverse(node, dataID);\n    return this._recordWasMissing === true ? {\n      status: 'missing',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    } : {\n      status: 'available',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    };\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._handleMissing = function _handleMissing() {\n    this._recordWasMissing = true;\n  };\n  _proto._handleMissingScalarField = function _handleMissingScalarField(field, dataID) {\n    if (field.name === 'id' && field.alias == null && isClientID(dataID)) {\n      return undefined;\n    }\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var handler = _step.value;\n        if (handler.kind === 'scalar') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue !== undefined) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    this._handleMissing();\n  };\n  _proto._handleMissingLinkField = function _handleMissingLinkField(field, dataID) {\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var handler = _step2.value;\n        if (handler.kind === 'linked') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue !== undefined && (newValue === null || this._mutator.getStatus(newValue) === EXISTENT)) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    this._handleMissing();\n  };\n  _proto._handleMissingPluralLinkField = function _handleMissingPluralLinkField(field, dataID) {\n    var _this = this;\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var handler = _step3.value;\n        if (handler.kind === 'pluralLinked') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue != null) {\n            var allItemsKnown = newValue.every(function (linkedID) {\n              return linkedID != null && _this._mutator.getStatus(linkedID) === EXISTENT;\n            });\n            if (allItemsKnown) {\n              return newValue;\n            }\n          } else if (newValue === null) {\n            return null;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    this._handleMissing();\n  };\n  _proto._traverse = function _traverse(node, dataID) {\n    var status = this._mutator.getStatus(dataID);\n    if (status === UNKNOWN) {\n      this._handleMissing();\n    }\n    if (status === EXISTENT) {\n      var record = this._source.get(dataID);\n      var invalidatedAt = RelayModernRecord.getInvalidationEpoch(record);\n      if (invalidatedAt != null) {\n        this._mostRecentlyInvalidatedAt = this._mostRecentlyInvalidatedAt != null ? Math.max(this._mostRecentlyInvalidatedAt, invalidatedAt) : invalidatedAt;\n      }\n      this._traverseSelections(node.selections, dataID);\n    }\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, dataID) {\n    var _this2 = this;\n    selections.forEach(function (selection) {\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n          _this2._checkScalar(selection, dataID);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this2._checkPluralLink(selection, dataID);\n          } else {\n            _this2._checkLink(selection, dataID);\n          }\n          break;\n        case ACTOR_CHANGE:\n          _this2._checkActorChange(selection.linkedField, dataID);\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(_this2._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            _this2._traverseSelections(selection.selections, dataID);\n          }\n          break;\n        case INLINE_FRAGMENT:\n          {\n            var _abstractKey = selection.abstractKey;\n            if (_abstractKey == null) {\n              // concrete type refinement: only check data if the type exactly matches\n              var typeName = _this2._mutator.getType(dataID);\n              if (typeName === selection.type) {\n                _this2._traverseSelections(selection.selections, dataID);\n              }\n            } else {\n              // Abstract refinement: check data depending on whether the type\n              // conforms to the interface/union or not:\n              // - Type known to _not_ implement the interface: don't check the selections.\n              // - Type is known _to_ implement the interface: check selections.\n              // - Unknown whether the type implements the interface: don't check the selections\n              //   and treat the data as missing; we do this because the Relay Compiler\n              //   guarantees that the type discriminator will always be fetched.\n              var _recordType = _this2._mutator.getType(dataID);\n              !(_recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n              var _typeID = generateTypeID(_recordType);\n              var _implementsInterface = _this2._mutator.getValue(_typeID, _abstractKey);\n              if (_implementsInterface === true) {\n                _this2._traverseSelections(selection.selections, dataID);\n              } else if (_implementsInterface == null) {\n                // unsure if the type implements the interface: data is\n                // missing so don't bother reading the fragment\n                _this2._handleMissing();\n              } // else false: known to not implement the interface\n            }\n\n            break;\n          }\n        case LINKED_HANDLE:\n          {\n            // Handles have no selections themselves; traverse the original field\n            // where the handle was set-up instead.\n            var handleField = cloneRelayHandleSourceField(selection, selections, _this2._variables);\n            if (handleField.plural) {\n              _this2._checkPluralLink(handleField, dataID);\n            } else {\n              _this2._checkLink(handleField, dataID);\n            }\n            break;\n          }\n        case SCALAR_HANDLE:\n          {\n            var _handleField = cloneRelayScalarHandleSourceField(selection, selections, _this2._variables);\n            _this2._checkScalar(_handleField, dataID);\n            break;\n          }\n        case MODULE_IMPORT:\n          _this2._checkModuleImport(selection, dataID);\n          break;\n        case DEFER:\n        case STREAM:\n          _this2._traverseSelections(selection.selections, dataID);\n          break;\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this2._variables;\n          _this2._variables = getLocalVariables(_this2._variables, selection.fragment.argumentDefinitions, selection.args);\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n          _this2._variables = prevVariables;\n          break;\n        case CLIENT_EXTENSION:\n          var recordWasMissing = _this2._recordWasMissing;\n          _this2._traverseSelections(selection.selections, dataID);\n          _this2._recordWasMissing = recordWasMissing;\n          break;\n        case TYPE_DISCRIMINATOR:\n          var abstractKey = selection.abstractKey;\n          var recordType = _this2._mutator.getType(dataID);\n          !(recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n          var typeID = generateTypeID(recordType);\n          var implementsInterface = _this2._mutator.getValue(typeID, abstractKey);\n          if (implementsInterface == null) {\n            // unsure if the type implements the interface: data is\n            // missing\n            _this2._handleMissing();\n          } // else: if it does or doesn't implement, we don't need to check or skip anything else\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            _this2._checkFlightField(selection, dataID);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case CLIENT_COMPONENT:\n          if (_this2._shouldProcessClientComponents === false) {\n            break;\n          }\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n          break;\n        case RELAY_RESOLVER:\n          _this2._checkResolver(selection, dataID);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          _this2._checkResolver(selection.backingField, dataID);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    });\n  };\n  _proto._checkResolver = function _checkResolver(resolver, dataID) {\n    if (resolver.fragment) {\n      this._traverseSelections([resolver.fragment], dataID);\n    }\n  };\n  _proto._checkModuleImport = function _checkModuleImport(moduleImport, dataID) {\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using `@module`.') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = this._mutator.getValue(dataID, operationKey);\n    if (operationReference == null) {\n      if (operationReference === undefined) {\n        this._handleMissing();\n      }\n      return;\n    }\n    var normalizationRootNode = operationLoader.get(operationReference);\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n      this._traverse(operation, dataID);\n      this._variables = prevVariables;\n    } else {\n      // If the fragment is not available, we assume that the data cannot have been\n      // processed yet and must therefore be missing.\n      this._handleMissing();\n    }\n  };\n  _proto._checkScalar = function _checkScalar(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = this._mutator.getValue(dataID, storageKey);\n    if (fieldValue === undefined) {\n      fieldValue = this._handleMissingScalarField(field, dataID);\n      if (fieldValue !== undefined) {\n        this._mutator.setValue(dataID, storageKey, fieldValue);\n      }\n    }\n  };\n  _proto._checkLink = function _checkLink(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n    if (linkedID === undefined) {\n      linkedID = this._handleMissingLinkField(field, dataID);\n      if (linkedID != null) {\n        this._mutator.setLinkedRecordID(dataID, storageKey, linkedID);\n      } else if (linkedID === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n    if (linkedID != null) {\n      this._traverse(field, linkedID);\n    }\n  };\n  _proto._checkPluralLink = function _checkPluralLink(field, dataID) {\n    var _this3 = this;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = this._mutator.getLinkedRecordIDs(dataID, storageKey);\n    if (linkedIDs === undefined) {\n      linkedIDs = this._handleMissingPluralLinkField(field, dataID);\n      if (linkedIDs != null) {\n        this._mutator.setLinkedRecordIDs(dataID, storageKey, linkedIDs);\n      } else if (linkedIDs === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n    if (linkedIDs) {\n      linkedIDs.forEach(function (linkedID) {\n        if (linkedID != null) {\n          _this3._traverse(field, linkedID);\n        }\n      });\n    }\n  };\n  _proto._checkActorChange = function _checkActorChange(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var record = this._source.get(dataID);\n    var tuple = record != null ? RelayModernRecord.getActorLinkedRecordID(record, storageKey) : record;\n    if (tuple == null) {\n      if (tuple === undefined) {\n        this._handleMissing();\n      }\n    } else {\n      var actorIdentifier = tuple[0],\n        linkedID = tuple[1];\n      var prevSource = this._source;\n      var prevMutator = this._mutator;\n      var prevRecordSourceProxy = this._recordSourceProxy;\n      var _this$_getMutatorAndR2 = this._getMutatorAndRecordProxyForActor(actorIdentifier),\n        mutator = _this$_getMutatorAndR2[0],\n        recordSourceProxy = _this$_getMutatorAndR2[1];\n      this._source = this._getSourceForActor(actorIdentifier);\n      this._mutator = mutator;\n      this._recordSourceProxy = recordSourceProxy;\n      this._assignClientAbstractTypes(field);\n      this._traverse(field, linkedID);\n      this._source = prevSource;\n      this._mutator = prevMutator;\n      this._recordSourceProxy = prevRecordSourceProxy;\n    }\n  };\n  _proto._checkFlightField = function _checkFlightField(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n    if (linkedID == null) {\n      if (linkedID === undefined) {\n        this._handleMissing();\n        return;\n      }\n      return;\n    }\n    var tree = this._mutator.getValue(linkedID, RelayStoreReactFlightUtils.REACT_FLIGHT_TREE_STORAGE_KEY);\n    var reachableExecutableDefinitions = this._mutator.getValue(linkedID, RelayStoreReactFlightUtils.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY);\n    if (tree == null || !Array.isArray(reachableExecutableDefinitions)) {\n      this._handleMissing();\n      return;\n    }\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using ' + 'React Flight.') : invariant(false) : void 0;\n    // In Flight, the variables that are in scope for reachable executable\n    // definitions aren't the same as what's in scope for the outer query.\n    var prevVariables = this._variables;\n    // $FlowFixMe[incompatible-cast]\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(reachableExecutableDefinitions),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var definition = _step4.value;\n        this._variables = definition.variables;\n        var normalizationRootNode = operationLoader.get(definition.module);\n        if (normalizationRootNode != null) {\n          var operation = getOperation(normalizationRootNode);\n          this._traverseSelections(operation.selections, ROOT_ID);\n        } else {\n          // If the fragment is not available, we assume that the data cannot have\n          // been processed yet and must therefore be missing.\n          this._handleMissing();\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    this._variables = prevVariables;\n  }\n\n  // For abstract types defined in the client schema extension, we won't be\n  // getting `__is<AbstractType>` hints from the server. To handle this, the\n  // compiler attaches additional metadata on the normalization artifact,\n  // which we need to record into the store.\n  ;\n  _proto._assignClientAbstractTypes = function _assignClientAbstractTypes(node) {\n    var clientAbstractTypes = node.clientAbstractTypes;\n    if (clientAbstractTypes != null) {\n      for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {\n        var abstractType = _Object$keys[_i];\n        var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(clientAbstractTypes[abstractType]),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var concreteType = _step5.value;\n            var typeID = generateTypeID(concreteType);\n            if (this._source.get(typeID) == null) {\n              this._mutator.create(typeID, TYPE_SCHEMA_TYPE);\n            }\n            if (this._mutator.getValue(typeID, abstractType) == null) {\n              this._mutator.setValue(typeID, abstractType, true);\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  };\n  return DataChecker;\n}();\nmodule.exports = {\n  check: check\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar generateID = require('../util/generateID');\nvar getOperation = require('../util/getOperation');\nvar RelayError = require('../util/RelayError');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar stableCopy = require('../util/stableCopy');\nvar withDuration = require('../util/withDuration');\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID;\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require3.createNormalizationSelector,\n  createReaderSelector = _require3.createReaderSelector;\nvar RelayRecordSource = require('./RelayRecordSource');\nvar RelayResponseNormalizer = require('./RelayResponseNormalizer');\nvar _require4 = require('./RelayStoreUtils'),\n  ROOT_TYPE = _require4.ROOT_TYPE,\n  TYPENAME_KEY = _require4.TYPENAME_KEY,\n  getStorageKey = _require4.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction execute(config) {\n  return new Executor(config);\n}\n\n/**\n * Coordinates the execution of a query, handling network callbacks\n * including optimistic payloads, standard payloads, resolution of match\n * dependencies, etc.\n */\nvar Executor = /*#__PURE__*/function () {\n  function Executor(_ref2) {\n    var _this = this;\n    var actorIdentifier = _ref2.actorIdentifier,\n      getDataID = _ref2.getDataID,\n      getPublishQueue = _ref2.getPublishQueue,\n      getStore = _ref2.getStore,\n      isClientPayload = _ref2.isClientPayload,\n      operation = _ref2.operation,\n      operationExecutions = _ref2.operationExecutions,\n      operationLoader = _ref2.operationLoader,\n      operationTracker = _ref2.operationTracker,\n      optimisticConfig = _ref2.optimisticConfig,\n      _reactFlightPayloadDeserializer = _ref2.reactFlightPayloadDeserializer,\n      reactFlightServerErrorHandler = _ref2.reactFlightServerErrorHandler,\n      scheduler = _ref2.scheduler,\n      shouldProcessClientComponents = _ref2.shouldProcessClientComponents,\n      sink = _ref2.sink,\n      source = _ref2.source,\n      treatMissingFieldsAsNull = _ref2.treatMissingFieldsAsNull,\n      updater = _ref2.updater,\n      log = _ref2.log;\n    (0, _defineProperty2[\"default\"])(this, \"_deserializeReactFlightPayloadWithLogging\", function (tree) {\n      var reactFlightPayloadDeserializer = _this._reactFlightPayloadDeserializer;\n      !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected reactFlightPayloadDeserializer to be available when calling _deserializeReactFlightPayloadWithLogging.') : invariant(false) : void 0;\n      var _withDuration = withDuration(function () {\n          return reactFlightPayloadDeserializer(tree);\n        }),\n        duration = _withDuration[0],\n        result = _withDuration[1];\n      _this._log({\n        name: 'execute.flight.payload_deserialize',\n        executeId: _this._executeId,\n        operationName: _this._operation.request.node.params.name,\n        duration: duration\n      });\n      return result;\n    });\n    this._actorIdentifier = actorIdentifier;\n    this._getDataID = getDataID;\n    this._treatMissingFieldsAsNull = treatMissingFieldsAsNull;\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults = new Map();\n    this._log = log;\n    this._executeId = generateID();\n    this._nextSubscriptionId = 0;\n    this._operation = operation;\n    this._operationExecutions = operationExecutions;\n    this._operationLoader = operationLoader;\n    this._operationTracker = operationTracker;\n    this._operationUpdateEpochs = new Map();\n    this._optimisticUpdates = null;\n    this._pendingModulePayloadsCount = 0;\n    this._getPublishQueue = getPublishQueue;\n    this._scheduler = scheduler;\n    this._sink = sink;\n    this._source = new Map();\n    this._state = 'started';\n    this._getStore = getStore;\n    this._subscriptions = new Map();\n    this._updater = updater;\n    this._isClientPayload = isClientPayload === true;\n    this._reactFlightPayloadDeserializer = _reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._isSubscriptionOperation = this._operation.request.node.params.operationKind === 'subscription';\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n    this._retainDisposables = new Map();\n    this._seenActors = new Set();\n    this._completeFns = [];\n    var id = this._nextSubscriptionId++;\n    source.subscribe({\n      complete: function complete() {\n        return _this._complete(id);\n      },\n      error: function error(_error2) {\n        return _this._error(_error2);\n      },\n      next: function next(response) {\n        try {\n          _this._next(id, response);\n        } catch (error) {\n          sink.error(error);\n        }\n      },\n      start: function start(subscription) {\n        var _this$_operation$requ;\n        _this._start(id, subscription);\n        _this._log({\n          name: 'execute.start',\n          executeId: _this._executeId,\n          params: _this._operation.request.node.params,\n          variables: _this._operation.request.variables,\n          cacheConfig: (_this$_operation$requ = _this._operation.request.cacheConfig) !== null && _this$_operation$requ !== void 0 ? _this$_operation$requ : {}\n        });\n      }\n    });\n    if (optimisticConfig != null) {\n      this._processOptimisticResponse(optimisticConfig.response != null ? {\n        data: optimisticConfig.response\n      } : null, optimisticConfig.updater, false);\n    }\n  }\n\n  // Cancel any pending execution tasks and mark the executor as completed.\n  var _proto = Executor.prototype;\n  _proto.cancel = function cancel() {\n    var _this2 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    this._state = 'completed';\n    this._operationExecutions[\"delete\"](this._operation.request.identifier);\n    if (this._subscriptions.size !== 0) {\n      this._subscriptions.forEach(function (sub) {\n        return sub.unsubscribe();\n      });\n      this._subscriptions.clear();\n    }\n    var optimisticUpdates = this._optimisticUpdates;\n    if (optimisticUpdates !== null) {\n      this._optimisticUpdates = null;\n      optimisticUpdates.forEach(function (update) {\n        return _this2._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      // OK: run revert on cancel\n      this._runPublishQueue();\n    }\n    this._incrementalResults.clear();\n    if (this._asyncStoreUpdateDisposable != null) {\n      this._asyncStoreUpdateDisposable.dispose();\n      this._asyncStoreUpdateDisposable = null;\n    }\n    this._completeFns = [];\n    this._completeOperationTracker();\n    this._disposeRetainedData();\n  };\n  _proto._updateActiveState = function _updateActiveState() {\n    var activeState;\n    switch (this._state) {\n      case 'started':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'loading_incremental':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'completed':\n        {\n          activeState = 'inactive';\n          break;\n        }\n      case 'loading_final':\n        {\n          activeState = this._pendingModulePayloadsCount > 0 ? 'active' : 'inactive';\n          break;\n        }\n      default:\n        this._state;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid executor state.') : invariant(false) : void 0;\n    }\n    this._operationExecutions.set(this._operation.request.identifier, activeState);\n  };\n  _proto._schedule = function _schedule(task) {\n    var _this3 = this;\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      var id = this._nextSubscriptionId++;\n      RelayObservable.create(function (sink) {\n        var cancellationToken = scheduler.schedule(function () {\n          try {\n            task();\n            sink.complete();\n          } catch (error) {\n            sink.error(error);\n          }\n        });\n        return function () {\n          return scheduler.cancel(cancellationToken);\n        };\n      }).subscribe({\n        complete: function complete() {\n          return _this3._complete(id);\n        },\n        error: function error(_error3) {\n          return _this3._error(_error3);\n        },\n        start: function start(subscription) {\n          return _this3._start(id, subscription);\n        }\n      });\n    } else {\n      task();\n    }\n  };\n  _proto._complete = function _complete(id) {\n    this._subscriptions[\"delete\"](id);\n    if (this._subscriptions.size === 0) {\n      this.cancel();\n      this._sink.complete();\n      this._log({\n        name: 'execute.complete',\n        executeId: this._executeId\n      });\n    }\n  };\n  _proto._error = function _error(error) {\n    this.cancel();\n    this._sink.error(error);\n    this._log({\n      name: 'execute.error',\n      executeId: this._executeId,\n      error: error\n    });\n  };\n  _proto._start = function _start(id, subscription) {\n    this._subscriptions.set(id, subscription);\n    this._updateActiveState();\n  }\n\n  // Handle a raw GraphQL response.\n  ;\n  _proto._next = function _next(_id, response) {\n    var _this4 = this;\n    this._schedule(function () {\n      var _withDuration2 = withDuration(function () {\n          _this4._handleNext(response);\n          _this4._maybeCompleteSubscriptionOperationTracking();\n        }),\n        duration = _withDuration2[0];\n      _this4._log({\n        name: 'execute.next',\n        executeId: _this4._executeId,\n        response: response,\n        duration: duration\n      });\n    });\n  };\n  _proto._handleErrorResponse = function _handleErrorResponse(responses) {\n    var _this5 = this;\n    var results = [];\n    responses.forEach(function (response) {\n      if (response.data === null && response.extensions != null && !response.hasOwnProperty('errors')) {\n        // Skip extensions-only payloads\n        return;\n      } else if (response.data == null) {\n        // Error if any other payload in the batch is missing data, regardless of whether\n        // it had `errors` or not.\n        var errors = response.hasOwnProperty('errors') && response.errors != null ? response.errors : null;\n        var messages = errors ? errors.map(function (_ref3) {\n          var message = _ref3.message;\n          return message;\n        }).join('\\n') : '(No errors)';\n        var error = RelayError.create('RelayNetwork', 'No data returned for operation `' + _this5._operation.request.node.params.name + '`, got error(s):\\n' + messages + '\\n\\nSee the error `source` property for more information.');\n        error.source = {\n          errors: errors,\n          operation: _this5._operation.request.node,\n          variables: _this5._operation.request.variables\n        };\n        // In V8, Error objects keep the closure scope chain alive until the\n        // err.stack property is accessed.\n        error.stack;\n        throw error;\n      } else {\n        var responseWithData = response;\n        results.push(responseWithData);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * This method return boolean to indicate if the optimistic\n   * response has been handled\n   */;\n  _proto._handleOptimisticResponses = function _handleOptimisticResponses(responses) {\n    var _response$extensions;\n    if (responses.length > 1) {\n      if (responses.some(function (responsePart) {\n        var _responsePart$extensi;\n        return ((_responsePart$extensi = responsePart.extensions) === null || _responsePart$extensi === void 0 ? void 0 : _responsePart$extensi.isOptimistic) === true;\n      })) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Optimistic responses cannot be batched.') : invariant(false) : void 0;\n      }\n      return false;\n    }\n    var response = responses[0];\n    var isOptimistic = ((_response$extensions = response.extensions) === null || _response$extensions === void 0 ? void 0 : _response$extensions.isOptimistic) === true;\n    if (isOptimistic && this._state !== 'started') {\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic payload received after server payload.') : invariant(false) : void 0;\n    }\n    if (isOptimistic) {\n      this._processOptimisticResponse(response, null, this._treatMissingFieldsAsNull);\n      this._sink.next(response);\n      return true;\n    }\n    return false;\n  };\n  _proto._handleNext = function _handleNext(response) {\n    if (this._state === 'completed') {\n      return;\n    }\n    this._seenActors.clear();\n    var responses = Array.isArray(response) ? response : [response];\n    var responsesWithData = this._handleErrorResponse(responses);\n    if (responsesWithData.length === 0) {\n      // no results with data, nothing to process\n      // this can occur with extensions-only payloads\n      var isFinal = responses.some(function (x) {\n        var _x$extensions;\n        return ((_x$extensions = x.extensions) === null || _x$extensions === void 0 ? void 0 : _x$extensions.is_final) === true;\n      });\n      if (isFinal) {\n        this._state = 'loading_final';\n        this._updateActiveState();\n        this._incrementalPayloadsPending = false;\n      }\n      this._sink.next(response);\n      return;\n    }\n\n    // Next, handle optimistic responses\n    var isOptimistic = this._handleOptimisticResponses(responsesWithData);\n    if (isOptimistic) {\n      return;\n    }\n    var _partitionGraphQLResp = partitionGraphQLResponses(responsesWithData),\n      nonIncrementalResponses = _partitionGraphQLResp[0],\n      incrementalResponses = _partitionGraphQLResp[1];\n    var hasNonIncrementalResponses = nonIncrementalResponses.length > 0;\n\n    // In theory this doesn't preserve the ordering of the batch.\n    // The idea is that a batch is always:\n    //  * at most one non-incremental payload\n    //  * followed by zero or more incremental payloads\n    // The non-incremental payload can appear if the server sends a batch\n    // with the initial payload followed by some early-to-resolve incremental\n    // payloads (although, can that even happen?)\n    if (hasNonIncrementalResponses) {\n      // For subscriptions, to avoid every new payload from overwriting existing\n      // data from previous payloads, assign a unique rootID for every new\n      // non-incremental payload.\n      if (this._isSubscriptionOperation) {\n        var nextID = generateUniqueClientID();\n        this._operation = {\n          request: this._operation.request,\n          fragment: createReaderSelector(this._operation.fragment.node, nextID, this._operation.fragment.variables, this._operation.fragment.owner),\n          root: createNormalizationSelector(this._operation.root.node, nextID, this._operation.root.variables)\n        };\n      }\n      var payloadFollowups = this._processResponses(nonIncrementalResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n    if (incrementalResponses.length > 0) {\n      var _payloadFollowups = this._processIncrementalResponses(incrementalResponses);\n      this._processPayloadFollowups(_payloadFollowups);\n    }\n    if (this._isSubscriptionOperation) {\n      // We attach the id to allow the `requestSubscription` to read from the store using\n      // the current id in its `onNext` callback\n      if (responsesWithData[0].extensions == null) {\n        // $FlowFixMe[cannot-write]\n        responsesWithData[0].extensions = {\n          __relay_subscription_root_id: this._operation.fragment.dataID\n        };\n      } else {\n        responsesWithData[0].extensions.__relay_subscription_root_id = this._operation.fragment.dataID;\n      }\n    }\n\n    // OK: run once after each new payload\n    // If we have non-incremental responses, we passing `this._operation` to\n    // the publish queue here, which will later be passed to the store (via\n    // notify) to indicate that this operation caused the store to update\n    var updatedOwners = this._runPublishQueue(hasNonIncrementalResponses ? this._operation : undefined);\n    if (hasNonIncrementalResponses) {\n      if (this._incrementalPayloadsPending) {\n        this._retainData();\n      }\n    }\n    this._updateOperationTracker(updatedOwners);\n    this._sink.next(response);\n  };\n  _proto._processOptimisticResponse = function _processOptimisticResponse(response, updater, treatMissingFieldsAsNull) {\n    var _this6 = this;\n    !(this._optimisticUpdates === null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: environment.execute: only support one optimistic response per ' + 'execute.') : invariant(false) : void 0;\n    if (response == null && updater == null) {\n      return;\n    }\n    var optimisticUpdates = [];\n    if (response) {\n      var payload = normalizeResponse(response, this._operation.root, ROOT_TYPE, {\n        actorIdentifier: this._actorIdentifier,\n        getDataID: this._getDataID,\n        path: [],\n        reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n        reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n        shouldProcessClientComponents: this._shouldProcessClientComponents,\n        treatMissingFieldsAsNull: treatMissingFieldsAsNull\n      });\n      validateOptimisticResponsePayload(payload);\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: payload,\n        updater: updater\n      });\n      this._processOptimisticFollowups(payload, optimisticUpdates);\n    } else if (updater) {\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: {\n          errors: null,\n          fieldPayloads: null,\n          incrementalPlaceholders: null,\n          followupPayloads: null,\n          source: RelayRecordSource.create(),\n          isFinal: false\n        },\n        updater: updater\n      });\n    }\n    this._optimisticUpdates = optimisticUpdates;\n    optimisticUpdates.forEach(function (update) {\n      return _this6._getPublishQueueAndSaveActor().applyUpdate(update);\n    });\n    // OK: only called on construction and when receiving an optimistic payload from network,\n    // which doesn't fall-through to the regular next() handling\n    this._runPublishQueue();\n  };\n  _proto._processOptimisticFollowups = function _processOptimisticFollowups(payload, optimisticUpdates) {\n    if (payload.followupPayloads && payload.followupPayloads.length) {\n      var followupPayloads = payload.followupPayloads;\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(followupPayloads),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var followupPayload = _step.value;\n          switch (followupPayload.kind) {\n            case 'ModuleImportPayload':\n              var operationLoader = this._expectOperationLoader();\n              var operation = operationLoader.get(followupPayload.operationReference);\n              if (operation == null) {\n                this._processAsyncOptimisticModuleImport(followupPayload);\n              } else {\n                var moduleImportOptimisticUpdates = this._processOptimisticModuleImport(operation, followupPayload);\n                optimisticUpdates.push.apply(optimisticUpdates, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n              }\n              break;\n            case 'ActorPayload':\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected optimistic ActorPayload. These updates are not supported.') : void 0;\n              break;\n            default:\n              followupPayload;\n              !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`. when processing optimistic updates.', followupPayload.kind) : invariant(false) : void 0;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n\n  /**\n   * Normalize Data for @module payload, and actor-specific payload\n   */;\n  _proto._normalizeFollowupPayload = function _normalizeFollowupPayload(followupPayload, normalizationNode) {\n    var variables;\n    if (normalizationNode.kind === 'SplitOperation' && followupPayload.kind === 'ModuleImportPayload') {\n      variables = getLocalVariables(followupPayload.variables, normalizationNode.argumentDefinitions, followupPayload.args);\n    } else {\n      variables = followupPayload.variables;\n    }\n    var selector = createNormalizationSelector(normalizationNode, followupPayload.dataID, variables);\n    return normalizeResponse({\n      data: followupPayload.data\n    }, selector, followupPayload.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: followupPayload.path,\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n  };\n  _proto._processOptimisticModuleImport = function _processOptimisticModuleImport(normalizationRootNode, moduleImportPayload) {\n    var operation = getOperation(normalizationRootNode);\n    var optimisticUpdates = [];\n    var modulePayload = this._normalizeFollowupPayload(moduleImportPayload, operation);\n    validateOptimisticResponsePayload(modulePayload);\n    optimisticUpdates.push({\n      operation: this._operation,\n      payload: modulePayload,\n      updater: null\n    });\n    this._processOptimisticFollowups(modulePayload, optimisticUpdates);\n    return optimisticUpdates;\n  };\n  _proto._processAsyncOptimisticModuleImport = function _processAsyncOptimisticModuleImport(moduleImportPayload) {\n    var _this7 = this;\n    // $FlowFixMe[unused-promise]\n    this._expectOperationLoader().load(moduleImportPayload.operationReference).then(function (operation) {\n      if (operation == null || _this7._state !== 'started') {\n        return;\n      }\n      var moduleImportOptimisticUpdates = _this7._processOptimisticModuleImport(operation, moduleImportPayload);\n      moduleImportOptimisticUpdates.forEach(function (update) {\n        return _this7._getPublishQueueAndSaveActor().applyUpdate(update);\n      });\n      if (_this7._optimisticUpdates == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected ModuleImport optimistic ' + 'update in operation %s.' + _this7._operation.request.node.params.name) : void 0;\n      } else {\n        var _this$_optimisticUpda;\n        (_this$_optimisticUpda = _this7._optimisticUpdates).push.apply(_this$_optimisticUpda, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n        // OK: always have to run() after an module import resolves async\n        _this7._runPublishQueue();\n      }\n    });\n  };\n  _proto._processResponses = function _processResponses(responses) {\n    var _this8 = this;\n    if (this._optimisticUpdates !== null) {\n      this._optimisticUpdates.forEach(function (update) {\n        _this8._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._optimisticUpdates = null;\n    }\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults.clear();\n    this._source.clear();\n    return responses.map(function (payloadPart) {\n      var relayPayload = normalizeResponse(payloadPart, _this8._operation.root, ROOT_TYPE, {\n        actorIdentifier: _this8._actorIdentifier,\n        getDataID: _this8._getDataID,\n        path: [],\n        reactFlightPayloadDeserializer: _this8._reactFlightPayloadDeserializer != null ? _this8._deserializeReactFlightPayloadWithLogging : null,\n        reactFlightServerErrorHandler: _this8._reactFlightServerErrorHandler,\n        treatMissingFieldsAsNull: _this8._treatMissingFieldsAsNull,\n        shouldProcessClientComponents: _this8._shouldProcessClientComponents\n      });\n      _this8._getPublishQueueAndSaveActor().commitPayload(_this8._operation, relayPayload, _this8._updater);\n      return relayPayload;\n    });\n  }\n\n  /**\n   * Handles any follow-up actions for a Relay payload for @match, @defer,\n   * and @stream directives.\n   */;\n  _proto._processPayloadFollowups = function _processPayloadFollowups(payloads) {\n    var _this9 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    payloads.forEach(function (payload) {\n      var incrementalPlaceholders = payload.incrementalPlaceholders,\n        followupPayloads = payload.followupPayloads,\n        isFinal = payload.isFinal;\n      _this9._state = isFinal ? 'loading_final' : 'loading_incremental';\n      _this9._updateActiveState();\n      if (isFinal) {\n        _this9._incrementalPayloadsPending = false;\n      }\n      if (followupPayloads && followupPayloads.length !== 0) {\n        followupPayloads.forEach(function (followupPayload) {\n          var _followupPayload$acto;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_followupPayload$acto = followupPayload.actorIdentifier) !== null && _followupPayload$acto !== void 0 ? _followupPayload$acto : _this9._actorIdentifier;\n          _this9._processFollowupPayload(followupPayload);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n      }\n      if (incrementalPlaceholders && incrementalPlaceholders.length !== 0) {\n        _this9._incrementalPayloadsPending = _this9._state !== 'loading_final';\n        incrementalPlaceholders.forEach(function (incrementalPlaceholder) {\n          var _incrementalPlacehold;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_incrementalPlacehold = incrementalPlaceholder.actorIdentifier) !== null && _incrementalPlacehold !== void 0 ? _incrementalPlacehold : _this9._actorIdentifier;\n          _this9._processIncrementalPlaceholder(payload, incrementalPlaceholder);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n        if (_this9._isClientPayload || _this9._state === 'loading_final') {\n          // The query has defer/stream selections that are enabled, but either\n          // the server indicated that this is a \"final\" payload: no incremental\n          // payloads will be delivered, then warn that the query was (likely)\n          // executed on the server in non-streaming mode, with incremental\n          // delivery disabled; or this is a client payload, and there will be\n          // no incremental payload.\n          process.env.NODE_ENV !== \"production\" ? warning(_this9._isClientPayload, 'RelayModernEnvironment: Operation `%s` contains @defer/@stream ' + 'directives but was executed in non-streaming mode. See ' + 'https://fburl.com/relay-incremental-delivery-non-streaming-warning.', _this9._operation.request.node.params.name) : void 0;\n          // But eagerly process any deferred payloads\n          var relayPayloads = [];\n          incrementalPlaceholders.forEach(function (placeholder) {\n            if (placeholder.kind === 'defer') {\n              relayPayloads.push(_this9._processDeferResponse(placeholder.label, placeholder.path, placeholder, {\n                data: placeholder.data\n              }));\n            }\n          });\n          if (relayPayloads.length > 0) {\n            _this9._processPayloadFollowups(relayPayloads);\n          }\n        }\n      }\n    });\n  };\n  _proto._maybeCompleteSubscriptionOperationTracking = function _maybeCompleteSubscriptionOperationTracking() {\n    if (!this._isSubscriptionOperation) {\n      return;\n    }\n    if (this._pendingModulePayloadsCount === 0 && this._incrementalPayloadsPending === false) {\n      this._completeOperationTracker();\n    }\n  }\n\n  /**\n   * Processes a ModuleImportPayload, asynchronously resolving the normalization\n   * AST and using it to normalize the field data into a RelayResponsePayload.\n   * The resulting payload may contain other incremental payloads (match,\n   * defer, stream, etc); these are handled by calling\n   * `_processPayloadFollowups()`.\n   */;\n  _proto._processFollowupPayload = function _processFollowupPayload(followupPayload) {\n    var _this10 = this;\n    switch (followupPayload.kind) {\n      case 'ModuleImportPayload':\n        var operationLoader = this._expectOperationLoader();\n        var node = operationLoader.get(followupPayload.operationReference);\n        if (node != null) {\n          // If the operation module is available synchronously, normalize the\n          // data synchronously.\n          this._processFollowupPayloadWithNormalizationNode(followupPayload, getOperation(node));\n        } else {\n          // Otherwise load the operation module and schedule a task to normalize\n          // the data when the module is available.\n          var id = this._nextSubscriptionId++;\n          this._pendingModulePayloadsCount++;\n          var decrementPendingCount = function decrementPendingCount() {\n            _this10._pendingModulePayloadsCount--;\n            _this10._maybeCompleteSubscriptionOperationTracking();\n          };\n\n          // Observable.from(operationLoader.load()) wouldn't catch synchronous\n          // errors thrown by the load function, which is user-defined. Guard\n          // against that with Observable.from(new Promise(<work>)).\n          var networkObservable = RelayObservable.from(new Promise(function (resolve, reject) {\n            operationLoader.load(followupPayload.operationReference).then(resolve, reject);\n          }));\n          RelayObservable.create(function (sink) {\n            var cancellationToken;\n            var subscription = networkObservable.subscribe({\n              next: function next(loadedNode) {\n                if (loadedNode != null) {\n                  var publishModuleImportPayload = function publishModuleImportPayload() {\n                    try {\n                      var operation = getOperation(loadedNode);\n                      var batchAsyncModuleUpdatesFN = RelayFeatureFlags.BATCH_ASYNC_MODULE_UPDATES_FN;\n                      var shouldScheduleAsyncStoreUpdate = batchAsyncModuleUpdatesFN != null && _this10._pendingModulePayloadsCount > 1;\n                      var _withDuration3 = withDuration(function () {\n                          _this10._handleFollowupPayload(followupPayload, operation);\n                          // OK: always have to run after an async module import resolves\n                          if (shouldScheduleAsyncStoreUpdate) {\n                            _this10._scheduleAsyncStoreUpdate(\n                            // $FlowFixMe[incompatible-call] `shouldScheduleAsyncStoreUpdate` check should cover `null` case\n                            batchAsyncModuleUpdatesFN, sink.complete);\n                          } else {\n                            var updatedOwners = _this10._runPublishQueue();\n                            _this10._updateOperationTracker(updatedOwners);\n                          }\n                        }),\n                        duration = _withDuration3[0];\n                      _this10._log({\n                        name: 'execute.async.module',\n                        executeId: _this10._executeId,\n                        operationName: operation.name,\n                        duration: duration\n                      });\n                      if (!shouldScheduleAsyncStoreUpdate) {\n                        sink.complete();\n                      }\n                    } catch (error) {\n                      sink.error(error);\n                    }\n                  };\n                  var scheduler = _this10._scheduler;\n                  if (scheduler == null) {\n                    publishModuleImportPayload();\n                  } else {\n                    cancellationToken = scheduler.schedule(publishModuleImportPayload);\n                  }\n                } else {\n                  sink.complete();\n                }\n              },\n              error: sink.error\n            });\n            return function () {\n              subscription.unsubscribe();\n              if (_this10._scheduler != null && cancellationToken != null) {\n                _this10._scheduler.cancel(cancellationToken);\n              }\n            };\n          }).subscribe({\n            complete: function complete() {\n              _this10._complete(id);\n              decrementPendingCount();\n            },\n            error: function error(_error4) {\n              _this10._error(_error4);\n              decrementPendingCount();\n            },\n            start: function start(subscription) {\n              return _this10._start(id, subscription);\n            }\n          });\n        }\n        break;\n      case 'ActorPayload':\n        this._processFollowupPayloadWithNormalizationNode(followupPayload, followupPayload.node);\n        break;\n      default:\n        followupPayload;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`.', followupPayload.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._processFollowupPayloadWithNormalizationNode = function _processFollowupPayloadWithNormalizationNode(followupPayload, normalizationNode) {\n    this._handleFollowupPayload(followupPayload, normalizationNode);\n    this._maybeCompleteSubscriptionOperationTracking();\n  };\n  _proto._handleFollowupPayload = function _handleFollowupPayload(followupPayload, normalizationNode) {\n    var relayPayload = this._normalizeFollowupPayload(followupPayload, normalizationNode);\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    this._processPayloadFollowups([relayPayload]);\n  }\n\n  /**\n   * The executor now knows that GraphQL responses are expected for a given\n   * label/path:\n   * - Store the placeholder in order to process any future responses that may\n   *   arrive.\n   * - Then process any responses that had already arrived.\n   *\n   * The placeholder contains the normalization selector, path (for nested\n   * defer/stream), and other metadata used to normalize the incremental\n   * response(s).\n   */;\n  _proto._processIncrementalPlaceholder = function _processIncrementalPlaceholder(relayPayload, placeholder) {\n    var _relayPayload$fieldPa;\n    // Update the label => path => placeholder map\n    var label = placeholder.label,\n      path = placeholder.path;\n    var pathKey = path.map(String).join('.');\n    var resultForLabel = this._incrementalResults.get(label);\n    if (resultForLabel == null) {\n      resultForLabel = new Map();\n      this._incrementalResults.set(label, resultForLabel);\n    }\n    var resultForPath = resultForLabel.get(pathKey);\n    var pendingResponses = resultForPath != null && resultForPath.kind === 'response' ? resultForPath.responses : null;\n    resultForLabel.set(pathKey, {\n      kind: 'placeholder',\n      placeholder: placeholder\n    });\n\n    // Store references to the parent node to allow detecting concurrent\n    // modifications to the parent before items arrive and to replay\n    // handle field payloads to account for new information on source records.\n    var parentID;\n    if (placeholder.kind === 'stream') {\n      parentID = placeholder.parentID;\n    } else if (placeholder.kind === 'defer') {\n      parentID = placeholder.selector.dataID;\n    } else {\n      placeholder;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unsupported incremental placeholder kind `%s`.', placeholder.kind) : invariant(false) : void 0;\n    }\n    var parentRecord = relayPayload.source.get(parentID);\n    var parentPayloads = ((_relayPayload$fieldPa = relayPayload.fieldPayloads) !== null && _relayPayload$fieldPa !== void 0 ? _relayPayload$fieldPa : []).filter(function (fieldPayload) {\n      var fieldID = generateClientID(fieldPayload.dataID, fieldPayload.fieldKey);\n      return (\n        // handlers applied to the streamed field itself\n        fieldPayload.dataID === parentID ||\n        // handlers applied to a field on an ancestor object, where\n        // ancestor.field links to the parent record (example: connections)\n        fieldID === parentID\n      );\n    });\n    // If an incremental payload exists for some id that record should also\n    // exist.\n    !(parentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to exist.', parentID) : invariant(false) : void 0;\n    var nextParentRecord;\n    var nextParentPayloads;\n    var previousParentEntry = this._source.get(parentID);\n    if (previousParentEntry != null) {\n      // If a previous entry exists, merge the previous/next records and\n      // payloads together.\n      nextParentRecord = RelayModernRecord.update(previousParentEntry.record, parentRecord);\n      var handlePayloads = new Map();\n      var dedupePayload = function dedupePayload(payload) {\n        var key = stableStringify(payload);\n        handlePayloads.set(key, payload);\n      };\n      previousParentEntry.fieldPayloads.forEach(dedupePayload);\n      parentPayloads.forEach(dedupePayload);\n      nextParentPayloads = Array.from(handlePayloads.values());\n    } else {\n      nextParentRecord = parentRecord;\n      nextParentPayloads = parentPayloads;\n    }\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: nextParentPayloads\n    });\n\n    // If there were any queued responses, process them now that placeholders\n    // are in place\n    if (pendingResponses != null) {\n      var payloadFollowups = this._processIncrementalResponses(pendingResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n  }\n\n  /**\n   * Lookup the placeholder the describes how to process an incremental\n   * response, normalize/publish it, and process any nested defer/match/stream\n   * metadata.\n   */;\n  _proto._processIncrementalResponses = function _processIncrementalResponses(incrementalResponses) {\n    var _this11 = this;\n    var relayPayloads = [];\n    incrementalResponses.forEach(function (incrementalResponse) {\n      var label = incrementalResponse.label,\n        path = incrementalResponse.path,\n        response = incrementalResponse.response;\n      var resultForLabel = _this11._incrementalResults.get(label);\n      if (resultForLabel == null) {\n        resultForLabel = new Map();\n        _this11._incrementalResults.set(label, resultForLabel);\n      }\n      if (label.indexOf('$defer$') !== -1) {\n        var pathKey = path.map(String).join('.');\n        var resultForPath = resultForLabel.get(pathKey);\n        if (resultForPath == null) {\n          resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(pathKey, resultForPath);\n          return;\n        } else if (resultForPath.kind === 'response') {\n          resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var placeholder = resultForPath.placeholder;\n        !(placeholder.kind === 'defer') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @defer, was `@%s`.', pathKey, label, placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processDeferResponse(label, path, placeholder, response));\n      } else {\n        // @stream payload path values end in the field name and item index,\n        // but Relay records paths relative to the parent of the stream node:\n        // therefore we strip the last two elements just to lookup the path\n        // (the item index is used later to insert the element in the list)\n        var _pathKey = path.slice(0, -2).map(String).join('.');\n        var _resultForPath = resultForLabel.get(_pathKey);\n        if (_resultForPath == null) {\n          _resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(_pathKey, _resultForPath);\n          return;\n        } else if (_resultForPath.kind === 'response') {\n          _resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var _placeholder = _resultForPath.placeholder;\n        !(_placeholder.kind === 'stream') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @stream, was `@%s`.', _pathKey, label, _placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processStreamResponse(label, path, _placeholder, response));\n      }\n    });\n    return relayPayloads;\n  };\n  _proto._processDeferResponse = function _processDeferResponse(label, path, placeholder, response) {\n    var _placeholder$actorIde;\n    var parentID = placeholder.selector.dataID;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = (_placeholder$actorIde = placeholder.actorIdentifier) !== null && _placeholder$actorIde !== void 0 ? _placeholder$actorIde : this._actorIdentifier;\n    var relayPayload = normalizeResponse(response, placeholder.selector, placeholder.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: placeholder.path,\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n\n    // Load the version of the parent record from which this incremental data\n    // was derived\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @defer ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var fieldPayloads = parentEntry.fieldPayloads;\n    if (fieldPayloads.length !== 0) {\n      var _response$extensions2;\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: ((_response$extensions2 = response.extensions) === null || _response$extensions2 === void 0 ? void 0 : _response$extensions2.is_final) === true\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  }\n\n  /**\n   * Process the data for one item in a @stream field.\n   */;\n  _proto._processStreamResponse = function _processStreamResponse(label, path, placeholder, response) {\n    var parentID = placeholder.parentID,\n      node = placeholder.node,\n      variables = placeholder.variables,\n      actorIdentifier = placeholder.actorIdentifier;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = actorIdentifier !== null && actorIdentifier !== void 0 ? actorIdentifier : this._actorIdentifier;\n    // Find the LinkedField where @stream was applied\n    var field = node.selections[0];\n    !(field != null && field.kind === 'LinkedField' && field.plural === true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream to be used on a plural field.') : invariant(false) : void 0;\n    var _this$_normalizeStrea = this._normalizeStreamItem(response, parentID, field, variables, path, placeholder.path),\n      fieldPayloads = _this$_normalizeStrea.fieldPayloads,\n      itemID = _this$_normalizeStrea.itemID,\n      itemIndex = _this$_normalizeStrea.itemIndex,\n      prevIDs = _this$_normalizeStrea.prevIDs,\n      relayPayload = _this$_normalizeStrea.relayPayload,\n      storageKey = _this$_normalizeStrea.storageKey;\n    // Publish the new item and update the parent record to set\n    // field[index] = item *if* the parent record hasn't been concurrently\n    // modified.\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload, function (store) {\n      var currentParentRecord = store.get(parentID);\n      if (currentParentRecord == null) {\n        // parent has since been deleted, stream data is stale\n        return;\n      }\n      var currentItems = currentParentRecord.getLinkedRecords(storageKey);\n      if (currentItems == null) {\n        // field has since been deleted, stream data is stale\n        return;\n      }\n      if (currentItems.length !== prevIDs.length || currentItems.some(function (currentItem, index) {\n        return prevIDs[index] !== (currentItem && currentItem.getDataID());\n      })) {\n        // field has been modified by something other than this query,\n        // stream data is stale\n        return;\n      }\n      // parent.field has not been concurrently modified:\n      // update `parent.field[index] = item`\n      var nextItems = (0, _toConsumableArray2[\"default\"])(currentItems);\n      nextItems[itemIndex] = store.get(itemID);\n      currentParentRecord.setLinkedRecords(nextItems, storageKey);\n    });\n\n    // Now that the parent record has been updated to include the new item,\n    // also update any handle fields that are derived from the parent record.\n    if (fieldPayloads.length !== 0) {\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: false\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._normalizeStreamItem = function _normalizeStreamItem(response, parentID, field, variables, path, normalizationPath) {\n    var _field$alias, _field$concreteType, _ref, _this$_getDataID;\n    var data = response.data;\n    !(typeof data === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the GraphQL @stream payload `data` ' + 'value to be an object.') : invariant(false) : void 0;\n    var responseKey = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    var storageKey = getStorageKey(field, variables);\n\n    // Load the version of the parent record from which this incremental data\n    // was derived\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @stream ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var parentRecord = parentEntry.record,\n      fieldPayloads = parentEntry.fieldPayloads;\n\n    // Load the field value (items) that were created by *this* query executor\n    // in order to check if there has been any concurrent modifications by some\n    // other operation.\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(parentRecord, storageKey);\n    !(prevIDs != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to have fetched field ' + '`%s` with @stream.', parentID, field.name) : invariant(false) : void 0;\n\n    // Determine the index in the field of the new item\n    var finalPathEntry = path[path.length - 1];\n    var itemIndex = parseInt(finalPathEntry, 10);\n    !(itemIndex === finalPathEntry && itemIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected path for @stream to end in a ' + 'positive integer index, got `%s`', finalPathEntry) : invariant(false) : void 0;\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : data[TYPENAME_KEY];\n    !(typeof typeName === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream field `%s` to have a ' + '__typename.', field.name) : invariant(false) : void 0;\n\n    // Determine the __id of the new item: this must equal the value that would\n    // be assigned had the item not been streamed\n    var itemID = (_ref = (_this$_getDataID = this._getDataID(data, typeName)) !== null && _this$_getDataID !== void 0 ? _this$_getDataID : prevIDs === null || prevIDs === void 0 ? void 0 : prevIDs[itemIndex]) !== null && _ref !== void 0 ? _ref :\n    // Reuse previously generated client IDs\n    generateClientID(parentID, storageKey, itemIndex);\n    !(typeof itemID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n\n    // Build a selector to normalize the item data with\n    var selector = createNormalizationSelector(field, itemID, variables);\n\n    // Update the cached version of the parent record to reflect the new item:\n    // this is used when subsequent stream payloads arrive to see if there\n    // have been concurrent modifications to the list\n    var nextParentRecord = RelayModernRecord.clone(parentRecord);\n    var nextIDs = (0, _toConsumableArray2[\"default\"])(prevIDs);\n    nextIDs[itemIndex] = itemID;\n    RelayModernRecord.setLinkedRecordIDs(nextParentRecord, storageKey, nextIDs);\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: fieldPayloads\n    });\n    var relayPayload = normalizeResponse(response, selector, typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(normalizationPath), [responseKey, String(itemIndex)]),\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    return {\n      fieldPayloads: fieldPayloads,\n      itemID: itemID,\n      itemIndex: itemIndex,\n      prevIDs: prevIDs,\n      relayPayload: relayPayload,\n      storageKey: storageKey\n    };\n  };\n  _proto._scheduleAsyncStoreUpdate = function _scheduleAsyncStoreUpdate(scheduleFn, completeFn) {\n    var _this12 = this;\n    this._completeFns.push(completeFn);\n    if (this._asyncStoreUpdateDisposable != null) {\n      return;\n    }\n    this._asyncStoreUpdateDisposable = scheduleFn(function () {\n      _this12._asyncStoreUpdateDisposable = null;\n      var updatedOwners = _this12._runPublishQueue();\n      _this12._updateOperationTracker(updatedOwners);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(_this12._completeFns),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var complete = _step2.value;\n          complete();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      _this12._completeFns = [];\n    });\n  };\n  _proto._updateOperationTracker = function _updateOperationTracker(updatedOwners) {\n    if (updatedOwners != null && updatedOwners.length > 0) {\n      this._operationTracker.update(this._operation.request, new Set(updatedOwners));\n    }\n  };\n  _proto._completeOperationTracker = function _completeOperationTracker() {\n    this._operationTracker.complete(this._operation.request);\n  };\n  _proto._getPublishQueueAndSaveActor = function _getPublishQueueAndSaveActor() {\n    this._seenActors.add(this._actorIdentifier);\n    return this._getPublishQueue(this._actorIdentifier);\n  };\n  _proto._getActorsToVisit = function _getActorsToVisit() {\n    if (this._seenActors.size === 0) {\n      return new Set([this._actorIdentifier]);\n    } else {\n      return this._seenActors;\n    }\n  };\n  _proto._runPublishQueue = function _runPublishQueue(operation) {\n    var updatedOwners = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var actorIdentifier = _step3.value;\n        var owners = this._getPublishQueue(actorIdentifier).run(operation);\n        owners.forEach(function (owner) {\n          return updatedOwners.add(owner);\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return Array.from(updatedOwners);\n  };\n  _proto._retainData = function _retainData() {\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var actorIdentifier = _step4.value;\n        if (!this._retainDisposables.has(actorIdentifier)) {\n          this._retainDisposables.set(actorIdentifier, this._getStore(actorIdentifier).retain(this._operation));\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n  _proto._disposeRetainedData = function _disposeRetainedData() {\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(this._retainDisposables.values()),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var disposable = _step5.value;\n        disposable.dispose();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._retainDisposables.clear();\n  };\n  _proto._expectOperationLoader = function _expectOperationLoader() {\n    var operationLoader = this._operationLoader;\n    !operationLoader ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected an operationLoader to be ' + 'configured when using `@match`.') : invariant(false) : void 0;\n    return operationLoader;\n  };\n  return Executor;\n}();\nfunction partitionGraphQLResponses(responses) {\n  var nonIncrementalResponses = [];\n  var incrementalResponses = [];\n  responses.forEach(function (response) {\n    if (response.path != null || response.label != null) {\n      var label = response.label,\n        path = response.path;\n      if (label == null || path == null) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid incremental payload, expected ' + '`path` and `label` to either both be null/undefined, or ' + '`path` to be an `Array<string | number>` and `label` to be a ' + '`string`.') : invariant(false) : void 0;\n      }\n      incrementalResponses.push({\n        label: label,\n        path: path,\n        response: response\n      });\n    } else {\n      nonIncrementalResponses.push(response);\n    }\n  });\n  return [nonIncrementalResponses, incrementalResponses];\n}\nfunction normalizeResponse(response, selector, typeName, options) {\n  var _response$extensions3;\n  var data = response.data,\n    errors = response.errors;\n  var source = RelayRecordSource.create();\n  var record = RelayModernRecord.create(selector.dataID, typeName);\n  source.set(selector.dataID, record);\n  var relayPayload = RelayResponseNormalizer.normalize(source, selector, data, options);\n  return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, relayPayload), {}, {\n    errors: errors,\n    isFinal: ((_response$extensions3 = response.extensions) === null || _response$extensions3 === void 0 ? void 0 : _response$extensions3.is_final) === true\n  });\n}\nfunction stableStringify(value) {\n  var _JSON$stringify;\n  return (_JSON$stringify = JSON.stringify(stableCopy(value))) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : ''; // null-check for flow\n}\n\nfunction validateOptimisticResponsePayload(payload) {\n  var incrementalPlaceholders = payload.incrementalPlaceholders;\n  if (incrementalPlaceholders != null && incrementalPlaceholders.length !== 0) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic responses cannot be returned ' + 'for operations that use incremental data delivery (@defer, ' + '@stream, and @stream_connection).') : invariant(false) : void 0;\n  }\n}\nmodule.exports = {\n  execute: execute\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('./RelayStoreUtils'),\n  getArgumentValues = _require.getArgumentValues;\nvar invariant = require('invariant');\n\n/**\n * Determines the variables that are in scope for a fragment given the variables\n * in scope at the root query as well as any arguments applied at the fragment\n * spread via `@arguments`.\n *\n * Note that this is analagous to determining function arguments given a function call.\n */\nfunction getFragmentVariables(fragment, rootVariables, argumentVariables) {\n  // TODO: Support for legacy ReaderInlineDataFragmentSpread nodes.\n  // Remove this once all we've updated the ReaderInlineDataFragmentSpread\n  // type to indicate that all compiled artifacts have been updated.\n  if (fragment.argumentDefinitions == null) {\n    return argumentVariables;\n  }\n  var variables;\n  fragment.argumentDefinitions.forEach(function (definition) {\n    if (argumentVariables.hasOwnProperty(definition.name)) {\n      return;\n    }\n    variables = variables || (0, _objectSpread2[\"default\"])({}, argumentVariables);\n    switch (definition.kind) {\n      case 'LocalArgument':\n        variables[definition.name] = definition.defaultValue;\n        break;\n      case 'RootArgument':\n        if (!rootVariables.hasOwnProperty(definition.name)) {\n          /*\n           * Global variables passed as values of @arguments are not required to\n           * be declared unless they are used by the callee fragment or a\n           * descendant. In this case, the root variable may not be defined when\n           * resolving the callee's variables. The value is explicitly set to\n           * undefined to conform to the check in\n           * RelayStoreUtils.getStableVariableValue() that variable keys are all\n           * present.\n           */\n          variables[definition.name] = undefined;\n          break;\n        }\n        variables[definition.name] = rootVariables[definition.name];\n        break;\n      default:\n        definition;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayConcreteVariables: Unexpected node kind `%s` in fragment `%s`.', definition.kind, fragment.name) : invariant(false) : void 0;\n    }\n  });\n  return variables || argumentVariables;\n}\n\n/**\n * Determines the variables that are in scope for a given operation given values\n * for some/all of its arguments.\n * - extraneous input variables are filtered from the output\n * - missing variables are set to default values (if given in the\n * operation's definition).\n * - variables with provider modules are added\n */\nfunction getOperationVariables(operation, providedVariables, variables) {\n  var operationVariables = {};\n  operation.argumentDefinitions.forEach(function (def) {\n    var value = def.defaultValue;\n    if (variables[def.name] != null) {\n      value = variables[def.name];\n    }\n    operationVariables[def.name] = value;\n  });\n  if (providedVariables != null) {\n    Object.keys(providedVariables).forEach(function (varName) {\n      operationVariables[varName] = providedVariables[varName].get();\n    });\n  }\n  return operationVariables;\n}\nfunction getLocalVariables(currentVariables, argumentDefinitions, args) {\n  if (argumentDefinitions == null) {\n    return currentVariables;\n  }\n  var nextVariables = (0, _objectSpread2[\"default\"])({}, currentVariables);\n  var nextArgs = args ? getArgumentValues(args, currentVariables) : {};\n  argumentDefinitions.forEach(function (def) {\n    var _nextArgs$def$name;\n    var value = (_nextArgs$def$name = nextArgs[def.name]) !== null && _nextArgs$def$name !== void 0 ? _nextArgs$def$name : def.defaultValue;\n    nextVariables[def.name] = value;\n  });\n  return nextVariables;\n}\nmodule.exports = {\n  getLocalVariables: getLocalVariables,\n  getFragmentVariables: getFragmentVariables,\n  getOperationVariables: getOperationVariables\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayDefaultHandlerProvider = require('../handlers/RelayDefaultHandlerProvider');\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n  assertInternalActorIdentifier = _require.assertInternalActorIdentifier;\nvar RelayObservable = require('../network/RelayObservable');\nvar wrapNetworkWithLogObserver = require('../network/wrapNetworkWithLogObserver');\nvar RelayOperationTracker = require('../store/RelayOperationTracker');\nvar registerEnvironmentWithDevTools = require('../util/registerEnvironmentWithDevTools');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar defaultGetDataID = require('./defaultGetDataID');\nvar defaultRequiredFieldLogger = require('./defaultRequiredFieldLogger');\nvar OperationExecutor = require('./OperationExecutor');\nvar RelayPublishQueue = require('./RelayPublishQueue');\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar RelayModernEnvironment = /*#__PURE__*/function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n    var _config$log, _config$requiredField, _config$UNSTABLE_defa, _config$getDataID, _config$missingFieldH, _config$handlerProvid, _config$scheduler, _config$isServer, _config$operationTrac;\n    this.configName = config.configName;\n    this._treatMissingFieldsAsNull = config.treatMissingFieldsAsNull === true;\n    var operationLoader = config.operationLoader;\n    var reactFlightPayloadDeserializer = config.reactFlightPayloadDeserializer;\n    var reactFlightServerErrorHandler = config.reactFlightServerErrorHandler;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (operationLoader != null) {\n        !(typeof operationLoader === 'object' && typeof operationLoader.get === 'function' && typeof operationLoader.load === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `operationLoader` to be an object ' + 'with get() and load() functions, got `%s`.', operationLoader) : invariant(false) : void 0;\n      }\n      if (reactFlightPayloadDeserializer != null) {\n        !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `reactFlightPayloadDeserializer` ' + ' to be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n      }\n    }\n    this.__log = (_config$log = config.log) !== null && _config$log !== void 0 ? _config$log : emptyFunction;\n    this.requiredFieldLogger = (_config$requiredField = config.requiredFieldLogger) !== null && _config$requiredField !== void 0 ? _config$requiredField : defaultRequiredFieldLogger;\n    this._defaultRenderPolicy = ((_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) !== null && _config$UNSTABLE_defa !== void 0 ? _config$UNSTABLE_defa : RelayFeatureFlags.ENABLE_PARTIAL_RENDERING_DEFAULT === true) ? 'partial' : 'full';\n    this._operationLoader = operationLoader;\n    this._operationExecutions = new Map();\n    this._network = wrapNetworkWithLogObserver(this, config.network);\n    this._getDataID = (_config$getDataID = config.getDataID) !== null && _config$getDataID !== void 0 ? _config$getDataID : defaultGetDataID;\n    this._missingFieldHandlers = (_config$missingFieldH = config.missingFieldHandlers) !== null && _config$missingFieldH !== void 0 ? _config$missingFieldH : [];\n    this._publishQueue = new RelayPublishQueue(config.store, (_config$handlerProvid = config.handlerProvider) !== null && _config$handlerProvid !== void 0 ? _config$handlerProvid : RelayDefaultHandlerProvider, this._getDataID, this._missingFieldHandlers);\n    this._scheduler = (_config$scheduler = config.scheduler) !== null && _config$scheduler !== void 0 ? _config$scheduler : null;\n    this._store = config.store;\n    this.options = config.options;\n    this._isServer = (_config$isServer = config.isServer) !== null && _config$isServer !== void 0 ? _config$isServer : false;\n    this.__setNet = function (newNet) {\n      return _this._network = wrapNetworkWithLogObserver(_this, newNet);\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      var _require2 = require('./StoreInspector'),\n        inspect = _require2.inspect;\n      this.DEBUG_inspect = function (dataID) {\n        return inspect(_this, dataID);\n      };\n    }\n    this._operationTracker = (_config$operationTrac = config.operationTracker) !== null && _config$operationTrac !== void 0 ? _config$operationTrac : new RelayOperationTracker();\n    this._reactFlightPayloadDeserializer = reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = config.shouldProcessClientComponents;\n\n    // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n    registerEnvironmentWithDevTools(this);\n  }\n  var _proto = RelayModernEnvironment.prototype;\n  _proto.getStore = function getStore() {\n    return this._store;\n  };\n  _proto.getNetwork = function getNetwork() {\n    return this._network;\n  };\n  _proto.getOperationTracker = function getOperationTracker() {\n    return this._operationTracker;\n  };\n  _proto.getScheduler = function getScheduler() {\n    return this._scheduler;\n  };\n  _proto.isRequestActive = function isRequestActive(requestIdentifier) {\n    var activeState = this._operationExecutions.get(requestIdentifier);\n    return activeState === 'active';\n  };\n  _proto.UNSTABLE_getDefaultRenderPolicy = function UNSTABLE_getDefaultRenderPolicy() {\n    return this._defaultRenderPolicy;\n  };\n  _proto.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n    var dispose = function dispose() {\n      _this2._scheduleUpdates(function () {\n        _this2._publishQueue.revertUpdate(optimisticUpdate);\n        _this2._publishQueue.run();\n      });\n    };\n    this._scheduleUpdates(function () {\n      _this2._publishQueue.applyUpdate(optimisticUpdate);\n      _this2._publishQueue.run();\n    });\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.revertUpdate = function revertUpdate(update) {\n    var _this3 = this;\n    this._scheduleUpdates(function () {\n      _this3._publishQueue.revertUpdate(update);\n      _this3._publishQueue.run();\n    });\n  };\n  _proto.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    var _this4 = this;\n    this._scheduleUpdates(function () {\n      _this4._publishQueue.revertUpdate(update);\n      _this4._publishQueue.applyUpdate(newUpdate);\n      _this4._publishQueue.run();\n    });\n  };\n  _proto.applyMutation = function applyMutation(optimisticConfig) {\n    var subscription = this._execute({\n      createSource: function createSource() {\n        return RelayObservable.create(function (_sink) {});\n      },\n      isClientPayload: false,\n      operation: optimisticConfig.operation,\n      optimisticConfig: optimisticConfig,\n      updater: null\n    }).subscribe({});\n    return {\n      dispose: function dispose() {\n        return subscription.unsubscribe();\n      }\n    };\n  };\n  _proto.check = function check(operation) {\n    if (this._missingFieldHandlers.length === 0 && !operationHasClientAbstractTypes(operation)) {\n      return this._store.check(operation);\n    }\n    return this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers);\n  };\n  _proto.commitPayload = function commitPayload(operation, payload) {\n    this._execute({\n      createSource: function createSource() {\n        return RelayObservable.from({\n          data: payload\n        });\n      },\n      isClientPayload: true,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    }).subscribe({});\n  };\n  _proto.commitUpdate = function commitUpdate(updater) {\n    var _this5 = this;\n    this._scheduleUpdates(function () {\n      _this5._publishQueue.commitUpdate(updater);\n      _this5._publishQueue.run();\n    });\n  };\n  _proto.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n  _proto.retain = function retain(operation) {\n    return this._store.retain(operation);\n  };\n  _proto.isServer = function isServer() {\n    return this._isServer;\n  };\n  _proto._checkSelectorAndHandleMissingFields = function _checkSelectorAndHandleMissingFields(operation, handlers) {\n    var _this6 = this;\n    var target = RelayRecordSource.create();\n    var source = this._store.getSource();\n    var result = this._store.check(operation, {\n      handlers: handlers,\n      defaultActorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n      getSourceForActor: function getSourceForActor(actorIdentifier) {\n        assertInternalActorIdentifier(actorIdentifier);\n        return source;\n      },\n      getTargetForActor: function getTargetForActor(actorIdentifier) {\n        assertInternalActorIdentifier(actorIdentifier);\n        return target;\n      }\n    });\n    if (target.size() > 0) {\n      this._scheduleUpdates(function () {\n        _this6._publishQueue.commitSource(target);\n        _this6._publishQueue.run();\n      });\n    }\n    return result;\n  };\n  _proto._scheduleUpdates = function _scheduleUpdates(task) {\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      scheduler.schedule(task);\n    } else {\n      task();\n    }\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */;\n  _proto.execute = function execute(_ref) {\n    var _this7 = this;\n    var operation = _ref.operation;\n    return this._execute({\n      createSource: function createSource() {\n        return _this7.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */;\n  _proto.executeSubscription = function executeSubscription(_ref2) {\n    var _this8 = this;\n    var operation = _ref2.operation,\n      updater = _ref2.updater;\n    return this._execute({\n      createSource: function createSource() {\n        return _this8.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: updater\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */;\n  _proto.executeMutation = function executeMutation(_ref3) {\n    var _this9 = this;\n    var operation = _ref3.operation,\n      optimisticResponse = _ref3.optimisticResponse,\n      optimisticUpdater = _ref3.optimisticUpdater,\n      updater = _ref3.updater,\n      uploadables = _ref3.uploadables;\n    var optimisticConfig;\n    if (optimisticResponse || optimisticUpdater) {\n      optimisticConfig = {\n        operation: operation,\n        response: optimisticResponse,\n        updater: optimisticUpdater\n      };\n    }\n    return this._execute({\n      createSource: function createSource() {\n        return _this9.getNetwork().execute(operation.request.node.params, operation.request.variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, operation.request.cacheConfig), {}, {\n          force: true\n        }), uploadables);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: optimisticConfig,\n      updater: updater\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation responses, the result of which is\n   * then normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeWithSource({...}).subscribe({...}).\n   */;\n  _proto.executeWithSource = function executeWithSource(_ref4) {\n    var operation = _ref4.operation,\n      source = _ref4.source;\n    return this._execute({\n      createSource: function createSource() {\n        return source;\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  };\n  _proto.toJSON = function toJSON() {\n    var _this$configName;\n    return \"RelayModernEnvironment(\".concat((_this$configName = this.configName) !== null && _this$configName !== void 0 ? _this$configName : '', \")\");\n  };\n  _proto._execute = function _execute(_ref5) {\n    var _this10 = this;\n    var createSource = _ref5.createSource,\n      isClientPayload = _ref5.isClientPayload,\n      operation = _ref5.operation,\n      optimisticConfig = _ref5.optimisticConfig,\n      updater = _ref5.updater;\n    var publishQueue = this._publishQueue;\n    var store = this._store;\n    return RelayObservable.create(function (sink) {\n      var executor = OperationExecutor.execute({\n        actorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n        getDataID: _this10._getDataID,\n        isClientPayload: isClientPayload,\n        log: _this10.__log,\n        operation: operation,\n        operationExecutions: _this10._operationExecutions,\n        operationLoader: _this10._operationLoader,\n        operationTracker: _this10._operationTracker,\n        optimisticConfig: optimisticConfig,\n        getPublishQueue: function getPublishQueue(actorIdentifier) {\n          assertInternalActorIdentifier(actorIdentifier);\n          return publishQueue;\n        },\n        reactFlightPayloadDeserializer: _this10._reactFlightPayloadDeserializer,\n        reactFlightServerErrorHandler: _this10._reactFlightServerErrorHandler,\n        scheduler: _this10._scheduler,\n        shouldProcessClientComponents: _this10._shouldProcessClientComponents,\n        sink: sink,\n        // NOTE: Some product tests expect `Network.execute` to be called only\n        //       when the Observable is executed.\n        source: createSource(),\n        getStore: function getStore(actorIdentifier) {\n          assertInternalActorIdentifier(actorIdentifier);\n          return store;\n        },\n        treatMissingFieldsAsNull: _this10._treatMissingFieldsAsNull,\n        updater: updater\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  };\n  return RelayModernEnvironment;\n}();\nfunction operationHasClientAbstractTypes(operation) {\n  return operation.root.node.kind === 'Operation' && operation.root.node.clientAbstractTypes != null;\n}\n\n// Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\nfunction emptyFunction() {}\nmodule.exports = RelayModernEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar getPendingOperationsForFragment = require('../util/getPendingOperationsForFragment');\nvar handlePotentialSnapshotErrors = require('../util/handlePotentialSnapshotErrors');\nvar isScalarAndEqual = require('../util/isScalarAndEqual');\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('./RelayModernOperationDescriptor'),\n  createRequestDescriptor = _require.createRequestDescriptor;\nvar _require2 = require('./RelayModernSelector'),\n  areEqualSelectors = _require2.areEqualSelectors,\n  createReaderSelector = _require2.createReaderSelector,\n  getSelectorsFromObject = _require2.getSelectorsFromObject;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * A utility for resolving and subscribing to the results of a fragment spec\n * (key -> fragment mapping) given some \"props\" that determine the root ID\n * and variables to use when reading each fragment. When props are changed via\n * `setProps()`, the resolver will update its results and subscriptions\n * accordingly. Internally, the resolver:\n * - Converts the fragment map & props map into a map of `Selector`s.\n * - Removes any resolvers for any props that became null.\n * - Creates resolvers for any props that became non-null.\n * - Updates resolvers with the latest props.\n *\n * This utility is implemented as an imperative, stateful API for performance\n * reasons: reusing previous resolvers, callback functions, and subscriptions\n * all helps to reduce object allocation and thereby decrease GC time.\n *\n * The `resolve()` function is also lazy and memoized: changes in the store mark\n * the resolver as stale and notify the caller, and the actual results are\n * recomputed the first time `resolve()` is called.\n */\nvar RelayModernFragmentSpecResolver = /*#__PURE__*/function () {\n  function RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function () {\n      _this._stale = true;\n      if (typeof _this._callback === 'function') {\n        _this._callback();\n      }\n    });\n    this._callback = callback;\n    this._context = context;\n    this._data = {};\n    this._fragments = fragments;\n    this._props = {};\n    this._resolvers = {};\n    this._stale = false;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this.setProps(props);\n  }\n  var _proto = RelayModernFragmentSpecResolver.prototype;\n  _proto.dispose = function dispose() {\n    for (var key in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(key)) {\n        disposeCallback(this._resolvers[key]);\n      }\n    }\n  };\n  _proto.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the object multiple times, which could occur if data for\n      // multiple keys changes in the same event loop.\n      var prevData = this._data;\n      var nextData;\n      for (var key in this._resolvers) {\n        if (this._resolvers.hasOwnProperty(key)) {\n          var resolver = this._resolvers[key];\n          var prevItem = prevData[key];\n          if (resolver) {\n            var nextItem = resolver.resolve();\n            if (nextData || nextItem !== prevItem) {\n              nextData = nextData || (0, _objectSpread2[\"default\"])({}, prevData);\n              nextData[key] = nextItem;\n            }\n          } else {\n            var prop = this._props[key];\n            var _nextItem = prop !== undefined ? prop : null;\n            if (nextData || !isScalarAndEqual(_nextItem, prevItem)) {\n              nextData = nextData || (0, _objectSpread2[\"default\"])({}, prevData);\n              nextData[key] = _nextItem;\n            }\n          }\n        }\n      }\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n    return this._data;\n  };\n  _proto.setCallback = function setCallback(props, callback) {\n    this._callback = callback;\n    if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n      this.setProps(props);\n    }\n  };\n  _proto.setProps = function setProps(props) {\n    this._props = {};\n    var ownedSelectors = getSelectorsFromObject(this._fragments, props);\n    for (var key in ownedSelectors) {\n      if (ownedSelectors.hasOwnProperty(key)) {\n        var ownedSelector = ownedSelectors[key];\n        var resolver = this._resolvers[key];\n        if (ownedSelector == null) {\n          if (resolver != null) {\n            resolver.dispose();\n          }\n          resolver = null;\n        } else if (ownedSelector.kind === 'PluralReaderSelector') {\n          if (resolver == null) {\n            resolver = new SelectorListResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, this._callback != null, this._onChange);\n          } else {\n            !(resolver instanceof SelectorListResolver) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an array.', key) : invariant(false) : void 0;\n            resolver.setSelector(ownedSelector);\n          }\n        } else {\n          if (resolver == null) {\n            resolver = new SelectorResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, this._callback != null, this._onChange);\n          } else {\n            !(resolver instanceof SelectorResolver) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an object.', key) : invariant(false) : void 0;\n            resolver.setSelector(ownedSelector);\n          }\n        }\n        this._props[key] = props[key];\n        this._resolvers[key] = resolver;\n      }\n    }\n    this._stale = true;\n  };\n  _proto.setVariables = function setVariables(variables, request) {\n    for (var key in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(key)) {\n        var resolver = this._resolvers[key];\n        if (resolver) {\n          resolver.setVariables(variables, request);\n        }\n      }\n    }\n    this._stale = true;\n  };\n  return RelayModernFragmentSpecResolver;\n}();\n/**\n * A resolver for a single Selector.\n */\nvar SelectorResolver = /*#__PURE__*/function () {\n  function SelectorResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {\n    var _this2 = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function (snapshot) {\n      _this2._data = snapshot.data;\n      _this2._isMissingData = snapshot.isMissingData;\n      _this2._missingRequiredFields = snapshot.missingRequiredFields;\n      _this2._relayResolverErrors = snapshot.relayResolverErrors;\n      _this2._callback();\n    });\n    var _snapshot = environment.lookup(selector);\n    this._callback = callback;\n    this._data = _snapshot.data;\n    this._isMissingData = _snapshot.isMissingData;\n    this._missingRequiredFields = _snapshot.missingRequiredFields;\n    this._relayResolverErrors = _snapshot.relayResolverErrors;\n    this._environment = environment;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this._selector = selector;\n    if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n      if (subscribeOnConstruction) {\n        this._subscription = environment.subscribe(_snapshot, this._onChange);\n      }\n    } else {\n      this._subscription = environment.subscribe(_snapshot, this._onChange);\n    }\n  }\n  var _proto2 = SelectorResolver.prototype;\n  _proto2.dispose = function dispose() {\n    if (this._subscription) {\n      this._subscription.dispose();\n      this._subscription = null;\n    }\n  };\n  _proto2.resolve = function resolve() {\n    if (this._isMissingData === true) {\n      // NOTE: This branch exists to handle the case in which:\n      // - A RelayModern container is rendered as a descendant of a Relay Hook\n      //   root using a \"partial\" renderPolicy (this means that eargerly\n      //   reading any cached data that is available instead of blocking\n      //   at the root until the whole query is fetched).\n      // - A parent Relay Hook didnt' suspend earlier on data being fetched,\n      //   either because the fragment data for the parent was available, or\n      //   the parent fragment didn't have any data dependencies.\n      // Even though our Flow types reflect the possiblity of null data, there\n      // might still be cases where it's not handled at runtime becuase the\n      // Flow types are being ignored, or simply not being used (for example,\n      // the case reported here: https://fburl.com/srnbucf8, was due to\n      // misuse of Flow types here: https://fburl.com/g3m0mqqh).\n      // Additionally, even though the null data might be handled without a\n      // runtime error, we might not suspend when we intended to if a parent\n      // Relay Hook (e.g. that is using @defer) decided not to suspend becuase\n      // it's immediate data was already available (even if it was deferred),\n      // or it didn't actually need any data (was just spreading other fragments).\n      // This should eventually go away with something like @optional, where we only\n      // suspend at specific boundaries depending on whether the boundary\n      // can be fulfilled or not.\n      var pendingOperationsResult = getPendingOperationsForFragment(this._environment, this._selector.node, this._selector.owner);\n      var promise = pendingOperationsResult === null || pendingOperationsResult === void 0 ? void 0 : pendingOperationsResult.promise;\n      if (promise != null) {\n        if (this._rootIsQueryRenderer) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Relay Container for fragment `%s` has missing data and ' + 'would suspend. When using features such as @defer or @module, ' + 'use `useFragment` instead of a Relay Container.', this._selector.node.name) : void 0;\n        } else {\n          var _pendingOperationsRes;\n          var pendingOperations = (_pendingOperationsRes = pendingOperationsResult === null || pendingOperationsResult === void 0 ? void 0 : pendingOperationsResult.pendingOperations) !== null && _pendingOperationsRes !== void 0 ? _pendingOperationsRes : [];\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Relay Container for fragment `%s` suspended. When using ' + 'features such as @defer or @module, use `useFragment` instead ' + 'of a Relay Container.', this._selector.node.name) : void 0;\n          this._environment.__log({\n            name: 'suspense.fragment',\n            data: this._data,\n            fragment: this._selector.node,\n            isRelayHooks: false,\n            isMissingData: this._isMissingData,\n            isPromiseCached: false,\n            pendingOperations: pendingOperations\n          });\n          throw promise;\n        }\n      }\n    }\n    handlePotentialSnapshotErrors(this._environment, this._missingRequiredFields, this._relayResolverErrors);\n    return this._data;\n  };\n  _proto2.setSelector = function setSelector(selector) {\n    if (this._subscription != null && areEqualSelectors(selector, this._selector)) {\n      return;\n    }\n    this.dispose();\n    var snapshot = this._environment.lookup(selector);\n    this._data = recycleNodesInto(this._data, snapshot.data);\n    this._isMissingData = snapshot.isMissingData;\n    this._missingRequiredFields = snapshot.missingRequiredFields;\n    this._relayResolverErrors = snapshot.relayResolverErrors;\n    this._selector = selector;\n    this._subscription = this._environment.subscribe(snapshot, this._onChange);\n  };\n  _proto2.setVariables = function setVariables(variables, request) {\n    if (areEqual(variables, this._selector.variables)) {\n      // If we're not actually setting new variables, we don't actually want\n      // to create a new fragment owner, since areEqualSelectors relies on\n      // owner identity.\n      // In fact, we don't even need to try to attempt to set a new selector.\n      // When fragment ownership is not enabled, setSelector will also bail\n      // out since the selector doesn't really change, so we're doing it here\n      // earlier.\n      return;\n    }\n    // NOTE: We manually create the request descriptor here instead of\n    // calling createOperationDescriptor() because we want to set a\n    // descriptor with *unaltered* variables as the fragment owner.\n    // This is a hack that allows us to preserve existing (broken)\n    // behavior of RelayModern containers while using fragment ownership\n    // to propagate variables instead of Context.\n    // For more details, see the summary of D13999308\n    var requestDescriptor = createRequestDescriptor(request, variables);\n    var selector = createReaderSelector(this._selector.node, this._selector.dataID, variables, requestDescriptor);\n    this.setSelector(selector);\n  };\n  return SelectorResolver;\n}();\n/**\n * A resolver for an array of Selectors.\n */\nvar SelectorListResolver = /*#__PURE__*/function () {\n  function SelectorListResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {\n    var _this3 = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function (data) {\n      _this3._stale = true;\n      _this3._callback();\n    });\n    this._callback = callback;\n    this._data = [];\n    this._environment = environment;\n    this._resolvers = [];\n    this._stale = true;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this._subscribeOnConstruction = subscribeOnConstruction;\n    this.setSelector(selector);\n  }\n  var _proto3 = SelectorListResolver.prototype;\n  _proto3.dispose = function dispose() {\n    this._resolvers.forEach(disposeCallback);\n  };\n  _proto3.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the array multiple times, which could occur if data for\n      // multiple indices changes in the same event loop.\n      var prevData = this._data;\n      var nextData;\n      for (var ii = 0; ii < this._resolvers.length; ii++) {\n        var prevItem = prevData[ii];\n        var nextItem = this._resolvers[ii].resolve();\n        if (nextData || nextItem !== prevItem) {\n          nextData = nextData || prevData.slice(0, ii);\n          nextData.push(nextItem);\n        }\n      }\n      if (!nextData && this._resolvers.length !== prevData.length) {\n        nextData = prevData.slice(0, this._resolvers.length);\n      }\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n    return this._data;\n  };\n  _proto3.setSelector = function setSelector(selector) {\n    var selectors = selector.selectors;\n    while (this._resolvers.length > selectors.length) {\n      var resolver = this._resolvers.pop();\n      resolver.dispose();\n    }\n    for (var ii = 0; ii < selectors.length; ii++) {\n      if (ii < this._resolvers.length) {\n        this._resolvers[ii].setSelector(selectors[ii]);\n      } else {\n        this._resolvers[ii] = new SelectorResolver(this._environment, this._rootIsQueryRenderer, selectors[ii], this._subscribeOnConstruction, this._onChange);\n      }\n    }\n    this._stale = true;\n  };\n  _proto3.setVariables = function setVariables(variables, request) {\n    this._resolvers.forEach(function (resolver) {\n      return resolver.setVariables(variables, request);\n    });\n    this._stale = true;\n  };\n  return SelectorListResolver;\n}();\nfunction disposeCallback(disposable) {\n  disposable && disposable.dispose();\n}\nmodule.exports = RelayModernFragmentSpecResolver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar deepFreeze = require('../util/deepFreeze');\nvar getRequestIdentifier = require('../util/getRequestIdentifier');\nvar _require = require('./RelayConcreteVariables'),\n  getOperationVariables = _require.getOperationVariables;\nvar _require2 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require2.createNormalizationSelector,\n  createReaderSelector = _require2.createReaderSelector;\nvar _require3 = require('./RelayStoreUtils'),\n  ROOT_ID = _require3.ROOT_ID;\n\n/**\n * Creates an instance of the `OperationDescriptor` type defined in\n * `RelayStoreTypes` given an operation and some variables. The input variables\n * are filtered to exclude variables that do not match defined arguments on the\n * operation, and default values are populated for null values.\n */\nfunction createOperationDescriptor(request, variables, cacheConfig) {\n  var dataID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ROOT_ID;\n  var operation = request.operation;\n  var operationVariables = getOperationVariables(operation, request.params.providedVariables, variables);\n  var requestDescriptor = createRequestDescriptor(request, operationVariables, cacheConfig);\n  var operationDescriptor = {\n    fragment: createReaderSelector(request.fragment, dataID, operationVariables, requestDescriptor),\n    request: requestDescriptor,\n    root: createNormalizationSelector(operation, dataID, operationVariables)\n  };\n  if (process.env.NODE_ENV !== \"production\") {\n    // Freezing properties short-circuits a deepFreeze of snapshots that contain\n    // an OperationDescriptor via their selector's owner, avoiding stack\n    // overflow on larger queries.\n    Object.freeze(operationDescriptor.fragment);\n    Object.freeze(operationDescriptor.root);\n    Object.freeze(operationDescriptor);\n  }\n  return operationDescriptor;\n}\nfunction createRequestDescriptor(request, variables, cacheConfig) {\n  var requestDescriptor = {\n    identifier: getRequestIdentifier(request.params, variables),\n    node: request,\n    variables: variables,\n    cacheConfig: cacheConfig\n  };\n  if (process.env.NODE_ENV !== \"production\") {\n    deepFreeze(variables);\n    Object.freeze(request);\n    Object.freeze(requestDescriptor);\n  }\n  return requestDescriptor;\n}\nmodule.exports = {\n  createOperationDescriptor: createOperationDescriptor,\n  createRequestDescriptor: createRequestDescriptor\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar deepFreeze = require('../util/deepFreeze');\nvar _require = require('./ClientID'),\n  generateClientObjectClientID = _require.generateClientObjectClientID,\n  isClientID = _require.isClientID;\nvar _require2 = require('./experimental-live-resolvers/LiveResolverSuspenseSentinel'),\n  isSuspenseSentinel = _require2.isSuspenseSentinel;\nvar _require3 = require('./RelayStoreUtils'),\n  ACTOR_IDENTIFIER_KEY = _require3.ACTOR_IDENTIFIER_KEY,\n  ID_KEY = _require3.ID_KEY,\n  INVALIDATED_AT_KEY = _require3.INVALIDATED_AT_KEY,\n  REF_KEY = _require3.REF_KEY,\n  REFS_KEY = _require3.REFS_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  ROOT_ID = _require3.ROOT_ID,\n  TYPENAME_KEY = _require3.TYPENAME_KEY;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * @public\n *\n * Low-level record manipulation methods.\n *\n * A note about perf: we use long-hand property access rather than computed\n * properties in this file for speed ie.\n *\n *    const object = {};\n *    object[KEY] = value;\n *    record[storageKey] = object;\n *\n * instead of:\n *\n *    record[storageKey] = {\n *      [KEY]: value,\n *    };\n *\n * The latter gets transformed by Babel into something like:\n *\n *    function _defineProperty(obj, key, value) {\n *      if (key in obj) {\n *        Object.defineProperty(obj, key, {\n *          value: value,\n *          enumerable: true,\n *          configurable: true,\n *          writable: true,\n *        });\n *      } else {\n *        obj[key] = value;\n *      }\n *      return obj;\n *    }\n *\n *    record[storageKey] = _defineProperty({}, KEY, value);\n *\n * A quick benchmark shows that computed property access is an order of\n * magnitude slower (times in seconds for 100,000 iterations):\n *\n *               best     avg     sd\n *    computed 0.02175 0.02292 0.00113\n *      manual 0.00110 0.00123 0.00008\n */\n\n/**\n * @public\n *\n * Clone a record.\n */\nfunction clone(record) {\n  return (0, _objectSpread2[\"default\"])({}, record);\n}\n\n/**\n * @public\n *\n * Copies all fields from `source` to `sink`, excluding `__id` and `__typename`.\n *\n * NOTE: This function does not treat `id` specially. To preserve the id,\n * manually reset it after calling this function. Also note that values are\n * copied by reference and not value; callers should ensure that values are\n * copied on write.\n */\nfunction copyFields(source, sink) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      if (key !== ID_KEY && key !== TYPENAME_KEY) {\n        sink[key] = source[key];\n      }\n    }\n  }\n}\n\n/**\n * @public\n *\n * Create a new record.\n */\nfunction create(dataID, typeName) {\n  // See perf note above for why we aren't using computed property access.\n  var record = {};\n  record[ID_KEY] = dataID;\n  record[TYPENAME_KEY] = typeName;\n  return record;\n}\n\n/**\n * @public\n *\n * Get the record's `id` if available or the client-generated identifier.\n */\nfunction getDataID(record) {\n  return record[ID_KEY];\n}\n\n/**\n * @public\n *\n * Get the concrete type of the record.\n */\nfunction getType(record) {\n  return record[TYPENAME_KEY];\n}\n\n/**\n * @public\n *\n * Get a scalar (non-link) field value.\n */\nfunction getValue(record, storageKey) {\n  var value = record[storageKey];\n  if (value && typeof value === 'object') {\n    !(!value.hasOwnProperty(REF_KEY) && !value.hasOwnProperty(REFS_KEY)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getValue(): Expected a scalar (non-link) value for `%s.%s` ' + 'but found %s.', record[ID_KEY], storageKey, value.hasOwnProperty(REF_KEY) ? 'a linked record' : 'plural linked records') : invariant(false) : void 0;\n  }\n  return value;\n}\n\n/**\n * @public\n *\n * Get the value of a field as a reference to another record. Throws if the\n * field has a different type.\n */\nfunction getLinkedRecordID(record, storageKey) {\n  var maybeLink = record[storageKey];\n  if (maybeLink == null) {\n    return maybeLink;\n  }\n  // We reassign here so that the JSON.stringify call in invariant does not invalidate the\n  // non-maybe refinement from above.\n  var link = maybeLink;\n  !(typeof link === 'object' && link && typeof link[REF_KEY] === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordID(): Expected `%s.%s` to be a linked ID, ' + 'was `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(link), typeof link === 'object' && link[REFS_KEY] !== undefined ? ' It appears to be a plural linked record: did you mean to call ' + 'getLinkedRecords() instead of getLinkedRecord()?' : '') : invariant(false) : void 0;\n  // $FlowFixMe[incompatible-return]\n  return link[REF_KEY];\n}\n\n/**\n * @public\n *\n * Get the value of a field as a list of references to other records. Throws if\n * the field has a different type.\n */\nfunction getLinkedRecordIDs(record, storageKey) {\n  var links = record[storageKey];\n  if (links == null) {\n    return links;\n  }\n  !(typeof links === 'object' && Array.isArray(links[REFS_KEY])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordIDs(): Expected `%s.%s` to contain an array ' + 'of linked IDs, got `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(links), typeof links === 'object' && links[REF_KEY] !== undefined ? ' It appears to be a singular linked record: did you mean to call ' + 'getLinkedRecord() instead of getLinkedRecords()?' : '') : invariant(false) : void 0;\n  // assume items of the array are ids\n  return links[REFS_KEY];\n}\n\n/**\n * @public\n *\n * Returns the epoch at which the record was invalidated, if it\n * ever was; otherwise returns null;\n */\nfunction getInvalidationEpoch(record) {\n  if (record == null) {\n    return null;\n  }\n  var invalidatedAt = record[INVALIDATED_AT_KEY];\n  if (typeof invalidatedAt !== 'number') {\n    // If the record has never been invalidated, it isn't stale.\n    return null;\n  }\n  return invalidatedAt;\n}\n\n/**\n * @public\n *\n * Compares the fields of a previous and new record, returning either the\n * previous record if all fields are equal or a new record (with merged fields)\n * if any fields have changed.\n */\nfunction update(prevRecord, nextRecord) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType, _getType2;\n    var prevID = getDataID(prevRecord);\n    var nextID = getDataID(nextRecord);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    // note: coalesce null/undefined to null\n    var prevType = (_getType = getType(prevRecord)) !== null && _getType !== void 0 ? _getType : null;\n    var nextType = (_getType2 = getType(nextRecord)) !== null && _getType2 !== void 0 ? _getType2 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  var updated = null;\n  var keys = Object.keys(nextRecord);\n  for (var ii = 0; ii < keys.length; ii++) {\n    var key = keys[ii];\n    if (updated || !areEqual(prevRecord[key], nextRecord[key])) {\n      updated = updated !== null ? updated : (0, _objectSpread2[\"default\"])({}, prevRecord);\n      updated[key] = nextRecord[key];\n    }\n  }\n  return updated !== null ? updated : prevRecord;\n}\n\n/**\n * @public\n *\n * Returns a new record with the contents of the given records. Fields in the\n * second record will overwrite identical fields in the first record.\n */\nfunction merge(record1, record2) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType3, _getType4;\n    var prevID = getDataID(record1);\n    var nextID = getDataID(record2);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    // note: coalesce null/undefined to null\n    var prevType = (_getType3 = getType(record1)) !== null && _getType3 !== void 0 ? _getType3 : null;\n    var nextType = (_getType4 = getType(record2)) !== null && _getType4 !== void 0 ? _getType4 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, record1), record2);\n}\n\n/**\n * @public\n *\n * Prevent modifications to the record. Attempts to call `set*` functions on a\n * frozen record will fatal at runtime.\n */\nfunction freeze(record) {\n  deepFreeze(record);\n}\n\n/**\n * @public\n *\n * Set the value of a storageKey to a scalar.\n */\nfunction setValue(record, storageKey, value) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var prevID = getDataID(record);\n    if (storageKey === ID_KEY) {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === value, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, value) : void 0;\n    } else if (storageKey === TYPENAME_KEY) {\n      var _getType5;\n      // note: coalesce null/undefined to null\n      var prevType = (_getType5 = getType(record)) !== null && _getType5 !== void 0 ? _getType5 : null;\n      var nextType = value !== null && value !== void 0 ? value : null;\n      process.env.NODE_ENV !== \"production\" ? warning(isClientID(getDataID(record)) && getDataID(record) !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n    }\n  }\n  record[storageKey] = value;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a reference to another record.\n */\nfunction setLinkedRecordID(record, storageKey, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  record[storageKey] = link;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a list of references other records.\n */\nfunction setLinkedRecordIDs(record, storageKey, linkedIDs) {\n  // See perf note above for why we aren't using computed property access.\n  var links = {};\n  links[REFS_KEY] = linkedIDs;\n  record[storageKey] = links;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a reference to another record in the actor specific store.\n */\nfunction setActorLinkedRecordID(record, storageKey, actorIdentifier, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  link[ACTOR_IDENTIFIER_KEY] = actorIdentifier;\n  record[storageKey] = link;\n}\n\n/**\n * @public\n *\n * Get link to a record and the actor identifier for the store.\n */\nfunction getActorLinkedRecordID(record, storageKey) {\n  var link = record[storageKey];\n  if (link == null) {\n    return link;\n  }\n  !(typeof link === 'object' && typeof link[REF_KEY] === 'string' && link[ACTOR_IDENTIFIER_KEY] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getActorLinkedRecordID(): Expected `%s.%s` to be an actor specific linked ID, ' + 'was `%s`.', record[ID_KEY], storageKey, JSON.stringify(link)) : invariant(false) : void 0;\n  return [link[ACTOR_IDENTIFIER_KEY], link[REF_KEY]];\n}\nfunction getResolverLinkedRecordID(record, typeName) {\n  var id = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (id == null || isSuspenseSentinel(id)) {\n    return null;\n  }\n  // TODD: Deprecate client edges that return just id.\n  if (typeof id === 'object') {\n    id = id.id;\n  }\n  !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordID(): Expected value to be a linked ID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n  return generateClientObjectClientID(typeName, id);\n}\nfunction getResolverLinkedRecordIDs(record, typeName) {\n  var resolverValue = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (resolverValue == null || isSuspenseSentinel(resolverValue)) {\n    return null;\n  }\n  !Array.isArray(resolverValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected value to be an array of linked IDs, ' + 'was `%s`.', JSON.stringify(resolverValue)) : invariant(false) : void 0;\n  return resolverValue.map(function (id) {\n    if (id == null) {\n      return null;\n    }\n    // TODD: Deprecate client edges that return just id.\n    if (typeof id === 'object') {\n      id = id.id;\n    }\n    !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected item within resolver linked field to be a DataID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n    return generateClientObjectClientID(typeName, id);\n  });\n}\nmodule.exports = {\n  clone: clone,\n  copyFields: copyFields,\n  create: create,\n  freeze: freeze,\n  getDataID: getDataID,\n  getInvalidationEpoch: getInvalidationEpoch,\n  getLinkedRecordID: getLinkedRecordID,\n  getLinkedRecordIDs: getLinkedRecordIDs,\n  getType: getType,\n  getValue: getValue,\n  merge: merge,\n  setValue: setValue,\n  setLinkedRecordID: setLinkedRecordID,\n  setLinkedRecordIDs: setLinkedRecordIDs,\n  update: update,\n  getActorLinkedRecordID: getActorLinkedRecordID,\n  setActorLinkedRecordID: setActorLinkedRecordID,\n  getResolverLinkedRecordID: getResolverLinkedRecordID,\n  getResolverLinkedRecordIDs: getResolverLinkedRecordIDs\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayConcreteVariables'),\n  getFragmentVariables = _require.getFragmentVariables;\nvar _require2 = require('./RelayStoreUtils'),\n  CLIENT_EDGE_TRAVERSAL_PATH = _require2.CLIENT_EDGE_TRAVERSAL_PATH,\n  FRAGMENT_OWNER_KEY = _require2.FRAGMENT_OWNER_KEY,\n  FRAGMENTS_KEY = _require2.FRAGMENTS_KEY,\n  ID_KEY = _require2.ID_KEY,\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require2.IS_WITHIN_UNMATCHED_TYPE_REFINEMENT;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * @public\n *\n * Given the result `item` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment for that item.\n *\n * Example:\n *\n * Given two fragments as follows:\n *\n * ```\n * fragment Parent on User {\n *   id\n *   ...Child\n * }\n * fragment Child on User {\n *   name\n * }\n * ```\n *\n * And given some object `parent` that is the results of `Parent` for id \"4\",\n * the results of `Child` can be accessed by first getting a selector and then\n * using that selector to `lookup()` the results against the environment:\n *\n * ```\n * const childSelector = getSingularSelector(queryVariables, Child, parent);\n * const childData = environment.lookup(childSelector).data;\n * ```\n */\nfunction getSingularSelector(fragment, item) {\n  !(typeof item === 'object' && item !== null && !Array.isArray(item)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item)) : invariant(false) : void 0;\n  var dataID = item[ID_KEY];\n  var fragments = item[FRAGMENTS_KEY];\n  var mixedOwner = item[FRAGMENT_OWNER_KEY];\n  var isWithinUnmatchedTypeRefinement = item[IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] === true;\n  var mixedClientEdgeTraversalPath = item[CLIENT_EDGE_TRAVERSAL_PATH];\n  if (typeof dataID === 'string' && typeof fragments === 'object' && fragments !== null && typeof fragments[fragment.name] === 'object' && fragments[fragment.name] !== null && typeof mixedOwner === 'object' && mixedOwner !== null && (mixedClientEdgeTraversalPath == null || Array.isArray(mixedClientEdgeTraversalPath))) {\n    var owner = mixedOwner;\n    var clientEdgeTraversalPath = mixedClientEdgeTraversalPath;\n    var argumentVariables = fragments[fragment.name];\n    var fragmentVariables = getFragmentVariables(fragment, owner.variables, argumentVariables);\n    return createReaderSelector(fragment, dataID, fragmentVariables, owner, isWithinUnmatchedTypeRefinement, clientEdgeTraversalPath);\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    var stringifiedItem = JSON.stringify(item);\n    if (stringifiedItem.length > 499) {\n      stringifiedItem = stringifiedItem.substr(0, 498) + \"\\u2026\";\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`.', fragment.name, stringifiedItem, fragment.name) : void 0;\n  }\n  return null;\n}\n\n/**\n * @public\n *\n * Given the result `items` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment on those\n * items. This is similar to `getSingularSelector` but for \"plural\" fragments that\n * expect an array of results and therefore return an array of selectors.\n */\nfunction getPluralSelector(fragment, items) {\n  var selectors = null;\n  items.forEach(function (item, ii) {\n    var selector = item != null ? getSingularSelector(fragment, item) : null;\n    if (selector != null) {\n      selectors = selectors || [];\n      selectors.push(selector);\n    }\n  });\n  if (selectors == null) {\n    return null;\n  } else {\n    return {\n      kind: 'PluralReaderSelector',\n      selectors: selectors\n    };\n  }\n}\nfunction getSelector(fragment, item) {\n  if (item == null) {\n    return item;\n  } else if (fragment.metadata && fragment.metadata.plural === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getPluralSelector(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getSingularSelector(fragment, item);\n  }\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the selectors for those fragments from the results.\n *\n * The canonical use-case for this function is ReactRelayFragmentContainer, which\n * uses this function to convert (props, fragments) into selectors so that it\n * can read the results to pass to the inner component.\n */\nfunction getSelectorsFromObject(fragments, object) {\n  var selectors = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      selectors[key] = getSelector(fragment, item);\n    }\n  }\n  return selectors;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts a mapping of keys -> id(s) of the results.\n *\n * Similar to `getSelectorsFromObject()`, this function can be useful in\n * determining the \"identity\" of the props passed to a component.\n */\nfunction getDataIDsFromObject(fragments, object) {\n  var ids = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      ids[key] = getDataIDsFromFragment(fragment, item);\n    }\n  }\n  return ids;\n}\nfunction getDataIDsFromFragment(fragment, item) {\n  if (item == null) {\n    return item;\n  } else if (fragment.metadata && fragment.metadata.plural === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getDataIDs(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getDataID(fragment, item);\n  }\n}\n\n/**\n * @internal\n */\nfunction getDataIDs(fragment, items) {\n  var ids = null;\n  items.forEach(function (item) {\n    var id = item != null ? getDataID(fragment, item) : null;\n    if (id != null) {\n      ids = ids || [];\n      ids.push(id);\n    }\n  });\n  return ids;\n}\n\n/**\n * @internal\n */\nfunction getDataID(fragment, item) {\n  !(typeof item === 'object' && item !== null && !Array.isArray(item)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item)) : invariant(false) : void 0;\n  var dataID = item[ID_KEY];\n  if (typeof dataID === 'string') {\n    return dataID;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`, or `null` is passed as the fragment ' + \"reference for `%s` if it's conditonally included and the condition isn't met.\", fragment.name, JSON.stringify(item), fragment.name, fragment.name) : void 0;\n  return null;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the merged variables that would be in scope for those\n * fragments/results.\n *\n * This can be useful in determing what varaibles were used to fetch the data\n * for a Relay container, for example.\n */\nfunction getVariablesFromObject(fragments, object) {\n  var variables = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      var itemVariables = getVariablesFromFragment(fragment, item);\n      Object.assign(variables, itemVariables);\n    }\n  }\n  return variables;\n}\nfunction getVariablesFromFragment(fragment, item) {\n  var _fragment$metadata;\n  if (item == null) {\n    return {};\n  } else if (((_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.plural) === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getVariablesFromPluralFragment(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getVariablesFromSingularFragment(fragment, item) || {};\n  }\n}\nfunction getVariablesFromSingularFragment(fragment, item) {\n  var selector = getSingularSelector(fragment, item);\n  if (!selector) {\n    return null;\n  }\n  return selector.variables;\n}\nfunction getVariablesFromPluralFragment(fragment, items) {\n  var variables = {};\n  items.forEach(function (value, ii) {\n    if (value != null) {\n      var itemVariables = getVariablesFromSingularFragment(fragment, value);\n      if (itemVariables != null) {\n        Object.assign(variables, itemVariables);\n      }\n    }\n  });\n  return variables;\n}\nfunction areEqualSingularSelectors(thisSelector, thatSelector) {\n  return thisSelector.owner === thatSelector.owner && thisSelector.dataID === thatSelector.dataID && thisSelector.node === thatSelector.node && areEqual(thisSelector.variables, thatSelector.variables);\n}\n\n/**\n * @public\n *\n * Determine if two selectors are equal (represent the same selection). Note\n * that this function returns `false` when the two queries/fragments are\n * different objects, even if they select the same fields.\n */\nfunction areEqualSelectors(a, b) {\n  if (a === b) {\n    return true;\n  } else if (a == null) {\n    return b == null;\n  } else if (b == null) {\n    return a == null;\n  } else if (a.kind === 'SingularReaderSelector' && b.kind === 'SingularReaderSelector') {\n    return areEqualSingularSelectors(a, b);\n  } else if (a.kind === 'PluralReaderSelector' && b.kind === 'PluralReaderSelector') {\n    return a.selectors.length === b.selectors.length && a.selectors.every(function (s, i) {\n      return areEqualSingularSelectors(s, b.selectors[i]);\n    });\n  } else {\n    return false;\n  }\n}\nfunction createReaderSelector(fragment, dataID, variables, request) {\n  var isWithinUnmatchedTypeRefinement = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var clientEdgeTraversalPath = arguments.length > 5 ? arguments[5] : undefined;\n  return {\n    kind: 'SingularReaderSelector',\n    dataID: dataID,\n    isWithinUnmatchedTypeRefinement: isWithinUnmatchedTypeRefinement,\n    clientEdgeTraversalPath: clientEdgeTraversalPath !== null && clientEdgeTraversalPath !== void 0 ? clientEdgeTraversalPath : null,\n    node: fragment,\n    variables: variables,\n    owner: request\n  };\n}\nfunction createNormalizationSelector(node, dataID, variables) {\n  return {\n    dataID: dataID,\n    node: node,\n    variables: variables\n  };\n}\nmodule.exports = {\n  areEqualSelectors: areEqualSelectors,\n  createReaderSelector: createReaderSelector,\n  createNormalizationSelector: createNormalizationSelector,\n  getDataIDsFromFragment: getDataIDsFromFragment,\n  getDataIDsFromObject: getDataIDsFromObject,\n  getSingularSelector: getSingularSelector,\n  getPluralSelector: getPluralSelector,\n  getSelector: getSelector,\n  getSelectorsFromObject: getSelectorsFromObject,\n  getVariablesFromSingularFragment: getVariablesFromSingularFragment,\n  getVariablesFromPluralFragment: getVariablesFromPluralFragment,\n  getVariablesFromFragment: getVariablesFromFragment,\n  getVariablesFromObject: getVariablesFromObject\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n  assertInternalActorIdentifier = _require.assertInternalActorIdentifier;\nvar deepFreeze = require('../util/deepFreeze');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar resolveImmediate = require('../util/resolveImmediate');\nvar DataChecker = require('./DataChecker');\nvar defaultGetDataID = require('./defaultGetDataID');\nvar RelayModernRecord = require('./RelayModernRecord');\nvar RelayOptimisticRecordSource = require('./RelayOptimisticRecordSource');\nvar RelayReader = require('./RelayReader');\nvar RelayReferenceMarker = require('./RelayReferenceMarker');\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreSubscriptions = require('./RelayStoreSubscriptions');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require2 = require('./RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID,\n  ROOT_TYPE = _require2.ROOT_TYPE;\nvar _require3 = require('./ResolverCache'),\n  RecordResolverCache = _require3.RecordResolverCache;\nvar invariant = require('invariant');\nvar DEFAULT_RELEASE_BUFFER_SIZE = 10;\n\n/**\n * @public\n *\n * An implementation of the `Store` interface defined in `RelayStoreTypes`.\n *\n * Note that a Store takes ownership of all records provided to it: other\n * objects may continue to hold a reference to such records but may not mutate\n * them. The static Relay core is architected to avoid mutating records that may have been\n * passed to a store: operations that mutate records will either create fresh\n * records or clone existing records and modify the clones. Record immutability\n * is also enforced in development mode by freezing all records passed to a store.\n */\nvar RelayModernStore = /*#__PURE__*/function () {\n  function RelayModernStore(source, options) {\n    var _this = this;\n    var _options$gcReleaseBuf, _options$gcScheduler, _options$getDataID, _options$log, _options$operationLoa;\n    (0, _defineProperty2[\"default\"])(this, \"_gcStep\", function () {\n      if (_this._gcRun) {\n        if (_this._gcRun.next().done) {\n          _this._gcRun = null;\n        } else {\n          _this._gcScheduler(_this._gcStep);\n        }\n      }\n    });\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== \"production\") {\n      var storeIDs = source.getRecordIDs();\n      for (var ii = 0; ii < storeIDs.length; ii++) {\n        var record = source.get(storeIDs[ii]);\n        if (record) {\n          RelayModernRecord.freeze(record);\n        }\n      }\n    }\n    this._currentWriteEpoch = 0;\n    this._gcHoldCounter = 0;\n    this._gcReleaseBufferSize = (_options$gcReleaseBuf = options === null || options === void 0 ? void 0 : options.gcReleaseBufferSize) !== null && _options$gcReleaseBuf !== void 0 ? _options$gcReleaseBuf : DEFAULT_RELEASE_BUFFER_SIZE;\n    this._gcRun = null;\n    this._gcScheduler = (_options$gcScheduler = options === null || options === void 0 ? void 0 : options.gcScheduler) !== null && _options$gcScheduler !== void 0 ? _options$gcScheduler : resolveImmediate;\n    this._getDataID = (_options$getDataID = options === null || options === void 0 ? void 0 : options.getDataID) !== null && _options$getDataID !== void 0 ? _options$getDataID : defaultGetDataID;\n    this._globalInvalidationEpoch = null;\n    this._invalidationSubscriptions = new Set();\n    this._invalidatedRecordIDs = new Set();\n    this.__log = (_options$log = options === null || options === void 0 ? void 0 : options.log) !== null && _options$log !== void 0 ? _options$log : null;\n    this._queryCacheExpirationTime = options === null || options === void 0 ? void 0 : options.queryCacheExpirationTime;\n    this._operationLoader = (_options$operationLoa = options === null || options === void 0 ? void 0 : options.operationLoader) !== null && _options$operationLoa !== void 0 ? _options$operationLoa : null;\n    this._optimisticSource = null;\n    this._recordSource = source;\n    this._releaseBuffer = [];\n    this._roots = new Map();\n    this._shouldScheduleGC = false;\n    this._resolverCache = new RecordResolverCache(function () {\n      return _this._getMutableRecordSource();\n    });\n    this._storeSubscriptions = new RelayStoreSubscriptions(options === null || options === void 0 ? void 0 : options.log, this._resolverCache);\n    this._updatedRecordIDs = new Set();\n    this._shouldProcessClientComponents = options === null || options === void 0 ? void 0 : options.shouldProcessClientComponents;\n    initializeRecordSource(this._recordSource);\n  }\n  var _proto = RelayModernStore.prototype;\n  _proto.getSource = function getSource() {\n    var _this$_optimisticSour;\n    return (_this$_optimisticSour = this._optimisticSource) !== null && _this$_optimisticSour !== void 0 ? _this$_optimisticSour : this._recordSource;\n  };\n  _proto._getMutableRecordSource = function _getMutableRecordSource() {\n    var _this$_optimisticSour2;\n    return (_this$_optimisticSour2 = this._optimisticSource) !== null && _this$_optimisticSour2 !== void 0 ? _this$_optimisticSour2 : this._recordSource;\n  };\n  _proto.check = function check(operation, options) {\n    var _options$handlers, _options$getSourceFor, _options$getTargetFor, _options$defaultActor;\n    var selector = operation.root;\n    var source = this._getMutableRecordSource();\n    var globalInvalidationEpoch = this._globalInvalidationEpoch;\n    var rootEntry = this._roots.get(operation.request.identifier);\n    var operationLastWrittenAt = rootEntry != null ? rootEntry.epoch : null;\n\n    // Check if store has been globally invalidated\n    if (globalInvalidationEpoch != null) {\n      // If so, check if the operation we're checking was last written\n      // before or after invalidation occurred.\n      if (operationLastWrittenAt == null || operationLastWrittenAt <= globalInvalidationEpoch) {\n        // If the operation was written /before/ global invalidation occurred,\n        // or if this operation has never been written to the store before,\n        // we will consider the data for this operation to be stale\n        // (i.e. not resolvable from the store).\n        return {\n          status: 'stale'\n        };\n      }\n    }\n    var handlers = (_options$handlers = options === null || options === void 0 ? void 0 : options.handlers) !== null && _options$handlers !== void 0 ? _options$handlers : [];\n    var getSourceForActor = (_options$getSourceFor = options === null || options === void 0 ? void 0 : options.getSourceForActor) !== null && _options$getSourceFor !== void 0 ? _options$getSourceFor : function (actorIdentifier) {\n      assertInternalActorIdentifier(actorIdentifier);\n      return source;\n    };\n    var getTargetForActor = (_options$getTargetFor = options === null || options === void 0 ? void 0 : options.getTargetForActor) !== null && _options$getTargetFor !== void 0 ? _options$getTargetFor : function (actorIdentifier) {\n      assertInternalActorIdentifier(actorIdentifier);\n      return source;\n    };\n    var operationAvailability = DataChecker.check(getSourceForActor, getTargetForActor, (_options$defaultActor = options === null || options === void 0 ? void 0 : options.defaultActorIdentifier) !== null && _options$defaultActor !== void 0 ? _options$defaultActor : INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE, selector, handlers, this._operationLoader, this._getDataID, this._shouldProcessClientComponents);\n    return getAvailabilityStatus(operationAvailability, operationLastWrittenAt, rootEntry === null || rootEntry === void 0 ? void 0 : rootEntry.fetchTime, this._queryCacheExpirationTime);\n  };\n  _proto.retain = function retain(operation) {\n    var _this2 = this;\n    var id = operation.request.identifier;\n    var disposed = false;\n    var dispose = function dispose() {\n      // Ensure each retain can only dispose once\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      // For Flow: guard against the entry somehow not existing\n      var rootEntry = _this2._roots.get(id);\n      if (rootEntry == null) {\n        return;\n      }\n      // Decrement the ref count: if it becomes zero it is eligible\n      // for release.\n      rootEntry.refCount--;\n      if (rootEntry.refCount === 0) {\n        var _queryCacheExpirationTime = _this2._queryCacheExpirationTime;\n        var rootEntryIsStale = rootEntry.fetchTime != null && _queryCacheExpirationTime != null && rootEntry.fetchTime <= Date.now() - _queryCacheExpirationTime;\n        if (rootEntryIsStale) {\n          _this2._roots[\"delete\"](id);\n          _this2.scheduleGC();\n        } else {\n          _this2._releaseBuffer.push(id);\n\n          // If the release buffer is now over-full, remove the least-recently\n          // added entry and schedule a GC. Note that all items in the release\n          // buffer have a refCount of 0.\n          if (_this2._releaseBuffer.length > _this2._gcReleaseBufferSize) {\n            var _id = _this2._releaseBuffer.shift();\n            _this2._roots[\"delete\"](_id);\n            _this2.scheduleGC();\n          }\n        }\n      }\n    };\n    var rootEntry = this._roots.get(id);\n    if (rootEntry != null) {\n      if (rootEntry.refCount === 0) {\n        // This entry should be in the release buffer, but it no longer belongs\n        // there since it's retained. Remove it to maintain the invariant that\n        // all release buffer entries have a refCount of 0.\n        this._releaseBuffer = this._releaseBuffer.filter(function (_id) {\n          return _id !== id;\n        });\n      }\n      // If we've previously retained this operation, increment the refCount\n      rootEntry.refCount += 1;\n    } else {\n      // Otherwise create a new entry for the operation\n      this._roots.set(id, {\n        operation: operation,\n        refCount: 1,\n        epoch: null,\n        fetchTime: null\n      });\n    }\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.lookup = function lookup(selector) {\n    var source = this.getSource();\n    var snapshot = RelayReader.read(source, selector, this._resolverCache);\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(snapshot);\n    }\n    return snapshot;\n  }\n\n  // This method will return a list of updated owners from the subscriptions\n  ;\n  _proto.notify = function notify(sourceOperation, invalidateStore) {\n    var _this3 = this;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.notify.start',\n        sourceOperation: sourceOperation\n      });\n    }\n\n    // Increment the current write when notifying after executing\n    // a set of changes to the store.\n    this._currentWriteEpoch++;\n    if (invalidateStore === true) {\n      this._globalInvalidationEpoch = this._currentWriteEpoch;\n    }\n    if (RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n      // When a record is updated, we need to also handle records that depend on it,\n      // specifically Relay Resolver result records containing results based on the\n      // updated records. This both adds to updatedRecordIDs and invalidates any\n      // cached data as needed.\n      this._resolverCache.invalidateDataIDs(this._updatedRecordIDs);\n    }\n    var source = this.getSource();\n    var updatedOwners = [];\n    this._storeSubscriptions.updateSubscriptions(source, this._updatedRecordIDs, updatedOwners, sourceOperation);\n    this._invalidationSubscriptions.forEach(function (subscription) {\n      _this3._updateInvalidationSubscription(subscription, invalidateStore === true);\n    });\n    if (log != null) {\n      log({\n        name: 'store.notify.complete',\n        sourceOperation: sourceOperation,\n        updatedRecordIDs: this._updatedRecordIDs,\n        invalidatedRecordIDs: this._invalidatedRecordIDs\n      });\n    }\n    this._updatedRecordIDs.clear();\n    this._invalidatedRecordIDs.clear();\n\n    // If a source operation was provided (indicating the operation\n    // that produced this update to the store), record the current epoch\n    // at which this operation was written.\n    if (sourceOperation != null) {\n      // We only track the epoch at which the operation was written if\n      // it was previously retained, to keep the size of our operation\n      // epoch map bounded. If a query wasn't retained, we assume it can\n      // may be deleted at any moment and thus is not relevant for us to track\n      // for the purposes of invalidation.\n      var id = sourceOperation.request.identifier;\n      var rootEntry = this._roots.get(id);\n      if (rootEntry != null) {\n        rootEntry.epoch = this._currentWriteEpoch;\n        rootEntry.fetchTime = Date.now();\n      } else if (sourceOperation.request.node.params.operationKind === 'query' && this._gcReleaseBufferSize > 0 && this._releaseBuffer.length < this._gcReleaseBufferSize) {\n        // The operation isn't retained but there is space in the release buffer:\n        // temporarily track this operation in case the data can be reused soon.\n        var temporaryRootEntry = {\n          operation: sourceOperation,\n          refCount: 0,\n          epoch: this._currentWriteEpoch,\n          fetchTime: Date.now()\n        };\n        this._releaseBuffer.push(id);\n        this._roots.set(id, temporaryRootEntry);\n      }\n    }\n    return updatedOwners;\n  };\n  _proto.publish = function publish(source, idsMarkedForInvalidation) {\n    var target = this._getMutableRecordSource();\n    updateTargetFromSource(target, source,\n    // We increment the current epoch at the end of the set of updates,\n    // in notify(). Here, we pass what will be the incremented value of\n    // the epoch to use to write to invalidated records.\n    this._currentWriteEpoch + 1, idsMarkedForInvalidation, this._updatedRecordIDs, this._invalidatedRecordIDs);\n    // NOTE: log *after* processing the source so that even if a bad log function\n    // mutates the source, it doesn't affect Relay processing of it.\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.publish',\n        source: source,\n        optimistic: target === this._optimisticSource\n      });\n    }\n  };\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._storeSubscriptions.subscribe(snapshot, callback);\n  };\n  _proto.holdGC = function holdGC() {\n    var _this4 = this;\n    if (this._gcRun) {\n      this._gcRun = null;\n      this._shouldScheduleGC = true;\n    }\n    this._gcHoldCounter++;\n    var dispose = function dispose() {\n      if (_this4._gcHoldCounter > 0) {\n        _this4._gcHoldCounter--;\n        if (_this4._gcHoldCounter === 0 && _this4._shouldScheduleGC) {\n          _this4.scheduleGC();\n          _this4._shouldScheduleGC = false;\n        }\n      }\n    };\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.toJSON = function toJSON() {\n    return 'RelayModernStore()';\n  };\n  _proto.getEpoch = function getEpoch() {\n    return this._currentWriteEpoch;\n  }\n\n  // Internal API\n  ;\n  _proto.__getUpdatedRecordIDs = function __getUpdatedRecordIDs() {\n    return this._updatedRecordIDs;\n  };\n  _proto.lookupInvalidationState = function lookupInvalidationState(dataIDs) {\n    var _this5 = this;\n    var invalidations = new Map();\n    dataIDs.forEach(function (dataID) {\n      var _RelayModernRecord$ge;\n      var record = _this5.getSource().get(dataID);\n      invalidations.set(dataID, (_RelayModernRecord$ge = RelayModernRecord.getInvalidationEpoch(record)) !== null && _RelayModernRecord$ge !== void 0 ? _RelayModernRecord$ge : null);\n    });\n    invalidations.set('global', this._globalInvalidationEpoch);\n    return {\n      dataIDs: dataIDs,\n      invalidations: invalidations\n    };\n  };\n  _proto.checkInvalidationState = function checkInvalidationState(prevInvalidationState) {\n    var latestInvalidationState = this.lookupInvalidationState(prevInvalidationState.dataIDs);\n    var currentInvalidations = latestInvalidationState.invalidations;\n    var prevInvalidations = prevInvalidationState.invalidations;\n\n    // Check if global invalidation has changed\n    if (currentInvalidations.get('global') !== prevInvalidations.get('global')) {\n      return true;\n    }\n\n    // Check if the invalidation state for any of the ids has changed.\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(prevInvalidationState.dataIDs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var dataID = _step.value;\n        if (currentInvalidations.get(dataID) !== prevInvalidations.get(dataID)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return false;\n  };\n  _proto.subscribeToInvalidationState = function subscribeToInvalidationState(invalidationState, callback) {\n    var _this6 = this;\n    var subscription = {\n      callback: callback,\n      invalidationState: invalidationState\n    };\n    var dispose = function dispose() {\n      _this6._invalidationSubscriptions[\"delete\"](subscription);\n    };\n    this._invalidationSubscriptions.add(subscription);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto._updateInvalidationSubscription = function _updateInvalidationSubscription(subscription, invalidatedStore) {\n    var _this7 = this;\n    var callback = subscription.callback,\n      invalidationState = subscription.invalidationState;\n    var dataIDs = invalidationState.dataIDs;\n    var isSubscribedToInvalidatedIDs = invalidatedStore || dataIDs.some(function (dataID) {\n      return _this7._invalidatedRecordIDs.has(dataID);\n    });\n    if (!isSubscribedToInvalidatedIDs) {\n      return;\n    }\n    callback();\n  };\n  _proto.snapshot = function snapshot() {\n    !(this._optimisticSource == null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernStore: Unexpected call to snapshot() while a previous ' + 'snapshot exists.') : invariant(false) : void 0;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.snapshot'\n      });\n    }\n    this._storeSubscriptions.snapshotSubscriptions(this.getSource());\n    if (this._gcRun) {\n      this._gcRun = null;\n      this._shouldScheduleGC = true;\n    }\n    this._optimisticSource = RelayOptimisticRecordSource.create(this.getSource());\n  };\n  _proto.restore = function restore() {\n    !(this._optimisticSource != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernStore: Unexpected call to restore(), expected a snapshot ' + 'to exist (make sure to call snapshot()).') : invariant(false) : void 0;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.restore'\n      });\n    }\n    this._optimisticSource = null;\n    if (this._shouldScheduleGC) {\n      this.scheduleGC();\n    }\n    this._storeSubscriptions.restoreSubscriptions();\n  };\n  _proto.scheduleGC = function scheduleGC() {\n    if (this._gcHoldCounter > 0) {\n      this._shouldScheduleGC = true;\n      return;\n    }\n    if (this._gcRun) {\n      return;\n    }\n    this._gcRun = this._collect();\n    this._gcScheduler(this._gcStep);\n  }\n\n  /**\n   * Run a full GC synchronously.\n   */;\n  _proto.__gc = function __gc() {\n    // Don't run GC while there are optimistic updates applied\n    if (this._optimisticSource != null) {\n      return;\n    }\n    var gcRun = this._collect();\n    while (!gcRun.next().done) {}\n  };\n  _proto._collect = function* _collect() {\n    /* eslint-disable no-labels */\n    top: while (true) {\n      var startEpoch = this._currentWriteEpoch;\n      var references = new Set();\n\n      // Mark all records that are traversable from a root\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._roots.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var operation = _step2.value.operation;\n          var selector = operation.root;\n          RelayReferenceMarker.mark(this._recordSource, selector, references, this._operationLoader, this._shouldProcessClientComponents);\n          // Yield for other work after each operation\n          yield;\n\n          // If the store was updated, restart\n          if (startEpoch !== this._currentWriteEpoch) {\n            continue top;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var log = this.__log;\n      if (log != null) {\n        log({\n          name: 'store.gc',\n          references: references\n        });\n      }\n\n      // Sweep records without references\n      if (references.size === 0) {\n        // Short-circuit if *nothing* is referenced\n        this._recordSource.clear();\n      } else {\n        // Evict any unreferenced nodes\n        var storeIDs = this._recordSource.getRecordIDs();\n        for (var ii = 0; ii < storeIDs.length; ii++) {\n          var dataID = storeIDs[ii];\n          if (!references.has(dataID)) {\n            this._recordSource.remove(dataID);\n          }\n        }\n      }\n      return;\n    }\n  };\n  return RelayModernStore;\n}();\nfunction initializeRecordSource(target) {\n  if (!target.has(ROOT_ID)) {\n    var rootRecord = RelayModernRecord.create(ROOT_ID, ROOT_TYPE);\n    target.set(ROOT_ID, rootRecord);\n  }\n}\n\n/**\n * Updates the target with information from source, also updating a mapping of\n * which records in the target were changed as a result.\n * Additionally, will mark records as invalidated at the current write epoch\n * given the set of record ids marked as stale in this update.\n */\nfunction updateTargetFromSource(target, source, currentWriteEpoch, idsMarkedForInvalidation, updatedRecordIDs, invalidatedRecordIDs) {\n  // First, update any records that were marked for invalidation.\n  // For each provided dataID that was invalidated, we write the\n  // INVALIDATED_AT_KEY on the record, indicating\n  // the epoch at which the record was invalidated.\n  if (idsMarkedForInvalidation) {\n    idsMarkedForInvalidation.forEach(function (dataID) {\n      var targetRecord = target.get(dataID);\n      var sourceRecord = source.get(dataID);\n\n      // If record was deleted during the update (and also invalidated),\n      // we don't need to count it as an invalidated id\n      if (sourceRecord === null) {\n        return;\n      }\n      var nextRecord;\n      if (targetRecord != null) {\n        // If the target record exists, use it to set the epoch\n        // at which it was invalidated. This record will be updated with\n        // any changes from source in the section below\n        // where we update the target records based on the source.\n        nextRecord = RelayModernRecord.clone(targetRecord);\n      } else {\n        // If the target record doesn't exist, it means that a new record\n        // in the source was created (and also invalidated), so we use that\n        // record to set the epoch at which it was invalidated. This record\n        // will be updated with any changes from source in the section below\n        // where we update the target records based on the source.\n        nextRecord = sourceRecord != null ? RelayModernRecord.clone(sourceRecord) : null;\n      }\n      if (!nextRecord) {\n        return;\n      }\n      RelayModernRecord.setValue(nextRecord, RelayStoreUtils.INVALIDATED_AT_KEY, currentWriteEpoch);\n      invalidatedRecordIDs.add(dataID);\n      target.set(dataID, nextRecord);\n    });\n  }\n\n  // Update the target based on the changes present in source\n  var dataIDs = source.getRecordIDs();\n  for (var ii = 0; ii < dataIDs.length; ii++) {\n    var dataID = dataIDs[ii];\n    var sourceRecord = source.get(dataID);\n    var targetRecord = target.get(dataID);\n\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== \"production\") {\n      if (sourceRecord) {\n        RelayModernRecord.freeze(sourceRecord);\n      }\n    }\n    if (sourceRecord && targetRecord) {\n      // ReactFlightClientResponses are lazy and only materialize when readRoot\n      // is called when we read the field, so if the record is a Flight field\n      // we always use the new record's data regardless of whether\n      // it actually changed. Let React take care of reconciliation instead.\n      var nextRecord = RelayModernRecord.getType(targetRecord) === RelayStoreReactFlightUtils.REACT_FLIGHT_TYPE_NAME ? sourceRecord : RelayModernRecord.update(targetRecord, sourceRecord);\n      if (nextRecord !== targetRecord) {\n        // Prevent mutation of a record from outside the store.\n        if (process.env.NODE_ENV !== \"production\") {\n          RelayModernRecord.freeze(nextRecord);\n        }\n        updatedRecordIDs.add(dataID);\n        target.set(dataID, nextRecord);\n      }\n    } else if (sourceRecord === null) {\n      target[\"delete\"](dataID);\n      if (targetRecord !== null) {\n        updatedRecordIDs.add(dataID);\n      }\n    } else if (sourceRecord) {\n      target.set(dataID, sourceRecord);\n      updatedRecordIDs.add(dataID);\n    } // don't add explicit undefined\n  }\n}\n\n/**\n * Returns an OperationAvailability given the Availability returned\n * by checking an operation, and when that operation was last written to the store.\n * Specifically, the provided Availability of an operation will contain the\n * value of when a record referenced by the operation was most recently\n * invalidated; given that value, and given when this operation was last\n * written to the store, this function will return the overall\n * OperationAvailability for the operation.\n */\nfunction getAvailabilityStatus(operationAvailability, operationLastWrittenAt, operationFetchTime, queryCacheExpirationTime) {\n  var mostRecentlyInvalidatedAt = operationAvailability.mostRecentlyInvalidatedAt,\n    status = operationAvailability.status;\n  if (typeof mostRecentlyInvalidatedAt === 'number') {\n    // If some record referenced by this operation is stale, then the operation itself is stale\n    // if either the operation itself was never written *or* the operation was last written\n    // before the most recent invalidation of its reachable records.\n    if (operationLastWrittenAt == null || mostRecentlyInvalidatedAt > operationLastWrittenAt) {\n      return {\n        status: 'stale'\n      };\n    }\n  }\n  if (status === 'missing') {\n    return {\n      status: 'missing'\n    };\n  }\n  if (operationFetchTime != null && queryCacheExpirationTime != null) {\n    var isStale = operationFetchTime <= Date.now() - queryCacheExpirationTime;\n    if (isStale) {\n      return {\n        status: 'stale'\n      };\n    }\n  }\n\n  // There were no invalidations of any reachable records *or* the operation is known to have\n  // been fetched after the most recent record invalidation.\n  return {\n    status: 'available',\n    fetchTime: operationFetchTime !== null && operationFetchTime !== void 0 ? operationFetchTime : null\n  };\n}\nmodule.exports = RelayModernStore;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar invariant = require('invariant');\nvar RelayOperationTracker = /*#__PURE__*/function () {\n  function RelayOperationTracker() {\n    this._ownersToPendingOperations = new Map();\n    this._pendingOperationsToOwners = new Map();\n    this._ownersToPendingPromise = new Map();\n  }\n\n  /**\n   * Update the map of current processing operations with the set of\n   * affected owners and notify subscribers\n   */\n  var _proto = RelayOperationTracker.prototype;\n  _proto.update = function update(pendingOperation, affectedOwners) {\n    if (affectedOwners.size === 0) {\n      return;\n    }\n    var pendingOperationIdentifier = pendingOperation.identifier;\n    var newlyAffectedOwnersIdentifier = new Set();\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(affectedOwners),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var owner = _step.value;\n        var ownerIdentifier = owner.identifier;\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n        if (pendingOperationsAffectingOwner != null) {\n          // In this case the `ownerIdentifier` already affected by some operations\n          // We just need to detect, is it the same operation that we already\n          // have in the list, or it's a new operation\n          if (!pendingOperationsAffectingOwner.has(pendingOperationIdentifier)) {\n            pendingOperationsAffectingOwner.set(pendingOperationIdentifier, pendingOperation);\n            newlyAffectedOwnersIdentifier.add(ownerIdentifier);\n          }\n        } else {\n          // This is a new `ownerIdentifier` that is affected by the operation\n          this._ownersToPendingOperations.set(ownerIdentifier, new Map([[pendingOperationIdentifier, pendingOperation]]));\n          newlyAffectedOwnersIdentifier.add(ownerIdentifier);\n        }\n      }\n\n      // No new owners were affected by this operation, we may stop here\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (newlyAffectedOwnersIdentifier.size === 0) {\n      return;\n    }\n\n    // But, if some owners were affected we need to add them to\n    // the `_pendingOperationsToOwners` set\n    var ownersAffectedByPendingOperation = this._pendingOperationsToOwners.get(pendingOperationIdentifier) || new Set();\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(newlyAffectedOwnersIdentifier),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _ownerIdentifier = _step2.value;\n        this._resolveOwnerResolvers(_ownerIdentifier);\n        ownersAffectedByPendingOperation.add(_ownerIdentifier);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    this._pendingOperationsToOwners.set(pendingOperationIdentifier, ownersAffectedByPendingOperation);\n  }\n\n  /**\n   * Once pending operation is completed we need to remove it\n   * from all tracking maps\n   */;\n  _proto.complete = function complete(pendingOperation) {\n    var pendingOperationIdentifier = pendingOperation.identifier;\n    var affectedOwnersIdentifier = this._pendingOperationsToOwners.get(pendingOperationIdentifier);\n    if (affectedOwnersIdentifier == null) {\n      return;\n    }\n    // These were the owners affected only by `pendingOperationIdentifier`\n    var completedOwnersIdentifier = new Set();\n\n    // These were the owners affected by `pendingOperationIdentifier`\n    // and some other operations\n    var updatedOwnersIdentifier = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(affectedOwnersIdentifier),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var ownerIdentifier = _step3.value;\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n        if (!pendingOperationsAffectingOwner) {\n          continue;\n        }\n        pendingOperationsAffectingOwner[\"delete\"](pendingOperationIdentifier);\n        if (pendingOperationsAffectingOwner.size > 0) {\n          updatedOwnersIdentifier.add(ownerIdentifier);\n        } else {\n          completedOwnersIdentifier.add(ownerIdentifier);\n        }\n      }\n\n      // Complete subscriptions for all owners, affected by `pendingOperationIdentifier`\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(completedOwnersIdentifier),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _ownerIdentifier2 = _step4.value;\n        this._resolveOwnerResolvers(_ownerIdentifier2);\n        this._ownersToPendingOperations[\"delete\"](_ownerIdentifier2);\n      }\n\n      // Update all ownerIdentifier that were updated by `pendingOperationIdentifier` but still\n      // are affected by other operations\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(updatedOwnersIdentifier),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _ownerIdentifier3 = _step5.value;\n        this._resolveOwnerResolvers(_ownerIdentifier3);\n      }\n\n      // Finally, remove pending operation identifier\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._pendingOperationsToOwners[\"delete\"](pendingOperationIdentifier);\n  };\n  _proto._resolveOwnerResolvers = function _resolveOwnerResolvers(ownerIdentifier) {\n    var promiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);\n    if (promiseEntry != null) {\n      promiseEntry.resolve();\n    }\n    this._ownersToPendingPromise[\"delete\"](ownerIdentifier);\n  };\n  _proto.getPendingOperationsAffectingOwner = function getPendingOperationsAffectingOwner(owner) {\n    var ownerIdentifier = owner.identifier;\n    var pendingOperationsForOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n    if (pendingOperationsForOwner == null || pendingOperationsForOwner.size === 0) {\n      return null;\n    }\n    var cachedPromiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);\n    if (cachedPromiseEntry != null) {\n      return {\n        promise: cachedPromiseEntry.promise,\n        pendingOperations: cachedPromiseEntry.pendingOperations\n      };\n    }\n    var resolve;\n    var promise = new Promise(function (r) {\n      resolve = r;\n    });\n    !(resolve != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayOperationTracker: Expected resolver to be defined. If you' + 'are seeing this, it is likely a bug in Relay.') : invariant(false) : void 0;\n    var pendingOperations = Array.from(pendingOperationsForOwner.values());\n    this._ownersToPendingPromise.set(ownerIdentifier, {\n      promise: promise,\n      resolve: resolve,\n      pendingOperations: pendingOperations\n    });\n    return {\n      promise: promise,\n      pendingOperations: pendingOperations\n    };\n  };\n  return RelayOperationTracker;\n}();\nmodule.exports = RelayOperationTracker;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n  var _proto = RelayOptimisticRecordSource.prototype;\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n    this._sink.clear();\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n    var merged = (0, _objectSpread2[\"default\"])({}, this._base.toJSON());\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n    return merged;\n  };\n  _proto.getOptimisticRecordIDs = function getOptimisticRecordIDs() {\n    return new Set(this._sink.getRecordIDs());\n  };\n  return RelayOptimisticRecordSource;\n}();\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\nfunction getOptimisticRecordIDs(source) {\n  !(source instanceof RelayOptimisticRecordSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getOptimisticRecordIDs: Instance of RelayOptimisticRecordSource is expected') : invariant(false) : void 0;\n  return source.getOptimisticRecordIDs();\n}\nmodule.exports = {\n  create: create,\n  getOptimisticRecordIDs: getOptimisticRecordIDs\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _global$ErrorUtils$ap, _global$ErrorUtils;\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\nvar RelayRecordSourceSelectorProxy = require('../mutations/RelayRecordSourceSelectorProxy');\nvar RelayReader = require('./RelayReader');\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\nvar applyWithGuard = (_global$ErrorUtils$ap = _global === null || _global === void 0 ? void 0 : (_global$ErrorUtils = _global.ErrorUtils) === null || _global$ErrorUtils === void 0 ? void 0 : _global$ErrorUtils.applyWithGuard) !== null && _global$ErrorUtils$ap !== void 0 ? _global$ErrorUtils$ap : function (callback, context, args, onError, name) {\n  return callback.apply(context, args);\n};\n\n/**\n * Coordinates the concurrent modification of a `Store` due to optimistic and\n * non-revertable client updates and server payloads:\n * - Applies optimistic updates.\n * - Reverts optimistic updates, rebasing any subsequent updates.\n * - Commits client updates (typically for client schema extensions).\n * - Commits server updates:\n *   - Normalizes query/mutation/subscription responses.\n *   - Executes handlers for \"handle\" fields.\n *   - Reverts and reapplies pending optimistic updates.\n */\nvar RelayPublishQueue = /*#__PURE__*/function () {\n  // True if the next `run()` should apply the backup and rerun all optimistic\n  // updates performing a rebase.\n\n  // Payloads to apply or Sources to publish to the store with the next `run()`.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // Optimistic updaters to add with the next `run()`.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // Optimistic updaters that are already added and might be rerun in order to\n  // rebase them.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // For _pendingOptimisticUpdates, _appliedOptimisticUpdates, and _pendingData,\n  // we want to parametrize by \"any\" since the type is effectively\n  // \"the union of all T's that PublishQueue's methods were called with\".\n\n  // Garbage collection hold, should rerun gc on dispose\n\n  function RelayPublishQueue(store, handlerProvider, getDataID, missingFieldHandlers) {\n    this._hasStoreSnapshot = false;\n    this._handlerProvider = handlerProvider || null;\n    this._pendingBackupRebase = false;\n    this._pendingData = new Set();\n    this._pendingOptimisticUpdates = new Set();\n    this._store = store;\n    this._appliedOptimisticUpdates = new Set();\n    this._gcHold = null;\n    this._getDataID = getDataID;\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n\n  /**\n   * Schedule applying an optimistic updates on the next `run()`.\n   */\n  var _proto = RelayPublishQueue.prototype;\n  _proto.applyUpdate = function applyUpdate(updater) {\n    !(!this._appliedOptimisticUpdates.has(updater) && !this._pendingOptimisticUpdates.has(updater)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayPublishQueue: Cannot apply the same update function more than ' + 'once concurrently.') : invariant(false) : void 0;\n    this._pendingOptimisticUpdates.add(updater);\n  }\n\n  /**\n   * Schedule reverting an optimistic updates on the next `run()`.\n   */;\n  _proto.revertUpdate = function revertUpdate(updater) {\n    if (this._pendingOptimisticUpdates.has(updater)) {\n      // Reverted before it was applied\n      this._pendingOptimisticUpdates[\"delete\"](updater);\n    } else if (this._appliedOptimisticUpdates.has(updater)) {\n      this._pendingBackupRebase = true;\n      this._appliedOptimisticUpdates[\"delete\"](updater);\n    }\n  }\n\n  /**\n   * Schedule a revert of all optimistic updates on the next `run()`.\n   */;\n  _proto.revertAll = function revertAll() {\n    this._pendingBackupRebase = true;\n    this._pendingOptimisticUpdates.clear();\n    this._appliedOptimisticUpdates.clear();\n  }\n\n  /**\n   * Schedule applying a payload to the store on the next `run()`.\n   */;\n  _proto.commitPayload = function commitPayload(operation, payload, updater) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'payload',\n      operation: operation,\n      payload: payload,\n      updater: updater\n    });\n  }\n\n  /**\n   * Schedule an updater to mutate the store on the next `run()` typically to\n   * update client schema fields.\n   */;\n  _proto.commitUpdate = function commitUpdate(updater) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'updater',\n      updater: updater\n    });\n  }\n\n  /**\n   * Schedule a publish to the store from the provided source on the next\n   * `run()`. As an example, to update the store with substituted fields that\n   * are missing in the store.\n   */;\n  _proto.commitSource = function commitSource(source) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'source',\n      source: source\n    });\n  }\n\n  /**\n   * Execute all queued up operations from the other public methods.\n   */;\n  _proto.run = function run(sourceOperation) {\n    var runWillClearGcHold = this._appliedOptimisticUpdates === 0 && !!this._gcHold;\n    var runIsANoop =\n    // this._pendingBackupRebase is true if an applied optimistic\n    // update has potentially been reverted or if this._pendingData is not empty.\n    !this._pendingBackupRebase && this._pendingOptimisticUpdates.size === 0 && !runWillClearGcHold;\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(!runIsANoop, 'RelayPublishQueue.run was called, but the call would have been a noop.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(this._isRunning !== true, 'A store update was detected within another store update. Please ' + \"make sure new store updates aren't being executed within an \" + 'updater function for a different update.') : void 0;\n      this._isRunning = true;\n    }\n    if (runIsANoop) {\n      if (process.env.NODE_ENV !== \"production\") {\n        this._isRunning = false;\n      }\n      return [];\n    }\n    if (this._pendingBackupRebase) {\n      if (this._hasStoreSnapshot) {\n        this._store.restore();\n        this._hasStoreSnapshot = false;\n      }\n    }\n    var invalidatedStore = this._commitData();\n    if (this._pendingOptimisticUpdates.size || this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      if (!this._hasStoreSnapshot) {\n        this._store.snapshot();\n        this._hasStoreSnapshot = true;\n      }\n      this._applyUpdates();\n    }\n    this._pendingBackupRebase = false;\n    if (this._appliedOptimisticUpdates.size > 0) {\n      if (!this._gcHold) {\n        this._gcHold = this._store.holdGC();\n      }\n    } else {\n      if (this._gcHold) {\n        this._gcHold.dispose();\n        this._gcHold = null;\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      this._isRunning = false;\n    }\n    return this._store.notify(sourceOperation, invalidatedStore);\n  }\n\n  /**\n   * _publishSourceFromPayload will return a boolean indicating if the\n   * publish caused the store to be globally invalidated.\n   */;\n  _proto._publishSourceFromPayload = function _publishSourceFromPayload(pendingPayload) {\n    var _this = this;\n    var payload = pendingPayload.payload,\n      operation = pendingPayload.operation,\n      updater = pendingPayload.updater;\n    var source = payload.source,\n      fieldPayloads = payload.fieldPayloads;\n    var mutator = new RelayRecordSourceMutator(this._store.getSource(), source);\n    var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider, this._missingFieldHandlers);\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for ' + 'handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(recordSourceProxy, fieldPayload);\n      });\n    }\n    if (updater) {\n      var selector = operation.fragment;\n      !(selector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a selector to be provided with updater function.') : invariant(false) : void 0;\n      var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, selector, this._missingFieldHandlers);\n      var selectorData = lookupSelector(source, selector);\n      updater(recordSourceSelectorProxy, selectorData);\n    }\n    var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();\n    this._store.publish(source, idsMarkedForInvalidation);\n    return recordSourceProxy.isStoreMarkedForInvalidation();\n  }\n\n  /**\n   * _commitData will return a boolean indicating if any of\n   * the pending commits caused the store to be globally invalidated.\n   */;\n  _proto._commitData = function _commitData() {\n    var _this2 = this;\n    if (!this._pendingData.size) {\n      return false;\n    }\n    var invalidatedStore = false;\n    this._pendingData.forEach(function (data) {\n      if (data.kind === 'payload') {\n        var payloadInvalidatedStore = _this2._publishSourceFromPayload(data);\n        invalidatedStore = invalidatedStore || payloadInvalidatedStore;\n      } else if (data.kind === 'source') {\n        var source = data.source;\n        _this2._store.publish(source);\n      } else {\n        var updater = data.updater;\n        var sink = RelayRecordSource.create();\n        var mutator = new RelayRecordSourceMutator(_this2._store.getSource(), sink);\n        var recordSourceProxy = new RelayRecordSourceProxy(mutator, _this2._getDataID, _this2._handlerProvider, _this2._missingFieldHandlers);\n        applyWithGuard(updater, null, [recordSourceProxy], null, 'RelayPublishQueue:commitData');\n        invalidatedStore = invalidatedStore || recordSourceProxy.isStoreMarkedForInvalidation();\n        var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();\n        _this2._store.publish(sink, idsMarkedForInvalidation);\n      }\n    });\n    this._pendingData.clear();\n    return invalidatedStore;\n  }\n\n  /**\n   * Note that unlike _commitData, _applyUpdates will NOT return a boolean\n   * indicating if the store was globally invalidated, since invalidating the\n   * store during an optimistic update is a no-op.\n   */;\n  _proto._applyUpdates = function _applyUpdates() {\n    var _this3 = this;\n    var sink = RelayRecordSource.create();\n    var mutator = new RelayRecordSourceMutator(this._store.getSource(), sink);\n    var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider, this._missingFieldHandlers);\n\n    // $FlowFixMe[unclear-type] see explanation above.\n    var processUpdate = function processUpdate(optimisticUpdate) {\n      if (optimisticUpdate.storeUpdater) {\n        var storeUpdater = optimisticUpdate.storeUpdater;\n        applyWithGuard(storeUpdater, null, [recordSourceProxy], null, 'RelayPublishQueue:applyUpdates');\n      } else {\n        var operation = optimisticUpdate.operation,\n          payload = optimisticUpdate.payload,\n          updater = optimisticUpdate.updater;\n        var source = payload.source,\n          fieldPayloads = payload.fieldPayloads;\n        if (source) {\n          recordSourceProxy.publishSource(source, fieldPayloads);\n        }\n        if (updater) {\n          var selectorData;\n          if (source) {\n            selectorData = lookupSelector(source, operation.fragment);\n          }\n          var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, operation.fragment, _this3._missingFieldHandlers);\n          applyWithGuard(updater, null, [recordSourceSelectorProxy, selectorData], null, 'RelayPublishQueue:applyUpdates');\n        }\n      }\n    };\n\n    // rerun all updaters in case we are running a rebase\n    if (this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      this._appliedOptimisticUpdates.forEach(processUpdate);\n    }\n\n    // apply any new updaters\n    if (this._pendingOptimisticUpdates.size) {\n      this._pendingOptimisticUpdates.forEach(function (optimisticUpdate) {\n        processUpdate(optimisticUpdate);\n        _this3._appliedOptimisticUpdates.add(optimisticUpdate);\n      });\n      this._pendingOptimisticUpdates.clear();\n    }\n    this._store.publish(sink);\n  };\n  return RelayPublishQueue;\n}();\nfunction lookupSelector(source, selector) {\n  var selectorData = RelayReader.read(source, selector).data;\n  if (process.env.NODE_ENV !== \"production\") {\n    var deepFreeze = require('../util/deepFreeze');\n    if (selectorData) {\n      deepFreeze(selectorData);\n    }\n  }\n  return selectorData;\n}\nmodule.exports = RelayPublishQueue;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require.ACTOR_CHANGE,\n  ALIASED_FRAGMENT_SPREAD = _require.ALIASED_FRAGMENT_SPREAD,\n  ALIASED_INLINE_FRAGMENT_SPREAD = _require.ALIASED_INLINE_FRAGMENT_SPREAD,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EDGE_TO_SERVER_OBJECT = _require.CLIENT_EDGE_TO_SERVER_OBJECT,\n  CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n  CONDITION = _require.CONDITION,\n  DEFER = _require.DEFER,\n  FLIGHT_FIELD = _require.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n  INLINE_DATA_FRAGMENT_SPREAD = _require.INLINE_DATA_FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n  LINKED_FIELD = _require.LINKED_FIELD,\n  MODULE_IMPORT = _require.MODULE_IMPORT,\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER,\n  RELAY_RESOLVER = _require.RELAY_RESOLVER,\n  REQUIRED_FIELD = _require.REQUIRED_FIELD,\n  SCALAR_FIELD = _require.SCALAR_FIELD,\n  STREAM = _require.STREAM;\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require2 = require('./experimental-live-resolvers/LiveResolverSuspenseSentinel'),\n  isSuspenseSentinel = _require2.isSuspenseSentinel;\nvar RelayConcreteVariables = require('./RelayConcreteVariables');\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayStoreReactFlightUtils'),\n  getReactFlightClientResponse = _require3.getReactFlightClientResponse;\nvar _require4 = require('./RelayStoreUtils'),\n  CLIENT_EDGE_TRAVERSAL_PATH = _require4.CLIENT_EDGE_TRAVERSAL_PATH,\n  FRAGMENT_OWNER_KEY = _require4.FRAGMENT_OWNER_KEY,\n  FRAGMENT_PROP_NAME_KEY = _require4.FRAGMENT_PROP_NAME_KEY,\n  FRAGMENTS_KEY = _require4.FRAGMENTS_KEY,\n  ID_KEY = _require4.ID_KEY,\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require4.IS_WITHIN_UNMATCHED_TYPE_REFINEMENT,\n  MODULE_COMPONENT_KEY = _require4.MODULE_COMPONENT_KEY,\n  ROOT_ID = _require4.ROOT_ID,\n  getArgumentValues = _require4.getArgumentValues,\n  getModuleComponentKey = _require4.getModuleComponentKey,\n  getStorageKey = _require4.getStorageKey;\nvar _require5 = require('./ResolverCache'),\n  NoopResolverCache = _require5.NoopResolverCache;\nvar _require6 = require('./ResolverFragments'),\n  RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL = _require6.RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL,\n  withResolverContext = _require6.withResolverContext;\nvar _require7 = require('./TypeID'),\n  generateTypeID = _require7.generateTypeID;\nvar invariant = require('invariant');\nfunction read(recordSource, selector, resolverCache) {\n  var reader = new RelayReader(recordSource, selector, resolverCache !== null && resolverCache !== void 0 ? resolverCache : new NoopResolverCache());\n  return reader.read();\n}\n\n/**\n * @private\n */\nvar RelayReader = /*#__PURE__*/function () {\n  function RelayReader(recordSource, selector, resolverCache) {\n    var _selector$clientEdgeT;\n    this._clientEdgeTraversalPath = RelayFeatureFlags.ENABLE_CLIENT_EDGES && (_selector$clientEdgeT = selector.clientEdgeTraversalPath) !== null && _selector$clientEdgeT !== void 0 && _selector$clientEdgeT.length ? (0, _toConsumableArray2[\"default\"])(selector.clientEdgeTraversalPath) : [];\n    this._missingClientEdges = [];\n    this._missingLiveResolverFields = [];\n    this._isMissingData = false;\n    this._isWithinUnmatchedTypeRefinement = false;\n    this._missingRequiredFields = null;\n    this._owner = selector.owner;\n    this._recordSource = recordSource;\n    this._seenRecords = new Set();\n    this._selector = selector;\n    this._variables = selector.variables;\n    this._resolverCache = resolverCache;\n    this._resolverErrors = [];\n    this._fragmentName = selector.node.name;\n    this._updatedDataIDs = new Set();\n  }\n  var _proto = RelayReader.prototype;\n  _proto.read = function read() {\n    var _this$_selector = this._selector,\n      node = _this$_selector.node,\n      dataID = _this$_selector.dataID,\n      isWithinUnmatchedTypeRefinement = _this$_selector.isWithinUnmatchedTypeRefinement;\n    var abstractKey = node.abstractKey;\n    var record = this._recordSource.get(dataID);\n\n    // Relay historically allowed child fragments to be read even if the root object\n    // did not match the type of the fragment: either the root object has a different\n    // concrete type than the fragment (for concrete fragments) or the root object does\n    // not conform to the interface/union for abstract fragments.\n    // For suspense purposes, however, we want to accurately compute whether any data\n    // is missing: but if the fragment type doesn't match (or a parent type didn't\n    // match), then no data is expected to be present.\n\n    // By default data is expected to be present unless this selector was read out\n    // from within a non-matching type refinement in a parent fragment:\n    var isDataExpectedToBePresent = !isWithinUnmatchedTypeRefinement;\n\n    // If this is a concrete fragment and the concrete type of the record does not\n    // match, then no data is expected to be present.\n    if (isDataExpectedToBePresent && abstractKey == null && record != null) {\n      var recordType = RelayModernRecord.getType(record);\n      if (recordType !== node.type &&\n      // The root record type is a special `__Root` type and may not match the\n      // type on the ast, so ignore type mismatches at the root.\n      // We currently detect whether we're at the root by checking against ROOT_ID,\n      // but this does not work for mutations/subscriptions which generate unique\n      // root ids. This is acceptable in practice as we don't read data for mutations/\n      // subscriptions in a situation where we would use isMissingData to decide whether\n      // to suspend or not.\n      // TODO T96653810: Correctly detect reading from root of mutation/subscription\n      dataID !== ROOT_ID) {\n        isDataExpectedToBePresent = false;\n      }\n    }\n\n    // If this is an abstract fragment (and the precise refinement GK is enabled)\n    // then data is only expected to be present if the record type is known to\n    // implement the interface. If we aren't sure whether the record implements\n    // the interface, that itself constitutes \"expected\" data being missing.\n    if (isDataExpectedToBePresent && abstractKey != null && record != null) {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n      if (implementsInterface === false) {\n        // Type known to not implement the interface\n        isDataExpectedToBePresent = false;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._isMissingData = true;\n      }\n    }\n    this._isWithinUnmatchedTypeRefinement = !isDataExpectedToBePresent;\n    var data = this._traverse(node, dataID, null);\n    if (this._updatedDataIDs.size > 0) {\n      this._resolverCache.notifyUpdatedSubscribers(this._updatedDataIDs);\n      this._updatedDataIDs.clear();\n    }\n    return {\n      data: data,\n      isMissingData: this._isMissingData && isDataExpectedToBePresent,\n      missingClientEdges: RelayFeatureFlags.ENABLE_CLIENT_EDGES && this._missingClientEdges.length ? this._missingClientEdges : null,\n      missingLiveResolverFields: this._missingLiveResolverFields,\n      seenRecords: this._seenRecords,\n      selector: this._selector,\n      missingRequiredFields: this._missingRequiredFields,\n      relayResolverErrors: this._resolverErrors\n    };\n  };\n  _proto._markDataAsMissing = function _markDataAsMissing() {\n    this._isMissingData = true;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && this._clientEdgeTraversalPath.length) {\n      var top = this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1];\n      // Top can be null if we've traversed past a client edge into an ordinary\n      // client extension field; we never want to fetch in response to missing\n      // data off of a client extension field.\n      if (top !== null) {\n        this._missingClientEdges.push({\n          request: top.readerClientEdge.operation,\n          clientEdgeDestinationID: top.clientEdgeDestinationID\n        });\n      }\n    }\n  };\n  _proto._traverse = function _traverse(node, dataID, prevData) {\n    var record = this._recordSource.get(dataID);\n    this._seenRecords.add(dataID);\n    if (record == null) {\n      if (record === undefined) {\n        this._markDataAsMissing();\n      }\n      return record;\n    }\n    var data = prevData || {};\n    var hadRequiredData = this._traverseSelections(node.selections, record, data);\n    return hadRequiredData ? data : null;\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._maybeReportUnexpectedNull = function _maybeReportUnexpectedNull(fieldPath, action, _record) {\n    var _this$_missingRequire;\n    if (((_this$_missingRequire = this._missingRequiredFields) === null || _this$_missingRequire === void 0 ? void 0 : _this$_missingRequire.action) === 'THROW') {\n      // Chained @required directives may cause a parent `@required(action:\n      // THROW)` field to become null, so the first missing field we\n      // encounter is likely to be the root cause of the error.\n      return;\n    }\n    var owner = this._fragmentName;\n    switch (action) {\n      case 'THROW':\n        this._missingRequiredFields = {\n          action: action,\n          field: {\n            path: fieldPath,\n            owner: owner\n          }\n        };\n        return;\n      case 'LOG':\n        if (this._missingRequiredFields == null) {\n          this._missingRequiredFields = {\n            action: action,\n            fields: [{\n              path: fieldPath,\n              owner: owner\n            }]\n          };\n        } else {\n          this._missingRequiredFields = {\n            action: action,\n            fields: [].concat((0, _toConsumableArray2[\"default\"])(this._missingRequiredFields.fields), [{\n              path: fieldPath,\n              owner: owner\n            }])\n          };\n        }\n        return;\n      default:\n        action;\n    }\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, record, data) /* had all expected data */{\n    for (var i = 0; i < selections.length; i++) {\n      var selection = selections[i];\n      switch (selection.kind) {\n        case REQUIRED_FIELD:\n          {\n            var fieldValue = this._readRequiredField(selection, record, data);\n            if (fieldValue == null) {\n              var action = selection.action;\n              if (action !== 'NONE') {\n                this._maybeReportUnexpectedNull(selection.path, action, record);\n              }\n              // We are going to throw, or our parent is going to get nulled out.\n              // Either way, sibling values are going to be ignored, so we can\n              // bail early here as an optimization.\n              return false;\n            }\n            break;\n          }\n        case SCALAR_FIELD:\n          this._readScalar(selection, record, data);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            this._readPluralLink(selection, record, data);\n          } else {\n            this._readLink(selection, record, data);\n          }\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            var hasExpectedData = this._traverseSelections(selection.selections, record, data);\n            if (!hasExpectedData) {\n              return false;\n            }\n          }\n          break;\n        case INLINE_FRAGMENT:\n          {\n            if (this._readInlineFragment(selection, record, data) === false) {\n              return false;\n            }\n            break;\n          }\n        case RELAY_LIVE_RESOLVER:\n        case RELAY_RESOLVER:\n          {\n            if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n              throw new Error('Relay Resolver fields are not yet supported.');\n            }\n            this._readResolverField(selection, record, data);\n            break;\n          }\n        case FRAGMENT_SPREAD:\n          this._createFragmentPointer(selection, record, data);\n          break;\n        case ALIASED_FRAGMENT_SPREAD:\n          data[selection.name] = this._createAliasedFragmentSpread(selection, record);\n          break;\n        case ALIASED_INLINE_FRAGMENT_SPREAD:\n          {\n            var _fieldValue = this._readInlineFragment(selection.fragment, record, {});\n            if (_fieldValue === false) {\n              _fieldValue = null;\n            }\n            data[selection.name] = _fieldValue;\n            break;\n          }\n        case MODULE_IMPORT:\n          this._readModuleImport(selection, record, data);\n          break;\n        case INLINE_DATA_FRAGMENT_SPREAD:\n          this._createInlineDataOrResolverFragmentPointer(selection, record, data);\n          break;\n        case DEFER:\n        case CLIENT_EXTENSION:\n          {\n            var isMissingData = this._isMissingData;\n            var alreadyMissingClientEdges = this._missingClientEdges.length;\n            if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n              this._clientEdgeTraversalPath.push(null);\n            }\n            var _hasExpectedData = this._traverseSelections(selection.selections, record, data);\n            // The only case where we want to suspend due to missing data off of\n            // a client extension is if we reached a client edge that we might be\n            // able to fetch, or there is a missing data in one of the live resolvers.\n            this._isMissingData = isMissingData || this._missingClientEdges.length > alreadyMissingClientEdges || this._missingLiveResolverFields.length > 0;\n            if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n              this._clientEdgeTraversalPath.pop();\n            }\n            if (!_hasExpectedData) {\n              return false;\n            }\n            break;\n          }\n        case STREAM:\n          {\n            var _hasExpectedData2 = this._traverseSelections(selection.selections, record, data);\n            if (!_hasExpectedData2) {\n              return false;\n            }\n            break;\n          }\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            this._readFlightField(selection, record, data);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case ACTOR_CHANGE:\n          this._readActorChange(selection, record, data);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n        case CLIENT_EDGE_TO_SERVER_OBJECT:\n          if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n            this._readClientEdge(selection, record, data);\n          } else {\n            throw new Error('Client edges are not yet supported.');\n          }\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    }\n    return true;\n  };\n  _proto._readRequiredField = function _readRequiredField(selection, record, data) {\n    switch (selection.field.kind) {\n      case SCALAR_FIELD:\n        return this._readScalar(selection.field, record, data);\n      case LINKED_FIELD:\n        if (selection.field.plural) {\n          return this._readPluralLink(selection.field, record, data);\n        } else {\n          return this._readLink(selection.field, record, data);\n        }\n      case RELAY_RESOLVER:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readResolverField(selection.field, record, data);\n      case RELAY_LIVE_RESOLVER:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readResolverField(selection.field, record, data);\n      case CLIENT_EDGE_TO_CLIENT_OBJECT:\n      case CLIENT_EDGE_TO_SERVER_OBJECT:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readClientEdge(selection.field, record, data);\n      default:\n        selection.field.kind;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._readResolverField = function _readResolverField(field, record, data) {\n    var _this = this;\n    var _field$alias;\n    var fragment = field.fragment;\n    var parentRecordID = RelayModernRecord.getDataID(record);\n\n    // Found when reading the resolver fragment, which can happen either when\n    // evaluating the resolver and it calls readFragment, or when checking if the\n    // inputs have changed since a previous evaluation:\n    var snapshot;\n\n    // The function `getDataForResolverFragment` serves two purposes:\n    // 1. To memoize reads of the resolver's root fragment. This is important\n    //    because we may read it twice. Once to check if the results have changed\n    //    since last read, and once when we actually evaluate.\n    // 2. To intercept the snapshot so that it can be cached by the resolver\n    //    cache. This is what enables the change detection described in #1.\n    //\n    // Note: In the future this can be moved into the ResolverCache.\n    var getDataForResolverFragment = function getDataForResolverFragment(singularReaderSelector) {\n      if (snapshot != null) {\n        // It was already read when checking for input staleness; no need to read it again.\n        // Note that the variables like fragmentSeenRecordIDs in the outer closure will have\n        // already been set and will still be used in this case.\n        return {\n          data: snapshot.data,\n          isMissingData: snapshot.isMissingData\n        };\n      }\n      snapshot = read(_this._recordSource, singularReaderSelector, _this._resolverCache);\n      return {\n        data: snapshot.data,\n        isMissingData: snapshot.isMissingData\n      };\n    };\n\n    // This function `evaluate` tells the resolver cache how to read this\n    // resolver. It returns an `EvaluationResult` which gives the resolver cache:\n    // * `resolverResult` The value returned by the resolver function\n    // * `snapshot` The snapshot returned when reading the resolver's root fragment (if it has one)\n    // * `error` If the resolver throws, its error is caught (inside\n    //   `getResolverValue`) and converted into an error object.\n    var evaluate = function evaluate() {\n      if (fragment != null) {\n        var key = {\n          __id: parentRecordID,\n          __fragmentOwner: _this._owner,\n          __fragments: (0, _defineProperty2[\"default\"])({}, fragment.name, fragment.args ? getArgumentValues(fragment.args, _this._variables) : {})\n        };\n        var resolverContext = {\n          getDataForResolverFragment: getDataForResolverFragment\n        };\n        return withResolverContext(resolverContext, function () {\n          var _getResolverValue = getResolverValue(field, _this._variables, key, _this._fragmentName),\n            resolverResult = _getResolverValue[0],\n            resolverError = _getResolverValue[1];\n          return {\n            resolverResult: resolverResult,\n            snapshot: snapshot,\n            error: resolverError\n          };\n        });\n      } else {\n        var _getResolverValue2 = getResolverValue(field, _this._variables, null, _this._fragmentName),\n          resolverResult = _getResolverValue2[0],\n          _resolverError = _getResolverValue2[1];\n        return {\n          resolverResult: resolverResult,\n          snapshot: undefined,\n          error: _resolverError\n        };\n      }\n    };\n    var _this$_resolverCache$ = this._resolverCache.readFromCacheOrEvaluate(parentRecordID, field, this._variables, evaluate, getDataForResolverFragment),\n      result = _this$_resolverCache$[0],\n      seenRecord = _this$_resolverCache$[1],\n      resolverError = _this$_resolverCache$[2],\n      cachedSnapshot = _this$_resolverCache$[3],\n      suspenseID = _this$_resolverCache$[4],\n      updatedDataIDs = _this$_resolverCache$[5];\n\n    // The resolver's root fragment (if there is one) may be missing data, have\n    // errors, or be in a suspended state. Here we propagate those cases\n    // upwards to mimic the behavior of having traversed into that fragment directly.\n    if (cachedSnapshot != null) {\n      if (cachedSnapshot.missingRequiredFields != null) {\n        this._addMissingRequiredFields(cachedSnapshot.missingRequiredFields);\n      }\n      if (cachedSnapshot.missingClientEdges != null) {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.missingClientEdges),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var missing = _step.value;\n            this._missingClientEdges.push(missing);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      if (cachedSnapshot.missingLiveResolverFields != null) {\n        this._isMissingData = this._isMissingData || cachedSnapshot.missingLiveResolverFields.length > 0;\n        var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.missingLiveResolverFields),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var missingResolverField = _step2.value;\n            this._missingLiveResolverFields.push(missingResolverField);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.relayResolverErrors),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var error = _step3.value;\n          this._resolverErrors.push(error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._isMissingData = this._isMissingData || cachedSnapshot.isMissingData;\n    }\n\n    // If the resolver errored, we track that as part of our traversal so that\n    // the errors can be attached to this read's snapshot. This allows the error\n    // to be logged.\n    if (resolverError) {\n      this._resolverErrors.push(resolverError);\n    }\n\n    // The resolver itself creates a record in the store. We record that we've\n    // read this record so that subscribers to this snapshot also subscribe to\n    // this resolver.\n    if (seenRecord != null) {\n      this._seenRecords.add(seenRecord);\n    }\n\n    // If this resolver, or a dependency of this resolver, has suspended, we\n    // need to report that in our snapshot. The `suspenseID` is the key in to\n    // store where the suspended LiveState value lives. This ID allows readers\n    // of the snapshot to subscribe to updates on that live resolver so that\n    // they know when to unsuspend.\n    if (suspenseID != null) {\n      this._isMissingData = true;\n      this._missingLiveResolverFields.push({\n        path: \"\".concat(this._fragmentName, \".\").concat(field.path),\n        liveStateID: suspenseID\n      });\n    }\n    if (updatedDataIDs != null) {\n      var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(updatedDataIDs),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var recordID = _step4.value;\n          this._updatedDataIDs.add(recordID);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n    var applicationName = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    data[applicationName] = result;\n    return result;\n  };\n  _proto._readClientEdge = function _readClientEdge(field, record, data) {\n    var _backingField$alias;\n    var backingField = field.backingField;\n\n    // Because ReaderClientExtension doesn't have `alias` or `name` and so I don't know\n    // how to get its applicationName or storageKey yet:\n    !(backingField.kind !== 'ClientExtension') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client extension client edges are not yet implemented.') : invariant(false) : void 0;\n    var applicationName = (_backingField$alias = backingField.alias) !== null && _backingField$alias !== void 0 ? _backingField$alias : backingField.name;\n    var backingFieldData = {};\n    this._traverseSelections([backingField], record, backingFieldData);\n    // At this point, backingFieldData is an object with a single key (applicationName)\n    // whose value is the value returned from the resolver, or a suspense sentinel.\n\n    var clientEdgeResolverResponse = backingFieldData[applicationName];\n    if (clientEdgeResolverResponse == null || isSuspenseSentinel(clientEdgeResolverResponse)) {\n      data[applicationName] = clientEdgeResolverResponse;\n      return;\n    }\n    var validClientEdgeResolverResponse = assertValidClientEdgeResolverResponse(field, clientEdgeResolverResponse);\n    switch (validClientEdgeResolverResponse.kind) {\n      case 'PluralConcrete':\n        var storeIDs = getStoreIDsForPluralClientEdgeResolver(field, validClientEdgeResolverResponse.ids, this._resolverCache);\n        this._clientEdgeTraversalPath.push(null);\n        data[applicationName] = this._readLinkedIds(field.linkedField, storeIDs, record, data);\n        this._clientEdgeTraversalPath.pop();\n        break;\n      case 'SingularConcrete':\n        var _getStoreIDAndTravers = getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver(field, validClientEdgeResolverResponse.id, this._resolverCache),\n          storeID = _getStoreIDAndTravers[0],\n          traversalPathSegment = _getStoreIDAndTravers[1];\n        this._clientEdgeTraversalPath.push(traversalPathSegment);\n        var prevData = data[applicationName];\n        !(prevData == null || typeof prevData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n        data[applicationName] = this._traverse(field.linkedField, storeID,\n        // $FlowFixMe[incompatible-variance]\n        prevData);\n        this._clientEdgeTraversalPath.pop();\n        break;\n      default:\n        validClientEdgeResolverResponse.kind;\n    }\n  };\n  _proto._readFlightField = function _readFlightField(field, record, data) {\n    var _field$alias2;\n    var applicationName = (_field$alias2 = field.alias) !== null && _field$alias2 !== void 0 ? _field$alias2 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var reactFlightClientResponseRecordID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (reactFlightClientResponseRecordID == null) {\n      data[applicationName] = reactFlightClientResponseRecordID;\n      if (reactFlightClientResponseRecordID === undefined) {\n        this._markDataAsMissing();\n      }\n      return reactFlightClientResponseRecordID;\n    }\n    var reactFlightClientResponseRecord = this._recordSource.get(reactFlightClientResponseRecordID);\n    this._seenRecords.add(reactFlightClientResponseRecordID);\n    if (reactFlightClientResponseRecord == null) {\n      data[applicationName] = reactFlightClientResponseRecord;\n      if (reactFlightClientResponseRecord === undefined) {\n        this._markDataAsMissing();\n      }\n      return reactFlightClientResponseRecord;\n    }\n    var clientResponse = getReactFlightClientResponse(reactFlightClientResponseRecord);\n    data[applicationName] = clientResponse;\n    return clientResponse;\n  };\n  _proto._readScalar = function _readScalar(field, record, data) {\n    var _field$alias3;\n    var applicationName = (_field$alias3 = field.alias) !== null && _field$alias3 !== void 0 ? _field$alias3 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var value = RelayModernRecord.getValue(record, storageKey);\n    if (value === undefined) {\n      this._markDataAsMissing();\n    }\n    data[applicationName] = value;\n    return value;\n  };\n  _proto._readLink = function _readLink(field, record, data) {\n    var _field$alias4;\n    var applicationName = (_field$alias4 = field.alias) !== null && _field$alias4 !== void 0 ? _field$alias4 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      data[applicationName] = linkedID;\n      if (linkedID === undefined) {\n        this._markDataAsMissing();\n      }\n      return linkedID;\n    }\n    var prevData = data[applicationName];\n    !(prevData == null || typeof prevData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n    // $FlowFixMe[incompatible-variance]\n    var value = this._traverse(field, linkedID, prevData);\n    data[applicationName] = value;\n    return value;\n  };\n  _proto._readActorChange = function _readActorChange(field, record, data) {\n    var _field$alias5;\n    var applicationName = (_field$alias5 = field.alias) !== null && _field$alias5 !== void 0 ? _field$alias5 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var externalRef = RelayModernRecord.getActorLinkedRecordID(record, storageKey);\n    if (externalRef == null) {\n      data[applicationName] = externalRef;\n      if (externalRef === undefined) {\n        this._markDataAsMissing();\n      }\n      return data[applicationName];\n    }\n    var actorIdentifier = externalRef[0],\n      dataID = externalRef[1];\n    var fragmentRef = {};\n    this._createFragmentPointer(field.fragmentSpread, {\n      __id: dataID\n    }, fragmentRef);\n    data[applicationName] = {\n      __fragmentRef: fragmentRef,\n      __viewer: actorIdentifier\n    };\n    return data[applicationName];\n  };\n  _proto._readPluralLink = function _readPluralLink(field, record, data) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    return this._readLinkedIds(field, linkedIDs, record, data);\n  };\n  _proto._readLinkedIds = function _readLinkedIds(field, linkedIDs, record, data) {\n    var _this2 = this;\n    var _field$alias6;\n    var applicationName = (_field$alias6 = field.alias) !== null && _field$alias6 !== void 0 ? _field$alias6 : field.name;\n    if (linkedIDs == null) {\n      data[applicationName] = linkedIDs;\n      if (linkedIDs === undefined) {\n        this._markDataAsMissing();\n      }\n      return linkedIDs;\n    }\n    var prevData = data[applicationName];\n    !(prevData == null || Array.isArray(prevData)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an array, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n    var linkedArray = prevData || [];\n    linkedIDs.forEach(function (linkedID, nextIndex) {\n      if (linkedID == null) {\n        if (linkedID === undefined) {\n          _this2._markDataAsMissing();\n        }\n        // $FlowFixMe[cannot-write]\n        linkedArray[nextIndex] = linkedID;\n        return;\n      }\n      var prevItem = linkedArray[nextIndex];\n      !(prevItem == null || typeof prevItem === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevItem) : invariant(false) : void 0;\n      // $FlowFixMe[cannot-write]\n      // $FlowFixMe[incompatible-variance]\n      linkedArray[nextIndex] = _this2._traverse(field, linkedID, prevItem);\n    });\n    data[applicationName] = linkedArray;\n    return linkedArray;\n  }\n\n  /**\n   * Reads a ReaderModuleImport, which was generated from using the @module\n   * directive.\n   */;\n  _proto._readModuleImport = function _readModuleImport(moduleImport, record, data) {\n    // Determine the component module from the store: if the field is missing\n    // it means we don't know what component to render the match with.\n    var componentKey = getModuleComponentKey(moduleImport.documentName);\n    var component = RelayModernRecord.getValue(record, componentKey);\n    if (component == null) {\n      if (component === undefined) {\n        this._markDataAsMissing();\n      }\n      return;\n    }\n\n    // Otherwise, read the fragment and module associated to the concrete\n    // type, and put that data with the result:\n    // - For the matched fragment, create the relevant fragment pointer and add\n    //   the expected fragmentPropName\n    // - For the matched module, create a reference to the module\n    this._createFragmentPointer({\n      kind: 'FragmentSpread',\n      name: moduleImport.fragmentName,\n      args: moduleImport.args\n    }, record, data);\n    data[FRAGMENT_PROP_NAME_KEY] = moduleImport.fragmentPropName;\n    data[MODULE_COMPONENT_KEY] = component;\n  };\n  _proto._createAliasedFragmentSpread = function _createAliasedFragmentSpread(namedFragmentSpread, record) {\n    var abstractKey = namedFragmentSpread.abstractKey;\n    if (abstractKey == null) {\n      // concrete type refinement: only read data if the type exactly matches\n      var typeName = RelayModernRecord.getType(record);\n      if (typeName == null || typeName !== namedFragmentSpread.type) {\n        // This selection does not match the fragment spread. Do nothing.\n        return null;\n      }\n    } else {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n      if (implementsInterface === false) {\n        // Type known to not implement the interface, no data expected\n        return null;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._markDataAsMissing();\n        // Judgement call here. In some cases this will cause us to hide data that is actually valid.\n        return undefined;\n      }\n    }\n    var fieldData = {};\n    this._createFragmentPointer(namedFragmentSpread.fragment, record, fieldData);\n    return fieldData;\n  }\n\n  // Has three possible return values:\n  // * null: The type condition did not match\n  // * undefined: We are missing data\n  // * false: The selection contained missing @required fields\n  // * data: The successfully populated SelectorData object\n  ;\n  _proto._readInlineFragment = function _readInlineFragment(inlineFragment, record, data) {\n    var abstractKey = inlineFragment.abstractKey;\n    if (abstractKey == null) {\n      // concrete type refinement: only read data if the type exactly matches\n      var typeName = RelayModernRecord.getType(record);\n      if (typeName == null || typeName !== inlineFragment.type) {\n        // This selection does not match the fragment spread. Do nothing.\n        return null;\n      } else {\n        var hasExpectedData = this._traverseSelections(inlineFragment.selections, record, data);\n        if (!hasExpectedData) {\n          // Bubble up null due to a missing @required field\n          return false;\n        }\n      }\n    } else {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n\n      // store flags to reset after reading\n      var parentIsMissingData = this._isMissingData;\n      var parentIsWithinUnmatchedTypeRefinement = this._isWithinUnmatchedTypeRefinement;\n      this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement || implementsInterface === false;\n\n      // @required is not allowed within inline fragments on abstract types, so\n      // we can ignore the `hasMissingData` result of `_traverseSelections`.\n      this._traverseSelections(inlineFragment.selections, record, data);\n\n      // Reset\n      this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement;\n      if (implementsInterface === false) {\n        // Type known to not implement the interface, no data expected\n        this._isMissingData = parentIsMissingData;\n        return undefined;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._markDataAsMissing();\n        return null;\n      }\n    }\n    return data;\n  };\n  _proto._createFragmentPointer = function _createFragmentPointer(fragmentSpread, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n    if (fragmentPointers == null) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n    !(typeof fragmentPointers === 'object' && fragmentPointers != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers) : invariant(false) : void 0;\n    if (data[ID_KEY] == null) {\n      data[ID_KEY] = RelayModernRecord.getDataID(record);\n    }\n    // $FlowFixMe[cannot-write] - writing into read-only field\n    fragmentPointers[fragmentSpread.name] = fragmentSpread.args ? getArgumentValues(fragmentSpread.args, this._variables) : {};\n    data[FRAGMENT_OWNER_KEY] = this._owner;\n    data[IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] = this._isWithinUnmatchedTypeRefinement;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      if (this._clientEdgeTraversalPath.length > 0 && this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1] !== null) {\n        data[CLIENT_EDGE_TRAVERSAL_PATH] = (0, _toConsumableArray2[\"default\"])(this._clientEdgeTraversalPath);\n      }\n    }\n  };\n  _proto._createInlineDataOrResolverFragmentPointer = function _createInlineDataOrResolverFragmentPointer(fragmentSpreadOrFragment, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n    if (fragmentPointers == null) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n    !(typeof fragmentPointers === 'object' && fragmentPointers != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers) : invariant(false) : void 0;\n    if (data[ID_KEY] == null) {\n      data[ID_KEY] = RelayModernRecord.getDataID(record);\n    }\n    var inlineData = {};\n    var parentFragmentName = this._fragmentName;\n    this._fragmentName = fragmentSpreadOrFragment.name;\n    var parentVariables = this._variables;\n\n    // If the inline fragment spread has arguments, we need to temporarily\n    // switch this._variables to include the fragment spread's arguments\n    // for the duration of its traversal.\n    var argumentVariables = fragmentSpreadOrFragment.args ? getArgumentValues(fragmentSpreadOrFragment.args, this._variables) : {};\n    this._variables = RelayConcreteVariables.getFragmentVariables(fragmentSpreadOrFragment, this._owner.variables, argumentVariables);\n    this._traverseSelections(fragmentSpreadOrFragment.selections, record, inlineData);\n\n    // Put the parent variables back\n    this._variables = parentVariables;\n    this._fragmentName = parentFragmentName;\n    // $FlowFixMe[cannot-write] - writing into read-only field\n    fragmentPointers[fragmentSpreadOrFragment.name] = inlineData;\n  };\n  _proto._addMissingRequiredFields = function _addMissingRequiredFields(additional) {\n    if (this._missingRequiredFields == null) {\n      this._missingRequiredFields = additional;\n      return;\n    }\n    if (this._missingRequiredFields.action === 'THROW') {\n      return;\n    }\n    if (additional.action === 'THROW') {\n      this._missingRequiredFields = additional;\n      return;\n    }\n    this._missingRequiredFields = {\n      action: 'LOG',\n      fields: [].concat((0, _toConsumableArray2[\"default\"])(this._missingRequiredFields.fields), (0, _toConsumableArray2[\"default\"])(additional.fields))\n    };\n  };\n  _proto._implementsInterface = function _implementsInterface(record, abstractKey) {\n    var typeName = RelayModernRecord.getType(record);\n    var typeRecord = this._recordSource.get(generateTypeID(typeName));\n    var implementsInterface = typeRecord != null ? RelayModernRecord.getValue(typeRecord, abstractKey) : null;\n    // $FlowFixMe Casting record value\n    return implementsInterface;\n  };\n  return RelayReader;\n}(); // Constructs the arguments for a resolver function and then evaluates it.\n//\n// If the resolver's fragment is missing data (query is in-flight, a dependency\n// field is suspending, or is missing required fields) then `readFragment` will\n// throw `RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL`. This function ensures that\n// we catch that error and instead create an error object which can be\n// propagated to the reader snapshot.\nfunction getResolverValue(field, variables, fragmentKey, ownerName) {\n  // Support for languages that work (best) with ES6 modules, such as TypeScript.\n  var resolverFunction = typeof field.resolverModule === 'function' ? field.resolverModule : field.resolverModule[\"default\"];\n  var resolverResult = null;\n  var resolverError = null;\n  try {\n    var resolverFunctionArgs = [];\n    if (field.fragment != null) {\n      resolverFunctionArgs.push(fragmentKey);\n    }\n    var args = field.args ? getArgumentValues(field.args, variables) : undefined;\n    resolverFunctionArgs.push(args);\n    resolverResult = resolverFunction.apply(null, resolverFunctionArgs);\n  } catch (e) {\n    if (e === RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL) {\n      resolverResult = undefined;\n    } else {\n      var _field$path;\n      // `field.path` is typed as nullable while we rollout compiler changes.\n      var path = (_field$path = field.path) !== null && _field$path !== void 0 ? _field$path : '[UNKNOWN]';\n      resolverError = {\n        field: {\n          path: path,\n          owner: ownerName\n        },\n        error: e\n      };\n    }\n  }\n  return [resolverResult, resolverError];\n}\nfunction assertValidClientEdgeResolverResponse(field, clientEdgeResolverResponse) {\n  if (field.linkedField.plural) {\n    !Array.isArray(clientEdgeResolverResponse) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected plural Client Edge Relay Resolver to return an array containing IDs or objects with shape {id}.') : invariant(false) : void 0;\n    return {\n      kind: 'PluralConcrete',\n      ids: clientEdgeResolverResponse.map(function (response) {\n        return extractIdFromResponse(response, 'Expected this plural Client Edge Relay Resolver to return an array containing IDs or objects with shape {id}.');\n      })\n    };\n  } else {\n    return {\n      kind: 'SingularConcrete',\n      id: extractIdFromResponse(clientEdgeResolverResponse, 'Expected this Client Edge Relay Resolver to return an ID of type `string` or an object with shape {id}.')\n    };\n  }\n}\n\n// For weak objects:\n// The return value of a client edge resolver is the entire object (though,\n// strong objects become DataIDs or arrays thereof). However, when being read\n// out, these raw objects are turned into DataIDs or arrays thereof.\n//\n// For strong objects:\n// For a singular field, the return value of a client edge resolver is a DataID\n// (i.e. a string). If the edge points to a client type, we namespace the\n// ID with the typename by calling resolverCache.ensureClientRecord.\nfunction getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver(field, clientEdgeResolverResponse, resolverCache) {\n  if (field.kind === CLIENT_EDGE_TO_CLIENT_OBJECT) {\n    if (field.backingField.normalizationInfo == null) {\n      var concreteType = field.concreteType;\n      !(concreteType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected at least one of backingField.normalizationInfo or field.concreteType to be non-null. ' + 'This indicates a bug in Relay.') : invariant(false) : void 0;\n      // @edgeTo case where we need to ensure that the record has `id` field\n      return [resolverCache.ensureClientRecord(clientEdgeResolverResponse, concreteType), null];\n    } else {\n      // The normalization process in LiveResolverCache should take care of generating the correct ID.\n      return [clientEdgeResolverResponse, null];\n    }\n  } else {\n    return [clientEdgeResolverResponse, {\n      readerClientEdge: field,\n      clientEdgeDestinationID: clientEdgeResolverResponse\n    }];\n  }\n}\n\n// For weak objects:\n// The return value of a client edge resolver is the entire object (though,\n// strong objects become DataIDs or arrays thereof). However, when being read\n// out, these raw objects are turned into DataIDs or arrays thereof.\n//\n// For strong objects:\n// For a plural field, the return value of a client edge resolver is an\n// array of DataID's. If the edge points to a client type, we namespace the\n// IDs with the typename by calling resolverCache.ensureClientRecord.\nfunction getStoreIDsForPluralClientEdgeResolver(field, clientEdgeResolverResponse, resolverCache) {\n  if (field.kind === CLIENT_EDGE_TO_CLIENT_OBJECT) {\n    if (field.backingField.normalizationInfo == null) {\n      var concreteType = field.concreteType;\n      !(concreteType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected at least one of backingField.normalizationInfo or field.concreteType to be non-null. ' + 'This indicates a bug in Relay.') : invariant(false) : void 0;\n      // @edgeTo case where we need to ensure that the record has `id` field\n      return clientEdgeResolverResponse.map(function (id) {\n        return resolverCache.ensureClientRecord(id, concreteType);\n      });\n    } else {\n      // The normalization process in LiveResolverCache should take care of generating the correct ID.\n      return clientEdgeResolverResponse;\n    }\n  } else {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Unexpected Client Edge to plural server type. This should be prevented by the compiler.') : invariant(false) : void 0;\n  }\n}\nfunction extractIdFromResponse(individualResponse, errorMessage) {\n  if (typeof individualResponse === 'string') {\n    return individualResponse;\n  } else if (typeof individualResponse === 'object' && individualResponse != null && typeof individualResponse.id === 'string') {\n    return individualResponse.id;\n  }\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, errorMessage) : invariant(false) : void 0;\n}\nmodule.exports = {\n  read: read\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar RelayRecordState = require('./RelayRecordState');\nvar EXISTENT = RelayRecordState.EXISTENT,\n  NONEXISTENT = RelayRecordState.NONEXISTENT,\n  UNKNOWN = RelayRecordState.UNKNOWN;\n\n/**\n * An implementation of the `MutableRecordSource` interface (defined in\n * `RelayStoreTypes`) that holds all records in memory (JS Map).\n */\nvar RelayRecordSource = /*#__PURE__*/function () {\n  function RelayRecordSource(records) {\n    var _this = this;\n    this._records = new Map();\n    if (records != null) {\n      Object.keys(records).forEach(function (key) {\n        _this._records.set(key, records[key]);\n      });\n    }\n  }\n  RelayRecordSource.create = function create(records) {\n    return new RelayRecordSource(records);\n  };\n  var _proto = RelayRecordSource.prototype;\n  _proto.clear = function clear() {\n    this._records = new Map();\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._records.set(dataID, null);\n  };\n  _proto.get = function get(dataID) {\n    return this._records.get(dataID);\n  };\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Array.from(this._records.keys());\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    if (!this._records.has(dataID)) {\n      return UNKNOWN;\n    }\n    return this._records.get(dataID) == null ? NONEXISTENT : EXISTENT;\n  };\n  _proto.has = function has(dataID) {\n    return this._records.has(dataID);\n  };\n  _proto.remove = function remove(dataID) {\n    this._records[\"delete\"](dataID);\n  };\n  _proto.set = function set(dataID, record) {\n    this._records.set(dataID, record);\n  };\n  _proto.size = function size() {\n    return this._records.size;\n  };\n  _proto.toJSON = function toJSON() {\n    var obj = {};\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._records),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _step.value,\n          key = _step$value[0],\n          value = _step$value[1];\n        obj[key] = value;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return obj;\n  };\n  return RelayRecordSource;\n}();\nmodule.exports = RelayRecordSource;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayRecordState = {\n  /**\n   * Record exists (either fetched from the server or produced by a local,\n   * optimistic update).\n   */\n  EXISTENT: 'EXISTENT',\n  /**\n   * Record is known not to exist (either as the result of a mutation, or\n   * because the server returned `null` when queried for the record).\n   */\n  NONEXISTENT: 'NONEXISTENT',\n  /**\n   * Record State is unknown because it has not yet been fetched from the\n   * server.\n   */\n  UNKNOWN: 'UNKNOWN'\n};\nmodule.exports = RelayRecordState;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar getOperation = require('../util/getOperation');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\nvar getOutputTypeRecordIDs = require('./experimental-live-resolvers/getOutputTypeRecordIDs');\nvar _require = require('./RelayConcreteVariables'),\n  getLocalVariables = _require.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require2 = require('./TypeID'),\n  generateTypeID = _require2.generateTypeID;\nvar invariant = require('invariant');\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n  CONDITION = RelayConcreteNode.CONDITION,\n  CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n  CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n  DEFER = RelayConcreteNode.DEFER,\n  FLIGHT_FIELD = RelayConcreteNode.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n  LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n  MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n  LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n  SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n  SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n  STREAM = RelayConcreteNode.STREAM,\n  TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR,\n  RELAY_RESOLVER = RelayConcreteNode.RELAY_RESOLVER,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = RelayConcreteNode.CLIENT_EDGE_TO_CLIENT_OBJECT;\nvar ROOT_ID = RelayStoreUtils.ROOT_ID,\n  getStorageKey = RelayStoreUtils.getStorageKey,\n  getModuleOperationKey = RelayStoreUtils.getModuleOperationKey;\nfunction mark(recordSource, selector, references, operationLoader, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var marker = new RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents);\n  marker.mark(node, dataID);\n}\n\n/**\n * @private\n */\nvar RelayReferenceMarker = /*#__PURE__*/function () {\n  function RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents) {\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._operationName = null;\n    this._recordSource = recordSource;\n    this._references = references;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n  var _proto = RelayReferenceMarker.prototype;\n  _proto.mark = function mark(node, dataID) {\n    if (node.kind === 'Operation' || node.kind === 'SplitOperation') {\n      this._operationName = node.name;\n    }\n    this._traverse(node, dataID);\n  };\n  _proto._traverse = function _traverse(node, dataID) {\n    this._references.add(dataID);\n    var record = this._recordSource.get(dataID);\n    if (record == null) {\n      return;\n    }\n    this._traverseSelections(node.selections, record);\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, record) {\n    var _this = this;\n    selections.forEach(function (selection) {\n      /* eslint-disable no-fallthrough */\n      switch (selection.kind) {\n        case ACTOR_CHANGE:\n          // TODO: T89695151 Support multi-actor record sources in RelayReferenceMarker.js\n          _this._traverseLink(selection.linkedField, record);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this._traversePluralLink(selection, record);\n          } else {\n            _this._traverseLink(selection, record);\n          }\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(_this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            _this._traverseSelections(selection.selections, record);\n          }\n          break;\n        case INLINE_FRAGMENT:\n          if (selection.abstractKey == null) {\n            var typeName = RelayModernRecord.getType(record);\n            if (typeName != null && typeName === selection.type ||\n            // Our root record has a special type of `__Root` which may not\n            // match the schema type of Query/Mutation or whatever the schema\n            // specifies.\n            //\n            // If we have an inline fragment on a concrete type within an\n            // operation root, and our query has been validated, we know that\n            // concrete type must match, since the operation selection must be\n            // on a concrete type.\n            typeName === RelayStoreUtils.ROOT_TYPE) {\n              _this._traverseSelections(selection.selections, record);\n            }\n          } else {\n            var _typeName = RelayModernRecord.getType(record);\n            var typeID = generateTypeID(_typeName);\n            _this._references.add(typeID);\n            _this._traverseSelections(selection.selections, record);\n          }\n          break;\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this._variables;\n          _this._variables = getLocalVariables(_this._variables, selection.fragment.argumentDefinitions, selection.args);\n          _this._traverseSelections(selection.fragment.selections, record);\n          _this._variables = prevVariables;\n          break;\n        case LINKED_HANDLE:\n          // The selections for a \"handle\" field are the same as those of the\n          // original linked field where the handle was applied. Reference marking\n          // therefore requires traversing the original field selections against\n          // the synthesized client field.\n          //\n          // TODO: Instead of finding the source field in `selections`, change\n          // the concrete structure to allow shared subtrees, and have the linked\n          // handle directly refer to the same selections as the LinkedField that\n          // it was split from.\n          var handleField = cloneRelayHandleSourceField(selection, selections, _this._variables);\n          if (handleField.plural) {\n            _this._traversePluralLink(handleField, record);\n          } else {\n            _this._traverseLink(handleField, record);\n          }\n          break;\n        case DEFER:\n        case STREAM:\n          _this._traverseSelections(selection.selections, record);\n          break;\n        case SCALAR_FIELD:\n        case SCALAR_HANDLE:\n          break;\n        case TYPE_DISCRIMINATOR:\n          {\n            var _typeName2 = RelayModernRecord.getType(record);\n            var _typeID = generateTypeID(_typeName2);\n            _this._references.add(_typeID);\n            break;\n          }\n        case MODULE_IMPORT:\n          _this._traverseModuleImport(selection, record);\n          break;\n        case CLIENT_EXTENSION:\n          _this._traverseSelections(selection.selections, record);\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            _this._traverseFlightField(selection, record);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case CLIENT_COMPONENT:\n          if (_this._shouldProcessClientComponents === false) {\n            break;\n          }\n          _this._traverseSelections(selection.fragment.selections, record);\n          break;\n        case RELAY_RESOLVER:\n          _this._traverseResolverField(selection, record);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          _this._traverseClientEdgeToClientObject(selection, record);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker: Unknown AST node `%s`.', selection) : invariant(false) : void 0;\n      }\n    });\n  };\n  _proto._traverseClientEdgeToClientObject = function _traverseClientEdgeToClientObject(field, record) {\n    var dataID = this._traverseResolverField(field.backingField, record);\n    if (dataID == null) {\n      return;\n    }\n    var resolverRecord = this._recordSource.get(dataID);\n    if (resolverRecord == null) {\n      return;\n    }\n    if (field.backingField.isOutputType) {\n      // Mark all @outputType record IDs\n      var outputTypeRecordIDs = getOutputTypeRecordIDs(resolverRecord);\n      if (outputTypeRecordIDs != null) {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(outputTypeRecordIDs),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _dataID = _step.value;\n            this._references.add(_dataID);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    } else {\n      var linkedField = field.linkedField;\n      var concreteType = linkedField.concreteType;\n      if (concreteType == null) {\n        // TODO: Handle retaining abstract client edges to client types.\n        return;\n      }\n      if (linkedField.plural) {\n        var dataIDs = RelayModernRecord.getResolverLinkedRecordIDs(resolverRecord, concreteType);\n        if (dataIDs != null) {\n          var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(dataIDs),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _dataID2 = _step2.value;\n              if (_dataID2 != null) {\n                this._traverse(linkedField, _dataID2);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } else {\n        var _dataID3 = RelayModernRecord.getResolverLinkedRecordID(resolverRecord, concreteType);\n        if (_dataID3 != null) {\n          this._traverse(linkedField, _dataID3);\n        }\n      }\n    }\n  };\n  _proto._traverseResolverField = function _traverseResolverField(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var dataID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n    // If the resolver value has been created, we should retain it.\n    // This record contains our cached resolver value, and potential Live\n    // Resolver subscription.\n    if (dataID != null) {\n      this._references.add(dataID);\n    }\n    var fragment = field.fragment;\n    if (fragment != null) {\n      // Mark the contents of the resolver's data dependencies.\n      this._traverseSelections([fragment], record);\n    }\n    return dataID;\n  };\n  _proto._traverseModuleImport = function _traverseModuleImport(moduleImport, record) {\n    var _this$_operationName;\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker: Expected an operationLoader to be configured when using `@module`. ' + 'Could not load fragment `%s` in operation `%s`.', moduleImport.fragmentName, (_this$_operationName = this._operationName) !== null && _this$_operationName !== void 0 ? _this$_operationName : '(unknown)') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = RelayModernRecord.getValue(record, operationKey);\n    if (operationReference == null) {\n      return;\n    }\n    var normalizationRootNode = operationLoader.get(operationReference);\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n      this._traverseSelections(operation.selections, record);\n      this._variables = prevVariables;\n    }\n    // Otherwise, if the operation is not available, we assume that the data\n    // cannot have been processed yet and therefore isn't in the store to\n    // begin with.\n  };\n  _proto._traverseLink = function _traverseLink(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      return;\n    }\n    this._traverse(field, linkedID);\n  };\n  _proto._traversePluralLink = function _traversePluralLink(field, record) {\n    var _this2 = this;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    if (linkedIDs == null) {\n      return;\n    }\n    linkedIDs.forEach(function (linkedID) {\n      if (linkedID != null) {\n        _this2._traverse(field, linkedID);\n      }\n    });\n  };\n  _proto._traverseFlightField = function _traverseFlightField(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      return;\n    }\n    this._references.add(linkedID);\n    var reactFlightClientResponseRecord = this._recordSource.get(linkedID);\n    if (reactFlightClientResponseRecord == null) {\n      return;\n    }\n    var reachableExecutableDefinitions = RelayModernRecord.getValue(reactFlightClientResponseRecord, RelayStoreReactFlightUtils.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY);\n    if (!Array.isArray(reachableExecutableDefinitions)) {\n      return;\n    }\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using ' + 'React Flight') : invariant(false) : void 0;\n    // In Flight, the variables that are in scope for reachable executable\n    // definitions aren't the same as what's in scope for the outer query.\n    var prevVariables = this._variables;\n    // $FlowFixMe[incompatible-cast]\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(reachableExecutableDefinitions),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var definition = _step3.value;\n        this._variables = definition.variables;\n        var operationReference = definition.module;\n        var normalizationRootNode = operationLoader.get(operationReference);\n        if (normalizationRootNode != null) {\n          var operation = getOperation(normalizationRootNode);\n          this._traverse(operation, ROOT_ID);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    this._variables = prevVariables;\n  };\n  return RelayReferenceMarker;\n}();\nmodule.exports = {\n  mark: mark\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../multi-actor-environment/ActorUtils'),\n  ACTOR_IDENTIFIER_FIELD_NAME = _require.ACTOR_IDENTIFIER_FIELD_NAME,\n  getActorIdentifierFromPayload = _require.getActorIdentifierFromPayload;\nvar _require2 = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require2.ACTOR_CHANGE,\n  CLIENT_COMPONENT = _require2.CLIENT_COMPONENT,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require2.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EXTENSION = _require2.CLIENT_EXTENSION,\n  CONDITION = _require2.CONDITION,\n  DEFER = _require2.DEFER,\n  FLIGHT_FIELD = _require2.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require2.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require2.INLINE_FRAGMENT,\n  LINKED_FIELD = _require2.LINKED_FIELD,\n  LINKED_HANDLE = _require2.LINKED_HANDLE,\n  MODULE_IMPORT = _require2.MODULE_IMPORT,\n  RELAY_RESOLVER = _require2.RELAY_RESOLVER,\n  SCALAR_FIELD = _require2.SCALAR_FIELD,\n  SCALAR_HANDLE = _require2.SCALAR_HANDLE,\n  STREAM = _require2.STREAM,\n  TYPE_DISCRIMINATOR = _require2.TYPE_DISCRIMINATOR;\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require3 = require('./ClientID'),\n  generateClientID = _require3.generateClientID,\n  isClientID = _require3.isClientID;\nvar _require4 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require4.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require5 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require5.createNormalizationSelector;\nvar _require6 = require('./RelayStoreReactFlightUtils'),\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = _require6.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY = _require6.REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME = _require6.REACT_FLIGHT_TYPE_NAME,\n  refineToReactFlightPayloadData = _require6.refineToReactFlightPayloadData;\nvar _require7 = require('./RelayStoreUtils'),\n  ROOT_ID = _require7.ROOT_ID,\n  ROOT_TYPE = _require7.ROOT_TYPE,\n  TYPENAME_KEY = _require7.TYPENAME_KEY,\n  getArgumentValues = _require7.getArgumentValues,\n  getHandleStorageKey = _require7.getHandleStorageKey,\n  getModuleComponentKey = _require7.getModuleComponentKey,\n  getModuleOperationKey = _require7.getModuleOperationKey,\n  getStorageKey = _require7.getStorageKey;\nvar _require8 = require('./TypeID'),\n  TYPE_SCHEMA_TYPE = _require8.TYPE_SCHEMA_TYPE,\n  generateTypeID = _require8.generateTypeID;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Normalizes the results of a query and standard GraphQL response, writing the\n * normalized records/fields into the given MutableRecordSource.\n */\nfunction normalize(recordSource, selector, response, options) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var normalizer = new RelayResponseNormalizer(recordSource, variables, options);\n  return normalizer.normalizeResponse(node, dataID, response);\n}\n\n/**\n * @private\n *\n * Helper for handling payloads.\n */\nvar RelayResponseNormalizer = /*#__PURE__*/function () {\n  function RelayResponseNormalizer(recordSource, variables, options) {\n    this._actorIdentifier = options.actorIdentifier;\n    this._getDataId = options.getDataID;\n    this._handleFieldPayloads = [];\n    this._treatMissingFieldsAsNull = options.treatMissingFieldsAsNull;\n    this._incrementalPlaceholders = [];\n    this._isClientExtension = false;\n    this._isUnmatchedAbstractType = false;\n    this._followupPayloads = [];\n    this._path = options.path ? (0, _toConsumableArray2[\"default\"])(options.path) : [];\n    this._recordSource = recordSource;\n    this._variables = variables;\n    this._reactFlightPayloadDeserializer = options.reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = options.reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = options.shouldProcessClientComponents;\n  }\n  var _proto = RelayResponseNormalizer.prototype;\n  _proto.normalizeResponse = function normalizeResponse(node, dataID, data) {\n    var record = this._recordSource.get(dataID);\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Expected root record `%s` to exist.', dataID) : invariant(false) : void 0;\n    this._assignClientAbstractTypes(node);\n    this._traverseSelections(node, record, data);\n    return {\n      errors: null,\n      fieldPayloads: this._handleFieldPayloads,\n      incrementalPlaceholders: this._incrementalPlaceholders,\n      followupPayloads: this._followupPayloads,\n      source: this._recordSource,\n      isFinal: false\n    };\n  }\n\n  // For abstract types defined in the client schema extension, we won't be\n  // getting `__is<AbstractType>` hints from the server. To handle this, the\n  // compiler attaches additional metadata on the normalization artifact,\n  // which we need to record into the store.\n  ;\n  _proto._assignClientAbstractTypes = function _assignClientAbstractTypes(node) {\n    var clientAbstractTypes = node.clientAbstractTypes;\n    if (clientAbstractTypes != null) {\n      for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {\n        var abstractType = _Object$keys[_i];\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(clientAbstractTypes[abstractType]),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var concreteType = _step.value;\n            var typeID = generateTypeID(concreteType);\n            var typeRecord = this._recordSource.get(typeID);\n            if (typeRecord == null) {\n              typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE);\n              this._recordSource.set(typeID, typeRecord);\n            }\n            RelayModernRecord.setValue(typeRecord, abstractType, true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._getRecordType = function _getRecordType(data) {\n    var typeName = data[TYPENAME_KEY];\n    !(typeName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Expected a typename for record `%s`.', JSON.stringify(data, null, 2)) : invariant(false) : void 0;\n    return typeName;\n  };\n  _proto._traverseSelections = function _traverseSelections(node, record, data) {\n    for (var i = 0; i < node.selections.length; i++) {\n      var selection = node.selections[i];\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n        case LINKED_FIELD:\n          this._normalizeField(node, selection, record, data);\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            this._traverseSelections(selection, record, data);\n          }\n          break;\n        case FRAGMENT_SPREAD:\n          {\n            var prevVariables = this._variables;\n            this._variables = getLocalVariables(this._variables, selection.fragment.argumentDefinitions, selection.args);\n            this._traverseSelections(selection.fragment, record, data);\n            this._variables = prevVariables;\n            break;\n          }\n        case INLINE_FRAGMENT:\n          {\n            var abstractKey = selection.abstractKey;\n            if (abstractKey == null) {\n              var typeName = RelayModernRecord.getType(record);\n              if (typeName === selection.type) {\n                this._traverseSelections(selection, record, data);\n              }\n            } else {\n              var implementsInterface = data.hasOwnProperty(abstractKey);\n              var _typeName = RelayModernRecord.getType(record);\n              var typeID = generateTypeID(_typeName);\n              var typeRecord = this._recordSource.get(typeID);\n              if (typeRecord == null) {\n                typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE);\n                this._recordSource.set(typeID, typeRecord);\n              }\n              RelayModernRecord.setValue(typeRecord, abstractKey, implementsInterface);\n              if (implementsInterface) {\n                this._traverseSelections(selection, record, data);\n              }\n            }\n            break;\n          }\n        case TYPE_DISCRIMINATOR:\n          {\n            var _abstractKey = selection.abstractKey;\n            var _implementsInterface = data.hasOwnProperty(_abstractKey);\n            var _typeName2 = RelayModernRecord.getType(record);\n            var _typeID = generateTypeID(_typeName2);\n            var _typeRecord = this._recordSource.get(_typeID);\n            if (_typeRecord == null) {\n              _typeRecord = RelayModernRecord.create(_typeID, TYPE_SCHEMA_TYPE);\n              this._recordSource.set(_typeID, _typeRecord);\n            }\n            RelayModernRecord.setValue(_typeRecord, _abstractKey, _implementsInterface);\n            break;\n          }\n        case LINKED_HANDLE:\n        case SCALAR_HANDLE:\n          var args = selection.args ? getArgumentValues(selection.args, this._variables) : {};\n          var fieldKey = getStorageKey(selection, this._variables);\n          var handleKey = getHandleStorageKey(selection, this._variables);\n          this._handleFieldPayloads.push({\n            args: args,\n            dataID: RelayModernRecord.getDataID(record),\n            fieldKey: fieldKey,\n            handle: selection.handle,\n            handleKey: handleKey,\n            handleArgs: selection.handleArgs ? getArgumentValues(selection.handleArgs, this._variables) : {}\n          });\n          break;\n        case MODULE_IMPORT:\n          this._normalizeModuleImport(node, selection, record, data);\n          break;\n        case DEFER:\n          this._normalizeDefer(selection, record, data);\n          break;\n        case STREAM:\n          this._normalizeStream(selection, record, data);\n          break;\n        case CLIENT_EXTENSION:\n          var isClientExtension = this._isClientExtension;\n          this._isClientExtension = true;\n          this._traverseSelections(selection, record, data);\n          this._isClientExtension = isClientExtension;\n          break;\n        case CLIENT_COMPONENT:\n          if (this._shouldProcessClientComponents === false) {\n            break;\n          }\n          this._traverseSelections(selection.fragment, record, data);\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            this._normalizeFlightField(node, selection, record, data);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case ACTOR_CHANGE:\n          this._normalizeActorChange(node, selection, record, data);\n          break;\n        case RELAY_RESOLVER:\n          this._normalizeResolver(selection, record, data);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          this._normalizeResolver(selection.backingField, record, data);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    }\n  };\n  _proto._normalizeResolver = function _normalizeResolver(resolver, record, data) {\n    if (resolver.fragment != null) {\n      this._traverseSelections(resolver.fragment, record, data);\n    }\n  };\n  _proto._normalizeDefer = function _normalizeDefer(defer, record, data) {\n    var isDeferred = defer[\"if\"] === null || this._getVariableValue(defer[\"if\"]);\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(typeof isDeferred === 'boolean', 'RelayResponseNormalizer: Expected value for @defer `if` argument to ' + 'be a boolean, got `%s`.', isDeferred) : void 0;\n    }\n    if (isDeferred === false) {\n      // If defer is disabled there will be no additional response chunk:\n      // normalize the data already present.\n      this._traverseSelections(defer, record, data);\n    } else {\n      // Otherwise data *for this selection* should not be present: enqueue\n      // metadata to process the subsequent response chunk.\n      this._incrementalPlaceholders.push({\n        kind: 'defer',\n        data: data,\n        label: defer.label,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        selector: createNormalizationSelector(defer, RelayModernRecord.getDataID(record), this._variables),\n        typeName: RelayModernRecord.getType(record),\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeStream = function _normalizeStream(stream, record, data) {\n    // Always normalize regardless of whether streaming is enabled or not,\n    // this populates the initial array value (including any items when\n    // initial_count > 0).\n    this._traverseSelections(stream, record, data);\n    var isStreamed = stream[\"if\"] === null || this._getVariableValue(stream[\"if\"]);\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(typeof isStreamed === 'boolean', 'RelayResponseNormalizer: Expected value for @stream `if` argument ' + 'to be a boolean, got `%s`.', isStreamed) : void 0;\n    }\n    if (isStreamed === true) {\n      // If streaming is enabled, *also* emit metadata to process any\n      // response chunks that may be delivered.\n      this._incrementalPlaceholders.push({\n        kind: 'stream',\n        label: stream.label,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        parentID: RelayModernRecord.getDataID(record),\n        node: stream,\n        variables: this._variables,\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeModuleImport = function _normalizeModuleImport(parent, moduleImport, record, data) {\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for @module to be an object.') : invariant(false) : void 0;\n    var typeName = RelayModernRecord.getType(record);\n    var componentKey = getModuleComponentKey(moduleImport.documentName);\n    var componentReference = moduleImport.componentModuleProvider || data[componentKey];\n    RelayModernRecord.setValue(record, componentKey, componentReference !== null && componentReference !== void 0 ? componentReference : null);\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = moduleImport.operationModuleProvider || data[operationKey];\n    RelayModernRecord.setValue(record, operationKey, operationReference !== null && operationReference !== void 0 ? operationReference : null);\n    if (operationReference != null) {\n      this._followupPayloads.push({\n        kind: 'ModuleImportPayload',\n        args: moduleImport.args,\n        data: data,\n        dataID: RelayModernRecord.getDataID(record),\n        operationReference: operationReference,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        typeName: typeName,\n        variables: this._variables,\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeField = function _normalizeField(parent, selection, record, data) {\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'writeField(): Expected data for field `%s` to be an object.', selection.name) : invariant(false) : void 0;\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        // Fields may be missing in the response in two main cases:\n        // - Inside a client extension: the server will not generally return\n        //   values for these fields, but a local update may provide them.\n        // - Inside an abstract type refinement where the concrete type does\n        //   not conform to the interface/union.\n        // However an otherwise-required field may also be missing if the server\n        // is configured to skip fields with `null` values, in which case the\n        // client is assumed to be correctly configured with\n        // treatMissingFieldsAsNull=true.\n        var isOptionalField = this._isClientExtension || this._isUnmatchedAbstractType;\n        if (isOptionalField) {\n          // Field not expected to exist regardless of whether the server is pruning null\n          // fields or not.\n          return;\n        } else if (!this._treatMissingFieldsAsNull) {\n          // Not optional and the server is not pruning null fields: field is expected\n          // to be present\n          if (process.env.NODE_ENV !== \"production\") {\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : void 0;\n          }\n          return;\n        }\n      }\n      if (process.env.NODE_ENV !== \"production\") {\n        if (selection.kind === SCALAR_FIELD) {\n          this._validateConflictingFieldsWithIdenticalId(record, storageKey,\n          // When using `treatMissingFieldsAsNull` the conflicting validation raises a false positive\n          // because the value is set using `null` but validated using `fieldValue` which at this point\n          // will be `undefined`.\n          // Setting this to `null` matches the value that we actually set to the `fieldValue`.\n          null);\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    if (selection.kind === SCALAR_FIELD) {\n      if (process.env.NODE_ENV !== \"production\") {\n        this._validateConflictingFieldsWithIdenticalId(record, storageKey, fieldValue);\n      }\n      RelayModernRecord.setValue(record, storageKey, fieldValue);\n    } else if (selection.kind === LINKED_FIELD) {\n      this._path.push(responseKey);\n      if (selection.plural) {\n        this._normalizePluralLink(selection, record, storageKey, fieldValue);\n      } else {\n        this._normalizeLink(selection, record, storageKey, fieldValue);\n      }\n      this._path.pop();\n    } else {\n      selection;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s` during normalization.', selection.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._normalizeActorChange = function _normalizeActorChange(parent, selection, record, data) {\n    var _field$concreteType;\n    var field = selection.linkedField;\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '_normalizeActorChange(): Expected data for field `%s` to be an object.', field.name) : invariant(false) : void 0;\n    var responseKey = field.alias || field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        var isOptionalField = this._isClientExtension || this._isUnmatchedAbstractType;\n        if (isOptionalField) {\n          return;\n        } else if (!this._treatMissingFieldsAsNull) {\n          if (process.env.NODE_ENV !== \"production\") {\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : void 0;\n          }\n          return;\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    var actorIdentifier = getActorIdentifierFromPayload(fieldValue);\n    if (actorIdentifier == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload. Payload is `%s`.', ACTOR_IDENTIFIER_FIELD_NAME, JSON.stringify(fieldValue, null, 2)) : void 0;\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n\n    // $FlowFixMe[incompatible-call]\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : this._getRecordType(fieldValue);\n    var nextID = this._getDataId(\n    // $FlowFixMe[incompatible-call]\n    fieldValue, typeName) || RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);\n    !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey) : invariant(false) : void 0;\n    RelayModernRecord.setActorLinkedRecordID(record, storageKey, actorIdentifier, nextID);\n    this._followupPayloads.push({\n      kind: 'ActorPayload',\n      data: fieldValue,\n      dataID: nextID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(this._path), [responseKey]),\n      typeName: typeName,\n      variables: this._variables,\n      node: field,\n      actorIdentifier: actorIdentifier\n    });\n  };\n  _proto._normalizeFlightField = function _normalizeFlightField(parent, selection, record, data) {\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        // Flight field may be missing in the response if:\n        // - It is inside an abstract type refinement where the concrete type does\n        //   not conform to the interface/union.\n        // However an otherwise-required field may also be missing if the server\n        // is configured to skip fields with `null` values, in which case the\n        // client is assumed to be correctly configured with\n        // treatMissingFieldsAsNull=true.\n        if (this._isUnmatchedAbstractType) {\n          // Field not expected to exist regardless of whether the server is pruning null\n          // fields or not.\n          return;\n        } else {\n          // Not optional and the server is not pruning null fields: field is expected\n          // to be present\n          !this._treatMissingFieldsAsNull ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Payload did not contain a value for ' + 'field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : invariant(false) : void 0;\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    var reactFlightPayload = refineToReactFlightPayloadData(fieldValue);\n    var reactFlightPayloadDeserializer = this._reactFlightPayloadDeserializer;\n    !(reactFlightPayload != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected React Flight payload data to be an ' + 'object with `status`, tree`, `queries` and `errors` properties, got ' + '`%s`.', fieldValue) : invariant(false) : void 0;\n    !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected reactFlightPayloadDeserializer to ' + 'be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n    if (reactFlightPayload.errors.length > 0) {\n      if (typeof this._reactFlightServerErrorHandler === 'function') {\n        this._reactFlightServerErrorHandler(reactFlightPayload.status, reactFlightPayload.errors);\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Received server errors for field `%s`.\\n\\n' + '%s\\n%s', responseKey, reactFlightPayload.errors[0].message, reactFlightPayload.errors[0].stack) : void 0;\n      }\n    }\n    var reactFlightID = generateClientID(RelayModernRecord.getDataID(record), getStorageKey(selection, this._variables));\n    var reactFlightClientResponseRecord = this._recordSource.get(reactFlightID);\n    if (reactFlightClientResponseRecord == null) {\n      reactFlightClientResponseRecord = RelayModernRecord.create(reactFlightID, REACT_FLIGHT_TYPE_NAME);\n      this._recordSource.set(reactFlightID, reactFlightClientResponseRecord);\n    }\n    if (reactFlightPayload.tree == null) {\n      // This typically indicates that a fatal server error prevented rows from\n      // being written. When this occurs, we should not continue normalization of\n      // the Flight field because the row response is malformed.\n      //\n      // Receiving empty rows is OK because it can indicate the start of a stream.\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Expected `tree` not to be null. This ' + 'typically indicates that a fatal server error prevented any Server ' + 'Component rows from being written.') : void 0;\n      // We create the flight record with a null value for the tree\n      // and empty reachable definitions\n      RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_TREE_STORAGE_KEY, null);\n      RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY, []);\n      RelayModernRecord.setLinkedRecordID(record, storageKey, reactFlightID);\n      return;\n    }\n\n    // We store the deserialized reactFlightClientResponse in a separate\n    // record and link it to the parent record. This is so we can GC the Flight\n    // tree later even if the parent record is still reachable.\n    var reactFlightClientResponse = reactFlightPayloadDeserializer(reactFlightPayload.tree);\n    RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_TREE_STORAGE_KEY, reactFlightClientResponse);\n    var reachableExecutableDefinitions = [];\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(reactFlightPayload.queries),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var query = _step2.value;\n        if (query.response.data != null) {\n          this._followupPayloads.push({\n            kind: 'ModuleImportPayload',\n            args: null,\n            data: query.response.data,\n            dataID: ROOT_ID,\n            operationReference: query.module,\n            path: [],\n            typeName: ROOT_TYPE,\n            variables: query.variables,\n            actorIdentifier: this._actorIdentifier\n          });\n        }\n        reachableExecutableDefinitions.push({\n          module: query.module,\n          variables: query.variables\n        });\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(reactFlightPayload.fragments),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var fragment = _step3.value;\n        if (fragment.response.data != null) {\n          this._followupPayloads.push({\n            kind: 'ModuleImportPayload',\n            args: null,\n            data: fragment.response.data,\n            dataID: fragment.__id,\n            operationReference: fragment.module,\n            path: [],\n            typeName: fragment.__typename,\n            variables: fragment.variables,\n            actorIdentifier: this._actorIdentifier\n          });\n        }\n        reachableExecutableDefinitions.push({\n          module: fragment.module,\n          variables: fragment.variables\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY, reachableExecutableDefinitions);\n    RelayModernRecord.setLinkedRecordID(record, storageKey, reactFlightID);\n  };\n  _proto._normalizeLink = function _normalizeLink(field, record, storageKey, fieldValue) {\n    var _field$concreteType2;\n    !(typeof fieldValue === 'object' && fieldValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for field `%s` to be an object.', storageKey) : invariant(false) : void 0;\n    var nextID = this._getDataId(\n    // $FlowFixMe[incompatible-variance]\n    fieldValue, // $FlowFixMe[incompatible-variance]\n    (_field$concreteType2 = field.concreteType) !== null && _field$concreteType2 !== void 0 ? _field$concreteType2 : this._getRecordType(fieldValue)) ||\n    // Reuse previously generated client IDs\n    RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);\n    !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey) : invariant(false) : void 0;\n    if (process.env.NODE_ENV !== \"production\") {\n      this._validateConflictingLinkedFieldsWithIdenticalId(record, RelayModernRecord.getLinkedRecordID(record, storageKey), nextID, storageKey);\n    }\n    RelayModernRecord.setLinkedRecordID(record, storageKey, nextID);\n    var nextRecord = this._recordSource.get(nextID);\n    if (!nextRecord) {\n      // $FlowFixMe[incompatible-variance]\n      var typeName = field.concreteType || this._getRecordType(fieldValue);\n      nextRecord = RelayModernRecord.create(nextID, typeName);\n      this._recordSource.set(nextID, nextRecord);\n    } else if (process.env.NODE_ENV !== \"production\") {\n      this._validateRecordType(nextRecord, field, fieldValue);\n    }\n    // $FlowFixMe[incompatible-variance]\n    this._traverseSelections(field, nextRecord, fieldValue);\n  };\n  _proto._normalizePluralLink = function _normalizePluralLink(field, record, storageKey, fieldValue) {\n    var _this = this;\n    !Array.isArray(fieldValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for field `%s` to be an array ' + 'of objects.', storageKey) : invariant(false) : void 0;\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    var nextIDs = [];\n    fieldValue.forEach(function (item, nextIndex) {\n      var _field$concreteType3;\n      // validate response data\n      if (item == null) {\n        nextIDs.push(item);\n        return;\n      }\n      _this._path.push(String(nextIndex));\n      !(typeof item === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected elements for field `%s` to be ' + 'objects.', storageKey) : invariant(false) : void 0;\n      var nextID = _this._getDataId(\n      // $FlowFixMe[incompatible-variance]\n      item, // $FlowFixMe[incompatible-variance]\n      (_field$concreteType3 = field.concreteType) !== null && _field$concreteType3 !== void 0 ? _field$concreteType3 : _this._getRecordType(item)) || prevIDs && prevIDs[nextIndex] ||\n      // Reuse previously generated client IDs:\n      generateClientID(RelayModernRecord.getDataID(record), storageKey, nextIndex);\n      !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n      nextIDs.push(nextID);\n      var nextRecord = _this._recordSource.get(nextID);\n      if (!nextRecord) {\n        // $FlowFixMe[incompatible-variance]\n        var typeName = field.concreteType || _this._getRecordType(item);\n        nextRecord = RelayModernRecord.create(nextID, typeName);\n        _this._recordSource.set(nextID, nextRecord);\n      } else if (process.env.NODE_ENV !== \"production\") {\n        _this._validateRecordType(nextRecord, field, item);\n      }\n      // NOTE: the check to strip __DEV__ code only works for simple\n      // `if (__DEV__)`\n      if (process.env.NODE_ENV !== \"production\") {\n        if (prevIDs) {\n          _this._validateConflictingLinkedFieldsWithIdenticalId(record, prevIDs[nextIndex], nextID, storageKey);\n        }\n      }\n      // $FlowFixMe[incompatible-variance]\n      _this._traverseSelections(field, nextRecord, item);\n      _this._path.pop();\n    });\n    RelayModernRecord.setLinkedRecordIDs(record, storageKey, nextIDs);\n  }\n\n  /**\n   * Warns if the type of the record does not match the type of the field/payload.\n   */;\n  _proto._validateRecordType = function _validateRecordType(record, field, payload) {\n    var _field$concreteType4;\n    var typeName = (_field$concreteType4 = field.concreteType) !== null && _field$concreteType4 !== void 0 ? _field$concreteType4 : this._getRecordType(payload);\n    var dataID = RelayModernRecord.getDataID(record);\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(dataID) && dataID !== ROOT_ID || RelayModernRecord.getType(record) === typeName, 'RelayResponseNormalizer: Invalid record `%s`. Expected %s to be ' + 'consistent, but the record was assigned conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', dataID, TYPENAME_KEY, RelayModernRecord.getType(record), typeName) : void 0;\n  }\n\n  /**\n   * Warns if a single response contains conflicting fields with the same id\n   */;\n  _proto._validateConflictingFieldsWithIdenticalId = function _validateConflictingFieldsWithIdenticalId(record, storageKey, fieldValue) {\n    // NOTE: Only call this function in DEV\n    if (process.env.NODE_ENV !== \"production\") {\n      var dataID = RelayModernRecord.getDataID(record);\n      var previousValue = RelayModernRecord.getValue(record, storageKey);\n      process.env.NODE_ENV !== \"production\" ? warning(storageKey === TYPENAME_KEY || previousValue === undefined || areEqual(previousValue, fieldValue), 'RelayResponseNormalizer: Invalid record. The record contains two ' + 'instances of the same id: `%s` with conflicting field, %s and its values: %s and %s. ' + 'If two fields are different but share ' + 'the same id, one field will overwrite the other.', dataID, storageKey, previousValue, fieldValue) : void 0;\n    }\n  }\n\n  /**\n   * Warns if a single response contains conflicting fields with the same id\n   */;\n  _proto._validateConflictingLinkedFieldsWithIdenticalId = function _validateConflictingLinkedFieldsWithIdenticalId(record, prevID, nextID, storageKey) {\n    // NOTE: Only call this function in DEV\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === undefined || prevID === nextID, 'RelayResponseNormalizer: Invalid record. The record contains ' + 'references to the conflicting field, %s and its id values: %s and %s. ' + 'We need to make sure that the record the field points ' + 'to remains consistent or one field will overwrite the other.', storageKey, prevID, nextID) : void 0;\n    }\n  };\n  return RelayResponseNormalizer;\n}();\nmodule.exports = {\n  normalize: normalize\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayModernRecord'),\n  getType = _require.getType;\nvar invariant = require('invariant');\n\n// Reachable (client) executable definitions encountered while server component\n// rendering\nvar REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = 'executableDefinitions';\nvar REACT_FLIGHT_TREE_STORAGE_KEY = 'tree';\nvar REACT_FLIGHT_TYPE_NAME = 'ReactFlightComponent';\nfunction refineToReactFlightPayloadData(payload) {\n  if (payload == null || typeof payload !== 'object' || typeof payload.status !== 'string' || !Array.isArray(payload.tree) && payload.tree !== null || !Array.isArray(payload.queries) || !Array.isArray(payload.fragments) || !Array.isArray(payload.errors)) {\n    return null;\n  }\n  return payload;\n}\nfunction getReactFlightClientResponse(record) {\n  !(getType(record) === REACT_FLIGHT_TYPE_NAME) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getReactFlightClientResponse(): Expected a ReactFlightComponentRecord, ' + 'got %s.', record) : invariant(false) : void 0;\n  return record[REACT_FLIGHT_TREE_STORAGE_KEY];\n}\nmodule.exports = {\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY: REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY: REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME: REACT_FLIGHT_TYPE_NAME,\n  getReactFlightClientResponse: getReactFlightClientResponse,\n  refineToReactFlightPayloadData: refineToReactFlightPayloadData\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar deepFreeze = require('../util/deepFreeze');\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar hasOverlappingIDs = require('./hasOverlappingIDs');\nvar RelayReader = require('./RelayReader');\nvar RelayStoreSubscriptions = /*#__PURE__*/function () {\n  function RelayStoreSubscriptions(log, resolverCache) {\n    this._subscriptions = new Set();\n    this.__log = log;\n    this._resolverCache = resolverCache;\n  }\n  var _proto = RelayStoreSubscriptions.prototype;\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    var _this = this;\n    var subscription = {\n      backup: null,\n      callback: callback,\n      snapshot: snapshot,\n      stale: false\n    };\n    var dispose = function dispose() {\n      _this._subscriptions[\"delete\"](subscription);\n    };\n    this._subscriptions.add(subscription);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.snapshotSubscriptions = function snapshotSubscriptions(source) {\n    var _this2 = this;\n    this._subscriptions.forEach(function (subscription) {\n      // Backup occurs after writing a new \"final\" payload(s) and before (re)applying\n      // optimistic changes. Each subscription's `snapshot` represents what was *last\n      // published to the subscriber*, which notably may include previous optimistic\n      // updates. Therefore a subscription can be in any of the following states:\n      // - stale=true: This subscription was restored to a different value than\n      //   `snapshot`. That means this subscription has changes relative to its base,\n      //   but its base has changed (we just applied a final payload): recompute\n      //   a backup so that we can later restore to the state the subscription\n      //   should be in.\n      // - stale=false: This subscription was restored to the same value as\n      //   `snapshot`. That means this subscription does *not* have changes relative\n      //   to its base, so the current `snapshot` is valid to use as a backup.\n      if (!subscription.stale) {\n        subscription.backup = subscription.snapshot;\n        return;\n      }\n      var snapshot = subscription.snapshot;\n      var backup = RelayReader.read(source, snapshot.selector, _this2._resolverCache);\n      var nextData = recycleNodesInto(snapshot.data, backup.data);\n      backup.data = nextData; // backup owns the snapshot and can safely mutate\n      subscription.backup = backup;\n    });\n  };\n  _proto.restoreSubscriptions = function restoreSubscriptions() {\n    this._subscriptions.forEach(function (subscription) {\n      var backup = subscription.backup;\n      subscription.backup = null;\n      if (backup) {\n        if (backup.data !== subscription.snapshot.data) {\n          subscription.stale = true;\n        }\n        subscription.snapshot = {\n          data: subscription.snapshot.data,\n          isMissingData: backup.isMissingData,\n          missingClientEdges: backup.missingClientEdges,\n          missingLiveResolverFields: backup.missingLiveResolverFields,\n          seenRecords: backup.seenRecords,\n          selector: backup.selector,\n          missingRequiredFields: backup.missingRequiredFields,\n          relayResolverErrors: backup.relayResolverErrors\n        };\n      } else {\n        subscription.stale = true;\n      }\n    });\n  };\n  _proto.updateSubscriptions = function updateSubscriptions(source, updatedRecordIDs, updatedOwners, sourceOperation) {\n    var _this3 = this;\n    var hasUpdatedRecords = updatedRecordIDs.size !== 0;\n    this._subscriptions.forEach(function (subscription) {\n      var owner = _this3._updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation);\n      if (owner != null) {\n        updatedOwners.push(owner);\n      }\n    });\n  }\n\n  /**\n   * Notifies the callback for the subscription if the data for the associated\n   * snapshot has changed.\n   * Additionally, updates the subscription snapshot with the latest snapshot,\n   * and marks it as not stale.\n   * Returns the owner (RequestDescriptor) if the subscription was affected by the\n   * latest update, or null if it was not affected.\n   */;\n  _proto._updateSubscription = function _updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation) {\n    var backup = subscription.backup,\n      callback = subscription.callback,\n      snapshot = subscription.snapshot,\n      stale = subscription.stale;\n    var hasOverlappingUpdates = hasUpdatedRecords && hasOverlappingIDs(snapshot.seenRecords, updatedRecordIDs);\n    if (!stale && !hasOverlappingUpdates) {\n      return;\n    }\n    var nextSnapshot = hasOverlappingUpdates || !backup ? RelayReader.read(source, snapshot.selector, this._resolverCache) : backup;\n    var nextData = recycleNodesInto(snapshot.data, nextSnapshot.data);\n    nextSnapshot = {\n      data: nextData,\n      isMissingData: nextSnapshot.isMissingData,\n      missingClientEdges: nextSnapshot.missingClientEdges,\n      missingLiveResolverFields: nextSnapshot.missingLiveResolverFields,\n      seenRecords: nextSnapshot.seenRecords,\n      selector: nextSnapshot.selector,\n      missingRequiredFields: nextSnapshot.missingRequiredFields,\n      relayResolverErrors: nextSnapshot.relayResolverErrors\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(nextSnapshot);\n    }\n    subscription.snapshot = nextSnapshot;\n    subscription.stale = false;\n    if (nextSnapshot.data !== snapshot.data) {\n      if (this.__log && RelayFeatureFlags.ENABLE_NOTIFY_SUBSCRIPTION) {\n        this.__log({\n          name: 'store.notify.subscription',\n          sourceOperation: sourceOperation,\n          snapshot: snapshot,\n          nextSnapshot: nextSnapshot\n        });\n      }\n      callback(nextSnapshot);\n      return snapshot.selector.owner;\n    }\n  };\n  return RelayStoreSubscriptions;\n}();\nmodule.exports = RelayStoreSubscriptions;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar getRelayHandleKey = require('../util/getRelayHandleKey');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar stableCopy = require('../util/stableCopy');\nvar invariant = require('invariant');\nvar VARIABLE = RelayConcreteNode.VARIABLE,\n  LITERAL = RelayConcreteNode.LITERAL,\n  OBJECT_VALUE = RelayConcreteNode.OBJECT_VALUE,\n  LIST_VALUE = RelayConcreteNode.LIST_VALUE;\nvar MODULE_COMPONENT_KEY_PREFIX = '__module_component_';\nvar MODULE_OPERATION_KEY_PREFIX = '__module_operation_';\nfunction getArgumentValue(arg, variables) {\n  if (arg.kind === VARIABLE) {\n    // Variables are provided at runtime and are not guaranteed to be stable.\n    return getStableVariableValue(arg.variableName, variables);\n  } else if (arg.kind === LITERAL) {\n    // The Relay compiler generates stable ConcreteArgument values.\n    return arg.value;\n  } else if (arg.kind === OBJECT_VALUE) {\n    var value = {};\n    arg.fields.forEach(function (field) {\n      value[field.name] = getArgumentValue(field, variables);\n    });\n    return value;\n  } else if (arg.kind === LIST_VALUE) {\n    var _value = [];\n    arg.items.forEach(function (item) {\n      item != null ? _value.push(getArgumentValue(item, variables)) : null;\n    });\n    return _value;\n  }\n}\n\n/**\n * Returns the values of field/fragment arguments as an object keyed by argument\n * names. Guaranteed to return a result with stable ordered nested values.\n */\nfunction getArgumentValues(args, variables) {\n  var values = {};\n  args.forEach(function (arg) {\n    values[arg.name] = getArgumentValue(arg, variables);\n  });\n  return values;\n}\n\n/**\n * Given a handle field and variable values, returns a key that can be used to\n * uniquely identify the combination of the handle name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\nfunction getHandleStorageKey(handleField, variables) {\n  var dynamicKey = handleField.dynamicKey,\n    handle = handleField.handle,\n    key = handleField.key,\n    name = handleField.name,\n    args = handleField.args,\n    filters = handleField.filters;\n  var handleName = getRelayHandleKey(handle, key, name);\n  var filterArgs = null;\n  if (args && filters && args.length !== 0 && filters.length !== 0) {\n    filterArgs = args.filter(function (arg) {\n      return filters.indexOf(arg.name) > -1;\n    });\n  }\n  if (dynamicKey) {\n    // \"Sort\" the arguments by argument name: this is done by the compiler for\n    // user-supplied arguments but the dynamic argument must also be in sorted\n    // order.  Note that dynamic key argument name is double-underscore-\n    // -prefixed, and a double-underscore prefix is disallowed for user-supplied\n    // argument names, so there's no need to actually sort.\n    filterArgs = filterArgs != null ? [dynamicKey].concat((0, _toConsumableArray2[\"default\"])(filterArgs)) : [dynamicKey];\n  }\n  if (filterArgs === null) {\n    return handleName;\n  } else {\n    return formatStorageKey(handleName, getArgumentValues(filterArgs, variables));\n  }\n}\n\n/**\n * Given a field and variable values, returns a key that can be used to\n * uniquely identify the combination of the field name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\nfunction getStorageKey(field, variables) {\n  if (field.storageKey) {\n    // TODO T23663664: Handle nodes do not yet define a static storageKey.\n    return field.storageKey;\n  }\n  var args = getArguments(field);\n  var name = field.name;\n  return args && args.length !== 0 ? formatStorageKey(name, getArgumentValues(args, variables)) : name;\n}\n\n/**\n * Given a field the method returns an array of arguments.\n * For Relay resolver fields, we store arguments on the field and fragment\n * and this method return combined list of arguments.\n */\nfunction getArguments(field) {\n  if (field.kind === 'RelayResolver' || field.kind === 'RelayLiveResolver') {\n    var _field$fragment2;\n    if (field.args == null) {\n      var _field$fragment;\n      return (_field$fragment = field.fragment) === null || _field$fragment === void 0 ? void 0 : _field$fragment.args;\n    }\n    if (((_field$fragment2 = field.fragment) === null || _field$fragment2 === void 0 ? void 0 : _field$fragment2.args) == null) {\n      return field.args;\n    }\n    return field.args.concat(field.fragment.args);\n  }\n  var args = typeof field.args === 'undefined' ? undefined : field.args;\n  return args;\n}\n\n/**\n * Given a `name` (eg. \"foo\") and an object representing argument values\n * (eg. `{orberBy: \"name\", first: 10}`) returns a unique storage key\n * (ie. `foo{\"first\":10,\"orderBy\":\"name\"}`).\n *\n * This differs from getStorageKey which requires a ConcreteNode where arguments\n * are assumed to already be sorted into a stable order.\n */\nfunction getStableStorageKey(name, args) {\n  return formatStorageKey(name, stableCopy(args));\n}\n\n/**\n * Given a name and argument values, format a storage key.\n *\n * Arguments and the values within them are expected to be ordered in a stable\n * alphabetical ordering.\n */\nfunction formatStorageKey(name, argValues) {\n  if (!argValues) {\n    return name;\n  }\n  var values = [];\n  for (var argName in argValues) {\n    if (argValues.hasOwnProperty(argName)) {\n      var value = argValues[argName];\n      if (value != null) {\n        var _JSON$stringify;\n        values.push(argName + ':' + ((_JSON$stringify = JSON.stringify(value)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'undefined'));\n      }\n    }\n  }\n  return values.length === 0 ? name : name + \"(\".concat(values.join(','), \")\");\n}\n\n/**\n * Given Variables and a variable name, return a variable value with\n * all values in a stable order.\n */\nfunction getStableVariableValue(name, variables) {\n  !variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getVariableValue(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n  return stableCopy(variables[name]);\n}\nfunction getModuleComponentKey(documentName) {\n  return \"\".concat(MODULE_COMPONENT_KEY_PREFIX).concat(documentName);\n}\nfunction getModuleOperationKey(documentName) {\n  return \"\".concat(MODULE_OPERATION_KEY_PREFIX).concat(documentName);\n}\n\n/**\n * Constants shared by all implementations of RecordSource/MutableRecordSource/etc.\n */\nvar RelayStoreUtils = {\n  ACTOR_IDENTIFIER_KEY: '__actorIdentifier',\n  CLIENT_EDGE_TRAVERSAL_PATH: '__clientEdgeTraversalPath',\n  FRAGMENTS_KEY: '__fragments',\n  FRAGMENT_OWNER_KEY: '__fragmentOwner',\n  FRAGMENT_PROP_NAME_KEY: '__fragmentPropName',\n  MODULE_COMPONENT_KEY: '__module_component',\n  // alias returned by Reader\n  ID_KEY: '__id',\n  REF_KEY: '__ref',\n  REFS_KEY: '__refs',\n  ROOT_ID: 'client:root',\n  ROOT_TYPE: '__Root',\n  TYPENAME_KEY: '__typename',\n  INVALIDATED_AT_KEY: '__invalidated_at',\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT: '__isWithinUnmatchedTypeRefinement',\n  RELAY_RESOLVER_VALUE_KEY: '__resolverValue',\n  RELAY_RESOLVER_INVALIDATION_KEY: '__resolverValueMayBeInvalid',\n  RELAY_RESOLVER_SNAPSHOT_KEY: '__resolverSnapshot',\n  RELAY_RESOLVER_ERROR_KEY: '__resolverError',\n  RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS: '__resolverOutputTypeRecordIDs',\n  formatStorageKey: formatStorageKey,\n  getArgumentValue: getArgumentValue,\n  getArgumentValues: getArgumentValues,\n  getHandleStorageKey: getHandleStorageKey,\n  getStorageKey: getStorageKey,\n  getStableStorageKey: getStableStorageKey,\n  getModuleComponentKey: getModuleComponentKey,\n  getModuleOperationKey: getModuleOperationKey\n};\nmodule.exports = RelayStoreUtils;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar _require = require('../util/RelayConcreteNode'),\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER;\nvar _require2 = require('./ClientID'),\n  generateClientID = _require2.generateClientID;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayStoreUtils'),\n  RELAY_RESOLVER_ERROR_KEY = _require3.RELAY_RESOLVER_ERROR_KEY,\n  RELAY_RESOLVER_INVALIDATION_KEY = _require3.RELAY_RESOLVER_INVALIDATION_KEY,\n  RELAY_RESOLVER_SNAPSHOT_KEY = _require3.RELAY_RESOLVER_SNAPSHOT_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  getStorageKey = _require3.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n// $FlowFixMe[unclear-type] - will always be empty\nvar emptySet = new Set();\nvar NoopResolverCache = /*#__PURE__*/function () {\n  function NoopResolverCache() {}\n  var _proto = NoopResolverCache.prototype;\n  _proto.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    !(field.kind !== RELAY_LIVE_RESOLVER) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'This store does not support Live Resolvers') : invariant(false) : void 0;\n    var _evaluate = evaluate(),\n      resolverResult = _evaluate.resolverResult,\n      snapshot = _evaluate.snapshot,\n      error = _evaluate.error;\n    return [resolverResult, undefined, error, snapshot, undefined, undefined];\n  };\n  _proto.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {};\n  _proto.ensureClientRecord = function ensureClientRecord(id, typeName) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {};\n  return NoopResolverCache;\n}();\nfunction addDependencyEdge(edges, from, to) {\n  var set = edges.get(from);\n  if (!set) {\n    set = new Set();\n    edges.set(from, set);\n  }\n  set.add(to);\n}\nvar RecordResolverCache = /*#__PURE__*/function () {\n  function RecordResolverCache(getRecordSource) {\n    this._resolverIDToRecordIDs = new Map();\n    this._recordIDToResolverIDs = new Map();\n    this._getRecordSource = getRecordSource;\n  }\n  var _proto2 = RecordResolverCache.prototype;\n  _proto2.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    var recordSource = this._getRecordSource();\n\n    // NOTE: Be very careful with `record` in this scope. After `evaluate` has\n    // been called, the `record` we have here may have been replaced in the\n    // Relay store with a new record containing new information about nested\n    // resolvers on this parent record.\n    var record = recordSource.get(recordID);\n    !(record != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'We expect record to exist in the store.') : invariant(false) : void 0;\n    var storageKey = getStorageKey(field, variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    var linkedRecord = linkedID == null ? null : recordSource.get(linkedID);\n    if (linkedRecord == null || this._isInvalid(linkedRecord, getDataForResolverFragment)) {\n      var _linkedID;\n      // Cache miss; evaluate the selector and store the result in a new record:\n      linkedID = (_linkedID = linkedID) !== null && _linkedID !== void 0 ? _linkedID : generateClientID(recordID, storageKey);\n      linkedRecord = RelayModernRecord.create(linkedID, '__RELAY_RESOLVER__');\n      var evaluationResult = evaluate();\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY, evaluationResult.resolverResult);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY, evaluationResult.snapshot);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY, evaluationResult.error);\n      recordSource.set(linkedID, linkedRecord);\n\n      // Link the resolver value record to the resolver field of the record being read:\n\n      // Note: We get a fresh instance of the parent record from the record\n      // source, because it may have been updated when we traversed into child\n      // resolvers.\n      var currentRecord = recordSource.get(recordID);\n      !(currentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected the parent record to still be in the record source.') : invariant(false) : void 0;\n      var nextRecord = RelayModernRecord.clone(currentRecord);\n      RelayModernRecord.setLinkedRecordID(nextRecord, storageKey, linkedID);\n      recordSource.set(recordID, nextRecord);\n      if (field.fragment != null) {\n        var _evaluationResult$sna;\n        // Put records observed by the resolver into the dependency graph:\n        var fragmentStorageKey = getStorageKey(field.fragment, variables);\n        var resolverID = generateClientID(recordID, fragmentStorageKey);\n        addDependencyEdge(this._resolverIDToRecordIDs, resolverID, linkedID);\n        addDependencyEdge(this._recordIDToResolverIDs, recordID, resolverID);\n        var seenRecordIds = (_evaluationResult$sna = evaluationResult.snapshot) === null || _evaluationResult$sna === void 0 ? void 0 : _evaluationResult$sna.seenRecords;\n        if (seenRecordIds != null) {\n          var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(seenRecordIds),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var seenRecordID = _step.value;\n              addDependencyEdge(this._recordIDToResolverIDs, seenRecordID, resolverID);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n    }\n\n    // $FlowFixMe[incompatible-type] - will always be empty\n    var answer = linkedRecord[RELAY_RESOLVER_VALUE_KEY];\n    // $FlowFixMe[incompatible-type] - casting mixed\n    var snapshot = linkedRecord[RELAY_RESOLVER_SNAPSHOT_KEY];\n    // $FlowFixMe[incompatible-type] - casting mixed\n    var error = linkedRecord[RELAY_RESOLVER_ERROR_KEY];\n    return [answer, linkedID, error, snapshot, undefined, undefined];\n  };\n  _proto2.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs // Mutated in place\n  ) {\n    var recordSource = this._getRecordSource();\n    var visited = new Set();\n    var recordsToVisit = Array.from(updatedDataIDs);\n    while (recordsToVisit.length) {\n      var recordID = recordsToVisit.pop();\n      updatedDataIDs.add(recordID);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_recordIDToReso = this._recordIDToResolverIDs.get(recordID)) !== null && _this$_recordIDToReso !== void 0 ? _this$_recordIDToReso : emptySet),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _this$_recordIDToReso;\n          var fragment = _step2.value;\n          if (!visited.has(fragment)) {\n            var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_resolverIDToRe = this._resolverIDToRecordIDs.get(fragment)) !== null && _this$_resolverIDToRe !== void 0 ? _this$_resolverIDToRe : emptySet),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _this$_resolverIDToRe;\n                var anotherRecordID = _step3.value;\n                this._markInvalidatedResolverRecord(anotherRecordID, recordSource, updatedDataIDs);\n                if (!visited.has(anotherRecordID)) {\n                  recordsToVisit.push(anotherRecordID);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  };\n  _proto2._markInvalidatedResolverRecord = function _markInvalidatedResolverRecord(dataID, recordSource,\n  // Written to\n  updatedDataIDs // Mutated in place\n  ) {\n    var record = recordSource.get(dataID);\n    if (!record) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected a resolver record with ID %s, but it was missing.', dataID) : void 0;\n      return;\n    }\n    var nextRecord = RelayModernRecord.clone(record);\n    RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, true);\n    recordSource.set(dataID, nextRecord);\n  };\n  _proto2._isInvalid = function _isInvalid(record, getDataForResolverFragment) {\n    if (!RelayModernRecord.getValue(record, RELAY_RESOLVER_INVALIDATION_KEY)) {\n      return false;\n    }\n    // $FlowFixMe[incompatible-type] - storing values in records is not typed\n    var snapshot = RelayModernRecord.getValue(record, RELAY_RESOLVER_SNAPSHOT_KEY);\n    var originalInputs = snapshot === null || snapshot === void 0 ? void 0 : snapshot.data;\n    var readerSelector = snapshot === null || snapshot === void 0 ? void 0 : snapshot.selector;\n    if (originalInputs == null || readerSelector == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected previous inputs and reader selector on resolver record with ID %s, but they were missing.', RelayModernRecord.getDataID(record)) : void 0;\n      return true;\n    }\n    var _getDataForResolverFr = getDataForResolverFragment(readerSelector),\n      latestValues = _getDataForResolverFr.data;\n    var recycled = recycleNodesInto(originalInputs, latestValues);\n    if (recycled !== originalInputs) {\n      return true;\n    }\n    return false;\n  };\n  _proto2.ensureClientRecord = function ensureClientRecord(id, typename) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto2.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Processing @outputType records is not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  return RecordResolverCache;\n}();\nmodule.exports = {\n  NoopResolverCache: NoopResolverCache,\n  RecordResolverCache: RecordResolverCache\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getFragment = _require.getFragment;\nvar _require2 = require('./RelayModernSelector'),\n  getSelector = _require2.getSelector;\nvar invariant = require('invariant');\n\n// When we call the user-supplied resolver function, it will in turn call\n// `readFragment`, but that's a global function -- it needs information\n// about what resolver is being executed, which is supplied by putting the\n// info on this stack before we call the resolver function.\n\nvar contextStack = [];\nfunction withResolverContext(context, cb) {\n  contextStack.push(context);\n  try {\n    return cb();\n  } finally {\n    contextStack.pop();\n  }\n}\n\n// NOTE: these declarations are copied from 'useFragment'; it would be good\n// to figure out how to share the same type signature between the two functions.\n// The declarations ensure that the type of the returned data is:\n//   - non-nullable if the provided ref type is non-nullable\n//   - nullable if the provided ref type is nullable\n//   - array of non-nullable if the provided ref type is an array of\n//     non-nullable refs\n//   - array of nullable if the provided ref type is an array of nullable refs\n\nfunction readFragment(fragmentInput, fragmentKey) {\n  if (!contextStack.length) {\n    throw new Error('readFragment should be called only from within a Relay Resolver function.');\n  }\n  var context = contextStack[contextStack.length - 1];\n  var fragmentNode = getFragment(fragmentInput);\n  var fragmentSelector = getSelector(fragmentNode, fragmentKey);\n  !(fragmentSelector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected a selector for the fragment of the resolver \".concat(fragmentNode.name, \", but got null.\")) : invariant(false) : void 0;\n  !(fragmentSelector.kind === 'SingularReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected a singular reader selector for the fragment of the resolver \".concat(fragmentNode.name, \", but it was plural.\")) : invariant(false) : void 0;\n  var _context$getDataForRe = context.getDataForResolverFragment(fragmentSelector, fragmentKey),\n    data = _context$getDataForRe.data,\n    isMissingData = _context$getDataForRe.isMissingData;\n  if (isMissingData) {\n    throw RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL;\n  }\n  return data;\n}\nvar RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL = {};\nmodule.exports = {\n  readFragment: readFragment,\n  withResolverContext: withResolverContext,\n  RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL: RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar PREFIX = 'client:__type:';\nvar TYPE_SCHEMA_TYPE = '__TypeSchema';\nfunction generateTypeID(typeName) {\n  return PREFIX + typeName;\n}\nfunction isTypeID(id) {\n  return id.indexOf(PREFIX) === 0;\n}\nmodule.exports = {\n  generateTypeID: generateTypeID,\n  isTypeID: isTypeID,\n  TYPE_SCHEMA_TYPE: TYPE_SCHEMA_TYPE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('./RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID;\nvar VIEWER_ID = generateClientID(ROOT_ID, 'viewer');\nvar VIEWER_TYPE = 'Viewer';\nmodule.exports = {\n  VIEWER_ID: VIEWER_ID,\n  VIEWER_TYPE: VIEWER_TYPE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../util/RelayConcreteNode'),\n  LINKED_FIELD = _require.LINKED_FIELD;\nvar _require2 = require('./RelayStoreUtils'),\n  getHandleStorageKey = _require2.getHandleStorageKey;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\n\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original linked\n * field (on which the handle was declared) among the sibling `selections`, and\n * copying its selections into the clone.\n */\nfunction cloneRelayHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === LINKED_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);\n  });\n  !(sourceField && sourceField.kind === LINKED_FIELD) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'cloneRelayHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle) : invariant(false) : void 0;\n  var handleKey = getHandleStorageKey(handleField, variables);\n  return {\n    kind: 'LinkedField',\n    alias: sourceField.alias,\n    name: handleKey,\n    storageKey: handleKey,\n    args: null,\n    concreteType: sourceField.concreteType,\n    plural: sourceField.plural,\n    selections: sourceField.selections\n  };\n}\nmodule.exports = cloneRelayHandleSourceField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../util/RelayConcreteNode'),\n  SCALAR_FIELD = _require.SCALAR_FIELD;\nvar _require2 = require('./RelayStoreUtils'),\n  getHandleStorageKey = _require2.getHandleStorageKey;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\n\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original scalar\n * field (on which the handle was declared) among the sibling `selections`.\n */\nfunction cloneRelayScalarHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === SCALAR_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);\n  });\n  !(sourceField && sourceField.kind === SCALAR_FIELD) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'cloneRelayScalarHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle) : invariant(false) : void 0;\n  var handleKey = getHandleStorageKey(handleField, variables);\n  return {\n    kind: 'ScalarField',\n    alias: sourceField.alias,\n    name: handleKey,\n    storageKey: handleKey,\n    args: null\n  };\n}\nmodule.exports = cloneRelayScalarHandleSourceField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernFragmentSpecResolver = require('./RelayModernFragmentSpecResolver');\nvar warning = require(\"fbjs/lib/warning\");\nfunction createFragmentSpecResolver(context, containerName, fragments, props, rootIsQueryRenderer, callback) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var fragmentNames = Object.keys(fragments);\n    fragmentNames.forEach(function (fragmentName) {\n      var propValue = props[fragmentName];\n      process.env.NODE_ENV !== \"production\" ? warning(propValue !== undefined, 'createFragmentSpecResolver: Expected prop `%s` to be supplied to `%s`, but ' + 'got `undefined`. Pass an explicit `null` if this is intentional.', fragmentName, containerName) : void 0;\n    });\n  }\n  return new RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer);\n}\nmodule.exports = createFragmentSpecResolver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n\n// Ideally, we'd just import the type of the react module, but this causes Flow\n// problems.\n\nvar relayContext;\nvar firstReact;\nfunction createRelayContext(react) {\n  if (!relayContext) {\n    relayContext = react.createContext(null);\n    if (process.env.NODE_ENV !== \"production\") {\n      relayContext.displayName = 'RelayContext';\n    }\n    firstReact = react;\n  }\n  !(react === firstReact) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[createRelayContext]: You are passing a different instance of React', react.version) : invariant(false) : void 0;\n  return relayContext;\n}\nmodule.exports = createRelayContext;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./ViewerPattern'),\n  VIEWER_ID = _require.VIEWER_ID,\n  VIEWER_TYPE = _require.VIEWER_TYPE;\nfunction defaultGetDataID(fieldValue, typeName) {\n  if (typeName === VIEWER_TYPE) {\n    return fieldValue.id == null ? VIEWER_ID : fieldValue.id;\n  }\n  return fieldValue.id;\n}\nmodule.exports = defaultGetDataID;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar defaultRequiredFieldLogger = function defaultRequiredFieldLogger(event) {\n  if (process.env.NODE_ENV !== \"production\" && event.kind === 'missing_field.log') {\n    throw new Error('Relay Environment Configuration Error (dev only): `@required(action: LOG)` requires that the Relay Environment be configured with a `requiredFieldLogger`.');\n  }\n};\nmodule.exports = defaultRequiredFieldLogger;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar LIVE_RESOLVER_SUSPENSE_SENTINEL = Object.freeze({\n  __LIVE_RESOLVER_SUSPENSE_SENTINEL: true\n});\nfunction suspenseSentinel() {\n  // $FlowFixMe[incompatible-return]\n  return LIVE_RESOLVER_SUSPENSE_SENTINEL;\n}\nfunction isSuspenseSentinel(value) {\n  return value === LIVE_RESOLVER_SUSPENSE_SENTINEL;\n}\nmodule.exports = {\n  isSuspenseSentinel: isSuspenseSentinel,\n  suspenseSentinel: suspenseSentinel\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../RelayModernRecord');\nvar _require = require('../RelayStoreUtils'),\n  RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS = _require.RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS;\nvar invariant = require('invariant');\nfunction getOutputTypeRecordIDs(record) {\n  var maybeOutputTypeRecordIDs = RelayModernRecord.getValue(record, RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS);\n  if (maybeOutputTypeRecordIDs == null) {\n    return null;\n  }\n  !(maybeOutputTypeRecordIDs instanceof Set) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getOutputTypeRecordIDs: Expected the `%s` field on record `%s` to be of type Set. Instead, it is a %s.', RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS, typeof maybeOutputTypeRecordIDs) : invariant(false) : void 0;\n  return maybeOutputTypeRecordIDs;\n}\nmodule.exports = getOutputTypeRecordIDs;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ITERATOR_KEY = Symbol.iterator;\nfunction hasOverlappingIDs(seenRecords, updatedRecordIDs) {\n  // $FlowFixMe[incompatible-use]: Set is an iterable type, accessing its iterator is allowed.\n  var iterator = seenRecords[ITERATOR_KEY]();\n  var next = iterator.next();\n  while (!next.done) {\n    var key = next.value;\n    if (updatedRecordIDs.has(key)) {\n      return true;\n    }\n    next = iterator.next();\n  }\n  return false;\n}\nmodule.exports = hasOverlappingIDs;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayStoreTypes`.\n *\n * Use a sigil for detection to avoid a realm-specific instanceof check, and to\n * aid in module tree-shaking to avoid requiring all of RelayRuntime just to\n * detect its environment.\n */\nfunction isRelayModernEnvironment(environment) {\n  return Boolean(environment && environment['@@RelayModernEnvironment']);\n}\nmodule.exports = isRelayModernEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getInlineDataFragment = _require.getInlineDataFragment;\nvar _require2 = require('./RelayStoreUtils'),\n  FRAGMENTS_KEY = _require2.FRAGMENTS_KEY;\nvar invariant = require('invariant');\nfunction readInlineData(fragment, fragmentRef) {\n  var _fragmentRef$FRAGMENT;\n  var inlineDataFragment = getInlineDataFragment(fragment);\n  if (fragmentRef == null) {\n    return fragmentRef;\n  }\n  !(typeof fragmentRef === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected an object, got `%s`.', typeof fragmentRef) : invariant(false) : void 0;\n  // $FlowFixMe[incompatible-use]\n  var inlineData = (_fragmentRef$FRAGMENT = fragmentRef[FRAGMENTS_KEY]) === null || _fragmentRef$FRAGMENT === void 0 ? void 0 : _fragmentRef$FRAGMENT[inlineDataFragment.name];\n  !(inlineData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected fragment `%s` to be spread in the parent ' + 'fragment.', inlineDataFragment.name) : invariant(false) : void 0;\n  return inlineData;\n}\nmodule.exports = readInlineData;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayDeclarativeMutationConfig = require('../mutations/RelayDeclarativeMutationConfig');\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require2.createOperationDescriptor;\nvar _require3 = require('../store/RelayModernSelector'),\n  createReaderSelector = _require3.createReaderSelector;\nvar warning = require(\"fbjs/lib/warning\");\nfunction requestSubscription(environment, config) {\n  var subscription = getRequest(config.subscription);\n  if (subscription.params.operationKind !== 'subscription') {\n    throw new Error('requestSubscription: Must use Subscription operation');\n  }\n  var configs = config.configs,\n    onCompleted = config.onCompleted,\n    onError = config.onError,\n    onNext = config.onNext,\n    variables = config.variables,\n    cacheConfig = config.cacheConfig;\n  var operation = createOperationDescriptor(subscription, variables, cacheConfig);\n  process.env.NODE_ENV !== \"production\" ? warning(!(config.updater && configs), 'requestSubscription: Expected only one of `updater` and `configs` to be provided') : void 0;\n  var _ref = configs ? RelayDeclarativeMutationConfig.convert(configs, subscription, null /* optimisticUpdater */, config.updater) : config,\n    updater = _ref.updater;\n  var sub = environment.executeSubscription({\n    operation: operation,\n    updater: updater\n  }).subscribe({\n    next: function next(responses) {\n      if (onNext != null) {\n        var selector = operation.fragment;\n        var nextID;\n        if (Array.isArray(responses)) {\n          var _responses$, _responses$$extension;\n          nextID = (_responses$ = responses[0]) === null || _responses$ === void 0 ? void 0 : (_responses$$extension = _responses$.extensions) === null || _responses$$extension === void 0 ? void 0 : _responses$$extension.__relay_subscription_root_id;\n        } else {\n          var _responses$extensions;\n          nextID = (_responses$extensions = responses.extensions) === null || _responses$extensions === void 0 ? void 0 : _responses$extensions.__relay_subscription_root_id;\n        }\n        if (typeof nextID === 'string') {\n          selector = createReaderSelector(selector.node, nextID, selector.variables, selector.owner);\n        }\n        var data = environment.lookup(selector).data;\n        // $FlowFixMe[incompatible-cast]\n        onNext(data);\n      }\n    },\n    error: onError,\n    complete: onCompleted\n  });\n  return {\n    dispose: sub.unsubscribe\n  };\n}\nmodule.exports = requestSubscription;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Represents a common GraphQL request that can be executed, an `operation`\n * containing information to normalize the results, and a `fragment` derived\n * from that operation to read the response data (masking data from child\n * fragments).\n */\n\n/**\n * Contains the parameters required for executing a GraphQL request.\n * The operation can either be provided as a persisted `id` or `text`. If given\n * in `text` format, a `cacheID` as a hash of the text should be set to be used\n * for local caching.\n */\n\nvar RelayConcreteNode = {\n  ACTOR_CHANGE: 'ActorChange',\n  CONDITION: 'Condition',\n  CLIENT_COMPONENT: 'ClientComponent',\n  CLIENT_EDGE_TO_SERVER_OBJECT: 'ClientEdgeToServerObject',\n  CLIENT_EDGE_TO_CLIENT_OBJECT: 'ClientEdgeToClientObject',\n  CLIENT_EXTENSION: 'ClientExtension',\n  DEFER: 'Defer',\n  CONNECTION: 'Connection',\n  FLIGHT_FIELD: 'FlightField',\n  FRAGMENT: 'Fragment',\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_DATA_FRAGMENT_SPREAD: 'InlineDataFragmentSpread',\n  INLINE_DATA_FRAGMENT: 'InlineDataFragment',\n  INLINE_FRAGMENT: 'InlineFragment',\n  LINKED_FIELD: 'LinkedField',\n  LINKED_HANDLE: 'LinkedHandle',\n  LITERAL: 'Literal',\n  LIST_VALUE: 'ListValue',\n  LOCAL_ARGUMENT: 'LocalArgument',\n  MODULE_IMPORT: 'ModuleImport',\n  ALIASED_FRAGMENT_SPREAD: 'AliasedFragmentSpread',\n  ALIASED_INLINE_FRAGMENT_SPREAD: 'AliasedInlineFragmentSpread',\n  RELAY_RESOLVER: 'RelayResolver',\n  RELAY_LIVE_RESOLVER: 'RelayLiveResolver',\n  REQUIRED_FIELD: 'RequiredField',\n  OBJECT_VALUE: 'ObjectValue',\n  OPERATION: 'Operation',\n  REQUEST: 'Request',\n  ROOT_ARGUMENT: 'RootArgument',\n  SCALAR_FIELD: 'ScalarField',\n  SCALAR_HANDLE: 'ScalarHandle',\n  SPLIT_OPERATION: 'SplitOperation',\n  STREAM: 'Stream',\n  TYPE_DISCRIMINATOR: 'TypeDiscriminator',\n  UPDATABLE_QUERY: 'UpdatableQuery',\n  VARIABLE: 'Variable'\n};\nmodule.exports = RelayConcreteNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nmodule.exports = {\n  DEFAULT_HANDLE_KEY: ''\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * @private\n */\nfunction createError(type, name, messageFormat) {\n  for (var _len = arguments.length, messageParams = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    messageParams[_key - 3] = arguments[_key];\n  }\n  var index = 0;\n  var message = messageFormat.replace(/%s/g, function () {\n    return String(messageParams[index++]);\n  });\n  var err = new Error(message);\n  var error = Object.assign(err, {\n    name: name,\n    messageFormat: messageFormat,\n    messageParams: messageParams,\n    type: type,\n    taalOpcodes: [2, 2] // skip frame (code=2) twice\n  });\n  // In V8, Error objects keep the closure scope chain alive until the\n  // err.stack property is accessed.\n  if (error.stack === undefined) {\n    // IE sets the stack only if error is thrown\n    try {\n      throw error;\n    } catch (_unused) {}\n  }\n  return error;\n}\nmodule.exports = {\n  create: function create(name, messageFormat) {\n    for (var _len2 = arguments.length, messageParams = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      messageParams[_key2 - 2] = arguments[_key2];\n    }\n    return createError.apply(void 0, ['error', name, messageFormat].concat(messageParams));\n  },\n  createWarning: function createWarning(name, messageFormat) {\n    for (var _len3 = arguments.length, messageParams = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      messageParams[_key3 - 2] = arguments[_key3];\n    }\n    return createError.apply(void 0, ['warn', name, messageFormat].concat(messageParams));\n  }\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayFeatureFlags = {\n  ENABLE_CLIENT_EDGES: false,\n  ENABLE_VARIABLE_CONNECTION_KEY: false,\n  ENABLE_PARTIAL_RENDERING_DEFAULT: true,\n  ENABLE_REACT_FLIGHT_COMPONENT_FIELD: false,\n  ENABLE_RELAY_RESOLVERS: false,\n  ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION: false,\n  ENABLE_FRIENDLY_QUERY_NAME_GQL_URL: false,\n  ENABLE_LOAD_QUERY_REQUEST_DEDUPING: true,\n  ENABLE_DO_NOT_WRAP_LIVE_QUERY: false,\n  ENABLE_NOTIFY_SUBSCRIPTION: false,\n  BATCH_ASYNC_MODULE_UPDATES_FN: null,\n  ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT: false,\n  MAX_DATA_ID_LENGTH: null,\n  STRING_INTERN_LEVEL: 0,\n  USE_REACT_CACHE: false,\n  USE_REACT_CACHE_LEGACY_TIMEOUTS: true,\n  ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION: false\n};\nmodule.exports = RelayFeatureFlags;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar profileHandlersByName = {};\nvar defaultProfiler = {\n  stop: function stop() {}\n};\n\n/**\n * @public\n *\n * Instruments methods to allow profiling various parts of Relay. Profiling code\n * in Relay consists of three steps:\n *\n *  - Instrument the function to be profiled.\n *  - Attach handlers to the instrumented function.\n *  - Run the code which triggers the handlers.\n *\n * Handlers attached to instrumented methods are called with an instrumentation\n * name and a callback that must be synchronously executed:\n *\n *   instrumentedMethod.attachHandler(function(name, callback) {\n *     const start = performance.now();\n *     callback();\n *     console.log('Duration', performance.now() - start);\n *   });\n *\n * Handlers for profiles are callbacks that return a stop method:\n *\n *   RelayProfiler.attachProfileHandler('profileName', (name, state) => {\n *     const start = performance.now();\n *     return function stop(name, state) {\n *       console.log(`Duration (${name})`, performance.now() - start);\n *     }\n *   });\n */\nvar RelayProfiler = {\n  /**\n   * Instruments profiling for arbitrarily asynchronous code by a name.\n   *\n   *   const timerProfiler = RelayProfiler.profile('timeout');\n   *   setTimeout(function() {\n   *     timerProfiler.stop();\n   *   }, 1000);\n   *\n   *   RelayProfiler.attachProfileHandler('timeout', ...);\n   *\n   * Arbitrary state can also be passed into `profile` as a second argument. The\n   * attached profile handlers will receive this as the second argument.\n   */\n  profile: function profile(name, state) {\n    var handlers = profileHandlersByName[name];\n    if (handlers && handlers.length > 0) {\n      var stopHandlers = [];\n      for (var ii = handlers.length - 1; ii >= 0; ii--) {\n        var stopHandler = handlers[ii](name, state);\n        stopHandlers.unshift(stopHandler);\n      }\n      return {\n        stop: function stop(error) {\n          stopHandlers.forEach(function (stopHandler) {\n            return stopHandler(error);\n          });\n        }\n      };\n    }\n    return defaultProfiler;\n  },\n  /**\n   * Attaches a handler to profiles with the supplied name.\n   */\n  attachProfileHandler: function attachProfileHandler(name, handler) {\n    if (!profileHandlersByName.hasOwnProperty(name)) {\n      profileHandlersByName[name] = [];\n    }\n    profileHandlersByName[name].push(handler);\n  },\n  /**\n   * Detaches a handler attached via `attachProfileHandler`.\n   */\n  detachProfileHandler: function detachProfileHandler(name, handler) {\n    if (profileHandlersByName.hasOwnProperty(name)) {\n      removeFromArray(profileHandlersByName[name], handler);\n    }\n  }\n};\nfunction removeFromArray(array, element) {\n  var index = array.indexOf(element);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nmodule.exports = RelayProfiler;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar invariant = require('invariant');\n/**\n * An implementation of a `ReplaySubject` for Relay Observables.\n *\n * Records events provided and synchronously plays them back to new subscribers,\n * as well as forwarding new asynchronous events.\n */\nvar RelayReplaySubject = /*#__PURE__*/function () {\n  function RelayReplaySubject() {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_complete\", false);\n    (0, _defineProperty2[\"default\"])(this, \"_events\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_sinks\", new Set());\n    (0, _defineProperty2[\"default\"])(this, \"_subscription\", []);\n    this._observable = RelayObservable.create(function (sink) {\n      _this._sinks.add(sink);\n      var events = _this._events;\n      for (var i = 0; i < events.length; i++) {\n        if (sink.closed) {\n          // Bail if an event made the observer unsubscribe.\n          break;\n        }\n        var event = events[i];\n        switch (event.kind) {\n          case 'complete':\n            sink.complete();\n            break;\n          case 'error':\n            sink.error(event.error);\n            break;\n          case 'next':\n            sink.next(event.data);\n            break;\n          default:\n            event.kind;\n            !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReplaySubject: Unknown event kind `%s`.', event.kind) : invariant(false) : void 0;\n        }\n      }\n      return function () {\n        _this._sinks[\"delete\"](sink);\n      };\n    });\n  }\n  var _proto = RelayReplaySubject.prototype;\n  _proto.complete = function complete() {\n    if (this._complete === true) {\n      return;\n    }\n    this._complete = true;\n    this._events.push({\n      kind: 'complete'\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.complete();\n    });\n  };\n  _proto.error = function error(_error) {\n    if (this._complete === true) {\n      return;\n    }\n    this._complete = true;\n    this._events.push({\n      kind: 'error',\n      error: _error\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.error(_error);\n    });\n  };\n  _proto.next = function next(data) {\n    if (this._complete === true) {\n      return;\n    }\n    this._events.push({\n      kind: 'next',\n      data: data\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.next(data);\n    });\n  };\n  _proto.subscribe = function subscribe(observer) {\n    var subscription = this._observable.subscribe(observer);\n    this._subscription.push(subscription);\n    return subscription;\n  };\n  _proto.unsubscribe = function unsubscribe() {\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._subscription),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var subscription = _step.value;\n        subscription.unsubscribe();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    this._subscription = [];\n  };\n  _proto.getObserverCount = function getObserverCount() {\n    return this._sinks.size;\n  };\n  return RelayReplaySubject;\n}();\nmodule.exports = RelayReplaySubject;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar internTable = new Map();\nvar nextIndex = 1;\nvar digits = initDigitTable();\n\n// Character used as the prefix for interned strings. The specific character is\n// chosen to reduce the likelihood that non-interned input strings need to be\n// escaped (choosing eg a-Z would increase the likelihood we need to escape)\nvar INTERN_PREFIX = '\\t';\n// Character used as the prefix of escaped strings. As above, this is also\n// chosen to be unlikely in normal input strings.\nvar ESCAPE_PREFIX = '\\v';\nfunction initDigitTable() {\n  // disable lint because digits isn't defined when this function is called\n  // eslint-disable-next-line no-shadow\n  var digits = new Set();\n  for (var i = 0; i < 10; ++i) {\n    digits.add(i.toString());\n  }\n  return digits;\n}\n\n// Escape a string so that it cannot conflict with an interned string\nfunction escape(str) {\n  if (\n  // \"\\t<digit>...\" -> \"\\v\\t<digit>...\"\n  str[0] === INTERN_PREFIX && digits.has(str[1]) ||\n  // \"\\v...\" -> \"\\v\\v...\"\n  str[0] === ESCAPE_PREFIX) {\n    return ESCAPE_PREFIX + str;\n  }\n  return str;\n}\n\n// Interns the input string if its length equals or exceeds the given `limit`,\n// returning a shorter replacement string that is uniquely associated with the\n// input: multiple calls to intern() for the equivalent input strings (and limit)\n// will always return the exact same string.\n// Strings shorter than the limit are not interned but are escaped if they\n// could conflict with interned strings.\nfunction intern(str, limit) {\n  if (limit == null || str.length < limit) {\n    return escape(str);\n  }\n  var internedString = internTable.get(str);\n  if (internedString != null) {\n    return internedString;\n  }\n  internedString = INTERN_PREFIX + nextIndex++;\n  internTable.set(str, internedString);\n  return internedString;\n}\nmodule.exports = {\n  intern: intern\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('../store/RelayStoreUtils'),\n  getModuleComponentKey = _require.getModuleComponentKey,\n  getModuleOperationKey = _require.getModuleOperationKey;\nfunction createPayloadFor3DField(name, operation, component, response) {\n  var data = (0, _objectSpread2[\"default\"])({}, response);\n  // $FlowFixMe[prop-missing]\n  data[getModuleComponentKey(name)] = component;\n  // $FlowFixMe[prop-missing]\n  data[getModuleOperationKey(name)] = operation;\n  return data;\n}\nmodule.exports = createPayloadFor3DField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Recursively \"deep\" freezes the supplied object.\n *\n * For convenience, and for consistency with the behavior of `Object.freeze`,\n * returns the now-frozen original object.\n */\nfunction deepFreeze(object) {\n  Object.freeze(object);\n  Object.getOwnPropertyNames(object).forEach(function (name) {\n    var property = object[name];\n    if (property && typeof property === 'object' && !Object.isFrozen(property)) {\n      deepFreeze(property);\n    }\n  });\n  return object;\n}\nmodule.exports = deepFreeze;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar id = 100000;\nfunction generateID() {\n  return id++;\n}\nmodule.exports = generateID;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayModernSelector'),\n  getDataIDsFromFragment = _require.getDataIDsFromFragment,\n  getSelector = _require.getSelector,\n  getVariablesFromFragment = _require.getVariablesFromFragment;\nvar isEmptyObject = require('./isEmptyObject');\nvar RelayFeatureFlags = require('./RelayFeatureFlags');\nvar stableCopy = require('./stableCopy');\nvar _require2 = require('./StringInterner'),\n  intern = _require2.intern;\nfunction getFragmentIdentifier(fragmentNode, fragmentRef) {\n  var selector = getSelector(fragmentNode, fragmentRef);\n  var fragmentOwnerIdentifier = selector == null ? 'null' : selector.kind === 'SingularReaderSelector' ? selector.owner.identifier : '[' + selector.selectors.map(function (sel) {\n    return sel.owner.identifier;\n  }).join(',') + ']';\n  var fragmentVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n  var dataIDs = getDataIDsFromFragment(fragmentNode, fragmentRef);\n  if (RelayFeatureFlags.ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION) {\n    var ids = typeof dataIDs === 'undefined' ? 'missing' : dataIDs == null ? 'null' : Array.isArray(dataIDs) ? '[' + dataIDs.join(',') + ']' : dataIDs;\n    ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? ids : intern(ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + (fragmentVariables == null || isEmptyObject(fragmentVariables) ? '{}' : JSON.stringify(stableCopy(fragmentVariables))) + '/' + ids;\n  } else {\n    var _JSON$stringify;\n    var _ids = (_JSON$stringify = JSON.stringify(dataIDs)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'missing';\n    _ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? _ids : intern(_ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + JSON.stringify(stableCopy(fragmentVariables)) + '/' + _ids;\n  }\n}\nmodule.exports = getFragmentIdentifier;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayConcreteNode'),\n  REQUEST = _require.REQUEST,\n  SPLIT_OPERATION = _require.SPLIT_OPERATION;\n\n/**\n * OperationLoaders can return either a NormalizationSplitOperation or\n * ConcreteRequest.\n */\nfunction getOperation(node) {\n  switch (node.kind) {\n    case REQUEST:\n      return node.operation;\n    case SPLIT_OPERATION:\n    default:\n      return node;\n  }\n}\nmodule.exports = getOperation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar getRefetchMetadata = require('./getRefetchMetadata');\nvar invariant = require('invariant');\nfunction getPaginationMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n    paginationRequest = _getRefetchMetadata.refetchableRequest,\n    refetchMetadata = _getRefetchMetadata.refetchMetadata;\n  var paginationMetadata = refetchMetadata.connection;\n  !(paginationMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var connectionPathInFragmentData = paginationMetadata.path;\n  var connectionMetadata = ((_fragmentNode$metadat = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.connection) !== null && _fragmentNode$metadat !== void 0 ? _fragmentNode$metadat : [])[0];\n  !(connectionMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    connectionPathInFragmentData: connectionPathInFragmentData,\n    identifierField: identifierField,\n    paginationRequest: paginationRequest,\n    paginationMetadata: paginationMetadata,\n    stream: connectionMetadata.stream === true\n  };\n}\nmodule.exports = getPaginationMetadata;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectSpread4 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction getPaginationVariables(direction, count, cursor, baseVariables, extraVariables, paginationMetadata) {\n  var _objectSpread3;\n  var backwardMetadata = paginationMetadata.backward,\n    forwardMetadata = paginationMetadata.forward;\n  if (direction === 'backward') {\n    var _objectSpread2;\n    !(backwardMetadata != null && backwardMetadata.count != null && backwardMetadata.cursor != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected backward pagination metadata to be available. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(backwardMetadata.cursor), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain cursor variable `%s`. This variable is automatically ' + 'determined by Relay.', backwardMetadata.cursor) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(backwardMetadata.count), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain count variable `%s`. This variable is automatically ' + 'determined by Relay.', backwardMetadata.count) : void 0;\n    var _paginationVariables = (0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])({}, baseVariables), extraVariables), {}, (_objectSpread2 = {}, (0, _defineProperty2[\"default\"])(_objectSpread2, backwardMetadata.cursor, cursor), (0, _defineProperty2[\"default\"])(_objectSpread2, backwardMetadata.count, count), _objectSpread2));\n    if (forwardMetadata && forwardMetadata.cursor) {\n      _paginationVariables[forwardMetadata.cursor] = null;\n    }\n    if (forwardMetadata && forwardMetadata.count) {\n      _paginationVariables[forwardMetadata.count] = null;\n    }\n    return _paginationVariables;\n  }\n  !(forwardMetadata != null && forwardMetadata.count != null && forwardMetadata.cursor != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected forward pagination metadata to be available. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(forwardMetadata.cursor), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain cursor variable `%s`. This variable is automatically ' + 'determined by Relay.', forwardMetadata.cursor) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(forwardMetadata.count), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain count variable `%s`. This variable is automatically ' + 'determined by Relay.', forwardMetadata.count) : void 0;\n  var paginationVariables = (0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])({}, baseVariables), extraVariables), {}, (_objectSpread3 = {}, (0, _defineProperty2[\"default\"])(_objectSpread3, forwardMetadata.cursor, cursor), (0, _defineProperty2[\"default\"])(_objectSpread3, forwardMetadata.count, count), _objectSpread3));\n  if (backwardMetadata && backwardMetadata.cursor) {\n    paginationVariables[backwardMetadata.cursor] = null;\n  }\n  if (backwardMetadata && backwardMetadata.count) {\n    paginationVariables[backwardMetadata.count] = null;\n  }\n  return paginationVariables;\n}\nmodule.exports = getPaginationVariables;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/fetchQueryInternal'),\n  getPromiseForActiveRequest = _require.getPromiseForActiveRequest;\nfunction getPendingOperationsForFragment(environment, fragmentNode, fragmentOwner) {\n  var _pendingOperations$ma, _pendingOperations;\n  var pendingOperations = [];\n  var promise = getPromiseForActiveRequest(environment, fragmentOwner);\n  if (promise != null) {\n    pendingOperations = [fragmentOwner];\n  } else {\n    var _result$pendingOperat, _result$promise;\n    var result = environment.getOperationTracker().getPendingOperationsAffectingOwner(fragmentOwner);\n    pendingOperations = (_result$pendingOperat = result === null || result === void 0 ? void 0 : result.pendingOperations) !== null && _result$pendingOperat !== void 0 ? _result$pendingOperat : [];\n    promise = (_result$promise = result === null || result === void 0 ? void 0 : result.promise) !== null && _result$promise !== void 0 ? _result$promise : null;\n  }\n  if (!promise) {\n    return null;\n  }\n  var pendingOperationName = (_pendingOperations$ma = (_pendingOperations = pendingOperations) === null || _pendingOperations === void 0 ? void 0 : _pendingOperations.map(function (op) {\n    return op.node.params.name;\n  }).join(',')) !== null && _pendingOperations$ma !== void 0 ? _pendingOperations$ma : null;\n  if (pendingOperationName == null || pendingOperationName.length === 0) {\n    pendingOperationName = 'Unknown pending operation';\n  }\n  var fragmentName = fragmentNode.name;\n  var promiseDisplayName = pendingOperationName === fragmentName ? \"Relay(\".concat(pendingOperationName, \")\") : \"Relay(\".concat(pendingOperationName, \":\").concat(fragmentName, \")\");\n  // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n  promise.displayName = promiseDisplayName;\n\n  // In order to monitor the efficacy of RelayOperationTracker, we log\n  // enough information to track whether we are suspending on the fragment\n  // owner's operation, or some other operation.\n  environment.__log({\n    name: 'pendingoperation.found',\n    fragment: fragmentNode,\n    fragmentOwner: fragmentOwner,\n    pendingOperations: pendingOperations\n  });\n  return {\n    promise: promise,\n    pendingOperations: pendingOperations\n  };\n}\nmodule.exports = getPendingOperationsForFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\nfunction getRefetchMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n  !(((_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` not to be plural when using ' + '`%s`. Remove `@relay(plural: true)` from fragment `%s` ' + 'in order to use it with `%s`.', fragmentNode.name, componentDisplayName, fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n  var refetchMetadata = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.refetch;\n  !(refetchMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` to be refetchable when using `%s`. ' + 'Did you forget to add a @refetchable directive to the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n\n  // handle both commonjs and es modules\n  var refetchableRequest = refetchMetadata.operation[\"default\"] ? refetchMetadata.operation[\"default\"] : refetchMetadata.operation;\n  var fragmentRefPathInResponse = refetchMetadata.fragmentPathInResult;\n  !(typeof refetchableRequest !== 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected refetch query to be an ' + \"operation and not a string when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', componentDisplayName) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    fragmentRefPathInResponse: fragmentRefPathInResponse,\n    identifierField: identifierField,\n    refetchableRequest: refetchableRequest,\n    refetchMetadata: refetchMetadata\n  };\n}\nmodule.exports = getRefetchMetadata;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayDefaultHandleKey'),\n  DEFAULT_HANDLE_KEY = _require.DEFAULT_HANDLE_KEY;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * Helper to create a unique name for a handle field based on the handle name, handle key and\n * source field.\n */\nfunction getRelayHandleKey(handleName, key, fieldName) {\n  if (key && key !== DEFAULT_HANDLE_KEY) {\n    return \"__\".concat(key, \"_\").concat(handleName);\n  }\n  !(fieldName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getRelayHandleKey: Expected either `fieldName` or `key` in `handle` to be provided') : invariant(false) : void 0;\n  return \"__\".concat(fieldName, \"_\").concat(handleName);\n}\nmodule.exports = getRelayHandleKey;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar stableCopy = require('./stableCopy');\nvar invariant = require('invariant');\n/**\n * Returns a stable identifier for the given pair of `RequestParameters` +\n * variables.\n */\nfunction getRequestIdentifier(parameters, variables) {\n  var requestID = parameters.cacheID != null ? parameters.cacheID : parameters.id;\n  !(requestID != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getRequestIdentifier: Expected request `%s` to have either a ' + 'valid `id` or `cacheID` property', parameters.name) : invariant(false) : void 0;\n  return requestID + JSON.stringify(stableCopy(variables));\n}\nmodule.exports = getRequestIdentifier;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar invariant = require('invariant');\nfunction getValueAtPath(data, path) {\n  var result = data;\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(path),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      if (result == null) {\n        return null;\n      }\n      if (typeof key === 'number') {\n        !Array.isArray(result) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected an array when extracting value at path. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n        result = result[key];\n      } else {\n        !(typeof result === 'object' && !Array.isArray(result)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected an object when extracting value at path. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n        result = result[key];\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n}\nmodule.exports = getValueAtPath;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nfunction handlePotentialSnapshotErrors(environment, missingRequiredFields, relayResolverErrors) {\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(relayResolverErrors),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var resolverError = _step.value;\n      environment.requiredFieldLogger({\n        kind: 'relay_resolver.error',\n        owner: resolverError.field.owner,\n        fieldPath: resolverError.field.path,\n        error: resolverError.error\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (missingRequiredFields != null) {\n    switch (missingRequiredFields.action) {\n      case 'THROW':\n        {\n          var _missingRequiredField = missingRequiredFields.field,\n            path = _missingRequiredField.path,\n            owner = _missingRequiredField.owner;\n          // This gives the consumer the chance to throw their own error if they so wish.\n          environment.requiredFieldLogger({\n            kind: 'missing_field.throw',\n            owner: owner,\n            fieldPath: path\n          });\n          throw new Error(\"Relay: Missing @required value at path '\".concat(path, \"' in '\").concat(owner, \"'.\"));\n        }\n      case 'LOG':\n        missingRequiredFields.fields.forEach(function (_ref) {\n          var path = _ref.path,\n            owner = _ref.owner;\n          environment.requiredFieldLogger({\n            kind: 'missing_field.log',\n            owner: owner,\n            fieldPath: path\n          });\n        });\n        break;\n      default:\n        {\n          missingRequiredFields.action;\n        }\n    }\n  }\n}\nmodule.exports = handlePotentialSnapshotErrors;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n// $FlowFixMe[method-unbinding] added when improving typing for this parameters\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmptyObject(obj) {\n  for (var _key in obj) {\n    if (hasOwnProperty.call(obj, _key)) {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = isEmptyObject;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\nmodule.exports = isPromise;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * A fast test to determine if two values are equal scalars:\n * - compares scalars such as booleans, strings, numbers by value\n * - compares functions by identity\n * - returns false for complex values, since these cannot be cheaply tested for\n *   equality (use `areEquals` instead)\n */\nfunction isScalarAndEqual(valueA, valueB) {\n  return valueA === valueB && (valueA === null || typeof valueA !== 'object');\n}\nmodule.exports = isScalarAndEqual;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar hasWeakSetDefined = typeof WeakSet !== 'undefined';\nvar hasWeakMapDefined = typeof WeakMap !== 'undefined';\n\n/**\n * Recycles subtrees from `prevData` by replacing equal subtrees in `nextData`.\n */\nfunction recycleNodesInto(prevData, nextData) {\n  if (prevData === nextData || typeof prevData !== 'object' || prevData instanceof Set || prevData instanceof Map || hasWeakSetDefined && prevData instanceof WeakSet || hasWeakMapDefined && prevData instanceof WeakMap || !prevData || typeof nextData !== 'object' || nextData instanceof Set || nextData instanceof Map || hasWeakSetDefined && nextData instanceof WeakSet || hasWeakMapDefined && nextData instanceof WeakMap || !nextData) {\n    return nextData;\n  }\n  var canRecycle = false;\n\n  // Assign local variables to preserve Flow type refinement.\n  var prevArray = Array.isArray(prevData) ? prevData : null;\n  var nextArray = Array.isArray(nextData) ? nextData : null;\n  if (prevArray && nextArray) {\n    canRecycle = nextArray.reduce(function (wasEqual, nextItem, ii) {\n      var prevValue = prevArray[ii];\n      var nextValue = recycleNodesInto(prevValue, nextItem);\n      if (nextValue !== nextArray[ii]) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!Object.isFrozen(nextArray)) {\n            nextArray[ii] = nextValue;\n          }\n        } else {\n          nextArray[ii] = nextValue;\n        }\n      }\n      return wasEqual && nextValue === prevArray[ii];\n    }, true) && prevArray.length === nextArray.length;\n  } else if (!prevArray && !nextArray) {\n    // Assign local variables to preserve Flow type refinement.\n    var prevObject = prevData;\n    var nextObject = nextData;\n    var prevKeys = Object.keys(prevObject);\n    var nextKeys = Object.keys(nextObject);\n    canRecycle = nextKeys.reduce(function (wasEqual, key) {\n      var prevValue = prevObject[key];\n      var nextValue = recycleNodesInto(prevValue, nextObject[key]);\n      if (nextValue !== nextObject[key]) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!Object.isFrozen(nextObject)) {\n            // $FlowFixMe[cannot-write]\n            nextObject[key] = nextValue;\n          }\n        } else {\n          // $FlowFixMe[cannot-write]\n          nextObject[key] = nextValue;\n        }\n      }\n      return wasEqual && nextValue === prevObject[key];\n    }, true) && prevKeys.length === nextKeys.length;\n  }\n  return canRecycle ? prevData : nextData;\n}\nmodule.exports = recycleNodesInto;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction registerEnvironmentWithDevTools(environment) {\n  // Register this Relay Environment with Relay DevTools if it exists.\n  // Note: this must always be the last step in the constructor.\n  var _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\n  var devToolsHook = _global && _global.__RELAY_DEVTOOLS_HOOK__;\n  if (devToolsHook) {\n    devToolsHook.registerEnvironment(environment);\n  }\n}\nmodule.exports = registerEnvironmentWithDevTools;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar resolvedPromise = Promise.resolve();\n\n/**\n * An alternative to setImmediate based on Promise.\n */\nfunction resolveImmediate(callback) {\n  resolvedPromise.then(callback)[\"catch\"](throwNext);\n}\nfunction throwNext(error) {\n  setTimeout(function () {\n    throw error;\n  }, 0);\n}\nmodule.exports = resolveImmediate;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Creates a copy of the provided value, ensuring any nested objects have their\n * keys sorted such that equivalent values would have identical JSON.stringify\n * results.\n */\nfunction stableCopy(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map(stableCopy);\n  }\n  var keys = Object.keys(value).sort();\n  var stable = {};\n  for (var i = 0; i < keys.length; i++) {\n    stable[keys[i]] = stableCopy(value[keys[i]]);\n  }\n  return stable;\n}\nmodule.exports = stableCopy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _window, _window$performance;\nvar isPerformanceNowAvailable = typeof window !== 'undefined' && typeof ((_window = window) === null || _window === void 0 ? void 0 : (_window$performance = _window.performance) === null || _window$performance === void 0 ? void 0 : _window$performance.now) === 'function';\nfunction currentTimestamp() {\n  if (isPerformanceNowAvailable) {\n    return window.performance.now();\n  }\n  return Date.now();\n}\nfunction withDuration(cb) {\n  var startTime = currentTimestamp();\n  var result = cb();\n  return [currentTimestamp() - startTime, result];\n}\nmodule.exports = withDuration;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar warning = require(\"fbjs/lib/warning\");\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar debugCache = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction withProvidedVariables(userSuppliedVariables, providedVariables) {\n  if (providedVariables != null) {\n    var operationVariables = {};\n    Object.assign(operationVariables, userSuppliedVariables);\n    Object.keys(providedVariables).forEach(function (varName) {\n      var providerFunction = providedVariables[varName].get;\n      var providerResult = providerFunction();\n\n      // people like to ignore these warnings, so use the cache to\n      // enforce that we only compute the value the first time\n      if (!debugCache.has(providerFunction)) {\n        debugCache.set(providerFunction, providerResult);\n        operationVariables[varName] = providerResult;\n      } else {\n        var cachedResult = debugCache.get(providerFunction);\n        if (process.env.NODE_ENV !== \"production\") {\n          process.env.NODE_ENV !== \"production\" ? warning(areEqual(providerResult, cachedResult), 'Relay: Expected function `%s` for provider `%s` to be a pure function, ' + 'but got conflicting return values `%s` and `%s`', providerFunction.name, varName, providerResult, cachedResult) : void 0;\n        }\n        operationVariables[varName] = cachedResult;\n      }\n    });\n    return operationVariables;\n  } else {\n    return userSuppliedVariables;\n  }\n}\nwithProvidedVariables.tests_only_resetDebugCache = process.env.NODE_ENV !== \"production\" ? function () {\n  debugCache = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\n} : undefined;\nmodule.exports = withProvidedVariables;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["aStackPool","bStackPool","eq","a","b","aStack","bStack","objToStr","Object","prototype","toString","className","call","String","isNaN","Number","source","global","multiline","ignoreCase","length","push","size","constructor","hasOwnProperty","valueOf","keys","i","pop","module","exports","result","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","warning","require","condition","format","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","getComponentName","component","displayName","getContainerName","Component","React","createRelayContext","__internal","_interopRequireDefault","_objectSpread2","_objectWithoutPropertiesLoose2","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_excluded","buildReactRelayContainer","assertRelayContext","areEqual","_require3","createFragmentSpecResolver","getDataIDsFromObject","isScalarAndEqual","createContainerWithFragments","fragments","_class","containerName","_React$Component","props","_props$__rootIsQueryR","_this","resolverFromThisUpdate","state","resolver","setState","updatedState","data","resolve","relayProp","getRelayProp","environment","relayContext","__relayContext","rootIsQueryRenderer","__rootIsQueryRenderer","prevProps","prevPropsContext","getDerivedStateFromProps","nextProps","prevState","_nextProps$__rootIsQu","prevIDs","nextIDs","setProps","_proto","componentDidMount","_subscribeToNewResolverAndRerenderIfStoreHasChanged","componentDidUpdate","dispose","_rerenderIfStoreHasChanged","componentWillUnmount","shouldComponentUpdate","nextState","ii","key","_this$state","maybeNewData","_this$state2","setCallback","_handleFragmentDataUpdate","render","_this$props","componentRef","createElement","ref","relay","createContainer","fragmentSpec","ReactRelayContext","ReactRelayQueryRendererContext","_require","createOperationDescriptor","getRequest","deepFreeze","useLayoutEffect","useState","useRef","useMemo","queryRendererContext","query","variables","latestVariables","value","latestValue","current","useDeepCompare","operation","request","dataRef","forceUpdate","cleanupFnRef","snapshot","check","res","lookup","fragment","retainDisposable","retain","subscribeDisposable","subscribe","newSnapshot","disposed","cleanupFn","Provider","_extends2","_objectSpread3","_excluded2","_excluded3","getRootVariablesForFragments","ReactRelayQueryFetcher","invariant","ConnectionInterface","Observable","RelayFeatureFlags","getVariablesFromObject","FORWARD","toObserver","observerOrCallback","complete","unsubscribe","subscription","connectionConfig","metadata","foundConnectionMetadata","isRelayModern","fragmentName","connectionMetadata","connection","findConnectionMetadata","getConnectionFromProps","path","createGetConnectionFromProps","direction","getFragmentVariables","countVariable","count","prevVars","totalCount","createGetFragmentVariables","_resolver","connectionData","_getConnectionData","hasMore","cursor","_refetchSubscription","refetchVariables","_canFetchPage","_refetchVariables","paginatingVariables","_fetchPage","force","pageSize","options","observer","create","sink","edgeCount","_refetchConnection","_ConnectionInterface$","get","END_CURSOR","START_CURSOR","_isARequestInFlight","ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT","prevContext","contextForChildren","_buildRelayProp","resolverGeneration","_isUnmounted","_hasFetched","UNSAFE_componentWillReceiveProps","_this2","prevRootVariables","nextRootVariables","_cleanup","_hasMore","isLoading","_isLoading","loadMore","_loadMore","refetchConnection","restProps","_ConnectionInterface$2","EDGES","PAGE_INFO","HAS_NEXT_PAGE","HAS_PREV_PAGE","edges","pageInfo","Array","isArray","_getQueryFetcher","_queryFetcher","method","fragmentVariables","_this3","_this$props2","rootVariables","fetchVariables","getVariables","cacheConfig","refetchSubscription","cleanup","execute","preservePreviousReferences","mergeMap","payload","prevData","setVariables","node","nextData","onNext","next","_this$props3","ComponentClass","fetchQuery","isRelayModernEnvironment","_cacheSelectionReference","cacheSelectionReference","_selectionReferences","selectionReferences","getSelectionReferences","lookupInStore","fetchPolicy","status","_retainCachedOperation","getFetchResult","_didFetchFinish","_error","_snapshot","_ref","_ref$preservePrevious","reference","concat","disposeSelectionReferences","setOnDataChange","onDataChange","_fetchOptions","onDataChangeCallbacks","fetch","fetchOptions","cacheConfigOverride","fetchHasReturned","disposeRequest","oldOnDataChangeCallbacks","indexOf","operationOverride","_pendingRequest","_onQueryDataAvailable","notifyFirstResult","err","forEach","retry","_rootSubscription","_disposeCacheSelectionReference","r","_ref2","_this$_fetchOptions","maybeNewOnDataChangeCallbacks","_require2","requestCache","ReactRelayQueryRenderer","params","prevRequestCacheKey","requestCacheKey","renderProps","getRenderProps","queryFetcher","retryCallbacks","handleDataChange","handleRetryAfterError","getRequestCacheKey","_maybeHiddenOrFastRefresh","prevPropsEnvironment","prevPropsVariables","prevQuery","fetchQueryAndComputeStateFromProps","resetQueryStateForUpdate","newState","ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION","fetchResult","_fetchResult$snapshot","_fetchResult$error","_handleDataChange","_prevProps","_this$state3","syncSnapshot","JSON","stringify","id","cacheID","prevSelectionReferences","genericEnvironment","storeSnapshot","createContext","refetch","taggedNode","renderVariables","_getFragmentVariables","localVariables","latestState","response","start","_refetch","isRelayEnvironment","isRelayContext","context","componentName","assertFragmentMap","getFragment","useContext","Container","forwardRef","_queryRendererContext","getSelector","_selector$selectors$","_selector$selectors$2","_selector$owner$varia","fragmentNode","fragmentRef","selector","fragmentOwnerVariables","kind","selectors","owner","ReactRelayFragmentContainer","ReactRelayLocalQueryRenderer","ReactRelayPaginationContainer","ReactRelayRefetchContainer","EntryPointContainer","loadEntryPoint","loadQuery","ProfilerContext","RelayEnvironmentProvider","useClientQuery","useEntryPointLoader","useFragment","useLazyLoadQuery","useMutation","usePaginationFragment","usePreloadedQuery","useQueryLoader","useRefetchableFragment","useRelayEnvironment","useSubscribeToInvalidationState","useSubscription","RelayRuntime","ConnectionHandler","QueryRenderer","LocalQueryRenderer","MutationTypes","RangeOperations","applyOptimisticMutation","commitLocalUpdate","commitMutation","createFragmentContainer","createPaginationContainer","createRefetchContainer","fetchQuery_DEPRECATED","graphql","readInlineData","requestSubscription","useEffect","entryPointReference","getComponent","queries","entryPoints","extraProps","rootModuleID","profilerContext","__log","_toConsumableArray2","LRUCache","getQueryResourceForEnvironment","SuspenseResource","_require2$__internal","getPromiseForActiveRequest","getFragmentIdentifier","getPendingOperationsForFragment","getVariablesFromFragment","handlePotentialSnapshotErrors","isPromise","recycleNodesInto","WEAKMAP_SUPPORTED","WeakMap","CONSTANT_READONLY_EMPTY_ARRAY","freeze","isMissingData","some","s","missingLiveResolverFields","map","filter","Boolean","flat","getFragmentResult","cacheKey","storeEpoch","ClientEdgeQueryResultsCache","Map","_environment","fragmentIdentifier","_this$_cache$get$","_this$_cache$get","_cache","recordQueryResults","existing","existingResults","_suspenseResource","queryResult","temporaryRetain","suspenseResource","_retain","set","_this$_retainCounts$g","retainCount","_retainCounts","_this$_retainCounts$g2","newRetainCount","FragmentResourceImpl","ENABLE_CLIENT_EDGES","_clientEdgeQueryResultsCache","_proto2","read","componentDisplayName","fragmentKey","readWithIdentifier","_fragmentNode$metadat","_fragmentNode$metadat2","_missingLiveResolverF2","_missingLiveResolverF3","getStore","getEpoch","plural","cachedValue","_missingLiveResolverF","promise","isRelayHooks","isPromiseCached","pendingOperations","_throwOrLogErrorsInSnapshot","cached","fragmentSelector","fragmentResult","clientEdgeRequests","hasClientEdges","_snapshot$missingClie","_snapshot$missingClie2","_s$missingClientEdges","_s$missingClientEdges2","missingClientEdges","hasMissingClientEdges","queryResource","queryResults","singularOrPluralForEach","snap","_snap$missingClientEd","_clientEdgeRequests","clientEdgeDestinationID","_this3$_performClient","_performClientEdgeQuery","requestDescriptor","clientEdgePromises","fragmentOwner","parentQueryPromiseResult","_getAndSavePromiseForFragmentRequestInFlight","parentQueryPromiseResultPromise","missingResolverFieldPromises","liveStateID","getLiveResolverPromise","_parentQueryPromiseRe","_clientEdgeRequests2","promises","Promise","all","originalVariables","fetchObservable","prepare","_this4","missingRequiredFields","relayResolverErrors","readSpec","fragmentNodes","fragmentRefs","callback","_this5","renderedSnapshot","_this$checkMissedUpda","checkMissedUpdates","didMissUpdates","currentSnapshot","disposables","idx","latestSnapshot","_updatePluralSnapshot","_this$_clientEdgeQuer","_this$_clientEdgeQuer2","clientEdgeQueryResults","subscribeSpec","fragmentResults","_this6","disposable","currentSnapshots","renderData","currentData","updatedData","updatedCurrentSnapshot","seenRecords","checkMissedUpdatesSpec","_this7","_this8","pendingOperationsResult","networkPromise","then","baseSnapshots","_currentFragmentResul","currentFragmentResult","reportInvalidCachedData","nextSnapshots","nodeName","createFragmentResource","dataResources","getFragmentResourceForEnvironment","newDataResource","implementation","inject","impl","capacity","_capacity","_map","firstKey","done","has","clear","wrapPrepareQueryResource","cb","DEFAULT_FETCH_POLICY","DEFAULT_LIVE_FETCH_POLICY","operationIsLiveQuery","live","getQueryCacheIdentifier","maybeFetchPolicy","maybeRenderPolicy","cacheBreaker","renderPolicy","UNSTABLE_getDefaultRenderPolicy","cacheIdentifier","identifier","getQueryResult","rootFragmentRef","__id","dataID","__fragments","__fragmentOwner","nextID","createCacheEntry","operationAvailability","networkSubscription","onDispose","isLiveQuery","currentValue","currentNetworkSubscription","retention","cacheEntry","processedPayloadsCount","getValue","setValue","val","setNetworkSubscription","permanentRetain","releaseTemporaryRetain","QueryResourceImpl","prepareWithIdentifier","temporaryRetainDisposable","entryWasCached","_fetchAndSaveQuery","observerUnsubscribe","queryAvailability","_getOrCreateCacheEntry","resourceID","TESTS_ONLY__getCacheEntry","_clearCacheEntry","shouldFetch","shouldAllowRender","queryStatus","hasFullQuery","canPartialRender","resolveNetworkPromise","_cacheEntry","_queryResult","observerStart","observerNext","observerError","observerComplete","_cacheEntry2","createQueryResource","children","getEnvironmentForActor","_retainCount","_retainDisposable","Math","max","_this$_releaseTempora","isServer","releaseQueryTimeout","clearTimeout","_releaseTemporaryRetain","setTimeout","_this$_releaseTempora2","_this$_releaseTempora3","getRetainCount","environmentProvider","entryPoint","entryPointParams","loadingPromise","root","getModuleIfRequired","load","preloadProps","getPreloadProps","preloadedQueries","preloadedEntryPoints","queryPropName","_queries$queryPropNam","environmentProviderOptions","parameters","getEnvironment","networkCacheConfig","__nameForWarning","entryPointPropName","entryPointDescription","nestedEntryPoint","nestedParams","isDisposed","values","innerDispose","_loadingPromise","componentModule","getModuleId","fetchQueryDeduped","PreloadableQueryRegistry","ReplaySubject","getRequestIdentifier","RenderDispatcher","fetchKey","preloadableRequest","_React$__SECRET_INTER3","_React$__SECRET_INTER4","_options$fetchPolicy","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","retainReference","unsubscribeFromNetworkRequest","unsubscribeFromExecution","cancelOnLoadCallback","queryId","didExecuteNetworkSource","executeWithNetworkSource","networkObservable","executeWithSource","executionSubject","returnedObservable","networkError","didMakeNetworkRequest","makeNetworkRequest","observable","subject","ENABLE_LOAD_QUERY_REQUEST_DEDUPING","getNetwork","subjectSubscription","executeDeduped","fetchFn","_fetchQueryDeduped$su","checkAvailabilityAndExecute","concreteRequest","_module","_PreloadableQueryRegi","onLoad","preloadedModule","isReleased","isNetworkRequestCancelled","releaseQuery","cancelNetworkRequest","useTrackLoadQueryInRender","_React$__SECRET_INTER","_React$__SECRET_INTER2","gqlQuery","_createForOfIteratorHelper2","useIsMountedRef","useCallback","initialNullEntryPointReferenceState","_options$TEST_ONLY__i","_options$TEST_ONLY__i2","_options$TEST_ONLY__i3","_options$TEST_ONLY__i4","initialEntryPointReferenceInternal","TEST_ONLY__initialEntryPointData","initialEntryPointParamsInternal","isMountedRef","undisposedEntryPointReferencesRef","Set","_useState","setEntryPointReference","_useState2","setEntryPointParams","disposeEntryPoint","nullEntryPointReference","add","entryPointLoaderCallback","updatedEntryPointReference","maybeHiddenOrFastRefresh","undisposedEntryPointReferences","_step","_iterator","n","undisposedEntryPointReference","_step2","_iterator2","unhandledStateChange","useUnsafeRef_DEPRECATED","subscriptionRef","isFetchingRef","disposeFetch","startFetch","completeFetch","HooksImplementation","useFragmentNode","useStaticFragmentNodeWarning","useDebugValue","useFragment_LEGACY","FragmentResource","isListeningForUpdatesRef","handleDataUpdate","disableStoreUpdates","enableStoreUpdates","getObservableForActiveRequest","isActive","setIsActive","onCompleteOrError","useLazyLoadQueryNode","useMemoOperationDescriptor","UNSTABLE_renderPolicy","useFetchTrackingRef","QueryResource","forceUpdateKey","_useFetchTrackingRef","preparedQueryResult","useIsOperationNodeActive","getPaginationVariables","getValueAtPath","fragmentData","connectionPathInFragmentData","paginationRequest","paginationMetadata","onReset","identifierField","identifierValue","mirroredEnvironment","setMirroredEnvironment","mirroredFragmentIdentifier","setMirroredFragmentIdentifier","isParentQueryActive","_getConnectionState","_pageInfo$END_CURSOR","_pageInfo$START_CURSO","getConnectionState","onComplete","parentVariables","extraVariables","UNSTABLE_extraVariables","baseVariables","paginationVariables","paginationQuery","useMemoVariables","memoVariables","memoCacheConfig","mirroredVariables","setMirroredVariables","defaultCommitMutation","mutation","commitMutationFn","arguments","environmentRef","mutationRef","inFlightMutationsRef","isMutationInFlight","setMutationInFlight","config","onCompleted","errors","_config$onCompleted","onError","_config$onError","onUnsubscribe","_config$onUnsubscribe","_config$onNext","useLoadMoreFunction","useRefetchableFragmentNode","getPaginationMetadata","useLoadMore","isLoadingMore","setIsLoadingMore","_useLoadMoreFunction","fragmentInput","parentFragmentRef","_getPaginationMetadat","_useRefetchableFragme","_useLoadMore","loadPrevious","hasPrevious","isLoadingPrevious","disposeFetchPrevious","_useLoadMore2","loadNext","hasNext","isLoadingNext","disposeFetchNext","__environment","usePaginationFragment_LEGACY","_require3$__internal","preloadedQuery","useLazyLoadQueryNodeParams","fallbackFetchObservable","ifEmpty","initialNullQueryReferenceState","requestIsLiveQuery","initialQueryReference","initialQueryReferenceInternal","undisposedQueryReferencesRef","queryReference","setQueryReference","previousInitialQueryReference","setPreviousInitialQueryReference","disposeQuery","queryLoaderCallback","mergedOptions","_options$__environmen","updatedQueryReference","undisposedQueryReferences","undisposedQueryReference","useRefetchableFragment_LEGACY","useReducer","_require4","getRefetchMetadata","reducer","action","type","_action$refetchEnviro","refetchEnvironment","refetchQuery","parentEnvironment","_getRefetchMetadata","refetchableRequest","fragmentRefPathInResponse","_useReducer","refetchState","dispatch","shouldReset","_useQueryLoader","queryRef","process","handleQueryCompleted","maybeError","queryData","_useFragmentNode","providedRefetchVariables","_fragmentSelector$sel","_fragmentSelector$sel2","_fragmentSelector$sel3","_fragmentSelector$sel4","useRefetchFunction","warningContext","dataIDs","disposableRef","stableDataIDs","from","sort","join","store","invalidationState","lookupInvalidationState","subscribeToInvalidationState","requestSubscriptionFn","actualRequestSubscription","init","MutationHandlers","handle","DeleteRecordHandler","DeleteEdgeHandler","AppendEdgeHandler","PrependEdgeHandler","AppendNodeHandler","PrependNodeHandler","generateClientID","getStableStorageKey","getRelayHandleKey","CONNECTION","NEXT_EDGE_INDEX","buildConnectionEdge","edge","edgeIndex","edgeID","getDataID","connectionEdge","getType","copyFieldsFrom","mergeEdges","sourceEdges","targetEdges","nodeIDs","NODE","getLinkedRecord","nodeID","createEdge","record","edgeType","setLinkedRecord","deleteNode","_ConnectionInterface$5","getLinkedRecords","nextEdges","slice","setLinkedRecords","getConnection","filters","handleKey","getConnectionID","recordID","storageKey","insertEdgeAfter","newEdge","CURSOR","foundCursor","insertEdgeBefore","_ConnectionInterface$4","unshift","update","PAGE_INFO_TYPE","serverConnection","fieldKey","serverPageInfo","clientConnectionID","clientConnectionField","clientConnection","clientPageInfo","_connection","_serverEdges","prevEdges","prevPageInfo","after","before","_nodeIDs","last","startCursor","first","endCursor","serverEdges","CONNECTION_CALLS","find","surrounds","newConfig","isConnectionCall","idOrIds","connections","handleArgs","connectionID","edgeUpdater","nodeUpdater","insertFn","singleServerEdge","_unused","_unused2","serverEdgeList","_loop","serverEdge","serverNode","_step3","serverNodeId","_iterator3","_connection$getLinked","_edge$getLinkedRecord","clientEdge","_serverNodes","singleServerNode","serverNodes","_payload$handleArgs","edgeTypeName","_unused3","_unused4","_step4","serverNodeList","_iterator4","_loop2","_step5","_iterator5","_connection$getLinked2","_edge$getLinkedRecord2","RelayDefaultHandlerProvider","RelayDeclarativeMutationConfig","RelayNetwork","RelayObservable","RelayQueryResponseCache","fetchQueryInternal","GraphQLTag","generateUniqueClientID","isClientID","RelayConcreteVariables","RelayModernEnvironment","RelayModernOperationDescriptor","RelayModernRecord","RelayModernSelector","RelayModernStore","RelayOperationTracker","RelayRecordSource","RelayStoreUtils","ResolverFragments","ViewerPattern","createPayloadFor3DField","RelayConcreteNode","RelayDefaultHandleKey","RelayError","RelayProfiler","RelayReplaySubject","stableCopy","withProvidedVariables","Environment","Network","QueryResponseCache","RecordSource","Record","Store","areEqualSelectors","createNormalizationSelector","createReaderSelector","createRequestDescriptor","getArgumentValues","getDataIDsFromFragment","getNode","getInlineDataFragment","getModuleComponentKey","getModuleOperationKey","getPaginationFragment","getPluralSelector","getRefetchableFragment","getSelectorsFromObject","getSingularSelector","getStorageKey","getVariablesFromPluralFragment","getVariablesFromSingularFragment","isFragment","isInlineDataFragment","isRequest","DefaultHandlerProvider","VIEWER_ID","VIEWER_TYPE","DEFAULT_HANDLE_KEY","FRAGMENTS_KEY","FRAGMENT_OWNER_KEY","ID_KEY","REF_KEY","REFS_KEY","ROOT_ID","ROOT_TYPE","TYPENAME_KEY","OperationTracker","getOperationVariables","INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE","assertInternalActorIdentifier","actorIdentifier","getActorIdentifier","actorID","getDefaultActorIdentifier","ACTOR_IDENTIFIER_FIELD_NAME","getActorIdentifierFromPayload","RANGE_ADD","RANGE_DELETE","NODE_DELETE","APPEND","PREPEND","getRootField","selections","convert","configs","optimisticUpdater","updater","configOptimisticUpdates","configUpdates","nodeDeleteResult","deletedIDFieldName","rootField","deleteID","nodeDelete","rangeAddResult","parentID","connectionInfo","edgeName","parent","info","rangeBehavior","rangeAdd","rangeDeleteResult","connectionKeys","pathToConnection","deleteIDs","deletedIDField","eachField","idObject","recordProxy","rangeDelete","eachOptimisticUpdater","eachUpdater","RelayRecordProxy","mutator","_dataID","_mutator","_source","copyFields","isValidLeafValue","setValue__UNSAFE","linkedID","getLinkedRecordID","setLinkedRecordID","getOrCreateLinkedRecord","typeName","linkedRecord","_this$_source$get","clientID","linkedIDs","getLinkedRecordIDs","records","setLinkedRecordIDs","invalidateRecord","markIDForInvalidation","every","EXISTENT","RelayRecordSourceMutator","base","__sources","_base","_sink","unstable_getRawRecordWithChanges","baseRecord","sinkRecord","clone","_getSinkRecord","sourceID","sinkID","sinkSource","baseSource","copyFieldsFromRecord","getStatus","NONEXISTENT","_readUpdatableFragment","readUpdatableFragment","_readUpdatableQuery","readUpdatableQuery","RelayRecordSourceProxy","handlerProvider","missingFieldHandlers","__mutator","_handlerProvider","_proxies","_getDataID","_invalidatedStore","_idsMarkedForInvalidation","_missingFieldHandlers","publishSource","fieldPayloads","getRecordIDs","sourceRecord","fieldPayload","handler","getRoot","invalidateStore","isStoreMarkedForInvalidation","getIDsMarkedForInvalidation","fragmentReference","RelayRecordSourceSelectorProxy","recordSource","readSelector","__recordSource","_readSelector","getOperationRoot","_getRootField","fieldName","field","selection","getPluralRootField","operationKind","optimisticResponse","applyMutation","commitUpdate","uploadables","_RelayDeclarativeMuta","executeMutation","item","apply","ACTOR_CHANGE","ALIASED_FRAGMENT_SPREAD","ALIASED_INLINE_FRAGMENT_SPREAD","CLIENT_EDGE_TO_CLIENT_OBJECT","CLIENT_EDGE_TO_SERVER_OBJECT","CLIENT_EXTENSION","CONDITION","DEFER","FLIGHT_FIELD","FRAGMENT_SPREAD","INLINE_DATA_FRAGMENT_SPREAD","INLINE_FRAGMENT","LINKED_FIELD","MODULE_IMPORT","RELAY_LIVE_RESOLVER","RELAY_RESOLVER","REQUIRED_FIELD","SCALAR_FIELD","STREAM","nonUpdatableKeys","updateProxyFromSelections","mutableUpdatableProxy","updatableProxyRootRecord","recordSourceProxy","_selection$alias3","defineProperty","_selection$alias","alias","createGetterForPluralLinkedField","createSetterForPluralLinkedField","_selection$alias2","createGetterForSingularLinkedField","createSetterForSingularLinkedField","scalarFieldName","_selection$args","newVariables","getScalarUsingMissingFieldHandlers","includes","newValue","_selection$args2","_selection$args3","recordProxies","newValueRecord","_selection$args4","_selection$args5","linkedRecords","newIds","newId","getPluralLinkedRecordUsingMissingFieldHandlers","updatableProxy","_selection$args6","getLinkedRecordUsingMissingFieldHandlers","createUpdatableProxy","proxy","updatableFragment","fragmentRoot","updatableData","getUpdatableQuery","updatableQuery","CLIENT_COMPONENT","LINKED_HANDLE","SCALAR_HANDLE","TYPE_DISCRIMINATOR","convertFetch","fn","logRequestInfo","observeFetch","operationVariables","providedVariables","pollInterval","poll","hostReportError","_isUncaughtThrownError","onUnhandledError","obj","isObservable","fromObservable","fromPromise","fromValue","sub","_error2","error2","both","alternate","hasValue","closed","withClosed","doCleanup","_error3","isUncaughtThrownError","_subscribe","mapValue","subscriptions","_sub","splice","timeout","toPromise","_this9","reject","resolved","ttl","_responses","_size","_ttl","queryID","getCacheKey","fetchTime","Date","now","extensions","cacheTimestamp","generateID","env","network","networkRequestId","logObserver","FRAGMENT","REQUEST","isUpdatableQuery","UPDATABLE_QUERY","INLINE_DATA_FRAGMENT","_fragment$metadata","_fragment$metadata2","strings","preloadableQueryRegistry","_preloadableQueries","_callbacks","callbacks","_this$_callbacks$get","getNetworkObservable","queryNode","readData","requestCachesByEnvironment","getRequestCache","cachedRequest","subjectForInFlightStatus","cachedReq","getCachedRequest","cachedRequestInstance","getObserverCount","getObservableForCachedRequest","getActiveStatusObservableForCachedRequest","isRequestActive","USE_REACT_CACHE","resolveOnNext","intern","PREFIX","localID","index","STRING_INTERN_LEVEL","MAX_DATA_ID_LENGTH","generateClientObjectClientID","typename","localId","getOperation","cloneRelayHandleSourceField","cloneRelayScalarHandleSourceField","getLocalVariables","UNKNOWN","RelayStoreReactFlightUtils","TYPE_SCHEMA_TYPE","generateTypeID","DataChecker","getSourceForActor","getTargetForActor","defaultActorIdentifier","handlers","operationLoader","shouldProcessClientComponents","_getSourceForActor","_getTargetForActor","_mutatorRecordSourceProxyCache","_this$_getMutatorAndR","_getMutatorAndRecordProxyForActor","_mostRecentlyInvalidatedAt","_handlers","_operationLoader","_recordSourceProxy","_recordWasMissing","_variables","_shouldProcessClientComponents","tuple","target","_assignClientAbstractTypes","_traverse","mostRecentlyInvalidatedAt","_getVariableValue","_handleMissing","_handleMissingScalarField","_handleMissingLinkField","_handleMissingPluralLinkField","invalidatedAt","getInvalidationEpoch","_traverseSelections","_checkScalar","_checkPluralLink","_checkLink","_checkActorChange","linkedField","passingValue","_abstractKey","abstractKey","_recordType","_typeID","_implementsInterface","handleField","_handleField","_checkModuleImport","prevVariables","argumentDefinitions","recordWasMissing","recordType","typeID","ENABLE_REACT_FLIGHT_COMPONENT_FIELD","_checkFlightField","_checkResolver","backingField","moduleImport","operationKey","documentName","operationReference","normalizationRootNode","fieldValue","getActorLinkedRecordID","prevSource","prevMutator","prevRecordSourceProxy","_this$_getMutatorAndR2","tree","REACT_FLIGHT_TREE_STORAGE_KEY","reachableExecutableDefinitions","REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY","definition","clientAbstractTypes","_i","_Object$keys","abstractType","concreteType","withDuration","RelayResponseNormalizer","Executor","getPublishQueue","isClientPayload","operationExecutions","operationTracker","optimisticConfig","_reactFlightPayloadDeserializer","reactFlightPayloadDeserializer","reactFlightServerErrorHandler","scheduler","treatMissingFieldsAsNull","log","_withDuration","duration","_log","executeId","_executeId","operationName","_operation","_actorIdentifier","_treatMissingFieldsAsNull","_incrementalPayloadsPending","_incrementalResults","_nextSubscriptionId","_operationExecutions","_operationTracker","_operationUpdateEpochs","_optimisticUpdates","_pendingModulePayloadsCount","_getPublishQueue","_scheduler","_state","_getStore","_subscriptions","_updater","_isClientPayload","_reactFlightServerErrorHandler","_isSubscriptionOperation","_retainDisposables","_seenActors","_completeFns","_complete","_next","_this$_operation$requ","_start","_processOptimisticResponse","cancel","optimisticUpdates","_getPublishQueueAndSaveActor","revertUpdate","_runPublishQueue","_asyncStoreUpdateDisposable","_completeOperationTracker","_disposeRetainedData","_updateActiveState","activeState","_schedule","task","cancellationToken","schedule","_id","_handleNext","_maybeCompleteSubscriptionOperationTracking","_handleErrorResponse","responses","results","messages","_ref3","message","stack","responseWithData","_handleOptimisticResponses","_response$extensions","responsePart","_responsePart$extensi","isOptimistic","responsesWithData","x","_x$extensions","is_final","_partitionGraphQLResp","nonIncrementalResponses","incrementalResponses","label","partitionGraphQLResponses","hasNonIncrementalResponses","payloadFollowups","_processResponses","_processPayloadFollowups","_payloadFollowups","_processIncrementalResponses","__relay_subscription_root_id","updatedOwners","_retainData","_updateOperationTracker","normalizeResponse","_deserializeReactFlightPayloadWithLogging","validateOptimisticResponsePayload","_processOptimisticFollowups","incrementalPlaceholders","followupPayloads","isFinal","applyUpdate","followupPayload","_expectOperationLoader","_processAsyncOptimisticModuleImport","moduleImportOptimisticUpdates","_processOptimisticModuleImport","_normalizeFollowupPayload","normalizationNode","moduleImportPayload","modulePayload","_this$_optimisticUpda","payloadPart","relayPayload","commitPayload","payloads","_followupPayload$acto","prevActorIdentifier","_processFollowupPayload","incrementalPlaceholder","_incrementalPlacehold","_processIncrementalPlaceholder","relayPayloads","placeholder","_processDeferResponse","_this10","_processFollowupPayloadWithNormalizationNode","decrementPendingCount","loadedNode","publishModuleImportPayload","batchAsyncModuleUpdatesFN","BATCH_ASYNC_MODULE_UPDATES_FN","shouldScheduleAsyncStoreUpdate","_handleFollowupPayload","_scheduleAsyncStoreUpdate","_error4","_relayPayload$fieldPa","pathKey","resultForLabel","resultForPath","pendingResponses","nextParentRecord","nextParentPayloads","parentRecord","parentPayloads","fieldID","previousParentEntry","handlePayloads","dedupePayload","_JSON$stringify","stableStringify","_this11","incrementalResponse","_pathKey","_resultForPath","_placeholder","_processStreamResponse","_placeholder$actorIde","parentEntry","_response$extensions2","handleFieldsRelayPayload","_this$_normalizeStrea","_normalizeStreamItem","itemID","itemIndex","currentParentRecord","currentItems","currentItem","nextItems","normalizationPath","_field$alias","_field$concreteType","_this$_getDataID","responseKey","finalPathEntry","parseInt","scheduleFn","completeFn","_this12","_getActorsToVisit","run","_response$extensions3","normalize","currentVariables","nextVariables","nextArgs","def","_nextArgs$def$name","defaultValue","argumentVariables","varName","wrapNetworkWithLogObserver","registerEnvironmentWithDevTools","defaultGetDataID","defaultRequiredFieldLogger","OperationExecutor","RelayPublishQueue","_config$log","_config$requiredField","_config$UNSTABLE_defa","_config$getDataID","_config$missingFieldH","_config$handlerProvid","_config$scheduler","_config$isServer","_config$operationTrac","configName","requiredFieldLogger","_defaultRenderPolicy","UNSTABLE_defaultRenderPolicy","ENABLE_PARTIAL_RENDERING_DEFAULT","_network","_publishQueue","_store","_isServer","__setNet","newNet","getOperationTracker","getScheduler","requestIdentifier","optimisticUpdate","_scheduleUpdates","replaceUpdate","newUpdate","_execute","createSource","operationHasClientAbstractTypes","_checkSelectorAndHandleMissingFields","getSource","commitSource","executeSubscription","_ref4","toJSON","_this$configName","_ref5","publishQueue","executor","RelayModernFragmentSpecResolver","_stale","_callback","_context","_data","_fragments","_props","_resolvers","_rootIsQueryRenderer","disposeCallback","prevItem","nextItem","prop","_nextItem","ownedSelectors","ownedSelector","SelectorListResolver","_onChange","setSelector","SelectorResolver","subscribeOnConstruction","_isMissingData","_missingRequiredFields","_relayResolverErrors","_selector","_subscription","_pendingOperationsRes","_subscribeOnConstruction","_proto3","isSuspenseSentinel","ACTOR_IDENTIFIER_KEY","INVALIDATED_AT_KEY","RELAY_RESOLVER_VALUE_KEY","maybeLink","link","links","merge","record1","record2","prevRecord","nextRecord","updated","setActorLinkedRecordID","getResolverLinkedRecordID","getResolverLinkedRecordIDs","resolverValue","CLIENT_EDGE_TRAVERSAL_PATH","IS_WITHIN_UNMATCHED_TYPE_REFINEMENT","mixedOwner","isWithinUnmatchedTypeRefinement","mixedClientEdgeTraversalPath","clientEdgeTraversalPath","items","ids","getDataIDs","itemVariables","assign","areEqualSingularSelectors","thisSelector","thatSelector","object","_regeneratorRuntime","resolveImmediate","RelayOptimisticRecordSource","RelayReader","RelayReferenceMarker","RelayStoreSubscriptions","RecordResolverCache","_options$gcReleaseBuf","_options$gcScheduler","_options$getDataID","_options$log","_options$operationLoa","_gcRun","_gcScheduler","_gcStep","_currentWriteEpoch","_gcHoldCounter","_gcReleaseBufferSize","gcReleaseBufferSize","gcScheduler","_globalInvalidationEpoch","_invalidationSubscriptions","_invalidatedRecordIDs","_queryCacheExpirationTime","queryCacheExpirationTime","_optimisticSource","_recordSource","_releaseBuffer","_roots","_shouldScheduleGC","_resolverCache","_getMutableRecordSource","_storeSubscriptions","_updatedRecordIDs","rootRecord","initializeRecordSource","_this$_optimisticSour","_this$_optimisticSour2","_options$handlers","_options$getSourceFor","_options$getTargetFor","_options$defaultActor","globalInvalidationEpoch","rootEntry","operationLastWrittenAt","epoch","operationFetchTime","getAvailabilityStatus","refCount","scheduleGC","shift","notify","sourceOperation","ENABLE_RELAY_RESOLVERS","invalidateDataIDs","updateSubscriptions","_updateInvalidationSubscription","updatedRecordIDs","invalidatedRecordIDs","temporaryRootEntry","publish","idsMarkedForInvalidation","currentWriteEpoch","targetRecord","REACT_FLIGHT_TYPE_NAME","updateTargetFromSource","optimistic","holdGC","__getUpdatedRecordIDs","invalidations","_RelayModernRecord$ge","checkInvalidationState","prevInvalidationState","currentInvalidations","prevInvalidations","invalidatedStore","snapshotSubscriptions","restore","restoreSubscriptions","_collect","__gc","gcRun","mark","startEpoch","references","storeIDs","wrap","prev","abrupt","t0","finish","remove","stop","_ownersToPendingOperations","_pendingOperationsToOwners","_ownersToPendingPromise","pendingOperation","affectedOwners","pendingOperationIdentifier","newlyAffectedOwnersIdentifier","ownerIdentifier","pendingOperationsAffectingOwner","ownersAffectedByPendingOperation","_ownerIdentifier","_resolveOwnerResolvers","affectedOwnersIdentifier","completedOwnersIdentifier","updatedOwnersIdentifier","_ownerIdentifier2","_ownerIdentifier3","promiseEntry","getPendingOperationsAffectingOwner","pendingOperationsForOwner","cachedPromiseEntry","UNPUBLISH_RECORD_SENTINEL","__UNPUBLISH_RECORD_SENTINEL","merged","getOptimisticRecordIDs","_global$ErrorUtils$ap","_global$ErrorUtils","_global","window","applyWithGuard","ErrorUtils","_hasStoreSnapshot","_pendingBackupRebase","_pendingData","_pendingOptimisticUpdates","_appliedOptimisticUpdates","_gcHold","revertAll","runWillClearGcHold","_commitData","_applyUpdates","_publishSourceFromPayload","pendingPayload","lookupSelector","payloadInvalidatedStore","processUpdate","storeUpdater","selectorData","recordSourceSelectorProxy","getReactFlightClientResponse","FRAGMENT_PROP_NAME_KEY","MODULE_COMPONENT_KEY","NoopResolverCache","_require6","RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL","withResolverContext","resolverCache","_selector$clientEdgeT","_clientEdgeTraversalPath","_missingClientEdges","_missingLiveResolverFields","_isWithinUnmatchedTypeRefinement","_owner","_seenRecords","_resolverErrors","_fragmentName","_updatedDataIDs","_this$_selector","isDataExpectedToBePresent","implementsInterface","notifyUpdatedSubscribers","_markDataAsMissing","top","readerClientEdge","_maybeReportUnexpectedNull","fieldPath","_record","_this$_missingRequire","fields","_readRequiredField","_readScalar","_readPluralLink","_readLink","_readInlineFragment","_readResolverField","_createFragmentPointer","_createAliasedFragmentSpread","_fieldValue","_readModuleImport","_createInlineDataOrResolverFragmentPointer","alreadyMissingClientEdges","_hasExpectedData","_readFlightField","_readActorChange","_readClientEdge","parentRecordID","getDataForResolverFragment","singularReaderSelector","_this$_resolverCache$","readFromCacheOrEvaluate","_getResolverValue","getResolverValue","resolverResult","resolverError","_getResolverValue2","seenRecord","cachedSnapshot","suspenseID","updatedDataIDs","_addMissingRequiredFields","missing","missingResolverField","_backingField$alias","applicationName","backingFieldData","clientEdgeResolverResponse","validClientEdgeResolverResponse","extractIdFromResponse","assertValidClientEdgeResolverResponse","normalizationInfo","ensureClientRecord","getStoreIDsForPluralClientEdgeResolver","_readLinkedIds","_getStoreIDAndTravers","getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver","storeID","traversalPathSegment","_field$alias2","reactFlightClientResponseRecordID","reactFlightClientResponseRecord","clientResponse","_field$alias3","_field$alias4","_field$alias5","externalRef","fragmentSpread","__fragmentRef","__viewer","_field$alias6","linkedArray","nextIndex","componentKey","fragmentPropName","namedFragmentSpread","fieldData","inlineFragment","parentIsMissingData","parentIsWithinUnmatchedTypeRefinement","fragmentPointers","fragmentSpreadOrFragment","inlineData","parentFragmentName","additional","typeRecord","ownerName","resolverFunction","resolverModule","resolverFunctionArgs","_field$path","individualResponse","errorMessage","RelayRecordState","_records","_step$value","getOutputTypeRecordIDs","_operationName","_references","_traverseLink","_traversePluralLink","_typeName","_typeName2","_traverseModuleImport","_traverseFlightField","_traverseResolverField","_traverseClientEdgeToClientObject","resolverRecord","isOutputType","outputTypeRecordIDs","_dataID2","_dataID3","refineToReactFlightPayloadData","_require7","getHandleStorageKey","_require8","_getDataId","_handleFieldPayloads","_incrementalPlaceholders","_isClientExtension","_isUnmatchedAbstractType","_followupPayloads","_path","_getRecordType","_normalizeField","_typeRecord","_normalizeModuleImport","_normalizeDefer","_normalizeStream","isClientExtension","_normalizeFlightField","_normalizeActorChange","_normalizeResolver","defer","stream","componentReference","componentModuleProvider","operationModuleProvider","_normalizePluralLink","_normalizeLink","reactFlightPayload","reactFlightID","reactFlightClientResponse","__typename","_field$concreteType2","_field$concreteType3","_validateRecordType","_field$concreteType4","_validateConflictingFieldsWithIdenticalId","_validateConflictingLinkedFieldsWithIdenticalId","prevID","hasOverlappingIDs","backup","stale","hasUpdatedRecords","_updateSubscription","hasOverlappingUpdates","nextSnapshot","ENABLE_NOTIFY_SUBSCRIPTION","VARIABLE","LITERAL","OBJECT_VALUE","LIST_VALUE","getArgumentValue","getStableVariableValue","variableName","_value","formatStorageKey","argValues","argName","RELAY_RESOLVER_INVALIDATION_KEY","RELAY_RESOLVER_SNAPSHOT_KEY","RELAY_RESOLVER_ERROR_KEY","RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS","dynamicKey","handleName","filterArgs","_field$fragment2","_field$fragment","getArguments","emptySet","evaluate","_evaluate","addDependencyEdge","to","getRecordSource","_resolverIDToRecordIDs","_recordIDToResolverIDs","_getRecordSource","_isInvalid","_linkedID","evaluationResult","currentRecord","_evaluationResult$sna","fragmentStorageKey","resolverID","seenRecordIds","seenRecordID","answer","visited","recordsToVisit","_this$_recordIDToReso","_this$_resolverIDToRe","anotherRecordID","_markInvalidatedResolverRecord","originalInputs","readerSelector","latestValues","contextStack","readFragment","_context$getDataForRe","isTypeID","sourceField","firstReact","react","event","LIVE_RESOLVER_SUSPENSE_SENTINEL","__LIVE_RESOLVER_SUSPENSE_SENTINEL","suspenseSentinel","maybeOutputTypeRecordIDs","ITERATOR_KEY","Symbol","iterator","_fragmentRef$FRAGMENT","inlineDataFragment","_responses$","_responses$$extension","_responses$extensions","LOCAL_ARGUMENT","OPERATION","ROOT_ARGUMENT","SPLIT_OPERATION","createError","messageFormat","_len","messageParams","_key","taalOpcodes","_len2","_key2","createWarning","_len3","_key3","ENABLE_VARIABLE_CONNECTION_KEY","ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION","ENABLE_FRIENDLY_QUERY_NAME_GQL_URL","ENABLE_DO_NOT_WRAP_LIVE_QUERY","USE_REACT_CACHE_LEGACY_TIMEOUTS","profileHandlersByName","defaultProfiler","profile","stopHandlers","stopHandler","attachProfileHandler","detachProfileHandler","array","element","removeFromArray","_observable","_sinks","events","_events","internTable","digits","initDigitTable","INTERN_PREFIX","ESCAPE_PREFIX","str","limit","escape","internedString","getOwnPropertyNames","property","isFrozen","isEmptyObject","fragmentOwnerIdentifier","sel","_ids","refetchMetadata","_objectSpread4","backwardMetadata","backward","forwardMetadata","forward","_paginationVariables","_pendingOperations$ma","_pendingOperations","_result$pendingOperat","_result$promise","pendingOperationName","op","promiseDisplayName","fragmentPathInResult","requestID","_missingRequiredField","p","valueA","valueB","hasWeakSetDefined","WeakSet","hasWeakMapDefined","canRecycle","prevArray","nextArray","reduce","wasEqual","nextValue","prevObject","nextObject","prevKeys","nextKeys","devToolsHook","__RELAY_DEVTOOLS_HOOK__","registerEnvironment","resolvedPromise","throwNext","stable","_window","_window$performance","isPerformanceNowAvailable","performance","currentTimestamp","startTime","debugCache","userSuppliedVariables","providerFunction","providerResult","cachedResult","tests_only_resetDebugCache","arr","len","arr2","__esModule","arrayLikeToArray","self","ReferenceError","unsupportedIterableToArray","o","allowArrayLike","it","F","_e","TypeError","normalCompletion","didErr","step","_e2","toPropertyKey","enumerable","configurable","writable","_extends","bind","setPrototypeOf","subClass","superClass","iter","ownKeys","t","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","excluded","sourceKeys","_typeof","asyncIterator","u","toStringTag","define","Generator","Context","makeInvokeMethod","tryCatch","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isGeneratorFunction","__proto__","awrap","async","reverse","charAt","rval","delegateYield","_setPrototypeOf","arrayWithoutHoles","iterableToArray","nonIterableSpread","input","hint","prim","toPrimitive","minLen","test"],"sourceRoot":""}