{"version":3,"file":"static/js/8182.d72f09a5.chunk.js","mappings":"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","sources":["components/ModelCardModal.tsx","components/ModelCloneModal.tsx","components/ResourceNumber.tsx","components/__generated__/ModelCardModalFragment.graphql.ts","components/__generated__/ModelCloneModalVFolderFragment.graphql.ts","hooks/usePainKiller.tsx","pages/ModelStoreListPage.tsx","pages/__generated__/ModelStoreListPageQuery.graphql.ts"],"sourcesContent":["import { useBackendAIImageMetaData } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport ModelCloneModal from './ModelCloneModal';\nimport ResourceNumber from './ResourceNumber';\nimport { ModelCardModalFragment$key } from './__generated__/ModelCardModalFragment.graphql';\nimport { BankOutlined, CopyOutlined, FileOutlined } from '@ant-design/icons';\nimport {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Descriptions,\n  Empty,\n  Grid,\n  Row,\n  Tag,\n  Typography,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { Cog, FolderX } from 'lucide-react';\nimport Markdown from 'markdown-to-jsx';\nimport React, { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ModelCardModalProps extends BAIModalProps {\n  modelCardModalFrgmt?: ModelCardModalFragment$key | null;\n  onRequestClose: () => void;\n}\nconst ModelCardModal: React.FC<ModelCardModalProps> = ({\n  modelCardModalFrgmt = null,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [visibleCloneModal, setVisibleCloneModal] = useState(false);\n\n  const [metadata] = useBackendAIImageMetaData();\n  const screen = Grid.useBreakpoint();\n  const model_card = useFragment(\n    graphql`\n      fragment ModelCardModalFragment on ModelCard {\n        id\n        row_id @since(version: \"24.03.7\")\n        name\n        author\n        title\n        version\n        created_at\n        modified_at\n        description\n        task\n        category\n        architecture\n        framework\n        label\n        license\n        readme\n        min_resource\n        architecture\n        framework\n        vfolder {\n          cloneable\n        }\n        vfolder_node @since(version: \"24.09.*\") {\n          ...ModelCloneModalVFolderFragment\n        }\n        vfolder {\n          id\n          name\n          host\n        }\n        error_msg @since(version: \"24.03.7\")\n      }\n    `,\n    modelCardModalFrgmt,\n  );\n\n  const colSize = {\n    xs: { span: 24 },\n    lg: {\n      span:\n        _.compact([model_card?.description, model_card?.readme]).length === 2\n          ? 12\n          : 24,\n    },\n  };\n\n  return (\n    <BAIModal\n      {...props}\n      title={\n        model_card?.title ? (\n          model_card?.title\n        ) : (\n          <div style={{ color: token.colorTextSecondary }}>\n            <FolderX\n              style={{\n                marginRight: token.marginXXS,\n              }}\n            />\n            {model_card?.name}\n          </div>\n        )\n      }\n      centered\n      onCancel={onRequestClose}\n      destroyOnClose\n      width={\n        _.isEmpty(model_card?.readme) || _.isEmpty(model_card?.description)\n          ? 800\n          : screen.xxl\n            ? '75%'\n            : '90%'\n      }\n      footer={[\n        <Button\n          onClick={() => {\n            onRequestClose();\n          }}\n          key=\"close\"\n        >\n          {t('button.Close')}\n        </Button>,\n      ]}\n    >\n      {model_card?.error_msg ? (\n        <Flex direction=\"column\" wrap=\"wrap\" align=\"stretch\" gap={'sm'}>\n          <Alert\n            message={model_card?.error_msg}\n            type=\"error\"\n            showIcon\n            style={{ width: '100%' }}\n          />\n          <Empty\n            style={{ width: '100%' }}\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </Flex>\n      ) : (\n        <>\n          <Flex\n            direction=\"row\"\n            align=\"start\"\n            style={{ marginBottom: token.marginSM }}\n            gap={'xs'}\n            wrap=\"wrap\"\n          >\n            <Flex\n              justify=\"start\"\n              align=\"start\"\n              gap={'xs'}\n              style={{ flex: 1 }}\n              wrap=\"wrap\"\n            >\n              {model_card?.category && (\n                <Tag bordered={false} style={{ marginRight: 0 }}>\n                  {model_card?.category}\n                </Tag>\n              )}\n              {model_card?.task && (\n                <Tag\n                  bordered={false}\n                  color=\"success\"\n                  style={{ marginRight: 0 }}\n                >\n                  {model_card?.task}\n                </Tag>\n              )}\n              {model_card?.label &&\n                _.map(model_card?.label, (label) => (\n                  <Tag\n                    key={label}\n                    bordered={false}\n                    color=\"blue\"\n                    style={{ marginRight: 0 }}\n                  >\n                    {label}\n                  </Tag>\n                ))}\n              {model_card?.license && (\n                <Tag\n                  icon={<BankOutlined />}\n                  bordered={false}\n                  color=\"geekblue\"\n                  style={{ marginRight: 0 }}\n                >\n                  {model_card?.license}\n                </Tag>\n              )}\n            </Flex>\n            <Flex direction=\"row\" justify=\"end\" gap={'sm'}>\n              {/* <Button\n            type=\"primary\"\n            ghost\n            icon={<DownloadOutlined />}\n            size=\"small\"\n            disabled\n          >\n            {t('button.Download')}\n          </Button> */}\n              <Button disabled ghost size=\"small\" icon={<Cog />}>\n                {t('modelStore.FinetuneModel')}\n              </Button>\n              <Button\n                type=\"primary\"\n                ghost\n                icon={<CopyOutlined />}\n                size=\"small\"\n                disabled={!model_card?.vfolder?.cloneable}\n                onClick={() => {\n                  setVisibleCloneModal(true);\n                }}\n              >\n                {t('modelStore.CloneToFolder')}\n              </Button>\n            </Flex>\n          </Flex>\n          <Row gutter={[token.marginLG, token.marginLG]}>\n            <Col {...colSize}>\n              <Flex direction=\"column\" align=\"stretch\" gap={'xs'}>\n                {!!model_card?.description ? (\n                  <>\n                    <Typography.Title level={5} style={{ marginTop: 0 }}>\n                      {t('modelStore.Description')}\n                    </Typography.Title>\n                    <Card\n                      size=\"small\"\n                      style={{\n                        whiteSpace: 'pre-wrap',\n                        minHeight: screen.lg ? 100 : undefined,\n                        height: screen.lg ? 'calc(100vh - 590px)' : undefined,\n                        maxHeight: 'calc(100vh - 590px)',\n                        overflow: 'auto',\n                      }}\n                    >\n                      <Typography.Paragraph\n                        ellipsis={{\n                          rows: screen.lg ? 11 : 3,\n                          expandable: 'collapsible',\n                          symbol: (expanded) => (\n                            <Button size=\"small\" type=\"link\">\n                              {expanded\n                                ? t('button.Collapse')\n                                : t('button.Expand')}\n                            </Button>\n                          ),\n                        }}\n                      >\n                        {model_card?.description}\n                      </Typography.Paragraph>\n                    </Card>\n                  </>\n                ) : null}\n                <Descriptions\n                  style={{ marginTop: token.marginMD }}\n                  // title={t('modelStore.Metadata')}\n                  column={1}\n                  size=\"small\"\n                  bordered\n                  items={[\n                    {\n                      key: 'author',\n                      label: t('modelStore.Author'),\n                      children: model_card?.author,\n                    },\n                    {\n                      key: 'version',\n                      label: t('modelStore.Version'),\n                      children: model_card?.version,\n                    },\n                    {\n                      key: 'architecture',\n                      label: t('environment.Architecture'),\n                      children: model_card?.architecture,\n                    },\n                    {\n                      key: 'frameworks',\n                      label: t('modelStore.Framework'),\n                      children: (\n                        <Flex direction=\"row\" gap={'xs'}>\n                          {_.map(\n                            _.filter(\n                              _.castArray(model_card?.framework),\n                              (v) => !_.isEmpty(v),\n                            ),\n                            (framework, index) => {\n                              const targetImageKey = framework?.replace(\n                                /\\s*\\d+\\s*$/,\n                                '',\n                              );\n                              const imageInfo = _.find(\n                                metadata?.imageInfo,\n                                (imageInfo) =>\n                                  imageInfo?.name === targetImageKey,\n                              );\n                              const uniqueKey = `${framework}-${index}`;\n                              return imageInfo?.icon ? (\n                                <Flex gap={'xxs'} key={uniqueKey}>\n                                  <img\n                                    style={{\n                                      width: '1em',\n                                      height: '1em',\n                                    }}\n                                    src={'resources/icons/' + imageInfo?.icon}\n                                    alt={framework || ''}\n                                  />\n                                  {framework}\n                                </Flex>\n                              ) : (\n                                <Typography.Text key={uniqueKey}>\n                                  {framework}\n                                </Typography.Text>\n                              );\n                            },\n                          )}\n                        </Flex>\n                      ),\n                    },\n                    {\n                      key: 'created',\n                      label: t('modelStore.Created'),\n                      children: dayjs(model_card?.created_at).format('lll'),\n                    },\n                    {\n                      key: 'last_modified',\n                      label: t('modelStore.LastModified'),\n                      children: dayjs(model_card?.modified_at).format('lll'),\n                    },\n                    {\n                      key: 'min_resource',\n                      label: t('modelStore.MinResource'),\n                      children: (\n                        <Flex gap=\"xs\">\n                          {model_card?.min_resource &&\n                            _.map(\n                              JSON.parse(model_card?.min_resource),\n                              (value, type) => {\n                                return (\n                                  <ResourceNumber\n                                    key={type}\n                                    // @ts-ignore\n                                    type={type}\n                                    value={_.toString(value)}\n                                  />\n                                );\n                              },\n                            )}\n                        </Flex>\n                      ),\n                    },\n                  ]}\n                />\n              </Flex>\n            </Col>\n            {!!model_card?.readme ? (\n              <Col {...colSize}>\n                <Card\n                  size=\"small\"\n                  title={\n                    <Flex direction=\"row\" gap={'xs'}>\n                      <FileOutlined />\n                      README.md\n                    </Flex>\n                  }\n                  styles={{\n                    body: {\n                      padding: token.paddingLG,\n                      overflow: 'auto',\n                      height: screen.lg ? 'calc(100vh - 287px)' : undefined,\n                      minHeight: 200,\n                    },\n                  }}\n                >\n                  <Markdown>{model_card?.readme || ''}</Markdown>\n                </Card>\n              </Col>\n            ) : null}\n          </Row>\n        </>\n      )}\n      <Suspense>\n        <ModelCloneModal\n          vfolderNode={model_card?.vfolder_node || null}\n          deprecatedVFolderInfo={{\n            id: model_card?.vfolder?.id || '',\n            host: model_card?.vfolder?.host || '',\n            name: model_card?.vfolder?.name || '',\n          }}\n          title={t('modelStore.CloneAsFolder')}\n          open={visibleCloneModal}\n          onOk={() => {\n            setVisibleCloneModal(false);\n          }}\n          onCancel={() => {\n            setVisibleCloneModal(false);\n          }}\n        />\n      </Suspense>\n    </BAIModal>\n  );\n};\n\nexport default ModelCardModal;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useSetBAINotification } from '../hooks/useBAINotification';\nimport { usePainKiller } from '../hooks/usePainKiller';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport StorageSelect from './StorageSelect';\nimport { ModelCloneModalVFolderFragment$key } from './__generated__/ModelCloneModalVFolderFragment.graphql';\nimport {\n  Alert,\n  Form,\n  FormInstance,\n  FormItemProps,\n  Input,\n  Select,\n  Switch,\n  message,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ModelCloneModalProps extends BAIModalProps {\n  vfolderNode: ModelCloneModalVFolderFragment$key | null;\n  deprecatedVFolderInfo?: {\n    id: string;\n    name: string;\n    host: string;\n  };\n}\nconst ModelCloneModal: React.FC<ModelCloneModalProps> = ({\n  // sourceFolderName,\n  // sourceFolderHost,\n  vfolderNode,\n  deprecatedVFolderInfo,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const vfolder =\n    useFragment(\n      graphql`\n        fragment ModelCloneModalVFolderFragment on VirtualFolderNode {\n          id\n          name\n          host\n        }\n      `,\n      vfolderNode,\n    ) || deprecatedVFolderInfo;\n\n  const formRef = useRef<\n    FormInstance<{\n      target_name: string;\n      target_host: string;\n      permission: string;\n      // type: string;\n      // project: string;\n      usage_mode: string;\n    }>\n  >(null);\n  const painKiller = usePainKiller();\n  const { upsertNotification } = useSetBAINotification();\n\n  const [extraNameError, setExtraNameError] = useState<\n    Pick<FormItemProps, 'validateStatus' | 'help'>\n  >({});\n\n  const mutationToClone = useTanMutation<\n    {\n      bgtask_id: string;\n      id: string;\n    },\n    { type?: string; title?: string; message?: string },\n    {\n      input: any;\n      name: string;\n    }\n  >({\n    // @ts-ignore\n    mutationFn: ({ input, name }: { input: any; name: string }) => {\n      return baiClient.vfolder.clone(input, name);\n    },\n  });\n\n  return (\n    <BAIModal\n      destroyOnClose\n      {...props}\n      okText={t('button.Clone')}\n      confirmLoading={mutationToClone.isPending}\n      onOk={(e) => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            if (vfolder?.id && vfolder.host) {\n              mutationToClone.mutate(\n                {\n                  input: values,\n                  name: vfolder.id,\n                },\n                {\n                  onSuccess(data) {\n                    upsertNotification({\n                      key: 'modelStore.clone.' + vfolder.id,\n                      open: true,\n                      backgroundTask: {\n                        status: 'pending',\n                        percent: 0,\n                        taskId: data.bgtask_id,\n                        statusDescriptions: {\n                          pending: t('data.folders.FolderClonePending'),\n                          resolved: t('data.folders.FolderCloned'),\n                          rejected: t('data.folders.FolderCloneFailed'),\n                        },\n                      },\n                      message: values.target_name,\n                      toText: t('data.folders.OpenAFolder'),\n                      to: `/data?tab=model&folder=${data.id}`,\n                    });\n                    props.onOk?.(e);\n                  },\n                  onError(error) {\n                    if (\n                      error.message?.includes(\n                        'The virtual folder already exists with the same name',\n                      )\n                    ) {\n                      setExtraNameError({\n                        validateStatus: 'error',\n                        help: t('modelStore.FolderAlreadyExists'),\n                      });\n                    } else {\n                      const messageStr = painKiller.relieve(\n                        error?.message || '',\n                      );\n                      message.error({\n                        content: messageStr,\n                      });\n                    }\n                  },\n                },\n              );\n            } else {\n            }\n          })\n          .catch(() => {});\n      }}\n    >\n      <Flex direction=\"column\" align=\"stretch\" gap=\"sm\">\n        <Alert showIcon type=\"info\" message={t('modelStore.CloneInfo')} />\n        <Form\n          ref={formRef}\n          layout=\"vertical\"\n          requiredMark=\"optional\"\n          initialValues={{\n            permission: 'rw',\n            // project: currentProject.id,\n            // type: 'user',\n            usage_mode: 'model',\n            target_name: vfolder?.name + '_1',\n            target_host: vfolder?.host,\n          }}\n          scrollToFirstError\n        >\n          {/*  */}\n          <Form.Item label={t('data.ExistingFolderName')} required>\n            <Input value={vfolder?.name || ''} disabled />\n          </Form.Item>\n          <Form.Item\n            name=\"target_name\"\n            label={t('data.NewFolderName')}\n            rules={[\n              {\n                required: true,\n              },\n              {\n                pattern: /^[a-zA-Z0-9._-]*$/,\n                message: t('data.AllowsLettersNumbersAnd-_Dot'),\n              },\n            ]}\n            {...extraNameError}\n          >\n            <Input\n              autoComplete=\"off\"\n              onChange={() => {\n                setExtraNameError({});\n              }}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"target_host\"\n            label={t('data.Host')}\n            tooltip={t('data.CloningIsOnlyPossibleSameHost')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <StorageSelect disabled />\n          </Form.Item>\n          {/* <Form.Item\n          name=\"type\"\n          label={t('data.Type')}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            options={_.map(allowed_vfolder_types, (type) => {\n              return {\n                label:\n                  {\n                    user: t('data.User'),\n                    group: t('data.Project'),\n                  }[type] || type,\n                value: type,\n              };\n            })}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, next) => prev.type !== next.type}\n        >\n          {() => {\n            return (\n              <Form.Item\n                name=\"project\"\n                label={t('data.Project')}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <ProjectSelector\n                  domain={currentDomain}\n                  onSelectProject={() => {}}\n                  autoSelectDefault\n                  disabled={form.getFieldValue('type') !== 'group'}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item> */}\n\n          {/* _vfolderInnatePermissionSupport */}\n          {baiClient.isAPIVersionCompatibleWith('v4.20191215') && (\n            <Form.Item\n              // label={t('data.UsageMode')}\n              name={'usage_mode'}\n              hidden\n            >\n              <Input />\n              {/* <Select\n              options={[\n                {\n                  label: 'General',\n                  value: 'general',\n                },\n                ...(baiClient.supports('inference-workload')\n                  ? [\n                      {\n                        label: 'Model',\n                        value: 'model',\n                      },\n                    ]\n                  : []),\n              ]}\n            /> */}\n            </Form.Item>\n          )}\n          <Form.Item\n            label={t('data.Permission')}\n            name={'permission'}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select\n              options={[\n                {\n                  label: 'Read-Write',\n                  value: 'rw',\n                },\n                {\n                  label: 'Read-Only',\n                  value: 'ro',\n                },\n                {\n                  label: 'Delete',\n                  value: 'wd',\n                },\n              ]}\n            />\n          </Form.Item>\n          <Form.Item hidden name=\"cloneable\" valuePropName=\"checked\">\n            <Switch checked={false} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelCloneModal;\n","import { convertBinarySizeUnit } from '../helper';\nimport {\n  BaseResourceSlotName,\n  KnownAcceleratorResourceSlotName,\n  ResourceSlotName,\n  useResourceSlotsDetails,\n} from '../hooks/backendai';\nimport { useCurrentResourceGroupValue } from '../hooks/useCurrentProject';\nimport Flex from './Flex';\nimport { Tooltip, Typography, theme } from 'antd';\nimport _ from 'lodash';\nimport { MicrochipIcon } from 'lucide-react';\nimport React, { ReactElement } from 'react';\n\nexport type ResourceOpts = {\n  shmem?: number;\n};\ninterface ResourceNumberProps {\n  type: ResourceSlotName | string;\n  extra?: ReactElement;\n  opts?: ResourceOpts;\n  value: string;\n  hideTooltip?: boolean;\n  max?: string;\n}\n\ntype ResourceTypeInfo<V> = {\n  [key in KnownAcceleratorResourceSlotName]: V;\n} & {\n  [key in BaseResourceSlotName]: V;\n};\nconst ResourceNumber: React.FC<ResourceNumberProps> = ({\n  type,\n  value: amount,\n  extra,\n  opts,\n  hideTooltip = false,\n  max,\n}) => {\n  const { token } = theme.useToken();\n  const currentGroup = useCurrentResourceGroupValue();\n  const { mergedResourceSlots } = useResourceSlotsDetails(\n    currentGroup || undefined,\n  );\n\n  const formatAmount = (amount: string) => {\n    return mergedResourceSlots?.[type]?.number_format.binary\n      ? Number(\n          convertBinarySizeUnit(amount, 'g', 3, true)?.numberFixed,\n        ).toString()\n      : (mergedResourceSlots?.[type]?.number_format.round_length || 0) > 0\n        ? parseFloat(amount).toFixed(2)\n        : amount;\n  };\n\n  return (\n    <Flex direction=\"row\" gap=\"xxs\">\n      {mergedResourceSlots?.[type] ? (\n        <ResourceTypeIcon type={type} showTooltip={!hideTooltip} />\n      ) : (\n        type\n      )}\n\n      <Typography.Text>\n        {formatAmount(amount)}\n        {_.isUndefined(max)\n          ? null\n          : max === 'Infinity'\n            ? '~∞'\n            : `~${formatAmount(max)}`}\n      </Typography.Text>\n      <Typography.Text type=\"secondary\">\n        {mergedResourceSlots?.[type]?.display_unit || ''}\n      </Typography.Text>\n      {type === 'mem' && opts?.shmem && opts?.shmem > 0 ? (\n        <Typography.Text\n          type=\"secondary\"\n          style={{ fontSize: token.fontSizeSM }}\n        >\n          (SHM:{' '}\n          {convertBinarySizeUnit(opts.shmem + 'b', 'g', 2, true)?.numberFixed}\n          GiB)\n        </Typography.Text>\n      ) : null}\n      {extra}\n    </Flex>\n  );\n};\n\nconst MWCIconWrap: React.FC<{ size?: number; children: string }> = ({\n  size = 16,\n  children,\n}) => {\n  return (\n    // @ts-ignore\n    <mwc-icon\n      style={{\n        '--mdc-icon-size': `${size + 2}px`,\n        width: size,\n        height: size,\n      }}\n    >\n      {children}\n      {/* @ts-ignore */}\n    </mwc-icon>\n  );\n};\ninterface AccTypeIconProps\n  extends Omit<React.ImgHTMLAttributes<HTMLImageElement>, 'src'> {\n  type: ResourceSlotName | string;\n  showIcon?: boolean;\n  showUnit?: boolean;\n  showTooltip?: boolean;\n  size?: number;\n}\nexport const ResourceTypeIcon: React.FC<AccTypeIconProps> = ({\n  type,\n  size = 16,\n  showIcon = true,\n  showUnit = true,\n  showTooltip = true,\n  ...props\n}) => {\n  const resourceTypeIconSrcMap: ResourceTypeInfo<ReactElement | string> = {\n    cpu: <MWCIconWrap size={size}>developer_board</MWCIconWrap>,\n    mem: <MWCIconWrap size={size}>memory</MWCIconWrap>,\n    'cuda.device': '/resources/icons/file_type_cuda.svg',\n    'cuda.shares': '/resources/icons/file_type_cuda.svg',\n    'rocm.device': '/resources/icons/rocm.svg',\n    'tpu.device': <MWCIconWrap size={size}>view_module</MWCIconWrap>,\n    'ipu.device': <MWCIconWrap size={size}>view_module</MWCIconWrap>,\n    'atom.device': '/resources/icons/rebel.svg',\n    'atom-plus.device': '/resources/icons/rebel.svg',\n    'gaudi2.device': '/resources/icons/gaudi.svg',\n    'warboy.device': '/resources/icons/furiosa.svg',\n    'rngd.device': '/resources/icons/furiosa.svg',\n    'hyperaccel-lpu.device': '/resources/icons/npu_generic.svg',\n  };\n\n  const targetIcon = resourceTypeIconSrcMap[\n    type as KnownAcceleratorResourceSlotName\n  ] ?? <MicrochipIcon />;\n\n  const { mergedResourceSlots } = useResourceSlotsDetails();\n\n  const content =\n    typeof targetIcon === 'string' ? (\n      <img\n        {...props}\n        style={{\n          height: size,\n          alignSelf: 'center',\n          ...(props.style || {}),\n        }}\n        // @ts-ignore\n        src={resourceTypeIconSrcMap[type] || ''}\n        alt={type}\n      />\n    ) : (\n      <Flex style={{ width: 16, height: 16 }}>{targetIcon || type}</Flex>\n    );\n\n  return showTooltip ? (\n    <Tooltip title={mergedResourceSlots[type]?.description || type}>\n      {content}\n    </Tooltip>\n  ) : (\n    <Flex style={{ pointerEvents: 'none' }}>{content}</Flex>\n  );\n};\n\nexport default React.memo(ResourceNumber);\n","/**\n * @generated SignedSource<<22448796f65c32134d6b9df636bcf2ee>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelCardModalFragment$data = {\n  readonly architecture: string | null | undefined;\n  readonly author: string | null | undefined;\n  readonly category: string | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly description: string | null | undefined;\n  readonly error_msg: string | null | undefined;\n  readonly framework: ReadonlyArray<string | null | undefined> | null | undefined;\n  readonly id: string;\n  readonly label: ReadonlyArray<string | null | undefined> | null | undefined;\n  readonly license: string | null | undefined;\n  readonly min_resource: string | null | undefined;\n  readonly modified_at: string | null | undefined;\n  readonly name: string | null | undefined;\n  readonly readme: string | null | undefined;\n  readonly row_id: string | null | undefined;\n  readonly task: string | null | undefined;\n  readonly title: string | null | undefined;\n  readonly version: string | null | undefined;\n  readonly vfolder: {\n    readonly cloneable: boolean | null | undefined;\n    readonly host: string | null | undefined;\n    readonly id: string | null | undefined;\n    readonly name: string | null | undefined;\n  } | null | undefined;\n  readonly vfolder_node: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCloneModalVFolderFragment\">;\n  } | null | undefined;\n  readonly \" $fragmentType\": \"ModelCardModalFragment\";\n};\nexport type ModelCardModalFragment$key = {\n  readonly \" $data\"?: ModelCardModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCardModalFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n};\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelCardModalFragment\",\n  \"selections\": [\n    (v0/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"row_id\",\n      \"storageKey\": null\n    },\n    (v1/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"author\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"title\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"version\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"modified_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"description\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"task\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"category\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"architecture\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"framework\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"label\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"license\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"readme\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"min_resource\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"VirtualFolder\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"vfolder\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"cloneable\",\n          \"storageKey\": null\n        },\n        (v0/*: any*/),\n        (v1/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"host\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"VirtualFolderNode\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"vfolder_node\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"args\": null,\n          \"kind\": \"FragmentSpread\",\n          \"name\": \"ModelCloneModalVFolderFragment\"\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"error_msg\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ModelCard\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"2a7ce0a135e9f76b9639c02f17809626\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0b6f300a3325beb478089229b3f8969c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelCloneModalVFolderFragment$data = {\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly \" $fragmentType\": \"ModelCloneModalVFolderFragment\";\n};\nexport type ModelCloneModalVFolderFragment$key = {\n  readonly \" $data\"?: ModelCloneModalVFolderFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCloneModalVFolderFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelCloneModalVFolderFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"9e8196f7a6fe11fb62c373124ffc450a\";\n\nexport default node;\n","import { useTranslation } from 'react-i18next';\n\nconst errorMessageTable: {\n  [key: string]: string;\n} = {\n  \"Cannot read property 'map' of null\": 'error.APINotSupported',\n  'TypeError: NetworkError when attempting to fetch resource.':\n    'error.NetworkConnectionFailed', //_t('error.NetworkConnectionFailed')\n  // Login\n  'Login failed. Check login information.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'User credential mismatch.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'Authentication failed. Check information and manager status.':\n    'error.AuthenticationFailed', //_t('error.AuthenticationFailed')\n  'Too many failed login attempts': 'error.TooManyLoginFailures', //_t('error.TooManyLoginFailures')\n  // virtual folders\n  'server responded failure: 400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  '400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - One of your accessible vfolders already has the name you requested.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - You cannot create more vfolders.':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (You cannot create more vfolders.)':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Cannot change the options of a vfolder that is not owned by myself.':\n    'error.CannotChangeVirtualFolderOption', //_t('error.CannotChangeVirtualFolderOption')\n  'server responded failure: 403 Forbidden - Cannot share private dot-prefixed vfolders.':\n    'error.CannotSharePrivateAutomountFolder', //_t('error.CannotSharePrivateAutomountFolder')\n  'server responded failure: 404 Not Found - No such vfolder invitation.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  'server responded failure: 404 Not Found - No such user.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  // Resource\n  'server responded failure: 412 Precondition Failed - You have reached your resource limit.':\n    'error.ReachedResourceLimit', //_t('error.ReachedResourceLimit')\n  // User\n  \"Cannot read property 'split' of undefined\": 'error.UserHasNoGroup', //_t('error.UserHasNoGroup')\n};\nconst regexTable: {\n  [key: string]: string;\n} = {\n  '\\\\w*not found matched token with email\\\\w*': 'error.InvalidSignupToken', //_t('error.InvalidSignupToken')\n  '\\\\w*Access key not found\\\\w*': 'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  '\\\\w*401 Unauthorized - Credential/signature mismatch\\\\w*':\n    'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  'integrity error: duplicate key value violates unique constraint \"pk_resource_presets\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ResourcePolicyAlreadyExist', //_t('error.ResourcePolicyAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"pk_scaling_groups\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ScalingGroupAlreadyExist', //_t('error.ScalingGroupAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"uq_users_username\"[\\\\n]DETAIL:  Key \\\\(username\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.UserNameAlreadyExist', //_t('error.UserNameAlreadyExist')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (Your resource quota is exceeded. (cpu=24 mem=512g cuda.shares=80))':\n    'error.ResourceLimitExceed', //_t('error.ResourceLimitExceed')\n  '\\\\w*Key \\\\(name\\\\)=\\\\(.+\\\\) is still referenced from table \"keypairs\"\\\\.\\\\w*':\n    'error.ResourcePolicyStillReferenced', //_t('error.ResourcePolicyStillReferenced')\n  'Your resource request is smaller than the minimum required by the image. (\\\\w*)':\n    'error.SmallerResourceThenImageRequires', //_t('error.SmallerResourceThenImageRequires')\n};\n\nexport const usePainKiller = () => {\n  const { t } = useTranslation();\n  const relieve = (msg: string) => {\n    if (typeof msg === 'undefined') {\n      if (\n        // @ts-ignore\n        globalThis.backendaiclient === undefined ||\n        // @ts-ignore\n        globalThis.backendaiclient === null\n      ) {\n        return '_DISCONNECTED';\n      } else {\n        return 'Problem occurred.';\n      }\n    }\n    // @ts-ignore\n    if (globalThis.backendaiwebui.debug === true) {\n      return msg;\n    }\n    if ({}.hasOwnProperty.call(errorMessageTable, msg)) {\n      return t(errorMessageTable[msg]);\n    } else {\n      for (const regex of Object.keys(regexTable)) {\n        if (RegExp(regex).test(msg)) {\n          return t(regexTable[regex]);\n        }\n      }\n      return msg; // Bypass message. It will log on log panel\n    }\n  };\n  return { relieve };\n};\n","import Flex from '../components/Flex';\nimport ModelCardModal from '../components/ModelCardModal';\nimport TextHighlighter from '../components/TextHighlighter';\nimport { ModelCardModalFragment$key } from '../components/__generated__/ModelCardModalFragment.graphql';\nimport { useUpdatableState } from '../hooks';\nimport { ModelStoreListPageQuery } from './__generated__/ModelStoreListPageQuery.graphql';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\nimport {\n  Alert,\n  Button,\n  Card,\n  Input,\n  List,\n  Select,\n  Tag,\n  theme,\n  Typography,\n} from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { FolderX } from 'lucide-react';\nimport React, { useMemo, useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst useStyles = createStyles(({ css, token }) => {\n  return {\n    cardList: css`\n      .ant-col {\n        height: calc(100% - ${token.marginMD}px);\n      }\n    `,\n  };\n});\n\nconst ModelStoreListPage: React.FC = () => {\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [search, setSearch] = useState<string>();\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [selectedTasks, setSelectedTasks] = useState<string[]>([]);\n  const [selectedLabels, setSelectedLabels] = useState<string[]>([]);\n\n  const { styles } = useStyles();\n\n  const [currentModelInfo, setCurrentModelInfo] =\n    useState<ModelCardModalFragment$key | null>();\n\n  const [isPendingRefetching, startRefetchingTransition] = useTransition();\n\n  const { model_cards } = useLazyLoadQuery<ModelStoreListPageQuery>(\n    graphql`\n      query ModelStoreListPageQuery($filter: String) {\n        # TODO: Implement pagination for model_cards\n        model_cards(filter: $filter, first: 200) {\n          edges {\n            cursor\n            node {\n              id\n              row_id @since(version: \"24.03.7\")\n              name\n              author\n              title\n              description\n              task\n              category\n              label\n              license\n              min_resource\n              error_msg @since(version: \"24.03.7\")\n              ...ModelCardModalFragment\n            }\n          }\n          count\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n        }\n      }\n    `,\n    {\n      filter: undefined,\n    },\n    {\n      fetchPolicy: 'network-only',\n      fetchKey,\n    },\n  );\n\n  // const filterInfo = _.map\n\n  const fieldsValues = useMemo(() => {\n    const result: {\n      task: string[];\n      category: string[];\n      label: string[];\n    } = { task: [], category: [], label: [] };\n    const fields = ['task', 'category', 'label'] as const;\n    // Initialize result object with empty arrays for each field\n    fields.forEach((field) => (result[field] = []));\n\n    // Traverse the JSON object\n    model_cards?.edges.forEach((edge) => {\n      fields.forEach((field) => {\n        // Check if the field exists in the node\n        if (edge?.node?.[field]) {\n          _.map(_.castArray(edge.node[field]), (newValue) => {\n            if (_.isString(newValue) && !result[field].includes(newValue)) {\n              result[field].push(newValue);\n            }\n          });\n        }\n      });\n    });\n    return result;\n  }, [model_cards?.edges]);\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      justify=\"center\"\n      gap=\"lg\"\n      style={{ padding: token.paddingLG }}\n    >\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        className=\"filterWrap\"\n        gap={'xs'}\n      >\n        <Flex direction=\"row\" gap={'md'}>\n          <Input\n            prefix={<SearchOutlined />}\n            placeholder={t('modelStore.SearchModels')}\n            allowClear\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n            autoComplete=\"off\"\n          />\n          <Button\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startRefetchingTransition(() => {\n                updateFetchKey();\n              });\n            }}\n            loading={isPendingRefetching}\n          />\n        </Flex>\n        <Flex direction=\"row\" gap={'md'} wrap=\"wrap\">\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Category')}\n            options={_.map(fieldsValues.category, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedCategories}\n            onChange={(value) => {\n              setSelectedCategories(value as string[]);\n            }}\n            allowClear\n          />\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Task')}\n            options={_.map(fieldsValues.task, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedTasks}\n            onChange={(value) => {\n              setSelectedTasks(value as string[]);\n            }}\n            allowClear\n          />\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Label')}\n            options={_.map(fieldsValues.label, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedLabels}\n            onChange={(value) => {\n              setSelectedLabels(value as string[]);\n            }}\n            allowClear\n          />\n        </Flex>\n      </Flex>\n      <List\n        className={styles.cardList}\n        grid={{ gutter: 16, xs: 1, sm: 2, md: 2, lg: 3, xl: 4, xxl: 5 }}\n        dataSource={model_cards?.edges\n          ?.map((edge) => edge?.node)\n          .filter((info) => {\n            let passSearchFilter = true;\n            if (search) {\n              const searchLower = search.toLowerCase();\n              passSearchFilter =\n                info?.description?.toLowerCase().includes(searchLower) ||\n                info?.title?.toLowerCase().includes(searchLower) ||\n                info?.task?.toLowerCase().includes(searchLower) ||\n                info?.category?.toLowerCase().includes(searchLower) ||\n                info?.label?.some((label) =>\n                  label?.toLowerCase().includes(searchLower),\n                ) ||\n                false;\n            }\n\n            return (\n              (_.isEmpty(selectedCategories) ||\n                _.includes(selectedCategories, info?.category)) &&\n              (_.isEmpty(selectedLabels) ||\n                _.intersection(selectedLabels, info?.label).length > 0) &&\n              (_.isEmpty(selectedTasks) ||\n                _.includes(selectedTasks, info?.task)) &&\n              passSearchFilter\n            );\n          })}\n        renderItem={(item) => (\n          <List.Item\n            onClick={() => {\n              setCurrentModelInfo(item);\n            }}\n            style={{\n              height: '100%',\n            }}\n          >\n            <Card\n              hoverable\n              title={\n                item?.title ? (\n                  <TextHighlighter keyword={search}>\n                    {item?.title}\n                  </TextHighlighter>\n                ) : (\n                  <Typography.Text type=\"secondary\">\n                    <FolderX\n                      style={{\n                        marginLeft: token.marginXXS,\n                        marginRight: token.marginXXS,\n                        fontSize: token.fontSize,\n                      }}\n                    />\n                    {item?.name}\n                  </Typography.Text>\n                )\n              }\n              style={{\n                height: '100%',\n              }}\n              size=\"small\"\n            >\n              <Flex direction=\"row\" wrap=\"wrap\" gap={'xs'}>\n                {item?.description && (\n                  <Typography.Paragraph\n                    ellipsis={{ rows: 3, expandable: false }}\n                  >\n                    <TextHighlighter keyword={search}>\n                      {item?.description}\n                    </TextHighlighter>\n                  </Typography.Paragraph>\n                )}\n                {item?.category && (\n                  <Tag bordered={false}>\n                    <TextHighlighter keyword={search}>\n                      {item?.category}\n                    </TextHighlighter>\n                  </Tag>\n                )}\n                {item?.task && (\n                  <Tag bordered={false} color=\"success\">\n                    <TextHighlighter keyword={search}>\n                      {item?.task}\n                    </TextHighlighter>\n                  </Tag>\n                )}\n                {item?.label &&\n                  _.map(item?.label, (label) => (\n                    <Tag key={label} bordered={false} color=\"blue\">\n                      <TextHighlighter keyword={search}>\n                        {label}\n                      </TextHighlighter>\n                    </Tag>\n                  ))}\n                {item?.error_msg && (\n                  <Alert\n                    style={{ width: '100%' }}\n                    message={\n                      <Typography.Paragraph\n                        ellipsis={{ rows: 6 }}\n                        style={{ marginBottom: 0 }}\n                      >\n                        {item.error_msg}\n                      </Typography.Paragraph>\n                    }\n                    type=\"error\"\n                    showIcon\n                  />\n                )}\n              </Flex>\n            </Card>\n          </List.Item>\n        )}\n      />\n      <ModelCardModal\n        modelCardModalFrgmt={currentModelInfo}\n        open={!!currentModelInfo}\n        onRequestClose={() => {\n          setCurrentModelInfo(null);\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default ModelStoreListPage;\n","/**\n * @generated SignedSource<<47359b8ae0e00bf802e5e9dd98fc39a8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelStoreListPageQuery$variables = {\n  filter?: string | null | undefined;\n};\nexport type ModelStoreListPageQuery$data = {\n  readonly model_cards: {\n    readonly count: number | null | undefined;\n    readonly edges: ReadonlyArray<{\n      readonly cursor: string;\n      readonly node: {\n        readonly author: string | null | undefined;\n        readonly category: string | null | undefined;\n        readonly description: string | null | undefined;\n        readonly error_msg: string | null | undefined;\n        readonly id: string;\n        readonly label: ReadonlyArray<string | null | undefined> | null | undefined;\n        readonly license: string | null | undefined;\n        readonly min_resource: string | null | undefined;\n        readonly name: string | null | undefined;\n        readonly row_id: string | null | undefined;\n        readonly task: string | null | undefined;\n        readonly title: string | null | undefined;\n        readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCardModalFragment\">;\n      } | null | undefined;\n    } | null | undefined>;\n    readonly pageInfo: {\n      readonly hasNextPage: boolean;\n      readonly hasPreviousPage: boolean;\n    };\n  } | null | undefined;\n};\nexport type ModelStoreListPageQuery = {\n  response: ModelStoreListPageQuery$data;\n  variables: ModelStoreListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"filter\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 200\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"cursor\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"row_id\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"author\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"task\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"category\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"label\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"license\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"min_resource\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"error_msg\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"count\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PageInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"pageInfo\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hasNextPage\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hasPreviousPage\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"host\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ModelStoreListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ModelCardConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"model_cards\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ModelCardEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ModelCard\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  (v7/*: any*/),\n                  (v8/*: any*/),\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  (v12/*: any*/),\n                  (v13/*: any*/),\n                  (v14/*: any*/),\n                  {\n                    \"args\": null,\n                    \"kind\": \"FragmentSpread\",\n                    \"name\": \"ModelCardModalFragment\"\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v15/*: any*/),\n          (v16/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ModelStoreListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ModelCardConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"model_cards\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ModelCardEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ModelCard\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  (v7/*: any*/),\n                  (v8/*: any*/),\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  (v12/*: any*/),\n                  (v13/*: any*/),\n                  (v14/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"version\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"created_at\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"modified_at\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"architecture\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"framework\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"readme\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"VirtualFolder\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"vfolder\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cloneable\",\n                        \"storageKey\": null\n                      },\n                      (v3/*: any*/),\n                      (v5/*: any*/),\n                      (v17/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"VirtualFolderNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"vfolder_node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v5/*: any*/),\n                      (v17/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v15/*: any*/),\n          (v16/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"f32e3c3523f7c030fc079da7db1677a9\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ModelStoreListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ModelStoreListPageQuery(\\n  $filter: String\\n) {\\n  model_cards(filter: $filter, first: 200) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        row_id @since(version: \\\"24.03.7\\\")\\n        name\\n        author\\n        title\\n        description\\n        task\\n        category\\n        label\\n        license\\n        min_resource\\n        error_msg @since(version: \\\"24.03.7\\\")\\n        ...ModelCardModalFragment\\n      }\\n    }\\n    count\\n    pageInfo {\\n      hasNextPage\\n      hasPreviousPage\\n    }\\n  }\\n}\\n\\nfragment ModelCardModalFragment on ModelCard {\\n  id\\n  row_id @since(version: \\\"24.03.7\\\")\\n  name\\n  author\\n  title\\n  version\\n  created_at\\n  modified_at\\n  description\\n  task\\n  category\\n  architecture\\n  framework\\n  label\\n  license\\n  readme\\n  min_resource\\n  vfolder {\\n    cloneable\\n    id\\n    name\\n    host\\n  }\\n  vfolder_node @since(version: \\\"24.09.*\\\") {\\n    ...ModelCloneModalVFolderFragment\\n    id\\n  }\\n  error_msg @since(version: \\\"24.03.7\\\")\\n}\\n\\nfragment ModelCloneModalVFolderFragment on VirtualFolderNode {\\n  id\\n  name\\n  host\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"fa480b58b4b1de1541e2abf3af73b1ae\";\n\nexport default node;\n"],"names":["_ref","_model_card$vfolder","_model_card$vfolder2","_model_card$vfolder3","_model_card$vfolder4","modelCardModalFrgmt","onRequestClose","props","t","useTranslation","token","theme","useToken","visibleCloneModal","setVisibleCloneModal","useState","metadata","useBackendAIImageMetaData","screen","Grid","useBreakpoint","model_card","useFragment","_ModelCardModalFragment","require","colSize","xs","span","lg","_","description","readme","length","_jsxs","BAIModal","title","style","color","colorTextSecondary","children","_jsx","FolderX","marginRight","marginXXS","name","centered","onCancel","destroyOnClose","width","xxl","footer","Button","onClick","error_msg","Flex","direction","wrap","align","gap","Alert","message","type","showIcon","Empty","image","PRESENTED_IMAGE_SIMPLE","_Fragment","marginBottom","marginSM","justify","flex","category","Tag","bordered","task","label","license","icon","BankOutlined","disabled","ghost","size","Cog","CopyOutlined","vfolder","cloneable","Row","gutter","marginLG","Col","Typography","Title","level","marginTop","Card","whiteSpace","minHeight","undefined","height","maxHeight","overflow","Paragraph","ellipsis","rows","expandable","symbol","expanded","Descriptions","marginMD","column","items","key","author","version","architecture","framework","v","index","targetImageKey","replace","imageInfo","uniqueKey","src","alt","Text","dayjs","created_at","format","modified_at","min_resource","JSON","parse","value","ResourceNumber","FileOutlined","styles","body","padding","paddingLG","Markdown","Suspense","ModelCloneModal","vfolderNode","vfolder_node","deprecatedVFolderInfo","id","host","open","onOk","baiClient","useSuspendedBackendaiClient","_ModelCloneModalVFolderFragment","formRef","useRef","painKiller","usePainKiller","upsertNotification","useSetBAINotification","extraNameError","setExtraNameError","mutationToClone","useTanMutation","mutationFn","_ref2","input","clone","okText","confirmLoading","isPending","e","_formRef$current","current","validateFields","then","values","mutate","onSuccess","data","_props$onOk","backgroundTask","status","percent","taskId","bgtask_id","statusDescriptions","pending","resolved","rejected","target_name","toText","to","call","onError","error","_error$message","includes","validateStatus","help","messageStr","relieve","content","catch","Form","ref","layout","requiredMark","initialValues","permission","usage_mode","target_host","scrollToFirstError","Item","required","Input","rules","pattern","autoComplete","onChange","tooltip","StorageSelect","isAPIVersionCompatibleWith","hidden","Select","options","valuePropName","Switch","checked","_mergedResourceSlots$3","_convertBinarySizeUni2","amount","extra","opts","hideTooltip","max","currentGroup","useCurrentResourceGroupValue","mergedResourceSlots","useResourceSlotsDetails","formatAmount","_mergedResourceSlots$","_convertBinarySizeUni","_mergedResourceSlots$2","number_format","binary","Number","convertBinarySizeUnit","numberFixed","toString","round_length","parseFloat","toFixed","ResourceTypeIcon","showTooltip","display_unit","shmem","fontSize","fontSizeSM","MWCIconWrap","_ref3","_resourceTypeIconSrcM","_mergedResourceSlots$4","showUnit","resourceTypeIconSrcMap","cpu","mem","targetIcon","MicrochipIcon","alignSelf","Tooltip","pointerEvents","React","node","v0","v1","hash","errorMessageTable","regexTable","msg","globalThis","backendaiclient","backendaiwebui","debug","hasOwnProperty","regex","Object","keys","RegExp","test","useStyles","createStyles","css","cardList","ModelStoreListPage","_model_cards$edges","fetchKey","updateFetchKey","useUpdatableState","search","setSearch","selectedCategories","setSelectedCategories","selectedTasks","setSelectedTasks","selectedLabels","setSelectedLabels","currentModelInfo","setCurrentModelInfo","isPendingRefetching","startRefetchingTransition","useTransition","model_cards","useLazyLoadQuery","_ModelStoreListPageQuery","filter","fetchPolicy","fieldsValues","useMemo","result","fields","forEach","field","edges","edge","_edge$node","newValue","push","className","prefix","SearchOutlined","placeholder","allowClear","target","ReloadOutlined","loading","minWidth","mode","popupMatchSelectWidth","List","grid","sm","md","xl","dataSource","map","info","passSearchFilter","_info$description","_info$title","_info$task","_info$category","_info$label","searchLower","toLowerCase","some","renderItem","item","hoverable","TextHighlighter","keyword","marginLeft","ModelCardModal","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17"],"sourceRoot":""}