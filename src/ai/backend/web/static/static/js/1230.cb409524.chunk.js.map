{"version":3,"file":"static/js/1230.cb409524.chunk.js","mappings":"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","sources":["__generated__/ImageTagsUNSAFELazySessionImageTagQuery.graphql.ts","components/ImageTags.tsx","components/TableColumnsSettingModal.tsx","hooks/useHiddenColumnKeysSetting.tsx","__generated__/CustomizedImageListUntagMutation.graphql.ts","__generated__/CustomizedImageListForgetMutation.graphql.ts","__generated__/CustomizedImageListQuery.graphql.ts","__generated__/AliasedImageDoubleTagsFragment.graphql.ts","components/AliasedImageDoubleTags.tsx","components/CustomizedImageList.tsx","pages/MyEnvironmentPage.tsx"],"sourcesContent":["/**\n * @generated SignedSource<<a473707c26b9b877ea1ea8f6a1405d36>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ImageTagsUNSAFELazySessionImageTagQuery$variables = {\n  uuid: string;\n};\nexport type ImageTagsUNSAFELazySessionImageTagQuery$data = {\n  readonly compute_session: {\n    readonly architecture: string | null | undefined;\n    readonly image: string | null | undefined;\n    readonly mounts: ReadonlyArray<string | null | undefined> | null | undefined;\n  } | null | undefined;\n};\nexport type ImageTagsUNSAFELazySessionImageTagQuery = {\n  response: ImageTagsUNSAFELazySessionImageTagQuery$data;\n  variables: ImageTagsUNSAFELazySessionImageTagQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"uuid\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"uuid\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"mounts\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"architecture\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ImageTagsUNSAFELazySessionImageTagQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ImageTagsUNSAFELazySessionImageTagQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"561670e250a47b880df70cc432c19049\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ImageTagsUNSAFELazySessionImageTagQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ImageTagsUNSAFELazySessionImageTagQuery(\\n  $uuid: UUID!\\n) {\\n  compute_session(id: $uuid) {\\n    image\\n    mounts\\n    architecture\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"20cd966dac98c484e7c795ff3d7e78a4\";\n\nexport default node;\n","import { ImageTagsUNSAFELazySessionImageTagQuery } from '../__generated__/ImageTagsUNSAFELazySessionImageTagQuery.graphql';\nimport { preserveDotStartCase } from '../helper';\nimport { useBackendAIImageMetaData } from '../hooks';\nimport DoubleTag, { DoubleTagObjectValue } from './DoubleTag';\nimport ImageMetaIcon from './ImageMetaIcon';\nimport TextHighlighter from './TextHighlighter';\nimport { Tag, TagProps, theme } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport React from 'react';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\n\ninterface ImageAliasNameAndBaseVersionTagsProps\n  extends Omit<DoubleTagObjectValue, 'label'> {\n  image: string | null;\n}\nconst ImageAliasNameAndBaseVersionTags: React.FC<\n  ImageAliasNameAndBaseVersionTagsProps\n> = ({ image, ...props }) => {\n  image = image || '';\n  const [, { getImageAliasName, getBaseVersion, tagAlias }] =\n    useBackendAIImageMetaData();\n  return (\n    <DoubleTag\n      values={[\n        {\n          label: tagAlias(getImageAliasName(image)),\n          color: 'blue',\n        },\n        {\n          label: getBaseVersion(image),\n          color: 'green',\n        },\n      ]}\n      {...props}\n    />\n  );\n};\n\ninterface BaseImageTagsProps extends TagProps {\n  image: string | null;\n}\nconst BaseImageTags: React.FC<BaseImageTagsProps> = ({ image, ...props }) => {\n  image = image || '';\n  const [, { getBaseImage, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getBaseImage(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {tagAlias(getBaseImage(image))}\n    </Tag>\n  );\n};\n\ninterface ArchitectureTagsProps extends TagProps {\n  image: string | null;\n}\nconst ArchitectureTags: React.FC<ArchitectureTagsProps> = ({\n  image,\n  ...props\n}) => {\n  image = image || '';\n  const [, { getArchitecture, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getArchitecture(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {getArchitecture(image)}\n    </Tag>\n  );\n};\n\nconst SessionKernelTags: React.FC<{\n  image: string | null;\n  border?: boolean;\n}> = React.memo(function SessionKernelTags({ image }) {\n  image = image || '';\n  return (\n    <>\n      <ImageAliasNameAndBaseVersionTags image={image} />\n      <BaseImageTags image={image} />\n      <ArchitectureTags image={image} />\n    </>\n  );\n});\n\ninterface ImageTagsProps extends TagProps {\n  tag: string;\n  labels: Array<{ key: string; value: string }>;\n  highlightKeyword?: string;\n}\nexport const ImageTags: React.FC<ImageTagsProps> = ({\n  tag,\n  labels,\n  highlightKeyword,\n  ...props\n}) => {\n  labels = labels || [];\n  const [, { getTags, tagAlias }] = useBackendAIImageMetaData();\n  const tags = getTags(tag, labels);\n  return (\n    <React.Fragment {...props}>\n      {_.map(tags, (tag: { key: string; value: string }, index) => {\n        const isCustomized = tag.key === 'Customized';\n        const aliasedTag = tagAlias(tag.key + tag.value);\n        return _.isEqual(\n          aliasedTag,\n          preserveDotStartCase(tag.key + tag.value),\n        ) ? (\n          <DoubleTag\n            key={tag.key}\n            highlightKeyword={highlightKeyword}\n            values={[\n              {\n                label: tagAlias(tag.key),\n                color: isCustomized ? 'cyan' : 'blue',\n              },\n              {\n                label: tag.value,\n                color: isCustomized ? 'cyan' : 'blue',\n              },\n            ]}\n          />\n        ) : (\n          <Tag key={tag.key} color={isCustomized ? 'cyan' : 'blue'}>\n            <TextHighlighter keyword={highlightKeyword} key={index}>\n              {aliasedTag}\n            </TextHighlighter>\n          </Tag>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\ninterface UNSAFELazySessionImageTagProps {\n  sessionId: string | null;\n}\nexport const UNSAFELazySessionImageTag: React.FC<\n  UNSAFELazySessionImageTagProps\n> = ({ sessionId }) => {\n  const { token } = theme.useToken();\n  const { compute_session } =\n    useLazyLoadQuery<ImageTagsUNSAFELazySessionImageTagQuery>(\n      graphql`\n        query ImageTagsUNSAFELazySessionImageTagQuery($uuid: UUID!) {\n          compute_session(id: $uuid) {\n            image\n            mounts\n            architecture\n          }\n        }\n      `,\n      {\n        uuid: sessionId || '',\n      },\n      {\n        fetchPolicy: sessionId ? 'store-or-network' : 'store-only',\n      },\n    );\n\n  const imageFullName =\n    compute_session?.image &&\n    compute_session?.architecture &&\n    compute_session.image + '@' + compute_session.architecture;\n\n  return imageFullName ? (\n    <BAIFlex gap={['xs', 0]} wrap=\"wrap\">\n      <ImageMetaIcon\n        image={imageFullName}\n        style={{ marginRight: token.marginXS }}\n      />\n      <SessionKernelTags image={imageFullName} />\n    </BAIFlex>\n  ) : null;\n};\n","import { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport { BAIModal, BAIModalProps } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: Array<string>;\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  hiddenColumnKeys?: Array<string>;\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  hiddenColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = _.map(columns, (column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys: _.map(columnOptions, 'value')?.filter(\n            (columnKey) => !_.includes(hiddenColumnKeys, columnKey),\n          ),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = _.map(columnOptions, (columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n                rules={[\n                  {\n                    required: true,\n                    message: t('general.validation.PleaseSelectOptions'),\n                  },\n                ]}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","import { useBAISettingUserState } from './useBAISetting';\n\ntype KnownSettingName =\n  | 'AgentList'\n  | 'AgentSummaryList'\n  | 'ContainerRegistryList'\n  | 'CustomizedImageList'\n  | 'ErrorLogList'\n  | 'ImageList'\n  | 'KeypairResourcePolicyList'\n  | 'ProjectResourcePolicyList'\n  | 'UserResourcePolicyList'\n  | 'EndpointListPage';\n\nexport const useHiddenColumnKeysSetting = (listName: KnownSettingName) => {\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useBAISettingUserState(\n    `hiddenColumnKeys.${listName}`,\n  );\n\n  return [hiddenColumnKeys, setHiddenColumnKeys] as const;\n};\n","/**\n * @generated SignedSource<<3f5a94c156b55d55c2cf15aa95a982f7>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type CustomizedImageListUntagMutation$variables = {\n  id: string;\n};\nexport type CustomizedImageListUntagMutation$data = {\n  readonly untag_image_from_registry: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type CustomizedImageListUntagMutation = {\n  response: CustomizedImageListUntagMutation$data;\n  variables: CustomizedImageListUntagMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"image_id\",\n        \"variableName\": \"id\"\n      }\n    ],\n    \"concreteType\": \"UntagImageFromRegistry\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"untag_image_from_registry\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"CustomizedImageListUntagMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"CustomizedImageListUntagMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"c71657d2d82d32a7b5b91377f22a41fb\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"CustomizedImageListUntagMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation CustomizedImageListUntagMutation(\\n  $id: String!\\n) {\\n  untag_image_from_registry(image_id: $id) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"403ccc93953ffe2c119ecfb71a1b8b32\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0c77002b198203b41aeb00efad97dd60>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type CustomizedImageListForgetMutation$variables = {\n  id: string;\n};\nexport type CustomizedImageListForgetMutation$data = {\n  readonly forget_image_by_id: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type CustomizedImageListForgetMutation = {\n  response: CustomizedImageListForgetMutation$data;\n  variables: CustomizedImageListForgetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"image_id\",\n        \"variableName\": \"id\"\n      }\n    ],\n    \"concreteType\": \"ForgetImageById\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"forget_image_by_id\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"CustomizedImageListForgetMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"CustomizedImageListForgetMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"6b517a276517434fdeb129e0535f9519\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"CustomizedImageListForgetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation CustomizedImageListForgetMutation(\\n  $id: String!\\n) {\\n  forget_image_by_id(image_id: $id) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"ab2f38ba9700f7c548544a3bc471eb01\";\n\nexport default node;\n","/**\n * @generated SignedSource<<61b0c8548945db7bfa197644463347cc>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type CustomizedImageListQuery$variables = Record<PropertyKey, never>;\nexport type CustomizedImageListQuery$data = {\n  readonly customized_images: ReadonlyArray<{\n    readonly architecture: string | null | undefined;\n    readonly base_image_name: string | null | undefined;\n    readonly digest: string | null | undefined;\n    readonly humanized_name: string | null | undefined;\n    readonly id: string;\n    readonly labels: ReadonlyArray<{\n      readonly key: string | null | undefined;\n      readonly value: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly name: string | null | undefined;\n    readonly namespace: string | null | undefined;\n    readonly registry: string | null | undefined;\n    readonly supported_accelerators: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly tag: string | null | undefined;\n    readonly tags: ReadonlyArray<{\n      readonly key: string | null | undefined;\n      readonly value: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly version: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"AliasedImageDoubleTagsFragment\">;\n  } | null | undefined> | null | undefined;\n};\nexport type CustomizedImageListQuery = {\n  response: CustomizedImageListQuery$data;\n  variables: CustomizedImageListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"humanized_name\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"tag\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"registry\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"architecture\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"digest\",\n  \"storageKey\": null\n},\nv7 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"key\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"value\",\n    \"storageKey\": null\n  }\n],\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"KVPair\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"labels\",\n  \"plural\": true,\n  \"selections\": (v7/*: any*/),\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"supported_accelerators\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"namespace\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"base_image_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"KVPair\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"tags\",\n  \"plural\": true,\n  \"selections\": (v7/*: any*/),\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"version\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"CustomizedImageListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ImageNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"customized_images\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"AliasedImageDoubleTagsFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"CustomizedImageListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ImageNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"customized_images\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"9d2e928aef36de71b7da3ce796f74e22\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"CustomizedImageListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query CustomizedImageListQuery {\\n  customized_images {\\n    id\\n    name @deprecatedSince(version: \\\"24.12.0\\\")\\n    humanized_name\\n    tag\\n    registry\\n    architecture\\n    digest\\n    labels {\\n      key\\n      value\\n    }\\n    supported_accelerators\\n    namespace @since(version: \\\"24.12.0\\\")\\n    base_image_name @since(version: \\\"24.12.0\\\")\\n    tags @since(version: \\\"24.12.0\\\") {\\n      key\\n      value\\n    }\\n    version @since(version: \\\"24.12.0\\\")\\n    ...AliasedImageDoubleTagsFragment\\n  }\\n}\\n\\nfragment AliasedImageDoubleTagsFragment on ImageNode {\\n  labels {\\n    key\\n    value\\n  }\\n  tags @since(version: \\\"24.12.0\\\") {\\n    key\\n    value\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e0ff40aaf7c9d5c859389b31cd6762a\";\n\nexport default node;\n","/**\n * @generated SignedSource<<c1c610dd0c0f2aca5aebe87816d8558b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type AliasedImageDoubleTagsFragment$data = {\n  readonly labels: ReadonlyArray<{\n    readonly key: string | null | undefined;\n    readonly value: string | null | undefined;\n  } | null | undefined> | null | undefined;\n  readonly tags: ReadonlyArray<{\n    readonly key: string | null | undefined;\n    readonly value: string | null | undefined;\n  } | null | undefined> | null | undefined;\n  readonly \" $fragmentType\": \"AliasedImageDoubleTagsFragment\";\n};\nexport type AliasedImageDoubleTagsFragment$key = {\n  readonly \" $data\"?: AliasedImageDoubleTagsFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"AliasedImageDoubleTagsFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"key\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"value\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"AliasedImageDoubleTagsFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KVPair\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"labels\",\n      \"plural\": true,\n      \"selections\": (v0/*: any*/),\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KVPair\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"tags\",\n      \"plural\": true,\n      \"selections\": (v0/*: any*/),\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ImageNode\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"2b63bd76dfdb73053e9561282c86cfaf\";\n\nexport default node;\n","import { AliasedImageDoubleTagsFragment$key } from '../__generated__/AliasedImageDoubleTagsFragment.graphql';\nimport { preserveDotStartCase } from '../helper';\nimport { useBackendAIImageMetaData } from '../hooks';\nimport DoubleTag, { DoubleTagObjectValue } from './DoubleTag';\nimport { Tag } from 'antd';\nimport { BAIFlex } from 'backend.ai-ui';\nimport _ from 'lodash';\nimport React from 'react';\nimport { graphql, useFragment } from 'react-relay';\n\ninterface AliasedImageDoubleTagsProps extends DoubleTagObjectValue {\n  imageFrgmt?: AliasedImageDoubleTagsFragment$key | null;\n  highlightKeyword?: string;\n}\n\nconst AliasedImageDoubleTags: React.FC<AliasedImageDoubleTagsProps> = ({\n  imageFrgmt,\n  highlightKeyword,\n  ...doubleTagProps\n}) => {\n  const images = useFragment(\n    graphql`\n      fragment AliasedImageDoubleTagsFragment on ImageNode {\n        labels {\n          key\n          value\n        }\n        tags @since(version: \"24.12.0\") {\n          key\n          value\n        }\n      }\n    `,\n    imageFrgmt,\n  );\n  const [, { tagAlias }] = useBackendAIImageMetaData();\n\n  return (\n    <BAIFlex direction=\"row\" align=\"start\" gap={'xxs'}>\n      {_.map(images?.tags, (tag: { key: string; value: string }) => {\n        const isCustomized = _.includes(tag.key, 'customized_');\n        // If the tag is customized, we need to find the corresponding label instead of using the tag value (hash).\n        const tagValue = isCustomized\n          ? _.find(images?.labels, {\n              key: 'ai.backend.customized-image.name',\n            })?.value\n          : tag.value;\n        const aliasedTag = tagAlias(tag.key + tagValue);\n        return _.isEqual(\n          aliasedTag,\n          preserveDotStartCase(tag.key + tagValue),\n        ) || isCustomized ? (\n          <DoubleTag\n            key={tag.key}\n            highlightKeyword={highlightKeyword}\n            values={[\n              {\n                label: tagAlias(tag.key),\n                color: isCustomized ? 'cyan' : doubleTagProps.color,\n              },\n              {\n                label: tagValue ?? '',\n                color: isCustomized ? 'cyan' : doubleTagProps.color,\n              },\n            ]}\n            {...doubleTagProps}\n          />\n        ) : (\n          <Tag\n            key={tag.key}\n            color={isCustomized ? 'cyan' : doubleTagProps.color}\n          >\n            {aliasedTag}\n          </Tag>\n        );\n      })}\n    </BAIFlex>\n  );\n};\n\nexport default AliasedImageDoubleTags;\n","import { CustomizedImageListForgetMutation } from '../__generated__/CustomizedImageListForgetMutation.graphql';\nimport {\n  CustomizedImageListQuery,\n  CustomizedImageListQuery$data,\n} from '../__generated__/CustomizedImageListQuery.graphql';\nimport { CustomizedImageListUntagMutation } from '../__generated__/CustomizedImageListUntagMutation.graphql';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport { getImageFullName, localeCompare } from '../helper';\nimport {\n  useBackendAIImageMetaData,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\nimport { useHiddenColumnKeysSetting } from '../hooks/useHiddenColumnKeysSetting';\nimport AliasedImageDoubleTags from './AliasedImageDoubleTags';\nimport { ImageTags } from './ImageTags';\nimport TextHighlighter from './TextHighlighter';\nimport {\n  DeleteOutlined,\n  ReloadOutlined,\n  SearchOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { App, Button, Input, Popconfirm, theme, Typography } from 'antd';\nimport { AnyObject } from 'antd/es/_util/type';\nimport { ColumnsType, ColumnType } from 'antd/es/table';\nimport {\n  filterOutEmpty,\n  filterOutNullAndUndefined,\n  BAIFlex,\n  BAITable,\n} from 'backend.ai-ui';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  useMemo,\n  useState,\n  useTransition,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery, useMutation } from 'react-relay';\n\nexport type CommittedImage = NonNullable<\n  CustomizedImageListQuery$data['customized_images']\n>[number];\n\nconst CustomizedImageList: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n  const baiClient = useSuspendedBackendaiClient();\n  const supportExtendedImageInfo =\n    baiClient?.supports('extended-image-info') ?? false;\n\n  const [visibleColumnSettingModal, { toggle: toggleColumnSettingModal }] =\n    useToggle();\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [customizedImageListFetchKey, updateCustomizedImageListFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [inFlightImageId, setInFlightImageId] = useState<string>();\n  const [imageSearch, setImageSearch] = useState('');\n  const [isPendingSearchTransition, startSearchTransition] = useTransition();\n  const [, { getBaseVersion, getBaseImages, getBaseImage, tagAlias, getTags }] =\n    useBackendAIImageMetaData();\n\n  const { customized_images } = useLazyLoadQuery<CustomizedImageListQuery>(\n    graphql`\n      query CustomizedImageListQuery {\n        customized_images {\n          id\n          name @deprecatedSince(version: \"24.12.0\")\n          humanized_name\n          tag\n          registry\n          architecture\n          digest\n          labels {\n            key\n            value\n          }\n          supported_accelerators\n          namespace @since(version: \"24.12.0\")\n          base_image_name @since(version: \"24.12.0\")\n          tags @since(version: \"24.12.0\") {\n            key\n            value\n          }\n          version @since(version: \"24.12.0\")\n          ...AliasedImageDoubleTagsFragment\n        }\n      }\n    `,\n    {},\n    {\n      fetchPolicy:\n        customizedImageListFetchKey === 'initial-fetch'\n          ? 'store-and-network'\n          : 'network-only',\n      fetchKey: customizedImageListFetchKey,\n    },\n  );\n\n  const [commitForget, isInFlightForget] =\n    useMutation<CustomizedImageListForgetMutation>(graphql`\n      mutation CustomizedImageListForgetMutation($id: String!) {\n        forget_image_by_id(image_id: $id) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  const [commitUntag, isInFlightUntag] =\n    useMutation<CustomizedImageListUntagMutation>(graphql`\n      mutation CustomizedImageListUntagMutation($id: String!) {\n        untag_image_from_registry(image_id: $id) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  // TODO: when BA-1905 resolved.\n  // const [commitPurgeImage, isInFlightPurgeImage] =\n  //   useMutation<CustomizedImageListPurgeMutation>(graphql`\n  //     mutation CustomizedImageListPurgeMutation($id: String!) {\n  //       purge_image_by_id(\n  //         image_id: $id\n  //         options: { remove_from_registry: true }\n  //       ) {\n  //         image {\n  //           id\n  //         }\n  //       }\n  //     }\n  //   `);\n\n  // Sort images by humanized_name to prevent the image list from jumping around when the images are updated\n  // TODO: after `images` query  supports sort order, we should remove this line\n  const defaultSortedImages = useMemo(\n    () => _.sortBy(customized_images, (image) => image?.humanized_name),\n    [customized_images],\n  );\n\n  const imageFilterValues = useMemo(() => {\n    return defaultSortedImages?.map((image) => {\n      return {\n        namespace: supportExtendedImageInfo ? image?.namespace : image?.name,\n        fullName: getImageFullName(image) || '',\n        digest: image?.digest || '',\n        // ------------ need only before 24.12.0 ------------\n        baseversion: getBaseVersion(getImageFullName(image) || ''),\n        baseimage:\n          image?.tag && image?.name ? getBaseImages(image.tag, image.name) : [],\n        tag:\n          getTags(\n            image?.tag || '',\n            image?.labels as Array<{ key: string; value: string }>,\n          ) || [],\n        isCustomized: image?.tag\n          ? image.tag.indexOf('customized') !== -1\n          : false,\n        // -------------------------------------------------\n        // ------------ need only after 24.12.0 ------------\n        baseImageName: supportExtendedImageInfo ? image?.base_image_name : '',\n        tags: supportExtendedImageInfo ? image?.tags : [],\n        version: supportExtendedImageInfo ? image?.version : '',\n        // -------------------------------------------------\n      };\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultSortedImages]);\n\n  const filteredImageData = useMemo(() => {\n    if (_.isEmpty(imageSearch)) return defaultSortedImages;\n    const regExp = new RegExp(`${_.escapeRegExp(imageSearch)}`, 'i');\n    return _.filter(defaultSortedImages, (image, idx) => {\n      return _.some(image, (value, key) => {\n        if (key === 'id') return false;\n        if (['digest', 'architecture', 'registry'].includes(key))\n          return regExp.test(_.toString(value));\n        const curFilterValues = imageFilterValues[idx] || {};\n        const baseVersionMatch = regExp.test(curFilterValues.baseversion);\n        const baseImagesMatch = _.some(curFilterValues.baseimage, (value) =>\n          regExp.test(value),\n        );\n        const tagMatch = _.some(\n          curFilterValues.tag,\n          (tag) => regExp.test(tag.key) || regExp.test(tag.value),\n        );\n        const customizedMatch = curFilterValues.isCustomized\n          ? regExp.test('customized')\n          : false;\n        const namespaceMatch = regExp.test(curFilterValues.namespace || '');\n        const fullNameMatch = regExp.test(curFilterValues.fullName);\n        const tagsMatch = _.some(\n          curFilterValues.tags,\n          (tag: { key: string; value: string }) =>\n            regExp.test(tag.key) || regExp.test(tag.value),\n        );\n        const versionMatch = regExp.test(curFilterValues.version || '');\n        const digestMatch = regExp.test(curFilterValues.digest);\n        return (\n          baseVersionMatch ||\n          baseImagesMatch ||\n          tagMatch ||\n          namespaceMatch ||\n          customizedMatch ||\n          fullNameMatch ||\n          tagsMatch ||\n          versionMatch ||\n          digestMatch\n        );\n      });\n    });\n  }, [imageSearch, imageFilterValues, defaultSortedImages]);\n\n  const columns: ColumnsType<CommittedImage> = filterOutEmpty([\n    {\n      title: t('environment.FullImagePath'),\n      key: 'fullImagePath',\n      render: (row) => (\n        <Typography.Text\n          copyable={{\n            text: getImageFullName(row) || '',\n          }}\n        >\n          <TextHighlighter keyword={imageSearch}>\n            {getImageFullName(row) || ''}\n          </TextHighlighter>\n        </Typography.Text>\n      ),\n      sorter: (a, b) => localeCompare(getImageFullName(a), getImageFullName(b)),\n      width: token.screenXS,\n    },\n    {\n      title: t('environment.Registry'),\n      dataIndex: 'registry',\n      key: 'registry',\n      sorter: (a, b) => localeCompare(a?.registry, b?.registry),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    {\n      title: t('environment.Architecture'),\n      dataIndex: 'architecture',\n      key: 'architecture',\n      sorter: (a, b) => localeCompare(a?.architecture, b?.architecture),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Namespace'),\n      key: 'namespace',\n      dataIndex: 'namespace',\n      sorter: (a, b) => localeCompare(a?.namespace, b?.namespace),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.BaseImageName'),\n      key: 'base_image_name',\n      dataIndex: 'base_image_name',\n      sorter: (a, b) => localeCompare(a?.base_image_name, b?.base_image_name),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>\n          {tagAlias(text)}\n        </TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Version'),\n      key: 'version',\n      dataIndex: 'version',\n      sorter: (a, b) => localeCompare(a?.version, b?.version),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Tags'),\n      key: 'tags',\n      dataIndex: 'tags',\n      render: (text: Array<{ key: string; value: string }>, row) => (\n        <AliasedImageDoubleTags\n          imageFrgmt={row}\n          highlightKeyword={imageSearch}\n          label={''}\n        />\n      ),\n    },\n\n    !supportExtendedImageInfo && {\n      title: t('environment.Namespace'),\n      key: 'name',\n      dataIndex: 'name',\n      sorter: (a, b) => localeCompare(getImageFullName(a), getImageFullName(b)),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Version'),\n      key: 'baseversion',\n      dataIndex: 'baseversion',\n      sorter: (a, b) =>\n        localeCompare(\n          getBaseVersion(getImageFullName(a) || ''),\n          getBaseVersion(getImageFullName(b) || ''),\n        ),\n      render: (text, row) => (\n        <TextHighlighter keyword={imageSearch}>\n          {getBaseVersion(getImageFullName(row) || '')}\n        </TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Base'),\n      key: 'baseimage',\n      dataIndex: 'baseimage',\n      sorter: (a, b) =>\n        localeCompare(\n          getBaseImage(getImageFullName(a) || ''),\n          getBaseImage(getImageFullName(b) || ''),\n        ),\n      render: (text, row) => (\n        <TextHighlighter keyword={imageSearch}>\n          {tagAlias(getBaseImage(getImageFullName(row) || ''))}\n        </TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Tags'),\n      key: 'tag',\n      dataIndex: 'tag',\n      sorter: (a, b) => localeCompare(a?.tag, b?.tag),\n      render: (text, row) => (\n        <ImageTags\n          tag={text}\n          labels={row?.labels as Array<{ key: string; value: string }>}\n          highlightKeyword={imageSearch}\n        />\n      ),\n    },\n    {\n      title: t('environment.Digest'),\n      dataIndex: 'digest',\n      key: 'digest',\n      sorter: (a, b) => localeCompare(a?.digest, b?.digest),\n      render: (text) => (\n        <Typography.Text ellipsis={{ tooltip: true }} style={{ maxWidth: 200 }}>\n          <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n        </Typography.Text>\n      ),\n    },\n    {\n      title: t('general.Control'),\n      key: 'control',\n      fixed: 'right',\n      render: (text, row) => (\n        <BAIFlex direction=\"row\" align=\"stretch\" justify=\"center\" gap=\"xxs\">\n          <Popconfirm\n            title={t('dialog.ask.DoYouWantToProceed')}\n            description={t('dialog.warning.CannotBeUndone')}\n            okType=\"danger\"\n            okText={t('button.Delete')}\n            onConfirm={() => {\n              if (row?.id) {\n                setInFlightImageId(row.id + customizedImageListFetchKey);\n                // TODO: when BA-1905 resolved. use commitPurgeImage\n                commitUntag({\n                  variables: { id: row.id },\n                  onCompleted: (res, errors) => {\n                    if (\n                      !_.isNil(res.untag_image_from_registry) &&\n                      !res.untag_image_from_registry.ok\n                    ) {\n                      message.error(res.untag_image_from_registry.msg);\n                      return;\n                    }\n                    if (errors && errors?.length > 0) {\n                      const errorMsgList = _.map(\n                        errors,\n                        (error) => error.message,\n                      );\n                      for (const errorMsg of errorMsgList) {\n                        message.error(errorMsg);\n                      }\n                      return;\n                    }\n                    commitForget({\n                      variables: { id: row.id },\n                      onCompleted: (res, errors) => {\n                        setInFlightImageId(undefined);\n                        if (\n                          !_.isNil(res.forget_image_by_id) &&\n                          !res.forget_image_by_id.ok\n                        ) {\n                          message.error(res.forget_image_by_id.msg);\n                          return;\n                        }\n                        if (errors && errors?.length > 0) {\n                          const errorMsgList = _.map(\n                            errors,\n                            (error) => error.message,\n                          );\n                          for (const errorMsg of errorMsgList) {\n                            message.error(errorMsg);\n                          }\n                          return;\n                        }\n                        startRefetchTransition(() => {\n                          updateCustomizedImageListFetchKey();\n                        });\n                        message.success(\n                          t('environment.CustomizedImageSuccessfullyDeleted'),\n                        );\n                      },\n                      onError: () => {\n                        message.error(\n                          t('environment.FailedToDeleteCustomizedImage'),\n                        );\n                      },\n                    });\n                  },\n                  onError: () => {\n                    message.error(\n                      t('environment.FailedToDeleteCustomizedImage'),\n                    );\n                  },\n                });\n              }\n            }}\n          >\n            <Button\n              type=\"text\"\n              icon={<DeleteOutlined />}\n              danger\n              loading={\n                (isInFlightForget || isInFlightUntag) &&\n                inFlightImageId === row?.id + customizedImageListFetchKey\n              }\n              disabled={\n                (isInFlightForget || isInFlightUntag) &&\n                inFlightImageId !== row?.id + customizedImageListFetchKey\n              }\n            />\n          </Popconfirm>\n        </BAIFlex>\n      ),\n    },\n  ]);\n\n  const [hiddenColumnKeys, setHiddenColumnKeys] = useHiddenColumnKeysSetting(\n    'CustomizedImageList',\n  );\n\n  return (\n    <BAIFlex direction=\"column\" align=\"stretch\">\n      <BAIFlex direction=\"column\" align=\"stretch\" gap=\"sm\">\n        <BAIFlex justify=\"between\" gap=\"xs\" wrap=\"wrap\">\n          <Input\n            allowClear\n            prefix={<SearchOutlined />}\n            placeholder={t('environment.SearchImages')}\n            onChange={(e) => {\n              startSearchTransition(() => setImageSearch(e.target.value));\n            }}\n            style={{\n              width: 200,\n            }}\n          />\n          <Button\n            icon={<ReloadOutlined />}\n            loading={isRefetchPending}\n            onClick={() => {\n              startRefetchTransition(() => updateCustomizedImageListFetchKey());\n            }}\n          />\n        </BAIFlex>\n        <BAITable\n          resizable\n          loading={isPendingSearchTransition}\n          columns={\n            _.filter(\n              columns,\n              (column) =>\n                !_.includes(hiddenColumnKeys, _.toString(column?.key)),\n            ) as ColumnType<AnyObject>[]\n          }\n          dataSource={filterOutNullAndUndefined(filteredImageData)}\n          rowKey=\"id\"\n          scroll={{ x: 'max-content' }}\n          pagination={{\n            extraContent: (\n              <Button\n                type=\"text\"\n                icon={<SettingOutlined />}\n                onClick={() => {\n                  toggleColumnSettingModal();\n                }}\n              />\n            ),\n          }}\n        />\n      </BAIFlex>\n      <TableColumnsSettingModal\n        open={visibleColumnSettingModal}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setHiddenColumnKeys(\n              _.difference(\n                columns.map((column) => _.toString(column.key)),\n                values?.selectedColumnKeys,\n              ),\n            );\n          toggleColumnSettingModal();\n        }}\n        columns={columns}\n        hiddenColumnKeys={hiddenColumnKeys}\n      />\n    </BAIFlex>\n  );\n};\n\nexport default CustomizedImageList;\n","import CustomizedImageList from '../components/CustomizedImageList';\nimport FlexActivityIndicator from '../components/FlexActivityIndicator';\nimport { BAICard } from 'backend.ai-ui';\nimport { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StringParam, useQueryParam, withDefault } from 'use-query-params';\n\nconst tabParam = withDefault(StringParam, 'image');\n\nconst MyEnvironmentPage = () => {\n  const { t } = useTranslation();\n  const [curTabKey, setCurTabKey] = useQueryParam('tab', tabParam);\n\n  return (\n    <BAICard\n      activeTabKey={curTabKey}\n      onTabChange={setCurTabKey}\n      tabList={[\n        {\n          key: 'image',\n          label: t('environment.Images'),\n        },\n      ]}\n    >\n      <Suspense\n        fallback={\n          <FlexActivityIndicator\n            style={{ height: 'calc(100vh - 145px)' }}\n            spinSize=\"large\"\n          />\n        }\n      >\n        {curTabKey === 'image' && <CustomizedImageList />}\n      </Suspense>\n    </BAICard>\n  );\n};\n\nexport default MyEnvironmentPage;\n"],"names":["node","v0","v1","v2","v3","v4","hash","ImageAliasNameAndBaseVersionTags","_ref","image","props","getImageAliasName","getBaseVersion","tagAlias","useBackendAIImageMetaData","_jsx","DoubleTag","values","label","color","BaseImageTags","_ref2","getBaseImage","_","Tag","children","ArchitectureTags","_ref3","getArchitecture","SessionKernelTags","React","_ref4","_jsxs","_Fragment","ImageTags","_ref5","tag","labels","highlightKeyword","getTags","tags","index","isCustomized","key","aliasedTag","value","preserveDotStartCase","TextHighlighter","keyword","UNSAFELazySessionImageTag","_ref6","sessionId","token","theme","useToken","compute_session","useLazyLoadQuery","_ImageTagsUNSAFELazySessionImageTagQuery","uuid","fetchPolicy","imageFullName","architecture","BAIFlex","gap","wrap","ImageMetaIcon","style","marginRight","marginXS","_$map","open","onRequestClose","columns","hiddenColumnKeys","modalProps","formRef","useRef","t","useTranslation","columnOptions","column","title","element","map","child","undefined","BAIModal","destroyOnClose","centered","onOk","_formRef$current","current","validateFields","then","catch","onCancel","Form","ref","preserve","initialValues","selectedColumnKeys","filter","columnKey","layout","Item","name","marginBottom","Input","prefix","SearchOutlined","marginSM","placeholder","noStyle","shouldUpdate","prev","cur","searchInput","getFieldValue","searchKeyword","filteredColumns","columnOption","includes","display","height","overflowY","rules","required","message","Checkbox","Group","options","flexDirection","useHiddenColumnKeysSetting","listName","setHiddenColumnKeys","useBAISettingUserState","v5","v6","v7","v8","v9","v10","v11","v12","v13","imageFrgmt","doubleTagProps","images","useFragment","_AliasedImageDoubleTagsFragment","direction","align","_$find","tagValue","_baiClient$supports","App","useApp","baiClient","useSuspendedBackendaiClient","supportExtendedImageInfo","supports","visibleColumnSettingModal","toggle","toggleColumnSettingModal","useToggle","isRefetchPending","startRefetchTransition","useTransition","customizedImageListFetchKey","updateCustomizedImageListFetchKey","useUpdatableState","inFlightImageId","setInFlightImageId","useState","imageSearch","setImageSearch","isPendingSearchTransition","startSearchTransition","getBaseImages","customized_images","_CustomizedImageListQuery","fetchKey","commitForget","isInFlightForget","useMutation","_CustomizedImageListForgetMutation","commitUntag","isInFlightUntag","_CustomizedImageListUntagMutation","defaultSortedImages","useMemo","humanized_name","imageFilterValues","namespace","fullName","getImageFullName","digest","baseversion","baseimage","indexOf","baseImageName","base_image_name","version","filteredImageData","regExp","RegExp","idx","test","curFilterValues","baseVersionMatch","baseImagesMatch","tagMatch","customizedMatch","namespaceMatch","fullNameMatch","tagsMatch","versionMatch","digestMatch","filterOutEmpty","render","row","Typography","Text","copyable","text","sorter","a","b","localeCompare","width","screenXS","dataIndex","registry","AliasedImageDoubleTags","ellipsis","tooltip","maxWidth","fixed","justify","Popconfirm","description","okType","okText","onConfirm","id","variables","onCompleted","res","errors","untag_image_from_registry","ok","length","errorMsgList","error","errorMsg","forget_image_by_id","success","msg","onError","Button","type","icon","DeleteOutlined","danger","loading","disabled","allowClear","onChange","e","target","ReloadOutlined","onClick","BAITable","resizable","dataSource","filterOutNullAndUndefined","rowKey","scroll","x","pagination","extraContent","SettingOutlined","TableColumnsSettingModal","tabParam","withDefault","StringParam","MyEnvironmentPage","curTabKey","setCurTabKey","useQueryParam","BAICard","activeTabKey","onTabChange","tabList","Suspense","fallback","FlexActivityIndicator","spinSize","CustomizedImageList"],"sourceRoot":""}