{"version":3,"file":"static/js/7768.ce6137f8.chunk.js","mappings":"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","sources":["components/BAITable.tsx","components/DoubleTag.tsx","components/ImageTags.tsx","components/TableColumnsSettingModal.tsx","components/__generated__/AliasedImageDoubleTagsFragment.graphql.ts","components/__generated__/CustomizedImageListForgetAndUntagMutation.graphql.ts","components/__generated__/CustomizedImageListQuery.graphql.ts","components/AliasedImageDoubleTags.tsx","components/CustomizedImageList.tsx","pages/MyEnvironmentPage.tsx"],"sourcesContent":["import { useDebounce } from 'ahooks';\nimport { GetProps, Table } from 'antd';\nimport { createStyles } from 'antd-style';\nimport { ColumnsType } from 'antd/es/table';\nimport { TableProps } from 'antd/lib';\nimport _ from 'lodash';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { Resizable, ResizeCallbackData } from 'react-resizable';\n\nconst useStyles = createStyles(({ token, css }) => ({\n  resizableTable: css`\n    .react-resizable-handle {\n      position: absolute;\n      inset-inline-end: 0px;\n      bottom: 0;\n      z-index: 1;\n      width: 10px;\n      height: 100%;\n      cursor: col-resize;\n    }\n    .ant-table-cell {\n      overflow: hidden;\n      whitespace: 'pre';\n      wordwrap: 'break-word';\n    }\n  `,\n}));\n\nconst ResizableTitle = (\n  props: React.HTMLAttributes<any> & {\n    onResize: (\n      e: React.SyntheticEvent<Element> | undefined,\n      data: ResizeCallbackData,\n    ) => void;\n    width: number;\n  },\n) => {\n  const { onResize, width, onClick, ...restProps } = props;\n  const wrapRef = useRef<HTMLTableCellElement>(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const debouncedIsResizing = useDebounce(isResizing, { wait: 100 });\n\n  // This is a workaround for the initial width of resizable columns if the width is not specified\n  useEffect(() => {\n    if (wrapRef.current && _.isUndefined(width)) {\n      onResize?.(undefined, {\n        size: {\n          width: wrapRef.current.offsetWidth,\n          height: wrapRef.current.offsetHeight,\n        },\n        node: wrapRef.current,\n        handle: 'e',\n      });\n    }\n  });\n\n  return _.isUndefined(width) ? (\n    <th ref={wrapRef} {...restProps} />\n  ) : (\n    <Resizable\n      width={width}\n      height={0}\n      handle={\n        <span\n          className=\"react-resizable-handle\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        />\n      }\n      onResize={onResize}\n      onResizeStart={() => {\n        setIsResizing(true);\n      }}\n      onResizeStop={() => {\n        setIsResizing(false);\n      }}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th\n        onClick={(e) => {\n          if (debouncedIsResizing) {\n            e.preventDefault();\n          } else {\n            onClick?.(e);\n          }\n        }}\n        {...restProps}\n      />\n    </Resizable>\n  );\n};\n\ninterface BAITableProps extends TableProps {\n  resizable?: boolean;\n}\n\nconst columnKeyOrIndexKey = (column: any, index: number) =>\n  column.key || `index_${index}`;\nconst generateResizedColumnWidths = (columns?: ColumnsType) => {\n  const widths: Record<string, number> = {};\n  _.each(columns, (column, index) => {\n    widths[columnKeyOrIndexKey(column, index)] = column.width as number;\n  });\n  return widths;\n};\n\nconst BAITable: React.FC<BAITableProps> = ({\n  resizable = false,\n  columns,\n  components,\n  ...tableProps\n}) => {\n  const { styles } = useStyles();\n\n  const [resizedColumnWidths, setResizedColumnWidths] = useState<\n    Record<string, number>\n  >(generateResizedColumnWidths(columns));\n\n  const mergedColumns = useMemo(() => {\n    return !resizable\n      ? columns\n      : _.map(\n          columns,\n          (column, index) =>\n            ({\n              ...column,\n              width:\n                resizedColumnWidths[columnKeyOrIndexKey(column, index)] ||\n                column.width,\n              onHeaderCell: (column: ColumnsType[number]) => {\n                return {\n                  width: column.width,\n                  onResize: (e, { size }) => {\n                    setResizedColumnWidths((prev) => ({\n                      ...prev,\n                      [columnKeyOrIndexKey(column, index)]: size.width,\n                    }));\n                  },\n                } as GetProps<typeof ResizableTitle>;\n              },\n            }) as ColumnsType[number],\n        );\n  }, [resizable, columns, resizedColumnWidths]);\n\n  return (\n    <Table\n      sortDirections={['descend', 'ascend', 'descend']}\n      showSorterTooltip={false}\n      className={resizable ? styles.resizableTable : ''}\n      components={\n        resizable\n          ? _.merge(components || {}, {\n              header: {\n                cell: ResizableTitle,\n              },\n            })\n          : components\n      }\n      columns={mergedColumns}\n      {...tableProps}\n    />\n  );\n};\n\nexport default BAITable;\n","import Flex from './Flex';\nimport TextHighlighter from './TextHighlighter';\nimport { Tag } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\nexport type DoubleTagObjectValue = {\n  label: string;\n  color?: string;\n};\n\nconst DoubleTag: React.FC<{\n  values?: Array<string> | Array<DoubleTagObjectValue>;\n  highlightKeyword?: string;\n}> = ({ values = [], highlightKeyword }) => {\n  if (values.length === 0) return null;\n  let objectValues: Array<DoubleTagObjectValue>;\n  if (\n    values[0] &&\n    (typeof values[0] === 'string' || React.isValidElement(values[0]))\n  ) {\n    objectValues = values.map(\n      (value) =>\n        ({\n          label: value,\n          color: 'blue',\n        }) as DoubleTagObjectValue,\n    );\n  } else {\n    objectValues = values as DoubleTagObjectValue[];\n  }\n\n  return (\n    <Flex direction=\"row\">\n      {_.map(objectValues, (objValue, idx) =>\n        !_.isEmpty(objValue.label) ? (\n          <Tag\n            key={idx}\n            style={\n              _.last(objectValues) === objValue\n                ? undefined\n                : { margin: 0, marginRight: -1 }\n            }\n            color={objValue.color}\n          >\n            {!_.isUndefined(highlightKeyword) ? (\n              <TextHighlighter keyword={highlightKeyword}>\n                {objValue.label}\n              </TextHighlighter>\n            ) : (\n              objValue.label\n            )}\n          </Tag>\n        ) : null,\n      )}\n    </Flex>\n  );\n};\n\nexport default DoubleTag;\n","import { preserveDotStartCase } from '../helper';\nimport { useBackendAIImageMetaData } from '../hooks';\nimport DoubleTag, { DoubleTagObjectValue } from './DoubleTag';\nimport Flex from './Flex';\nimport TextHighlighter from './TextHighlighter';\nimport { Tag, TagProps } from 'antd';\nimport _ from 'lodash';\nimport React from 'react';\n\ninterface ImageAliasNameAndBaseVersionTagsProps\n  extends Omit<DoubleTagObjectValue, 'label'> {\n  image: string | null;\n}\nexport const ImageAliasNameAndBaseVersionTags: React.FC<\n  ImageAliasNameAndBaseVersionTagsProps\n> = ({ image, ...props }) => {\n  image = image || '';\n  const [, { getImageAliasName, getBaseVersion, tagAlias }] =\n    useBackendAIImageMetaData();\n  return (\n    <DoubleTag\n      values={[\n        {\n          label: tagAlias(getImageAliasName(image)),\n          color: 'blue',\n        },\n        {\n          label: getBaseVersion(image),\n          color: 'green',\n        },\n      ]}\n      {...props}\n    />\n  );\n};\n\ninterface BaseVersionTagsProps extends TagProps {\n  image: string | null;\n}\nexport const BaseVersionTags: React.FC<BaseVersionTagsProps> = ({\n  image,\n  ...props\n}) => {\n  image = image || '';\n  const [, { getBaseVersion, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getBaseVersion(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {tagAlias(getBaseVersion(image))}\n    </Tag>\n  );\n};\n\ninterface BaseImageTagsProps extends TagProps {\n  image: string | null;\n}\nexport const BaseImageTags: React.FC<BaseImageTagsProps> = ({\n  image,\n  ...props\n}) => {\n  image = image || '';\n  const [, { getBaseImage, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getBaseImage(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {tagAlias(getBaseImage(image))}\n    </Tag>\n  );\n};\n\ninterface ArchitectureTagsProps extends TagProps {\n  image: string | null;\n}\nexport const ArchitectureTags: React.FC<ArchitectureTagsProps> = ({\n  image,\n  ...props\n}) => {\n  image = image || '';\n  const [, { getArchitecture, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getArchitecture(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {getArchitecture(image)}\n    </Tag>\n  );\n};\n\ninterface LangTagsProps extends TagProps {\n  image: string | null;\n}\nexport const LangTags: React.FC<LangTagsProps> = ({ image, ...props }) => {\n  image = image || '';\n  const [, { getImageLang, tagAlias }] = useBackendAIImageMetaData();\n  return _.isEmpty(tagAlias(getImageLang(image))) ? null : (\n    <Tag color=\"green\" {...props}>\n      {tagAlias(getImageLang(image))}\n    </Tag>\n  );\n};\n\ninterface ConstraintTagsProps extends TagProps {\n  tag: string;\n  labels: { key: string; value: string }[];\n  highlightKeyword?: string;\n}\nexport const ConstraintTags: React.FC<ConstraintTagsProps> = ({\n  tag,\n  labels,\n  highlightKeyword,\n  ...props\n}) => {\n  labels = labels || [];\n  const [, { getConstraints }] = useBackendAIImageMetaData();\n  const constraints = getConstraints(tag, labels);\n  return (\n    <Flex direction=\"row\" align=\"start\">\n      {!_.isEmpty(constraints?.[0]) ? (\n        <Tag color=\"blue\" {...props}>\n          <TextHighlighter keyword={highlightKeyword}>\n            {constraints[0]}\n          </TextHighlighter>\n        </Tag>\n      ) : null}\n      {!_.isEmpty(constraints?.[1]) ? (\n        <DoubleTag\n          color=\"cyan\"\n          highlightKeyword={highlightKeyword}\n          values={[\n            {\n              label: 'Customized',\n              color: 'cyan',\n            },\n            {\n              label: constraints[1],\n              color: 'cyan',\n            },\n          ]}\n          {...props}\n        />\n      ) : null}\n    </Flex>\n  );\n};\n\nconst SessionKernelTags: React.FC<{\n  image: string | null;\n  style?: React.CSSProperties;\n  border?: boolean;\n}> = ({ image, style = {} }, bordered) => {\n  image = image || '';\n  return (\n    <>\n      <ImageAliasNameAndBaseVersionTags image={image} />\n      <BaseImageTags image={image} />\n      <ArchitectureTags image={image} />\n    </>\n  );\n};\n\nexport default React.memo(SessionKernelTags);\n\ninterface ImageTagsProps extends TagProps {\n  tag: string;\n  labels: Array<{ key: string; value: string }>;\n  highlightKeyword?: string;\n}\nexport const ImageTags: React.FC<ImageTagsProps> = ({\n  tag,\n  labels,\n  highlightKeyword,\n  ...props\n}) => {\n  labels = labels || [];\n  const [, { getTags, tagAlias }] = useBackendAIImageMetaData();\n  const tags = getTags(tag, labels);\n  return (\n    <Flex direction=\"row\" align=\"start\">\n      {_.map(tags, (tag: { key: string; value: string }, index) => {\n        const isCustomized = tag.key === 'Customized';\n        const aliasedTag = tagAlias(tag.key + tag.value);\n        return _.isEqual(\n          aliasedTag,\n          preserveDotStartCase(tag.key + tag.value),\n        ) ? (\n          <DoubleTag\n            key={tag.key}\n            highlightKeyword={highlightKeyword}\n            values={[\n              {\n                label: tagAlias(tag.key),\n                color: isCustomized ? 'cyan' : 'blue',\n              },\n              {\n                label: tag.value,\n                color: isCustomized ? 'cyan' : 'blue',\n              },\n            ]}\n          />\n        ) : (\n          <Tag key={tag.key} color={isCustomized ? 'cyan' : 'blue'}>\n            <TextHighlighter keyword={highlightKeyword} key={index}>\n              {aliasedTag}\n            </TextHighlighter>\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","/**\n * @generated SignedSource<<c1c610dd0c0f2aca5aebe87816d8558b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type AliasedImageDoubleTagsFragment$data = {\n  readonly labels: ReadonlyArray<{\n    readonly key: string | null | undefined;\n    readonly value: string | null | undefined;\n  } | null | undefined> | null | undefined;\n  readonly tags: ReadonlyArray<{\n    readonly key: string | null | undefined;\n    readonly value: string | null | undefined;\n  } | null | undefined> | null | undefined;\n  readonly \" $fragmentType\": \"AliasedImageDoubleTagsFragment\";\n};\nexport type AliasedImageDoubleTagsFragment$key = {\n  readonly \" $data\"?: AliasedImageDoubleTagsFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"AliasedImageDoubleTagsFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"key\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"value\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"AliasedImageDoubleTagsFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KVPair\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"labels\",\n      \"plural\": true,\n      \"selections\": (v0/*: any*/),\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KVPair\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"tags\",\n      \"plural\": true,\n      \"selections\": (v0/*: any*/),\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ImageNode\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"2b63bd76dfdb73053e9561282c86cfaf\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7a2f9d1cd57d9fe6b07a51c64a7855e0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type CustomizedImageListForgetAndUntagMutation$variables = {\n  id: string;\n};\nexport type CustomizedImageListForgetAndUntagMutation$data = {\n  readonly forget_image_by_id: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n  readonly untag_image_from_registry: {\n    readonly msg: string | null | undefined;\n    readonly ok: boolean | null | undefined;\n  } | null | undefined;\n};\nexport type CustomizedImageListForgetAndUntagMutation = {\n  response: CustomizedImageListForgetAndUntagMutation$data;\n  variables: CustomizedImageListForgetAndUntagMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"image_id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"ok\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"msg\",\n    \"storageKey\": null\n  }\n],\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": (v1/*: any*/),\n    \"concreteType\": \"UntagImageFromRegistry\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"untag_image_from_registry\",\n    \"plural\": false,\n    \"selections\": (v2/*: any*/),\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": (v1/*: any*/),\n    \"concreteType\": \"ForgetImageById\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"forget_image_by_id\",\n    \"plural\": false,\n    \"selections\": (v2/*: any*/),\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"CustomizedImageListForgetAndUntagMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"CustomizedImageListForgetAndUntagMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"3d0221c84a9ba4d0ad6b24db69595451\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"CustomizedImageListForgetAndUntagMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation CustomizedImageListForgetAndUntagMutation(\\n  $id: String!\\n) {\\n  untag_image_from_registry(image_id: $id) {\\n    ok\\n    msg\\n  }\\n  forget_image_by_id(image_id: $id) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"834817943f871e95194a113d786f85a0\";\n\nexport default node;\n","/**\n * @generated SignedSource<<88e3f0edda76eaef9415cf9b5a734f70>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type CustomizedImageListQuery$variables = Record<PropertyKey, never>;\nexport type CustomizedImageListQuery$data = {\n  readonly customized_images: ReadonlyArray<{\n    readonly architecture: string | null | undefined;\n    readonly base_image_name: string | null | undefined;\n    readonly digest: string | null | undefined;\n    readonly humanized_name: string | null | undefined;\n    readonly id: string;\n    readonly labels: ReadonlyArray<{\n      readonly key: string | null | undefined;\n      readonly value: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly name: string | null | undefined;\n    readonly namespace: string | null | undefined;\n    readonly registry: string | null | undefined;\n    readonly supported_accelerators: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly tag: string | null | undefined;\n    readonly tags: ReadonlyArray<{\n      readonly key: string | null | undefined;\n      readonly value: string | null | undefined;\n    } | null | undefined> | null | undefined;\n    readonly version: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"AliasedImageDoubleTagsFragment\">;\n  } | null | undefined> | null | undefined;\n};\nexport type CustomizedImageListQuery = {\n  response: CustomizedImageListQuery$data;\n  variables: CustomizedImageListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"humanized_name\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"tag\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"registry\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"architecture\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"digest\",\n  \"storageKey\": null\n},\nv7 = [\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"key\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"value\",\n    \"storageKey\": null\n  }\n],\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"KVPair\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"labels\",\n  \"plural\": true,\n  \"selections\": (v7/*: any*/),\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"supported_accelerators\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"namespace\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"base_image_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"KVPair\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"tags\",\n  \"plural\": true,\n  \"selections\": (v7/*: any*/),\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"version\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"CustomizedImageListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ImageNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"customized_images\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"AliasedImageDoubleTagsFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"CustomizedImageListQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"ImageNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"customized_images\",\n        \"plural\": true,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"9d2e928aef36de71b7da3ce796f74e22\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"CustomizedImageListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query CustomizedImageListQuery {\\n  customized_images {\\n    id\\n    name @deprecatedSince(version: \\\"24.12.0\\\")\\n    humanized_name\\n    tag\\n    registry\\n    architecture\\n    digest\\n    labels {\\n      key\\n      value\\n    }\\n    supported_accelerators\\n    namespace @since(version: \\\"24.12.0\\\")\\n    base_image_name @since(version: \\\"24.12.0\\\")\\n    tags @since(version: \\\"24.12.0\\\") {\\n      key\\n      value\\n    }\\n    version @since(version: \\\"24.12.0\\\")\\n    ...AliasedImageDoubleTagsFragment\\n  }\\n}\\n\\nfragment AliasedImageDoubleTagsFragment on ImageNode {\\n  labels {\\n    key\\n    value\\n  }\\n  tags @since(version: \\\"24.12.0\\\") {\\n    key\\n    value\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e0ff40aaf7c9d5c859389b31cd6762a\";\n\nexport default node;\n","import { preserveDotStartCase } from '../helper';\nimport { useBackendAIImageMetaData } from '../hooks';\nimport DoubleTag, { DoubleTagObjectValue } from './DoubleTag';\nimport Flex from './Flex';\nimport { AliasedImageDoubleTagsFragment$key } from './__generated__/AliasedImageDoubleTagsFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface AliasedImageDoubleTagsProps extends DoubleTagObjectValue {\n  imageFrgmt?: AliasedImageDoubleTagsFragment$key | null;\n  highlightKeyword?: string;\n}\n\nconst AliasedImageDoubleTags: React.FC<AliasedImageDoubleTagsProps> = ({\n  imageFrgmt,\n  highlightKeyword,\n  ...doubleTagProps\n}) => {\n  const images = useFragment(\n    graphql`\n      fragment AliasedImageDoubleTagsFragment on ImageNode {\n        labels {\n          key\n          value\n        }\n        tags @since(version: \"24.12.0\") {\n          key\n          value\n        }\n      }\n    `,\n    imageFrgmt,\n  );\n  const [, { tagAlias }] = useBackendAIImageMetaData();\n\n  return (\n    <Flex direction=\"row\" align=\"start\" gap={'xxs'}>\n      {_.map(images?.tags, (tag: { key: string; value: string }) => {\n        const isCustomized = _.includes(tag.key, 'customized_');\n        // If the tag is customized, we need to find the corresponding label instead of using the tag value (hash).\n        const tagValue = isCustomized\n          ? _.find(images?.labels, {\n              key: 'ai.backend.customized-image.name',\n            })?.value\n          : tag.value;\n        const aliasedTag = tagAlias(tag.key + tagValue);\n        return _.isEqual(\n          aliasedTag,\n          preserveDotStartCase(tag.key + tagValue),\n        ) ? (\n          <DoubleTag\n            key={tag.key}\n            highlightKeyword={highlightKeyword}\n            values={[\n              {\n                label: tagAlias(tag.key),\n                color: isCustomized ? 'cyan' : doubleTagProps.color,\n              },\n              {\n                label: tagValue ?? '',\n                color: isCustomized ? 'cyan' : doubleTagProps.color,\n              },\n            ]}\n            {...doubleTagProps}\n          />\n        ) : (\n          <Tag\n            key={tag.key}\n            color={isCustomized ? 'cyan' : doubleTagProps.color}\n          >\n            {aliasedTag}\n          </Tag>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default AliasedImageDoubleTags;\n","import Flex from '../components/Flex';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport {\n  filterEmptyItem,\n  filterNonNullItems,\n  getImageFullName,\n  localeCompare,\n} from '../helper';\nimport {\n  useBackendAIImageMetaData,\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n} from '../hooks';\nimport AliasedImageDoubleTags from './AliasedImageDoubleTags';\nimport BAITable from './BAITable';\nimport { ImageTags } from './ImageTags';\nimport TextHighlighter from './TextHighlighter';\nimport { CustomizedImageListForgetAndUntagMutation } from './__generated__/CustomizedImageListForgetAndUntagMutation.graphql';\nimport {\n  CustomizedImageListQuery,\n  CustomizedImageListQuery$data,\n} from './__generated__/CustomizedImageListQuery.graphql';\nimport {\n  DeleteOutlined,\n  ReloadOutlined,\n  SearchOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useLocalStorageState } from 'ahooks';\nimport { App, Button, Input, Popconfirm, theme, Typography } from 'antd';\nimport { AnyObject } from 'antd/es/_util/type';\nimport { ColumnsType, ColumnType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  useMemo,\n  useState,\n  useTransition,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery, useMutation } from 'react-relay';\n\nexport type CommittedImage = NonNullable<\n  CustomizedImageListQuery$data['customized_images']\n>[number];\n\nconst CustomizedImageList: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n  const baiClient = useSuspendedBackendaiClient();\n  const supportExtendedImageInfo =\n    baiClient?.supports('extended-image-info') ?? false;\n\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [customizedImageListFetchKey, updateCustomizedImageListFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [inFlightImageId, setInFlightImageId] = useState<string>();\n  const [imageSearch, setImageSearch] = useState('');\n  const [isPendingSearchTransition, startSearchTransition] = useTransition();\n  const [, { getBaseVersion, getBaseImages, getBaseImage, tagAlias, getTags }] =\n    useBackendAIImageMetaData();\n\n  const { customized_images } = useLazyLoadQuery<CustomizedImageListQuery>(\n    graphql`\n      query CustomizedImageListQuery {\n        customized_images {\n          id\n          name @deprecatedSince(version: \"24.12.0\")\n          humanized_name\n          tag\n          registry\n          architecture\n          digest\n          labels {\n            key\n            value\n          }\n          supported_accelerators\n          namespace @since(version: \"24.12.0\")\n          base_image_name @since(version: \"24.12.0\")\n          tags @since(version: \"24.12.0\") {\n            key\n            value\n          }\n          version @since(version: \"24.12.0\")\n          ...AliasedImageDoubleTagsFragment\n        }\n      }\n    `,\n    {},\n    {\n      fetchPolicy:\n        customizedImageListFetchKey === 'initial-fetch'\n          ? 'store-and-network'\n          : 'network-only',\n      fetchKey: customizedImageListFetchKey,\n    },\n  );\n\n  const [commitForgetAndUntag, isInflightForgetAndUntag] =\n    useMutation<CustomizedImageListForgetAndUntagMutation>(graphql`\n      mutation CustomizedImageListForgetAndUntagMutation($id: String!) {\n        untag_image_from_registry(image_id: $id) {\n          ok\n          msg\n        }\n        forget_image_by_id(image_id: $id) {\n          ok\n          msg\n        }\n      }\n    `);\n\n  // Sort images by humanized_name to prevent the image list from jumping around when the images are updated\n  // TODO: after `images` query  supports sort order, we should remove this line\n  const defaultSortedImages = useMemo(\n    () => _.sortBy(customized_images, (image) => image?.humanized_name),\n    [customized_images],\n  );\n\n  const imageFilterValues = useMemo(() => {\n    return defaultSortedImages?.map((image) => {\n      return {\n        namespace: supportExtendedImageInfo ? image?.namespace : image?.name,\n        fullName: getImageFullName(image) || '',\n        digest: image?.digest || '',\n        // ------------ need only before 24.12.0 ------------\n        baseversion: getBaseVersion(getImageFullName(image) || ''),\n        baseimage:\n          image?.tag && image?.name ? getBaseImages(image.tag, image.name) : [],\n        tag:\n          getTags(\n            image?.tag || '',\n            image?.labels as Array<{ key: string; value: string }>,\n          ) || [],\n        isCustomized: image?.tag\n          ? image.tag.indexOf('customized') !== -1\n          : false,\n        // -------------------------------------------------\n        // ------------ need only after 24.12.0 ------------\n        baseImageName: supportExtendedImageInfo ? image?.base_image_name : '',\n        tags: supportExtendedImageInfo ? image?.tags : [],\n        version: supportExtendedImageInfo ? image?.version : '',\n        // -------------------------------------------------\n      };\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultSortedImages]);\n\n  const filteredImageData = useMemo(() => {\n    if (_.isEmpty(imageSearch)) return defaultSortedImages;\n    const regExp = new RegExp(`${_.escapeRegExp(imageSearch)}`, 'i');\n    return _.filter(defaultSortedImages, (image, idx) => {\n      return _.some(image, (value, key) => {\n        if (key === 'id') return false;\n        if (['digest', 'architecture', 'registry'].includes(key))\n          return regExp.test(_.toString(value));\n        const curFilterValues = imageFilterValues[idx] || {};\n        const baseVersionMatch = regExp.test(curFilterValues.baseversion);\n        const baseImagesMatch = _.some(curFilterValues.baseimage, (value) =>\n          regExp.test(value),\n        );\n        const tagMatch = _.some(\n          curFilterValues.tag,\n          (tag) => regExp.test(tag.key) || regExp.test(tag.value),\n        );\n        const customizedMatch = curFilterValues.isCustomized\n          ? regExp.test('customized')\n          : false;\n        const namespaceMatch = regExp.test(curFilterValues.namespace || '');\n        const fullNameMatch = regExp.test(curFilterValues.fullName);\n        const tagsMatch = _.some(\n          curFilterValues.tags,\n          (tag: { key: string; value: string }) =>\n            regExp.test(tag.key) || regExp.test(tag.value),\n        );\n        const versionMatch = regExp.test(curFilterValues.version || '');\n        const digestMatch = regExp.test(curFilterValues.digest);\n        return (\n          baseVersionMatch ||\n          baseImagesMatch ||\n          tagMatch ||\n          namespaceMatch ||\n          customizedMatch ||\n          fullNameMatch ||\n          tagsMatch ||\n          versionMatch ||\n          digestMatch\n        );\n      });\n    });\n  }, [imageSearch, imageFilterValues, defaultSortedImages]);\n\n  const columns: ColumnsType<CommittedImage> = filterEmptyItem([\n    {\n      title: t('environment.FullImagePath'),\n      key: 'fullImagePath',\n      render: (row) => (\n        <Typography.Text\n          copyable={{\n            text: getImageFullName(row) || '',\n          }}\n        >\n          <TextHighlighter keyword={imageSearch}>\n            {getImageFullName(row) || ''}\n          </TextHighlighter>\n        </Typography.Text>\n      ),\n      sorter: (a, b) => localeCompare(getImageFullName(a), getImageFullName(b)),\n      width: token.screenXS,\n    },\n    {\n      title: t('environment.Registry'),\n      dataIndex: 'registry',\n      key: 'registry',\n      sorter: (a, b) => localeCompare(a?.registry, b?.registry),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    {\n      title: t('environment.Architecture'),\n      dataIndex: 'architecture',\n      key: 'architecture',\n      sorter: (a, b) => localeCompare(a?.architecture, b?.architecture),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Namespace'),\n      key: 'namespace',\n      dataIndex: 'namespace',\n      sorter: (a, b) => localeCompare(a?.namespace, b?.namespace),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.BaseImageName'),\n      key: 'base_image_name',\n      dataIndex: 'base_image_name',\n      sorter: (a, b) => localeCompare(a?.base_image_name, b?.base_image_name),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>\n          {tagAlias(text)}\n        </TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Version'),\n      key: 'version',\n      dataIndex: 'version',\n      sorter: (a, b) => localeCompare(a?.version, b?.version),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    supportExtendedImageInfo && {\n      title: t('environment.Tags'),\n      key: 'tags',\n      dataIndex: 'tags',\n      render: (text: Array<{ key: string; value: string }>, row) => (\n        <AliasedImageDoubleTags\n          imageFrgmt={row}\n          highlightKeyword={imageSearch}\n          label={''}\n        />\n      ),\n    },\n\n    !supportExtendedImageInfo && {\n      title: t('environment.Namespace'),\n      key: 'name',\n      dataIndex: 'name',\n      sorter: (a, b) => localeCompare(getImageFullName(a), getImageFullName(b)),\n      render: (text) => (\n        <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Version'),\n      key: 'baseversion',\n      dataIndex: 'baseversion',\n      sorter: (a, b) =>\n        localeCompare(\n          getBaseVersion(getImageFullName(a) || ''),\n          getBaseVersion(getImageFullName(b) || ''),\n        ),\n      render: (text, row) => (\n        <TextHighlighter keyword={imageSearch}>\n          {getBaseVersion(getImageFullName(row) || '')}\n        </TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Base'),\n      key: 'baseimage',\n      dataIndex: 'baseimage',\n      sorter: (a, b) =>\n        localeCompare(\n          getBaseImage(getImageFullName(a) || ''),\n          getBaseImage(getImageFullName(b) || ''),\n        ),\n      render: (text, row) => (\n        <TextHighlighter keyword={imageSearch}>\n          {tagAlias(getBaseImage(getImageFullName(row) || ''))}\n        </TextHighlighter>\n      ),\n    },\n    !supportExtendedImageInfo && {\n      title: t('environment.Tags'),\n      key: 'tag',\n      dataIndex: 'tag',\n      sorter: (a, b) => localeCompare(a?.tag, b?.tag),\n      render: (text, row) => (\n        <ImageTags\n          tag={text}\n          labels={row?.labels as Array<{ key: string; value: string }>}\n          highlightKeyword={imageSearch}\n        />\n      ),\n    },\n    {\n      title: t('environment.Digest'),\n      dataIndex: 'digest',\n      key: 'digest',\n      sorter: (a, b) => localeCompare(a?.digest, b?.digest),\n      render: (text) => (\n        <Typography.Text ellipsis={{ tooltip: true }} style={{ maxWidth: 200 }}>\n          <TextHighlighter keyword={imageSearch}>{text}</TextHighlighter>\n        </Typography.Text>\n      ),\n    },\n    {\n      title: t('general.Control'),\n      key: 'control',\n      fixed: 'right',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\" justify=\"center\" gap=\"xxs\">\n          <Popconfirm\n            title={t('dialog.ask.DoYouWantToProceed')}\n            description={t('dialog.warning.CannotBeUndone')}\n            okType=\"danger\"\n            okText={t('button.Delete')}\n            onConfirm={() => {\n              if (row?.id) {\n                setInFlightImageId(row.id + customizedImageListFetchKey);\n                commitForgetAndUntag({\n                  variables: {\n                    id: row.id,\n                  },\n                  onCompleted(res, errors) {\n                    if (!res?.forget_image_by_id?.ok) {\n                      message.error(res?.forget_image_by_id?.msg);\n                      return;\n                    } else if (!res?.untag_image_from_registry?.ok) {\n                      message.error(res?.untag_image_from_registry?.msg);\n                      return;\n                    } else if (errors && errors?.length > 0) {\n                      const errorMsgList = _.map(\n                        errors,\n                        (error) => error.message,\n                      );\n                      for (const error of errorMsgList) {\n                        message.error(error, 2.5);\n                      }\n                    } else {\n                      startRefetchTransition(() => {\n                        updateCustomizedImageListFetchKey();\n                      });\n                      message.success(\n                        t('environment.CustomizedImageSuccessfullyDeleted'),\n                      );\n                    }\n                  },\n                  onError(err) {\n                    message.error(err?.message);\n                  },\n                });\n              }\n            }}\n          >\n            <Button\n              type=\"text\"\n              icon={<DeleteOutlined />}\n              danger\n              loading={\n                isInflightForgetAndUntag &&\n                inFlightImageId === row?.id + customizedImageListFetchKey\n              }\n              disabled={\n                isInflightForgetAndUntag &&\n                inFlightImageId !== row?.id + customizedImageListFetchKey\n              }\n            />\n          </Popconfirm>\n        </Flex>\n      ),\n    },\n  ]);\n\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.CustomizedImageList.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\" gap={'xs'}>\n      <Flex direction=\"column\" align=\"stretch\">\n        <Flex justify=\"end\" style={{ padding: token.paddingSM }} gap=\"xs\">\n          <Input\n            allowClear\n            prefix={<SearchOutlined />}\n            placeholder={t('environment.SearchImages')}\n            onChange={(e) => {\n              startSearchTransition(() => setImageSearch(e.target.value));\n            }}\n            style={{\n              width: 200,\n            }}\n          />\n          <Button\n            icon={<ReloadOutlined />}\n            loading={isRefetchPending}\n            onClick={() => {\n              startRefetchTransition(() => updateCustomizedImageListFetchKey());\n            }}\n          >\n            {t('button.Refresh')}\n          </Button>\n        </Flex>\n        <BAITable\n          resizable\n          loading={isPendingSearchTransition}\n          columns={\n            columns.filter((column) =>\n              displayedColumnKeys?.includes(_.toString(column.key)),\n            ) as ColumnType<AnyObject>[]\n          }\n          dataSource={filterNonNullItems(filteredImageData)}\n          rowKey=\"id\"\n          scroll={{ x: 'max-content' }}\n          pagination={false}\n        />\n        <Flex\n          justify=\"end\"\n          style={{\n            padding: token.paddingXXS,\n          }}\n        >\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            onClick={() => {\n              setIsOpenColumnsSetting(true);\n            }}\n          />\n        </Flex>\n      </Flex>\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(!isOpenColumnsSetting);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </Flex>\n  );\n};\n\nexport default CustomizedImageList;\n","import CustomizedImageList from '../components/CustomizedImageList';\nimport FlexActivityIndicator from '../components/FlexActivityIndicator';\nimport Card from 'antd/es/card/Card';\nimport { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StringParam, useQueryParam, withDefault } from 'use-query-params';\n\nconst tabParam = withDefault(StringParam, 'image');\n\nconst MyEnvironmentPage = () => {\n  const { t } = useTranslation();\n  const [curTabKey, setCurTabKey] = useQueryParam('tab', tabParam);\n\n  return (\n    <Card\n      activeTabKey={curTabKey}\n      onTabChange={setCurTabKey}\n      tabList={[\n        {\n          key: 'image',\n          label: t('environment.Images'),\n        },\n      ]}\n      styles={{\n        body: {\n          padding: 0,\n          paddingTop: 1,\n          overflow: 'hidden',\n        },\n      }}\n    >\n      <Suspense\n        fallback={\n          <FlexActivityIndicator\n            style={{ height: 'calc(100vh - 145px)' }}\n            spinSize=\"large\"\n          />\n        }\n      >\n        {curTabKey === 'image' && <CustomizedImageList />}\n      </Suspense>\n    </Card>\n  );\n};\n\nexport default MyEnvironmentPage;\n"],"names":["useStyles","createStyles","_ref","token","css","resizableTable","ResizableTitle","props","onResize","width","onClick","restProps","wrapRef","useRef","isResizing","setIsResizing","useState","debouncedIsResizing","useDebounce","wait","useEffect","current","_","undefined","size","offsetWidth","height","offsetHeight","node","handle","_jsx","ref","Resizable","className","e","stopPropagation","onResizeStart","onResizeStop","draggableOpts","enableUserSelectHack","children","preventDefault","columnKeyOrIndexKey","column","index","key","_ref2","resizable","columns","components","tableProps","styles","resizedColumnWidths","setResizedColumnWidths","widths","generateResizedColumnWidths","mergedColumns","useMemo","onHeaderCell","_ref3","prev","Table","sortDirections","showSorterTooltip","header","cell","objectValues","values","highlightKeyword","length","React","map","value","label","color","Flex","direction","objValue","idx","Tag","style","margin","marginRight","TextHighlighter","keyword","ImageAliasNameAndBaseVersionTags","image","getImageAliasName","getBaseVersion","tagAlias","useBackendAIImageMetaData","DoubleTag","BaseImageTags","getBaseImage","ArchitectureTags","_ref4","getArchitecture","SessionKernelTags","_ref7","bordered","_jsxs","_Fragment","ImageTags","_ref8","tag","labels","getTags","tags","align","isCustomized","aliasedTag","preserveDotStartCase","open","onRequestClose","displayedColumnKeys","modalProps","formRef","t","useTranslation","theme","useToken","columnOptions","title","element","child","BAIModal","destroyOnClose","centered","onOk","_formRef$current","validateFields","then","catch","onCancel","Form","preserve","initialValues","selectedColumnKeys","columnOption","layout","Item","name","marginBottom","Input","prefix","SearchOutlined","marginSM","placeholder","noStyle","shouldUpdate","cur","searchInput","getFieldValue","searchKeyword","filteredColumns","includes","display","overflowY","Checkbox","Group","options","flexDirection","v0","hash","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","imageFrgmt","doubleTagProps","images","useFragment","_AliasedImageDoubleTagsFragment","require","gap","_$find","tagValue","_baiClient$supports","message","App","useApp","baiClient","useSuspendedBackendaiClient","supportExtendedImageInfo","supports","isOpenColumnsSetting","setIsOpenColumnsSetting","isRefetchPending","startRefetchTransition","useTransition","customizedImageListFetchKey","updateCustomizedImageListFetchKey","useUpdatableState","inFlightImageId","setInFlightImageId","imageSearch","setImageSearch","isPendingSearchTransition","startSearchTransition","getBaseImages","customized_images","useLazyLoadQuery","_CustomizedImageListQuery","fetchPolicy","fetchKey","commitForgetAndUntag","isInflightForgetAndUntag","useMutation","_CustomizedImageListForgetAndUntagMutation","defaultSortedImages","humanized_name","imageFilterValues","namespace","fullName","getImageFullName","digest","baseversion","baseimage","indexOf","baseImageName","base_image_name","version","filteredImageData","regExp","RegExp","test","curFilterValues","baseVersionMatch","baseImagesMatch","tagMatch","customizedMatch","namespaceMatch","fullNameMatch","tagsMatch","versionMatch","digestMatch","filterEmptyItem","render","row","Typography","Text","copyable","text","sorter","a","b","localeCompare","screenXS","dataIndex","registry","architecture","AliasedImageDoubleTags","ellipsis","tooltip","maxWidth","fixed","justify","Popconfirm","description","okType","okText","onConfirm","id","variables","onCompleted","res","errors","_res$forget_image_by_","_res$untag_image_from","_res$forget_image_by_2","_res$untag_image_from2","forget_image_by_id","ok","untag_image_from_registry","errorMsgList","error","success","msg","onError","err","Button","type","icon","DeleteOutlined","danger","loading","disabled","setDisplayedColumnKeys","useLocalStorageState","defaultValue","padding","paddingSM","allowClear","onChange","target","ReloadOutlined","BAITable","filter","dataSource","filterNonNullItems","rowKey","scroll","x","pagination","paddingXXS","SettingOutlined","TableColumnsSettingModal","tabParam","withDefault","StringParam","MyEnvironmentPage","curTabKey","setCurTabKey","useQueryParam","Card","activeTabKey","onTabChange","tabList","body","paddingTop","overflow","Suspense","fallback","FlexActivityIndicator","spinSize","CustomizedImageList"],"sourceRoot":""}