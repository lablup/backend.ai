{"version":3,"file":"static/js/4582.3ff117d5.chunk.js","mappings":"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","sources":["components/ComputeSessionNodeItems/ContainerLogModal.tsx","hooks/useMemoWithPrevious.tsx","components/ComputeSessionNodeItems/__generated__/AppLauncherModalFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/AppLauncherModalLegacyFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/ConnectedKernelListLegacyQuery.graphql.ts","components/ComputeSessionNodeItems/__generated__/ConnectedKernelListQuery.graphql.ts","components/ComputeSessionNodeItems/__generated__/ContainerCommitModalFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/ContainerLogModalFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/EditableSessionNameDuplicatedCheckQuery.graphql.ts","components/ComputeSessionNodeItems/__generated__/EditableSessionNameFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/EditableSessionNameRefetchQuery.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionActionButtonsFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionActionButtonsLegacyFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionIdleChecksFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionIdleChecksNodeFragment.graphql.ts","components/ComputeSessionNodeItems/__generated__/SessionTypeTagFragment.graphql.ts","components/ComputeSessionNodeItems/ConnectedKernelList.tsx","components/ComputeSessionNodeItems/EditableSessionName.tsx","components/BAIIcons/App.svg","components/BAIIcons/AppIcon.tsx","components/BAIIcons/ContainerCommit.svg","components/BAIIcons/ContainerCommitIcon.tsx","components/BAIIcons/SessionLog.svg","components/BAIIcons/SessionLogIcon.tsx","components/BAIIcons/TerminalApp.svg","components/BAIIcons/TerminalAppIcon.tsx","components/BAIIcons/Terminate.svg","components/BAIIcons/TerminateIcon.tsx","components/ComputeSessionNodeItems/AppLauncherModal.tsx","hooks/useSuspendedFilteredAppTemplate.ts","components/ComputeSessionNodeItems/ContainerCommitModal.tsx","components/ComputeSessionNodeItems/SessionActionButtons.tsx","hooks/useBackendAIAppLauncher.tsx","components/ComputeSessionNodeItems/SessionIdleChecks.tsx","components/ComputeSessionNodeItems/SessionTypeTag.tsx","components/FolderLink.tsx","components/IdleCheckDescriptionModal.tsx","components/SessionDetailContent.tsx","components/SessionDetailDrawer.tsx","components/__generated__/FolderLink_vfolderNode.graphql.ts","components/__generated__/SessionDetailContentLegacyQuery.graphql.ts","components/__generated__/SessionDetailContentQuery.graphql.ts","helper/csv-util.ts"],"sourcesContent":["import { downloadBlob } from '../../helper/csv-util';\nimport { useSuspendedBackendaiClient } from '../../hooks';\nimport { useCurrentUserRole } from '../../hooks/backendai';\nimport { useTanQuery } from '../../hooks/reactQueryAlias';\nimport { useMemoWithPrevious } from '../../hooks/useMemoWithPrevious';\nimport BAIModal, { BAIModalProps } from '../BAIModal';\nimport BAISelect from '../BAISelect';\nimport Flex from '../Flex';\nimport { ContainerLogModalFragment$key } from './__generated__/ContainerLogModalFragment.graphql';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { LazyLog, ScrollFollow } from '@melloware/react-logviewer';\nimport { Button, Divider, Grid, theme, Tooltip, Typography } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { DownloadIcon } from 'lucide-react';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ContainerLogModalProps extends BAIModalProps {\n  sessionFrgmt: ContainerLogModalFragment$key | null;\n  defaultKernelId?: string;\n}\n\nconst ContainerLogModal: React.FC<ContainerLogModalProps> = ({\n  sessionFrgmt,\n  defaultKernelId,\n  ...modalProps\n}) => {\n  const baiClient = useSuspendedBackendaiClient();\n  const { token } = theme.useToken();\n  const userRole = useCurrentUserRole();\n\n  const session = useFragment(\n    graphql`\n      fragment ContainerLogModalFragment on ComputeSessionNode {\n        id\n        row_id @required(action: NONE)\n        name\n        status\n        access_key\n        kernel_nodes {\n          edges {\n            node {\n              id\n              row_id\n              container_id\n              cluster_idx\n              cluster_role\n            }\n          }\n        }\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  const kernelNodes = session?.kernel_nodes?.edges?.map((e) => e?.node) || [];\n  const [selectedKernelId, setSelectedKernelId] = useState(\n    defaultKernelId ||\n      _.find(kernelNodes, (e) => e?.cluster_role === 'main')?.row_id ||\n      kernelNodes[0]?.row_id,\n  );\n\n  useEffect(() => {\n    if (modalProps.open === false) {\n      setSelectedKernelId(undefined);\n    }\n  }, [modalProps.open]);\n\n  // Currently we can only fetch full logs\n  // const [logSize, setLogSize] = useState<100|'full'>('full');\n  const {\n    data: logs,\n    refetch,\n    isPending,\n    isRefetching,\n    dataUpdatedAt,\n  } = useTanQuery<string>({\n    queryKey: [\n      'containerLog',\n      session?.row_id,\n      session?.access_key,\n      selectedKernelId,\n      modalProps.open,\n    ],\n    queryFn: async () => {\n      if (\n        !modalProps.open ||\n        !session?.row_id ||\n        !session?.access_key ||\n        !selectedKernelId\n      ) {\n        return '';\n      }\n      return await baiClient\n        .get_logs(session?.row_id, session?.access_key, selectedKernelId, 15000)\n        .then((req: any) => req.result.logs);\n    },\n    staleTime: 5000,\n  });\n\n  // let queryParams: Array<string> = [];\n  // if (session?.access_key != null) {\n  //   queryParams.push(`owner_access_key=${session.access_key}`);\n  // }\n  // if (baiClient.supports('per-kernel-logs') && selectedKernelId !== null) {\n  //   queryParams.push(`kernel_id=${selectedKernelId}`);\n  // }\n  // let queryString = `/session/${session?.row_id}/logs`;\n  // if (queryParams.length > 0) {\n  //   queryString += `?${queryParams.join('&')}`;\n  // }\n  // // const url = `${baiClient._endpoint}${queryString}`\n\n  // const signed = baiClient.newSignedRequest('GET', queryString, null);\n  // console.log(signed)\n  // console.log(signed.uri);\n\n  const [lastLineNumbers, { resetPrevious: resetPreviousLineNumber }] =\n    useMemoWithPrevious(() => logs?.split('\\n').length || 0, [logs]);\n\n  const { md } = Grid.useBreakpoint();\n  const { t } = useTranslation();\n\n  return (\n    <BAIModal\n      title={\n        <Flex style={{ maxWidth: '100%' }} gap={'sm'}>\n          <Typography.Title level={4} style={{ margin: 0, flexShrink: 0 }}>\n            Logs\n          </Typography.Title>\n          {session ? (\n            <>\n              <Typography.Text style={{ fontWeight: 'normal' }} ellipsis>\n                {session?.name}\n              </Typography.Text>\n              <Typography.Text\n                style={{ fontWeight: 'normal', fontFamily: 'monospace' }}\n                copyable={{\n                  text: session?.row_id,\n                  tooltips: t('button.CopySomething', {\n                    name: t('session.SessionId'),\n                  }),\n                }}\n              >\n                ({md ? session?.row_id : session?.row_id.split('-')?.[0]})\n              </Typography.Text>\n            </>\n          ) : null}\n        </Flex>\n      }\n      width={'100%'}\n      styles={{\n        header: {\n          width: '100%',\n        },\n        body: {\n          height: 'calc(100vh - 100px)',\n          maxHeight: 'calc(100vh - 100px)',\n        },\n      }}\n      {...modalProps}\n      footer={null}\n      destroyOnClose\n    >\n      <Flex\n        direction=\"column\"\n        align=\"start\"\n        style={{ height: '100%' }}\n        gap={'sm'}\n      >\n        <Flex gap=\"sm\" wrap=\"wrap\">\n          Kernel Role\n          <BAISelect\n            value={selectedKernelId}\n            onChange={(value) => {\n              setSelectedKernelId(value);\n              resetPreviousLineNumber();\n            }}\n            autoSelectOption\n            options={_.chain(session?.kernel_nodes?.edges)\n              .sortBy((e) => `${e?.node?.cluster_role} ${e?.node?.cluster_idx}`)\n              .map((e) => {\n                return {\n                  label: (\n                    <>\n                      {e?.node?.cluster_role}\n                      {e?.node?.cluster_role !== 'main'\n                        ? e?.node?.cluster_idx\n                        : ''}\n                      {userRole === 'admin' || userRole === 'superadmin' ? (\n                        <Typography.Text\n                          style={{\n                            fontFamily: 'monospace',\n                            fontSize: token.fontSizeSM,\n                          }}\n                          type=\"secondary\"\n                        >\n                          ({(e?.node?.row_id || '').substring(0, 5)})\n                        </Typography.Text>\n                      ) : null}\n                    </>\n                  ),\n                  value: e?.node?.row_id,\n                };\n              })\n              .value()}\n          />\n          <Divider type=\"vertical\" />\n          {/* Request logs\n          <Select\n            value={logSize}\n            options={[\n              {\n                label: 'last 100 lines',\n                value: 100,\n              },\n              {\n                label: 'Full logs',\n                value: 'full',\n              },\n            ]}\n            onChange={(value) => { \n              setLogSize(value);\n              if(value!=='full'){\n                resetPreviousLineNumber();\n              }\n              refetch();\n            }}\n          ></Select> */}\n          <Tooltip title={t('button.Download')}>\n            <Button\n              size=\"middle\"\n              icon={<DownloadIcon />}\n              disabled={isPending || isRefetching}\n              onClick={() => {\n                const blob = new Blob([logs || ''], { type: 'text/plain' });\n                downloadBlob(\n                  blob,\n                  `${session?.name || 'session'}-logs-${selectedKernelId}-${new Date().toISOString()}.txt`,\n                );\n              }}\n            />\n          </Tooltip>\n          <Tooltip title={t('button.Refresh')}>\n            <Button\n              size=\"middle\"\n              loading={isPending || isRefetching}\n              icon={<ReloadOutlined />}\n              onClick={() => refetch()}\n            />\n          </Tooltip>\n        </Flex>\n\n        <div\n          style={{\n            height: 'calc(100% - 50px)',\n            alignSelf: 'stretch',\n\n            border: `1px solid ${token.colorBorder}`,\n            overflow: 'hidden',\n          }}\n        >\n          <ScrollFollow\n            key={dataUpdatedAt} // to scroll to bottom on new data\n            startFollowing={true}\n            render={({ follow, onScroll }) => (\n              <LazyLog\n                caseInsensitive\n                enableSearch\n                enableSearchNavigation\n                selectableLines\n                text={logs || ''}\n                highlight={lastLineNumbers.previous}\n                extraLines={1}\n                // url={signed.uri}\n                // fetchOptions={\n                //   {\n                //     headers: signed.headers\n                //   }\n                // }\n                // stream\n                follow={follow}\n                onScroll={onScroll}\n              />\n            )}\n          />\n        </div>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ContainerLogModal;\n","import { DependencyList, useEffect, useMemo, useRef, useState } from 'react';\n\nexport const useMemoWithPrevious = <T,>(\n  factory: () => T,\n  deps: DependencyList,\n  { initialPrev }: { initialPrev?: T } | undefined = {},\n) => {\n  const prevRef = useRef(initialPrev);\n  const [prevResetKey, setPrevResetKey] = useState({});\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const current = useMemo(factory, deps);\n  const memoizedPrev = useMemo(() => {\n    return prevRef.current;\n    // Only update when the reset key changes and deps change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...deps, prevResetKey]);\n\n  useEffect(() => {\n    prevRef.current = current;\n    // Only update when deps change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return [\n    {\n      previous: memoizedPrev,\n      current: current,\n    },\n    {\n      resetPrevious: () => {\n        prevRef.current = initialPrev;\n        setPrevResetKey({});\n      },\n    },\n  ] as const;\n};\n","/**\n * @generated SignedSource<<f4736197da96ddc6dd289197f03fe537>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type AppLauncherModalFragment$data = {\n  readonly access_key: string | null | undefined;\n  readonly id: string;\n  readonly row_id: string | null | undefined;\n  readonly service_ports: string | null | undefined;\n  readonly \" $fragmentType\": \"AppLauncherModalFragment\";\n};\nexport type AppLauncherModalFragment$key = {\n  readonly \" $data\"?: AppLauncherModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"AppLauncherModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"AppLauncherModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"row_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"service_ports\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"access_key\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"5851a2f65c24221db8a7dddee2487e40\";\n\nexport default node;\n","/**\n * @generated SignedSource<<789923458067fc583c416245fc24a2d5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type AppLauncherModalLegacyFragment$data = {\n  readonly access_key: string | null | undefined;\n  readonly id: string | null | undefined;\n  readonly service_ports: string | null | undefined;\n  readonly session_id: string | null | undefined;\n  readonly \" $fragmentType\": \"AppLauncherModalLegacyFragment\";\n};\nexport type AppLauncherModalLegacyFragment$key = {\n  readonly \" $data\"?: AppLauncherModalLegacyFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"AppLauncherModalLegacyFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"AppLauncherModalLegacyFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"service_ports\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"access_key\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSession\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"bddd947be7d376d760a70160a4d2c62a\";\n\nexport default node;\n","/**\n * @generated SignedSource<<3f8f52376ee43b7f6e40e2c8e635528c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type ConnectedKernelListLegacyQuery$variables = {\n  uuid: string;\n};\nexport type ConnectedKernelListLegacyQuery$data = {\n  readonly session_for_project_id: {\n    readonly group_id: string | null | undefined;\n  } | null | undefined;\n};\nexport type ConnectedKernelListLegacyQuery = {\n  response: ConnectedKernelListLegacyQuery$data;\n  variables: ConnectedKernelListLegacyQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"uuid\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"uuid\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"group_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ConnectedKernelListLegacyQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session_for_project_id\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ConnectedKernelListLegacyQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session_for_project_id\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"b8db3f5005362f059f55439e393c1838\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ConnectedKernelListLegacyQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ConnectedKernelListLegacyQuery(\\n  $uuid: UUID!\\n) {\\n  session_for_project_id: compute_session(id: $uuid) {\\n    group_id\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"19ed5dde0fb95d8ff8cfbe9114129348\";\n\nexport default node;\n","/**\n * @generated SignedSource<<676e296fd74bb4228ee0d8fd7224b997>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ConnectedKernelListQuery$variables = {\n  id: any;\n  project_id: string;\n};\nexport type ConnectedKernelListQuery$data = {\n  readonly session: {\n    readonly kernel_nodes: {\n      readonly count: number | null | undefined;\n      readonly edges: ReadonlyArray<{\n        readonly node: {\n          readonly agent_id: string | null | undefined;\n          readonly cluster_role: string | null | undefined;\n          readonly container_id: string | null | undefined;\n          readonly id: string;\n          readonly row_id: string | null | undefined;\n          readonly status: string | null | undefined;\n          readonly status_info: string | null | undefined;\n        } | null | undefined;\n      } | null | undefined>;\n    } | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerLogModalFragment\">;\n  } | null | undefined;\n};\nexport type ConnectedKernelListQuery = {\n  response: ConnectedKernelListQuery$data;\n  variables: ConnectedKernelListQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"project_id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project_id\",\n    \"variableName\": \"project_id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"row_id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"cluster_role\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status_info\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"agent_id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"container_id\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"count\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ConnectedKernelListQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_node\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"KernelConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"kernel_nodes\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"KernelEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"KernelNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v2/*: any*/),\n                      (v3/*: any*/),\n                      (v4/*: any*/),\n                      (v5/*: any*/),\n                      (v6/*: any*/),\n                      (v7/*: any*/),\n                      (v8/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              (v9/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ContainerLogModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ConnectedKernelListQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_node\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"KernelConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"kernel_nodes\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"KernelEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"KernelNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v2/*: any*/),\n                      (v3/*: any*/),\n                      (v4/*: any*/),\n                      (v5/*: any*/),\n                      (v6/*: any*/),\n                      (v7/*: any*/),\n                      (v8/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cluster_idx\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              (v9/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"name\",\n            \"storageKey\": null\n          },\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"access_key\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"2e6cc39dd042b4d260abf65705f92cb5\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ConnectedKernelListQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ConnectedKernelListQuery(\\n  $id: GlobalIDField!\\n  $project_id: UUID!\\n) {\\n  session: compute_session_node(id: $id, project_id: $project_id) {\\n    kernel_nodes {\\n      edges {\\n        node {\\n          id\\n          row_id\\n          cluster_role\\n          status\\n          status_info\\n          agent_id\\n          container_id\\n        }\\n      }\\n      count\\n    }\\n    ...ContainerLogModalFragment\\n    id\\n  }\\n}\\n\\nfragment ContainerLogModalFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  name\\n  status\\n  access_key\\n  kernel_nodes {\\n    edges {\\n      node {\\n        id\\n        row_id\\n        container_id\\n        cluster_idx\\n        cluster_role\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d7ddfbcf29d38fad8451d13a176ce279\";\n\nexport default node;\n","/**\n * @generated SignedSource<<721760bfe80bc9847bfc13852c1b5a15>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ContainerCommitModalFragment$data = {\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly row_id: string;\n  readonly \" $fragmentType\": \"ContainerCommitModalFragment\";\n} | null | undefined;\nexport type ContainerCommitModalFragment$key = {\n  readonly \" $data\"?: ContainerCommitModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerCommitModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ContainerCommitModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"row_id\",\n        \"storageKey\": null\n      },\n      \"action\": \"NONE\"\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"8bcd294de1ffd3f00f6ec0ed7177c304\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5b31d3a47985555f77ecf0a175331530>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ContainerLogModalFragment$data = {\n  readonly access_key: string | null | undefined;\n  readonly id: string;\n  readonly kernel_nodes: {\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly cluster_idx: number | null | undefined;\n        readonly cluster_role: string | null | undefined;\n        readonly container_id: string | null | undefined;\n        readonly id: string;\n        readonly row_id: string | null | undefined;\n      } | null | undefined;\n    } | null | undefined>;\n  } | null | undefined;\n  readonly name: string | null | undefined;\n  readonly row_id: string;\n  readonly status: string | null | undefined;\n  readonly \" $fragmentType\": \"ContainerLogModalFragment\";\n} | null | undefined;\nexport type ContainerLogModalFragment$key = {\n  readonly \" $data\"?: ContainerLogModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ContainerLogModalFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"row_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ContainerLogModalFragment\",\n  \"selections\": [\n    (v0/*: any*/),\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": (v1/*: any*/),\n      \"action\": \"NONE\"\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"access_key\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"KernelConnection\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"kernel_nodes\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"KernelEdge\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"edges\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"KernelNode\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"node\",\n              \"plural\": false,\n              \"selections\": [\n                (v0/*: any*/),\n                (v1/*: any*/),\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"container_id\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"cluster_idx\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"cluster_role\",\n                  \"storageKey\": null\n                }\n              ],\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"59dda81185d3d874cd635adcae2ae9d4\";\n\nexport default node;\n","/**\n * @generated SignedSource<<a7a9851122926f4ffb9fecf6a677d426>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type EditableSessionNameDuplicatedCheckQuery$variables = {\n  filter?: string | null | undefined;\n  projectId: string;\n};\nexport type EditableSessionNameDuplicatedCheckQuery$data = {\n  readonly compute_session_nodes: {\n    readonly count: number | null | undefined;\n  } | null | undefined;\n};\nexport type EditableSessionNameDuplicatedCheckQuery = {\n  response: EditableSessionNameDuplicatedCheckQuery$data;\n  variables: EditableSessionNameDuplicatedCheckQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectId\"\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"filter\",\n        \"variableName\": \"filter\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"project_id\",\n        \"variableName\": \"projectId\"\n      }\n    ],\n    \"concreteType\": \"ComputeSessionConnection\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"compute_session_nodes\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"count\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EditableSessionNameDuplicatedCheckQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EditableSessionNameDuplicatedCheckQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"ce3849a33aefe8ee28e3b0c421c9e88a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EditableSessionNameDuplicatedCheckQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EditableSessionNameDuplicatedCheckQuery(\\n  $projectId: UUID!\\n  $filter: String\\n) {\\n  compute_session_nodes(project_id: $projectId, filter: $filter) {\\n    count\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"6d2fa3588d8065b057cd83aa0278d840\";\n\nexport default node;\n","/**\n * @generated SignedSource<<2966b965c5a39abf1f5fe5121ba20420>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EditableSessionNameFragment$data = {\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly priority: number | null | undefined;\n  readonly row_id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly user_id: string | null | undefined;\n  readonly \" $fragmentType\": \"EditableSessionNameFragment\";\n};\nexport type EditableSessionNameFragment$key = {\n  readonly \" $data\"?: EditableSessionNameFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EditableSessionNameFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EditableSessionNameFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"row_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"priority\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"9c053b92b568a9b132f7615d1869f32b\";\n\nexport default node;\n","/**\n * @generated SignedSource<<09191658c6897cad83ef90903e26484e>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type EditableSessionNameRefetchQuery$variables = {\n  project_id: string;\n  sessionId: any;\n};\nexport type EditableSessionNameRefetchQuery$data = {\n  readonly compute_session_node: {\n    readonly id: string;\n    readonly name: string | null | undefined;\n  } | null | undefined;\n};\nexport type EditableSessionNameRefetchQuery = {\n  response: EditableSessionNameRefetchQuery$data;\n  variables: EditableSessionNameRefetchQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"sessionId\"\n},\nv2 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"id\",\n        \"variableName\": \"sessionId\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"project_id\",\n        \"variableName\": \"project_id\"\n      }\n    ],\n    \"concreteType\": \"ComputeSessionNode\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"compute_session_node\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EditableSessionNameRefetchQuery\",\n    \"selections\": (v2/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EditableSessionNameRefetchQuery\",\n    \"selections\": (v2/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"8b69af7860896e4611f1af57de4220c8\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EditableSessionNameRefetchQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EditableSessionNameRefetchQuery(\\n  $sessionId: GlobalIDField!\\n  $project_id: UUID!\\n) {\\n  compute_session_node(id: $sessionId, project_id: $project_id) {\\n    id\\n    name\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"8c0f641cc3f0f3d44322877d137c6fcf\";\n\nexport default node;\n","/**\n * @generated SignedSource<<ed8d22e5faf96f259b3a4c2cfee5a5ae>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionActionButtonsFragment$data = {\n  readonly access_key: string | null | undefined;\n  readonly commit_status: string | null | undefined;\n  readonly id: string;\n  readonly row_id: string;\n  readonly service_ports: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly type: string | null | undefined;\n  readonly user_id: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"AppLauncherModalFragment\" | \"ContainerCommitModalFragment\" | \"ContainerLogModalFragment\" | \"TerminateSessionModalFragment\">;\n  readonly \" $fragmentType\": \"SessionActionButtonsFragment\";\n} | null | undefined;\nexport type SessionActionButtonsFragment$key = {\n  readonly \" $data\"?: SessionActionButtonsFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionActionButtonsFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionActionButtonsFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"kind\": \"RequiredField\",\n      \"field\": {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"row_id\",\n        \"storageKey\": null\n      },\n      \"action\": \"NONE\"\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"type\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"access_key\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"service_ports\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"commit_status\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"user_id\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"TerminateSessionModalFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"ContainerLogModalFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"ContainerCommitModalFragment\"\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"AppLauncherModalFragment\"\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"103a9b6ca717c568c1cdfc2dcde10f1a\";\n\nexport default node;\n","/**\n * @generated SignedSource<<45d89db32dce80f912e69740908e00a9>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionActionButtonsLegacyFragment$data = {\n  readonly id: string | null | undefined;\n  readonly service_ports: string | null | undefined;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"AppLauncherModalLegacyFragment\">;\n  readonly \" $fragmentType\": \"SessionActionButtonsLegacyFragment\";\n};\nexport type SessionActionButtonsLegacyFragment$key = {\n  readonly \" $data\"?: SessionActionButtonsLegacyFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionActionButtonsLegacyFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionActionButtonsLegacyFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"service_ports\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"AppLauncherModalLegacyFragment\"\n    }\n  ],\n  \"type\": \"ComputeSession\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1c247e641be508999bac664d7f289a4f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<75f0976f768911843722fb483dc8f303>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionIdleChecksFragment$data = {\n  readonly id: string | null | undefined;\n  readonly idle_checks: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionIdleChecksFragment\";\n};\nexport type SessionIdleChecksFragment$key = {\n  readonly \" $data\"?: SessionIdleChecksFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionIdleChecksFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionIdleChecksFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"idle_checks\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSession\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"d2bf721ec94f22eba99980925b3f9656\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5a48d3f7c0db79185e24e2b973ff10d6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionIdleChecksNodeFragment$data = {\n  readonly id: string;\n  readonly idle_checks: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionIdleChecksNodeFragment\";\n};\nexport type SessionIdleChecksNodeFragment$key = {\n  readonly \" $data\"?: SessionIdleChecksNodeFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionIdleChecksNodeFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionIdleChecksNodeFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"idle_checks\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"09a1dd685c8942ebb5c69e6dddaf6da0\";\n\nexport default node;\n","/**\n * @generated SignedSource<<63fa395e8c9335222eada19d6129c0e5>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionTypeTagFragment$data = {\n  readonly type: string | null | undefined;\n  readonly \" $fragmentType\": \"SessionTypeTagFragment\";\n};\nexport type SessionTypeTagFragment$key = {\n  readonly \" $data\"?: SessionTypeTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"SessionTypeTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"SessionTypeTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"type\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ComputeSessionNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"6d4ab2b738125ee81d47483324695349\";\n\nexport default node;\n","import { filterEmptyItem, filterNonNullItems, toGlobalId } from '../../helper';\nimport { useCurrentProjectValue } from '../../hooks/useCurrentProject';\n// import BAIPropertyFilter from '../BAIPropertyFilter';\nimport BAITable from '../BAITable';\nimport DoubleTag from '../DoubleTag';\nimport Flex from '../Flex';\nimport UnmountModalAfterClose from '../UnmountModalAfterClose';\nimport ContainerLogModal from './ContainerLogModal';\nimport { ConnectedKernelListLegacyQuery } from './__generated__/ConnectedKernelListLegacyQuery.graphql';\nimport {\n  ConnectedKernelListQuery,\n  ConnectedKernelListQuery$data,\n} from './__generated__/ConnectedKernelListQuery.graphql';\nimport { Button, Tag, theme, Tooltip, Typography } from 'antd';\nimport { ColumnType } from 'antd/lib/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { ScrollTextIcon } from 'lucide-react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\ntype Kernel = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<ConnectedKernelListQuery$data['session']>['kernel_nodes']\n    >['edges'][number]\n  >['node']\n>;\n\ninterface ConnectedKernelListProps {\n  id: string;\n  fetchKey?: string;\n}\n\nconst kernelStatusTagColor = {\n  // prepare\n  PREPARING: 'blue',\n  BUILDING: 'blue',\n  PULLING: 'blue',\n  PREPARED: 'blue',\n  CREATING: 'blue',\n  // running\n  PENDING: 'green',\n  SCHEDULED: 'green',\n  RUNNING: 'green',\n  RESTARTING: 'green',\n  RESIZING: 'green',\n  SUSPENDED: 'green',\n  // terminated\n  TERMINATING: 'default',\n  TERMINATED: 'default',\n  CANCELLED: 'default',\n  // error\n  ERROR: 'red',\n};\n\nconst ConnectedKernelList: React.FC<ConnectedKernelListProps> = ({\n  id,\n  fetchKey,\n}) => {\n  const { t } = useTranslation();\n  const currentProject = useCurrentProjectValue();\n  const [kernelIdForLogModal, setKernelIdForLogModal] = useState<string>();\n  const { token } = theme.useToken();\n\n  // get the project id of the session for <= v24.12.0.\n  const { session_for_project_id } =\n    useLazyLoadQuery<ConnectedKernelListLegacyQuery>(\n      graphql`\n        query ConnectedKernelListLegacyQuery($uuid: UUID!) {\n          session_for_project_id: compute_session(id: $uuid) {\n            group_id\n          }\n        }\n      `,\n      {\n        uuid: id,\n      },\n      {\n        fetchPolicy: 'network-only',\n      },\n    );\n\n  const { session } = useLazyLoadQuery<ConnectedKernelListQuery>(\n    graphql`\n      query ConnectedKernelListQuery($id: GlobalIDField!, $project_id: UUID!) {\n        session: compute_session_node(id: $id, project_id: $project_id) {\n          kernel_nodes {\n            edges {\n              node {\n                id\n                row_id\n                cluster_role\n                status\n                status_info\n                agent_id\n                container_id\n              }\n            }\n            count\n          }\n          ...ContainerLogModalFragment\n        }\n      }\n    `,\n    {\n      id: toGlobalId('ComputeSessionNode', id),\n      project_id: session_for_project_id?.group_id || currentProject.id,\n    },\n    {\n      fetchPolicy: 'network-only',\n      fetchKey: fetchKey,\n    },\n  );\n  const kernelNodes = session?.kernel_nodes;\n\n  const columns = filterEmptyItem<ColumnType<Kernel>>([\n    {\n      title: t('kernel.KernelId'),\n      fixed: 'left',\n      dataIndex: 'row_id',\n      render: (row_id) => (\n        <>\n          <Typography.Text copyable ellipsis>\n            {row_id}\n          </Typography.Text>\n          <Tooltip title={t('session.SeeContainerLogs')}>\n            <Button\n              icon={<ScrollTextIcon />}\n              type=\"link\"\n              onClick={() => {\n                setKernelIdForLogModal(row_id);\n              }}\n              style={{\n                width: 'auto',\n                height: 'auto',\n                marginInlineStart: token.marginXXS,\n                border: 'none',\n              }}\n            />\n          </Tooltip>\n        </>\n      ),\n    },\n    {\n      title: t('kernel.Role'),\n      dataIndex: 'cluster_role',\n      render: (role) => <Tag>{role}</Tag>,\n    },\n    {\n      title: t('kernel.Status'),\n      dataIndex: 'status',\n      render: (status, record) => {\n        return (\n          <>\n            {record?.status_info !== '' ? (\n              <DoubleTag\n                values={[\n                  { label: status, color: _.get(kernelStatusTagColor, status) },\n                  {\n                    label: record?.status_info,\n                    color: _.get(\n                      kernelStatusTagColor,\n                      record?.status_info ?? '',\n                    ),\n                  },\n                ]}\n              />\n            ) : (\n              <Tag color={_.get(kernelStatusTagColor, status)}>{status}</Tag>\n            )}\n          </>\n        );\n      },\n    },\n    {\n      title: t('kernel.ContainerId'),\n      dataIndex: 'container_id',\n      onCell: () => ({\n        style: { maxWidth: 250 },\n      }),\n      render: (id) =>\n        _.isEmpty(id) ? (\n          '-'\n        ) : (\n          <Typography.Text copyable ellipsis>\n            {id}\n          </Typography.Text>\n        ),\n    },\n    {\n      title: t('kernel.AgentId'),\n      dataIndex: 'agent_id',\n      render: (id) => <Typography.Text copyable>{id}</Typography.Text>,\n    },\n  ]);\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\" gap={'sm'}>\n      {/* TODO: implement filter when compute_session_node query supports filter */}\n      {/* <BAIPropertyFilter\n        filterProperties={[\n          {\n            key: 'agent_id',\n            propertyLabel: t('kernel.AgentId'),\n            type: 'string',\n          },\n        ]}\n        value={filterString}\n        onChange={(value) => {\n          startFilterTransition(() => {\n            setFilterString(value);\n          });\n        }}\n      /> */}\n      <BAITable\n        bordered\n        // loading={isPendingFilter}\n        rowKey=\"id\"\n        scroll={{ x: 'max-content' }}\n        columns={columns}\n        dataSource={filterNonNullItems(\n          kernelNodes?.edges.map((edge) => edge?.node),\n        )}\n        style={{ width: '100%' }}\n        // TODO: implement pagination when compute_session_node query supports pagination\n        pagination={false}\n      />\n\n      <UnmountModalAfterClose>\n        <ContainerLogModal\n          open={!!kernelIdForLogModal}\n          sessionFrgmt={session || null}\n          defaultKernelId={kernelIdForLogModal}\n          onCancel={() => {\n            setKernelIdForLogModal(undefined);\n          }}\n        />\n      </UnmountModalAfterClose>\n    </Flex>\n  );\n};\n\nexport default ConnectedKernelList;\n","import { useBaiSignedRequestWithPromise } from '../../helper';\nimport { useCurrentUserInfo } from '../../hooks/backendai';\nimport { useTanMutation } from '../../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../../hooks/useCurrentProject';\nimport { getSessionNameRules } from '../SessionNameFormItem';\nimport { EditableSessionNameDuplicatedCheckQuery } from './__generated__/EditableSessionNameDuplicatedCheckQuery.graphql';\nimport { EditableSessionNameFragment$key } from './__generated__/EditableSessionNameFragment.graphql';\nimport { EditableSessionNameRefetchQuery } from './__generated__/EditableSessionNameRefetchQuery.graphql';\nimport { theme, Form, Input, App } from 'antd';\nimport Text, { TextProps } from 'antd/es/typography/Text';\nimport Title, { TitleProps } from 'antd/es/typography/Title';\nimport graphql from 'babel-plugin-relay/macro';\nimport { CornerDownLeftIcon } from 'lucide-react';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { fetchQuery, useFragment, useRelayEnvironment } from 'react-relay';\n\ntype EditableSessionNameProps = {\n  sessionFrgmt: EditableSessionNameFragment$key;\n} & (\n  | ({ component?: typeof Text } & Omit<TextProps, 'children'>)\n  | ({ component: typeof Title } & Omit<TitleProps, 'children'>)\n);\n\nconst EditableSessionName: React.FC<EditableSessionNameProps> = ({\n  component: Component = Text,\n  sessionFrgmt,\n  editable: editableOfProps,\n  style,\n  ...otherProps\n}) => {\n  const relayEvn = useRelayEnvironment();\n  const currentProject = useCurrentProjectValue();\n\n  const session = useFragment(\n    graphql`\n      fragment EditableSessionNameFragment on ComputeSessionNode {\n        id\n        row_id\n        name\n        priority\n        user_id\n        status\n      }\n    `,\n    sessionFrgmt,\n  );\n  const [optimisticName, setOptimisticName] = useState(session.name);\n  const [userInfo] = useCurrentUserInfo();\n\n  const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const renameSessionMutation = useTanMutation({\n    mutationFn: (newName: string) => {\n      return baiRequestWithPromise({\n        method: 'POST',\n        url: `/session/${session.name}/rename`,\n        body: {\n          name: newName,\n        },\n      });\n    },\n  });\n\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { message } = App.useApp();\n  const [isEditing, setIsEditing] = useState(false);\n\n  const isNotPreparingCategoryStatus = ![\n    'RESTARTING',\n    'PREPARING',\n    'PREPARED',\n    'CREATING',\n    'PULLING',\n  ].includes(session.status || '');\n\n  const isEditingAllowed =\n    editableOfProps &&\n    userInfo.uuid === session.user_id &&\n    isNotPreparingCategoryStatus;\n\n  const isPendingRenamingAndRefreshing =\n    renameSessionMutation.isPending || optimisticName !== session.name;\n  return (\n    <>\n      {(!isEditing || isPendingRenamingAndRefreshing) && (\n        <Component\n          editable={\n            isEditingAllowed && !isPendingRenamingAndRefreshing\n              ? {\n                  onStart: () => {\n                    setIsEditing(true);\n                  },\n                  triggerType: ['icon', 'text'],\n                }\n              : false\n          }\n          copyable\n          style={{\n            ...style,\n            color: isPendingRenamingAndRefreshing\n              ? token.colorTextTertiary\n              : style?.color,\n          }}\n          {...otherProps}\n        >\n          {renameSessionMutation.isPending || optimisticName !== session.name\n            ? optimisticName\n            : session.name}\n        </Component>\n      )}\n      {isEditing && !isPendingRenamingAndRefreshing && (\n        <Form\n          onFinish={(values) => {\n            setIsEditing(false);\n            setOptimisticName(values.sessionName);\n            // FIXME: This API does not return any response on success or error.\n            renameSessionMutation.mutate(values.sessionName, {\n              onSuccess: () => {\n                // refetch the updated session name\n                fetchQuery<EditableSessionNameRefetchQuery>(\n                  relayEvn,\n                  graphql`\n                    query EditableSessionNameRefetchQuery(\n                      $sessionId: GlobalIDField!\n                      $project_id: UUID!\n                    ) {\n                      compute_session_node(\n                        id: $sessionId\n                        project_id: $project_id\n                      ) {\n                        id\n                        name\n                      }\n                    }\n                  `,\n                  {\n                    sessionId: session.id,\n                    project_id: currentProject.id,\n                  },\n                )\n                  .toPromise()\n                  // ignore the error\n                  .catch();\n                // ignore the error\n                document.dispatchEvent(\n                  new CustomEvent('backend-ai-session-list-refreshed'),\n                );\n              },\n              onError: (err) => {\n                message.error(t('session.FailToRenameSession'));\n              },\n            });\n          }}\n          initialValues={{\n            sessionName: session.name,\n          }}\n          style={{\n            flex: 1,\n          }}\n        >\n          <Form.Item\n            name=\"sessionName\"\n            validateDebounce={1000}\n            rules={[\n              ...getSessionNameRules(t),\n              {\n                validator: async (rule, value) => {\n                  if (value === session.name) {\n                    return Promise.resolve();\n                  }\n                  const hasSameName =\n                    await fetchQuery<EditableSessionNameDuplicatedCheckQuery>(\n                      relayEvn,\n                      graphql`\n                        query EditableSessionNameDuplicatedCheckQuery(\n                          $projectId: UUID!\n                          $filter: String\n                        ) {\n                          compute_session_nodes(\n                            project_id: $projectId\n                            filter: $filter\n                          ) {\n                            count\n                          }\n                        }\n                      `,\n                      {\n                        projectId: currentProject.id,\n                        filter: `status != \"TERMINATED\" & status != \"CANCELLED\" & name == \"${value}\"`,\n                      },\n                    )\n                      .toPromise()\n                      .then((data) => {\n                        return data?.compute_session_nodes?.count !== 0;\n                      })\n                      .catch(() => {\n                        // ignore duplicated check error\n                        return false;\n                      });\n                  return hasSameName\n                    ? Promise.reject(t('session.launcher.SessionAlreadyExists'))\n                    : Promise.resolve();\n                },\n              },\n            ]}\n            style={{\n              margin: 0,\n            }}\n          >\n            <Input\n              size=\"large\"\n              suffix={\n                <CornerDownLeftIcon\n                  style={{\n                    fontSize: '0.8em',\n                    color: token.colorTextTertiary,\n                  }}\n                />\n              }\n              autoFocus\n              onKeyDown={(e) => {\n                // when press escape key, cancel editing\n                if (e.key === 'Escape') {\n                  setIsEditing(false);\n                }\n              }}\n            />\n          </Form.Item>\n        </Form>\n      )}\n    </>\n  );\n};\n\nexport default EditableSessionName;\n","var _path, _path2, _path3, _path4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgApp(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.93855 2.32715H9.95845C10.2637 2.32715 10.5689 2.63236 10.5689 2.93757V9.95747C10.5689 10.2627 10.2637 10.5679 9.95845 10.5679H2.93855C2.63334 10.5679 2.32812 10.2627 2.32812 9.95747V2.93757C2.32813 2.63236 2.63334 2.32715 2.93855 2.32715Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.3155 2.32715H20.3354C20.6406 2.32715 20.9458 2.63236 20.9458 2.93757V9.95747C20.9458 10.2627 20.6406 10.5679 20.3354 10.5679H13.3155C13.0103 10.5679 12.7051 10.2627 12.7051 9.95747V2.93757C12.7051 2.63236 13.0103 2.32715 13.3155 2.32715Z\",\n    fill: \"currentColor\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.93855 12.7046H9.95845C10.2637 12.7046 10.5689 13.0098 10.5689 13.315V20.3349C10.5689 20.6401 10.2637 20.9453 9.95845 20.9453H2.93855C2.63334 20.9453 2.32812 20.6401 2.32812 20.3349V13.315C2.32813 13.0098 2.63334 12.7046 2.93855 12.7046Z\",\n    fill: \"currentColor\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.3155 12.7046H20.3354C20.6406 12.7046 20.9458 13.0098 20.9458 13.315V20.3349C20.9458 20.6401 20.6406 20.9453 20.3354 20.9453H13.3155C13.0103 20.9453 12.7051 20.6401 12.7051 20.3349V13.315C12.7051 13.0098 13.0103 12.7046 13.3155 12.7046Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgApp);\nexport default __webpack_public_path__ + \"static/media/App.31a5e0490276cd14bbda29ad92d6e151.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as logo } from './App.svg';\nimport Icon from '@ant-design/icons';\nimport { CustomIconComponentProps } from '@ant-design/icons/lib/components/Icon';\n\ninterface AppIconProps\n  extends Omit<CustomIconComponentProps, 'width' | 'height' | 'fill'> {}\n\nconst AppIcon: React.FC<AppIconProps> = (props) => {\n  return <Icon component={logo} {...props} />;\n};\n\nexport default AppIcon;\n","var _path, _path2, _path3, _path4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgContainerCommit(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.20078 5.99951H6.19967C6.08939 5.99951 6 6.0889 6 6.19918V17.7998C6 17.9101 6.08939 17.9995 6.19967 17.9995H8.20078C8.31105 17.9995 8.40045 17.9101 8.40045 17.7998V6.19918C8.40045 6.0889 8.31105 5.99951 8.20078 5.99951Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.0016 5.99951H11.0004C10.8902 5.99951 10.8008 6.0889 10.8008 6.19918V17.7998C10.8008 17.9101 10.8902 17.9995 11.0004 17.9995H13.0016C13.1118 17.9995 13.2012 17.9101 13.2012 17.7998V6.19918C13.2012 6.0889 13.1118 5.99951 13.0016 5.99951Z\",\n    fill: \"currentColor\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8004 5.99951H15.7993C15.689 5.99951 15.5996 6.0889 15.5996 6.19918V17.7998C15.5996 17.9101 15.689 17.9995 15.7993 17.9995H17.8004C17.9107 17.9995 18.0001 17.9101 18.0001 17.7998V6.19918C18.0001 6.0889 17.9107 5.99951 17.8004 5.99951Z\",\n    fill: \"currentColor\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.2002 2H2.79978C2.35694 2 2 2.35694 2 2.79978V21.2002C2 21.6431 2.35694 22 2.79978 22H21.2002C21.6431 22 22 21.6419 22 21.2002V2.79978C22 2.35694 21.6419 2 21.2002 2ZM20.2008 20.2008H3.80033V3.80033H20.2008V20.2008Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgContainerCommit);\nexport default __webpack_public_path__ + \"static/media/ContainerCommit.1780724d4a98ae1d0738d4f98b5e49b5.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as logo } from './ContainerCommit.svg';\nimport Icon from '@ant-design/icons';\nimport { CustomIconComponentProps } from '@ant-design/icons/lib/components/Icon';\n\ninterface ContainerCommitIconProps\n  extends Omit<CustomIconComponentProps, 'width' | 'height' | 'fill'> {}\n\nconst ContainerCommitIcon: React.FC<ContainerCommitIconProps> = (props) => {\n  return <Icon component={logo} {...props} />;\n};\n\nexport default ContainerCommitIcon;\n","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSessionLog(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 12H10\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 8H10\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 17V5C19 4.46957 18.7893 3.96086 18.4142 3.58579C18.0391 3.21071 17.5304 3 17 3H4\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 21H20C20.5304 21 21.0391 20.7893 21.4142 20.4142C21.7893 20.0391 22 19.5304 22 19V18C22 17.7348 21.8946 17.4804 21.7071 17.2929C21.5196 17.1054 21.2652 17 21 17H11C10.7348 17 10.4804 17.1054 10.2929 17.2929C10.1054 17.4804 10 17.7348 10 18V19C10 19.5304 9.78929 20.0391 9.41421 20.4142C9.03914 20.7893 8.53043 21 8 21ZM8 21C7.46957 21 6.96086 20.7893 6.58579 20.4142C6.21071 20.0391 6 19.5304 6 19V5C6 4.46957 5.78929 3.96086 5.41421 3.58579C5.03914 3.21071 4.53043 3 4 3C3.46957 3 2.96086 3.21071 2.58579 3.58579C2.21071 3.96086 2 4.46957 2 5V7C2 7.26522 2.10536 7.51957 2.29289 7.70711C2.48043 7.89464 2.73478 8 3 8H6\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSessionLog);\nexport default __webpack_public_path__ + \"static/media/SessionLog.9190bd076088966fb7444616e65188c5.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as logo } from './SessionLog.svg';\nimport Icon from '@ant-design/icons';\nimport { CustomIconComponentProps } from '@ant-design/icons/lib/components/Icon';\n\ninterface SessionLogIconProps\n  extends Omit<CustomIconComponentProps, 'width' | 'height' | 'fill'> {}\n\nconst SessionLogIcon: React.FC<SessionLogIconProps> = (props) => {\n  return <Icon component={logo} {...props} />;\n};\n\nexport default SessionLogIcon;\n","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTerminalApp(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.7639 16.6396H11.9259C11.7133 16.6396 11.541 16.812 11.541 17.0245V19.0089C11.541 19.2215 11.7133 19.3938 11.9259 19.3938H19.7639C19.9765 19.3938 20.1488 19.2215 20.1488 19.0089V17.0245C20.1488 16.812 19.9765 16.6396 19.7639 16.6396Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.5231 12.122C11.5231 12.122 11.526 12.1161 11.526 12.1132H11.5187C11.5187 12.0035 11.485 11.8937 11.3928 11.8176C11.3928 11.8176 3.52112 5.23958 3.33088 5.08446C3.1421 4.92934 3.04698 4.81666 2.80844 4.87958C2.57576 4.94105 2.586 5.23812 2.586 5.39471C2.586 5.55129 2.58747 7.88982 2.58747 7.88982C2.58747 7.98933 2.63137 8.08299 2.70747 8.14738L7.44014 12.122L2.70747 16.0966C2.63137 16.161 2.58747 16.2547 2.58747 16.3542C2.58747 16.3542 2.586 18.6927 2.586 18.8493C2.586 19.0059 2.57576 19.303 2.80844 19.3644C3.04698 19.4273 3.1421 19.3147 3.33088 19.1595C3.51966 19.0044 11.3928 12.4264 11.3928 12.4264C11.485 12.3488 11.5187 12.2391 11.5187 12.1308H11.526C11.526 12.1308 11.5231 12.1249 11.5231 12.122Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTerminalApp);\nexport default __webpack_public_path__ + \"static/media/TerminalApp.1634187e51dae2f890ba3fb3046a6c8c.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as logo } from './TerminalApp.svg';\nimport Icon from '@ant-design/icons';\nimport { CustomIconComponentProps } from '@ant-design/icons/lib/components/Icon';\n\ninterface TerminalAppIconProps\n  extends Omit<CustomIconComponentProps, 'width' | 'height' | 'fill'> {}\n\nconst TerminalAppIcon: React.FC<TerminalAppIconProps> = (props) => {\n  return <Icon component={logo} {...props} />;\n};\n\nexport default TerminalAppIcon;\n","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTerminate(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.0504 12.8503C21.0595 9.6413 19.3992 6.81833 16.8899 5.20326C16.7783 5.13238 16.6305 5.21231 16.6305 5.3435V6.82285C16.6305 6.92389 16.6742 7.01889 16.7526 7.08223C16.9321 7.23001 17.104 7.38684 17.2684 7.55423C17.9515 8.24037 18.4913 9.0381 18.8653 9.92631C19.2529 10.8432 19.4504 11.8204 19.4504 12.8277C19.4504 13.835 19.2544 14.8122 18.8653 15.7291C18.4913 16.6173 17.9515 17.415 17.2684 18.1012C16.5852 18.7873 15.7875 19.3242 14.9008 19.6997C13.9839 20.0887 13.0098 20.2848 12.0009 20.2848C10.9921 20.2848 10.0194 20.0872 9.10104 19.6997C8.21584 19.3257 7.41811 18.7858 6.73348 18.1012C6.05036 17.415 5.51049 16.6173 5.13651 15.7291C4.74895 14.8107 4.5499 13.8245 4.5514 12.8277C4.5514 11.8204 4.74895 10.8432 5.13651 9.92631C5.51049 9.03961 6.05337 8.23434 6.73348 7.55423C6.89936 7.38835 7.07278 7.23303 7.24921 7.08223C7.32763 7.01889 7.37136 6.92238 7.37136 6.82285V5.3435C7.37136 5.2108 7.22358 5.12937 7.11199 5.20326C4.61021 6.81531 2.95142 9.62622 2.95142 12.8262C2.95142 17.7966 6.95214 21.832 11.9074 21.8832C16.9426 21.9345 21.0353 17.8916 21.0474 12.8503H21.0504Z\",\n    fill: \"currentColor\",\n    stroke: \"currentColor\",\n    strokeWidth: 0.7,\n    strokeMiterlimit: 10\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.6253 1.88867H11.3797C11.2465 1.88867 11.1384 1.9967 11.1384 2.12995V11.1599C11.1384 11.2931 11.2465 11.4011 11.3797 11.4011H12.6253C12.7586 11.4011 12.8666 11.2931 12.8666 11.1599V2.12995C12.8666 1.9967 12.7586 1.88867 12.6253 1.88867Z\",\n    fill: \"currentColor\",\n    stroke: \"currentColor\",\n    strokeWidth: 0.7,\n    strokeMiterlimit: 10\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTerminate);\nexport default __webpack_public_path__ + \"static/media/Terminate.5b6752a842ac03774f0c82b6677c4baa.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as logo } from './Terminate.svg';\nimport Icon from '@ant-design/icons';\nimport { CustomIconComponentProps } from '@ant-design/icons/lib/components/Icon';\n\ninterface TerminateIconProps\n  extends Omit<CustomIconComponentProps, 'width' | 'height' | 'fill'> {}\n\nconst TerminateIcon: React.FC<TerminateIconProps> = (props) => {\n  return <Icon component={logo} {...props} />;\n};\n\nexport default TerminateIcon;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport {\n  ServicePort,\n  TemplateItem,\n  useSuspendedFilteredAppTemplate,\n} from '../../hooks/useSuspendedFilteredAppTemplate';\nimport BAIModal from '../BAIModal';\nimport Flex from '../Flex';\nimport { AppLauncherModalFragment$key } from './__generated__/AppLauncherModalFragment.graphql';\nimport { AppLauncherModalLegacyFragment$key } from './__generated__/AppLauncherModalLegacyFragment.graphql';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Form,\n  FormInstance,\n  Image,\n  Input,\n  InputNumber,\n  ModalProps,\n  Row,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useRef, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface AppLauncherModalProps extends ModalProps {\n  onRequestClose: () => void;\n  sessionFrgmt: AppLauncherModalFragment$key | null;\n  legacySessionFrgmt?: AppLauncherModalLegacyFragment$key | null;\n}\n\nconst AppLauncherModal: React.FC<AppLauncherModalProps> = ({\n  onRequestClose,\n  sessionFrgmt,\n  legacySessionFrgmt,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const formRef = useRef<FormInstance>(null);\n  const [openToPublic, setOpenToPublic] = useState<boolean>(false);\n  const [tryPreferredPort, setTryPreferredPort] = useState<boolean>(false);\n  const [forceUseV1Proxy, setForceUseV1Proxy] = useState<boolean>(false);\n  const [forceUseV2Proxy, setForceUseV2Proxy] = useState<boolean>(false);\n  const [useSubDomain, setUseSubDomain] = useState<boolean>(false);\n\n  const session = useFragment(\n    graphql`\n      fragment AppLauncherModalFragment on ComputeSessionNode {\n        id\n        row_id\n        service_ports\n        access_key\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  const legacySession = useFragment(\n    graphql`\n      fragment AppLauncherModalLegacyFragment on ComputeSession {\n        id\n        session_id\n        service_ports\n        access_key\n      }\n    `,\n    legacySessionFrgmt,\n  );\n\n  const servicePorts: ServicePort[] = JSON.parse(\n    session?.service_ports ?? legacySession?.service_ports ?? '{}',\n  );\n\n  const { preOpenAppTemplate, baseAppTemplate } =\n    useSuspendedFilteredAppTemplate(servicePorts);\n\n  // TODO: This should be merged into `useBackendAIAppLauncher` hook\n  const handleAppLaunch = async (app: Partial<TemplateItem> | null) => {\n    if (!app?.name) return;\n\n    await formRef.current?.validateFields().then((values) => {\n      if (openToPublic) {\n        // @ts-ignore\n        globalThis.appLauncher.clientIps = values.clientIps;\n      }\n      if (tryPreferredPort) {\n        // @ts-ignore\n        globalThis.appLauncher.userPort = values.preferredPort ?? 10250;\n      }\n      if (useSubDomain) {\n        // @ts-ignore\n        globalThis.appLauncher.subDomain = values.subDomain;\n      }\n      if (forceUseV1Proxy) {\n        // @ts-ignore\n        globalThis.appLauncher.forceUseV1Proxy = true;\n      }\n      if (forceUseV2Proxy) {\n        // @ts-ignore\n        globalThis.appLauncher.forceUseV2Proxy = true;\n      }\n    });\n\n    const appController = {\n      'app-name': app?.name ?? '',\n      'session-uuid': session?.row_id ?? '',\n      'url-postfix': app?.redirect ?? '',\n    };\n\n    if (['nniboard', 'mlflow-ui'].includes(app?.name ?? '')) {\n      // @ts-ignore\n      globalThis.appLauncher._openAppLaunchConfirmationDialog(appController);\n      return;\n    }\n    if (app?.name === 'tensorboard') {\n      // @ts-ignore\n      globalThis.appLauncher._openTensorboardDialog();\n      onRequestClose();\n      return;\n    }\n    // @ts-ignore\n    globalThis.appLauncher._runApp(appController).then(() => {});\n    setOpenToPublic(false);\n    setTryPreferredPort(false);\n    onRequestClose();\n  };\n\n  return (\n    <BAIModal\n      title={t('session.appLauncher.App')}\n      width={450}\n      onCancel={onRequestClose}\n      footer={null}\n      destroyOnClose\n      {...modalProps}\n    >\n      <Flex direction=\"column\" gap={'md'} align=\"stretch\">\n        {_.map(baseAppTemplate, (apps, category) => {\n          return (\n            <div key={category}>\n              <Typography.Title level={5} style={{ marginTop: 0 }}>\n                {category.split('.')[1]}\n              </Typography.Title>\n              <Row gutter={[24, 24]}>\n                {_.map(apps, (app) => {\n                  return (\n                    <Col\n                      key={app?.name}\n                      span={6}\n                      style={{ alignContent: 'center' }}\n                    >\n                      <Flex\n                        direction=\"column\"\n                        gap={'xs'}\n                        style={{ height: '100%' }}\n                      >\n                        <Button\n                          icon={\n                            <Image\n                              src={app?.src}\n                              alt={app?.name}\n                              preview={false}\n                              style={{ height: 36, width: 36 }}\n                            />\n                          }\n                          onClick={() => {\n                            handleAppLaunch(app);\n                          }}\n                          style={{ height: 72, width: 72 }}\n                        />\n                        <Typography.Text style={{ textAlign: 'center' }}>\n                          {app?.title}\n                        </Typography.Text>\n                      </Flex>\n                    </Col>\n                  );\n                })}\n              </Row>\n            </div>\n          );\n        })}\n        {preOpenAppTemplate.length > 0 ? (\n          <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>\n              {t('session.launcher.PreOpenPortTitle')}\n            </Typography.Title>\n            <Row gutter={[12, 12]}>\n              {_.map(preOpenAppTemplate, (app) => {\n                return (\n                  <Col\n                    key={app?.name}\n                    span={6}\n                    style={{ alignContent: 'center' }}\n                  >\n                    <Flex\n                      direction=\"column\"\n                      gap={'xs'}\n                      style={{ height: '100%' }}\n                    >\n                      <Button\n                        icon={\n                          <Image\n                            src={app?.src}\n                            alt={app?.name}\n                            preview={false}\n                            style={{ height: 36, width: 36 }}\n                          />\n                        }\n                        onClick={() => {\n                          handleAppLaunch(app);\n                        }}\n                        style={{ height: 72, width: 72 }}\n                      />\n                      <Typography.Text style={{ textAlign: 'center' }}>\n                        {app?.title}\n                      </Typography.Text>\n                    </Flex>\n                  </Col>\n                );\n              })}\n            </Row>\n          </>\n        ) : null}\n        <Form ref={formRef} layout=\"vertical\">\n          <Row gutter={16}>\n            {/* @ts-ignore */}\n            {!globalThis.isElectron && baiClient._config.openPortToPublic ? (\n              <Col span={12}>\n                <Form.Item\n                  name={'clientIps'}\n                  label={\n                    <Flex gap={'xs'}>\n                      <Checkbox\n                        value={openToPublic}\n                        onChange={(value) =>\n                          setOpenToPublic(value.target.checked)\n                        }\n                      />\n                      {t('session.OpenToPublic')}\n                      <Tooltip\n                        title={<Trans i18nKey=\"session.OpenToPublicDesc\" />}\n                      >\n                        <QuestionCircleOutlined style={{ cursor: 'pointer' }} />\n                      </Tooltip>\n                    </Flex>\n                  }\n                >\n                  <Input\n                    disabled={!openToPublic}\n                    placeholder={t('session.AllowedClientIps')}\n                  />\n                </Form.Item>\n              </Col>\n            ) : null}\n            {baiClient._config.allowPreferredPort ? (\n              <Col span={12}>\n                <Form.Item\n                  name={'preferredPort'}\n                  label={\n                    <Flex gap={'xs'}>\n                      <Checkbox\n                        value={tryPreferredPort}\n                        onChange={(value) =>\n                          setTryPreferredPort(value.target.checked)\n                        }\n                      />\n                      {t('session.TryPreferredPort')}\n                    </Flex>\n                  }\n                  rules={[\n                    {\n                      type: 'number',\n                      min: 1025,\n                    },\n                    {\n                      type: 'number',\n                      max: 65534,\n                    },\n                  ]}\n                >\n                  <InputNumber\n                    placeholder=\"10250\"\n                    disabled={!tryPreferredPort}\n                    style={{ width: '100%' }}\n                  />\n                </Form.Item>\n              </Col>\n            ) : null}\n            {/* TODO: add debug value into baiClient._config */}\n            {/* @ts-ignore */}\n            {globalThis?.backendaiwebui?.debug ? (\n              <>\n                <Col span={12}>\n                  <Form.Item\n                    name=\"subDomain\"\n                    label={\n                      <Flex gap={'xs'}>\n                        <Checkbox\n                          value={useSubDomain}\n                          onChange={(value) =>\n                            setUseSubDomain(value.target.checked)\n                          }\n                        />\n                        {t('session.UseSubdomain')}\n                      </Flex>\n                    }\n                  >\n                    <Input disabled={!useSubDomain} />\n                  </Form.Item>\n                </Col>\n                <Col></Col>\n                <Col span={12}>\n                  <Form.Item name={'forceUseV1Proxy'}>\n                    <Checkbox\n                      disabled={forceUseV2Proxy}\n                      onChange={(value) =>\n                        setForceUseV1Proxy(value.target.checked)\n                      }\n                    >\n                      {t('session.ForceUseV1Proxy')}\n                    </Checkbox>\n                  </Form.Item>\n                </Col>\n                <Col span={12}>\n                  <Form.Item name={'forceUseV2Proxy'}>\n                    <Checkbox\n                      disabled={forceUseV1Proxy}\n                      onChange={(value) =>\n                        setForceUseV2Proxy(value.target.checked)\n                      }\n                    >\n                      {t('session.ForceUseV2Proxy')}\n                    </Checkbox>\n                  </Form.Item>\n                </Col>\n              </>\n            ) : null}\n          </Row>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default AppLauncherModal;\n","import { useSuspendedBackendaiClient } from '.';\nimport { useSuspenseTanQuery } from './reactQueryAlias';\nimport _ from 'lodash';\n\nexport type TemplateItem = {\n  category: string;\n  name: string;\n  redirect: string;\n  src: string;\n  title: string;\n};\n\nexport type AppTemplate = {\n  [key: string]: TemplateItem[];\n};\n\nexport type ServicePort = {\n  container_ports: number[];\n  host_ports: number[];\n  is_inference: boolean;\n  name: string;\n  protocol: string;\n};\n\nexport const useSuspendedFilteredAppTemplate = (\n  servicePorts?: ServicePort[] | null,\n) => {\n  const { data: appTemplate = {} } = useSuspenseTanQuery<AppTemplate>({\n    queryKey: ['backendai-app-template'],\n    queryFn: () => {\n      return fetch('resources/app_template.json')\n        .then((res) => res.json())\n        .then((res) => res.appTemplate);\n    },\n    staleTime: 1000 * 60 * 60 * 24,\n  });\n\n  const baiClient = useSuspendedBackendaiClient();\n  const allowTCPApps =\n    // @ts-ignore\n    globalThis.isElectron || baiClient._config.allowNonAuthTCP;\n\n  const preOpenAppList = _.filter(\n    servicePorts,\n    (app) => app.protocol === 'preopen' && app.is_inference === false,\n  );\n  const preOpenAppTemplate = _.map(preOpenAppList, (app) => {\n    return {\n      name: app.name,\n      title: app.name,\n      // TODO: change image according to the connected app.\n      src: '/resources/icons/default_app.svg',\n    };\n  });\n\n  const inferenceAppList = _.filter(servicePorts, (app) => app.is_inference);\n  const inferenceAppTemplate = _.map(inferenceAppList, (app) => {\n    return {\n      name: app.name,\n      title: app.name,\n      src: '/resources/icons/default_app.svg',\n    };\n  });\n\n  const baseAppList = _.filter(\n    servicePorts,\n    (app) =>\n      !_.includes(preOpenAppList, app) && !_.includes(inferenceAppList, app),\n  );\n  let baseAppTemplate = _.chain(baseAppList)\n    .map((app) => {\n      const template = _.find(\n        _.flatten(Object.values(appTemplate)),\n        (item) => item.name === app.name,\n      );\n\n      if (!_.includes(preOpenAppList, app) && !app.is_inference) {\n        if (app.name === 'sshd' && !allowTCPApps) {\n          return null;\n        }\n        // They are custom apps from Backend.AI agent.\n        return {\n          name: app.name,\n          title: template?.title || app.name,\n          category: template?.category || '99.Custom',\n          redirect: template?.redirect || '',\n          src: template?.src || './resources/icons/default_app.svg',\n        };\n      }\n      return null;\n    })\n    .filter(Boolean)\n    .value();\n\n  if (!_.some(baseAppList, { name: 'ttyd' })) {\n    baseAppTemplate.push({\n      name: appTemplate['ttyd'][0].name,\n      title: appTemplate['ttyd'][0].title,\n      category: '99.Custom',\n      redirect: appTemplate['ttyd'][0].redirect,\n      src: appTemplate['ttyd'][0].src,\n    });\n  }\n\n  if (baiClient.supports('local-vscode-remote-connection') && allowTCPApps) {\n    baseAppTemplate.push({\n      name: 'vscode-desktop',\n      title: 'Visual Studio Code (Desktop)',\n      category: '2.Development',\n      redirect: '',\n      src: './resources/icons/vscode.svg',\n    });\n  }\n  const groupedBaseAppTemplate = _.chain(baseAppTemplate)\n    .sortBy('category')\n    .groupBy('category')\n    .value();\n\n  return {\n    appTemplate,\n    preOpenAppTemplate,\n    inferenceAppTemplate,\n    baseAppTemplate: groupedBaseAppTemplate,\n  };\n};\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport { useSetBAINotification } from '../../hooks/useBAINotification';\nimport BAIModal, { BAIModalProps } from '../BAIModal';\nimport Flex from '../Flex';\nimport { ContainerCommitModalFragment$key } from './__generated__/ContainerCommitModalFragment.graphql';\nimport {\n  Descriptions,\n  Divider,\n  Form,\n  FormInstance,\n  Input,\n  Typography,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ContainerCommitModalProps extends BAIModalProps {\n  sessionFrgmt: ContainerCommitModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst ContainerCommitModal: React.FC<ContainerCommitModalProps> = ({\n  sessionFrgmt,\n  onRequestClose,\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { upsertNotification } = useSetBAINotification();\n  const [isConfirmLoading, setIsConfirmLoading] = useState<boolean>(false);\n  const formRef = useRef<FormInstance>(null);\n  const baiClient = useSuspendedBackendaiClient();\n\n  const session = useFragment(\n    graphql`\n      fragment ContainerCommitModalFragment on ComputeSessionNode {\n        id\n        name\n        row_id @required(action: NONE)\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  const convertSessionToImage = () => {\n    setIsConfirmLoading(true);\n    formRef?.current\n      ?.validateFields()\n      .then((values: { imageName: string }) => {\n        upsertNotification({\n          message: 'commitSession: ' + session?.name,\n          open: true,\n          backgroundTask: {\n            status: 'pending',\n            promise: baiClient.computeSession.convertSessionToImage(\n              session?.name ?? '',\n              values.imageName,\n            ),\n            onChange: {\n              pending: t('session.CommitOnGoing'),\n              resolved: (data) => {\n                const task_id = (data as { task_id: string }).task_id;\n                onRequestClose();\n                return {\n                  backgroundTask: {\n                    status: 'pending',\n                    taskId: task_id,\n                    promise: null,\n                    percent: 0,\n                    onChange: {\n                      pending: t('session.CommitOnGoing'),\n                      resolved: t('session.CommitFinished'),\n                      rejected: t('session.CommitFailed'),\n                    },\n                  },\n                };\n              },\n              rejected: (err: any) => {\n                return {\n                  open: true,\n                  type: 'error',\n                  message: 'commitSession: ' + session?.name,\n                  description: err?.message,\n                  toText: t('button.SeeErrorLogs'),\n                  to: `/usersettings?tab=logs`,\n                };\n              },\n            },\n          },\n        });\n      })\n      .catch(() => {})\n      .finally(() => {\n        setIsConfirmLoading(false);\n      });\n  };\n\n  return (\n    <BAIModal\n      title={t('session.CommitSession')}\n      onOk={() => convertSessionToImage()}\n      okButtonProps={{ loading: isConfirmLoading }}\n      onCancel={onRequestClose}\n      {...modalProps}\n      destroyOnClose\n    >\n      <Flex\n        direction=\"column\"\n        gap={'xs'}\n        align=\"stretch\"\n        style={{ overflow: 'hidden' }}\n      >\n        <Typography.Text>{t('session.DescCommitSession')}</Typography.Text>\n        <Descriptions bordered size=\"small\" column={1}>\n          <Descriptions.Item label={t('session.SessionName')}>\n            {session?.name}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.SessionId')}>\n            {session?.row_id}\n          </Descriptions.Item>\n          {/* FIXME: need to use legacy_session */}\n          {/* <Descriptions.Item label={t('session.launcher.Environments')}>\n          </Descriptions.Item>  */}\n        </Descriptions>\n        <Divider style={{ marginTop: 12, marginBottom: 12 }} />\n        <Form ref={formRef}>\n          <Form.Item\n            label={t('session.CommitImageName')}\n            name=\"imageName\"\n            required\n            rules={[\n              { required: true },\n              {\n                min: 4,\n                max: 32,\n              },\n              {\n                pattern: /^[a-zA-Z0-9-_.]+$/,\n                message: t('session.validation.EnterValidSessionName'),\n              },\n            ]}\n          >\n            <Input placeholder={t('inputLimit.4to32chars')} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ContainerCommitModal;\n","import { useSuspendedBackendaiClient } from '../../hooks';\nimport { useCurrentUserInfo } from '../../hooks/backendai';\nimport { useBackendAIAppLauncher } from '../../hooks/useBackendAIAppLauncher';\nimport AppIcon from '../BAIIcons/AppIcon';\nimport ContainerCommitIcon from '../BAIIcons/ContainerCommitIcon';\nimport SessionLogIcon from '../BAIIcons/SessionLogIcon';\nimport TerminalAppIcon from '../BAIIcons/TerminalAppIcon';\nimport TerminateIcon from '../BAIIcons/TerminateIcon';\nimport AppLauncherModal from './AppLauncherModal';\nimport ContainerCommitModal from './ContainerCommitModal';\nimport ContainerLogModal from './ContainerLogModal';\nimport TerminateSessionModal from './TerminateSessionModal';\nimport {\n  SessionActionButtonsFragment$data,\n  SessionActionButtonsFragment$key,\n} from './__generated__/SessionActionButtonsFragment.graphql';\nimport {\n  SessionActionButtonsLegacyFragment$data,\n  SessionActionButtonsLegacyFragment$key,\n} from './__generated__/SessionActionButtonsLegacyFragment.graphql';\nimport { Tooltip, Button, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface SessionActionButtonsProps {\n  sessionFrgmt: SessionActionButtonsFragment$key | null;\n  legacySessionFrgmt?: SessionActionButtonsLegacyFragment$key | null;\n}\n\nconst isActive = (session: SessionActionButtonsFragment$data) => {\n  return !['TERMINATED', 'CANCELLED', 'TERMINATING'].includes(\n    session?.status || '',\n  );\n};\nconst isAppSupported = (\n  session: SessionActionButtonsFragment$data,\n  legacy_session: SessionActionButtonsLegacyFragment$data | null | undefined,\n) => {\n  return (\n    ['batch', 'interactive', 'inference', 'system', 'running'].includes(\n      session?.type || '',\n    ) &&\n    !_.isEmpty(\n      JSON.parse(\n        session?.service_ports ?? legacy_session?.service_ports ?? '{}',\n      ),\n    )\n  );\n};\n\nconst SessionActionButtons: React.FC<SessionActionButtonsProps> = (props) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const appLauncher = useBackendAIAppLauncher();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const session = useFragment(\n    graphql`\n      fragment SessionActionButtonsFragment on ComputeSessionNode {\n        id\n        row_id @required(action: NONE)\n        type\n        status\n        access_key\n        service_ports\n        commit_status\n        user_id\n        ...TerminateSessionModalFragment\n        ...ContainerLogModalFragment\n        ...ContainerCommitModalFragment\n        ...AppLauncherModalFragment\n      }\n    `,\n    props.sessionFrgmt,\n  );\n\n  const legacySession = useFragment(\n    graphql`\n      fragment SessionActionButtonsLegacyFragment on ComputeSession {\n        id\n        service_ports\n        ...AppLauncherModalLegacyFragment\n      }\n    `,\n    props.legacySessionFrgmt,\n  );\n\n  const [openAppLauncherModal, setOpenAppLauncherModal] = useState(false);\n  const [openTerminateModal, setOpenTerminateModal] = useState(false);\n  const [openLogModal, setOpenLogModal] = useState(false);\n  const [openContainerCommitModal, setOpenContainerCommitModal] =\n    useState(false);\n\n  const userInfo = useCurrentUserInfo();\n  const isOwner = userInfo[0]?.uuid === session?.user_id;\n\n  return (\n    session && (\n      <>\n        <Tooltip title={t('session.SeeAppDialog')}>\n          <Button\n            disabled={\n              !isAppSupported(session, legacySession) ||\n              !isActive(session) ||\n              !isOwner\n            }\n            icon={<AppIcon />}\n            onClick={() => {\n              setOpenAppLauncherModal(true);\n            }}\n          />\n        </Tooltip>\n        <Suspense fallback={null}>\n          <AppLauncherModal\n            sessionFrgmt={session}\n            legacySessionFrgmt={legacySession}\n            open={openAppLauncherModal}\n            onRequestClose={() => {\n              setOpenAppLauncherModal(false);\n            }}\n          />\n        </Suspense>\n        <Tooltip title={t('session.ExecuteTerminalApp')}>\n          <Button\n            disabled={\n              !isAppSupported(session, legacySession) ||\n              !isActive(session) ||\n              !isOwner\n            }\n            icon={<TerminalAppIcon />}\n            onClick={() => {\n              appLauncher.runTerminal(session?.row_id);\n            }}\n          />\n        </Tooltip>\n        {/* Don't put this modal to end of the return array(<></>). */}\n        <TerminateSessionModal\n          sessionFrgmts={[session]}\n          open={openTerminateModal}\n          onRequestClose={() => {\n            setOpenTerminateModal(false);\n          }}\n        />\n\n        <Tooltip title={t('session.SeeContainerLogs')}>\n          <Button\n            icon={<SessionLogIcon />}\n            onClick={() => {\n              setOpenLogModal(true);\n            }}\n          />\n        </Tooltip>\n        <ContainerLogModal\n          sessionFrgmt={session}\n          open={openLogModal}\n          onCancel={() => {\n            setOpenLogModal(false);\n          }}\n        />\n        <Tooltip title={t('session.RequestContainerCommit')}>\n          <Button\n            disabled={\n              !baiClient.supports('image-commit') ||\n              !baiClient._config.enableContainerCommit ||\n              session.type === 'system' ||\n              !isActive(session) ||\n              !isOwner\n            }\n            icon={<ContainerCommitIcon />}\n            onClick={() => {\n              setOpenContainerCommitModal(true);\n            }}\n          />\n        </Tooltip>\n        <ContainerCommitModal\n          sessionFrgmt={session}\n          open={openContainerCommitModal}\n          onRequestClose={() => setOpenContainerCommitModal(false)}\n        />\n        <Tooltip title={t('session.TerminateSession')}>\n          <Button\n            disabled={!isActive(session)}\n            icon={\n              <TerminateIcon\n                style={{\n                  color: isActive(session) ? token.colorError : undefined,\n                }}\n              />\n            }\n            onClick={() => {\n              setOpenTerminateModal(true);\n            }}\n          />\n        </Tooltip>\n      </>\n    )\n  );\n};\n\nexport default SessionActionButtons;\n","export const useBackendAIAppLauncher = () => {\n  // This is not use any React hooks, so it's not a React hook.\n  // But keep it here for the future refactoring.\n\n  // @ts-ignore\n  return {\n    runTerminal: (sessionId: string) => {\n      // @ts-ignore\n      globalThis.appLauncher.runTerminal(sessionId);\n    },\n    showLauncher: (params: {\n      'session-uuid'?: string;\n      'access-key'?: string;\n      'app-services'?: string;\n      mode?: string;\n      'app-services-option'?: string;\n      'service-ports'?: string;\n      runtime?: string;\n      filename?: string;\n      arguments?: string;\n    }) => {},\n  };\n};\n","import {\n  formatDurationAsDays,\n  toFixedFloorWithoutTrailingZeros,\n} from '../../helper';\nimport { useResourceSlotsDetails } from '../../hooks/backendai';\nimport DoubleTag from '../DoubleTag';\nimport Flex from '../Flex';\nimport { SessionIdleChecksFragment$key } from './__generated__/SessionIdleChecksFragment.graphql';\nimport { SessionIdleChecksNodeFragment$key } from './__generated__/SessionIdleChecksNodeFragment.graphql';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Tooltip, Typography, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ntype BaseExtra = null;\ntype UtilizationExtra = {\n  resources: {\n    cpu_util: number[];\n    mem: number[];\n    cuda_util: number[];\n    cuda_mem: number[];\n    ipu_util: number[];\n    ipu_mem: number[];\n  };\n  thresholds_check_operator: 'and' | 'or';\n};\nexport type IdleCheckItem = {\n  extra: BaseExtra | UtilizationExtra;\n  remaining: number | null;\n  remaining_time_type: 'expire_after' | 'grace_period';\n};\nexport type IdleChecks = {\n  network_timeout?: IdleCheckItem;\n  session_lifetime?: IdleCheckItem;\n  utilization?: IdleCheckItem;\n};\n\ninterface SessionIdleChecksProps {\n  sessionNodeFrgmt?: SessionIdleChecksNodeFragment$key | null;\n  sessionFrgmt?: SessionIdleChecksFragment$key | null;\n  direction?: 'row' | 'column';\n}\n\nexport function getUtilizationCheckerColor(\n  resources: Record<string, number[]> | number[],\n  thresholds_check_operator: 'and' | 'or' | null = null,\n) {\n  // Determine color based on single device utilization.\n  // resources: [number, number]\n  if (!thresholds_check_operator) {\n    const [utilization, threshold] = resources as number[];\n    if (utilization < threshold * 2) {\n      return 'red';\n    } else if (utilization < threshold * 10) {\n      return 'orange';\n    } else {\n      return 'green';\n    }\n  }\n  // Determine color based on multiple device utilization.\n  // resources: Record<string, [number, number]>\n  let color: string | undefined = undefined;\n  if (thresholds_check_operator === 'and') {\n    _.every(resources, ([utilization, threshold]: number[]) => {\n      if (utilization < Math.min(threshold * 2, threshold + 5)) {\n        color = 'red';\n        return true;\n      } else if (utilization < Math.min(threshold * 10, threshold + 10)) {\n        color = 'orange';\n        return true;\n      } else {\n        color = 'green';\n        return true;\n      }\n    });\n  }\n\n  if (thresholds_check_operator === 'or') {\n    _.some(resources, ([utilization, threshold]: number[]) => {\n      if (utilization < Math.min(threshold * 2, threshold + 5)) {\n        color = 'red';\n        return true;\n      } else if (utilization < Math.min(threshold * 10, threshold + 10)) {\n        color = 'orange';\n        return true;\n      } else {\n        color = 'green';\n        return true;\n      }\n    });\n  }\n\n  return color;\n}\n\nexport function getIdleChecksTagColor(\n  result: IdleCheckItem,\n  criteria: 'remaining' | 'utilization',\n) {\n  // Determine color based on remaining time.\n  if (criteria === 'remaining') {\n    if (!result.remaining || result.remaining < 3600) {\n      return 'red';\n    } else if (result.remaining < 3600 * 4) {\n      return 'orange';\n    } else {\n      return 'green';\n    }\n  }\n\n  // Determine color based on utilization.\n  if (result.extra && (!result.remaining || result.remaining < 3600 * 4)) {\n    return getUtilizationCheckerColor(\n      result.extra.resources,\n      result.extra.thresholds_check_operator,\n    );\n  }\n\n  return undefined;\n}\n\nconst SessionIdleChecks: React.FC<SessionIdleChecksProps> = ({\n  sessionNodeFrgmt = null,\n  sessionFrgmt = null,\n  direction = 'row',\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { mergedResourceSlots } = useResourceSlotsDetails();\n\n  const sessionNode = useFragment(\n    graphql`\n      fragment SessionIdleChecksNodeFragment on ComputeSessionNode {\n        id\n        idle_checks @since(version: \"24.12.0\")\n      }\n    `,\n    sessionNodeFrgmt,\n  );\n  const session = useFragment(\n    graphql`\n      fragment SessionIdleChecksFragment on ComputeSession {\n        id\n        idle_checks @since(version: \"24.09.0\")\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  const idleChecks: IdleChecks = JSON.parse(\n    sessionNode?.idle_checks || session?.idle_checks || '{}',\n  );\n\n  const getIdleCheckTitle = (key: keyof IdleChecks) => {\n    if (key === 'network_timeout') return t('session.NetworkIdleTimeout');\n    else if (key === 'session_lifetime') return t('session.MaxSessionLifetime');\n    else return t('session.UtilizationIdleTimeout');\n  };\n\n  const getRemainingTimeTypeLabel = (Type: 'expire_after' | 'grace_period') => {\n    if (Type === 'expire_after') {\n      return t('session.ExpiresAfter');\n    } else {\n      return t('session.GracePeriod');\n    }\n  };\n\n  return (\n    <Flex direction={direction} align=\"stretch\" gap=\"sm\">\n      {_.map(idleChecks, (value: IdleCheckItem, key: keyof IdleChecks) => {\n        if (!value.remaining) return null;\n\n        return (\n          <Flex\n            key={key}\n            style={{ flex: 1 }}\n            direction=\"column\"\n            align=\"stretch\"\n          >\n            <Flex gap={'xxs'}>\n              <Typography.Text>{getIdleCheckTitle(key)}</Typography.Text>\n              {key === 'utilization' && (\n                <Tooltip\n                  title={\n                    <>\n                      {`${t('session.Utilization')} / ${t('session.Threshold')} (%)`}\n                      <br />\n                      {_.map(value.extra?.resources, (resource, key) => {\n                        const deviceName = ['cpu_util', 'mem'].includes(key)\n                          ? _.split(key, '_')[0]\n                          : _.split(key, '_')[0] + '.device';\n                        const [utilization, threshold] = resource;\n                        return (\n                          <Flex key={key} gap={'xs'}>\n                            <Typography.Text\n                              style={{ color: token.colorWhite }}\n                            >{`${mergedResourceSlots?.[deviceName]?.human_readable_name}:`}</Typography.Text>\n                            <Typography.Text\n                              style={{\n                                color: getUtilizationCheckerColor(resource),\n                              }}\n                            >\n                              {`${utilization >= 0 ? toFixedFloorWithoutTrailingZeros(utilization, 1) : '-'} / ${threshold}`}\n                            </Typography.Text>\n                            <br />\n                          </Flex>\n                        );\n                      })}\n                    </>\n                  }\n                >\n                  <InfoCircleOutlined\n                    style={{\n                      color: token.colorTextSecondary,\n                      cursor: 'pointer',\n                    }}\n                  />\n                </Tooltip>\n              )}\n            </Flex>\n\n            {value.remaining >= 0 ? (\n              // TODO: support real-time update by using useIntervalValue when idle_checks returns remaining time as date\n              <DoubleTag\n                values={[\n                  {\n                    label: getRemainingTimeTypeLabel(value.remaining_time_type),\n                    color: getIdleChecksTagColor(\n                      value,\n                      key === 'utilization' ? 'utilization' : 'remaining',\n                    ),\n                  },\n                  {\n                    label: formatDurationAsDays(\n                      new Date().toISOString(),\n                      new Date(\n                        new Date().getTime() + (value.remaining || 0) * 1000,\n                      ).toISOString(),\n                    ),\n                    color: getIdleChecksTagColor(\n                      value,\n                      key === 'utilization' ? 'utilization' : 'remaining',\n                    ),\n                  },\n                ]}\n              />\n            ) : (\n              <Typography.Text type=\"danger\">\n                {t('session.TimeoutExceeded')}\n              </Typography.Text>\n            )}\n          </Flex>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport default SessionIdleChecks;\n","import { SessionTypeTagFragment$key } from './__generated__/SessionTypeTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\nconst typeTagColor = {\n  INTERACTIVE: 'green',\n  BATCH: 'darkgreen',\n  INFERENCE: 'blue',\n};\n\ninterface SessionTypeTagProps {\n  sessionFrgmt: SessionTypeTagFragment$key;\n}\n\nconst SessionTypeTag: React.FC<SessionTypeTagProps> = ({ sessionFrgmt }) => {\n  const session = useFragment(\n    graphql`\n      fragment SessionTypeTagFragment on ComputeSessionNode {\n        type\n      }\n    `,\n    sessionFrgmt,\n  );\n\n  return (\n    <Tag color={_.get(typeTagColor, _.toUpper(session.type || ''))}>\n      {_.toUpper(session.type || '')}\n    </Tag>\n  );\n};\n\nexport default SessionTypeTag;\n","import BAILink from './BAILink';\nimport { useFolderExplorerOpener } from './FolderExplorerOpener';\nimport { FolderLink_vfolderNode$key } from './__generated__/FolderLink_vfolderNode.graphql';\nimport { FolderOutlined } from '@ant-design/icons';\nimport { theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useFragment } from 'react-relay';\n\ninterface FolderLinkBase {\n  showIcon?: boolean;\n  disabled?: boolean;\n}\n\ninterface FolderLinkWithFragment extends FolderLinkBase {\n  vfolderNodeFragment: FolderLink_vfolderNode$key;\n  folderId?: never;\n  folderName?: never;\n}\n\ninterface FolderLinkWithIdAndName extends FolderLinkBase {\n  vfolderNodeFragment?: never;\n  folderId: string;\n  folderName: string;\n}\n\ntype FolderLinkProps = FolderLinkWithFragment | FolderLinkWithIdAndName;\n\nconst FolderLink = ({\n  vfolderNodeFragment,\n  folderId,\n  folderName,\n  showIcon,\n  disabled,\n}: FolderLinkProps) => {\n  const { generateFolderPath } = useFolderExplorerOpener();\n  const { token } = theme.useToken();\n\n  const vfolderNode = useFragment(\n    graphql`\n      fragment FolderLink_vfolderNode on VirtualFolderNode {\n        row_id\n        name\n      }\n    `,\n    vfolderNodeFragment,\n  );\n\n  return (\n    <BAILink\n      to={\n        disabled\n          ? undefined\n          : generateFolderPath(folderId ?? vfolderNode?.row_id ?? '')\n      }\n      style={{\n        wordBreak: 'break-all',\n        ...(disabled && {\n          color: token.colorTextDisabled,\n          cursor: 'not-allowed',\n        }),\n      }}\n    >\n      {showIcon && (\n        <>\n          <FolderOutlined /> &nbsp;\n        </>\n      )}\n      {folderName ?? vfolderNode?.name ?? ''}\n    </BAILink>\n  );\n};\n\nexport default FolderLink;\n","import BAIModal from './BAIModal';\nimport Flex from './Flex';\nimport { ModalProps, Typography, theme } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ninterface IdleCheckDescriptionModalProps extends ModalProps {}\n\nconst IdleCheckDescriptionModal: React.FC<IdleCheckDescriptionModalProps> = ({\n  ...modalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  return (\n    <BAIModal\n      title={t('session.IdleChecks')}\n      footer={null}\n      width={700}\n      {...modalProps}\n    >\n      <Typography.Text>{t('session.IdleChecksDesc')}</Typography.Text>\n\n      <Typography.Title level={5}>\n        {t('session.MaxSessionLifetime')}\n      </Typography.Title>\n      <p>{t('session.MaxSessionLifetimeDesc')}</p>\n\n      <Typography.Title level={5}>\n        {t('session.NetworkIdleTimeout')}\n      </Typography.Title>\n      <p>{t('session.NetworkIdleTimeoutDesc')}</p>\n\n      <Typography.Title level={5}>\n        {t('session.UtilizationIdleTimeout')}\n      </Typography.Title>\n      <p>{t('session.UtilizationIdleTimeoutDesc')}</p>\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        style={{ marginLeft: token.marginMD }}\n      >\n        <Typography.Title level={5} style={{ margin: 0 }}>\n          {t('session.GracePeriod')}\n        </Typography.Title>\n        <p>{t('session.GracePeriodDesc')}</p>\n        <Typography.Title level={5} style={{ margin: 0 }}>\n          {t('session.UtilizationThreshold')}\n        </Typography.Title>\n        <p>{t('session.UtilizationThresholdDesc')}</p>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default IdleCheckDescriptionModal;\n","import SessionKernelTags from '../components/ImageTags';\nimport { toGlobalId } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo, useCurrentUserRole } from '../hooks/backendai';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport { ResourceNumbersOfSession } from '../pages/SessionLauncherPage';\nimport ConnectedKernelList from './ComputeSessionNodeItems/ConnectedKernelList';\nimport EditableSessionName from './ComputeSessionNodeItems/EditableSessionName';\nimport SessionActionButtons from './ComputeSessionNodeItems/SessionActionButtons';\nimport SessionIdleChecks, {\n  IdleChecks,\n} from './ComputeSessionNodeItems/SessionIdleChecks';\nimport SessionReservation from './ComputeSessionNodeItems/SessionReservation';\nimport SessionStatusDetailModal from './ComputeSessionNodeItems/SessionStatusDetailModal';\nimport SessionStatusTag from './ComputeSessionNodeItems/SessionStatusTag';\nimport SessionTypeTag from './ComputeSessionNodeItems/SessionTypeTag';\nimport Flex from './Flex';\nimport FolderLink from './FolderLink';\nimport IdleCheckDescriptionModal from './IdleCheckDescriptionModal';\nimport ImageMetaIcon from './ImageMetaIcon';\nimport SessionUsageMonitor from './SessionUsageMonitor';\nimport { SessionDetailContentLegacyQuery } from './__generated__/SessionDetailContentLegacyQuery.graphql';\nimport { SessionDetailContentQuery } from './__generated__/SessionDetailContentQuery.graphql';\nimport { InfoCircleOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport {\n  Alert,\n  Button,\n  Descriptions,\n  Grid,\n  Select,\n  Skeleton,\n  Tag,\n  theme,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport Title from 'antd/es/typography/Title';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst SessionDetailContent: React.FC<{\n  id: string;\n  fetchKey?: string;\n}> = ({ id, fetchKey }) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const { md } = Grid.useBreakpoint();\n  const currentProject = useCurrentProjectValue();\n  const [currentUser] = useCurrentUserInfo();\n  const userRole = useCurrentUserRole();\n  const baiClient = useSuspendedBackendaiClient();\n  const [openIdleCheckDescriptionModal, setOpenIdleCheckDescriptionModal] =\n    useState<boolean>(false);\n  const [openStatusDetailModal, setOpenStatusDetailModal] =\n    useState<boolean>(false);\n  const [usageMonitorDisplayTarget, setUsageMonitorDisplayTarget] = useState<\n    'max' | 'avg' | 'current'\n  >('current');\n\n  // TODO: remove and refactor this waterfall request after v24.12.0\n  // get the project id of the session for <= v24.12.0.\n  const { session_for_project_id } =\n    useLazyLoadQuery<SessionDetailContentLegacyQuery>(\n      graphql`\n        query SessionDetailContentLegacyQuery($uuid: UUID!) {\n          session_for_project_id: compute_session(id: $uuid) {\n            group_id\n          }\n        }\n      `,\n      {\n        uuid: id,\n      },\n      {\n        fetchPolicy: 'network-only',\n      },\n    );\n  const { session, legacy_session } =\n    useLazyLoadQuery<SessionDetailContentQuery>(\n      //  In compute_session_node, there are missing fields. We need to use `compute_session` to get the missing fields.\n      graphql`\n        query SessionDetailContentQuery(\n          $id: GlobalIDField!\n          $uuid: UUID!\n          $project_id: UUID!\n        ) {\n          session: compute_session_node(id: $id, project_id: $project_id) {\n            id\n            row_id\n            name\n            project_id\n            user_id\n            resource_opts\n            status\n            status_data\n            vfolder_mounts\n            vfolder_nodes @since(version: \"25.4.0\") {\n              edges {\n                node {\n                  ...FolderLink_vfolderNode\n                }\n              }\n              count\n            }\n            created_at @required(action: NONE)\n            terminated_at\n            scaling_group\n            agent_ids\n            requested_slots\n            idle_checks @since(version: \"24.12.0\")\n\n            ...SessionStatusTagFragment\n            ...SessionActionButtonsFragment\n            ...SessionTypeTagFragment\n            ...EditableSessionNameFragment\n            ...SessionReservationFragment\n            # fix: This fragment is not used in this component, but it is required by the SessionActionButtonsFragment.\n            # It might be a bug in relay\n            ...ContainerLogModalFragment\n            ...SessionUsageMonitorFragment\n            ...ContainerCommitModalFragment\n            ...SessionIdleChecksNodeFragment\n            ...SessionStatusDetailModalFragment\n            ...AppLauncherModalFragment\n          }\n          legacy_session: compute_session(id: $uuid) {\n            image\n            mounts\n            user_email\n            architecture\n            idle_checks @since(version: \"24.09.0\")\n            ...SessionIdleChecksFragment\n            # fix: This fragment is not used in this component, but it is required by the SessionActionButtonsFragment.\n            # It might be a bug in relay\n            ...SessionActionButtonsLegacyFragment\n            ...AppLauncherModalLegacyFragment\n          }\n        }\n      `,\n      {\n        id: toGlobalId('ComputeSessionNode', id),\n        uuid: id,\n        project_id: session_for_project_id?.group_id || currentProject.id,\n      },\n      {\n        fetchPolicy: 'network-only',\n        fetchKey: fetchKey,\n      },\n    );\n\n  const imageFullName =\n    legacy_session?.image &&\n    legacy_session?.architecture &&\n    legacy_session.image + '@' + legacy_session.architecture;\n\n  const idleChecks: IdleChecks = JSON.parse(\n    session?.idle_checks || legacy_session?.idle_checks || '{}',\n  );\n  const imminentExpirationTime = _.min(\n    _.values(idleChecks)\n      .map((check) => check.remaining)\n      .filter(Boolean),\n  );\n\n  return session ? (\n    <Flex direction=\"column\" gap={'lg'} align=\"stretch\">\n      {session_for_project_id?.group_id !== currentProject.id && (\n        <Alert message={t('session.NotInProject')} type=\"warning\" showIcon />\n      )}\n      {currentUser.email !== legacy_session?.user_email && (\n        <Alert\n          message={t('session.AnotherUserSession')}\n          type=\"warning\"\n          showIcon\n        />\n      )}\n      {imminentExpirationTime && imminentExpirationTime < 3600 && (\n        <Alert\n          message={t('session.IdleCheckExpirationWarning')}\n          type=\"warning\"\n          showIcon\n        />\n      )}\n      <Flex direction=\"column\" gap={'sm'} align=\"stretch\">\n        <Flex\n          direction=\"row\"\n          justify=\"between\"\n          align=\"start\"\n          style={{\n            alignSelf: 'stretch',\n          }}\n          gap={'sm'}\n        >\n          <EditableSessionName\n            sessionFrgmt={session}\n            component={Title}\n            level={3}\n            style={{\n              margin: 0,\n              color: ['TERMINATED', 'CANCELLED'].includes(session.status || '')\n                ? token.colorTextTertiary\n                : undefined,\n            }}\n            editable={\n              !['TERMINATED', 'CANCELLED'].includes(session.status || '')\n            }\n          />\n          <Button.Group size=\"large\">\n            <SessionActionButtons\n              sessionFrgmt={session}\n              legacySessionFrgmt={legacy_session}\n            />\n          </Button.Group>\n        </Flex>\n\n        <Descriptions bordered column={md ? 2 : 1}>\n          <Descriptions.Item label={t('session.SessionId')} span={md ? 2 : 1}>\n            <Typography.Text\n              ellipsis\n              copyable\n              style={{ fontFamily: 'monospace' }}\n            >\n              {session.row_id}\n            </Typography.Text>\n          </Descriptions.Item>\n          {(userRole === 'admin' || userRole === 'superadmin') && (\n            <Descriptions.Item label={t('credential.UserID')} span={md ? 2 : 1}>\n              <Typography.Text copyable>\n                {legacy_session?.user_email}\n              </Typography.Text>\n            </Descriptions.Item>\n          )}\n          <Descriptions.Item label={t('session.Status')}>\n            <Flex>\n              <SessionStatusTag sessionFrgmt={session} showInfo />\n              {session?.status_data && session?.status_data !== '{}' ? (\n                <Tooltip title={t('button.ClickForMoreDetails')}>\n                  <Button\n                    type=\"link\"\n                    icon={<InfoCircleOutlined />}\n                    onClick={() => {\n                      setOpenStatusDetailModal(true);\n                    }}\n                  />\n                </Tooltip>\n              ) : null}\n            </Flex>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.SessionType')}>\n            <SessionTypeTag sessionFrgmt={session} />\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.launcher.Environments')}>\n            {imageFullName ? (\n              <Flex gap={['xs', 0]} wrap=\"wrap\">\n                <ImageMetaIcon\n                  image={imageFullName}\n                  style={{ marginRight: token.marginXS }}\n                />\n                <SessionKernelTags image={imageFullName} />\n              </Flex>\n            ) : (\n              '-'\n            )}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.launcher.MountedFolders')}>\n            <Flex gap=\"xs\" wrap=\"wrap\">\n              {session.vfolder_nodes\n                ? session.vfolder_nodes.edges.map((vfolder, idx) => {\n                    return (\n                      vfolder?.node && (\n                        <FolderLink\n                          key={`mounted-vfolder-${idx}`}\n                          showIcon\n                          vfolderNodeFragment={vfolder.node}\n                          disabled={\n                            currentUser.email !== legacy_session?.user_email\n                          }\n                        />\n                      )\n                    );\n                  })\n                : baiClient.supports('vfolder-mounts')\n                  ? _.map(\n                      // compute_session_node query's vfolder_mounts is not include name.\n                      // To provide vfolder name in compute_session_node, schema must be changed.\n                      // legacy_session.mounts (name) and session.vfolder_mounts (id) give vfolder information in same order.\n                      _.zip(legacy_session?.mounts, session?.vfolder_mounts),\n                      (mountInfo) => {\n                        const [name, id] = mountInfo;\n                        return (\n                          <FolderLink\n                            key={id}\n                            folderId={id ?? ''}\n                            folderName={name ?? ''}\n                            showIcon\n                            disabled={\n                              currentUser.email !== legacy_session?.user_email\n                            }\n                          />\n                        );\n                      },\n                    )\n                  : legacy_session?.mounts?.join(', ')}\n            </Flex>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.launcher.ResourceAllocation')}>\n            <Flex gap={'sm'} wrap=\"wrap\">\n              <Tooltip title={t('session.ResourceGroup')}>\n                <Tag>{session.scaling_group}</Tag>\n              </Tooltip>\n              <ResourceNumbersOfSession\n                resource={JSON.parse(session.requested_slots || '{}')}\n              />\n            </Flex>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.Agent')}>\n            {_.uniq(session.agent_ids).join(', ') || '-'}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('session.Reservation')} span={md ? 2 : 1}>\n            <Flex gap={'xs'} wrap={'wrap'}>\n              <SessionReservation sessionFrgmt={session} />\n            </Flex>\n          </Descriptions.Item>\n          {baiClient.supports('idle-checks-gql') &&\n          session.status === 'RUNNING' &&\n          imminentExpirationTime ? (\n            <Descriptions.Item\n              label={\n                <Flex gap=\"xxs\">\n                  {t('session.IdleChecks')}\n                  <Tooltip title={t('button.ClickForMoreDetails')}>\n                    <QuestionCircleOutlined\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setOpenIdleCheckDescriptionModal(true)}\n                    />\n                  </Tooltip>\n                </Flex>\n              }\n              span={md ? 2 : 1}\n            >\n              <SessionIdleChecks\n                sessionNodeFrgmt={session}\n                sessionFrgmt={legacy_session}\n                direction={md ? 'row' : 'column'}\n              />\n            </Descriptions.Item>\n          ) : null}\n          <Descriptions.Item\n            label={\n              <Flex direction=\"column\" align=\"start\" gap={token.marginSM}>\n                <Typography.Text style={{ color: token.colorTextSecondary }}>\n                  {t('session.ResourceUsage')}\n                </Typography.Text>\n                <Select\n                  size=\"small\"\n                  popupMatchSelectWidth={false}\n                  style={{ width: '100%', display: 'none' }}\n                  variant=\"filled\"\n                  defaultValue={'current'}\n                  options={[\n                    {\n                      label: t('session.CurrentUsage'),\n                      value: 'current',\n                    },\n                    {\n                      label: t('session.MaxUsage'),\n                      value: 'max',\n                    },\n                    {\n                      label: t('session.AverageUsage'),\n                      value: 'avg',\n                    },\n                  ]}\n                  onChange={(value: 'current' | 'max' | 'avg') => {\n                    setUsageMonitorDisplayTarget(value);\n                  }}\n                />\n              </Flex>\n            }\n            span={md ? 2 : 1}\n          >\n            <SessionUsageMonitor\n              sessionFrgmt={session}\n              displayTarget={usageMonitorDisplayTarget}\n            />\n          </Descriptions.Item>\n        </Descriptions>\n      </Flex>\n      <Suspense fallback={<Skeleton />}>\n        <Flex direction=\"column\" gap={'sm'} align=\"stretch\">\n          <Typography.Title level={4} style={{ margin: 0 }}>\n            {t('kernel.Kernels')}\n          </Typography.Title>\n          <ConnectedKernelList id={id} fetchKey={fetchKey} />\n        </Flex>\n      </Suspense>\n      <IdleCheckDescriptionModal\n        open={openIdleCheckDescriptionModal}\n        onCancel={() => setOpenIdleCheckDescriptionModal(false)}\n      />\n      <SessionStatusDetailModal\n        sessionFrgmt={session}\n        open={openStatusDetailModal}\n        onCancel={() => setOpenStatusDetailModal(false)}\n      />\n    </Flex>\n  ) : (\n    <Alert\n      showIcon\n      message={t('session.SessionNotFound')}\n      type=\"error\"\n      description={id}\n    ></Alert>\n  );\n};\n\nexport default SessionDetailContent;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useInterval } from '../hooks/useIntervalValue';\nimport SessionDetailContent from './SessionDetailContent';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { Button, Drawer, Skeleton, Tooltip } from 'antd';\nimport { DrawerProps } from 'antd/lib';\nimport React, { Suspense, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// import { StringParam, useQueryParam } from 'use-query-params';\n\ninterface SessionDetailDrawerProps extends DrawerProps {\n  sessionId?: string;\n}\nconst SessionDetailDrawer: React.FC<SessionDetailDrawerProps> = ({\n  sessionId,\n  ...drawerProps\n}) => {\n  const { t } = useTranslation();\n  // const [sessionId, setSessionId] = useQueryParam('sessionDetail', StringParam);\n  useSuspendedBackendaiClient();\n\n  const [isPendingReload, startReloadTransition] = useTransition();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n\n  useInterval(() => {\n    startReloadTransition(() => {\n      updateFetchKey();\n    });\n  }, 7_000);\n  return (\n    <Drawer\n      title={t('session.SessionInfo')}\n      width={800}\n      keyboard={false}\n      {...drawerProps}\n      open={!!sessionId}\n      onClose={(e) => {\n        drawerProps.onClose?.(e);\n        // setSessionId(null, 'pushIn');\n      }}\n      extra={\n        <Tooltip title={t('button.Refresh')}>\n          <Button\n            loading={isPendingReload}\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startReloadTransition(() => {\n                updateFetchKey();\n              });\n            }}\n          />\n        </Tooltip>\n      }\n    >\n      <Suspense fallback={<Skeleton />}>\n        {sessionId && (\n          <SessionDetailContent id={sessionId} fetchKey={fetchKey} />\n        )}\n      </Suspense>\n    </Drawer>\n  );\n};\n\nexport default SessionDetailDrawer;\n","/**\n * @generated SignedSource<<3bc8cc0e76dc6b081b2f06c4c88d3051>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type FolderLink_vfolderNode$data = {\n  readonly name: string | null | undefined;\n  readonly row_id: string | null | undefined;\n  readonly \" $fragmentType\": \"FolderLink_vfolderNode\";\n};\nexport type FolderLink_vfolderNode$key = {\n  readonly \" $data\"?: FolderLink_vfolderNode$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"FolderLink_vfolderNode\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"FolderLink_vfolderNode\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"row_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a8ea258e8c3e20439b53af93ec37be13\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7704b96e01528e85cdc0f1230b0069c0>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nexport type SessionDetailContentLegacyQuery$variables = {\n  uuid: string;\n};\nexport type SessionDetailContentLegacyQuery$data = {\n  readonly session_for_project_id: {\n    readonly group_id: string | null | undefined;\n  } | null | undefined;\n};\nexport type SessionDetailContentLegacyQuery = {\n  response: SessionDetailContentLegacyQuery$data;\n  variables: SessionDetailContentLegacyQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"uuid\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"uuid\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"group_id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"SessionDetailContentLegacyQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session_for_project_id\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"SessionDetailContentLegacyQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session_for_project_id\",\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"1c0255a2836eb7e492954c7ab0212c7f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"SessionDetailContentLegacyQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query SessionDetailContentLegacyQuery(\\n  $uuid: UUID!\\n) {\\n  session_for_project_id: compute_session(id: $uuid) {\\n    group_id\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d6a0dfbccdec8393f1a058dab48a0757\";\n\nexport default node;\n","/**\n * @generated SignedSource<<af2fd6c9b0a917566225c5c0dc428db7>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type SessionDetailContentQuery$variables = {\n  id: any;\n  project_id: string;\n  uuid: string;\n};\nexport type SessionDetailContentQuery$data = {\n  readonly legacy_session: {\n    readonly architecture: string | null | undefined;\n    readonly idle_checks: string | null | undefined;\n    readonly image: string | null | undefined;\n    readonly mounts: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly user_email: string | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"AppLauncherModalLegacyFragment\" | \"SessionActionButtonsLegacyFragment\" | \"SessionIdleChecksFragment\">;\n  } | null | undefined;\n  readonly session: {\n    readonly agent_ids: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly created_at: string;\n    readonly id: string;\n    readonly idle_checks: string | null | undefined;\n    readonly name: string | null | undefined;\n    readonly project_id: string | null | undefined;\n    readonly requested_slots: string | null | undefined;\n    readonly resource_opts: string | null | undefined;\n    readonly row_id: string | null | undefined;\n    readonly scaling_group: string | null | undefined;\n    readonly status: string | null | undefined;\n    readonly status_data: string | null | undefined;\n    readonly terminated_at: string | null | undefined;\n    readonly user_id: string | null | undefined;\n    readonly vfolder_mounts: ReadonlyArray<string | null | undefined> | null | undefined;\n    readonly vfolder_nodes: {\n      readonly count: number | null | undefined;\n      readonly edges: ReadonlyArray<{\n        readonly node: {\n          readonly \" $fragmentSpreads\": FragmentRefs<\"FolderLink_vfolderNode\">;\n        } | null | undefined;\n      } | null | undefined>;\n    } | null | undefined;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"AppLauncherModalFragment\" | \"ContainerCommitModalFragment\" | \"ContainerLogModalFragment\" | \"EditableSessionNameFragment\" | \"SessionActionButtonsFragment\" | \"SessionIdleChecksNodeFragment\" | \"SessionReservationFragment\" | \"SessionStatusDetailModalFragment\" | \"SessionStatusTagFragment\" | \"SessionTypeTagFragment\" | \"SessionUsageMonitorFragment\">;\n  } | null | undefined;\n};\nexport type SessionDetailContentQuery = {\n  response: SessionDetailContentQuery$data;\n  variables: SessionDetailContentQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"id\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"uuid\"\n},\nv3 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project_id\",\n    \"variableName\": \"project_id\"\n  }\n],\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"row_id\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project_id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"user_id\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_opts\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status_data\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"vfolder_mounts\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"count\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"terminated_at\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"scaling_group\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"agent_ids\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"requested_slots\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"idle_checks\",\n  \"storageKey\": null\n},\nv20 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"uuid\"\n  }\n],\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"image\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"mounts\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"user_email\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"architecture\",\n  \"storageKey\": null\n},\nv25 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"access_key\",\n  \"storageKey\": null\n},\nv26 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"service_ports\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"SessionDetailContentQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"VirtualFolderConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"vfolder_nodes\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"VirtualFolderEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"VirtualFolderNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"FolderLink_vfolderNode\"\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              (v13/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"kind\": \"RequiredField\",\n            \"field\": (v14/*: any*/),\n            \"action\": \"NONE\"\n          },\n          (v15/*: any*/),\n          (v16/*: any*/),\n          (v17/*: any*/),\n          (v18/*: any*/),\n          (v19/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionStatusTagFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionActionButtonsFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionTypeTagFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"EditableSessionNameFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionReservationFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ContainerLogModalFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionUsageMonitorFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"ContainerCommitModalFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionIdleChecksNodeFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionStatusDetailModalFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"AppLauncherModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"legacy_session\",\n        \"args\": (v20/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v21/*: any*/),\n          (v22/*: any*/),\n          (v23/*: any*/),\n          (v24/*: any*/),\n          (v19/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionIdleChecksFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"SessionActionButtonsLegacyFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"AppLauncherModalLegacyFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v1/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"SessionDetailContentQuery\",\n    \"selections\": [\n      {\n        \"alias\": \"session\",\n        \"args\": (v3/*: any*/),\n        \"concreteType\": \"ComputeSessionNode\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session_node\",\n        \"plural\": false,\n        \"selections\": [\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"VirtualFolderConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"vfolder_nodes\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"VirtualFolderEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"VirtualFolderNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/),\n                      (v6/*: any*/),\n                      (v4/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              (v13/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v14/*: any*/),\n          (v15/*: any*/),\n          (v16/*: any*/),\n          (v17/*: any*/),\n          (v18/*: any*/),\n          (v19/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"status_info\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"type\",\n            \"storageKey\": null\n          },\n          (v25/*: any*/),\n          (v26/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"commit_status\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"KernelConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"kernel_nodes\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"KernelEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"KernelNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"container_id\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"agent_id\",\n                        \"storageKey\": null\n                      },\n                      (v4/*: any*/),\n                      (v5/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cluster_idx\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cluster_role\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"live_stat\",\n                        \"storageKey\": null\n                      },\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"occupied_slots\",\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"priority\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"starts_at\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"legacy_session\",\n        \"args\": (v20/*: any*/),\n        \"concreteType\": \"ComputeSession\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"compute_session\",\n        \"plural\": false,\n        \"selections\": [\n          (v21/*: any*/),\n          (v22/*: any*/),\n          (v23/*: any*/),\n          (v24/*: any*/),\n          (v19/*: any*/),\n          (v4/*: any*/),\n          (v26/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"session_id\",\n            \"storageKey\": null\n          },\n          (v25/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"e71532958f6f296a82dc75c507b21afd\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"SessionDetailContentQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query SessionDetailContentQuery(\\n  $id: GlobalIDField!\\n  $uuid: UUID!\\n  $project_id: UUID!\\n) {\\n  session: compute_session_node(id: $id, project_id: $project_id) {\\n    id\\n    row_id\\n    name\\n    project_id\\n    user_id\\n    resource_opts\\n    status\\n    status_data\\n    vfolder_mounts\\n    vfolder_nodes @since(version: \\\"25.4.0\\\") {\\n      edges {\\n        node {\\n          ...FolderLink_vfolderNode\\n          id\\n        }\\n      }\\n      count\\n    }\\n    created_at\\n    terminated_at\\n    scaling_group\\n    agent_ids\\n    requested_slots\\n    idle_checks @since(version: \\\"24.12.0\\\")\\n    ...SessionStatusTagFragment\\n    ...SessionActionButtonsFragment\\n    ...SessionTypeTagFragment\\n    ...EditableSessionNameFragment\\n    ...SessionReservationFragment\\n    ...ContainerLogModalFragment\\n    ...SessionUsageMonitorFragment\\n    ...ContainerCommitModalFragment\\n    ...SessionIdleChecksNodeFragment\\n    ...SessionStatusDetailModalFragment\\n    ...AppLauncherModalFragment\\n  }\\n  legacy_session: compute_session(id: $uuid) {\\n    image\\n    mounts\\n    user_email\\n    architecture\\n    idle_checks @since(version: \\\"24.09.0\\\")\\n    ...SessionIdleChecksFragment\\n    ...SessionActionButtonsLegacyFragment\\n    ...AppLauncherModalLegacyFragment\\n    id\\n  }\\n}\\n\\nfragment AppLauncherModalFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  service_ports\\n  access_key\\n}\\n\\nfragment AppLauncherModalLegacyFragment on ComputeSession {\\n  id\\n  session_id\\n  service_ports\\n  access_key\\n}\\n\\nfragment ContainerCommitModalFragment on ComputeSessionNode {\\n  id\\n  name\\n  row_id\\n}\\n\\nfragment ContainerLogModalFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  name\\n  status\\n  access_key\\n  kernel_nodes {\\n    edges {\\n      node {\\n        id\\n        row_id\\n        container_id\\n        cluster_idx\\n        cluster_role\\n      }\\n    }\\n  }\\n}\\n\\nfragment EditableSessionNameFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  name\\n  priority\\n  user_id\\n  status\\n}\\n\\nfragment FolderLink_vfolderNode on VirtualFolderNode {\\n  row_id\\n  name\\n}\\n\\nfragment SessionActionButtonsFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  type\\n  status\\n  access_key\\n  service_ports\\n  commit_status\\n  user_id\\n  ...TerminateSessionModalFragment\\n  ...ContainerLogModalFragment\\n  ...ContainerCommitModalFragment\\n  ...AppLauncherModalFragment\\n}\\n\\nfragment SessionActionButtonsLegacyFragment on ComputeSession {\\n  id\\n  service_ports\\n  ...AppLauncherModalLegacyFragment\\n}\\n\\nfragment SessionIdleChecksFragment on ComputeSession {\\n  id\\n  idle_checks @since(version: \\\"24.09.0\\\")\\n}\\n\\nfragment SessionIdleChecksNodeFragment on ComputeSessionNode {\\n  id\\n  idle_checks @since(version: \\\"24.12.0\\\")\\n}\\n\\nfragment SessionReservationFragment on ComputeSessionNode {\\n  id\\n  created_at\\n  starts_at\\n  terminated_at\\n}\\n\\nfragment SessionStatusDetailModalFragment on ComputeSessionNode {\\n  id\\n  name\\n  status\\n  status_info\\n  status_data\\n  starts_at\\n}\\n\\nfragment SessionStatusTagFragment on ComputeSessionNode {\\n  id\\n  status\\n  status_info\\n  status_data\\n}\\n\\nfragment SessionTypeTagFragment on ComputeSessionNode {\\n  type\\n}\\n\\nfragment SessionUsageMonitorFragment on ComputeSessionNode {\\n  kernel_nodes {\\n    edges {\\n      node {\\n        live_stat\\n        occupied_slots\\n        id\\n      }\\n    }\\n  }\\n}\\n\\nfragment TerminateSessionModalFragment on ComputeSessionNode {\\n  id\\n  row_id\\n  name\\n  scaling_group\\n  access_key\\n  kernel_nodes {\\n    edges {\\n      node {\\n        container_id\\n        agent_id\\n        id\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"8d51f2b43cd63c7bd6f9ed6fdac08e5c\";\n\nexport default node;\n","import _ from 'lodash';\n\n/**\n * Escapes a value for CSV formatting.\n *\n * @param value - The value to escape.\n * @returns The escaped value.\n */\nfunction escapeCsvValue(value: any) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  if (typeof value === 'number' || typeof value === 'boolean') {\n    return String(value);\n  }\n\n  // Convert non-string values to string using JSON.stringify\n  value = _.isString(value) ? value : JSON.stringify(value);\n\n  // Replace double quotes within the value with two double quotes\n  return `\"${value.replace(/\"/g, '\"\"')}\"`;\n}\n\n/**\n * Converts an array of JSON objects to a CSV string.\n *\n * @param data - The array of JSON objects to convert.\n * @param format_rules - The formatting rules for each property in the JSON objects.\n * @returns The CSV string representation of the JSON objects.\n */\nexport const JSONToCSVBody = <T>(\n  data: T[],\n  format_rules?: {\n    [key in keyof T]?: (value: any) => any;\n  },\n) => {\n  const displayedData = _.map(data, (row) => {\n    return _.omit(row as object, '__fragments', '__fragmentOwner', '__id');\n  });\n\n  const CSVTitle = _.keys(displayedData[0]);\n  const CSVData = _.map(displayedData, (row) => {\n    return _.map(row, (value, key) => {\n      if (format_rules?.[key as keyof T]) {\n        return format_rules[key as keyof T]?.(value) || value;\n      }\n      return value;\n    });\n  });\n\n  const csvContent = CSVData.map((row) =>\n    row.map(escapeCsvValue).join(','),\n  ).join('\\n');\n  const csvBody = [CSVTitle.map(escapeCsvValue).join(','), csvContent].join(\n    '\\n',\n  );\n\n  return csvBody;\n};\n\n/**\n * Download a file from the given blob.\n * @param {Blob} blob - The file content.\n * @param {string} filename - The name of the file.\n */\n\nexport const downloadBlob = (blob: Blob, filename: string) => {\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.click();\n  URL.revokeObjectURL(url);\n};\n\nexport const exportCSVWithFormattingRules = <T>(\n  data: T[],\n  filename: string,\n  format_rules?: {\n    [key in keyof T]?: (value: any) => any;\n  },\n) => {\n  const bodyStr = JSONToCSVBody(data, format_rules);\n  const blob = new Blob([bodyStr], { type: 'text/csv' });\n  downloadBlob(blob, `${filename}.csv`);\n};\n"],"names":["_ref","_session$kernel_nodes","_session$kernel_nodes2","_$find","_kernelNodes$","_session$row_id$split","_session$kernel_nodes3","sessionFrgmt","defaultKernelId","modalProps","baiClient","useSuspendedBackendaiClient","token","theme","useToken","userRole","useCurrentUserRole","session","useFragment","_ContainerLogModalFragment","require","kernelNodes","kernel_nodes","edges","map","e","node","selectedKernelId","setSelectedKernelId","useState","_","cluster_role","row_id","useEffect","open","undefined","data","logs","refetch","isPending","isRefetching","dataUpdatedAt","useTanQuery","queryKey","access_key","queryFn","async","get_logs","then","req","result","staleTime","lastLineNumbers","resetPrevious","resetPreviousLineNumber","factory","deps","initialPrev","arguments","length","prevRef","useRef","prevResetKey","setPrevResetKey","current","useMemo","memoizedPrev","previous","useMemoWithPrevious","split","md","Grid","useBreakpoint","t","useTranslation","_jsx","BAIModal","title","_jsxs","Flex","style","maxWidth","gap","children","Typography","Title","level","margin","flexShrink","_Fragment","Text","fontWeight","ellipsis","name","fontFamily","copyable","text","tooltips","width","styles","header","body","height","maxHeight","footer","destroyOnClose","direction","align","wrap","BAISelect","value","onChange","autoSelectOption","options","sortBy","_e$node","_e$node2","cluster_idx","_e$node3","_e$node4","_e$node5","_e$node6","_e$node7","label","fontSize","fontSizeSM","type","substring","Divider","Tooltip","Button","size","icon","DownloadIcon","disabled","onClick","blob","Blob","downloadBlob","Date","toISOString","loading","ReloadOutlined","alignSelf","border","colorBorder","overflow","ScrollFollow","startFollowing","render","_ref2","follow","onScroll","LazyLog","caseInsensitive","enableSearch","enableSearchNavigation","selectableLines","highlight","extraLines","v0","v1","v2","hash","v3","v4","v5","v6","v7","v8","v9","kernelStatusTagColor","PREPARING","BUILDING","PULLING","PREPARED","CREATING","PENDING","SCHEDULED","RUNNING","RESTARTING","RESIZING","SUSPENDED","TERMINATING","TERMINATED","CANCELLED","ERROR","id","fetchKey","currentProject","useCurrentProjectValue","kernelIdForLogModal","setKernelIdForLogModal","session_for_project_id","useLazyLoadQuery","_ConnectedKernelListLegacyQuery","uuid","fetchPolicy","_ConnectedKernelListQuery","toGlobalId","project_id","group_id","columns","filterEmptyItem","fixed","dataIndex","ScrollTextIcon","marginInlineStart","marginXXS","role","Tag","status","record","_record$status_info","status_info","DoubleTag","values","color","onCell","BAITable","bordered","rowKey","scroll","x","dataSource","filterNonNullItems","edge","pagination","UnmountModalAfterClose","ContainerLogModal","onCancel","component","Component","editable","editableOfProps","otherProps","relayEvn","useRelayEnvironment","_EditableSessionNameFragment","optimisticName","setOptimisticName","userInfo","useCurrentUserInfo","baiRequestWithPromise","useBaiSignedRequestWithPromise","renameSessionMutation","useTanMutation","mutationFn","newName","method","url","message","App","useApp","isEditing","setIsEditing","isNotPreparingCategoryStatus","includes","isEditingAllowed","user_id","isPendingRenamingAndRefreshing","onStart","triggerType","colorTextTertiary","Form","onFinish","sessionName","mutate","onSuccess","fetchQuery","_EditableSessionNameRefetchQuery","sessionId","toPromise","catch","document","dispatchEvent","CustomEvent","onError","err","error","initialValues","flex","Item","validateDebounce","rules","getSessionNameRules","validator","rule","Promise","resolve","_EditableSessionNameDuplicatedCheckQuery","projectId","filter","_data$compute_session","compute_session_nodes","count","reject","Input","suffix","CornerDownLeftIcon","autoFocus","onKeyDown","key","_path","_path2","_path3","_path4","_extends","Object","assign","bind","n","r","hasOwnProperty","call","apply","SvgApp","svgRef","titleId","props","viewBox","fill","xmlns","ref","d","ForwardRef","Icon","logo","SvgContainerCommit","_g","SvgSessionLog","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SvgTerminalApp","SvgTerminate","strokeMiterlimit","_session$service_port","_globalThis$backendai","onRequestClose","legacySessionFrgmt","formRef","openToPublic","setOpenToPublic","tryPreferredPort","setTryPreferredPort","forceUseV1Proxy","setForceUseV1Proxy","forceUseV2Proxy","setForceUseV2Proxy","useSubDomain","setUseSubDomain","_AppLauncherModalFragment","legacySession","_AppLauncherModalLegacyFragment","servicePorts","JSON","parse","service_ports","preOpenAppTemplate","baseAppTemplate","appTemplate","useSuspenseTanQuery","fetch","res","json","allowTCPApps","globalThis","isElectron","_config","allowNonAuthTCP","preOpenAppList","app","protocol","is_inference","src","inferenceAppList","inferenceAppTemplate","baseAppList","template","item","category","redirect","Boolean","push","supports","groupedBaseAppTemplate","groupBy","useSuspendedFilteredAppTemplate","handleAppLaunch","_formRef$current","_app$name","_session$row_id","_app$redirect","_app$name2","validateFields","_values$preferredPort","appLauncher","clientIps","userPort","preferredPort","subDomain","appController","_openAppLaunchConfirmationDialog","_openTensorboardDialog","_runApp","apps","marginTop","Row","gutter","Col","span","alignContent","Image","alt","preview","textAlign","layout","openPortToPublic","Checkbox","target","checked","Trans","i18nKey","QuestionCircleOutlined","cursor","placeholder","allowPreferredPort","min","max","InputNumber","backendaiwebui","debug","upsertNotification","useSetBAINotification","isConfirmLoading","setIsConfirmLoading","_ContainerCommitModalFragment","onOk","convertSessionToImage","_session$name","backgroundTask","promise","computeSession","imageName","pending","resolved","task_id","taskId","percent","rejected","description","toText","to","finally","okButtonProps","Descriptions","column","marginBottom","required","pattern","isActive","isAppSupported","legacy_session","_userInfo$","runTerminal","showLauncher","params","_SessionActionButtonsFragment","_SessionActionButtonsLegacyFragment","openAppLauncherModal","setOpenAppLauncherModal","openTerminateModal","setOpenTerminateModal","openLogModal","setOpenLogModal","openContainerCommitModal","setOpenContainerCommitModal","isOwner","AppIcon","Suspense","fallback","AppLauncherModal","TerminalAppIcon","TerminateSessionModal","sessionFrgmts","SessionLogIcon","enableContainerCommit","ContainerCommitIcon","ContainerCommitModal","TerminateIcon","colorError","getUtilizationCheckerColor","resources","thresholds_check_operator","utilization","threshold","Math","getIdleChecksTagColor","criteria","remaining","extra","_ref3","sessionNodeFrgmt","mergedResourceSlots","useResourceSlotsDetails","sessionNode","_SessionIdleChecksNodeFragment","_SessionIdleChecksFragment","idleChecks","idle_checks","getIdleCheckTitle","_value$extra","Type","resource","_mergedResourceSlots$","deviceName","colorWhite","human_readable_name","toFixedFloorWithoutTrailingZeros","InfoCircleOutlined","colorTextSecondary","remaining_time_type","formatDurationAsDays","getTime","typeTagColor","INTERACTIVE","BATCH","INFERENCE","_SessionTypeTagFragment","vfolderNodeFragment","folderId","folderName","showIcon","generateFolderPath","useFolderExplorerOpener","vfolderNode","_FolderLink_vfolderNode","BAILink","wordBreak","colorTextDisabled","FolderOutlined","marginLeft","marginMD","_legacy_session$mount","currentUser","openIdleCheckDescriptionModal","setOpenIdleCheckDescriptionModal","openStatusDetailModal","setOpenStatusDetailModal","usageMonitorDisplayTarget","setUsageMonitorDisplayTarget","_SessionDetailContentLegacyQuery","_SessionDetailContentQuery","imageFullName","image","architecture","imminentExpirationTime","check","Alert","email","user_email","justify","EditableSessionName","Group","SessionActionButtons","SessionStatusTag","showInfo","status_data","SessionTypeTag","ImageMetaIcon","marginRight","marginXS","SessionKernelTags","vfolder_nodes","vfolder","idx","FolderLink","mounts","vfolder_mounts","mountInfo","join","scaling_group","ResourceNumbersOfSession","requested_slots","agent_ids","SessionReservation","SessionIdleChecks","marginSM","Select","popupMatchSelectWidth","display","variant","defaultValue","SessionUsageMonitor","displayTarget","Skeleton","ConnectedKernelList","IdleCheckDescriptionModal","SessionStatusDetailModal","drawerProps","isPendingReload","startReloadTransition","useTransition","updateFetchKey","useUpdatableState","useInterval","Drawer","keyboard","onClose","_drawerProps$onClose","SessionDetailContent","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","v25","v26","escapeCsvValue","String","stringify","replace","filename","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","exportCSVWithFormattingRules","format_rules","bodyStr","JSONToCSVBody","displayedData","row","CSVTitle","csvContent","_format_rules"],"sourceRoot":""}