{"version":3,"file":"static/js/2833.beb8f6fa.chunk.js","mappings":"8MAIA,MAAMA,EAAgCC,EAAAA,MACpC,IAAM,kCAqBR,EAlB4CC,KAC1C,MAAOC,EAAkBC,IAAuBC,EAAAA,EAAAA,eAC9C,aACAC,EAAAA,aAGF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAoB,CAAAC,UACnBF,EAAAA,EAAAA,KAACP,EAA6B,CAC5BU,KAA2B,SAArBP,EACNQ,SAAUA,KACRP,EAAoB,KAAM,YAAY,KAGrB,C","sources":["components/FolderInvitationResponseModalOpener.tsx"],"sourcesContent":["import { BAIUnmountAfterClose } from 'backend.ai-ui';\nimport React from 'react';\nimport { useQueryParam, StringParam } from 'use-query-params';\n\nconst FolderInvitationResponseModal = React.lazy(\n  () => import('./FolderInvitationResponseModal'),\n);\n\nconst FolderInvitationResponseModalOpener = () => {\n  const [isInvitationOpen, setIsInvitationOpen] = useQueryParam(\n    'invitation',\n    StringParam,\n  );\n\n  return (\n    <BAIUnmountAfterClose>\n      <FolderInvitationResponseModal\n        open={isInvitationOpen === 'true'}\n        onCancel={() => {\n          setIsInvitationOpen(null, 'replaceIn');\n        }}\n      />\n    </BAIUnmountAfterClose>\n  );\n};\n\nexport default FolderInvitationResponseModalOpener;\n"],"names":["FolderInvitationResponseModal","React","FolderInvitationResponseModalOpener","isInvitationOpen","setIsInvitationOpen","useQueryParam","StringParam","_jsx","BAIUnmountAfterClose","children","open","onCancel"],"sourceRoot":""}