{"version":3,"file":"static/js/180.93079c45.chunk.js","mappings":"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","sources":["components/__generated__/DomainSelectorQuery.graphql.ts","components/__generated__/ProjectResourcePolicySettingModalFragment.graphql.ts","components/__generated__/ProjectResourcePolicySettingModalModifyMutation.graphql.ts","components/__generated__/ProjectSelectorQuery.graphql.ts","components/__generated__/QuotaScopeCardFragment.graphql.ts","components/__generated__/QuotaScopeCardUnsetMutation.graphql.ts","components/__generated__/QuotaSettingModalFragment.graphql.ts","components/__generated__/QuotaSettingModalSetMutation.graphql.ts","components/__generated__/ResourcePolicyCardModifyProjectMutation.graphql.ts","components/__generated__/ResourcePolicyCardModifyUserMutation.graphql.ts","components/__generated__/ResourcePolicyCard_project_resource_policy.graphql.ts","components/__generated__/ResourcePolicyCard_user_resource_policy.graphql.ts","components/__generated__/StorageHostResourcePanelFragment.graphql.ts","components/__generated__/StorageHostSettingsPanelQuery.graphql.ts","components/__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql.ts","components/__generated__/UserResourcePolicySettingModalFragment.graphql.ts","components/__generated__/UserResourcePolicySettingModalModifyMutation.graphql.ts","components/__generated__/UserSelectorQuery.graphql.ts","components/StorageHostResourcePanel.tsx","components/ProjectSelector.tsx","components/DomainSelector.tsx","components/UserSelector.tsx","components/ProjectResourcePolicySettingModal.tsx","components/UserResourcePolicySettingModal.tsx","components/ResourcePolicyCard.tsx","components/QuotaScopeCard.tsx","components/QuotaSettingModal.tsx","components/StorageHostSettingsPanel.tsx","pages/StorageHostSettingPage.tsx","pages/__generated__/StorageHostSettingPageQuery.graphql.ts"],"sourcesContent":["/**\n * @generated SignedSource<<6ad571f958b08687b3fc333087b06e3d>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type DomainSelectorQuery$variables = {};\nexport type DomainSelectorQuery$data = {\n  readonly domains: ReadonlyArray<{\n    readonly name: string | null;\n  } | null> | null;\n};\nexport type DomainSelectorQuery = {\n  response: DomainSelectorQuery$data;\n  variables: DomainSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Domain\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"domains\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": \"domains(is_active:true)\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"DomainSelectorQuery\",\n    \"selections\": (v0/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"9df762094b74dc3eb8079edfcc73765f\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DomainSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query DomainSelectorQuery {\\n  domains(is_active: true) {\\n    name\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"c14d362fa40cf9a3cef5d1d71202cc5f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7ee3849db1e701d63ac5f808e819d5ab>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ProjectResourcePolicySettingModalFragment$data = {\n  readonly created_at: any;\n  readonly id: any;\n  readonly max_vfolder_size: any | null;\n  readonly name: string;\n  readonly \" $fragmentType\": \"ProjectResourcePolicySettingModalFragment\";\n};\nexport type ProjectResourcePolicySettingModalFragment$key = {\n  readonly \" $data\"?: ProjectResourcePolicySettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ProjectResourcePolicySettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ProjectResourcePolicySettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_size\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ProjectResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"a11454523af2ce0351cf9b2bfe041744\";\n\nexport default node;\n","/**\n * @generated SignedSource<<f9e5d45347ebf894c60d01bcad657bd1>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyProjectResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation$variables = {\n  name: string;\n  props: ModifyProjectResourcePolicyInput;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation$data = {\n  readonly modify_project_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type ProjectResourcePolicySettingModalModifyMutation = {\n  response: ProjectResourcePolicySettingModalModifyMutation$data;\n  variables: ProjectResourcePolicySettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyProjectResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_project_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"aedc4eab77206f7ab189ccd3f2d938b3\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectResourcePolicySettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ProjectResourcePolicySettingModalModifyMutation(\\n  $name: String!\\n  $props: ModifyProjectResourcePolicyInput!\\n) {\\n  modify_project_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"3cd62195489eba58dd9693f1fc9df8ff\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7501221e296c4d009f39d135d79c2589>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type ProjectSelectorQuery$variables = {\n  domain_name?: string | null;\n};\nexport type ProjectSelectorQuery$data = {\n  readonly projects: ReadonlyArray<{\n    readonly id: any | null;\n    readonly is_active: boolean | null;\n    readonly name: string | null;\n    readonly resource_policy: string | null;\n  } | null> | null;\n};\nexport type ProjectSelectorQuery = {\n  response: ProjectSelectorQuery$data;\n  variables: ProjectSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"domain_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": \"projects\",\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"domain_name\",\n        \"variableName\": \"domain_name\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      }\n    ],\n    \"concreteType\": \"Group\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"groups\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"is_active\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"name\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"resource_policy\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ProjectSelectorQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"eecad68ff1a08d753ce22ff2c5136c26\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ProjectSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ProjectSelectorQuery(\\n  $domain_name: String\\n) {\\n  projects: groups(domain_name: $domain_name, is_active: true) {\\n    id\\n    is_active\\n    name\\n    resource_policy\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"2845b31197571f750613f64207ded239\";\n\nexport default node;\n","/**\n * @generated SignedSource<<0fc7d8b1a081c028e76be6790adc0523>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaScopeCardFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n    readonly usage_bytes: any | null;\n  };\n  readonly id: any;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n  readonly \" $fragmentType\": \"QuotaScopeCardFragment\";\n};\nexport type QuotaScopeCardFragment$key = {\n  readonly \" $data\"?: QuotaScopeCardFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaScopeCardFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"usage_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"QuotaSettingModalFragment\"\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"78fe420c92ce5b9c8d5c133d1f9c389f\";\n\nexport default node;\n","/**\n * @generated SignedSource<<5de6b6644c875a46e1660d9c295d8203>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeCardUnsetMutation$variables = {\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaScopeCardUnsetMutation$data = {\n  readonly unset_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: any;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaScopeCardUnsetMutation = {\n  response: QuotaScopeCardUnsetMutation$data;\n  variables: QuotaScopeCardUnsetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"quota_scope_id\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"storage_host_name\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"UnsetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"unset_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"338836966362b14e823520f40fa56a73\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaScopeCardUnsetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaScopeCardUnsetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n) {\\n  unset_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"272001cc642518fb66015dcc367b9f65\";\n\nexport default node;\n","/**\n * @generated SignedSource<<07a7ef0c65467384653ab0c129416850>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QuotaSettingModalFragment$data = {\n  readonly details: {\n    readonly hard_limit_bytes: any | null;\n  };\n  readonly id: any;\n  readonly quota_scope_id: string;\n  readonly storage_host_name: string;\n  readonly \" $fragmentType\": \"QuotaSettingModalFragment\";\n};\nexport type QuotaSettingModalFragment$key = {\n  readonly \" $data\"?: QuotaSettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaSettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QuotaSettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"quota_scope_id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"storage_host_name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"QuotaDetails\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"details\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"hard_limit_bytes\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"QuotaScope\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"1c5ad8315a2d78cb376e7436dc6a8627\";\n\nexport default node;\n","/**\n * @generated SignedSource<<3559859233c669e5b8f3f3760f46c7f8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type QuotaScopeInput = {\n  hard_limit_bytes?: any | null;\n};\nexport type QuotaSettingModalSetMutation$variables = {\n  props: QuotaScopeInput;\n  quota_scope_id: string;\n  storage_host_name: string;\n};\nexport type QuotaSettingModalSetMutation$data = {\n  readonly set_quota_scope: {\n    readonly quota_scope: {\n      readonly details: {\n        readonly hard_limit_bytes: any | null;\n      };\n      readonly id: any;\n      readonly quota_scope_id: string;\n      readonly storage_host_name: string;\n    } | null;\n  } | null;\n};\nexport type QuotaSettingModalSetMutation = {\n  response: QuotaSettingModalSetMutation$data;\n  variables: QuotaSettingModalSetMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"quota_scope_id\",\n        \"variableName\": \"quota_scope_id\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"storage_host_name\",\n        \"variableName\": \"storage_host_name\"\n      }\n    ],\n    \"concreteType\": \"SetQuotaScope\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"set_quota_scope\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"QuotaScope\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"quota_scope\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"quota_scope_id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"storage_host_name\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"QuotaDetails\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"details\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hard_limit_bytes\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"d337cab9be9523bfde2bfb7d6bed595b\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QuotaSettingModalSetMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation QuotaSettingModalSetMutation(\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $props: QuotaScopeInput!\\n) {\\n  set_quota_scope(quota_scope_id: $quota_scope_id, storage_host_name: $storage_host_name, props: $props) {\\n    quota_scope {\\n      id\\n      quota_scope_id\\n      storage_host_name\\n      details {\\n        hard_limit_bytes\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0e8509b3174920c1dd917ece91d41161\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b263bb8feadf06719a2f9fba3160a16b>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyProjectResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type ResourcePolicyCardModifyProjectMutation$variables = {\n  name: string;\n  props: ModifyProjectResourcePolicyInput;\n};\nexport type ResourcePolicyCardModifyProjectMutation$data = {\n  readonly modify_project_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type ResourcePolicyCardModifyProjectMutation = {\n  response: ResourcePolicyCardModifyProjectMutation$data;\n  variables: ResourcePolicyCardModifyProjectMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyProjectResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_project_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ResourcePolicyCardModifyProjectMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ResourcePolicyCardModifyProjectMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"187f01c6b4def3afeb9b1890160738ff\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ResourcePolicyCardModifyProjectMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ResourcePolicyCardModifyProjectMutation(\\n  $name: String!\\n  $props: ModifyProjectResourcePolicyInput!\\n) {\\n  modify_project_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0aa47dc55b37b27a5c880470a2e98ceb\";\n\nexport default node;\n","/**\n * @generated SignedSource<<eec1dbdd0e31e9927bc6e4e12958eaca>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyUserResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type ResourcePolicyCardModifyUserMutation$variables = {\n  name: string;\n  props: ModifyUserResourcePolicyInput;\n};\nexport type ResourcePolicyCardModifyUserMutation$data = {\n  readonly modify_user_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type ResourcePolicyCardModifyUserMutation = {\n  response: ResourcePolicyCardModifyUserMutation$data;\n  variables: ResourcePolicyCardModifyUserMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyUserResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_user_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ResourcePolicyCardModifyUserMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ResourcePolicyCardModifyUserMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"9359c1f4ce56dfae06cb5dce603bd527\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ResourcePolicyCardModifyUserMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation ResourcePolicyCardModifyUserMutation(\\n  $name: String!\\n  $props: ModifyUserResourcePolicyInput!\\n) {\\n  modify_user_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"0ec87fb70626f0880b7db7124a879bbd\";\n\nexport default node;\n","/**\n * @generated SignedSource<<6abab33e1c0b3540b8034dcd9ad1f6ac>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ResourcePolicyCard_project_resource_policy$data = {\n  readonly id: any;\n  readonly max_vfolder_size: any | null;\n  readonly name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ProjectResourcePolicySettingModalFragment\">;\n  readonly \" $fragmentType\": \"ResourcePolicyCard_project_resource_policy\";\n};\nexport type ResourcePolicyCard_project_resource_policy$key = {\n  readonly \" $data\"?: ResourcePolicyCard_project_resource_policy$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ResourcePolicyCard_project_resource_policy\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ResourcePolicyCard_project_resource_policy\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_size\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"ProjectResourcePolicySettingModalFragment\"\n    }\n  ],\n  \"type\": \"ProjectResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"fff3d1eace997c19028ac10821a659a8\";\n\nexport default node;\n","/**\n * @generated SignedSource<<a4f093f133e9ec6249f4da931391b0ae>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ResourcePolicyCard_user_resource_policy$data = {\n  readonly id: any;\n  readonly max_vfolder_size: any | null;\n  readonly name: string;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"UserResourcePolicySettingModalFragment\">;\n  readonly \" $fragmentType\": \"ResourcePolicyCard_user_resource_policy\";\n};\nexport type ResourcePolicyCard_user_resource_policy$key = {\n  readonly \" $data\"?: ResourcePolicyCard_user_resource_policy$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ResourcePolicyCard_user_resource_policy\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ResourcePolicyCard_user_resource_policy\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_size\",\n      \"storageKey\": null\n    },\n    {\n      \"args\": null,\n      \"kind\": \"FragmentSpread\",\n      \"name\": \"UserResourcePolicySettingModalFragment\"\n    }\n  ],\n  \"type\": \"UserResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"449af16bb5d0d4ad3854575394e69e40\";\n\nexport default node;\n","/**\n * @generated SignedSource<<43d4063d6d35b79d500b74f0832dea56>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostResourcePanelFragment$data = {\n  readonly backend: string | null;\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly path: string | null;\n  readonly usage: any | null;\n  readonly \" $fragmentType\": \"StorageHostResourcePanelFragment\";\n};\nexport type StorageHostResourcePanelFragment$key = {\n  readonly \" $data\"?: StorageHostResourcePanelFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostResourcePanelFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"backend\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"path\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"usage\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"30a1b4101eeb2fae45385780dbc0ddcc\";\n\nexport default node;\n","/**\n * @generated SignedSource<<b985d89b21f5a4f6e04abbef76df8863>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanelQuery$variables = {\n  project_resource_policy_name: string;\n  quota_scope_id: string;\n  skipProjectResourcePolicy: boolean;\n  skipQuotaScope: boolean;\n  skipUserResourcePolicy: boolean;\n  storage_host_name: string;\n  user_resource_policy_name?: string | null;\n};\nexport type StorageHostSettingsPanelQuery$data = {\n  readonly project_resource_policy?: {\n    readonly max_vfolder_size: any | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ResourcePolicyCard_project_resource_policy\">;\n  } | null;\n  readonly quota_scope?: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"QuotaScopeCardFragment\" | \"QuotaSettingModalFragment\">;\n  } | null;\n  readonly user_resource_policy?: {\n    readonly max_vfolder_size: any | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ResourcePolicyCard_user_resource_policy\">;\n  } | null;\n};\nexport type StorageHostSettingsPanelQuery = {\n  response: StorageHostSettingsPanelQuery$data;\n  variables: StorageHostSettingsPanelQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"project_resource_policy_name\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"quota_scope_id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipProjectResourcePolicy\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipQuotaScope\"\n},\nv4 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"skipUserResourcePolicy\"\n},\nv5 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"storage_host_name\"\n},\nv6 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"user_resource_policy_name\"\n},\nv7 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"project_resource_policy_name\"\n  }\n],\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"max_vfolder_size\",\n  \"storageKey\": null\n},\nv9 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"name\",\n    \"variableName\": \"user_resource_policy_name\"\n  }\n],\nv10 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"quota_scope_id\",\n    \"variableName\": \"quota_scope_id\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"storage_host_name\",\n    \"variableName\": \"storage_host_name\"\n  }\n],\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv12 = [\n  (v8/*: any*/),\n  (v11/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"name\",\n    \"storageKey\": null\n  },\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"created_at\",\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/),\n      (v4/*: any*/),\n      (v5/*: any*/),\n      (v6/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipProjectResourcePolicy\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v7/*: any*/),\n            \"concreteType\": \"ProjectResourcePolicy\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"project_resource_policy\",\n            \"plural\": false,\n            \"selections\": [\n              (v8/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ResourcePolicyCard_project_resource_policy\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"condition\": \"skipUserResourcePolicy\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v9/*: any*/),\n            \"concreteType\": \"UserResourcePolicy\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user_resource_policy\",\n            \"plural\": false,\n            \"selections\": [\n              (v8/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"ResourcePolicyCard_user_resource_policy\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v10/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaSettingModalFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"QuotaScopeCardFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v2/*: any*/),\n      (v6/*: any*/),\n      (v4/*: any*/),\n      (v1/*: any*/),\n      (v5/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"selections\": [\n      {\n        \"condition\": \"skipProjectResourcePolicy\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v7/*: any*/),\n            \"concreteType\": \"ProjectResourcePolicy\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"project_resource_policy\",\n            \"plural\": false,\n            \"selections\": (v12/*: any*/),\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"condition\": \"skipUserResourcePolicy\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v9/*: any*/),\n            \"concreteType\": \"UserResourcePolicy\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user_resource_policy\",\n            \"plural\": false,\n            \"selections\": (v12/*: any*/),\n            \"storageKey\": null\n          }\n        ]\n      },\n      {\n        \"condition\": \"skipQuotaScope\",\n        \"kind\": \"Condition\",\n        \"passingValue\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": (v10/*: any*/),\n            \"concreteType\": \"QuotaScope\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"quota_scope\",\n            \"plural\": false,\n            \"selections\": [\n              (v11/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"quota_scope_id\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"storage_host_name\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"QuotaDetails\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"details\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"hard_limit_bytes\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"usage_bytes\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"a3e4e0b9f1b6104c0cad5d597070a7ad\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingsPanelQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingsPanelQuery(\\n  $project_resource_policy_name: String!\\n  $skipProjectResourcePolicy: Boolean!\\n  $user_resource_policy_name: String\\n  $skipUserResourcePolicy: Boolean!\\n  $quota_scope_id: String!\\n  $storage_host_name: String!\\n  $skipQuotaScope: Boolean!\\n) {\\n  project_resource_policy(name: $project_resource_policy_name) @skip(if: $skipProjectResourcePolicy) {\\n    max_vfolder_size\\n    ...ResourcePolicyCard_project_resource_policy\\n  }\\n  user_resource_policy(name: $user_resource_policy_name) @skip(if: $skipUserResourcePolicy) {\\n    max_vfolder_size\\n    ...ResourcePolicyCard_user_resource_policy\\n  }\\n  quota_scope(storage_host_name: $storage_host_name, quota_scope_id: $quota_scope_id) @skip(if: $skipQuotaScope) {\\n    ...QuotaSettingModalFragment\\n    ...QuotaScopeCardFragment\\n  }\\n}\\n\\nfragment ProjectResourcePolicySettingModalFragment on ProjectResourcePolicy {\\n  id\\n  name\\n  created_at\\n  max_vfolder_size\\n}\\n\\nfragment QuotaScopeCardFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n    usage_bytes\\n  }\\n  ...QuotaSettingModalFragment\\n}\\n\\nfragment QuotaSettingModalFragment on QuotaScope {\\n  id\\n  quota_scope_id\\n  storage_host_name\\n  details {\\n    hard_limit_bytes\\n  }\\n}\\n\\nfragment ResourcePolicyCard_project_resource_policy on ProjectResourcePolicy {\\n  id\\n  name\\n  max_vfolder_size\\n  ...ProjectResourcePolicySettingModalFragment\\n}\\n\\nfragment ResourcePolicyCard_user_resource_policy on UserResourcePolicy {\\n  id\\n  name\\n  max_vfolder_size\\n  ...UserResourcePolicySettingModalFragment\\n}\\n\\nfragment UserResourcePolicySettingModalFragment on UserResourcePolicy {\\n  id\\n  name\\n  created_at\\n  max_vfolder_size\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"48491998ccff178a7d2b714b05f49115\";\n\nexport default node;\n","/**\n * @generated SignedSource<<7acd4325686b832afcb8cccb2a539ff6>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$data = {\n  readonly capabilities: ReadonlyArray<string | null> | null;\n  readonly id: string | null;\n  readonly \" $fragmentType\": \"StorageHostSettingsPanel_storageVolumeFrgmt\";\n};\nexport type StorageHostSettingsPanel_storageVolumeFrgmt$key = {\n  readonly \" $data\"?: StorageHostSettingsPanel_storageVolumeFrgmt$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"capabilities\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"StorageVolume\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"2f9e5e6060806e6f9265e5cbbd325afe\";\n\nexport default node;\n","/**\n * @generated SignedSource<<a0948a0f2e44a51e2103e95eae83b900>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserResourcePolicySettingModalFragment$data = {\n  readonly created_at: any;\n  readonly id: any;\n  readonly max_vfolder_size: any | null;\n  readonly name: string;\n  readonly \" $fragmentType\": \"UserResourcePolicySettingModalFragment\";\n};\nexport type UserResourcePolicySettingModalFragment$key = {\n  readonly \" $data\"?: UserResourcePolicySettingModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"UserResourcePolicySettingModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"UserResourcePolicySettingModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"max_vfolder_size\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"UserResourcePolicy\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"00ce66ded6bf021a4faadaa78814ccf4\";\n\nexport default node;\n","/**\n * @generated SignedSource<<d5225ea9e7e68609387b203df5c90d3c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nexport type ModifyUserResourcePolicyInput = {\n  max_vfolder_size: any;\n};\nexport type UserResourcePolicySettingModalModifyMutation$variables = {\n  name: string;\n  props: ModifyUserResourcePolicyInput;\n};\nexport type UserResourcePolicySettingModalModifyMutation$data = {\n  readonly modify_user_resource_policy: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n  } | null;\n};\nexport type UserResourcePolicySettingModalModifyMutation = {\n  response: UserResourcePolicySettingModalModifyMutation$data;\n  variables: UserResourcePolicySettingModalModifyMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"props\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"props\",\n        \"variableName\": \"props\"\n      }\n    ],\n    \"concreteType\": \"ModifyUserResourcePolicy\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"modify_user_resource_policy\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"ok\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"msg\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f33ed379f4871e357183803b340a938a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserResourcePolicySettingModalModifyMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserResourcePolicySettingModalModifyMutation(\\n  $name: String!\\n  $props: ModifyUserResourcePolicyInput!\\n) {\\n  modify_user_resource_policy(name: $name, props: $props) {\\n    ok\\n    msg\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"d50cbcfb63bfd30da81fea8968bb6436\";\n\nexport default node;\n","/**\n * @generated SignedSource<<bf0b4cbded1569190cc46f94e0dca86c>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserSelectorQuery$variables = {\n  filter?: string | null;\n  limit: number;\n  offset: number;\n};\nexport type UserSelectorQuery$data = {\n  readonly user_list: {\n    readonly items: ReadonlyArray<{\n      readonly email: string | null;\n      readonly id: string | null;\n      readonly is_active: boolean | null;\n      readonly resource_policy: string | null;\n    } | null>;\n  } | null;\n};\nexport type UserSelectorQuery = {\n  response: UserSelectorQuery$data;\n  variables: UserSelectorQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"filter\",\n        \"variableName\": \"filter\"\n      },\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"is_active\",\n        \"value\": true\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"limit\",\n        \"variableName\": \"limit\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"offset\",\n        \"variableName\": \"offset\"\n      }\n    ],\n    \"concreteType\": \"UserList\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"user_list\",\n    \"plural\": false,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"items\",\n        \"plural\": true,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"is_active\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"email\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"resource_policy\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/),\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSelectorQuery\",\n    \"selections\": (v3/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"f552e13a727e58f49a7a7e49a466d4d2\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSelectorQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSelectorQuery(\\n  $limit: Int!\\n  $offset: Int!\\n  $filter: String\\n) {\\n  user_list(limit: $limit, offset: $offset, filter: $filter, is_active: true) {\\n    items {\\n      id\\n      is_active\\n      email\\n      resource_policy\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"323d93fb2d8eb4ee2d1d3677121f9ad2\";\n\nexport default node;\n","import { useFragment } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { StorageHostResourcePanelFragment$key } from \"./__generated__/StorageHostResourcePanelFragment.graphql\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport { Progress, Descriptions, Typography, Tag } from \"antd\";\n\nimport { _humanReadableDecimalSize } from \"../helper/index\";\nimport _ from \"lodash\";\n\nconst usageIndicatorColor = (percentage: number) => {\n  return percentage < 70\n    ? \"rgba(58, 178, 97, 1)\"\n    : percentage < 90\n    ? \"rgb(223, 179, 23)\"\n    : \"#ef5350\";\n};\n\nconst StorageHostResourcePanel: React.FC<{\n  storageVolumeFrgmt: StorageHostResourcePanelFragment$key | null;\n}> = ({ storageVolumeFrgmt: resourceFrgmt }) => {\n  const { t } = useTranslation();\n\n  const resource = useFragment(\n    graphql`\n      fragment StorageHostResourcePanelFragment on StorageVolume {\n        id\n        backend\n        capabilities\n        path\n        usage\n      }\n    `,\n    resourceFrgmt\n  );\n\n  const parsedUsage = JSON.parse(resource?.usage || \"{}\");\n  const usedBytes = parsedUsage?.used_bytes;\n  const capacityBytes = parsedUsage?.capacity_bytes;\n  const usageRatio = capacityBytes > 0 ? usedBytes / capacityBytes : 0;\n  const storageUsage = {\n    used_bytes: usedBytes,\n    capacity_bytes: capacityBytes,\n    percent: Number((usageRatio * 100).toFixed(1)),\n  };\n\n  return (\n    <Descriptions size=\"small\" bordered column={3}>\n      <Descriptions.Item label={t(\"storageHost.Usage\")} span={3}>\n        {storageUsage?.percent < 100 ? (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            strokeColor={usageIndicatorColor(storageUsage?.percent)}\n          ></Progress>\n        ) : (\n          <Progress\n            size={[200, 15]}\n            percent={storageUsage?.percent}\n            status=\"exception\"\n          ></Progress>\n        )}\n        <Typography.Text type=\"secondary\">\n          {t(\"storageHost.Used\")}:{\" \"}\n        </Typography.Text>\n        {_humanReadableDecimalSize(storageUsage?.used_bytes)}\n        <Typography.Text type=\"secondary\">{\" / \"}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {t(\"storageHost.Total\")}:{\" \"}\n        </Typography.Text>\n        {_humanReadableDecimalSize(storageUsage?.capacity_bytes)}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.Endpoint\")}>\n        {resource?.path}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.BackendType\")}>\n        {resource?.backend}\n      </Descriptions.Item>\n      <Descriptions.Item label={t(\"agent.Capabilities\")}>\n        {_.map(resource?.capabilities, (cap) => (\n          <Tag key={cap}>{cap}</Tag>\n        ))}\n      </Descriptions.Item>\n    </Descriptions>\n  );\n};\n\nexport default StorageHostResourcePanel;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { ProjectSelectorQuery } from \"./__generated__/ProjectSelectorQuery.graphql\";\n\nimport _ from \"lodash\";\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props extends SelectProps {\n  onSelectProject?: (project: any) => void;\n  domain: string;\n}\n\nconst ProjectSelector: React.FC<Props> = ({\n  onSelectProject,\n  domain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { projects } = useLazyLoadQuery<ProjectSelectorQuery>(\n    graphql`\n      query ProjectSelectorQuery($domain_name: String) {\n        projects: groups(domain_name: $domain_name, is_active: true) {\n          id\n          is_active\n          name\n          resource_policy\n        }\n      }\n    `,\n    {\n      domain_name: domain,\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectProject?.(option);\n      }}\n      placeholder={t(\"storageHost.quotaSettings.SelectProject\")}\n      {...selectProps}\n    >\n      {_.map(projects, (project) => {\n        return (\n          <Select.Option\n            key={project?.id}\n            projectId={project?.id}\n            projectResourcePolicy={project?.resource_policy}\n          >\n            {project?.name}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default ProjectSelector;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { DomainSelectorQuery } from \"./__generated__/DomainSelectorQuery.graphql\";\n\nimport _ from \"lodash\";\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface Props extends SelectProps {\n  onSelectDomain?: (project: any) => void;\n}\nconst DomainSelector: React.FC<Props> = ({\n  onSelectDomain,\n  ...selectProps\n}) => {\n  const { t } = useTranslation();\n\n  const { domains } = useLazyLoadQuery<DomainSelectorQuery>(\n    graphql`\n      query DomainSelectorQuery {\n        domains(is_active: true) {\n          name\n        }\n      }\n    `,\n    {},\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      onChange={(value, option) => {\n        onSelectDomain?.(option);\n      }}\n      placeholder={t(\"storageHost.quotaSettings.SelectDomain\")}\n      {...selectProps}\n    >\n      {_.map(domains, (domain) => {\n        return (\n          <Select.Option key={domain?.name} domainName={domain?.name}>\n            {domain?.name}\n          </Select.Option>\n        );\n      })}\n      ;\n    </Select>\n  );\n};\n\nexport default DomainSelector;\n","import React, { startTransition, useState } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { UserSelectorQuery } from \"./__generated__/UserSelectorQuery.graphql\";\n\nimport { Select, SelectProps } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\n\ninterface Props extends SelectProps {\n  onSelectUser?: (user: any) => void;\n}\n\nconst UserSelector: React.FC<Props> = ({ onSelectUser, ...selectProps }) => {\n  const { t } = useTranslation();\n  const [search, setSearch] = useState<string>(\"\");\n  const { user_list } = useLazyLoadQuery<UserSelectorQuery>(\n    graphql`\n      query UserSelectorQuery($limit: Int!, $offset: Int!, $filter: String) {\n        user_list(\n          limit: $limit\n          offset: $offset\n          filter: $filter\n          is_active: true\n        ) {\n          items {\n            id\n            is_active\n            email\n            resource_policy\n          }\n        }\n      }\n    `,\n    {\n      limit: 50,\n      offset: 0,\n      filter: search?.length === 0 ? null : 'email ilike \"%' + search + '%\"',\n    },\n    {\n      fetchPolicy: \"store-and-network\",\n    }\n  );\n  return (\n    <Select\n      filterOption={false}\n      onSearch={(value) => {\n        startTransition(() => {\n          setSearch(value);\n        });\n      }}\n      onChange={(value, option) => {\n        onSelectUser?.(option);\n      }}\n      showSearch\n      placeholder={t(\"storageHost.quotaSettings.SelectUser\")}\n      {...selectProps}\n    >\n      {_.map(user_list?.items, (user) => {\n        return (\n          <Select.Option\n            key={user?.id}\n            userId={user?.id}\n            userResourcePolicy={user?.resource_policy}\n          >\n            {user?.email}\n          </Select.Option>\n        );\n      })}\n    </Select>\n  );\n};\n\nexport default UserSelector;\n","import React from \"react\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { ProjectResourcePolicySettingModalFragment$key } from \"./__generated__/ProjectResourcePolicySettingModalFragment.graphql\";\n// import { ProjectResourcePolicySettingModalCreateMutation } from \"./__generated__/ProjectResourcePolicySettingModalCreateMutation.graphql\";\nimport { ProjectResourcePolicySettingModalModifyMutation } from \"./__generated__/ProjectResourcePolicySettingModalModifyMutation.graphql\";\n\nimport { Modal, ModalProps, Form, Input, message, Alert } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { GBToBytes, bytesToGB } from \"../helper\";\n\ninterface Props extends ModalProps {\n  projectResourcePolicyFrgmt: ProjectResourcePolicySettingModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst ProjectResourcePolicySettingModal: React.FC<Props> = ({\n  projectResourcePolicyFrgmt: resourcePolicyFrgmt,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const projectResourcePolicyInfo = useFragment(\n    graphql`\n      fragment ProjectResourcePolicySettingModalFragment on ProjectResourcePolicy {\n        id\n        name\n        created_at\n        max_vfolder_size\n      }\n    `,\n    resourcePolicyFrgmt\n  );\n\n  // const [\n  //   commitCreateProjectResourcePolicy,\n  //   isInFlightCommitCreateProjectResourcePolicy,\n  // ] = useMutation<ProjectResourcePolicySettingModalCreateMutation>(graphql`\n  //   mutation ProjectResourcePolicySettingModalCreateMutation(\n  //     $name: String!\n  //     $props: CreateProjectResourcePolicyInput!\n  //   ) {\n  //     create_project_resource_policy(name: $name, props: $props) {\n  //       ok\n  //       msg\n  //       resource_policy {\n  //         max_vfolder_size\n  //       }\n  //     }\n  //   }\n  // `);\n\n  const [\n    commitModifyProjectResourcePolicy,\n    // isInFlightCommitModifyProjectResourcePolicy,\n  ] = useMutation<ProjectResourcePolicySettingModalModifyMutation>(graphql`\n    mutation ProjectResourcePolicySettingModalModifyMutation(\n      $name: String!\n      $props: ModifyProjectResourcePolicyInput!\n    ) {\n      modify_project_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      if (\n        projectResourcePolicyInfo?.name &&\n        projectResourcePolicyInfo?.max_vfolder_size\n      ) {\n        commitModifyProjectResourcePolicy({\n          variables: {\n            name: projectResourcePolicyInfo?.name,\n            props: {\n              max_vfolder_size: GBToBytes(values?.max_vfolder_size),\n            },\n          },\n          onCompleted(response) {\n            if (response?.modify_project_resource_policy?.ok) {\n              message.success(\n                t(\"storageHost.ResourcePolicySuccessfullyUpdated\")\n              );\n            } else {\n              message.error(response?.modify_project_resource_policy?.msg);\n            }\n            onRequestClose();\n          },\n          onError(error) {\n            console.log(error);\n            message.error(error.message);\n          },\n        });\n      } else {\n        //   commitCreateProjectResourcePolicy({\n        //     variables: {\n        //       // TODO: Apply multiple resource policy\n        //       // Create a project resource policy with the same name as the project name\n        //       name: projectResourcePolicy || \"\",\n        //       props: {\n        //         max_vfolder_size: GBToBytes(values?.max_vfolder_size),\n        //       },\n        //     },\n        //     onCompleted(response) {\n        //       if (response?.create_project_resource_policy?.ok) {\n        //         message.success(\n        //           t(\"storageHost.ResourcePolicySuccessfullyCreated\")\n        //         );\n        //       } else {\n        //         message.error(response?.create_project_resource_policy?.msg);\n        //       }\n        //       onRequestClose();\n        //     },\n        //     onError(error) {\n        //       console.log(error);\n        //       message.error(error.message);\n        //     },\n        //   });\n      }\n    });\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      title={t(\"storageHost.ResourcePolicySettings\")}\n      onOk={_onOk}\n    >\n      <Alert\n        message={t(\"storageHost.BeCarefulToSetProjectResourcePolicy\")}\n        type=\"warning\"\n        showIcon\n        style={{ marginTop: 20, marginBottom: 25 }}\n      />\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        initialValues={{\n          id: projectResourcePolicyInfo?.id,\n          name: projectResourcePolicyInfo?.name,\n          created_at: projectResourcePolicyInfo?.created_at,\n          max_vfolder_size:\n            projectResourcePolicyInfo?.max_vfolder_size === -1\n              ? null\n              : bytesToGB(projectResourcePolicyInfo?.max_vfolder_size),\n        }}\n      >\n        <Form.Item\n          name=\"max_vfolder_size\"\n          label={t(\"storageHost.MaxFolderSize\")}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t(\"storageHost.quotaSettings.AllowNumberAndDot\") ||\n                \"Allows numbers and .(dot) only\",\n            },\n          ]}\n        >\n          <Input addonAfter=\"GB\" type=\"number\" step={0.25} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ProjectResourcePolicySettingModal;\n","import React from \"react\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { UserResourcePolicySettingModalFragment$key } from \"./__generated__/UserResourcePolicySettingModalFragment.graphql\";\n// import { UserResourcePolicySettingModalCreateMutation } from \"./__generated__/UserResourcePolicySettingModalCreateMutation.graphql\";\nimport { UserResourcePolicySettingModalModifyMutation } from \"./__generated__/UserResourcePolicySettingModalModifyMutation.graphql\";\n\nimport { Modal, ModalProps, Form, Input, message, Alert } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { GBToBytes, bytesToGB } from \"../helper\";\n\ninterface Props extends ModalProps {\n  // userResourcePolicy: string;\n  userResourcePolicyFrgmt: UserResourcePolicySettingModalFragment$key | null;\n  onRequestClose: () => void;\n}\n\nconst UserResourcePolicySettingModal: React.FC<Props> = ({\n  userResourcePolicyFrgmt: resourcePolicyFrgmt,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const userResourcePolicyInfo = useFragment(\n    graphql`\n      fragment UserResourcePolicySettingModalFragment on UserResourcePolicy {\n        id\n        name\n        created_at\n        max_vfolder_size\n      }\n    `,\n    resourcePolicyFrgmt\n  );\n\n  // const [\n  //   commitCreateUserResourcePolicy,\n  //   isInFlightCommitCreateUserResourcePolicy,\n  // ] = useMutation<UserResourcePolicySettingModalCreateMutation>(graphql`\n  //   mutation UserResourcePolicySettingModalCreateMutation(\n  //     $name: String!\n  //     $props: CreateUserResourcePolicyInput!\n  //   ) {\n  //     create_user_resource_policy(name: $name, props: $props) {\n  //       ok\n  //       msg\n  //       resource_policy {\n  //         max_vfolder_size\n  //       }\n  //     }\n  //   }\n  // `);\n\n  const [\n    commitModifyUserResourcePolicy,\n    // isInFlightCommitModifyUserResourcePolicy,\n  ] = useMutation<UserResourcePolicySettingModalModifyMutation>(graphql`\n    mutation UserResourcePolicySettingModalModifyMutation(\n      $name: String!\n      $props: ModifyUserResourcePolicyInput!\n    ) {\n      modify_user_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      if (userResourcePolicyInfo?.name) {\n        commitModifyUserResourcePolicy({\n          variables: {\n            name: userResourcePolicyInfo?.name,\n            props: {\n              max_vfolder_size: GBToBytes(values?.max_vfolder_size),\n            },\n          },\n          onCompleted(response) {\n            if (response.modify_user_resource_policy?.ok) {\n              message.success(\n                t(\"storageHost.ResourcePolicySuccessfullyUpdated\")\n              );\n            } else {\n              message.error(response?.modify_user_resource_policy?.msg);\n            }\n            onRequestClose();\n          },\n          onError(error) {\n            console.log(error);\n            message.error(error?.message);\n          },\n        });\n      } else {\n        // commitCreateUserResourcePolicy({\n        //   variables: {\n        //     // TODO: Apply multiple resource policy\n        //     // Create a user resource policy with the same name as the user name\n        //     name: userResourcePolicy || \"\",\n        //     props: {\n        //       max_vfolder_size: GBToBytes(values?.max_vfolder_size),\n        //     },\n        //   },\n        //   onCompleted(response) {\n        //     if (response?.create_user_resource_policy?.ok) {\n        //       message.success(\n        //         t(\"storageHost.ResourcePolicySuccessfullyCreated\")\n        //       );\n        //     } else {\n        //       message.error(response?.create_user_resource_policy?.msg);\n        //     }\n        //     onRequestClose();\n        //   },\n        //   onError(error) {\n        //     console.log(error);\n        //     message.error(error?.message);\n        //   },\n        // });\n      }\n    });\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      title={t(\"storageHost.ResourcePolicySettings\")}\n      onOk={_onOk}\n    >\n      <Alert\n        message={t(\"storageHost.BeCarefulToSetUserResourcePolicy\")}\n        type=\"warning\"\n        showIcon\n        style={{ marginTop: 20, marginBottom: 25 }}\n      />\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        initialValues={{\n          id: userResourcePolicyInfo?.id,\n          name: userResourcePolicyInfo?.name,\n          created_at: userResourcePolicyInfo?.created_at,\n          max_vfolder_size:\n            userResourcePolicyInfo?.max_vfolder_size === -1\n              ? null\n              : bytesToGB(userResourcePolicyInfo?.max_vfolder_size),\n        }}\n      >\n        <Form.Item\n          name=\"max_vfolder_size\"\n          label={t(\"storageHost.MaxFolderSize\")}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t(\"storageHost.quotaSettings.AllowNumberAndDot\") ||\n                \"Allows numbers and .(dot) only\",\n            },\n          ]}\n        >\n          <Input addonAfter=\"GB\" type=\"number\" step={0.25} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UserResourcePolicySettingModal;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { ResourcePolicyCardModifyProjectMutation } from \"./__generated__/ResourcePolicyCardModifyProjectMutation.graphql\";\nimport { ResourcePolicyCardModifyUserMutation } from \"./__generated__/ResourcePolicyCardModifyUserMutation.graphql\";\n\nimport {\n  Button,\n  Card,\n  CardProps,\n  Descriptions,\n  Modal,\n  message,\n  theme,\n} from \"antd\";\nimport {\n  EditFilled,\n  CloseOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport ProjectResourcePolicySettingModal from \"./ProjectResourcePolicySettingModal\";\nimport UserResourcePolicySettingModal from \"./UserResourcePolicySettingModal\";\n\nimport { _humanReadableDecimalSize } from \"../helper/index\";\nimport { useTranslation } from \"react-i18next\";\nimport { useToggle } from \"ahooks\";\nimport { ResourcePolicyCard_project_resource_policy$key } from \"./__generated__/ResourcePolicyCard_project_resource_policy.graphql\";\nimport { ResourcePolicyCard_user_resource_policy$key } from \"./__generated__/ResourcePolicyCard_user_resource_policy.graphql\";\nimport Flex from \"./Flex\";\n\ninterface Props extends CardProps {\n  projectResourcePolicyFrgmt: ResourcePolicyCard_project_resource_policy$key | null;\n  userResourcePolicyFrgmt: ResourcePolicyCard_user_resource_policy$key | null;\n  onChangePolicy: () => void;\n}\nconst ResourcePolicyCard: React.FC<Props> = ({\n  projectResourcePolicyFrgmt,\n  userResourcePolicyFrgmt,\n  onChangePolicy,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [\n    visibleProjectResourcePolicySettingModal,\n    { toggle: toggleProjectResourcePolicySettingModal },\n  ] = useToggle(false);\n  const [\n    visibleUserResourcePolicySettingModal,\n    { toggle: toggleUserResourcePolicySettingModal },\n  ] = useToggle(false);\n\n  const project_resource_policy = useFragment(\n    graphql`\n      fragment ResourcePolicyCard_project_resource_policy on ProjectResourcePolicy {\n        id\n        name\n        max_vfolder_size\n        ...ProjectResourcePolicySettingModalFragment\n      }\n    `,\n    projectResourcePolicyFrgmt\n  );\n  const user_resource_policy = useFragment(\n    graphql`\n      fragment ResourcePolicyCard_user_resource_policy on UserResourcePolicy {\n        id\n        name\n        max_vfolder_size\n        ...UserResourcePolicySettingModalFragment\n      }\n    `,\n    userResourcePolicyFrgmt\n  );\n\n  const [\n    commitModifyProjectResourcePolicy,\n    // isInFlightCommitModifyProjectResourcePolicy,\n  ] = useMutation<ResourcePolicyCardModifyProjectMutation>(graphql`\n    mutation ResourcePolicyCardModifyProjectMutation(\n      $name: String!\n      $props: ModifyProjectResourcePolicyInput!\n    ) {\n      modify_project_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const [\n    commitModifyUserResourcePolicy,\n    // isInFlightCommitModifyUserResourcePolicy,\n  ] = useMutation<ResourcePolicyCardModifyUserMutation>(graphql`\n    mutation ResourcePolicyCardModifyUserMutation(\n      $name: String!\n      $props: ModifyUserResourcePolicyInput!\n    ) {\n      modify_user_resource_policy(name: $name, props: $props) {\n        ok\n        msg\n      }\n    }\n  `);\n\n  const confirmUnsetResourcePolicy = () => {\n    Modal.confirm({\n      title: t(\"storageHost.UnsetResourcePolicy\"),\n      content: t(\"storageHost.DoYouWantToUseDefaultValue\"),\n      icon: <ExclamationCircleOutlined />,\n      okText: t(\"button.Confirm\"),\n      onOk() {\n        if (project_resource_policy) {\n          commitModifyProjectResourcePolicy({\n            variables: {\n              name: project_resource_policy.name,\n              props: {\n                max_vfolder_size: -1,\n              },\n            },\n            onCompleted(response) {\n              if (!response?.modify_project_resource_policy?.ok) {\n                message.error(response?.modify_project_resource_policy?.msg);\n              } else {\n                onChangePolicy();\n                message.success(\n                  t(\"storageHost.ResourcePolicySuccessfullyUpdated\")\n                );\n              }\n            },\n            onError(error) {\n              message.error(error?.message);\n            },\n          });\n        } else if (user_resource_policy) {\n          commitModifyUserResourcePolicy({\n            variables: {\n              name: user_resource_policy.name,\n              props: {\n                max_vfolder_size: -1,\n              },\n            },\n            onCompleted(response) {\n              if (!response?.modify_user_resource_policy?.ok) {\n                message.error(response?.modify_user_resource_policy?.msg);\n              } else {\n                onChangePolicy();\n                message.success(\n                  t(\"storageHost.ResourcePolicySuccessfullyUpdated\")\n                );\n              }\n            },\n            onError(error) {\n              message.error(error?.message);\n            },\n          });\n        } else {\n          message.error(t(\"storageHost.SelectProjectOrUserFirst\"));\n        }\n      },\n    });\n  };\n\n  return (\n    <>\n      <Card\n        extra={\n          project_resource_policy || user_resource_policy ? (\n            <Flex gap={token.marginXS}>\n              <Button\n                icon={<EditFilled />}\n                type=\"text\"\n                onClick={() => {\n                  project_resource_policy\n                    ? toggleProjectResourcePolicySettingModal()\n                    : toggleUserResourcePolicySettingModal();\n                }}\n              >\n                {t(\"button.Edit\")}\n              </Button>\n              <Button\n                type=\"text\"\n                icon={<CloseOutlined />}\n                danger\n                onClick={() => confirmUnsetResourcePolicy()}\n              >\n                {t(\"button.Unset\")}\n              </Button>\n            </Flex>\n          ) : null\n        }\n        title={t(\"storageHost.ResourcePolicy\")}\n        // bordered={false}\n        headStyle={{ borderBottom: \"none\" }}\n        style={{ marginBottom: 10 }}\n      >\n        {project_resource_policy || user_resource_policy ? (\n          <Descriptions size=\"small\">\n            <Descriptions.Item label={t(\"storageHost.MaxFolderSize\")}>\n              {project_resource_policy\n                ? project_resource_policy &&\n                  project_resource_policy?.max_vfolder_size !== -1\n                  ? _humanReadableDecimalSize(\n                      project_resource_policy?.max_vfolder_size\n                    )\n                  : \"-\"\n                : user_resource_policy &&\n                  user_resource_policy?.max_vfolder_size !== -1\n                ? _humanReadableDecimalSize(\n                    user_resource_policy?.max_vfolder_size\n                  )\n                : \"-\"}\n            </Descriptions.Item>\n          </Descriptions>\n        ) : null}\n      </Card>\n      <ProjectResourcePolicySettingModal\n        open={visibleProjectResourcePolicySettingModal}\n        destroyOnClose={true}\n        onCancel={toggleProjectResourcePolicySettingModal}\n        onOk={toggleProjectResourcePolicySettingModal}\n        onRequestClose={() => {\n          onChangePolicy();\n          toggleProjectResourcePolicySettingModal();\n        }}\n        projectResourcePolicyFrgmt={project_resource_policy || null}\n      />\n      <UserResourcePolicySettingModal\n        open={visibleUserResourcePolicySettingModal}\n        destroyOnClose={true}\n        onCancel={toggleUserResourcePolicySettingModal}\n        onOk={toggleUserResourcePolicySettingModal}\n        userResourcePolicyFrgmt={user_resource_policy || null}\n        onRequestClose={() => {\n          onChangePolicy();\n          toggleUserResourcePolicySettingModal();\n        }}\n      />\n    </>\n  );\n};\n\nexport default ResourcePolicyCard;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { QuotaScopeCardUnsetMutation } from \"./__generated__/QuotaScopeCardUnsetMutation.graphql\";\n\nimport {\n  CardProps,\n  Table,\n  Button,\n  Popconfirm,\n  message,\n  Empty,\n  theme,\n} from \"antd\";\nimport { EditFilled, PlusOutlined, CloseOutlined } from \"@ant-design/icons\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { bytesToGB } from \"../helper/index\";\nimport { QuotaScopeCardFragment$key } from \"./__generated__/QuotaScopeCardFragment.graphql\";\nimport Flex from \"./Flex\";\n\ninterface Props extends CardProps {\n  quotaScopeFrgmt: QuotaScopeCardFragment$key | null;\n  showAddButtonWhenEmpty: boolean;\n  onClickEdit: () => void;\n}\nconst QuotaScopeCard: React.FC<Props> = ({\n  quotaScopeFrgmt,\n  showAddButtonWhenEmpty,\n  onClickEdit,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const quota_scope = useFragment(\n    graphql`\n      fragment QuotaScopeCardFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n          usage_bytes\n        }\n        ...QuotaSettingModalFragment\n      }\n    `,\n    quotaScopeFrgmt\n  );\n\n  const [commitUnsetQuotaScope, isInFlightCommitUnsetQuotaScope] =\n    useMutation<QuotaScopeCardUnsetMutation>(\n      graphql`\n        mutation QuotaScopeCardUnsetMutation(\n          $quota_scope_id: String!\n          $storage_host_name: String!\n        ) {\n          unset_quota_scope(\n            quota_scope_id: $quota_scope_id\n            storage_host_name: $storage_host_name\n          ) {\n            quota_scope {\n              id\n              quota_scope_id\n              storage_host_name\n              details {\n                hard_limit_bytes\n              }\n            }\n          }\n        }\n      `\n    );\n\n  const selectProjectOrUserFirst = (\n    <Empty\n      style={{ width: \"100%\" }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={<div>{t(\"storageHost.quotaSettings.SelectFirst\")}</div>}\n    />\n  );\n\n  const addQuotaConfigsWhenEmpty = (\n    <Empty\n      style={{ width: \"100%\" }}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description={\n        <>\n          <div style={{ margin: 10 }}>\n            {t(\"storageHost.quotaSettings.ClickSettingButton\")}\n          </div>\n          <Button\n            icon={<PlusOutlined />}\n            onClick={() => onClickEdit && onClickEdit()}\n          >\n            {t(\"storageHost.quotaSettings.AddQuotaConfigs\")}\n          </Button>\n        </>\n      }\n    />\n  );\n\n  return (\n    <Table\n      bordered\n      columns={[\n        {\n          title: t(\"storageHost.quotaSettings.QuotaScopeId\"),\n          dataIndex: \"quota_scope_id\",\n          key: \"quota_scope_id\",\n          render: (value) => <code>{value}</code>,\n        },\n        {\n          title: t(\"storageHost.HardLimit\") + \" (GB)\",\n          dataIndex: [\"details\", \"hard_limit_bytes\"],\n          key: \"hard_limit_bytes\",\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t(\"storageHost.Usage\") + \" (GB)\",\n          dataIndex: [\"details\", \"usage_bytes\"],\n          key: \"usage_bytes\",\n          render: (value) => <>{bytesToGB(value)}</>,\n        },\n        {\n          title: t(\"general.Control\"),\n          key: \"control\",\n          render: () => (\n            <Flex gap={token.marginSM}>\n              <Button\n                icon={<EditFilled />}\n                onClick={() => onClickEdit && onClickEdit()}\n              >\n                {t(\"button.Edit\")}\n              </Button>\n              <Popconfirm\n                title={t(\"storageHost.quotaSettings.UnsetCustomSettings\")}\n                description={t(\n                  \"storageHost.quotaSettings.ConfirmUnsetCustomQuota\"\n                )}\n                placement=\"bottom\"\n                onConfirm={() => {\n                  if (quota_scope) {\n                    commitUnsetQuotaScope({\n                      variables: {\n                        quota_scope_id: quota_scope.quota_scope_id,\n                        storage_host_name: quota_scope.storage_host_name,\n                      },\n                      onCompleted() {\n                        message.success(\n                          t(\n                            \"storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated\"\n                          )\n                        );\n                      },\n                      onError(error) {\n                        message.error(error?.message);\n                      },\n                    });\n                  }\n                }}\n              >\n                <Button\n                  loading={isInFlightCommitUnsetQuotaScope}\n                  danger\n                  icon={<CloseOutlined />}\n                >\n                  {t(\"button.Unset\")}\n                </Button>\n              </Popconfirm>\n            </Flex>\n          ),\n        },\n      ]}\n      dataSource={quota_scope ? [quota_scope] : []}\n      locale={{\n        emptyText: showAddButtonWhenEmpty\n          ? addQuotaConfigsWhenEmpty\n          : selectProjectOrUserFirst,\n      }}\n      pagination={false}\n    />\n  );\n};\n\nexport default QuotaScopeCard;\n","import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useFragment, useMutation } from \"react-relay\";\nimport { QuotaSettingModalFragment$key } from \"./__generated__/QuotaSettingModalFragment.graphql\";\nimport { QuotaSettingModalSetMutation } from \"./__generated__/QuotaSettingModalSetMutation.graphql\";\n\nimport { Modal, ModalProps, Form, Input, message } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { GBToBytes, bytesToGB } from \"../helper\";\n\ninterface Props extends ModalProps {\n  quotaScopeFrgmt?: QuotaSettingModalFragment$key | null;\n  onRequestClose: () => void;\n  resourcePolicyMaxVFolderSize?: number;\n}\n\nconst QuotaSettingModal: React.FC<Props> = ({\n  quotaScopeFrgmt = null,\n  resourcePolicyMaxVFolderSize,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const [form] = Form.useForm();\n\n  const quotaScope = useFragment(\n    graphql`\n      fragment QuotaSettingModalFragment on QuotaScope {\n        id\n        quota_scope_id\n        storage_host_name\n        details {\n          hard_limit_bytes\n        }\n      }\n    `,\n    quotaScopeFrgmt\n  );\n\n  const [commitSetQuotaScope, isInFlightCommitSetQuotaScope] =\n    useMutation<QuotaSettingModalSetMutation>(graphql`\n      mutation QuotaSettingModalSetMutation(\n        $quota_scope_id: String!\n        $storage_host_name: String!\n        $props: QuotaScopeInput!\n      ) {\n        set_quota_scope(\n          quota_scope_id: $quota_scope_id\n          storage_host_name: $storage_host_name\n          props: $props\n        ) {\n          quota_scope {\n            id\n            quota_scope_id\n            storage_host_name\n            details {\n              hard_limit_bytes\n            }\n          }\n        }\n      }\n    `);\n\n  const _onOk = (e: React.MouseEvent<HTMLElement>) => {\n    form.validateFields().then((values) => {\n      commitSetQuotaScope({\n        variables: {\n          quota_scope_id: quotaScope?.quota_scope_id || \"\",\n          storage_host_name: quotaScope?.storage_host_name || \"\",\n          props: {\n            hard_limit_bytes: GBToBytes(values?.hard_limit_bytes),\n          },\n        },\n        onCompleted(response) {\n          if (response?.set_quota_scope?.quota_scope?.id) {\n            message.success(\n              t(\"storageHost.quotaSettings.QuotaScopeSuccessfullyUpdated\")\n            );\n          } else {\n            message.error(t(\"dialog.ErrorOccurred\"));\n          }\n          onRequestClose();\n        },\n        onError(error) {\n          console.log(error);\n          message.error(error?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={{\n        zIndex: 10000,\n      }}\n      destroyOnClose\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitSetQuotaScope}\n      onCancel={onRequestClose}\n      title={t(\"storageHost.quotaSettings.QuotaSettings\")}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={[\"onChange\", \"onBlur\"]}\n        style={{ marginBottom: 40, marginTop: 20 }}\n      >\n        <Form.Item\n          name=\"hard_limit_bytes\"\n          label={t(\"storageHost.HardLimit\")}\n          initialValue={bytesToGB(quotaScope?.details?.hard_limit_bytes)}\n          rules={[\n            {\n              pattern: /^\\d+(\\.\\d+)?$/,\n              message:\n                t(\"storageHost.quotaSettings.AllowNumberAndDot\") ||\n                \"Allows numbers and .(dot) only\",\n            },\n          ]}\n        >\n          <Input\n            addonAfter=\"GB\"\n            type=\"number\"\n            step={0.25}\n            style={{ width: \"70%\" }}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default QuotaSettingModal;\n","import React, { useState, useTransition } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { QuotaScopeType, addQuotaScopeTypePrefix } from \"../helper/index\";\n\nimport { Card, Form, Spin } from \"antd\";\n\nimport Flex from \"./Flex\";\nimport ProjectSelector from \"./ProjectSelector\";\nimport DomainSelector from \"./DomainSelector\";\nimport UserSelector from \"./UserSelector\";\nimport ResourcePolicyCard from \"./ResourcePolicyCard\";\nimport QuotaScopeCard from \"./QuotaScopeCard\";\nimport { useFragment, useLazyLoadQuery } from \"react-relay\";\n\nimport graphql from \"babel-plugin-relay/macro\";\nimport { StorageHostSettingsPanel_storageVolumeFrgmt$key } from \"./__generated__/StorageHostSettingsPanel_storageVolumeFrgmt.graphql\";\nimport { StorageHostSettingsPanelQuery } from \"./__generated__/StorageHostSettingsPanelQuery.graphql\";\nimport QuotaSettingModal from \"./QuotaSettingModal\";\nimport { useToggle } from \"ahooks\";\nimport { useCurrentDomainValue, useUpdatableState } from \"../hooks\";\n\ninterface StorageHostSettingsPanelProps {\n  extraFetchKey?: string;\n  storageVolumeFrgmt: StorageHostSettingsPanel_storageVolumeFrgmt$key | null;\n}\nconst StorageHostSettingsPanel: React.FC<StorageHostSettingsPanelProps> = ({\n  storageVolumeFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const storageVolume = useFragment(\n    graphql`\n      fragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\n        id\n        capabilities\n      }\n    `,\n    storageVolumeFrgmt\n  );\n\n  const [isPending, startTransition] = useTransition();\n  const currentDomain = useCurrentDomainValue();\n  const [currentSettingType, setCurrentSettingType] =\n    useState<QuotaScopeType>(\"user\");\n\n  const [selectedDomainName, setSelectedDomainName] =\n    useState<string>(currentDomain);\n  const [selectedProjectId, setSelectedProjectId] = useState<string>();\n  const [selectedProjectResourcePolicy, setSelectedProjectResourcePolicy] =\n    useState<string>();\n  const [selectedUserId, setSelectedUserId] = useState<string>();\n  const [selectedUserResourcePolicy, setSelectedUserResourcePolicy] =\n    useState<string>();\n\n  const quotaScopeId = addQuotaScopeTypePrefix(\n    currentSettingType,\n    (currentSettingType === \"project\" ? selectedProjectId : selectedUserId) ||\n      \"\"\n  );\n\n  const [isOpenQuotaSettingModal, { toggle: toggleQuotaSettingModal }] =\n    useToggle(false);\n  const [fetchKey, updateFetchKey] = useUpdatableState(\"default\");\n\n  const { project_resource_policy, user_resource_policy, quota_scope } =\n    useLazyLoadQuery<StorageHostSettingsPanelQuery>(\n      graphql`\n        query StorageHostSettingsPanelQuery(\n          $project_resource_policy_name: String!\n          $skipProjectResourcePolicy: Boolean!\n          $user_resource_policy_name: String\n          $skipUserResourcePolicy: Boolean!\n          $quota_scope_id: String!\n          $storage_host_name: String!\n          $skipQuotaScope: Boolean!\n        ) {\n          project_resource_policy(name: $project_resource_policy_name)\n            @skip(if: $skipProjectResourcePolicy) {\n            max_vfolder_size\n            ...ResourcePolicyCard_project_resource_policy\n          }\n\n          user_resource_policy(name: $user_resource_policy_name)\n            @skip(if: $skipUserResourcePolicy) {\n            max_vfolder_size\n            ...ResourcePolicyCard_user_resource_policy\n          }\n\n          quota_scope(\n            storage_host_name: $storage_host_name\n            quota_scope_id: $quota_scope_id\n          ) @skip(if: $skipQuotaScope) {\n            ...QuotaSettingModalFragment\n            ...QuotaScopeCardFragment\n          }\n        }\n      `,\n      {\n        // project policy\n        project_resource_policy_name: selectedProjectResourcePolicy || \"\",\n        skipProjectResourcePolicy:\n          selectedProjectResourcePolicy === \"\" ||\n          selectedProjectResourcePolicy === undefined,\n\n        // user policy\n        user_resource_policy_name: selectedUserResourcePolicy || \"\",\n        skipUserResourcePolicy:\n          selectedUserResourcePolicy === \"\" ||\n          selectedUserResourcePolicy === undefined,\n\n        // quota scope\n        quota_scope_id: quotaScopeId,\n        skipQuotaScope: quotaScopeId === undefined || quotaScopeId === \"\",\n        storage_host_name: storageVolume?.id || \"\",\n      },\n      {\n        fetchPolicy: \"network-only\",\n        fetchKey: fetchKey,\n      }\n    );\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Card\n        title={t(\"storageHost.QuotaSettings\")}\n        tabList={[\n          {\n            key: \"user\",\n            tab: t(\"storageHost.ForUser\"),\n          },\n          {\n            key: \"project\",\n            tab: t(\"storageHost.ForProject\"),\n          },\n        ]}\n        activeTabKey={currentSettingType}\n        // eslint-disable-next-line\n        //@ts-ignore\n        onTabChange={(v) => {\n          startTransition(() => {\n            setCurrentSettingType(v as QuotaScopeType);\n          });\n        }}\n      >\n        <Flex justify=\"between\">\n          {currentSettingType === \"project\" ? (\n            <Flex style={{ marginBottom: 10 }}>\n              <Form layout=\"inline\">\n                <Form.Item label={t(\"resourceGroup.Domain\")}>\n                  <DomainSelector\n                    style={{ width: \"20vw\", marginRight: 10 }}\n                    value={selectedDomainName}\n                    onSelectDomain={(domain: any) => {\n                      startTransition(() => {\n                        setSelectedDomainName(domain?.domainName);\n                        setSelectedProjectId(undefined);\n                        setSelectedProjectResourcePolicy(undefined);\n                      });\n                    }}\n                  />\n                </Form.Item>\n                <Form.Item label={t(\"webui.menu.Project\")}>\n                  <ProjectSelector\n                    style={{ width: \"20vw\" }}\n                    value={selectedProjectId}\n                    disabled={!selectedDomainName}\n                    domain={selectedDomainName || \"\"}\n                    onSelectProject={(project: any) => {\n                      startTransition(() => {\n                        setSelectedProjectId(project?.projectId);\n                        setSelectedProjectResourcePolicy(\n                          project?.projectResourcePolicy\n                        );\n                      });\n                    }}\n                  />\n                </Form.Item>\n              </Form>\n            </Flex>\n          ) : (\n            <Form layout=\"inline\">\n              <Form.Item label={t(\"data.User\")}>\n                <UserSelector\n                  style={{ width: \"30vw\", marginBottom: 10 }}\n                  value={selectedUserId}\n                  onSelectUser={(user: any) => {\n                    startTransition(() => {\n                      setSelectedUserId(user?.userId);\n                      setSelectedUserResourcePolicy(user?.userResourcePolicy);\n                    });\n                  }}\n                />\n              </Form.Item>\n            </Form>\n          )}\n        </Flex>\n        <Spin spinning={isPending}>\n          <ResourcePolicyCard\n            projectResourcePolicyFrgmt={\n              currentSettingType === \"project\"\n                ? project_resource_policy || null\n                : null\n            }\n            userResourcePolicyFrgmt={\n              currentSettingType === \"user\"\n                ? user_resource_policy || null\n                : null\n            }\n            onChangePolicy={() => {\n              startTransition(() => {\n                updateFetchKey();\n              });\n            }}\n          />\n          <QuotaScopeCard\n            quotaScopeFrgmt={quota_scope || null}\n            onClickEdit={() => {\n              toggleQuotaSettingModal();\n            }}\n            showAddButtonWhenEmpty={\n              (currentSettingType === \"project\" && !!selectedProjectId) ||\n              (currentSettingType === \"user\" && !!selectedUserId)\n            }\n          />\n        </Spin>\n        <QuotaSettingModal\n          open={isOpenQuotaSettingModal}\n          quotaScopeFrgmt={quota_scope || null}\n          resourcePolicyMaxVFolderSize={\n            currentSettingType === \"project\"\n              ? project_resource_policy?.max_vfolder_size\n              : user_resource_policy?.max_vfolder_size\n          }\n          onRequestClose={() => {\n            toggleQuotaSettingModal();\n          }}\n        />\n      </Card>\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingsPanel;\n","import React, { Suspense } from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport { useLazyLoadQuery } from \"react-relay\";\nimport { StorageHostSettingPageQuery } from \"./__generated__/StorageHostSettingPageQuery.graphql\";\n\nimport { Breadcrumb, Card, Empty, Typography, theme } from \"antd\";\nimport Flex from \"../components/Flex\";\nimport StorageHostResourcePanel from \"../components/StorageHostResourcePanel\";\nimport StorageHostSettingsPanel from \"../components/StorageHostSettingsPanel\";\nimport { useSuspendedBackendaiClient } from \"../hooks\";\nimport { useWebComponentInfo } from \"../components/DefaultProviders\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface StorageHostSettingPageProps {\n  storageHostId: string;\n}\nconst StorageHostSettingPage: React.FC<StorageHostSettingPageProps> = ({\n  storageHostId,\n}) => {\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n  const { moveTo } = useWebComponentInfo();\n  const { t } = useTranslation();\n  const { storage_volume } = useLazyLoadQuery<StorageHostSettingPageQuery>(\n    graphql`\n      query StorageHostSettingPageQuery($id: String) {\n        storage_volume(id: $id) {\n          id\n          capabilities\n          ...StorageHostResourcePanelFragment\n          ...StorageHostSettingsPanel_storageVolumeFrgmt\n        }\n      }\n    `,\n    {\n      id: storageHostId || \"\",\n    }\n  );\n\n  const isQuotaSupportedStorage =\n    storage_volume?.capabilities?.includes(\"quota\") ?? false;\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      style={{ margin: token.marginSM, gap: token.margin }}\n    >\n      <Breadcrumb\n        items={[\n          {\n            title: \"Resources\",\n            onClick: (e) => {\n              e.preventDefault();\n              moveTo(\"/agent\");\n            },\n            href: \"/agent\",\n          },\n          {\n            title: \"Storage setting\",\n          },\n        ]}\n      ></Breadcrumb>\n      <Typography.Title level={3} style={{ margin: 0 }}>\n        {storageHostId || \"\"}\n      </Typography.Title>\n      <StorageHostResourcePanel storageVolumeFrgmt={storage_volume || null} />\n      {baiClient.supports(\"quota-scope\") && (\n        <>\n          {isQuotaSupportedStorage ? (\n            <Suspense fallback={<div>loading...</div>}>\n              <StorageHostSettingsPanel\n                storageVolumeFrgmt={storage_volume || null}\n              />\n            </Suspense>\n          ) : (\n            <Card title={t(\"storageHost.QuotaSettings\")}>\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={t(\"storageHost.QuotaDoesNotSupported\")}\n              />\n            </Card>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default StorageHostSettingPage;\n","/**\n * @generated SignedSource<<283a752f4675b1e3d4fe6f0da7198984>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type StorageHostSettingPageQuery$variables = {\n  id?: string | null;\n};\nexport type StorageHostSettingPageQuery$data = {\n  readonly storage_volume: {\n    readonly capabilities: ReadonlyArray<string | null> | null;\n    readonly id: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"StorageHostResourcePanelFragment\" | \"StorageHostSettingsPanel_storageVolumeFrgmt\">;\n  } | null;\n};\nexport type StorageHostSettingPageQuery = {\n  response: StorageHostSettingPageQuery$data;\n  variables: StorageHostSettingPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"id\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"capabilities\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostResourcePanelFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"StorageHostSettingsPanel_storageVolumeFrgmt\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"StorageVolume\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"storage_volume\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"backend\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"path\",\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"usage\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"821175f86743d9d81be2a55aca371919\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"StorageHostSettingPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query StorageHostSettingPageQuery(\\n  $id: String\\n) {\\n  storage_volume(id: $id) {\\n    id\\n    capabilities\\n    ...StorageHostResourcePanelFragment\\n    ...StorageHostSettingsPanel_storageVolumeFrgmt\\n  }\\n}\\n\\nfragment StorageHostResourcePanelFragment on StorageVolume {\\n  id\\n  backend\\n  capabilities\\n  path\\n  usage\\n}\\n\\nfragment StorageHostSettingsPanel_storageVolumeFrgmt on StorageVolume {\\n  id\\n  capabilities\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"f6e77057e83b0449ef99e8918e794b24\";\n\nexport default node;\n"],"names":["node","v0","hash","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","_ref","percentage","resourceFrgmt","storageVolumeFrgmt","t","useTranslation","resource","useFragment","_StorageHostResourcePanelFragment","require","parsedUsage","JSON","parse","usage","usedBytes","used_bytes","capacityBytes","capacity_bytes","storageUsage","percent","Number","toFixed","_jsxs","Descriptions","size","bordered","column","children","label","span","_jsx","Progress","strokeColor","status","Typography","type","_humanReadableDecimalSize","path","backend","_","capabilities","cap","Tag","onSelectProject","domain","selectProps","_objectWithoutProperties","_excluded","projects","useLazyLoadQuery","_ProjectSelectorQuery","domain_name","fetchPolicy","Select","_objectSpread","onChange","value","option","placeholder","project","projectId","id","projectResourcePolicy","resource_policy","name","onSelectDomain","domains","_DomainSelectorQuery","domainName","onSelectUser","_useState","useState","_useState2","_slicedToArray","search","setSearch","user_list","_UserSelectorQuery","limit","offset","filter","length","filterOption","onSearch","startTransition","showSearch","items","user","userId","userResourcePolicy","email","resourcePolicyFrgmt","projectResourcePolicyFrgmt","onRequestClose","props","_Form$useForm","Form","form","projectResourcePolicyInfo","_ProjectResourcePolicySettingModalFragment","_useMutation","useMutation","_ProjectResourcePolicySettingModalModifyMutation","commitModifyProjectResourcePolicy","Modal","style","zIndex","destroyOnClose","title","onOk","e","validateFields","then","values","max_vfolder_size","variables","GBToBytes","onCompleted","response","_response$modify_proj","_response$modify_proj2","modify_project_resource_policy","ok","message","msg","onError","error","console","log","Alert","showIcon","marginTop","marginBottom","preserve","labelCol","wrapperCol","validateTrigger","initialValues","created_at","bytesToGB","rules","pattern","Input","addonAfter","step","userResourcePolicyFrgmt","userResourcePolicyInfo","_UserResourcePolicySettingModalFragment","_UserResourcePolicySettingModalModifyMutation","commitModifyUserResourcePolicy","_response$modify_user","_response$modify_user2","modify_user_resource_policy","onChangePolicy","token","theme","_useToggle","useToggle","_useToggle2","visibleProjectResourcePolicySettingModal","toggleProjectResourcePolicySettingModal","toggle","_useToggle3","_useToggle4","visibleUserResourcePolicySettingModal","toggleUserResourcePolicySettingModal","project_resource_policy","_ResourcePolicyCard_project_resource_policy","user_resource_policy","_ResourcePolicyCard_user_resource_policy","_ResourcePolicyCardModifyProjectMutation","_useMutation3","_ResourcePolicyCardModifyUserMutation","_Fragment","Card","extra","Flex","gap","marginXS","Button","icon","EditFilled","onClick","CloseOutlined","danger","content","ExclamationCircleOutlined","okText","headStyle","borderBottom","ProjectResourcePolicySettingModal","open","onCancel","UserResourcePolicySettingModal","quotaScopeFrgmt","showAddButtonWhenEmpty","onClickEdit","quota_scope","_QuotaScopeCardFragment","_QuotaScopeCardUnsetMutation","_useMutation2","commitUnsetQuotaScope","isInFlightCommitUnsetQuotaScope","selectProjectOrUserFirst","Empty","width","image","description","addQuotaConfigsWhenEmpty","margin","PlusOutlined","Table","columns","dataIndex","key","render","marginSM","Popconfirm","placement","onConfirm","quota_scope_id","storage_host_name","loading","dataSource","locale","emptyText","pagination","_quotaScope$details","_ref$quotaScopeFrgmt","resourcePolicyMaxVFolderSize","quotaScope","_QuotaSettingModalFragment","_QuotaSettingModalSetMutation","commitSetQuotaScope","isInFlightCommitSetQuotaScope","hard_limit_bytes","_response$set_quota_s","_response$set_quota_s2","set_quota_scope","confirmLoading","initialValue","details","storageVolume","_StorageHostSettingsPanel_storageVolumeFrgmt","_useTransition","useTransition","_useTransition2","isPending","currentDomain","useCurrentDomainValue","currentSettingType","setCurrentSettingType","_useState3","_useState4","selectedDomainName","setSelectedDomainName","_useState5","_useState6","selectedProjectId","setSelectedProjectId","_useState7","_useState8","selectedProjectResourcePolicy","setSelectedProjectResourcePolicy","_useState9","_useState10","selectedUserId","setSelectedUserId","_useState11","_useState12","selectedUserResourcePolicy","setSelectedUserResourcePolicy","quotaScopeId","addQuotaScopeTypePrefix","isOpenQuotaSettingModal","toggleQuotaSettingModal","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","_useLazyLoadQuery","_StorageHostSettingsPanelQuery","project_resource_policy_name","skipProjectResourcePolicy","undefined","user_resource_policy_name","skipUserResourcePolicy","skipQuotaScope","direction","align","tabList","tab","activeTabKey","onTabChange","v","justify","layout","DomainSelector","marginRight","ProjectSelector","disabled","UserSelector","Spin","spinning","ResourcePolicyCard","QuotaScopeCard","QuotaSettingModal","_storage_volume$capab","_storage_volume$capab2","storageHostId","baiClient","useSuspendedBackendaiClient","moveTo","useWebComponentInfo","storage_volume","_StorageHostSettingPageQuery","isQuotaSupportedStorage","includes","Breadcrumb","preventDefault","href","level","StorageHostResourcePanel","supports","Suspense","fallback","StorageHostSettingsPanel"],"sourceRoot":""}