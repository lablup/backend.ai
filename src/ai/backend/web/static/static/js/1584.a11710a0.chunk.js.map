{"version":3,"file":"static/js/1584.a11710a0.chunk.js","mappings":"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","sources":["components/BAIText.tsx","__generated__/ReservoirArtifactDetailPageQuery.graphql.ts","pages/ReservoirArtifactDetailPage.tsx"],"sourcesContent":["import { Typography } from 'antd';\nimport type { TextProps as AntdTextProps } from 'antd/es/typography/Text';\nimport React from 'react';\n\nexport interface BAITextProps extends AntdTextProps {\n  monospace?: boolean;\n}\n\nconst BAIText: React.FC<BAITextProps> = ({\n  type,\n  style,\n  monospace,\n  children,\n  ...restProps\n}) => {\n  // If monospace prop is true, apply monospace font styling\n  if (monospace) {\n    return (\n      <Typography.Text\n        type={type}\n        {...restProps}\n        style={{\n          fontFamily: 'monospace',\n          ...style,\n        }}\n      >\n        {children}\n      </Typography.Text>\n    );\n  }\n\n  // For non-monospace text, pass all props directly to antd Text\n  return (\n    <Typography.Text type={type} style={style} {...restProps}>\n      {children}\n    </Typography.Text>\n  );\n};\n\nexport default BAIText;\n","/**\n * @generated SignedSource<<e0ccfd01e93457ea748234643a824cec>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ArtifactStatus = \"AVAILABLE\" | \"FAILED\" | \"NEEDS_APPROVAL\" | \"PULLED\" | \"PULLING\" | \"REJECTED\" | \"SCANNED\" | \"VERIFYING\" | \"%future added value\";\nexport type ArtifactRevisionFilter = {\n  AND?: ReadonlyArray<ArtifactRevisionFilter> | null | undefined;\n  NOT?: ReadonlyArray<ArtifactRevisionFilter> | null | undefined;\n  OR?: ReadonlyArray<ArtifactRevisionFilter> | null | undefined;\n  artifactId?: string | null | undefined;\n  size?: IntFilter | null | undefined;\n  status?: ArtifactRevisionStatusFilter | null | undefined;\n  version?: StringFilter | null | undefined;\n};\nexport type ArtifactRevisionStatusFilter = {\n  equals?: ArtifactStatus | null | undefined;\n  in?: ReadonlyArray<ArtifactStatus> | null | undefined;\n};\nexport type StringFilter = {\n  contains?: string | null | undefined;\n  endsWith?: string | null | undefined;\n  equals?: string | null | undefined;\n  iContains?: string | null | undefined;\n  iEndsWith?: string | null | undefined;\n  iEquals?: string | null | undefined;\n  iNotEquals?: string | null | undefined;\n  iStartsWith?: string | null | undefined;\n  notEquals?: string | null | undefined;\n  startsWith?: string | null | undefined;\n};\nexport type IntFilter = {\n  equals?: number | null | undefined;\n  greaterThan?: number | null | undefined;\n  greaterThanOrEqual?: number | null | undefined;\n  lessThan?: number | null | undefined;\n  lessThanOrEqual?: number | null | undefined;\n  notEquals?: number | null | undefined;\n};\nexport type ReservoirArtifactDetailPageQuery$variables = {\n  filter: ArtifactRevisionFilter;\n  id: string;\n  limit: number;\n  offset: number;\n};\nexport type ReservoirArtifactDetailPageQuery$data = {\n  readonly artifact: {\n    readonly description: string | null | undefined;\n    readonly id: string;\n    readonly latestVersion: {\n      readonly edges: ReadonlyArray<{\n        readonly node: {\n          readonly id: string;\n          readonly size: any | null | undefined;\n          readonly status: ArtifactStatus;\n          readonly version: string;\n          readonly \" $fragmentSpreads\": FragmentRefs<\"BAIArtifactRevisionTableLatestRevisionFragment\" | \"BAIImportArtifactModalArtifactRevisionFragment\">;\n        };\n      }>;\n    };\n    readonly name: string;\n    readonly pullingArtifactRevisions: {\n      readonly __id: string;\n      readonly count: number;\n      readonly edges: ReadonlyArray<{\n        readonly node: {\n          readonly id: string;\n          readonly status: ArtifactStatus;\n          readonly \" $fragmentSpreads\": FragmentRefs<\"BAIPullingArtifactRevisionAlertFragment\">;\n        };\n      }>;\n    };\n    readonly registry: {\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n    };\n    readonly revisions: {\n      readonly count: number;\n      readonly edges: ReadonlyArray<{\n        readonly node: {\n          readonly id: string;\n          readonly status: ArtifactStatus;\n          readonly \" $fragmentSpreads\": FragmentRefs<\"BAIArtifactRevisionDeleteButtonFragment\" | \"BAIArtifactRevisionDownloadButtonFragment\" | \"BAIArtifactRevisionTableArtifactRevisionFragment\" | \"BAIDeleteArtifactRevisionsModalArtifactRevisionFragment\" | \"BAIImportArtifactModalArtifactRevisionFragment\">;\n        };\n      }>;\n    };\n    readonly source: {\n      readonly name: string | null | undefined;\n      readonly url: string | null | undefined;\n    };\n    readonly updatedAt: string;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"BAIArtifactTypeTagFragment\" | \"BAIDeleteArtifactRevisionsModalArtifactFragment\" | \"BAIImportArtifactModalArtifactFragment\">;\n  } | null | undefined;\n};\nexport type ReservoirArtifactDetailPageQuery = {\n  response: ReservoirArtifactDetailPageQuery$data;\n  variables: ReservoirArtifactDetailPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"id\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"id\",\n    \"variableName\": \"id\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv8 = [\n  (v6/*: any*/),\n  {\n    \"alias\": null,\n    \"args\": null,\n    \"kind\": \"ScalarField\",\n    \"name\": \"url\",\n    \"storageKey\": null\n  }\n],\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"SourceInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"registry\",\n  \"plural\": false,\n  \"selections\": (v8/*: any*/),\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"SourceInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"source\",\n  \"plural\": false,\n  \"selections\": (v8/*: any*/),\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"updatedAt\",\n  \"storageKey\": null\n},\nv12 = {\n  \"kind\": \"Literal\",\n  \"name\": \"orderBy\",\n  \"value\": {\n    \"direction\": \"DESC\",\n    \"field\": \"VERSION\"\n  }\n},\nv13 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"filter\",\n    \"value\": {\n      \"status\": {\n        \"equals\": \"PULLING\"\n      }\n    }\n  },\n  (v12/*: any*/)\n],\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"count\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"__typename\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"cursor\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PageInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"pageInfo\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"endCursor\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hasNextPage\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hasPreviousPage\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"startCursor\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv19 = {\n  \"kind\": \"ClientExtension\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"__id\",\n      \"storageKey\": null\n    }\n  ]\n},\nv20 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 1\n  },\n  (v12/*: any*/)\n],\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"size\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"version\",\n  \"storageKey\": null\n},\nv23 = {\n  \"args\": null,\n  \"kind\": \"FragmentSpread\",\n  \"name\": \"BAIImportArtifactModalArtifactRevisionFragment\"\n},\nv24 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  (v12/*: any*/)\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ReservoirArtifactDetailPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"Artifact\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"artifact\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"BAIArtifactTypeTagFragment\"\n          },\n          (v7/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          {\n            \"alias\": \"pullingArtifactRevisions\",\n            \"args\": (v13/*: any*/),\n            \"concreteType\": \"ArtifactRevisionConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"__ReservoirArtifactDetailPage_pullingArtifactRevisions_connection\",\n            \"plural\": false,\n            \"selections\": [\n              (v14/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ArtifactRevisionEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"ArtifactRevision\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/),\n                      (v15/*: any*/),\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"BAIPullingArtifactRevisionAlertFragment\"\n                      },\n                      (v16/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v17/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v18/*: any*/),\n              (v19/*: any*/)\n            ],\n            \"storageKey\": \"__ReservoirArtifactDetailPage_pullingArtifactRevisions_connection(filter:{\\\"status\\\":{\\\"equals\\\":\\\"PULLING\\\"}},orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"VERSION\\\"})\"\n          },\n          {\n            \"alias\": \"latestVersion\",\n            \"args\": (v20/*: any*/),\n            \"concreteType\": \"ArtifactRevisionConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"revisions\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ArtifactRevisionEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"ArtifactRevision\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/),\n                      (v21/*: any*/),\n                      (v22/*: any*/),\n                      (v15/*: any*/),\n                      (v23/*: any*/),\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"BAIArtifactRevisionTableLatestRevisionFragment\"\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": \"revisions(first:1,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"VERSION\\\"})\"\n          },\n          {\n            \"alias\": null,\n            \"args\": (v24/*: any*/),\n            \"concreteType\": \"ArtifactRevisionConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"revisions\",\n            \"plural\": false,\n            \"selections\": [\n              (v14/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ArtifactRevisionEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"ArtifactRevision\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/),\n                      (v15/*: any*/),\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"BAIArtifactRevisionTableArtifactRevisionFragment\"\n                      },\n                      (v23/*: any*/),\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"BAIDeleteArtifactRevisionsModalArtifactRevisionFragment\"\n                      },\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"BAIArtifactRevisionDeleteButtonFragment\"\n                      },\n                      {\n                        \"args\": null,\n                        \"kind\": \"FragmentSpread\",\n                        \"name\": \"BAIArtifactRevisionDownloadButtonFragment\"\n                      }\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"BAIImportArtifactModalArtifactFragment\"\n          },\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"BAIDeleteArtifactRevisionsModalArtifactFragment\"\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v1/*: any*/),\n      (v3/*: any*/),\n      (v2/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"ReservoirArtifactDetailPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"Artifact\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"artifact\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"type\",\n            \"storageKey\": null\n          },\n          (v7/*: any*/),\n          (v9/*: any*/),\n          (v10/*: any*/),\n          (v11/*: any*/),\n          {\n            \"alias\": \"pullingArtifactRevisions\",\n            \"args\": (v13/*: any*/),\n            \"concreteType\": \"ArtifactRevisionConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"revisions\",\n            \"plural\": false,\n            \"selections\": [\n              (v14/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ArtifactRevisionEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"ArtifactRevision\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/),\n                      (v15/*: any*/),\n                      (v22/*: any*/),\n                      (v16/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v17/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v18/*: any*/),\n              (v19/*: any*/)\n            ],\n            \"storageKey\": \"revisions(filter:{\\\"status\\\":{\\\"equals\\\":\\\"PULLING\\\"}},orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"VERSION\\\"})\"\n          },\n          {\n            \"alias\": \"pullingArtifactRevisions\",\n            \"args\": (v13/*: any*/),\n            \"filters\": [\n              \"filter\",\n              \"orderBy\"\n            ],\n            \"handle\": \"connection\",\n            \"key\": \"ReservoirArtifactDetailPage_pullingArtifactRevisions\",\n            \"kind\": \"LinkedHandle\",\n            \"name\": \"revisions\"\n          },\n          {\n            \"alias\": \"latestVersion\",\n            \"args\": (v20/*: any*/),\n            \"concreteType\": \"ArtifactRevisionConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"revisions\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ArtifactRevisionEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"ArtifactRevision\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/),\n                      (v21/*: any*/),\n                      (v22/*: any*/),\n                      (v15/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": \"revisions(first:1,orderBy:{\\\"direction\\\":\\\"DESC\\\",\\\"field\\\":\\\"VERSION\\\"})\"\n          },\n          {\n            \"alias\": null,\n            \"args\": (v24/*: any*/),\n            \"concreteType\": \"ArtifactRevisionConnection\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"revisions\",\n            \"plural\": false,\n            \"selections\": [\n              (v14/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ArtifactRevisionEdge\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"edges\",\n                \"plural\": true,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"ArtifactRevision\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v5/*: any*/),\n                      (v15/*: any*/),\n                      (v22/*: any*/),\n                      (v21/*: any*/),\n                      (v11/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"0d1cbe108f844759d49f2a65d38b28c4\",\n    \"id\": null,\n    \"metadata\": {\n      \"connection\": [\n        {\n          \"count\": null,\n          \"cursor\": null,\n          \"direction\": \"bidirectional\",\n          \"path\": [\n            \"artifact\",\n            \"pullingArtifactRevisions\"\n          ]\n        }\n      ]\n    },\n    \"name\": \"ReservoirArtifactDetailPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ReservoirArtifactDetailPageQuery(\\n  $id: ID!\\n  $offset: Int!\\n  $limit: Int!\\n  $filter: ArtifactRevisionFilter!\\n) {\\n  artifact(id: $id) {\\n    id\\n    name\\n    ...BAIArtifactTypeTagFragment\\n    description\\n    registry {\\n      name\\n      url\\n    }\\n    source {\\n      name\\n      url\\n    }\\n    updatedAt\\n    pullingArtifactRevisions: revisions(filter: {status: {equals: PULLING}}, orderBy: {field: VERSION, direction: DESC}) {\\n      count\\n      edges {\\n        node {\\n          id\\n          status\\n          ...BAIPullingArtifactRevisionAlertFragment\\n          __typename\\n        }\\n        cursor\\n      }\\n      pageInfo {\\n        endCursor\\n        hasNextPage\\n        hasPreviousPage\\n        startCursor\\n      }\\n    }\\n    latestVersion: revisions(first: 1, orderBy: {field: VERSION, direction: DESC}) {\\n      edges {\\n        node {\\n          id\\n          size\\n          version\\n          status\\n          ...BAIImportArtifactModalArtifactRevisionFragment\\n          ...BAIArtifactRevisionTableLatestRevisionFragment\\n        }\\n      }\\n    }\\n    revisions(offset: $offset, limit: $limit, orderBy: {field: VERSION, direction: DESC}, filter: $filter) {\\n      count\\n      edges {\\n        node {\\n          id\\n          status\\n          ...BAIArtifactRevisionTableArtifactRevisionFragment\\n          ...BAIImportArtifactModalArtifactRevisionFragment\\n          ...BAIDeleteArtifactRevisionsModalArtifactRevisionFragment\\n          ...BAIArtifactRevisionDeleteButtonFragment\\n          ...BAIArtifactRevisionDownloadButtonFragment\\n        }\\n      }\\n    }\\n    ...BAIImportArtifactModalArtifactFragment\\n    ...BAIDeleteArtifactRevisionsModalArtifactFragment\\n  }\\n}\\n\\nfragment BAIArtifactDescriptionsFragment on Artifact {\\n  name\\n  description\\n  source {\\n    name\\n    url\\n  }\\n  ...BAIArtifactTypeTagFragment\\n}\\n\\nfragment BAIArtifactRevisionDeleteButtonFragment on ArtifactRevision {\\n  status\\n}\\n\\nfragment BAIArtifactRevisionDownloadButtonFragment on ArtifactRevision {\\n  status\\n}\\n\\nfragment BAIArtifactRevisionTableArtifactRevisionFragment on ArtifactRevision {\\n  id\\n  version\\n  size\\n  status\\n  updatedAt\\n  ...BAIArtifactStatusTagFragment\\n  ...BAIArtifactRevisionDownloadButtonFragment\\n  ...BAIArtifactRevisionDeleteButtonFragment\\n}\\n\\nfragment BAIArtifactRevisionTableLatestRevisionFragment on ArtifactRevision {\\n  id\\n}\\n\\nfragment BAIArtifactStatusTagFragment on ArtifactRevision {\\n  status\\n}\\n\\nfragment BAIArtifactTypeTagFragment on Artifact {\\n  type\\n}\\n\\nfragment BAIDeleteArtifactRevisionsModalArtifactFragment on Artifact {\\n  id\\n  ...BAIArtifactDescriptionsFragment\\n}\\n\\nfragment BAIDeleteArtifactRevisionsModalArtifactRevisionFragment on ArtifactRevision {\\n  id\\n  version\\n  size\\n  status\\n}\\n\\nfragment BAIImportArtifactModalArtifactFragment on Artifact {\\n  id\\n  name\\n  ...BAIArtifactDescriptionsFragment\\n}\\n\\nfragment BAIImportArtifactModalArtifactRevisionFragment on ArtifactRevision {\\n  id\\n  version\\n  size\\n  status\\n}\\n\\nfragment BAIPullingArtifactRevisionAlertFragment on ArtifactRevision {\\n  id\\n  status\\n  version\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"84c2e87c5b490db6c7abb4854da057af\";\n\nexport default node;\n","import { Button, Typography, Descriptions, theme, Tooltip } from 'antd';\nimport {\n  BAIArtifactRevisionDeleteButton,\n  BAIArtifactRevisionDownloadButton,\n  BAIArtifactRevisionTable,\n  BAIArtifactTypeTag,\n  BAICard,\n  BAIDeleteArtifactRevisionsModal,\n  BAIDeleteArtifactRevisionsModalArtifactRevisionFragmentKey,\n  BAIFlex,\n  BAIGraphQLPropertyFilter,\n  BAIImportArtifactModal,\n  BAIImportArtifactModalArtifactRevisionFragmentKey,\n  BAIPullingArtifactRevisionAlert,\n  convertToDecimalUnit,\n  filterOutNullAndUndefined,\n} from 'backend.ai-ui';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport _ from 'lodash';\nimport { Download } from 'lucide-react';\nimport { useDeferredValue, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\nimport { useParams } from 'react-router-dom';\nimport {\n  ReservoirArtifactDetailPageQuery,\n  ReservoirArtifactDetailPageQuery$data,\n  ReservoirArtifactDetailPageQuery$variables,\n} from 'src/__generated__/ReservoirArtifactDetailPageQuery.graphql';\nimport BAIFetchKeyButton from 'src/components/BAIFetchKeyButton';\nimport BAIText from 'src/components/BAIText';\nimport { INITIAL_FETCH_KEY, useUpdatableState } from 'src/hooks';\nimport { useBAIPaginationOptionStateOnSearchParam } from 'src/hooks/reactPaginationQueryOptions';\nimport { useSetBAINotification } from 'src/hooks/useBAINotification';\nimport { JsonParam, useQueryParams, withDefault } from 'use-query-params';\n\ndayjs.extend(relativeTime);\n\nconst { Title, Text, Paragraph } = Typography;\n\ntype RevisionNode = NonNullable<\n  ReservoirArtifactDetailPageQuery$data['artifact']\n>['revisions']['edges'][number]['node'];\n\nconst ReservoirArtifactDetailPage = () => {\n  const { token } = theme.useToken();\n  const { t } = useTranslation();\n  const { upsertNotification } = useSetBAINotification();\n\n  const { artifactId } = useParams<{ artifactId: string }>();\n\n  const [fetchKey, updateFetchKey] = useUpdatableState(INITIAL_FETCH_KEY);\n  const [selectedRevisionIdList, setSelectedRevisionIdList] = useState<\n    {\n      id: string;\n      data: RevisionNode;\n    }[]\n  >([]);\n  const [selectedDeleteRevisions, setSelectedDeleteRevisions] =\n    useState<BAIDeleteArtifactRevisionsModalArtifactRevisionFragmentKey>([]);\n  const [selectedRevisions, setSelectedRevisions] =\n    useState<BAIImportArtifactModalArtifactRevisionFragmentKey>([]);\n  const [queryParams, setQuery] = useQueryParams({\n    filter: withDefault(JsonParam, {}),\n  });\n  const jsonStringFilter = JSON.stringify(queryParams.filter);\n  const {\n    baiPaginationOption,\n    tablePaginationOption,\n    setTablePaginationOption,\n  } = useBAIPaginationOptionStateOnSearchParam({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const queryVariables: ReservoirArtifactDetailPageQuery$variables = useMemo(\n    () => ({\n      id: artifactId ?? '',\n      offset: baiPaginationOption.offset,\n      limit: baiPaginationOption.limit,\n      filter: JSON.parse(jsonStringFilter || '{}'),\n    }),\n\n    [\n      artifactId,\n      baiPaginationOption.limit,\n      baiPaginationOption.offset,\n      jsonStringFilter,\n    ],\n  );\n\n  const deferredQueryVariables = useDeferredValue(queryVariables);\n  const deferredFetchKey = useDeferredValue(fetchKey);\n\n  const { artifact } = useLazyLoadQuery<ReservoirArtifactDetailPageQuery>(\n    graphql`\n      query ReservoirArtifactDetailPageQuery(\n        $id: ID!\n        $offset: Int!\n        $limit: Int!\n        $filter: ArtifactRevisionFilter!\n      ) {\n        artifact(id: $id) {\n          id\n          name\n          ...BAIArtifactTypeTagFragment\n          description\n          registry {\n            name\n            url\n          }\n          source {\n            name\n            url\n          }\n          updatedAt\n          pullingArtifactRevisions: revisions(\n            first: null\n            last: null\n            filter: { status: { equals: PULLING } }\n            orderBy: { field: VERSION, direction: DESC }\n          )\n            @connection(\n              key: \"ReservoirArtifactDetailPage_pullingArtifactRevisions\"\n            ) {\n            __id\n            count\n            edges {\n              node {\n                id\n                status\n                ...BAIPullingArtifactRevisionAlertFragment\n              }\n            }\n          }\n          latestVersion: revisions(\n            first: 1\n            orderBy: { field: VERSION, direction: DESC }\n          ) {\n            edges {\n              node {\n                id\n                size\n                version\n                status\n                ...BAIImportArtifactModalArtifactRevisionFragment\n                ...BAIArtifactRevisionTableLatestRevisionFragment\n              }\n            }\n          }\n          revisions(\n            offset: $offset\n            limit: $limit\n            orderBy: { field: VERSION, direction: DESC }\n            filter: $filter\n          ) {\n            count\n            edges {\n              node {\n                id\n                status\n                ...BAIArtifactRevisionTableArtifactRevisionFragment\n                ...BAIImportArtifactModalArtifactRevisionFragment\n                ...BAIDeleteArtifactRevisionsModalArtifactRevisionFragment\n                ...BAIArtifactRevisionDeleteButtonFragment\n                ...BAIArtifactRevisionDownloadButtonFragment\n              }\n            }\n          }\n          ...BAIImportArtifactModalArtifactFragment\n          ...BAIDeleteArtifactRevisionsModalArtifactFragment\n        }\n      }\n    `,\n    deferredQueryVariables,\n    {\n      fetchKey:\n        deferredFetchKey === INITIAL_FETCH_KEY ? undefined : deferredFetchKey,\n      fetchPolicy:\n        deferredFetchKey === INITIAL_FETCH_KEY\n          ? 'store-and-network'\n          : 'network-only',\n    },\n  );\n\n  const latestArtifact = artifact?.latestVersion.edges[0]?.node;\n  const pullingArtifacts = filterOutNullAndUndefined(\n    artifact?.pullingArtifactRevisions.edges.map((e) => e?.node),\n  );\n\n  return (\n    <div>\n      <BAIFlex\n        align=\"center\"\n        style={{ marginBottom: token.marginLG }}\n        justify=\"between\"\n      >\n        <BAIFlex align=\"center\" gap=\"xs\">\n          <Title level={3} style={{ margin: 0 }}>\n            {artifact?.name}\n          </Title>\n          {artifact && <BAIArtifactTypeTag artifactTypeFrgmt={artifact} />}\n        </BAIFlex>\n        <BAIFetchKeyButton\n          value={fetchKey}\n          autoUpdateDelay={10_000}\n          loading={deferredFetchKey !== fetchKey}\n          onChange={() => {\n            updateFetchKey();\n          }}\n        />\n      </BAIFlex>\n\n      {pullingArtifacts.length > 0 && (\n        <BAIFlex\n          direction=\"column\"\n          gap=\"sm\"\n          align=\"stretch\"\n          style={{ marginBottom: token.marginMD }}\n        >\n          {pullingArtifacts.map((frgmt) => (\n            <BAIPullingArtifactRevisionAlert\n              key={frgmt.id}\n              pullingArtifactRevisionFrgmt={frgmt}\n              onOk={() => {\n                updateFetchKey();\n              }}\n            />\n          ))}\n        </BAIFlex>\n      )}\n\n      <BAICard\n        title={t('reservoirPage.BasicInformation')}\n        showDivider\n        extra={\n          <Button\n            type=\"primary\"\n            icon={<Download size={16} />}\n            onClick={() => {\n              if (!latestArtifact) return;\n              setSelectedRevisions([latestArtifact]);\n            }}\n            disabled={!latestArtifact || latestArtifact.status !== 'SCANNED'}\n          >\n            {latestArtifact\n              ? t('reservoirPage.PullLatestVersion', {\n                  version: latestArtifact.version,\n                })\n              : 'N/A'}\n          </Button>\n        }\n        style={{ marginBottom: token.marginMD }}\n      >\n        <Descriptions column={2} bordered>\n          <Descriptions.Item label={t('reservoirPage.Name')}>\n            {artifact?.name}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('reservoirPage.Type')}>\n            {artifact && <BAIArtifactTypeTag artifactTypeFrgmt={artifact} />}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('reservoirPage.Size')}>\n            <BAIText monospace>\n              {latestArtifact?.size\n                ? convertToDecimalUnit(latestArtifact.size, 'auto')\n                    ?.displayValue\n                : 'N/A'}\n            </BAIText>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('reservoirPage.Source')}>\n            {artifact?.source ? (\n              <Typography.Link\n                href={artifact.source.url ?? ''}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {artifact.source.name || 'N/A'}\n              </Typography.Link>\n            ) : (\n              'N/A'\n            )}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('reservoirPage.Registry')}>\n            <Typography>\n              {artifact?.registry\n                ? `${artifact.registry.name}(${artifact.registry.url})`\n                : 'N/A'}\n            </Typography>\n          </Descriptions.Item>\n          <Descriptions.Item label={t('reservoirPage.LastUpdated')} span={2}>\n            {artifact?.updatedAt\n              ? dayjs(artifact?.updatedAt).format('lll')\n              : 'N/A'}\n          </Descriptions.Item>\n          <Descriptions.Item label={t('reservoirPage.Description')} span={2}>\n            {artifact?.description ? (\n              <Paragraph>{artifact.description}</Paragraph>\n            ) : (\n              'N/A'\n            )}\n          </Descriptions.Item>\n        </Descriptions>\n      </BAICard>\n\n      <BAICard\n        title={t('reservoirPage.VersionList')}\n        showDivider\n        style={{ marginBottom: token.marginMD }}\n        styles={{\n          body: {\n            padding: `${token.paddingSM}px ${token.paddingLG}px ${token.paddingLG}px ${token.paddingLG}px`,\n          },\n        }}\n      >\n        <BAIFlex direction=\"column\" gap={'sm'} align=\"stretch\">\n          <BAIFlex align=\"stretch\" justify=\"between\">\n            <BAIGraphQLPropertyFilter\n              combinationMode=\"AND\"\n              onChange={(value) => {\n                setQuery({ filter: value ?? {} }, 'replaceIn');\n              }}\n              filterProperties={[\n                {\n                  fixedOperator: 'equals',\n                  propertyLabel: t('reservoirPage.Status'),\n                  key: 'status',\n                  type: 'enum',\n                  options: [\n                    {\n                      label: 'SCANNED',\n                      value: 'SCANNED',\n                    },\n                    {\n                      label: 'PULLING',\n                      value: 'PULLING',\n                    },\n                    {\n                      label: 'PULLED',\n                      value: 'PULLED',\n                    },\n                    {\n                      label: 'VERIFYING',\n                      value: 'VERIFYING',\n                    },\n                    {\n                      label: 'NEEDS_APPROVAL',\n                      value: 'NEEDS_APPROVAL',\n                    },\n                    {\n                      label: 'FAILED',\n                      value: 'FAILED',\n                    },\n                    {\n                      label: 'AVAILABLE',\n                      value: 'AVAILABLE',\n                    },\n                    {\n                      label: 'REJECTED',\n                      value: 'REJECTED',\n                    },\n                  ],\n                },\n                {\n                  fixedOperator: 'contains',\n                  propertyLabel: t('reservoirPage.Version'),\n                  key: 'version',\n                  type: 'string',\n                },\n                {\n                  propertyLabel: t('reservoirPage.ArtifactID'),\n                  key: 'artifactId',\n                  valueMode: 'scalar',\n                  type: 'string',\n                },\n              ]}\n            />\n            {selectedRevisionIdList.length > 0 ? (\n              <BAIFlex gap={'xs'}>\n                <Text>{selectedRevisionIdList.length} selected</Text>\n                <Tooltip title={t('reservoirPage.PullSelectedVersions')}>\n                  <BAIArtifactRevisionDownloadButton\n                    revisionsFrgmt={selectedRevisionIdList.flatMap(\n                      (arr) => arr.data,\n                    )}\n                    onClick={() => {\n                      if (!artifact) return;\n                      setSelectedRevisions(\n                        selectedRevisionIdList.flatMap((arr) => arr.data),\n                      );\n                    }}\n                  />\n                </Tooltip>\n                <Tooltip title={t('reservoirPage.RemoveSelectedVersions')}>\n                  <BAIArtifactRevisionDeleteButton\n                    revisionsFrgmt={selectedRevisionIdList.flatMap(\n                      (arr) => arr.data,\n                    )}\n                    style={{\n                      borderColor: token.colorBorder,\n                      backgroundColor: token.colorBgContainer,\n                    }}\n                    onClick={() => {\n                      if (!artifact) return;\n                      setSelectedDeleteRevisions(\n                        selectedRevisionIdList.flatMap((arr) => arr.data),\n                      );\n                    }}\n                  />\n                </Tooltip>\n              </BAIFlex>\n            ) : null}\n          </BAIFlex>\n          <BAIArtifactRevisionTable\n            artifactRevisionFrgmt={filterOutNullAndUndefined(\n              artifact?.revisions.edges.map((e) => e.node),\n            )}\n            latestRevisionFrgmt={artifact?.latestVersion.edges[0].node}\n            loading={deferredQueryVariables !== queryVariables}\n            onClickDownload={(revisionId: string) => {\n              artifact?.revisions.edges.forEach((edge) => {\n                if (edge.node.id === revisionId) {\n                  return setSelectedRevisions([edge.node]);\n                }\n              });\n            }}\n            onClickDelete={(revisionId: string) => {\n              artifact?.revisions.edges.forEach((edge) => {\n                if (edge.node.id === revisionId) {\n                  return setSelectedDeleteRevisions([edge.node]);\n                }\n              });\n            }}\n            pagination={{\n              current: tablePaginationOption.current,\n              pageSize: tablePaginationOption.pageSize,\n              total: artifact?.revisions.count ?? 0,\n              onChange: (page, pageSize) => {\n                if (_.isNumber(page) && _.isNumber(pageSize)) {\n                  setTablePaginationOption({\n                    current: page,\n                    pageSize: pageSize,\n                  });\n                }\n              },\n            }}\n            onRow={(record) => ({\n              onClick: (event) => {\n                event.stopPropagation();\n                const target = event.target as HTMLElement;\n                // skip when clicking buttons or links inside the row\n                if (target.closest('button') || target.closest('a')) {\n                  return;\n                }\n                if (!artifact) return;\n\n                const selectedNode = artifact.revisions.edges.find(\n                  (e) => e.node.id === record.id,\n                )?.node;\n\n                if (!selectedNode) return;\n\n                setSelectedRevisionIdList((prev) => {\n                  const _filtered = prev.filter((v) => v.id !== record.id);\n                  if (_filtered.length === prev.length) {\n                    return [...prev, { id: record.id, data: selectedNode }];\n                  } else {\n                    return _filtered;\n                  }\n                });\n              },\n            })}\n            rowSelection={{\n              type: 'checkbox',\n              onChange: (keys) => {\n                if (!artifact) return;\n\n                const revisions = artifact.revisions;\n                const revisionsIds = revisions.edges.map((e) => e.node.id);\n\n                setSelectedRevisionIdList((prev) => {\n                  const _filtered = prev.filter(\n                    (v) => !revisionsIds.includes(v.id),\n                  );\n                  const _selected = revisions.edges\n                    .filter((e) => keys.includes(e.node.id))\n                    .map((arr) => ({\n                      id: arr.node.id,\n                      data: arr.node,\n                    }));\n                  return _filtered.concat(_selected);\n                });\n              },\n              selectedRowKeys: selectedRevisionIdList.map((arr) => arr.id),\n            }}\n          />\n        </BAIFlex>\n      </BAICard>\n\n      {/* {artifact.dependencies && artifact.dependencies.length > 0 && (\n        <BAICard title=\"Dependencies\" style={{ marginBottom: token.marginMD }}>\n          <Space wrap>\n            {artifact.dependencies.map((dep) => (\n              <Tag key={dep} color=\"default\">\n                {dep}\n              </Tag>\n            ))}\n          </Space>\n        </BAICard>\n      )}\n\n      {artifact.tags && artifact.tags.length > 0 && (\n        <Card title=\"Tags\">\n          <Space wrap>\n            {artifact.tags.map((tag) => (\n              <Tag key={tag} color=\"blue\">\n                {tag}\n              </Tag>\n            ))}\n          </Space>\n        </Card>\n      )} */}\n      <BAIImportArtifactModal\n        selectedArtifactFrgmt={artifact ?? null}\n        selectedArtifactRevisionFrgmt={selectedRevisions}\n        open={!!artifact && !_.isEmpty(selectedRevisions)}\n        connectionIds={\n          artifact ? [artifact.pullingArtifactRevisions.__id] : undefined\n        }\n        onOk={(_e, tasks) => {\n          setSelectedRevisions([]);\n          tasks.forEach((task) => {\n            upsertNotification({\n              message: t('reservoirPage.PullingArtifact', {\n                name: task.artifact.name,\n                version: task.version,\n              }),\n              type: 'info',\n              open: true,\n              duration: 0,\n              backgroundTask: {\n                status: 'pending',\n                taskId: task.taskId,\n                promise: null,\n                percent: 0,\n                onChange: {\n                  resolved: (_data, _notification) => {\n                    return {\n                      type: 'success',\n                      message: t('reservoirPage.SuccessFullyPulledArtifact', {\n                        name: task.artifact.name,\n                        version: task.version,\n                      }),\n                      showIcon: true,\n                      toText: t('reservoirPage.GoToArtifact'),\n                      to: `/reservoir/${task.artifact.id}`,\n                    };\n                  },\n                  rejected: (_data, _notification) => {\n                    return t('reservoirPage.FailedToPullArtifact', {\n                      name: task.artifact.name,\n                      version: task.version,\n                    });\n                  },\n                },\n              },\n            });\n          });\n        }}\n        onCancel={() => {\n          setSelectedRevisions([]);\n        }}\n      />\n      <BAIDeleteArtifactRevisionsModal\n        selectedArtifactFrgmt={artifact ?? null}\n        selectedArtifactRevisionFrgmt={selectedDeleteRevisions}\n        onOk={() => {\n          setSelectedDeleteRevisions([]);\n        }}\n        onCancel={() => {\n          setSelectedDeleteRevisions([]);\n        }}\n        open={!!artifact && !_.isEmpty(selectedDeleteRevisions)}\n      />\n    </div>\n  );\n};\n\nexport default ReservoirArtifactDetailPage;\n"],"names":["_ref","type","style","monospace","children","restProps","_jsx","Typography","Text","fontFamily","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","hash","dayjs","relativeTime","Title","Paragraph","ReservoirArtifactDetailPage","_artifact$latestVersi","_convertToDecimalUnit","_artifact$source$url","_artifact$revisions$c","token","theme","useToken","t","useTranslation","upsertNotification","useSetBAINotification","artifactId","useParams","fetchKey","updateFetchKey","useUpdatableState","INITIAL_FETCH_KEY","selectedRevisionIdList","setSelectedRevisionIdList","useState","selectedDeleteRevisions","setSelectedDeleteRevisions","selectedRevisions","setSelectedRevisions","queryParams","setQuery","useQueryParams","filter","withDefault","JsonParam","jsonStringFilter","JSON","stringify","baiPaginationOption","tablePaginationOption","setTablePaginationOption","useBAIPaginationOptionStateOnSearchParam","current","pageSize","queryVariables","useMemo","id","offset","limit","parse","deferredQueryVariables","useDeferredValue","deferredFetchKey","artifact","useLazyLoadQuery","_ReservoirArtifactDetailPageQuery","undefined","fetchPolicy","latestArtifact","latestVersion","edges","pullingArtifacts","filterOutNullAndUndefined","pullingArtifactRevisions","map","e","_jsxs","BAIFlex","align","marginBottom","marginLG","justify","gap","level","margin","name","BAIArtifactTypeTag","artifactTypeFrgmt","BAIFetchKeyButton","value","autoUpdateDelay","loading","onChange","length","direction","marginMD","frgmt","BAIPullingArtifactRevisionAlert","pullingArtifactRevisionFrgmt","onOk","BAICard","title","showDivider","extra","Button","icon","Download","size","onClick","disabled","status","version","Descriptions","column","bordered","Item","label","BAIText","convertToDecimalUnit","displayValue","source","Link","href","url","target","rel","registry","span","updatedAt","format","description","styles","body","padding","paddingSM","paddingLG","BAIGraphQLPropertyFilter","combinationMode","filterProperties","fixedOperator","propertyLabel","key","options","valueMode","Tooltip","BAIArtifactRevisionDownloadButton","revisionsFrgmt","flatMap","arr","data","BAIArtifactRevisionDeleteButton","borderColor","colorBorder","backgroundColor","colorBgContainer","BAIArtifactRevisionTable","artifactRevisionFrgmt","revisions","latestRevisionFrgmt","onClickDownload","revisionId","forEach","edge","onClickDelete","pagination","total","count","page","_","onRow","record","event","_artifact$revisions$e","stopPropagation","closest","selectedNode","find","prev","_filtered","v","rowSelection","keys","revisionsIds","includes","_selected","concat","selectedRowKeys","BAIImportArtifactModal","selectedArtifactFrgmt","selectedArtifactRevisionFrgmt","open","connectionIds","__id","_e","tasks","task","message","duration","backgroundTask","taskId","promise","percent","resolved","_data","_notification","showIcon","toText","to","rejected","onCancel","BAIDeleteArtifactRevisionsModal"],"sourceRoot":""}