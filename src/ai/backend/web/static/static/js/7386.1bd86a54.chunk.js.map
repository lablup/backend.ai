{"version":3,"file":"static/js/7386.1bd86a54.chunk.js","mappings":"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","sources":["components/ResourceNumber.tsx","components/StorageSelect.tsx","components/__generated__/ModelCardModalFragment.graphql.ts","components/__generated__/ModelCloneModalVFolderFragment.graphql.ts","hooks/usePainKiller.tsx","components/ModelCloneModal.tsx","components/ModelCardModal.tsx","pages/ModelStoreListPage.tsx","pages/__generated__/ModelStoreListPageQuery.graphql.ts"],"sourcesContent":["import { iSizeToSize } from '../helper';\nimport { useResourceSlotsDetails } from '../hooks/backendai';\nimport { useCurrentResourceGroupValue } from '../hooks/useCurrentProject';\nimport Flex from './Flex';\nimport { Tooltip, Typography, theme } from 'antd';\nimport React, { ReactElement } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const ACCELERATOR_UNIT_MAP: {\n  [key: string]: string;\n} = {\n  'cuda.device': 'GPU',\n  'cuda.shares': 'FGPU',\n  'rocm.device': 'GPU',\n  'tpu.device': 'TPU',\n  'ipu.device': 'IPU',\n  'atom.device': 'ATOM',\n  'atom-plus.device': 'ATOM+',\n  'warboy.device': 'Warboy',\n  'hyperaccel-lpu.device': 'Hyperaccel LPU',\n};\n\nexport type ResourceOpts = {\n  shmem?: number;\n};\ninterface ResourceNumberProps {\n  type: string;\n  extra?: ReactElement;\n  opts?: ResourceOpts;\n  value: string;\n  hideTooltip?: boolean;\n}\n\ntype ResourceTypeInfo<V> = {\n  [key in string]: V;\n};\nconst ResourceNumber: React.FC<ResourceNumberProps> = ({\n  type,\n  value: amount,\n  extra,\n  opts,\n  hideTooltip = false,\n}) => {\n  const { token } = theme.useToken();\n  const currentGroup = useCurrentResourceGroupValue();\n  const [resourceSlotsDetails] = useResourceSlotsDetails(\n    currentGroup || undefined,\n  );\n\n  return (\n    <Flex direction=\"row\" gap=\"xxs\">\n      {resourceSlotsDetails?.[type] ? (\n        <ResourceTypeIcon type={type} showTooltip={!hideTooltip} />\n      ) : (\n        type\n      )}\n\n      <Typography.Text>\n        {resourceSlotsDetails?.[type]?.number_format.binary\n          ? Number(iSizeToSize(amount, 'g', 3, true)?.numberFixed).toString()\n          : (resourceSlotsDetails?.[type]?.number_format.round_length || 0) > 0\n            ? parseFloat(amount).toFixed(2)\n            : amount}\n      </Typography.Text>\n      <Typography.Text type=\"secondary\">\n        {resourceSlotsDetails?.[type]?.display_unit || ''}\n      </Typography.Text>\n      {type === 'mem' && opts?.shmem && opts?.shmem > 0 ? (\n        <Typography.Text\n          type=\"secondary\"\n          style={{ fontSize: token.fontSizeSM }}\n        >\n          (SHM: {iSizeToSize(opts.shmem + 'b', 'g', 2, true)?.numberFixed}\n          GiB)\n        </Typography.Text>\n      ) : null}\n      {extra}\n    </Flex>\n  );\n};\n\nconst MWCIconWrap: React.FC<{ size?: number; children: string }> = ({\n  size = 16,\n  children,\n}) => {\n  return (\n    // @ts-ignore\n    <mwc-icon\n      style={{\n        '--mdc-icon-size': `${size + 2}px`,\n        width: size,\n        height: size,\n      }}\n    >\n      {children}\n      {/* @ts-ignore */}\n    </mwc-icon>\n  );\n};\ninterface AccTypeIconProps\n  extends Omit<React.ImgHTMLAttributes<HTMLImageElement>, 'src'> {\n  type: string;\n  showIcon?: boolean;\n  showUnit?: boolean;\n  showTooltip?: boolean;\n  size?: number;\n}\nexport const ResourceTypeIcon: React.FC<AccTypeIconProps> = ({\n  type,\n  size = 16,\n  showIcon = true,\n  showUnit = true,\n  showTooltip = true,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const resourceTypeIconSrcMap: ResourceTypeInfo<\n    [ReactElement | string, string]\n  > = {\n    cpu: [\n      <MWCIconWrap size={size}>developer_board</MWCIconWrap>,\n      t('session.core'),\n    ],\n    mem: [<MWCIconWrap size={size}>memory</MWCIconWrap>, 'GiB'],\n    'cuda.device': ['/resources/icons/file_type_cuda.svg', 'GPU'],\n    'cuda.shares': ['/resources/icons/file_type_cuda.svg', 'FGPU'],\n    'rocm.device': ['/resources/icons/rocm.svg', 'GPU'],\n    'tpu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'TPU'],\n    'ipu.device': [<MWCIconWrap size={size}>view_module</MWCIconWrap>, 'IPU'],\n    'atom.device': ['/resources/icons/rebel.svg', 'ATOM'],\n    'atom-plus.device': ['/resources/icons/rebel.svg', 'ATOM+'],\n    'warboy.device': ['/resources/icons/furiosa.svg', 'Warboy'],\n    'hyperaccel-lpu.device': [\n      '/resources/icons/npu_generic.svg',\n      'Hyperaccel LPU',\n    ],\n  };\n\n  const content =\n    typeof resourceTypeIconSrcMap[type]?.[0] === 'string' ? (\n      <img\n        {...props}\n        style={{\n          height: size,\n          alignSelf: 'center',\n          ...(props.style || {}),\n        }}\n        // @ts-ignore\n        src={resourceTypeIconSrcMap[type]?.[0] || ''}\n        alt={type}\n      />\n    ) : (\n      <Flex style={{ width: 16, height: 16 }}>\n        {resourceTypeIconSrcMap[type]?.[0] || type}\n      </Flex>\n    );\n\n  return showTooltip ? (\n    // <Tooltip title={showTooltip ? `${type} (${resourceTypeIconSrcMap[type][1]})` : undefined}>\n    <Tooltip title={type}>{content}</Tooltip>\n  ) : (\n    <Flex style={{ pointerEvents: 'none' }}>{content}</Flex>\n  );\n};\n\nexport default ResourceNumber;\n","import { usageIndicatorColor } from '../helper';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useSuspenseTanQuery } from '../hooks/reactQueryAlias';\nimport useControllableState from '../hooks/useControllableState';\nimport { useShadowRoot } from './DefaultProviders';\nimport Flex from './Flex';\nimport TextHighlighter from './TextHighlighter';\nimport { Select, SelectProps, Badge, Tooltip } from 'antd';\nimport _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport type VolumeInfo = {\n  id: string;\n  backend: string;\n  capabilities: string[];\n  usage: {\n    percentage: number;\n  };\n  sftp_scaling_groups: string[];\n};\ninterface Props extends Omit<SelectProps, 'value' | 'onChange'> {\n  autoSelectType?: 'usage' | 'default';\n  showUsageStatus?: boolean;\n  value?: string;\n  onChange?: (v?: string, vInfo?: VolumeInfo) => void;\n}\n// TODO: use React.forwardRef\nconst StorageSelect: React.FC<Props> = ({\n  autoSelectType,\n  showUsageStatus,\n  value,\n  onChange,\n  defaultValue,\n  searchValue,\n  onSearch,\n  ...partialSelectProps\n}) => {\n  const { t } = useTranslation();\n\n  const shadowRoot = useShadowRoot();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const { data: vhostInfo, isLoading: isLoadingVhostInfo } =\n    useSuspenseTanQuery<{\n      default: string;\n      allowed: Array<string>;\n      volume_info?: {\n        [key: string]: {\n          backend: string;\n          capabilities: string[];\n          usage: {\n            percentage: number;\n          };\n          sftp_scaling_groups: any[];\n        };\n      };\n    }>({\n      queryKey: ['vhostInfo'],\n      queryFn: () => {\n        return baiClient.vfolder.list_hosts();\n      },\n    });\n\n  const [controllableState, setControllableState] = useControllableState({\n    value,\n    onChange,\n    defaultValue,\n  });\n  const [controllableSearchValue, setControllableSearchValue] =\n    useControllableState({ value: searchValue, onChange: onSearch });\n  useEffect(() => {\n    if (!autoSelectType) return;\n    let nextHost = vhostInfo?.default ?? vhostInfo?.allowed[0] ?? '';\n    if (autoSelectType === 'usage') {\n      const lowestUsageHost = _.minBy(\n        _.map(vhostInfo?.allowed, (host) => ({\n          host,\n          volume_info: vhostInfo?.volume_info?.[host],\n        })),\n        'volume_info.usage.percentage',\n      )?.host;\n      nextHost = lowestUsageHost || nextHost;\n    }\n    setControllableState(nextHost, {\n      id: nextHost,\n      ...(vhostInfo?.volume_info?.[nextHost] || {}),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [vhostInfo]);\n  return (\n    <Select\n      filterOption={true}\n      placeholder={t('data.SelectStorageHost')}\n      loading={isLoadingVhostInfo}\n      style={{\n        // TODO: not good to hardcode\n        minWidth: 165,\n      }}\n      value={controllableState}\n      onChange={(host) => {\n        setControllableState(host, {\n          id: host,\n          ...(vhostInfo?.volume_info?.[host] || {}),\n        });\n      }}\n      searchValue={controllableSearchValue}\n      onSearch={setControllableSearchValue}\n      optionLabelProp=\"value\"\n      options={_.map(vhostInfo?.allowed, (host) => ({\n        label: showUsageStatus ? (\n          <Flex align=\"center\" gap={'xs'}>\n            {vhostInfo?.volume_info?.[host]?.usage && (\n              <Tooltip\n                title={`${t('data.Host')} ${t('data.usage.Status')}:\n                ${\n                  vhostInfo?.volume_info[host]?.usage?.percentage < 70\n                    ? t('data.usage.Adequate')\n                    : vhostInfo?.volume_info[host]?.usage?.percentage < 90\n                      ? t('data.usage.Caution')\n                      : t('data.usage.Insufficient')\n                }`}\n                // @ts-ignore\n                getPopupContainer={() => shadowRoot}\n              >\n                <Badge\n                  color={usageIndicatorColor(\n                    vhostInfo?.volume_info[host]?.usage?.percentage,\n                  )}\n                />\n              </Tooltip>\n            )}\n            <TextHighlighter keyword={controllableSearchValue}>\n              {host}\n            </TextHighlighter>\n            {/* TODO: uncomment after implementing click action */}\n            {/* <Button type=\"link\" size=\"small\" icon={<InfoCircleOutlined />} /> */}\n          </Flex>\n        ) : (\n          host\n        ),\n        value: host,\n      }))}\n      {...partialSelectProps}\n    />\n  );\n};\n\nexport default StorageSelect;\n","/**\n * @generated SignedSource<<ee897fe5a2a752c5377ccd785f42a012>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelCardModalFragment$data = {\n  readonly architecture: string | null | undefined;\n  readonly author: string | null | undefined;\n  readonly category: string | null | undefined;\n  readonly created_at: string | null | undefined;\n  readonly description: string | null | undefined;\n  readonly error_msg: string | null | undefined;\n  readonly framework: ReadonlyArray<string | null | undefined> | null | undefined;\n  readonly id: string;\n  readonly label: ReadonlyArray<string | null | undefined> | null | undefined;\n  readonly license: string | null | undefined;\n  readonly min_resource: any | null | undefined;\n  readonly modified_at: string | null | undefined;\n  readonly name: string | null | undefined;\n  readonly readme: string | null | undefined;\n  readonly row_id: string | null | undefined;\n  readonly task: string | null | undefined;\n  readonly title: string | null | undefined;\n  readonly version: string | null | undefined;\n  readonly vfolder: {\n    readonly cloneable: boolean | null | undefined;\n    readonly host: string | null | undefined;\n    readonly id: string | null | undefined;\n    readonly name: string | null | undefined;\n  } | null | undefined;\n  readonly vfolder_node: {\n    readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCloneModalVFolderFragment\">;\n  } | null | undefined;\n  readonly \" $fragmentType\": \"ModelCardModalFragment\";\n};\nexport type ModelCardModalFragment$key = {\n  readonly \" $data\"?: ModelCardModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCardModalFragment\">;\n};\n\nconst node: ReaderFragment = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n};\nreturn {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelCardModalFragment\",\n  \"selections\": [\n    (v0/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"row_id\",\n      \"storageKey\": null\n    },\n    (v1/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"author\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"title\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"version\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"modified_at\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"description\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"task\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"category\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"architecture\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"framework\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"label\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"license\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"readme\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"min_resource\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"VirtualFolder\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"vfolder\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"cloneable\",\n          \"storageKey\": null\n        },\n        (v0/*: any*/),\n        (v1/*: any*/),\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"kind\": \"ScalarField\",\n          \"name\": \"host\",\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"concreteType\": \"VirtualFolderNode\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"vfolder_node\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"args\": null,\n          \"kind\": \"FragmentSpread\",\n          \"name\": \"ModelCloneModalVFolderFragment\"\n        }\n      ],\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"error_msg\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"ModelCard\",\n  \"abstractKey\": null\n};\n})();\n\n(node as any).hash = \"2a7ce0a135e9f76b9639c02f17809626\";\n\nexport default node;\n","/**\n * @generated SignedSource<<e267425d173aaf4f591da5ebdca1d1a2>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelCloneModalVFolderFragment$data = {\n  readonly host: string | null | undefined;\n  readonly id: string;\n  readonly name: string | null | undefined;\n  readonly \" $fragmentType\": \"ModelCloneModalVFolderFragment\";\n};\nexport type ModelCloneModalVFolderFragment$key = {\n  readonly \" $data\"?: ModelCloneModalVFolderFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCloneModalVFolderFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"ModelCloneModalVFolderFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"host\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"VirtualFolderNode\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"9e8196f7a6fe11fb62c373124ffc450a\";\n\nexport default node;\n","import { useTranslation } from 'react-i18next';\n\nconst errorMessageTable: {\n  [key: string]: string;\n} = {\n  \"Cannot read property 'map' of null\": 'error.APINotSupported',\n  'TypeError: NetworkError when attempting to fetch resource.':\n    'error.NetworkConnectionFailed', //_t('error.NetworkConnectionFailed')\n  // Login\n  'Login failed. Check login information.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'User credential mismatch.': 'error.LoginFailed', //_t('error.LoginFailed')\n  'Authentication failed. Check information and manager status.':\n    'error.AuthenticationFailed', //_t('error.AuthenticationFailed')\n  'Too many failed login attempts': 'error.TooManyLoginFailures', //_t('error.TooManyLoginFailures')\n  // virtual folders\n  'server responded failure: 400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  '400 Bad Request - The virtual folder already exists with the same name.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - One of your accessible vfolders already has the name you requested.':\n    'error.VirtualFolderAlreadyExist', //_t('error.VirtualFolderAlreadyExist')\n  'server responded failure: 400 Bad Request - You cannot create more vfolders.':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (You cannot create more vfolders.)':\n    'error.MaximumVfolderCreation', //_t('error.MaximumVfolderCreation')\n  'server responded failure: 400 Bad Request - Cannot change the options of a vfolder that is not owned by myself.':\n    'error.CannotChangeVirtualFolderOption', //_t('error.CannotChangeVirtualFolderOption')\n  'server responded failure: 403 Forbidden - Cannot share private dot-prefixed vfolders.':\n    'error.CannotSharePrivateAutomountFolder', //_t('error.CannotSharePrivateAutomountFolder')\n  'server responded failure: 404 Not Found - No such vfolder invitation.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  'server responded failure: 404 Not Found - No such user.':\n    'error.FolderSharingNotAvailableToUser', //_t('error.FolderSharingNotAvailableToUser')\n  // Resource\n  'server responded failure: 412 Precondition Failed - You have reached your resource limit.':\n    'error.ReachedResourceLimit', //_t('error.ReachedResourceLimit')\n  // User\n  \"Cannot read property 'split' of undefined\": 'error.UserHasNoGroup', //_t('error.UserHasNoGroup')\n};\nconst regexTable: {\n  [key: string]: string;\n} = {\n  '\\\\w*not found matched token with email\\\\w*': 'error.InvalidSignupToken', //_t('error.InvalidSignupToken')\n  '\\\\w*Access key not found\\\\w*': 'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  '\\\\w*401 Unauthorized - Credential/signature mismatch\\\\w*':\n    'error.LoginInformationMismatch', //_t('error.LoginInformationMismatch')\n  'integrity error: duplicate key value violates unique constraint \"pk_resource_presets\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ResourcePolicyAlreadyExist', //_t('error.ResourcePolicyAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"pk_scaling_groups\"[\\\\n]DETAIL:  Key \\\\(name\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.ScalingGroupAlreadyExist', //_t('error.ScalingGroupAlreadyExist')\n  'integrity error: duplicate key value violates unique constraint \"uq_users_username\"[\\\\n]DETAIL:  Key \\\\(username\\\\)=\\\\([\\\\w]+\\\\) already exists.[\\\\n]':\n    'error.UserNameAlreadyExist', //_t('error.UserNameAlreadyExist')\n  'server responded failure: 400 Bad Request - Missing or invalid API parameters. (Your resource quota is exceeded. (cpu=24 mem=512g cuda.shares=80))':\n    'error.ResourceLimitExceed', //_t('error.ResourceLimitExceed')\n  '\\\\w*Key \\\\(name\\\\)=\\\\(.+\\\\) is still referenced from table \"keypairs\"\\\\.\\\\w*':\n    'error.ResourcePolicyStillReferenced', //_t('error.ResourcePolicyStillReferenced')\n  'Your resource request is smaller than the minimum required by the image. (\\\\w*)':\n    'error.SmallerResourceThenImageRequires', //_t('error.SmallerResourceThenImageRequires')\n};\n\nexport const usePainKiller = () => {\n  const { t } = useTranslation();\n  const relieve = (msg: string) => {\n    if (typeof msg === 'undefined') {\n      if (\n        // @ts-ignore\n        globalThis.backendaiclient === undefined ||\n        // @ts-ignore\n        globalThis.backendaiclient === null\n      ) {\n        return '_DISCONNECTED';\n      } else {\n        return 'Problem occurred.';\n      }\n    }\n    // @ts-ignore\n    if (globalThis.backendaiwebui.debug === true) {\n      return msg;\n    }\n    if ({}.hasOwnProperty.call(errorMessageTable, msg)) {\n      return t(errorMessageTable[msg]);\n    } else {\n      for (const regex of Object.keys(regexTable)) {\n        if (RegExp(regex).test(msg)) {\n          return t(regexTable[regex]);\n        }\n      }\n      return msg; // Bypass message. It will log on log panel\n    }\n  };\n  return { relieve };\n};\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useSetBAINotification } from '../hooks/useBAINotification';\nimport { usePainKiller } from '../hooks/usePainKiller';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport StorageSelect from './StorageSelect';\nimport { ModelCloneModalVFolderFragment$key } from './__generated__/ModelCloneModalVFolderFragment.graphql';\nimport {\n  Alert,\n  Form,\n  FormInstance,\n  FormItemProps,\n  Input,\n  Select,\n  Switch,\n  message,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ModelCloneModalProps extends BAIModalProps {\n  vfolderNode: ModelCloneModalVFolderFragment$key | null;\n  deprecatedVFolderInfo?: {\n    id: string;\n    name: string;\n    host: string;\n  };\n}\nconst ModelCloneModal: React.FC<ModelCloneModalProps> = ({\n  // sourceFolderName,\n  // sourceFolderHost,\n  vfolderNode,\n  deprecatedVFolderInfo,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const baiClient = useSuspendedBackendaiClient();\n  const vfolder =\n    useFragment(\n      graphql`\n        fragment ModelCloneModalVFolderFragment on VirtualFolderNode {\n          id\n          name\n          host\n        }\n      `,\n      vfolderNode,\n    ) || deprecatedVFolderInfo;\n\n  const formRef = useRef<\n    FormInstance<{\n      target_name: string;\n      target_host: string;\n      permission: string;\n      // type: string;\n      // project: string;\n      usage_mode: string;\n    }>\n  >(null);\n  const painKiller = usePainKiller();\n  const { upsertNotification } = useSetBAINotification();\n\n  const [extraNameError, setExtraNameError] = useState<\n    Pick<FormItemProps, 'validateStatus' | 'help'>\n  >({});\n\n  const mutationToClone = useTanMutation<\n    {\n      bgtask_id: string;\n      id: string;\n    },\n    { type?: string; title?: string; message?: string },\n    {\n      input: any;\n      name: string;\n    }\n  >({\n    // @ts-ignore\n    mutationFn: ({ input, name }: { input: any; name: string }) => {\n      return baiClient.vfolder.clone(input, name);\n    },\n  });\n\n  return (\n    <BAIModal\n      destroyOnClose\n      {...props}\n      okText={t('button.Clone')}\n      confirmLoading={mutationToClone.isPending}\n      onOk={(e) => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            if (vfolder?.name && vfolder.host) {\n              mutationToClone.mutate(\n                {\n                  input: values,\n                  name: vfolder.name,\n                },\n                {\n                  onSuccess(data) {\n                    upsertNotification({\n                      key: 'modelStore.clone.' + vfolder.id,\n                      open: true,\n                      backgroundTask: {\n                        status: 'pending',\n                        percent: 0,\n                        taskId: data.bgtask_id,\n                        statusDescriptions: {\n                          pending: t('data.folders.FolderClonePending'),\n                          resolved: t('data.folders.FolderCloned'),\n                          rejected: t('data.folders.FolderCloneFailed'),\n                        },\n                      },\n                      message: values.target_name,\n                      toText: t('data.folders.OpenAFolder'),\n                      to: `/data?tab=model&folder=${data.id}`,\n                    });\n                    props.onOk?.(e);\n                  },\n                  onError(error) {\n                    if (\n                      error.message?.includes(\n                        'The virtual folder already exists with the same name',\n                      )\n                    ) {\n                      setExtraNameError({\n                        validateStatus: 'error',\n                        help: t('modelStore.FolderAlreadyExists'),\n                      });\n                    } else {\n                      const messageStr = painKiller.relieve(\n                        error?.message || '',\n                      );\n                      message.error({\n                        content: messageStr,\n                      });\n                    }\n                  },\n                },\n              );\n            } else {\n            }\n          })\n          .catch(() => {});\n      }}\n    >\n      <Flex direction=\"column\" align=\"stretch\" gap=\"sm\">\n        <Alert showIcon type=\"info\" message={t('modelStore.CloneInfo')} />\n        <Form\n          ref={formRef}\n          layout=\"vertical\"\n          requiredMark=\"optional\"\n          initialValues={{\n            permission: 'rw',\n            // project: currentProject.id,\n            // type: 'user',\n            usage_mode: 'model',\n            target_name: vfolder?.name + '_1',\n            target_host: vfolder?.host,\n          }}\n          scrollToFirstError\n        >\n          {/*  */}\n          <Form.Item label={t('data.ExistingFolderName')} required>\n            <Input value={vfolder?.name || ''} disabled />\n          </Form.Item>\n          <Form.Item\n            name=\"target_name\"\n            label={t('data.NewFolderName')}\n            rules={[\n              {\n                required: true,\n              },\n              {\n                pattern: /^[a-zA-Z0-9._-]*$/,\n                message: t('data.Allowslettersnumbersand-_dot'),\n              },\n            ]}\n            {...extraNameError}\n          >\n            <Input\n              autoComplete=\"off\"\n              onChange={() => {\n                setExtraNameError({});\n              }}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"target_host\"\n            label={t('data.Host')}\n            tooltip={t('data.CloningIsOnlyPossibleSameHost')}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <StorageSelect disabled />\n          </Form.Item>\n          {/* <Form.Item\n          name=\"type\"\n          label={t('data.Type')}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            options={_.map(allowed_vfolder_types, (type) => {\n              return {\n                label:\n                  {\n                    user: t('data.User'),\n                    group: t('data.Project'),\n                  }[type] || type,\n                value: type,\n              };\n            })}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, next) => prev.type !== next.type}\n        >\n          {() => {\n            return (\n              <Form.Item\n                name=\"project\"\n                label={t('data.Project')}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <ProjectSelector\n                  domain={currentDomain}\n                  onSelectProject={() => {}}\n                  autoSelectDefault\n                  disabled={form.getFieldValue('type') !== 'group'}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item> */}\n\n          {/* _vfolderInnatePermissionSupport */}\n          {baiClient.isAPIVersionCompatibleWith('v4.20191215') && (\n            <Form.Item\n              // label={t('data.UsageMode')}\n              name={'usage_mode'}\n              hidden\n            >\n              <Input />\n              {/* <Select\n              options={[\n                {\n                  label: 'General',\n                  value: 'general',\n                },\n                ...(baiClient.supports('inference-workload')\n                  ? [\n                      {\n                        label: 'Model',\n                        value: 'model',\n                      },\n                    ]\n                  : []),\n              ]}\n            /> */}\n            </Form.Item>\n          )}\n          <Form.Item\n            label={t('data.Permission')}\n            name={'permission'}\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select\n              options={[\n                {\n                  label: 'Read-Write',\n                  value: 'rw',\n                },\n                {\n                  label: 'Read-Only',\n                  value: 'ro',\n                },\n                {\n                  label: 'Delete',\n                  value: 'wd',\n                },\n              ]}\n            />\n          </Form.Item>\n          <Form.Item hidden name=\"cloneable\" valuePropName=\"checked\">\n            <Switch checked={false} />\n          </Form.Item>\n        </Form>\n      </Flex>\n    </BAIModal>\n  );\n};\n\nexport default ModelCloneModal;\n","import { useBackendAIImageMetaData } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport ModelCloneModal from './ModelCloneModal';\nimport ResourceNumber from './ResourceNumber';\nimport { ModelCardModalFragment$key } from './__generated__/ModelCardModalFragment.graphql';\nimport { BankOutlined, CopyOutlined, FileOutlined } from '@ant-design/icons';\nimport {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Descriptions,\n  Empty,\n  Grid,\n  Row,\n  Tag,\n  Typography,\n  theme,\n} from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { Cog, FolderX } from 'lucide-react';\nimport Markdown from 'markdown-to-jsx';\nimport React, { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface ModelCardModalProps extends BAIModalProps {\n  modelCardModalFrgmt?: ModelCardModalFragment$key | null;\n  onRequestClose: () => void;\n}\nconst ModelCardModal: React.FC<ModelCardModalProps> = ({\n  modelCardModalFrgmt = null,\n  onRequestClose,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [visibleCloneModal, setVisibleCloneModal] = useState(false);\n\n  const [metadata] = useBackendAIImageMetaData();\n  const screen = Grid.useBreakpoint();\n  const model_card = useFragment(\n    graphql`\n      fragment ModelCardModalFragment on ModelCard {\n        id\n        row_id @since(version: \"24.03.7\")\n        name\n        author\n        title\n        version\n        created_at\n        modified_at\n        description\n        task\n        category\n        architecture\n        framework\n        label\n        license\n        readme\n        min_resource\n        architecture\n        framework\n        vfolder {\n          cloneable\n        }\n        vfolder_node @since(version: \"24.09.*\") {\n          ...ModelCloneModalVFolderFragment\n        }\n        vfolder {\n          id\n          name\n          host\n        }\n        error_msg @since(version: \"24.03.7\")\n      }\n    `,\n    modelCardModalFrgmt,\n  );\n\n  const colSize = {\n    xs: { span: 24 },\n    lg: {\n      span:\n        _.compact([model_card?.description, model_card?.readme]).length === 2\n          ? 12\n          : 24,\n    },\n  };\n\n  return (\n    <BAIModal\n      {...props}\n      title={\n        model_card?.title ? (\n          model_card?.title\n        ) : (\n          <div style={{ color: token.colorTextSecondary }}>\n            <FolderX\n              style={{\n                marginRight: token.marginXXS,\n              }}\n            />\n            {model_card?.name}\n          </div>\n        )\n      }\n      centered\n      onCancel={onRequestClose}\n      destroyOnClose\n      width={\n        _.isEmpty(model_card?.readme) || _.isEmpty(model_card?.description)\n          ? 800\n          : screen.xxl\n            ? '75%'\n            : '90%'\n      }\n      footer={[\n        <Button\n          onClick={() => {\n            onRequestClose();\n          }}\n          key=\"close\"\n        >\n          {t('button.Close')}\n        </Button>,\n      ]}\n    >\n      {model_card?.error_msg ? (\n        <Flex direction=\"column\" wrap=\"wrap\" align=\"stretch\" gap={'sm'}>\n          <Alert\n            message={model_card?.error_msg}\n            type=\"error\"\n            showIcon\n            style={{ width: '100%' }}\n          />\n          <Empty\n            style={{ width: '100%' }}\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </Flex>\n      ) : (\n        <>\n          <Flex\n            direction=\"row\"\n            align=\"start\"\n            style={{ marginBottom: token.marginSM }}\n            gap={'xs'}\n            wrap=\"wrap\"\n          >\n            <Flex\n              justify=\"start\"\n              align=\"start\"\n              gap={'xs'}\n              style={{ flex: 1 }}\n              wrap=\"wrap\"\n            >\n              {model_card?.category && (\n                <Tag bordered={false} style={{ marginRight: 0 }}>\n                  {model_card?.category}\n                </Tag>\n              )}\n              {model_card?.task && (\n                <Tag\n                  bordered={false}\n                  color=\"success\"\n                  style={{ marginRight: 0 }}\n                >\n                  {model_card?.task}\n                </Tag>\n              )}\n              {model_card?.label &&\n                _.map(model_card?.label, (label) => (\n                  <Tag\n                    key={label}\n                    bordered={false}\n                    color=\"blue\"\n                    style={{ marginRight: 0 }}\n                  >\n                    {label}\n                  </Tag>\n                ))}\n              {model_card?.license && (\n                <Tag\n                  icon={<BankOutlined />}\n                  bordered={false}\n                  color=\"geekblue\"\n                  style={{ marginRight: 0 }}\n                >\n                  {model_card?.license}\n                </Tag>\n              )}\n            </Flex>\n            <Flex direction=\"row\" justify=\"end\" gap={'sm'}>\n              {/* <Button\n            type=\"primary\"\n            ghost\n            icon={<DownloadOutlined />}\n            size=\"small\"\n            disabled\n          >\n            {t('button.Download')}\n          </Button> */}\n              <Button disabled ghost size=\"small\" icon={<Cog />}>\n                {t('modelStore.FinetuneModel')}\n              </Button>\n              <Button\n                type=\"primary\"\n                ghost\n                icon={<CopyOutlined />}\n                size=\"small\"\n                disabled={!model_card?.vfolder?.cloneable}\n                onClick={() => {\n                  // const event = new CustomEvent('backend-ai-vfolder-cloning', {\n                  //   detail: {\n                  //     // TODO: change this to vfolder name\n                  //     name: mode_card?.name,\n                  //   },\n                  // });\n                  // onRequestClose();\n                  // document.dispatchEvent(event);\n                  setVisibleCloneModal(true);\n                }}\n              >\n                {t('modelStore.CloneToFolder')}\n              </Button>\n            </Flex>\n          </Flex>\n          <Row gutter={[token.marginLG, token.marginLG]}>\n            <Col {...colSize}>\n              <Flex direction=\"column\" align=\"stretch\" gap={'xs'}>\n                {!!model_card?.description ? (\n                  <>\n                    <Typography.Title level={5} style={{ marginTop: 0 }}>\n                      {t('modelStore.Description')}\n                    </Typography.Title>\n                    <Card\n                      size=\"small\"\n                      style={{\n                        whiteSpace: 'pre-wrap',\n                        minHeight: screen.lg ? 100 : undefined,\n                        height: screen.lg ? 'calc(100vh - 590px)' : undefined,\n                        maxHeight: 'calc(100vh - 590px)',\n                        overflow: 'auto',\n                      }}\n                    >\n                      <Typography.Paragraph\n                        ellipsis={{\n                          rows: screen.lg ? 11 : 3,\n                          expandable: 'collapsible',\n                          symbol: (expanded) => (\n                            <Button size=\"small\" type=\"link\">\n                              {expanded\n                                ? t('button.Collapse')\n                                : t('button.Expand')}\n                            </Button>\n                          ),\n                        }}\n                      >\n                        {model_card?.description}\n                      </Typography.Paragraph>\n                    </Card>\n                  </>\n                ) : null}\n                <Descriptions\n                  style={{ marginTop: token.marginMD }}\n                  // title={t('modelStore.Metadata')}\n                  column={1}\n                  size=\"small\"\n                  bordered\n                  items={[\n                    {\n                      key: 'author',\n                      label: t('modelStore.Author'),\n                      children: model_card?.author,\n                    },\n                    {\n                      key: 'version',\n                      label: t('modelStore.Version'),\n                      children: model_card?.version,\n                    },\n                    {\n                      key: 'architecture',\n                      label: t('environment.Architecture'),\n                      children: model_card?.architecture,\n                    },\n                    {\n                      key: 'frameworks',\n                      label: t('modelStore.Framework'),\n                      children: (\n                        <Flex direction=\"row\" gap={'xs'}>\n                          {_.map(\n                            _.filter(\n                              _.castArray(model_card?.framework),\n                              (v) => !_.isEmpty(v),\n                            ),\n                            (framework, index) => {\n                              const targetImageKey = framework?.replace(\n                                /\\s*\\d+\\s*$/,\n                                '',\n                              );\n                              const imageInfo = _.find(\n                                metadata?.imageInfo,\n                                (imageInfo) =>\n                                  imageInfo?.name === targetImageKey,\n                              );\n                              const uniqueKey = `${framework}-${index}`;\n                              return imageInfo?.icon ? (\n                                <Flex gap={'xxs'} key={uniqueKey}>\n                                  <img\n                                    style={{\n                                      width: '1em',\n                                      height: '1em',\n                                    }}\n                                    src={'resources/icons/' + imageInfo?.icon}\n                                    alt={framework || ''}\n                                  />\n                                  {framework}\n                                </Flex>\n                              ) : (\n                                <Typography.Text key={uniqueKey}>\n                                  {framework}\n                                </Typography.Text>\n                              );\n                            },\n                          )}\n                        </Flex>\n                      ),\n                    },\n                    {\n                      key: 'created',\n                      label: t('modelStore.Created'),\n                      children: dayjs(model_card?.created_at).format('lll'),\n                    },\n                    {\n                      key: 'last_modified',\n                      label: t('modelStore.LastModified'),\n                      children: dayjs(model_card?.modified_at).format('lll'),\n                    },\n                    {\n                      key: 'min_resource',\n                      label: t('modelStore.MinResource'),\n                      children: (\n                        <Flex gap=\"xs\">\n                          {model_card?.min_resource &&\n                            _.map(\n                              JSON.parse(model_card?.min_resource),\n                              (value, type) => {\n                                return (\n                                  <ResourceNumber\n                                    key={type}\n                                    // @ts-ignore\n                                    type={type}\n                                    value={_.toString(value)}\n                                  />\n                                );\n                              },\n                            )}\n                        </Flex>\n                      ),\n                    },\n                  ]}\n                />\n              </Flex>\n            </Col>\n            {!!model_card?.readme ? (\n              <Col {...colSize}>\n                <Card\n                  size=\"small\"\n                  title={\n                    <Flex direction=\"row\" gap={'xs'}>\n                      <FileOutlined />\n                      README.md\n                    </Flex>\n                  }\n                  styles={{\n                    body: {\n                      padding: token.paddingLG,\n                      overflow: 'auto',\n                      height: screen.lg ? 'calc(100vh - 287px)' : undefined,\n                      minHeight: 200,\n                    },\n                  }}\n                >\n                  <Markdown>{model_card?.readme || ''}</Markdown>\n                </Card>\n              </Col>\n            ) : null}\n          </Row>\n        </>\n      )}\n      <Suspense>\n        <ModelCloneModal\n          vfolderNode={model_card?.vfolder_node || null}\n          deprecatedVFolderInfo={{\n            id: model_card?.vfolder?.id || '',\n            host: model_card?.vfolder?.host || '',\n            name: model_card?.vfolder?.name || '',\n          }}\n          title={t('modelStore.CloneAsFolder')}\n          open={visibleCloneModal}\n          onOk={() => {\n            setVisibleCloneModal(false);\n          }}\n          onCancel={() => {\n            setVisibleCloneModal(false);\n          }}\n        />\n      </Suspense>\n    </BAIModal>\n  );\n};\n\nexport default ModelCardModal;\n","import Flex from '../components/Flex';\nimport ModelCardModal from '../components/ModelCardModal';\nimport TextHighlighter from '../components/TextHighlighter';\nimport { ModelCardModalFragment$key } from '../components/__generated__/ModelCardModalFragment.graphql';\nimport { useUpdatableState } from '../hooks';\nimport { ModelStoreListPageQuery } from './__generated__/ModelStoreListPageQuery.graphql';\nimport { ReloadOutlined, SearchOutlined } from '@ant-design/icons';\nimport {\n  Alert,\n  Button,\n  Card,\n  Input,\n  List,\n  Select,\n  Tag,\n  theme,\n  Typography,\n} from 'antd';\nimport { createStyles } from 'antd-style';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport { FolderX } from 'lucide-react';\nimport React, { useMemo, useState, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\n\nconst useStyles = createStyles(({ css, token }) => {\n  return {\n    cardList: css`\n      .ant-col {\n        height: calc(100% - ${token.marginMD}px);\n      }\n    `,\n  };\n});\n\nconst ModelStoreListPage: React.FC = () => {\n  const [fetchKey, updateFetchKey] = useUpdatableState('first');\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const [search, setSearch] = useState<string>();\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [selectedTasks, setSelectedTasks] = useState<string[]>([]);\n  const [selectedLabels, setSelectedLabels] = useState<string[]>([]);\n\n  const { styles } = useStyles();\n\n  const [currentModelInfo, setCurrentModelInfo] =\n    useState<ModelCardModalFragment$key | null>();\n\n  const [isPendingRefetching, startRefetchingTransition] = useTransition();\n\n  const { model_cards } = useLazyLoadQuery<ModelStoreListPageQuery>(\n    graphql`\n      query ModelStoreListPageQuery($filter: String) {\n        # TODO: Implement pagination for model_cards\n        model_cards(filter: $filter, first: 200) {\n          edges {\n            cursor\n            node {\n              id\n              row_id @since(version: \"24.03.7\")\n              name\n              author\n              title\n              description\n              task\n              category\n              label\n              license\n              min_resource\n              error_msg @since(version: \"24.03.7\")\n              ...ModelCardModalFragment\n            }\n          }\n          count\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n        }\n      }\n    `,\n    {\n      filter: undefined,\n    },\n    {\n      fetchPolicy: 'network-only',\n      fetchKey,\n    },\n  );\n\n  // const filterInfo = _.map\n\n  const fieldsValues = useMemo(() => {\n    const result: {\n      task: string[];\n      category: string[];\n      label: string[];\n    } = { task: [], category: [], label: [] };\n    const fields = ['task', 'category', 'label'] as const;\n    // Initialize result object with empty arrays for each field\n    fields.forEach((field) => (result[field] = []));\n\n    // Traverse the JSON object\n    model_cards?.edges.forEach((edge) => {\n      fields.forEach((field) => {\n        // Check if the field exists in the node\n        if (edge?.node?.[field]) {\n          _.map(_.castArray(edge.node[field]), (newValue) => {\n            if (_.isString(newValue) && !result[field].includes(newValue)) {\n              result[field].push(newValue);\n            }\n          });\n        }\n      });\n    });\n    return result;\n  }, [model_cards?.edges]);\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"stretch\"\n      justify=\"center\"\n      gap=\"lg\"\n      style={{ padding: token.paddingLG }}\n    >\n      <Flex\n        direction=\"column\"\n        align=\"stretch\"\n        className=\"filterWrap\"\n        gap={'xs'}\n      >\n        <Flex direction=\"row\" gap={'md'}>\n          <Input\n            prefix={<SearchOutlined />}\n            placeholder={t('modelStore.SearchModels')}\n            allowClear\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n            autoComplete=\"off\"\n          />\n          <Button\n            icon={<ReloadOutlined />}\n            onClick={() => {\n              startRefetchingTransition(() => {\n                updateFetchKey();\n              });\n            }}\n            loading={isPendingRefetching}\n          />\n        </Flex>\n        <Flex direction=\"row\" gap={'md'} wrap=\"wrap\">\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Category')}\n            options={_.map(fieldsValues.category, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedCategories}\n            onChange={(value) => {\n              setSelectedCategories(value as string[]);\n            }}\n            allowClear\n          />\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Task')}\n            options={_.map(fieldsValues.task, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedTasks}\n            onChange={(value) => {\n              setSelectedTasks(value as string[]);\n            }}\n            allowClear\n          />\n          <Select\n            style={{ minWidth: 150 }}\n            placeholder={t('modelStore.Label')}\n            options={_.map(fieldsValues.label, (t) => ({\n              label: t,\n              value: t,\n            }))}\n            mode={'multiple'}\n            popupMatchSelectWidth={false}\n            value={selectedLabels}\n            onChange={(value) => {\n              setSelectedLabels(value as string[]);\n            }}\n            allowClear\n          />\n        </Flex>\n      </Flex>\n      <List\n        className={styles.cardList}\n        grid={{ gutter: 16, xs: 1, sm: 2, md: 2, lg: 3, xl: 4, xxl: 5 }}\n        dataSource={model_cards?.edges\n          ?.map((edge) => edge?.node)\n          .filter((info) => {\n            let passSearchFilter = true;\n            if (search) {\n              const searchLower = search.toLowerCase();\n              passSearchFilter =\n                info?.description?.toLowerCase().includes(searchLower) ||\n                info?.title?.toLowerCase().includes(searchLower) ||\n                info?.task?.toLowerCase().includes(searchLower) ||\n                info?.category?.toLowerCase().includes(searchLower) ||\n                info?.label?.some((label) =>\n                  label?.toLowerCase().includes(searchLower),\n                ) ||\n                false;\n            }\n\n            return (\n              (_.isEmpty(selectedCategories) ||\n                _.includes(selectedCategories, info?.category)) &&\n              (_.isEmpty(selectedLabels) ||\n                _.intersection(selectedLabels, info?.label).length > 0) &&\n              (_.isEmpty(selectedTasks) ||\n                _.includes(selectedTasks, info?.task)) &&\n              passSearchFilter\n            );\n          })}\n        renderItem={(item) => (\n          <List.Item\n            onClick={() => {\n              setCurrentModelInfo(item);\n            }}\n            style={{\n              height: '100%',\n            }}\n          >\n            <Card\n              hoverable\n              title={\n                item?.title ? (\n                  <TextHighlighter keyword={search}>\n                    {item?.title}\n                  </TextHighlighter>\n                ) : (\n                  <Typography.Text type=\"secondary\">\n                    <FolderX\n                      style={{\n                        marginLeft: token.marginXXS,\n                        marginRight: token.marginXXS,\n                        fontSize: token.fontSize,\n                      }}\n                    />\n                    {item?.name}\n                  </Typography.Text>\n                )\n              }\n              style={{\n                height: '100%',\n              }}\n              size=\"small\"\n            >\n              <Flex direction=\"row\" wrap=\"wrap\" gap={'xs'}>\n                {item?.description && (\n                  <Typography.Paragraph\n                    ellipsis={{ rows: 3, expandable: false }}\n                  >\n                    <TextHighlighter keyword={search}>\n                      {item?.description}\n                    </TextHighlighter>\n                  </Typography.Paragraph>\n                )}\n                {item?.category && (\n                  <Tag bordered={false}>\n                    <TextHighlighter keyword={search}>\n                      {item?.category}\n                    </TextHighlighter>\n                  </Tag>\n                )}\n                {item?.task && (\n                  <Tag bordered={false} color=\"success\">\n                    <TextHighlighter keyword={search}>\n                      {item?.task}\n                    </TextHighlighter>\n                  </Tag>\n                )}\n                {item?.label &&\n                  _.map(item?.label, (label) => (\n                    <Tag key={label} bordered={false} color=\"blue\">\n                      <TextHighlighter keyword={search}>\n                        {label}\n                      </TextHighlighter>\n                    </Tag>\n                  ))}\n                {item?.error_msg && (\n                  <Alert\n                    style={{ width: '100%' }}\n                    message={\n                      <Typography.Paragraph\n                        ellipsis={{ rows: 6 }}\n                        style={{ marginBottom: 0 }}\n                      >\n                        {item.error_msg}\n                      </Typography.Paragraph>\n                    }\n                    type=\"error\"\n                    showIcon\n                  />\n                )}\n              </Flex>\n            </Card>\n          </List.Item>\n        )}\n      />\n      <ModelCardModal\n        modelCardModalFrgmt={currentModelInfo}\n        open={!!currentModelInfo}\n        onRequestClose={() => {\n          setCurrentModelInfo(null);\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport default ModelStoreListPage;\n","/**\n * @generated SignedSource<<923b96171bedcd1dd859619d52302d16>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModelStoreListPageQuery$variables = {\n  filter?: string | null | undefined;\n};\nexport type ModelStoreListPageQuery$data = {\n  readonly model_cards: {\n    readonly count: number | null | undefined;\n    readonly edges: ReadonlyArray<{\n      readonly cursor: string;\n      readonly node: {\n        readonly author: string | null | undefined;\n        readonly category: string | null | undefined;\n        readonly description: string | null | undefined;\n        readonly error_msg: string | null | undefined;\n        readonly id: string;\n        readonly label: ReadonlyArray<string | null | undefined> | null | undefined;\n        readonly license: string | null | undefined;\n        readonly min_resource: any | null | undefined;\n        readonly name: string | null | undefined;\n        readonly row_id: string | null | undefined;\n        readonly task: string | null | undefined;\n        readonly title: string | null | undefined;\n        readonly \" $fragmentSpreads\": FragmentRefs<\"ModelCardModalFragment\">;\n      } | null | undefined;\n    } | null | undefined>;\n    readonly pageInfo: {\n      readonly hasNextPage: boolean;\n      readonly hasPreviousPage: boolean;\n    };\n  } | null | undefined;\n};\nexport type ModelStoreListPageQuery = {\n  response: ModelStoreListPageQuery$data;\n  variables: ModelStoreListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"filter\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 200\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"cursor\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"row_id\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"author\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"title\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"task\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"category\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"label\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"license\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"min_resource\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"error_msg\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"count\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"PageInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"pageInfo\",\n  \"plural\": false,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hasNextPage\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"hasPreviousPage\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"host\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"ModelStoreListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ModelCardConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"model_cards\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ModelCardEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ModelCard\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  (v7/*: any*/),\n                  (v8/*: any*/),\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  (v12/*: any*/),\n                  (v13/*: any*/),\n                  (v14/*: any*/),\n                  {\n                    \"args\": null,\n                    \"kind\": \"FragmentSpread\",\n                    \"name\": \"ModelCardModalFragment\"\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v15/*: any*/),\n          (v16/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"ModelStoreListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"ModelCardConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"model_cards\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"ModelCardEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              (v2/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"ModelCard\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v5/*: any*/),\n                  (v6/*: any*/),\n                  (v7/*: any*/),\n                  (v8/*: any*/),\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  (v12/*: any*/),\n                  (v13/*: any*/),\n                  (v14/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"version\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"created_at\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"modified_at\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"architecture\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"framework\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"readme\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"VirtualFolder\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"vfolder\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"kind\": \"ScalarField\",\n                        \"name\": \"cloneable\",\n                        \"storageKey\": null\n                      },\n                      (v3/*: any*/),\n                      (v5/*: any*/),\n                      (v17/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"VirtualFolderNode\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"vfolder_node\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v5/*: any*/),\n                      (v17/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v15/*: any*/),\n          (v16/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"f32e3c3523f7c030fc079da7db1677a9\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"ModelStoreListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query ModelStoreListPageQuery(\\n  $filter: String\\n) {\\n  model_cards(filter: $filter, first: 200) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        row_id @since(version: \\\"24.03.7\\\")\\n        name\\n        author\\n        title\\n        description\\n        task\\n        category\\n        label\\n        license\\n        min_resource\\n        error_msg @since(version: \\\"24.03.7\\\")\\n        ...ModelCardModalFragment\\n      }\\n    }\\n    count\\n    pageInfo {\\n      hasNextPage\\n      hasPreviousPage\\n    }\\n  }\\n}\\n\\nfragment ModelCardModalFragment on ModelCard {\\n  id\\n  row_id @since(version: \\\"24.03.7\\\")\\n  name\\n  author\\n  title\\n  version\\n  created_at\\n  modified_at\\n  description\\n  task\\n  category\\n  architecture\\n  framework\\n  label\\n  license\\n  readme\\n  min_resource\\n  vfolder {\\n    cloneable\\n    id\\n    name\\n    host\\n  }\\n  vfolder_node @since(version: \\\"24.09.*\\\") {\\n    ...ModelCloneModalVFolderFragment\\n    id\\n  }\\n  error_msg @since(version: \\\"24.03.7\\\")\\n}\\n\\nfragment ModelCloneModalVFolderFragment on VirtualFolderNode {\\n  id\\n  name\\n  host\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"fa480b58b4b1de1541e2abf3af73b1ae\";\n\nexport default node;\n"],"names":["ACCELERATOR_UNIT_MAP","MWCIconWrap","_ref2","size","children","_jsx","style","width","height","ResourceTypeIcon","_ref3","_resourceTypeIconSrcM","_resourceTypeIconSrcM2","_resourceTypeIconSrcM3","type","showIcon","showUnit","showTooltip","props","t","useTranslation","resourceTypeIconSrcMap","cpu","mem","content","alignSelf","src","alt","Flex","Tooltip","title","pointerEvents","_ref","_resourceSlotsDetails","_iSizeToSize","_resourceSlotsDetails2","_resourceSlotsDetails3","_iSizeToSize2","value","amount","extra","opts","hideTooltip","token","theme","useToken","currentGroup","useCurrentResourceGroupValue","resourceSlotsDetails","useResourceSlotsDetails","undefined","_jsxs","direction","gap","Typography","Text","number_format","binary","Number","iSizeToSize","numberFixed","toString","round_length","parseFloat","toFixed","display_unit","shmem","fontSize","fontSizeSM","autoSelectType","showUsageStatus","onChange","defaultValue","searchValue","onSearch","partialSelectProps","shadowRoot","useShadowRoot","baiClient","useSuspendedBackendaiClient","data","vhostInfo","isLoading","isLoadingVhostInfo","useSuspenseTanQuery","queryKey","queryFn","vfolder","list_hosts","controllableState","setControllableState","useControllableState","controllableSearchValue","setControllableSearchValue","useEffect","_vhostInfo$default","_vhostInfo$volume_inf2","nextHost","default","allowed","_$minBy","_","host","_vhostInfo$volume_inf","volume_info","id","Select","filterOption","placeholder","loading","minWidth","_vhostInfo$volume_inf3","optionLabelProp","options","_vhostInfo$volume_inf4","_vhostInfo$volume_inf5","_vhostInfo$volume_inf6","_vhostInfo$volume_inf7","_vhostInfo$volume_inf8","_vhostInfo$volume_inf9","_vhostInfo$volume_inf10","_vhostInfo$volume_inf11","label","align","usage","percentage","getPopupContainer","Badge","color","usageIndicatorColor","TextHighlighter","keyword","node","v0","v1","hash","errorMessageTable","regexTable","usePainKiller","relieve","msg","globalThis","backendaiclient","backendaiwebui","debug","hasOwnProperty","call","regex","Object","keys","RegExp","test","vfolderNode","deprecatedVFolderInfo","useFragment","_ModelCloneModalVFolderFragment","require","formRef","useRef","painKiller","upsertNotification","useSetBAINotification","extraNameError","setExtraNameError","useState","mutationToClone","useTanMutation","mutationFn","input","name","clone","BAIModal","destroyOnClose","okText","confirmLoading","isPending","onOk","e","_formRef$current","current","validateFields","then","values","mutate","onSuccess","_props$onOk","key","open","backgroundTask","status","percent","taskId","bgtask_id","statusDescriptions","pending","resolved","rejected","message","target_name","toText","to","onError","error","_error$message","includes","validateStatus","help","messageStr","catch","Alert","Form","ref","layout","requiredMark","initialValues","permission","usage_mode","target_host","scrollToFirstError","Item","required","Input","disabled","rules","pattern","autoComplete","tooltip","StorageSelect","isAPIVersionCompatibleWith","hidden","valuePropName","Switch","checked","_model_card$vfolder","_model_card$vfolder2","_model_card$vfolder3","_model_card$vfolder4","modelCardModalFrgmt","onRequestClose","visibleCloneModal","setVisibleCloneModal","metadata","useBackendAIImageMetaData","screen","Grid","useBreakpoint","model_card","_ModelCardModalFragment","colSize","xs","span","lg","description","readme","length","colorTextSecondary","FolderX","marginRight","marginXXS","centered","onCancel","xxl","footer","Button","onClick","error_msg","wrap","Empty","image","PRESENTED_IMAGE_SIMPLE","_Fragment","marginBottom","marginSM","justify","flex","category","Tag","bordered","task","license","icon","BankOutlined","ghost","Cog","CopyOutlined","cloneable","Row","gutter","marginLG","Col","Title","level","marginTop","Card","whiteSpace","minHeight","maxHeight","overflow","Paragraph","ellipsis","rows","expandable","symbol","expanded","Descriptions","marginMD","column","items","author","version","architecture","framework","v","index","targetImageKey","replace","imageInfo","uniqueKey","dayjs","created_at","format","modified_at","min_resource","JSON","parse","ResourceNumber","FileOutlined","styles","body","padding","paddingLG","Markdown","Suspense","ModelCloneModal","vfolder_node","useStyles","createStyles","css","cardList","ModelStoreListPage","_model_cards$edges","fetchKey","updateFetchKey","useUpdatableState","search","setSearch","selectedCategories","setSelectedCategories","selectedTasks","setSelectedTasks","selectedLabels","setSelectedLabels","currentModelInfo","setCurrentModelInfo","isPendingRefetching","startRefetchingTransition","useTransition","model_cards","useLazyLoadQuery","_ModelStoreListPageQuery","filter","fetchPolicy","fieldsValues","useMemo","result","fields","forEach","field","edges","edge","_edge$node","newValue","push","className","prefix","SearchOutlined","allowClear","target","ReloadOutlined","mode","popupMatchSelectWidth","List","grid","sm","md","xl","dataSource","map","info","passSearchFilter","_info$description","_info$title","_info$task","_info$category","_info$label","searchLower","toLowerCase","some","renderItem","item","hoverable","marginLeft","ModelCardModal","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17"],"sourceRoot":""}