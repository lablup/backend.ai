{"version":3,"file":"static/js/20.9c91ec7d.chunk.js","mappings":"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","sources":["components/TOTPActivateModal.tsx","components/UserSettingModal.tsx","components/__generated__/TOTPActivateModalFragment.graphql.ts","components/__generated__/UserSettingModalMutation.graphql.ts","components/__generated__/UserSettingModalQuery.graphql.ts"],"sourcesContent":["import { useSuspendedBackendaiClient } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport Flex from './Flex';\nimport { TOTPActivateModalFragment$key } from './__generated__/TOTPActivateModalFragment.graphql';\nimport { QRCode, Typography, Input, theme, Form, message, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useFragment } from 'react-relay';\n\ntype TOTPActivateFormInput = {\n  OTP: number;\n};\n\ninterface Props extends BAIModalProps {\n  userFrgmt?: TOTPActivateModalFragment$key | null;\n  onRequestClose: (success?: boolean) => void;\n}\n\nconst TOTPActivateModal: React.FC<Props> = ({\n  userFrgmt = null,\n  onRequestClose,\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [form] = Form.useForm<TOTPActivateFormInput>();\n\n  const user = useFragment(\n    graphql`\n      fragment TOTPActivateModalFragment on User {\n        email\n        totp_activated @skipOnClient(if: $isNotSupportTotp)\n      }\n    `,\n    userFrgmt,\n  );\n\n  const baiClient = useSuspendedBackendaiClient();\n  let initializedTotp = useQuery<{\n    totp_key: string;\n    totp_uri: string;\n  }>({\n    queryKey: ['initialize_totp', baiClient?.email, baiModalProps.open],\n    queryFn: () => {\n      return user?.email === baiClient?.email &&\n        !user?.totp_activated &&\n        baiModalProps.open\n        ? baiClient.initialize_totp()\n        : null;\n    },\n    suspense: false,\n    staleTime: 0,\n    cacheTime: 0,\n  });\n\n  const mutationToActivateTotp = useTanMutation({\n    mutationFn: (values: TOTPActivateFormInput) => {\n      return baiClient.activate_totp(values.OTP);\n    },\n  });\n\n  const _onOk = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        mutationToActivateTotp.mutate(values, {\n          onSuccess: () => {\n            message.success(t('totp.TotpSetupCompleted'));\n            onRequestClose(true);\n          },\n          onError: () => {\n            message.error(t('totp.InvalidTotpCode'));\n          },\n        });\n        new Promise((resolve, reject) => {}).then(() => {\n          onRequestClose(true);\n        });\n      })\n      .catch(() => {});\n  };\n\n  return (\n    <BAIModal\n      title={t('webui.menu.SetupTotp')}\n      maskClosable={false}\n      confirmLoading={mutationToActivateTotp.isLoading}\n      onOk={_onOk}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...baiModalProps}\n    >\n      {initializedTotp.isLoading ? (\n        <Flex justify=\"center\" direction=\"row\">\n          <Spin />\n        </Flex>\n      ) : !initializedTotp.data ? (\n        <Flex justify=\"center\" direction=\"row\">\n          {t('totp.TotpSetupNotAvailable')}\n        </Flex>\n      ) : (\n        <>\n          {t('totp.ScanQRToEnable')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <QRCode value={initializedTotp.data.totp_uri} />\n          </Flex>\n          {t('totp.TypeInAuthKey')}\n          <Flex\n            justify=\"center\"\n            style={{ margin: token.marginSM, gap: token.margin }}\n          >\n            <Typography.Text copyable code>\n              {initializedTotp.data.totp_key}\n            </Typography.Text>\n          </Flex>\n          {t('totp.EnterConfirmationCode')}\n          <Form\n            preserve={false}\n            form={form}\n            validateTrigger={['onChange', 'onBlur']}\n          >\n            <Flex\n              justify=\"center\"\n              style={{ margin: token.marginSM, gap: token.margin }}\n            >\n              <Form.Item\n                name=\"OTP\"\n                rules={[\n                  {\n                    required: true,\n                    message: t('totp.RequireOTP'),\n                  },\n                  {\n                    pattern: /^[0-9]+$/,\n                    message: t('credential.validation.NumbersOnly'),\n                  },\n                ]}\n              >\n                <Input\n                  maxLength={6}\n                  allowClear\n                  placeholder=\"000000\"\n                  style={{ maxWidth: 150 }}\n                />\n              </Form.Item>\n            </Flex>\n          </Form>\n        </>\n      )}\n    </BAIModal>\n  );\n};\n\nexport default TOTPActivateModal;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '../hooks';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport TOTPActivateModal from './TOTPActivateModal';\nimport { UserSettingModalMutation } from './__generated__/UserSettingModalMutation.graphql';\nimport {\n  UserSettingModalQuery,\n  UserSettingModalQuery$data,\n} from './__generated__/UserSettingModalQuery.graphql';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport { useToggle } from 'ahooks';\nimport { Form, Input, Select, Switch, message, Typography, Modal } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React, { useDeferredValue } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useMutation } from 'react-relay';\nimport { useLazyLoadQuery } from 'react-relay';\n\ntype User = UserSettingModalQuery$data['user'];\n\ntype UserStatus = {\n  [key: string]: string;\n};\n\ntype UserRole = {\n  [key: string]: string[];\n};\n\ninterface Props extends BAIModalProps {\n  extraFetchKey?: string;\n}\n\nconst UserSettingModal: React.FC<Props> = ({\n  extraFetchKey = '',\n  ...baiModalProps\n}) => {\n  const { t } = useTranslation();\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    userEmail: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      userEmail: '',\n    };\n  }\n  const { open, userEmail } = parsedValue;\n\n  const [modal, contextHolder] = Modal.useModal();\n\n  const [form] = Form.useForm<User>();\n\n  const userStatus: UserStatus = {\n    active: 'Active',\n    inactive: 'Inactive',\n    'before-verification': 'Before Verification',\n    deleted: 'Deleted',\n  };\n\n  const permissionRangeOfRoleChanges: UserRole = {\n    superadmin: ['superadmin', 'admin', 'user', 'monitor'],\n    admin: ['admin', 'user', 'monitor'],\n  };\n\n  const [fetchKey, updateFetchKey] = useUpdatableState('initial-fetch');\n  const deferredMergedFetchKey = useDeferredValue(fetchKey + extraFetchKey);\n\n  const baiClient = useSuspendedBackendaiClient();\n  const sudoSessionEnabledSupported = baiClient?.supports(\n    'sudo-session-enabled',\n  );\n  let totpSupported = false;\n  let {\n    data: isManagerSupportingTOTP,\n    isLoading: isLoadingManagerSupportingTOTP,\n  } = useQuery(\n    'isManagerSupportingTOTP',\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    },\n  );\n  totpSupported = baiClient?.supports('2FA') && isManagerSupportingTOTP;\n\n  const { user, loggedInUser } = useLazyLoadQuery<UserSettingModalQuery>(\n    graphql`\n      query UserSettingModalQuery(\n        $email: String\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n        $loggedInUserEmail: String\n      ) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n          # support from 23.09.0b1\n          # https://github.com/lablup/backend.ai/pull/1530\n          sudo_session_enabled\n            @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n          totp_activated @skipOnClient(if: $isNotSupportTotp)\n          ...TOTPActivateModalFragment\n        }\n        loggedInUser: user(email: $loggedInUserEmail) {\n          role\n        }\n      }\n    `,\n    {\n      email: userEmail,\n      isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n      isNotSupportTotp: !totpSupported,\n      loggedInUserEmail: baiClient?.email ?? '',\n    },\n    {\n      fetchKey: deferredMergedFetchKey,\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const [commitModifyUserSetting, isInFlightCommitModifyUserSetting] =\n    useMutation<UserSettingModalMutation>(graphql`\n      mutation UserSettingModalMutation(\n        $email: String!\n        $props: ModifyUserInput!\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isNotSupportTotp: Boolean!\n      ) {\n        modify_user(email: $email, props: $props) {\n          ok\n          msg\n          user {\n            id\n            email\n            username\n            need_password_change\n            full_name\n            description\n            status\n            domain_name\n            role\n            groups {\n              id\n              name\n            }\n            # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n            # support from 23.09.0b1\n            # https://github.com/lablup/backend.ai/pull/1530\n            sudo_session_enabled\n              @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n            totp_activated @skipOnClient(if: $isNotSupportTotp)\n            ...TOTPActivateModalFragment\n          }\n        }\n      }\n    `);\n\n  const mutationToRemoveTotp = useTanMutation({\n    mutationFn: (email: string) => {\n      return baiClient.remove_totp(email);\n    },\n  });\n\n  const [isOpenTOTPActivateModal, { toggle: toggleTOTPActivateModal }] =\n    useToggle(false);\n\n  const _onOk = () => {\n    form.validateFields().then(async (values) => {\n      let input = { ...values };\n      delete input.email;\n      input = _.omit(input, ['password_confirm']);\n      input = _.omitBy(input, (item) => item === undefined || item === '');\n      if (!sudoSessionEnabledSupported) {\n        delete input?.sudo_session_enabled;\n      }\n      // TOTP setting\n      if (!totpSupported) {\n        delete input?.totp_activated;\n      }\n\n      commitModifyUserSetting({\n        variables: {\n          email: values?.email || '',\n          props: input,\n          isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n          isNotSupportTotp: !totpSupported,\n        },\n        onCompleted(res) {\n          if (res?.modify_user?.ok) {\n            message.success(t('environment.SuccessfullyModified'));\n          } else {\n            message.error(res?.modify_user?.msg);\n          }\n          dispatchEvent('ok', null);\n        },\n        onError(err) {\n          message.error(err?.message);\n        },\n      });\n    });\n  };\n\n  return (\n    <BAIModal\n      open={open}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      centered\n      title={t('credential.ModifyUserDetail')}\n      destroyOnClose={true}\n      onOk={_onOk}\n      confirmLoading={isInFlightCommitModifyUserSetting}\n      {...baiModalProps}\n    >\n      <Form\n        preserve={false}\n        form={form}\n        labelCol={{ span: 10 }}\n        wrapperCol={{ span: 20 }}\n        validateTrigger={['onChange', 'onBlur']}\n        style={{ marginBottom: 40, marginTop: 20 }}\n        initialValues={{ ...user }}\n      >\n        <Form.Item name=\"email\" label={t('credential.UserID')}>\n          <Input disabled />\n        </Form.Item>\n        <Form.Item name=\"username\" label={t('credential.UserName')}>\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item name=\"full_name\" label={t('credential.FullName')}>\n          <Input placeholder={t('maxLength.64chars')} />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={t('general.NewPassword')}\n          rules={[\n            {\n              pattern: /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[_\\W]).{8,}$/,\n              message: t('webui.menu.InvalidPasswordMessage'),\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          name=\"password_confirm\"\n          dependencies={['password']}\n          label={t('webui.menu.NewPasswordAgain')}\n          rules={[\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value && !!getFieldValue('password')) {\n                  return Promise.reject(\n                    new Error(t('webui.menu.PleaseConfirmYourPassword')),\n                  );\n                }\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error(t('environment.PasswordsDoNotMatch')),\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item name=\"description\" label={t('credential.Description')}>\n          <Input.TextArea placeholder={t('maxLength.500chars')} />\n        </Form.Item>\n        <Form.Item name=\"status\" label={t('credential.UserStatus')}>\n          <Select\n            options={_.map(userStatus, (value, key) => {\n              return {\n                value: key,\n                label: value,\n              };\n            })}\n          />\n        </Form.Item>\n        {!!user?.role &&\n          !!loggedInUser?.role &&\n          loggedInUser.role in permissionRangeOfRoleChanges && (\n            <Form.Item name=\"role\" label={t('credential.Role')}>\n              <Select\n                options={_.map(\n                  permissionRangeOfRoleChanges[loggedInUser.role],\n                  (item) => {\n                    return {\n                      value: item,\n                      label: item,\n                    };\n                  },\n                )}\n              />\n            </Form.Item>\n          )}\n        <Form.Item\n          name=\"need_password_change\"\n          label={t('credential.DescRequirePasswordChange')}\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n        {!!sudoSessionEnabledSupported && (\n          <Form.Item\n            name=\"sudo_session_enabled\"\n            label={t('credential.EnableSudoSession')}\n            valuePropName=\"checked\"\n          >\n            <Switch />\n          </Form.Item>\n        )}\n        {!!totpSupported && (\n          <Form.Item\n            name=\"totp_activated\"\n            label={t('webui.menu.TotpActivated')}\n            valuePropName=\"checked\"\n            extra={\n              user?.email !== baiClient?.email && (\n                <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                  {t('credential.AdminCanOnlyRemoveTotp')}\n                </Typography.Text>\n              )\n            }\n          >\n            <Switch\n              loading={\n                isLoadingManagerSupportingTOTP || mutationToRemoveTotp.isLoading\n              }\n              disabled={\n                user?.email !== baiClient?.email && !user?.totp_activated\n              }\n              onChange={(checked: boolean) => {\n                if (checked) {\n                  toggleTOTPActivateModal();\n                } else {\n                  if (user?.totp_activated) {\n                    form.setFieldValue('totp_activated', true);\n                    modal.confirm({\n                      title: t('totp.TurnOffTotp'),\n                      icon: <ExclamationCircleFilled />,\n                      content: t('totp.ConfirmTotpRemovalBody'),\n                      okText: t('button.Yes'),\n                      okType: 'danger',\n                      cancelText: t('button.No'),\n                      onOk() {\n                        mutationToRemoveTotp.mutate(user?.email || '', {\n                          onSuccess: () => {\n                            message.success(t('totp.RemoveTotpSetupCompleted'));\n                            updateFetchKey();\n                            form.setFieldValue('totp_activated', false);\n                          },\n                          onError: (err) => {\n                            console.log(err);\n                          },\n                        });\n                      },\n                      onCancel() {\n                        form.setFieldValue('totp_activated', true);\n                      },\n                    });\n                  }\n                }\n              }}\n            />\n          </Form.Item>\n        )}\n      </Form>\n      {!!totpSupported && (\n        <TOTPActivateModal\n          userFrgmt={user}\n          open={isOpenTOTPActivateModal}\n          onRequestClose={(success) => {\n            if (success) {\n              updateFetchKey();\n            } else {\n              form.setFieldValue('totp_activated', false);\n            }\n            toggleTOTPActivateModal();\n          }}\n        />\n      )}\n      {contextHolder}\n    </BAIModal>\n  );\n};\n\nexport default UserSettingModal;\n","/**\n * @generated SignedSource<<84ef114f996ea8a63ee4526fc5d27953>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type TOTPActivateModalFragment$data = {\n  readonly email: string | null;\n  readonly totp_activated: boolean | null;\n  readonly \" $fragmentType\": \"TOTPActivateModalFragment\";\n};\nexport type TOTPActivateModalFragment$key = {\n  readonly \" $data\"?: TOTPActivateModalFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [\n    {\n      \"kind\": \"RootArgument\",\n      \"name\": \"isNotSupportTotp\"\n    }\n  ],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"TOTPActivateModalFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"User\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"f5da6b3094f7d70bef9373d9c907955c\";\n\nexport default node;\n","/**\n * @generated SignedSource<<ba3fe6e97b7deab67fe3c179725cabda>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Mutation } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type ModifyUserInput = {\n  allowed_client_ip?: ReadonlyArray<string | null> | null;\n  description?: string | null;\n  domain_name?: string | null;\n  full_name?: string | null;\n  group_ids?: ReadonlyArray<string | null> | null;\n  is_active?: boolean | null;\n  main_access_key?: string | null;\n  need_password_change?: boolean | null;\n  password?: string | null;\n  resource_policy?: string | null;\n  role?: string | null;\n  status?: string | null;\n  sudo_session_enabled?: boolean | null;\n  totp_activated?: boolean | null;\n  username?: string | null;\n};\nexport type UserSettingModalMutation$variables = {\n  email: string;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n  props: ModifyUserInput;\n};\nexport type UserSettingModalMutation$data = {\n  readonly modify_user: {\n    readonly msg: string | null;\n    readonly ok: boolean | null;\n    readonly user: {\n      readonly description: string | null;\n      readonly domain_name: string | null;\n      readonly email: string | null;\n      readonly full_name: string | null;\n      readonly groups: ReadonlyArray<{\n        readonly id: string | null;\n        readonly name: string | null;\n      } | null> | null;\n      readonly id: string | null;\n      readonly need_password_change: boolean | null;\n      readonly role: string | null;\n      readonly status: string | null;\n      readonly sudo_session_enabled: boolean | null;\n      readonly totp_activated: boolean | null;\n      readonly username: string | null;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n    } | null;\n  } | null;\n};\nexport type UserSettingModalMutation = {\n  response: UserSettingModalMutation$data;\n  variables: UserSettingModalMutation$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"email\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportSudoSessionEnabled\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"isNotSupportTotp\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"props\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"props\",\n    \"variableName\": \"props\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ok\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"msg\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v7/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"TOTPActivateModalFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutations\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v3/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"ModifyUser\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"modify_user\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          (v6/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              (v18/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"9b1a3e23ee391f117fee34e25b6fbf05\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation UserSettingModalMutation(\\n  $email: String!\\n  $props: ModifyUserInput!\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n) {\\n  modify_user(email: $email, props: $props) {\\n    ok\\n    msg\\n    user {\\n      id\\n      email\\n      username\\n      need_password_change\\n      full_name\\n      description\\n      status\\n      domain_name\\n      role\\n      groups {\\n        id\\n        name\\n      }\\n      sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n      totp_activated @skipOnClient(if: $isNotSupportTotp)\\n      ...TOTPActivateModalFragment\\n    }\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"b7bb2083b30dea10ff3f89197e67e2cb\";\n\nexport default node;\n","/**\n * @generated SignedSource<<d08c3dc9daaa457025b029cf4ba48420>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserSettingModalQuery$variables = {\n  email?: string | null;\n  isNotSupportSudoSessionEnabled: boolean;\n  isNotSupportTotp: boolean;\n  loggedInUserEmail?: string | null;\n};\nexport type UserSettingModalQuery$data = {\n  readonly loggedInUser: {\n    readonly role: string | null;\n  } | null;\n  readonly user: {\n    readonly description: string | null;\n    readonly domain_name: string | null;\n    readonly email: string | null;\n    readonly full_name: string | null;\n    readonly groups: ReadonlyArray<{\n      readonly id: string | null;\n      readonly name: string | null;\n    } | null> | null;\n    readonly need_password_change: boolean | null;\n    readonly role: string | null;\n    readonly status: string | null;\n    readonly sudo_session_enabled: boolean | null;\n    readonly totp_activated: boolean | null;\n    readonly username: string | null;\n    readonly \" $fragmentSpreads\": FragmentRefs<\"TOTPActivateModalFragment\">;\n  } | null;\n};\nexport type UserSettingModalQuery = {\n  response: UserSettingModalQuery$data;\n  variables: UserSettingModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportSudoSessionEnabled\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportTotp\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"loggedInUserEmail\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"totp_activated\",\n  \"storageKey\": null\n},\nv14 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"loggedInUserEmail\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          {\n            \"args\": null,\n            \"kind\": \"FragmentSpread\",\n            \"name\": \"TOTPActivateModalFragment\"\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"loggedInUser\",\n        \"args\": (v14/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v9/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserSettingModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": \"loggedInUser\",\n        \"args\": (v14/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v9/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"55fb94209e66cec0a1a802ff12b18c64\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserSettingModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserSettingModalQuery(\\n  $email: String\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isNotSupportTotp: Boolean!\\n  $loggedInUserEmail: String\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n    totp_activated @skipOnClient(if: $isNotSupportTotp)\\n    ...TOTPActivateModalFragment\\n    id\\n  }\\n  loggedInUser: user(email: $loggedInUserEmail) {\\n    role\\n    id\\n  }\\n}\\n\\nfragment TOTPActivateModalFragment on User {\\n  email\\n  totp_activated @skipOnClient(if: $isNotSupportTotp)\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"139401e06fdc036b1235475a82fd4397\";\n\nexport default node;\n"],"names":["_ref","_ref$userFrgmt","userFrgmt","onRequestClose","baiModalProps","_objectWithoutProperties","_excluded","t","useTranslation","token","theme","useToken","_Form$useForm","Form","useForm","form","_slicedToArray","user","useFragment","_TOTPActivateModalFragment","require","baiClient","useSuspendedBackendaiClient","initializedTotp","useQuery","queryKey","email","open","queryFn","totp_activated","initialize_totp","suspense","staleTime","cacheTime","mutationToActivateTotp","useTanMutation","mutationFn","values","activate_totp","OTP","_jsx","BAIModal","_objectSpread","title","maskClosable","confirmLoading","isLoading","onOk","validateFields","then","mutate","onSuccess","message","success","onError","error","Promise","resolve","reject","catch","onCancel","children","Flex","justify","direction","Spin","data","_jsxs","_Fragment","style","margin","marginSM","gap","QRCode","value","totp_uri","Typography","Text","copyable","code","totp_key","preserve","validateTrigger","Item","name","rules","required","pattern","Input","maxLength","allowClear","placeholder","maxWidth","_baiClient$email","parsedValue","_ref$extraFetchKey","extraFetchKey","_useWebComponentInfo","useWebComponentInfo","dispatchEvent","JSON","parse","userEmail","totpSupported","_parsedValue","_Modal$useModal","Modal","useModal","_Modal$useModal2","modal","contextHolder","permissionRangeOfRoleChanges","superadmin","admin","_useUpdatableState","useUpdatableState","_useUpdatableState2","fetchKey","updateFetchKey","deferredMergedFetchKey","useDeferredValue","sudoSessionEnabledSupported","supports","_useQuery","isManagerSupportingTOTP","isLoadingManagerSupportingTOTP","_useLazyLoadQuery","useLazyLoadQuery","_UserSettingModalQuery","isNotSupportSudoSessionEnabled","isNotSupportTotp","loggedInUserEmail","fetchPolicy","loggedInUser","_useMutation","useMutation","_UserSettingModalMutation","_useMutation2","commitModifyUserSetting","isInFlightCommitModifyUserSetting","mutationToRemoveTotp","remove_totp","_useToggle","useToggle","_useToggle2","isOpenTOTPActivateModal","toggleTOTPActivateModal","toggle","centered","destroyOnClose","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","input","_input","_input2","wrap","_context","prev","next","_","item","undefined","sudo_session_enabled","variables","props","onCompleted","res","_res$modify_user","_res$modify_user2","modify_user","ok","msg","err","stop","_x","apply","arguments","labelCol","span","wrapperCol","marginBottom","marginTop","initialValues","label","disabled","Password","dependencies","_ref3","getFieldValue","validator","Error","TextArea","Select","options","active","inactive","deleted","key","role","valuePropName","Switch","extra","type","fontSize","loading","onChange","checked","setFieldValue","confirm","icon","ExclamationCircleFilled","content","okText","okType","cancelText","console","log","TOTPActivateModal","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","hash"],"sourceRoot":""}