{"version":3,"file":"static/js/5639.77ef97e8.chunk.js","mappings":"qSAaA,MAcMA,EAAWA,KAAO,IAADC,EAAAC,GACrBC,EAAAA,EAAAA,MACA,MAAOC,IAAYC,EAAAA,EAAAA,OACb,SAAEC,EAAQ,OAAEC,IAAWC,EAAAA,EAAAA,OACtBC,IAAYC,EAAAA,EAAAA,eAAc,WAAYC,EAAAA,cACtCC,IAAQF,EAAAA,EAAAA,eAAc,OAAQC,EAAAA,cAC/B,EAAEE,IAAMC,EAAAA,EAAAA,MAEd,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,UAAU,SACVC,MAAM,SACNC,QAAQ,SACRC,MAAO,CAAEC,OAAQ,SAAUC,UAE3BP,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACC,MAAOX,EAAE,kDAAkDS,UAC/DG,EAAAA,EAAAA,MAACT,EAAAA,EAAI,CAACC,UAAU,SAASS,IAAK,KAAMR,MAAM,UAASI,SAAA,CAChDT,EAAE,uCAAwC,CACzCc,SAAUvB,EAASuB,SACnBC,MAAOxB,EAASwB,SAElBb,EAAAA,EAAAA,KAACc,EAAAA,EAAY,CACXC,OAAQ,EACRC,UAAQ,EACRC,MAAO,CACL,CACEC,MAAOpB,EAAE,gCACTS,SAAUV,GAWZ,CACEqB,MAAO,MACPX,SAAUb,EAAW,IAAIyB,IAAIzB,GAAU0B,OAAS,SAItDV,EAAAA,EAAAA,MAACT,EAAAA,EAAI,CACHC,UAAU,MACVE,QAAQ,UACRC,MAAO,CAAEgB,UAAW,WAAYd,SAAA,CAIpB,OAAVe,iBAAU,IAAVA,YAA2B,QAAjBpC,EAAVoC,WAAYC,uBAAe,IAAArC,GAAS,QAATC,EAA3BD,EAA6BsC,eAAO,IAAArC,GAApCA,EACIsC,qCACFzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CACLC,KAAK,QACLC,QAASA,KACP,MAAMC,EAAqB,IAAIC,YAC7B,oBACA,CACEC,OAAQ,CACNC,YAAa,GAAGzC,IAAWC,OAIjCyC,SAASC,cAAcL,EAAM,EAC7BtB,SAEDT,EAAE,yCAGLE,EAAAA,EAAAA,KAAA,WAGJA,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CACLC,KAAK,QACLQ,KAAK,UACLP,QAASA,KAEPQ,OAAOC,SAASC,KAAO5C,GAAY,EAAE,EACrCa,SAEDT,EAAE,0BAKN,EAIX,EAxG6ByC,KAEzB7B,EAAAA,EAAAA,MAAA8B,EAAAA,SAAA,CAAAjC,SAAA,EACEP,EAAAA,EAAAA,KAACyC,EAAAA,GAAiB,KAClBzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAwB,KAEzB1C,EAAAA,EAAAA,KAAA,oBAAkB2C,GAAG,iBACrB3C,EAAAA,EAAAA,KAAC4C,EAAAA,SAAQ,CAAArC,UACPP,EAAAA,EAAAA,KAACf,EAAQ,Q","sources":["pages/InteractiveLoginPage.tsx"],"sourcesContent":["import Flex from '../components/Flex';\nimport {\n  CSSTokenVariables,\n  NotificationForAnonymous,\n} from '../components/MainLayout/MainLayout';\nimport { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { Button, Card, Descriptions } from 'antd';\nimport { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { StringParam, useQueryParam } from 'use-query-params';\n\nconst InteractiveLoginPage = () => {\n  return (\n    <>\n      <CSSTokenVariables />\n      <NotificationForAnonymous />\n      {/* @ts-ignore */}\n      <backend-ai-webui id=\"webui-shell\" />\n      <Suspense>\n        <Children />\n      </Suspense>\n    </>\n  );\n};\n\nconst Children = () => {\n  useSuspendedBackendaiClient();\n  const [userInfo] = useCurrentUserInfo();\n  const { pathname, search } = useLocation();\n  const [callback] = useQueryParam('callback', StringParam);\n  const [name] = useQueryParam('name', StringParam);\n  const { t } = useTranslation();\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      style={{ height: '100vh' }}\n    >\n      <Card title={t('interactiveLogin.InteractiveLoginWithBackendAI')}>\n        <Flex direction=\"column\" gap={'sm'} align=\"stretch\">\n          {t('interactiveLogin.ConfirmLoginMessage', {\n            username: userInfo.username,\n            email: userInfo.email,\n          })}\n          <Descriptions\n            column={1}\n            bordered\n            items={[\n              {\n                label: t('interactiveLogin.ServiceName'),\n                children: name,\n              },\n              // {\n              //   label: '서비스 설명',\n              //   children: (\n              //     <Flex style={{ maxWidth: 400 }}>\n              //       Backend.AI FastTrack는 Backend.AI를 이용한 MLOps 서비스\n              //       입니다.\n              //     </Flex>\n              //   ),\n              // },\n              {\n                label: 'URL',\n                children: callback ? new URL(callback).origin : '-',\n              },\n            ]}\n          />\n          <Flex\n            direction=\"row\"\n            justify=\"between\"\n            style={{ alignSelf: 'stretch' }}\n          >\n            {\n              // @ts-ignore\n              globalThis?.backendaiclient?._config\n                ?.enableInteractiveLoginAccountSwitch ? (\n                <Button\n                  size=\"large\"\n                  onClick={() => {\n                    const event: CustomEvent = new CustomEvent(\n                      'backend-ai-logout',\n                      {\n                        detail: {\n                          callbackURL: `${pathname}${search}`,\n                        },\n                      },\n                    );\n                    document.dispatchEvent(event);\n                  }}\n                >\n                  {t('interactiveLogin.UseAnotherAccount')}\n                </Button>\n              ) : (\n                <div></div>\n              )\n            }\n            <Button\n              size=\"large\"\n              type=\"primary\"\n              onClick={() => {\n                //redirect to callback\n                window.location.href = callback || '';\n              }}\n            >\n              {t('login.Login')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n\nexport default InteractiveLoginPage;\n"],"names":["Children","_globalThis$backendai","_globalThis$backendai2","useSuspendedBackendaiClient","userInfo","useCurrentUserInfo","pathname","search","useLocation","callback","useQueryParam","StringParam","name","t","useTranslation","_jsx","Flex","direction","align","justify","style","height","children","Card","title","_jsxs","gap","username","email","Descriptions","column","bordered","items","label","URL","origin","alignSelf","globalThis","backendaiclient","_config","enableInteractiveLoginAccountSwitch","Button","size","onClick","event","CustomEvent","detail","callbackURL","document","dispatchEvent","type","window","location","href","InteractiveLoginPage","_Fragment","CSSTokenVariables","NotificationForAnonymous","id","Suspense"],"sourceRoot":""}