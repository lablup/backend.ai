{"version":3,"file":"static/js/2871.57116b63.chunk.js","mappings":"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","sources":["components/BAIPropertyFilter.tsx","components/EndpointOwnerInfo.tsx","components/EndpointStatusTag.tsx","components/TableColumnsSettingModal.tsx","components/__generated__/EndpointOwnerInfoFragment.graphql.ts","components/__generated__/EndpointStatusTagFragment.graphql.ts","pages/EndpointListPage.tsx","pages/__generated__/EndpointListPageQuery.graphql.ts"],"sourcesContent":["import useControllableState from '../hooks/useControllableState';\nimport Flex from './Flex';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useDynamicList } from 'ahooks';\nimport {\n  AutoComplete,\n  AutoCompleteProps,\n  Button,\n  GetRef,\n  Input,\n  Select,\n  Space,\n  Tag,\n  Tooltip,\n  theme,\n} from 'antd';\nimport _ from 'lodash';\nimport React, {\n  ComponentProps,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\n\n//github.com/lablup/backend.ai/blob/main/src/ai/backend/manager/models/minilang/queryfilter.py\ntype FilterProperty = {\n  key: string;\n  // operators: Array<string>;\n  defaultOperator?: string;\n  propertyLabel: string;\n  // TODO: support array, number\n  type: 'string' | 'boolean';\n  options?: AutoCompleteProps['options'];\n};\nexport interface BAIPropertyFilterProps\n  extends Omit<ComponentProps<typeof Flex>, 'value' | 'onChange'> {\n  value?: string;\n  onChange?: (value: string) => void;\n  defaultValue?: string;\n  filterProperties: Array<FilterProperty>;\n  loading?: boolean;\n}\n\ninterface FilterInput {\n  property: string;\n  operator: string;\n  value: string;\n  label?: ReactNode;\n  type: FilterProperty['type'];\n  propertyLabel: string;\n}\n\nconst DEFAULT_OPERATOR_OF_TYPES = {\n  string: 'ilike',\n  boolean: '==',\n};\n\nconst DEFAULT_OPTIONS_OF_TYPES: {\n  [key: string]: AutoCompleteProps['options'] | undefined;\n} = {\n  boolean: [\n    {\n      label: 'True',\n      value: 'true',\n    },\n    {\n      label: 'False',\n      value: 'false',\n    },\n  ],\n  string: undefined,\n};\n\nfunction trimFilterValue(filterValue: string): string {\n  return filterValue.replace(/^%|%$/g, '');\n}\n\n/**\n * Parses the filter value and returns an object containing the property, operator, and value.\n * @param filter - The filter string to parse.\n * @returns An object containing the parsed property, operator, and value.\n */\nexport function parseFilterValue(filter: string) {\n  // Split the filter string into an array of strings using a regular expression.\n  // The regular expression splits the string at whitespace characters, but ignores whitespace within double quotes.\n  const [property, ...rest] = filter.split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n  // Join the remaining strings in the array and split them again using the same regular expression.\n  // This extracts the operator and the value from the filter string.\n  const [operator, ...valueParts] = rest\n    .join(' ')\n    .split(/\\s+(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n  // Join the value parts into a single string and remove any leading or trailing double quotes.\n  const value = valueParts.join(' ').replace(/^\"|\"$/g, '');\n\n  // Return an object containing the parsed property, operator, and value.\n  return { property, operator, value };\n}\n\nconst BAIPropertyFilter: React.FC<BAIPropertyFilterProps> = ({\n  filterProperties,\n  value: propValue,\n  onChange: propOnChange,\n  defaultValue,\n  loading,\n  ...containerProps\n}) => {\n  const [search, setSearch] = useControllableState({});\n  const autoCompleteRef = useRef<GetRef<typeof AutoComplete>>(null);\n  const [isOpenAutoComplete, setIsOpenAutoComplete] = useState(false);\n\n  const [value, setValue] = useControllableState<string | undefined>({\n    value: propValue,\n    defaultValue: defaultValue,\n    onChange: propOnChange,\n  });\n  const filtersFromValue = useMemo(() => {\n    if (value === undefined) return [];\n    const filters = value.split('&').map((filter) => filter.trim());\n    return filters.map((filter) => {\n      const { property, operator, value } = parseFilterValue(filter);\n      return {\n        property,\n        operator,\n        value,\n        propertyLabel:\n          _.find(filterProperties, (f) => f.key === property)?.propertyLabel ||\n          property,\n        type:\n          _.find(filterProperties, (f) => f.key === property)?.type || 'string',\n      };\n    });\n  }, [value, filterProperties]);\n\n  const { t } = useTranslation();\n  const options = _.map(filterProperties, (filterProperty) => {\n    return {\n      label: filterProperty.propertyLabel,\n      value: filterProperty.key,\n      filter: filterProperty,\n    };\n  });\n  const [selectedProperty, setSelectedProperty] = useState(options[0].filter);\n  const { list, remove, push, resetList, getKey } =\n    useDynamicList<FilterInput>(filtersFromValue);\n\n  const { token } = theme.useToken();\n\n  useEffect(() => {\n    if (list.length === 0) {\n      setValue(undefined);\n    } else {\n      setValue(\n        _.map(list, (item) => {\n          const valueStringInResult =\n            item.type === 'string' ? `\"${item.value}\"` : item.value;\n          return `${item.property} ${item.operator} ${valueStringInResult}`;\n        }).join(' & '),\n      );\n    }\n  }, [list, setValue]);\n\n  const onSearch = (value: string) => {\n    if (_.isEmpty(value)) return;\n    setSearch('');\n    const operator =\n      selectedProperty.defaultOperator ||\n      DEFAULT_OPERATOR_OF_TYPES[selectedProperty.type];\n    const filterValue =\n      operator === 'ilike' || operator === 'like' ? `%${value}%` : `${value}`;\n    push({\n      property: selectedProperty.key,\n      propertyLabel: selectedProperty.propertyLabel,\n      operator,\n      value: filterValue,\n      label: selectedProperty.options?.find((o) => o.value === value)?.label,\n      type: selectedProperty.type,\n    });\n  };\n  return (\n    <Flex direction=\"column\" gap={'xs'} style={{ flex: 1 }} align=\"start\">\n      <Space.Compact>\n        <Select\n          popupMatchSelectWidth={false}\n          options={options}\n          value={selectedProperty.key}\n          onChange={(value, options) => {\n            setSelectedProperty(_.castArray(options)[0].filter);\n          }}\n          onSelect={() => {\n            autoCompleteRef.current?.focus();\n            setIsOpenAutoComplete(true);\n          }}\n          showSearch\n          optionFilterProp=\"label\"\n        />\n        <AutoComplete\n          ref={autoCompleteRef}\n          value={search}\n          open={isOpenAutoComplete}\n          onDropdownVisibleChange={setIsOpenAutoComplete}\n          // https://ant.design/components/auto-complete#why-doesnt-the-text-composition-system-work-well-with-onsearch-in-controlled-mode\n          // onSearch={(value) => {}}\n          onSelect={onSearch}\n          onChange={(value) => {\n            setSearch(value);\n          }}\n          style={{\n            minWidth: 200,\n          }}\n          // @ts-ignore\n          options={_.filter(\n            selectedProperty.options ||\n              DEFAULT_OPTIONS_OF_TYPES[selectedProperty.type],\n            (option) => {\n              return _.isEmpty(search)\n                ? true\n                : option.label?.toString().includes(search);\n            },\n          )}\n          placeholder={t('propertyFilter.placeHolder')}\n        >\n          <Input.Search onSearch={onSearch} allowClear />\n        </AutoComplete>\n      </Space.Compact>\n      {list.length > 0 && (\n        <Flex\n          direction=\"row\"\n          gap={'xs'}\n          wrap=\"wrap\"\n          style={{ alignSelf: 'stretch' }}\n        >\n          {_.map(list, (item, index) => {\n            return (\n              <Tag\n                key={getKey(index)}\n                closable\n                onClose={() => {\n                  remove(index);\n                }}\n                style={{ margin: 0 }}\n              >\n                {item.propertyLabel}:{' '}\n                {item.label || trimFilterValue(item.value)}\n              </Tag>\n            );\n          })}\n          {list.length > 1 && (\n            <Tooltip title={t('propertyFilter.ResetFilter')}>\n              <Button\n                size=\"small\"\n                icon={\n                  <CloseCircleOutlined\n                    style={{ color: token.colorTextSecondary }}\n                  />\n                }\n                type=\"text\"\n                onClick={() => {\n                  resetList([]);\n                }}\n              />\n            </Tooltip>\n          )}\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\nexport default BAIPropertyFilter;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport { EndpointOwnerInfoFragment$key } from './__generated__/EndpointOwnerInfoFragment.graphql';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Tooltip, theme } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointOwnerInfoProps {\n  endpointFrgmt: EndpointOwnerInfoFragment$key | null | undefined;\n}\nconst EndpointOwnerInfo: React.FC<EndpointOwnerInfoProps> = ({\n  endpointFrgmt,\n}) => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const baiClient = useSuspendedBackendaiClient();\n\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointOwnerInfoFragment on Endpoint {\n        id\n        created_user_email @since(version: \"23.09.8\")\n        session_owner_email @since(version: \"23.09.8\")\n      }\n    `,\n    endpointFrgmt,\n  );\n\n  if (!baiClient.supports('model-serving-endpoint-user-info'))\n    return baiClient.email || '';\n  if (endpoint?.created_user_email === endpoint?.session_owner_email)\n    return endpoint?.session_owner_email || '';\n  else\n    return (\n      <>\n        {endpoint?.session_owner_email || ''}\n        <Tooltip\n          title={t('modelService.ServiceDelegatedFrom', {\n            createdUser: endpoint?.created_user_email || '',\n            sessionOwner: endpoint?.session_owner_email || '',\n          })}\n        >\n          <Button\n            size=\"small\"\n            type=\"text\"\n            icon={<QuestionCircleOutlined />}\n            style={{ color: token.colorTextSecondary }}\n          />\n        </Tooltip>\n      </>\n    );\n};\n\nexport default EndpointOwnerInfo;\n","import { EndpointStatusTagFragment$key } from './__generated__/EndpointStatusTagFragment.graphql';\nimport { Tag } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport React from 'react';\nimport { useFragment } from 'react-relay';\n\ninterface EndpointStatusTagProps {\n  endpointFrgmt: EndpointStatusTagFragment$key | null | undefined;\n}\nconst EndpointStatusTag: React.FC<EndpointStatusTagProps> = ({\n  endpointFrgmt,\n}) => {\n  const endpoint = useFragment(\n    graphql`\n      fragment EndpointStatusTagFragment on Endpoint {\n        id\n        status\n      }\n    `,\n    endpointFrgmt,\n  );\n  let color = 'default';\n  switch (endpoint?.status?.toUpperCase()) {\n    case 'RUNNING':\n    case 'HEALTHY':\n      color = 'success';\n      break;\n\n    // case 'TERMINATED':\n    //   color = 'default';\n    //   break;\n  }\n\n  return <Tag color={color}>{endpoint?.status}</Tag>;\n};\n\nexport default EndpointStatusTag;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { FormInstance } from 'antd/lib';\nimport _ from 'lodash';\nimport React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const formRef = useRef<FormInstance>(null);\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        formRef.current\n          ?.validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        ref={formRef}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","/**\n * @generated SignedSource<<247fee0740f2e92821882fde613f0c58>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointOwnerInfoFragment$data = {\n  readonly created_user_email: string | null | undefined;\n  readonly id: string | null | undefined;\n  readonly session_owner_email: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointOwnerInfoFragment\";\n};\nexport type EndpointOwnerInfoFragment$key = {\n  readonly \" $data\"?: EndpointOwnerInfoFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointOwnerInfoFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"created_user_email\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"session_owner_email\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"fb21a441c8873205b5092ae1a5a7157e\";\n\nexport default node;\n","/**\n * @generated SignedSource<<9520b09b196edae5bc04bac14b48331f>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointStatusTagFragment$data = {\n  readonly id: string | null | undefined;\n  readonly status: string | null | undefined;\n  readonly \" $fragmentType\": \"EndpointStatusTagFragment\";\n};\nexport type EndpointStatusTagFragment$key = {\n  readonly \" $data\"?: EndpointStatusTagFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointStatusTagFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"EndpointStatusTagFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"status\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Endpoint\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"3b31efa50b55edddcb210b59003dc479\";\n\nexport default node;\n","import BAIPropertyFilter from '../components/BAIPropertyFilter';\nimport EndpointOwnerInfo from '../components/EndpointOwnerInfo';\nimport EndpointStatusTag from '../components/EndpointStatusTag';\nimport Flex from '../components/Flex';\nimport TableColumnsSettingModal from '../components/TableColumnsSettingModal';\nimport { baiSignedRequestWithPromise, filterEmptyItem } from '../helper';\nimport {\n  useSuspendedBackendaiClient,\n  useUpdatableState,\n  useWebUINavigate,\n} from '../hooks';\nimport { useCurrentUserInfo, useCurrentUserRole } from '../hooks/backendai';\n// import { getSortOrderByName } from '../hooks/reactPaginationQueryOptions';\nimport { useTanMutation } from '../hooks/reactQueryAlias';\nimport { useCurrentProjectValue } from '../hooks/useCurrentProject';\nimport {\n  EndpointListPageQuery,\n  EndpointListPageQuery$data,\n} from './__generated__/EndpointListPageQuery.graphql';\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n  ReloadOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { useRafInterval } from 'ahooks';\nimport { useLocalStorageState } from 'ahooks';\nimport { Button, Table, Typography, theme, Radio, App } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport graphql from 'babel-plugin-relay/macro';\nimport { default as dayjs } from 'dayjs';\nimport _ from 'lodash';\nimport React, {\n  PropsWithChildren,\n  useState,\n  useTransition,\n  startTransition as startTransitionWithoutPendingState,\n  useDeferredValue,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyLoadQuery } from 'react-relay';\nimport { Link } from 'react-router-dom';\nimport { StringParam, useQueryParam } from 'use-query-params';\n\nexport type Endpoint = NonNullable<\n  NonNullable<\n    NonNullable<\n      NonNullable<EndpointListPageQuery$data>['endpoint_list']\n    >['items']\n  >[0]\n>;\n\nexport const isDestroyingStatus = (\n  desiredSessionCount: number | null | undefined,\n  status: string | null | undefined,\n) => {\n  return (\n    (desiredSessionCount ?? 0) < 0 ||\n    _.includes(['DESTROYED', 'DESTROYING'], status ?? '')\n  );\n};\n\ntype LifecycleStage = 'created&destroying' | 'destroyed';\n\nconst EndpointListPage: React.FC<PropsWithChildren> = ({ children }) => {\n  const { t } = useTranslation();\n  const { message, modal } = App.useApp();\n  const baiClient = useSuspendedBackendaiClient();\n  const webuiNavigate = useWebUINavigate();\n  const { token } = theme.useToken();\n  const curProject = useCurrentProjectValue();\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [selectedLifecycleStage, setSelectedLifecycleStage] =\n    useState<LifecycleStage>('created&destroying');\n  const deferredSelectedLifecycleStage = useDeferredValue(\n    selectedLifecycleStage,\n  );\n  const [paginationState, setPaginationState] = useState<{\n    current: number;\n    pageSize: number;\n  }>({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const deferredPaginationState = useDeferredValue(paginationState);\n  const isPendingPaginationAndFilter =\n    selectedLifecycleStage !== deferredSelectedLifecycleStage ||\n    paginationState !== deferredPaginationState;\n  const lifecycleStageFilter =\n    deferredSelectedLifecycleStage === 'created&destroying'\n      ? `lifecycle_stage == \"created\" | lifecycle_stage == \"destroying\"`\n      : `lifecycle_stage == \"${deferredSelectedLifecycleStage}\"`;\n\n  const [isRefetchPending, startRefetchTransition] = useTransition();\n  const [isFilterPending, startFilterTransition] = useTransition();\n  const [servicesFetchKey, updateServicesFetchKey] =\n    useUpdatableState('initial-fetch');\n  const [optimisticDeletingId, setOptimisticDeletingId] = useState<\n    string | null\n  >();\n\n  const [filterStr, setFilterStr] = useQueryParam('filter', StringParam);\n  const [currentUser] = useCurrentUserInfo();\n  const currentUserRole = useCurrentUserRole();\n\n  // const [selectedGeneration, setSelectedGeneration] = useState<\n  //   \"current\" | \"next\"\n  // >(\"next\");\n\n  const columns: ColumnsType<Endpoint> = [\n    {\n      title: t('modelService.EndpointName'),\n      dataIndex: 'endpoint_id',\n      key: 'endpointName',\n      fixed: 'left',\n      render: (endpoint_id, row) => (\n        <Link to={'/serving/' + endpoint_id}>{row.name}</Link>\n      ),\n    },\n    {\n      title: t('modelService.EndpointId'),\n      dataIndex: 'endpoint_id',\n      key: 'endpoint_id',\n      width: 310,\n      render: (endpoint_id) => (\n        <Typography.Text code>{endpoint_id}</Typography.Text>\n      ),\n    },\n    {\n      title: t('modelService.ServiceEndpoint'),\n      dataIndex: 'endpoint_id',\n      key: 'url',\n      render: (endpoint_id, row) =>\n        row.url ? (\n          <Typography.Link copyable href={row.url} target=\"_blank\">\n            {row.url}\n          </Typography.Link>\n        ) : (\n          '-'\n        ),\n    },\n    {\n      title: t('modelService.Controls'),\n      dataIndex: 'controls',\n      key: 'controls',\n      render: (text, row) => (\n        <Flex direction=\"row\" align=\"stretch\">\n          <Button\n            type=\"text\"\n            icon={<SettingOutlined />}\n            style={\n              isDestroyingStatus(row?.desired_session_count, row?.status) ||\n              (!!row.created_user_email &&\n                row.created_user_email !== currentUser.email)\n                ? {\n                    color: token.colorTextDisabled,\n                  }\n                : {\n                    color: token.colorInfo,\n                  }\n            }\n            disabled={\n              isDestroyingStatus(row?.desired_session_count, row?.status) ||\n              (!!row.created_user_email &&\n                row.created_user_email !== currentUser.email)\n            }\n            onClick={() => {\n              webuiNavigate('/service/update/' + row.endpoint_id);\n            }}\n          />\n          <Button\n            type=\"text\"\n            icon={\n              <DeleteOutlined\n                style={\n                  isDestroyingStatus(row?.desired_session_count, row?.status)\n                    ? undefined\n                    : {\n                        color: token.colorError,\n                      }\n                }\n              />\n            }\n            loading={\n              terminateModelServiceMutation.isPending &&\n              optimisticDeletingId === row.endpoint_id\n            }\n            disabled={isDestroyingStatus(\n              row?.desired_session_count,\n              row?.status,\n            )}\n            onClick={() => {\n              modal.confirm({\n                title: t('dialog.ask.DoYouWantToDeleteSomething', {\n                  name: row.name,\n                }),\n                content: t('dialog.warning.CannotBeUndone'),\n                okText: t('button.Delete'),\n                okButtonProps: {\n                  danger: true,\n                  type: 'primary',\n                },\n                onOk: () => {\n                  setOptimisticDeletingId(row.endpoint_id);\n                  // FIXME: any better idea for handling result?\n                  row.endpoint_id &&\n                    terminateModelServiceMutation.mutate(row.endpoint_id, {\n                      onSuccess: (res) => {\n                        startRefetchTransition(() => {\n                          updateServicesFetchKey();\n                        });\n                        // FIXME: temporally refer to mutate input to message\n                        if (res.success) {\n                          message.success(\n                            t('modelService.ServiceTerminated', {\n                              name: row?.name,\n                            }),\n                          );\n                        } else {\n                          message.error(\n                            t('modelService.FailedToTerminateService'),\n                          );\n                        }\n                      },\n                      onError: (err) => {\n                        message.error(\n                          t('modelService.FailedToTerminateService'),\n                        );\n                      },\n                    });\n                },\n              });\n            }}\n          />\n        </Flex>\n      ),\n    },\n    {\n      title: t('modelService.Status'),\n      key: 'status',\n      render: (text, row) => <EndpointStatusTag endpointFrgmt={row} />,\n    },\n    ...(baiClient.is_admin\n      ? [\n          {\n            title: t('modelService.Owner'),\n            // created_user_email is referred by EndpointOwnerInfoFragment\n            dataIndex: 'created_user_email',\n            key: 'session_owner',\n            render: (_: string, endpoint_info: Endpoint) => (\n              <EndpointOwnerInfo endpointFrgmt={endpoint_info} />\n            ),\n          },\n        ]\n      : []),\n    {\n      title: t('modelService.CreatedAt'),\n      dataIndex: 'created_at',\n      key: 'createdAt',\n      render: (created_at) => {\n        return dayjs(created_at).format('ll LT');\n      },\n      defaultSortOrder: 'descend',\n      sortDirections: ['descend', 'ascend', 'descend'],\n      sorter: (a, b) => {\n        const date1 = dayjs(a.created_at);\n        const date2 = dayjs(b.created_at);\n        return date1.diff(date2);\n      },\n    },\n    {\n      title: t('modelService.DesiredSessionCount'),\n      dataIndex: 'desired_session_count',\n      key: 'desiredSessionCount',\n      render: (desired_session_count) => {\n        return desired_session_count < 0 ? '-' : desired_session_count;\n      },\n    },\n    {\n      title: (\n        <Flex direction=\"column\" align=\"start\">\n          {t('modelService.RoutingsCount')}\n          <br />\n          <Typography.Text type=\"secondary\" style={{ fontWeight: 'normal' }}>\n            ({t('modelService.Active/Total')})\n          </Typography.Text>\n        </Flex>\n      ),\n      // dataIndex: \"active_route_count\",\n      key: 'routingCount',\n      render: (text, row) => {\n        return (\n          _.filter(row.routings, (r) => r?.status === 'HEALTHY').length +\n          ' / ' +\n          row.routings?.length\n        );\n        // [r for r in endpoint.routings if r.status == RouteStatus.HEALTHY]\n      },\n    },\n    {\n      title: t('modelService.Public'),\n      key: 'public',\n      render: (text, row) =>\n        row.open_to_public ? (\n          <CheckOutlined style={{ color: token.colorSuccess }} />\n        ) : (\n          <CloseOutlined style={{ color: token.colorTextSecondary }} />\n        ),\n    },\n  ];\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.EndpointListPage.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  useRafInterval(() => {\n    startTransitionWithoutPendingState(() => {\n      updateServicesFetchKey();\n    });\n  }, 7000);\n\n  const { endpoint_list: modelServiceList } =\n    useLazyLoadQuery<EndpointListPageQuery>(\n      graphql`\n        query EndpointListPageQuery(\n          $offset: Int!\n          $limit: Int!\n          $projectID: UUID\n          $filter: String\n        ) {\n          endpoint_list(\n            offset: $offset\n            limit: $limit\n            project: $projectID\n            filter: $filter\n          ) {\n            total_count\n            items {\n              name\n              endpoint_id\n              model\n              domain\n              status\n              project\n              resource_group\n              resource_slots\n              url\n              open_to_public\n              created_at @since(version: \"23.09.0\")\n              desired_session_count @required(action: NONE)\n              routings {\n                routing_id\n                endpoint\n                session\n                traffic_ratio\n                status\n              }\n              runtime_variant @since(version: \"24.03.5\") {\n                name\n                human_readable_name\n              }\n              created_user_email @since(version: \"23.09.8\")\n              ...EndpointOwnerInfoFragment\n              ...EndpointStatusTagFragment\n            }\n          }\n        }\n      `,\n      {\n        offset:\n          (deferredPaginationState.current - 1) *\n          deferredPaginationState.pageSize,\n        limit: deferredPaginationState.pageSize,\n        projectID: curProject.id,\n        filter: baiClient.supports('endpoint-lifecycle-stage-filter')\n          ? [lifecycleStageFilter, filterStr]\n              .filter(Boolean)\n              .map((v) => `(${v})`)\n              .join(' & ')\n          : undefined,\n      },\n      {\n        fetchPolicy: 'network-only',\n        fetchKey: servicesFetchKey,\n      },\n    );\n  const sortedEndpointList = _.sortBy(modelServiceList?.items, 'name');\n\n  // FIXME: struggling with sending data when active tab changes!\n  // const runningModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count >= 0\n  // );\n\n  // const terminatedModelServiceList = modelServiceList?.filter(\n  //   (item: any) => item.desired_session_count < 0\n  // );\n\n  const terminateModelServiceMutation = useTanMutation<\n    {\n      success?: boolean;\n    },\n    unknown,\n    string\n  >({\n    mutationFn: (endpoint_id) => {\n      return baiSignedRequestWithPromise({\n        method: 'DELETE',\n        url: '/services/' + endpoint_id,\n        client: baiClient,\n      });\n    },\n  });\n\n  return (\n    <Flex direction=\"column\" align=\"stretch\">\n      <Flex\n        direction=\"row\"\n        justify=\"between\"\n        align=\"start\"\n        wrap=\"wrap\"\n        gap={'xs'}\n        style={{\n          padding: token.paddingContentVertical,\n          paddingLeft: token.paddingContentHorizontalSM,\n          paddingRight: token.paddingContentHorizontalSM,\n        }}\n      >\n        <Flex\n          direction=\"row\"\n          gap={'sm'}\n          align=\"start\"\n          wrap=\"wrap\"\n          style={{ flexShrink: 1 }}\n        >\n          {baiClient.supports('endpoint-lifecycle-stage-filter') && (\n            <>\n              <Radio.Group\n                value={selectedLifecycleStage}\n                onChange={(e) => {\n                  setSelectedLifecycleStage(e.target?.value);\n                  // reset pagination state when filter changes\n                  setPaginationState({\n                    current: 1,\n                    pageSize: paginationState.pageSize,\n                  });\n                }}\n                optionType=\"button\"\n                buttonStyle=\"solid\"\n                options={[\n                  {\n                    label: 'Active',\n                    value: 'created&destroying',\n                  },\n                  {\n                    label: 'Destroyed',\n                    value: 'destroyed',\n                  },\n                ]}\n              />\n              <BAIPropertyFilter\n                value={filterStr || undefined}\n                onChange={(v) => {\n                  startFilterTransition(() => {\n                    setFilterStr(v, 'replaceIn');\n                  });\n                }}\n                loading={isFilterPending}\n                filterProperties={filterEmptyItem([\n                  // https://github.com/lablup/backend.ai/blob/main/src/ai/backend/manager/models/endpoint.py#L766-L773\n                  {\n                    key: 'name',\n                    type: 'string',\n                    propertyLabel: t('modelService.EndpointName'),\n                  },\n                  {\n                    key: 'url',\n                    type: 'string',\n                    propertyLabel: t('modelService.ServiceEndpoint'),\n                  },\n                  currentUserRole === 'admin' ||\n                  currentUserRole === 'superadmin'\n                    ? {\n                        key: 'created_user_email',\n                        type: 'string',\n                        propertyLabel: t('modelService.Owner'),\n                      }\n                    : undefined,\n                  // not supported yet\n                  // {\n                  //   key: 'open_to_public',\n                  //   propertyLabel: t('modelService.Public'),\n                  //   type: 'boolean',\n                  //   options: [\n                  //     {\n                  //       value: 'true',\n                  //     },\n                  //     {\n                  //       value:'false'\n                  //     }\n                  //   ]\n                  // }\n                ])}\n              />\n            </>\n          )}\n        </Flex>\n        <Flex direction=\"row\" gap={'xs'}>\n          <Flex gap={'xs'}>\n            <Button\n              icon={<ReloadOutlined />}\n              loading={isRefetchPending}\n              onClick={() => {\n                startRefetchTransition(() => updateServicesFetchKey());\n              }}\n            />\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                webuiNavigate('/service/start');\n              }}\n            >\n              {t('modelService.StartService')}\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Table\n        loading={{\n          spinning: isPendingPaginationAndFilter || isFilterPending,\n          indicator: <LoadingOutlined />,\n        }}\n        scroll={{ x: 'max-content' }}\n        rowKey={'endpoint_id'}\n        dataSource={(sortedEndpointList || []) as Endpoint[]}\n        columns={columns.filter((column) =>\n          displayedColumnKeys?.includes(_.toString(column.key)),\n        )}\n        pagination={{\n          pageSize: paginationState.pageSize,\n          current: paginationState.current,\n          pageSizeOptions: ['10', '20', '50'],\n          total: modelServiceList?.total_count || 0,\n          showSizeChanger: true,\n          onChange(page, pageSize) {\n            setPaginationState({\n              current: page,\n              pageSize: pageSize,\n            });\n          },\n          style: { marginRight: token.marginXS },\n        }}\n      />\n      <Flex\n        justify=\"end\"\n        style={{\n          padding: token.paddingXXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            setIsOpenColumnsSetting(true);\n          }}\n        />\n      </Flex>\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(!isOpenColumnsSetting);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </Flex>\n  );\n};\n\nexport default EndpointListPage;\n","/**\n * @generated SignedSource<<f737c042a6b2b092598eb55c3b8e1839>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type EndpointListPageQuery$variables = {\n  filter?: string | null | undefined;\n  limit: number;\n  offset: number;\n  projectID?: string | null | undefined;\n};\nexport type EndpointListPageQuery$data = {\n  readonly endpoint_list: {\n    readonly items: ReadonlyArray<{\n      readonly created_at: string;\n      readonly created_user_email: string | null | undefined;\n      readonly desired_session_count: number;\n      readonly domain: string | null | undefined;\n      readonly endpoint_id: string | null | undefined;\n      readonly model: string | null | undefined;\n      readonly name: string | null | undefined;\n      readonly open_to_public: boolean | null | undefined;\n      readonly project: string | null | undefined;\n      readonly resource_group: string | null | undefined;\n      readonly resource_slots: any | null | undefined;\n      readonly routings: ReadonlyArray<{\n        readonly endpoint: string | null | undefined;\n        readonly routing_id: string | null | undefined;\n        readonly session: string | null | undefined;\n        readonly status: string | null | undefined;\n        readonly traffic_ratio: number | null | undefined;\n      } | null | undefined> | null | undefined;\n      readonly runtime_variant: {\n        readonly human_readable_name: string | null | undefined;\n        readonly name: string | null | undefined;\n      } | null | undefined;\n      readonly status: string | null | undefined;\n      readonly url: string | null | undefined;\n      readonly \" $fragmentSpreads\": FragmentRefs<\"EndpointOwnerInfoFragment\" | \"EndpointStatusTagFragment\">;\n    } | null | undefined>;\n    readonly total_count: number;\n  } | null | undefined;\n};\nexport type EndpointListPageQuery = {\n  response: EndpointListPageQuery$data;\n  variables: EndpointListPageQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"filter\"\n},\nv1 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"limit\"\n},\nv2 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"offset\"\n},\nv3 = {\n  \"defaultValue\": null,\n  \"kind\": \"LocalArgument\",\n  \"name\": \"projectID\"\n},\nv4 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"filter\",\n    \"variableName\": \"filter\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"limit\",\n    \"variableName\": \"limit\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"offset\",\n    \"variableName\": \"offset\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"project\",\n    \"variableName\": \"projectID\"\n  }\n],\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"total_count\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint_id\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"model\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"project\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_group\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"resource_slots\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"open_to_public\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_at\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"desired_session_count\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"routing_id\",\n  \"storageKey\": null\n},\nv19 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endpoint\",\n  \"storageKey\": null\n},\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"session\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"traffic_ratio\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"RuntimeVariantInfo\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"runtime_variant\",\n  \"plural\": false,\n  \"selections\": [\n    (v6/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"human_readable_name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"created_user_email\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [\n      (v0/*: any*/),\n      (v1/*: any*/),\n      (v2/*: any*/),\n      (v3/*: any*/)\n    ],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"EndpointListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              {\n                \"kind\": \"RequiredField\",\n                \"field\": (v17/*: any*/),\n                \"action\": \"NONE\",\n                \"path\": \"endpoint_list.items.desired_session_count\"\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v10/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v22/*: any*/),\n              (v23/*: any*/),\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointOwnerInfoFragment\"\n              },\n              {\n                \"args\": null,\n                \"kind\": \"FragmentSpread\",\n                \"name\": \"EndpointStatusTagFragment\"\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [\n      (v2/*: any*/),\n      (v1/*: any*/),\n      (v3/*: any*/),\n      (v0/*: any*/)\n    ],\n    \"kind\": \"Operation\",\n    \"name\": \"EndpointListPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v4/*: any*/),\n        \"concreteType\": \"EndpointList\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"endpoint_list\",\n        \"plural\": false,\n        \"selections\": [\n          (v5/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"Endpoint\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"items\",\n            \"plural\": true,\n            \"selections\": [\n              (v6/*: any*/),\n              (v7/*: any*/),\n              (v8/*: any*/),\n              (v9/*: any*/),\n              (v10/*: any*/),\n              (v11/*: any*/),\n              (v12/*: any*/),\n              (v13/*: any*/),\n              (v14/*: any*/),\n              (v15/*: any*/),\n              (v16/*: any*/),\n              (v17/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"Routing\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"routings\",\n                \"plural\": true,\n                \"selections\": [\n                  (v18/*: any*/),\n                  (v19/*: any*/),\n                  (v20/*: any*/),\n                  (v21/*: any*/),\n                  (v10/*: any*/),\n                  (v24/*: any*/)\n                ],\n                \"storageKey\": null\n              },\n              (v22/*: any*/),\n              (v23/*: any*/),\n              (v24/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"session_owner_email\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"44748285f349a9d059efd5b64975c446\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"EndpointListPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query EndpointListPageQuery(\\n  $offset: Int!\\n  $limit: Int!\\n  $projectID: UUID\\n  $filter: String\\n) {\\n  endpoint_list(offset: $offset, limit: $limit, project: $projectID, filter: $filter) {\\n    total_count\\n    items {\\n      name\\n      endpoint_id\\n      model\\n      domain\\n      status\\n      project\\n      resource_group\\n      resource_slots\\n      url\\n      open_to_public\\n      created_at @since(version: \\\"23.09.0\\\")\\n      desired_session_count\\n      routings {\\n        routing_id\\n        endpoint\\n        session\\n        traffic_ratio\\n        status\\n        id\\n      }\\n      runtime_variant @since(version: \\\"24.03.5\\\") {\\n        name\\n        human_readable_name\\n      }\\n      created_user_email @since(version: \\\"23.09.8\\\")\\n      ...EndpointOwnerInfoFragment\\n      ...EndpointStatusTagFragment\\n      id\\n    }\\n  }\\n}\\n\\nfragment EndpointOwnerInfoFragment on Endpoint {\\n  id\\n  created_user_email @since(version: \\\"23.09.8\\\")\\n  session_owner_email @since(version: \\\"23.09.8\\\")\\n}\\n\\nfragment EndpointStatusTagFragment on Endpoint {\\n  id\\n  status\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"114c24611862a1a2577a867b9bc71359\";\n\nexport default node;\n"],"names":["DEFAULT_OPERATOR_OF_TYPES","string","boolean","DEFAULT_OPTIONS_OF_TYPES","label","value","undefined","_ref","filterProperties","propValue","onChange","propOnChange","defaultValue","loading","containerProps","search","setSearch","useControllableState","autoCompleteRef","useRef","isOpenAutoComplete","setIsOpenAutoComplete","useState","setValue","filtersFromValue","useMemo","split","map","filter","trim","_$find","_$find2","property","operator","rest","valueParts","join","replace","parseFilterValue","propertyLabel","_","f","key","type","t","useTranslation","options","filterProperty","selectedProperty","setSelectedProperty","list","remove","push","resetList","getKey","useDynamicList","token","theme","useToken","useEffect","length","item","valueStringInResult","onSearch","_selectedProperty$opt","_selectedProperty$opt2","defaultOperator","filterValue","find","o","_jsxs","Flex","direction","gap","style","flex","align","children","Space","Compact","_jsx","Select","popupMatchSelectWidth","onSelect","_autoCompleteRef$curr","current","focus","showSearch","optionFilterProp","AutoComplete","ref","open","onDropdownVisibleChange","minWidth","option","_option$label","toString","includes","placeholder","Input","Search","allowClear","wrap","alignSelf","index","Tag","closable","onClose","margin","Tooltip","title","Button","size","icon","CloseCircleOutlined","color","colorTextSecondary","onClick","endpointFrgmt","baiClient","useSuspendedBackendaiClient","endpoint","useFragment","_EndpointOwnerInfoFragment","require","supports","created_user_email","session_owner_email","_Fragment","createdUser","sessionOwner","QuestionCircleOutlined","email","_endpoint$status","_EndpointStatusTagFragment","status","toUpperCase","onRequestClose","columns","displayedColumnKeys","modalProps","formRef","columnOptions","column","element","React","props","child","BAIModal","destroyOnClose","centered","onOk","_formRef$current","validateFields","then","values","catch","onCancel","Form","preserve","initialValues","selectedColumnKeys","columnOption","layout","Item","name","marginBottom","prefix","SearchOutlined","marginSM","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","display","height","overflowY","Checkbox","Group","flexDirection","node","isDestroyingStatus","desiredSessionCount","message","modal","App","useApp","webuiNavigate","useWebUINavigate","curProject","useCurrentProjectValue","isOpenColumnsSetting","setIsOpenColumnsSetting","selectedLifecycleStage","setSelectedLifecycleStage","deferredSelectedLifecycleStage","useDeferredValue","paginationState","setPaginationState","pageSize","deferredPaginationState","isPendingPaginationAndFilter","lifecycleStageFilter","isRefetchPending","startRefetchTransition","useTransition","isFilterPending","startFilterTransition","servicesFetchKey","updateServicesFetchKey","useUpdatableState","optimisticDeletingId","setOptimisticDeletingId","filterStr","setFilterStr","useQueryParam","StringParam","currentUser","useCurrentUserInfo","currentUserRole","useCurrentUserRole","dataIndex","fixed","render","endpoint_id","row","Link","to","width","Typography","Text","code","url","copyable","href","target","text","SettingOutlined","desired_session_count","colorTextDisabled","colorInfo","disabled","DeleteOutlined","colorError","terminateModelServiceMutation","isPending","confirm","content","okText","okButtonProps","danger","mutate","onSuccess","res","success","error","onError","err","EndpointStatusTag","is_admin","endpoint_info","EndpointOwnerInfo","created_at","dayjs","format","defaultSortOrder","sortDirections","sorter","a","b","date1","date2","diff","fontWeight","_row$routings","routings","r","open_to_public","CheckOutlined","colorSuccess","CloseOutlined","setDisplayedColumnKeys","useLocalStorageState","useRafInterval","startTransitionWithoutPendingState","endpoint_list","modelServiceList","useLazyLoadQuery","_EndpointListPageQuery","offset","limit","projectID","id","Boolean","v","fetchPolicy","fetchKey","sortedEndpointList","items","useTanMutation","mutationFn","baiSignedRequestWithPromise","method","client","justify","padding","paddingContentVertical","paddingLeft","paddingContentHorizontalSM","paddingRight","flexShrink","Radio","e","_e$target","optionType","buttonStyle","BAIPropertyFilter","filterEmptyItem","ReloadOutlined","Table","spinning","indicator","LoadingOutlined","scroll","x","rowKey","dataSource","pagination","pageSizeOptions","total","total_count","showSizeChanger","page","marginRight","marginXS","paddingXXS","TableColumnsSettingModal","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","hash"],"sourceRoot":""}