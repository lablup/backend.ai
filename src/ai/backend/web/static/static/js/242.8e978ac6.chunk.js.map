{"version":3,"file":"static/js/242.8e978ac6.chunk.js","mappings":";2RA+BA,MAvBuB,SAAAA,GACrB,IAAAC,EAIID,EAHFE,OAAAA,OAAM,IAAAD,EAAG,CAAC,EAACA,EACXE,EAEEH,EAFFG,SAEEH,EADFI,YAKFC,EAAAA,WAAgB,WAEd,OADoBC,EAAAA,EAAAA,GAAoBJ,GAAUA,EAAOK,MAE3D,GAAG,CAACL,IACJ,IAAMM,EAA0BH,EAAAA,SAAc,kBAAMI,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGR,GAAS,CAC3FS,OAAO,GACP,GAAE,CAACT,IACL,OAAoBG,EAAAA,cAAoBO,EAAAA,EAAAA,SAAwB,CAC9DC,MAAOL,GACNL,EACL,+ECrBMW,EAAmB,QAAHC,OAAWC,KAAKC,MAAK,KAAAF,OAAIG,KAAKC,UA8D7C,SAASC,EAAcC,EAAiBC,GAC7C,IAAMC,EA9DD,SAAkBF,EAAiBC,GACxC,IAAME,EAAY,CAAC,EACbC,EAAc,SAACC,EAAOC,GAC1B,IAAIC,EAAQF,EAAME,QAElB,OADAA,GAAqB,OAAZD,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,KAAWA,GACjEC,aACf,EACMC,EAAY,SAACC,EAAUC,GAC3B,IAAMC,EAAY,IAAIC,EAAAA,EAAUH,GAC1BI,GAAgBC,EAAAA,EAAAA,IAASH,EAAUJ,eACzCL,EAAU,GAADT,OAAIiB,EAAI,WAAYP,EAAYQ,GACzCT,EAAU,GAADT,OAAIiB,EAAI,oBAAqBG,EAAc,GACpDX,EAAU,GAADT,OAAIiB,EAAI,iBAAkBG,EAAc,GACjDX,EAAU,GAADT,OAAIiB,EAAI,kBAAmBG,EAAc,GAClDX,EAAU,GAADT,OAAIiB,EAAI,mBAAoBC,EAAUL,QAAQS,SAAS,IAAKR,cACrEL,EAAU,GAADT,OAAIiB,EAAI,yBAA0BG,EAAc,GACzDX,EAAU,GAADT,OAAIiB,EAAI,6BAA8BG,EAAc,EAC/D,EAEA,GAAIb,EAAMgB,aAAc,CACtBR,EAAUR,EAAMgB,aAAc,WAC9B,IAAMA,EAAe,IAAIJ,EAAAA,EAAUZ,EAAMgB,cACnCC,GAAgBH,EAAAA,EAAAA,IAASE,EAAaT,eAE5CU,EAAcC,SAAQ,SAACd,EAAOe,GAC5BjB,EAAU,WAADT,OAAY0B,EAAQ,IAAOf,CACtC,IAEAF,EAAU,iCAAmCC,EAAYa,GAAc,SAAAI,GAAC,OAAIA,EAAEC,QAAQ,GAAG,IACzFnB,EAAU,iCAAmCC,EAAYa,GAAc,SAAAI,GAAC,OAAIA,EAAEC,QAAQ,GAAG,IACzFnB,EAAU,iCAAmCC,EAAYa,GAAc,SAAAI,GAAC,OAAIA,EAAEE,KAAK,GAAG,IACtFpB,EAAU,iCAAmCC,EAAYa,GAAc,SAAAI,GAAC,OAAIA,EAAEE,KAAK,GAAG,IACtFpB,EAAU,iCAAmCC,EAAYa,GAAc,SAAAI,GAAC,OAAIA,EAAEL,SAAwB,IAAfK,EAAEG,WAAkB,IAC3G,IAAMC,EAAqB,IAAIZ,EAAAA,EAAUK,EAAc,IACvDf,EAAU,wCAA0CC,EAAYqB,GAAoB,SAAAJ,GAAC,OAAIA,EAAEL,SAAwB,GAAfK,EAAEG,WAAiB,IACvHrB,EAAU,wCAA0CC,EAAYqB,GAAoB,SAAAJ,GAAC,OAAIA,EAAEK,OAAO,EAAE,GACtG,CAEIzB,EAAM0B,cACRlB,EAAUR,EAAM0B,aAAc,WAG5B1B,EAAM2B,cACRnB,EAAUR,EAAM2B,aAAc,WAG5B3B,EAAM4B,YACRpB,EAAUR,EAAM4B,WAAY,SAG1B5B,EAAM6B,WACRrB,EAAUR,EAAM6B,UAAW,QAG7B,IAAMC,EAAU3C,OAAO4C,KAAK7B,GAAW8B,KAAI,SAAAC,GAAG,WAAAxC,OAASM,EAAe,KAAAN,OAAIwC,EAAG,MAAAxC,OAAKS,EAAU+B,GAAI,QAChG,MAAO,oBAAAxC,OAEHqC,EAAQI,KAAK,MAAK,aAEpBC,MACJ,CAEgBC,CAASrC,EAAiBC,IACpCqC,EAAAA,EAAAA,OACFC,EAAAA,EAAAA,IAAUrC,EAAO,GAAFR,OAAKD,EAAgB,kBAIxC,yBChEA,MARA,WAGE,MAAO,CACL+C,mBAHwBC,EAAAA,EAAAA,YAAWC,EAAAA,GAInCC,eAHoBF,EAAAA,EAAAA,YAAWG,EAAAA,GAKnC,oCCPe,SAASC,EAAclE,GACpC,IACEG,EACEH,EADFG,SAEFgE,GAAkBC,EAAAA,EAAAA,KAEhBC,GAF0BC,EAAAA,EAAAA,GAAAH,EAAA,GAAd,GAEZE,OAEIE,EAA4BlE,EAAAA,QAAa,GAE/C,OADAkE,EAA0BC,QAAUD,EAA0BC,UAAsB,IAAXH,EACrEE,EAA0BC,QACRnE,EAAAA,cAAoBoE,EAAAA,GAAgB,CACtDJ,OAAQA,GACPlE,GAEEA,CACT,KC0BIkB,EACAqD,EACAC,sBC3BJ,EAjBiB,SAACC,EAAeC,GAC/B,IAAAV,GAAuBC,EAAAA,EAAAA,KAAUU,GAAAR,EAAAA,EAAAA,GAAAH,EAAA,GAA1B7C,EAAKwD,EAAA,GAAEC,EAAKD,EAAA,GAEnB,OAAOE,EAAAA,EAAAA,IAAiB,CACtB1D,MAAAA,EACAyD,MAAAA,EACAE,OAAQ,GACRC,KAAM,CAAC,mBAAoBN,GAC3BO,MAAO,kBAAc,OAARN,QAAwB,IAARA,OAAiB,EAASA,EAAIM,KAAK,IAC/D,iBAAM,EAAAC,EAAAA,EAAAA,GAAA,OAAArE,OACF6D,GAAkBnE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAG2E,EAAAA,EAAAA,QAAYD,EAAAA,EAAAA,GAAA,OAAArE,OAC5D6D,EAAa,MAAA7D,OAAK6D,EAAa,SAAU,CAC5CU,QAAS,YAGb,GACJ,EDjBIC,EAAgC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,CAAC,EACT,IAAK,IAAIC,KAAKH,EAAO/E,OAAOmF,UAAUC,eAAeC,KAAKN,EAAGG,IAAMF,EAAEM,QAAQJ,GAAK,IAAGD,EAAEC,GAAKH,EAAEG,IAC9F,GAAS,MAALH,GAAqD,oBAAjC/E,OAAOuF,sBAA2C,KAAIC,EAAI,EAAb,IAAgBN,EAAIlF,OAAOuF,sBAAsBR,GAAIS,EAAIN,EAAEO,OAAQD,IAClIR,EAAEM,QAAQJ,EAAEM,IAAM,GAAKxF,OAAOmF,UAAUO,qBAAqBL,KAAKN,EAAGG,EAAEM,MAAKP,EAAEC,EAAEM,IAAMT,EAAEG,EAAEM,IADuB,CAGvH,OAAOP,CACT,EAkCMU,EAAe,CAAC,qBAAsB,oBAAqB,cAAe,aAAc,QAAS,aAAc,OAAQ,SAAU,UAKvI,SAASC,IACP,OAAOhF,GALuB,KAMhC,CACA,SAASiF,IACP,OAAO5B,GAAuB6B,EAAAA,EAChC,CAIA,IAqBaC,EAAe,WAAH,MAAU,CACjCC,aAAc,SAACC,EAAWC,GACxB,OAAIA,IAGGD,EAAY,GAAH3F,OAAMsF,IAAoB,KAAAtF,OAAI2F,GAAcL,IAC9D,EACAO,iBAAkBN,EAClBO,iBAAkB,WAEhB,OAAIxF,GAIGgF,GACT,EACAS,SAAU,kBAAMnC,CAAW,EAC5B,EACKoC,EAAmB,SAAA/G,GACvB,IACEG,EAiEEH,EAjEFG,SACK6G,EAgEHhH,EAhEF6E,IACAoC,EA+DEjH,EA/DFiH,wBACAC,EA8DElH,EA9DFkH,MACAC,EA6DEnH,EA7DFmH,OACAC,EA4DEpH,EA5DFoH,KACAlH,EA2DEF,EA3DFE,OACA8D,EA0DEhE,EA1DFgE,cACAqD,EAyDErH,EAzDFqH,UACAC,EAwDEtH,EAxDFsH,MACAC,EAuDEvH,EAvDFuH,QACAC,EAsDExH,EAtDFwH,yBACAC,EAqDEzH,EArDFyH,sBACAC,EAoDE1H,EApDF0H,cACAC,EAmDE3H,EAnDF2H,aACAC,EAkDE5H,EAlDF4H,cACeC,EAiDb7H,EAjDF4E,cACAtD,EAgDEtB,EAhDFsB,MACAuC,EA+CE7D,EA/CF6D,kBACAiE,EA8CE9H,EA9CF8H,UACAC,EA6CE/H,EA7CF+H,UACAC,EA4CEhI,EA5CFgI,KACAC,EA2CEjI,EA3CFiI,SACAC,EA0CElI,EA1CFkI,SACAC,EAyCEnI,EAzCFmI,SACAC,EAwCEpI,EAxCFoI,SACAC,EAuCErI,EAvCFqI,WACAC,EAsCEtI,EAtCFsI,SACAC,EAqCEvI,EArCFuI,aACAC,EAoCExI,EApCFwI,QACAC,EAmCEzI,EAnCFyI,OACAC,EAkCE1I,EAlCF0I,SACAC,EAiCE3I,EAjCF2I,MACAC,EAgCE5I,EAhCF4I,MACAC,GA+BE7I,EA/BF6I,OACAC,GA8BE9I,EA9BF8I,KACAC,GA6BE/I,EA7BF+I,SACAC,GA4BEhJ,EA5BFgJ,MACAC,GA2BEjJ,EA3BFiJ,SACAC,GA0BElJ,EA1BFkJ,OACAC,GAyBEnJ,EAzBFmJ,OACAC,GAwBEpJ,EAxBFoJ,WACAC,GAuBErJ,EAvBFqJ,KACAC,GAsBEtJ,EAtBFsJ,WACAC,GAqBEvJ,EArBFuJ,MACAC,GAoBExJ,EApBFwJ,MACAC,GAmBEzJ,EAnBFyJ,MACAC,GAkBE1J,EAlBF0J,MACAC,GAiBE3J,EAjBF2J,KACQC,GAgBN5J,EAhBF6J,OACAC,GAeE9J,EAfF8J,SACAC,GAcE/J,EAdF+J,OACAC,GAaEhK,EAbFgK,QACAC,GAYEjK,EAZFiK,IACAC,GAWElK,EAXFkK,MACAC,GAUEnK,EAVFmK,KACAC,GASEpK,EATFoK,KACAC,GAQErK,EARFqK,SACAC,GAOEtK,EAPFsK,WACAC,GAMEvK,EANFuK,OACAC,GAKExK,EALFwK,aACAC,GAIEzK,EAJFyK,KACAC,GAGE1K,EAHF0K,YACAC,GAEE3K,EAFF2K,WACAC,GACE5K,EADF4K,KAOF,IAAMnE,GAAepG,EAAAA,aAAkB,SAACqG,EAAWC,GACjD,IACEkE,EACE7K,EADF6K,UAEF,GAAIlE,EACF,OAAOA,EAET,IAAMmE,EAAkBD,GAAajD,EAAcnB,aAAa,IAChE,OAAOC,EAAY,GAAH3F,OAAM+J,EAAe,KAAA/J,OAAI2F,GAAcoE,CACzD,GAAG,CAAClD,EAAcnB,aAAczG,EAAM6K,YAChCjG,GAAgBiD,GAAuBD,EAAchD,eAAiB2B,EAAAA,GACtEwE,GAAgBnG,KAAkBgD,EAAchD,cAChDC,GAAMmC,GAAaY,EAAc/C,IACjCmG,GAAUC,EAASrG,GAAeC,IAClCqG,GEpLO,SAAkB5J,EAAO6J,GACtC,IAAMC,EAAc9J,GAAS,CAAC,EACxB+J,GAA4C,IAAxBD,EAAYE,SAAsBH,EAA8BA,EAAhBI,EAAAA,GAC1E,OAAOC,EAAAA,EAAAA,IAAQ,WACb,IAAKlK,EACH,OAAO6J,EAGT,IAAMM,EAAmBhL,OAAOC,OAAO,CAAC,EAAG2K,EAAkBK,YAK7D,OAJAjL,OAAO4C,KAAK/B,EAAMoK,YAAc,CAAC,GAAGlJ,SAAQ,SAAAmJ,GAC1CF,EAAiBE,GAAiBlL,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG+K,EAAiBE,IAAiBrK,EAAMoK,WAAWC,GACvH,IAEOlL,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG2K,GAAoBD,GAAc,CACrFrG,MAAOtE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG2K,EAAkBtG,OAAQqG,EAAYrG,OAC7E2G,WAAYD,GAEhB,GAAG,CAACL,EAAaC,IAAoB,SAACO,EAAMC,GAAI,OAAKD,EAAKE,MAAK,SAACC,EAAWtJ,GACzE,IAAMuJ,EAAYH,EAAKpJ,GACvB,QAAQwJ,EAAAA,EAAAA,GAAQF,EAAWC,GAAW,EACxC,GAAE,GACJ,CF+JsBE,CAAS5K,EAAOsG,EAActG,OAIlD,IAAM6K,GAAa,CACjBtH,IAAAA,GACAoC,wBAAAA,EACAC,MAAAA,EACAC,OAAAA,EACAjH,OAAQA,GAAUyH,EAClBN,UAAAA,EACAC,MAAAA,EACAC,QAAAA,EACAE,sBAAiD,OAA1BA,QAA4D,IAA1BA,EAAmCA,EAAwBD,EACpHE,cAAAA,EACAjB,aAAAA,GACA7B,cAAAA,GACAtD,MAAO4J,GACPpD,UAAAA,EACAC,UAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,QAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAW,MAAAA,GACAV,OAAAA,GACAC,KAAAA,GACAC,SAAAA,GACAC,MAAAA,GACAC,SAAAA,GACAC,OAAAA,GACAC,OAAAA,GACAC,WAAAA,GACAC,KAAAA,GACAC,WAAAA,GACAE,MAAAA,GACAC,MAAAA,GACAC,MAAAA,GACAC,KAAAA,GACAE,OAAQD,GACRE,SAAAA,GACAC,OAAAA,GACAC,QAAAA,GACAC,IAAAA,GACAC,MAAAA,GACAC,KAAAA,GACAC,KAAAA,GACAC,SAAAA,GACAC,WAAAA,GACAC,OAAAA,GACAC,aAAAA,GACAC,KAAAA,GACAC,YAAAA,GACAC,WAAAA,GACAC,KAAAA,IAEIwB,GAAS3L,OAAOC,OAAO,CAAC,EAAGkH,GACjCnH,OAAO4C,KAAK8I,IAAY3J,SAAQ,SAAAe,QACN8I,IAApBF,GAAW5I,KACb6I,GAAO7I,GAAO4I,GAAW5I,GAE7B,IAGA6C,EAAa5D,SAAQ,SAAA8J,GACnB,IAAMC,EAAYvM,EAAMsM,GACpBC,IACFH,GAAOE,GAAYC,EAEvB,IAEA,IAAMC,IAAehB,EAAAA,EAAAA,IAAQ,kBAAMY,EAAM,GAAEA,IAAQ,SAACK,EAAYC,GAC9D,IAAMC,EAAWlM,OAAO4C,KAAKoJ,GACvBG,EAAcnM,OAAO4C,KAAKqJ,GAChC,OAAOC,EAASzG,SAAW0G,EAAY1G,QAAUyG,EAASb,MAAK,SAAAvI,GAAG,OAAIkJ,EAAWlJ,KAASmJ,EAAcnJ,EAAI,GAC9G,IACMsJ,GAAuBxM,EAAAA,SAAc,iBAAO,CAChDwK,UAAWjG,GACXC,IAAAA,GACD,GAAG,CAACD,GAAeC,KAChBiI,GAAY/B,GAAgBC,GAAQ7K,GAAYA,EAC9C4M,GAAmB1M,EAAAA,SAAc,WACrC,IAAI2M,EAAIC,EAAIC,EAAIC,EAChB,OAAOC,EAAAA,EAAAA,IAAqC,QAA7BJ,EAAKK,EAAAA,EAAAA,YAAuC,IAAPL,OAAgB,EAASA,EAAGM,0BAA4B,CAAC,GAAuF,QAAlFJ,EAAoC,QAA9BD,EAAKT,GAAatM,cAA2B,IAAP+M,OAAgB,EAASA,EAAGM,YAAyB,IAAPL,OAAgB,EAASA,EAAGI,0BAA4B,CAAC,GAAiC,QAA5BH,EAAKX,GAAapF,YAAyB,IAAP+F,OAAgB,EAASA,EAAGJ,mBAAqB,CAAC,GAAa,OAAT3F,QAA0B,IAATA,OAAkB,EAASA,EAAK2F,mBAAqB,CAAC,EAC7a,GAAG,CAACP,GAAuB,OAATpF,QAA0B,IAATA,OAAkB,EAASA,EAAK2F,mBAC/DtM,OAAO4C,KAAK0J,IAAkB7G,OAAS,IACzC4G,GAAyBzM,EAAAA,cAAoBmN,EAAAA,EAAAA,SAAkC,CAC7E3M,MAAOkM,IACN5M,IAEDD,IACF4M,GAAyBzM,EAAAA,cAAoBoN,EAAgB,CAC3DvN,OAAQA,EACRE,YJtRkB,gBIuRjB0M,MAEDlI,IAAiBC,MACnBiI,GAAyBzM,EAAAA,cAAoBqN,EAAAA,EAAAA,SAAsB,CACjE7M,MAAOgM,IACNC,KAED9I,IACF8I,GAAyBzM,EAAAA,cAAoBsN,EAAAA,EAAqB,CAChEC,KAAM5J,GACL8I,KAGLA,GAAyBzM,EAAAA,cAAoB6D,EAAe,KAAM4I,IAElE,IAAMe,GAAYxN,EAAAA,SAAc,WACxB,IAAA2M,EAAK9B,IAAe,CAAC,EAEvB4C,EAGEd,EAHFc,UACA/I,EAEEiI,EAFFjI,MACA2G,EACEsB,EADFtB,WAEFqC,EAAOxI,EAAOyH,EAAI,CAAC,YAAa,QAAS,eACrCgB,EAAWF,KAAeG,MAAMC,QAAQJ,IAAcA,EAAU5H,OAAS,IAAKiI,EAAAA,EAAAA,IAAYL,GAAaM,EAAAA,GACvGC,EAAmB,CAAC,EAc1B,OAbA5N,OAAO6N,QAAQ5C,GAAc,CAAC,GAAGlJ,SAAQ,SAAA+L,GACvC,IAAAC,GAAAlK,EAAAA,EAAAA,GAAsCiK,EAAK,GAAtC5C,EAAa6C,EAAA,GAAEC,EAAcD,EAAA,GAC5BE,EAAcjO,OAAOC,OAAO,CAAC,EAAG+N,GAClC,cAAeC,KACa,IAA1BA,EAAYZ,UACdY,EAAYpN,MAAQ0M,GACXC,MAAMC,QAAQQ,EAAYZ,YAA+C,oBAA1BY,EAAYZ,aACpEY,EAAYpN,OAAQ6M,EAAAA,EAAAA,IAAYO,EAAYZ,mBAEvCY,EAAYZ,WAErBO,EAAiB1C,GAAiB+C,CACpC,IACOjO,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqN,GAAO,CAC5CzM,MAAO0M,EACPjJ,MAAOtE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGiO,EAAAA,GAAmB5J,GAC1D2G,WAAY2C,GAEhB,GAAG,CAACnD,KAYJ,OAXI5J,IACFwL,GAAyBzM,EAAAA,cAAoBuO,EAAAA,GAAAA,SAA6B,CACxE/N,MAAOgN,IACNf,UAGqBT,IAAtBxI,IACFiJ,GAAyBzM,EAAAA,cAAoBwO,EAAAA,EAAyB,CACpEC,SAAUjL,GACTiJ,KAEezM,EAAAA,cAAoB0O,EAAAA,GAAAA,SAAwB,CAC9DlO,MAAO2L,IACNM,GACL,EACMkC,EAAiB,SAAAhP,GACrB,IAAMiP,EAAU5O,EAAAA,WAAiB0O,EAAAA,IAC3BG,EAAY7O,EAAAA,WAAiBO,EAAAA,GACnC,OAAoBP,EAAAA,cAAoB0G,EAAkBtG,OAAOC,OAAO,CACtEkH,cAAeqH,EACftH,aAAcuH,GACblP,GACL,EACAgP,EAAeD,cAAgBA,EAAAA,GAC/BC,EAAe/K,YAAcA,EAAAA,EAC7B+K,EAAe5C,OA1SS,SAAA+C,GACtB,IACEtE,EAGEsE,EAHFtE,UACAjG,EAEEuK,EAFFvK,cACAtD,EACE6N,EADF7N,WAEgB+K,IAAdxB,IACFxJ,EAAkBwJ,QAEEwB,IAAlBzH,IACFF,EAAsBE,GAEpBtD,KAfN,SAAuBA,GACrB,OAAOb,OAAO4C,KAAK/B,GAAOwK,MAAK,SAAAvI,GAAG,OAAIA,EAAI6L,SAAS,QAAQ,GAC7D,CAcQC,CAAc/N,GAIhBqD,EAAcrD,EAFdF,EAAciF,IAAsB/E,GAK1C,EAuRA0N,EAAeM,UAAYA,EAC3B7O,OAAO8O,eAAeP,EAAgB,cAAe,CACnDQ,IAAK,WAEH,OAAOvL,EAAAA,CACT,IAKF,wDG1WA,KAA4BwL,EAAAA,EAAAA,oBAAcpD,2GCHtCqD,EAAgBjP,OAAOC,OAAO,CAAC,EAAG2M,EAAAA,EAAAA,OAClCsC,EAAa,GACXC,EAAiB,WAAH,OAASD,EAAWE,QAAO,SAACC,EAAQ5P,GAAM,OAAKO,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGoP,GAAS5P,EAAO,GAAEmN,EAAAA,EAAAA,MAAoB,EAClI,SAAS/M,EAAoByP,GAClC,GAAIA,EAAW,CACb,IAAMC,EAAcvP,OAAOC,OAAO,CAAC,EAAGqP,GAGtC,OAFAJ,EAAWM,KAAKD,GAChBN,EAAgBE,IACT,WACLD,EAAaA,EAAWO,QAAO,SAAAhQ,GAAM,OAAIA,IAAW8P,CAAW,IAC/DN,EAAgBE,GAClB,CACF,CACAF,EAAgBjP,OAAOC,OAAO,CAAC,EAAG2M,EAAAA,EAAAA,MACpC,CACO,SAAS8C,IACd,OAAOT,CACT,iCCRA,IAAIU,EAAa,GACbC,EAAa,GAqBjB,SAASC,EAAGC,EAAGC,EAAGC,EAAQC,GACxB,GAAIH,IAAMC,EAER,OAAa,IAAND,GAAW,EAAIA,GAAK,EAAIC,EAGjC,GAAS,MAALD,GAAkB,MAALC,EAEf,OAAO,EAGT,GAAgB,iBAALD,GAA6B,iBAALC,EACjC,OAAO,EAGT,IAAIG,EAAWlQ,OAAOmF,UAAUgL,SAC5BC,EAAYF,EAAS7K,KAAKyK,GAE9B,GAAIM,GAAaF,EAAS7K,KAAK0K,GAC7B,OAAO,EAGT,OAAQK,GACN,IAAK,kBACH,OAAON,GAAKO,OAAON,GAErB,IAAK,kBACH,OAAOO,MAAMR,KAAMQ,MAAMP,IAAaD,GAAKS,OAAOR,GAEpD,IAAK,gBACL,IAAK,mBACH,OAAQD,IAAMC,EAEhB,IAAK,kBACH,OAAOD,EAAEU,QAAUT,EAAES,QAAUV,EAAEW,QAAUV,EAAEU,QAAUX,EAAEY,WAAaX,EAAEW,WAAaZ,EAAEa,YAAcZ,EAAEY,WAM3G,IAFA,IAAIlL,EAASuK,EAAOvK,OAEbA,KACL,GAAIuK,EAAOvK,IAAWqK,EACpB,OAAOG,EAAOxK,IAAWsK,EAI7BC,EAAOR,KAAKM,GACZG,EAAOT,KAAKO,GACZ,IAAI5C,EAAO,EAEX,GAAkB,mBAAdiD,EAAgC,CAGlC,IAFAjD,EAAO2C,EAAErK,UAEIsK,EAAEtK,OACb,OAAO,EAIT,KAAO0H,KACL,IAAK0C,EAAGC,EAAE3C,GAAO4C,EAAE5C,GAAO6C,EAAQC,GAChC,OAAO,CAGb,KAAO,CACL,GAAIH,EAAEc,cAAgBb,EAAEa,YACtB,OAAO,EAGT,GAAId,EAAE1K,eAAe,YAAc2K,EAAE3K,eAAe,WAClD,OAAO0K,EAAEe,WAAad,EAAEc,UAG1B,IAAIjO,EAAO5C,OAAO4C,KAAKkN,GAEvB,GAAIlN,EAAK6C,QAAUzF,OAAO4C,KAAKmN,GAAGtK,OAChC,OAAO,EAGT,IAAK,IAAID,EAAI,EAAGA,EAAI5C,EAAK6C,OAAQD,IAC/B,IAAKqK,EAAGC,EAAElN,EAAK4C,IAAKuK,EAAEnN,EAAK4C,IAAKwK,EAAQC,GACtC,OAAO,CAGb,CAIA,OAFAD,EAAOc,MACPb,EAAOa,OACA,CACT,CAEAC,EAAOC,QArGP,SAAkBlB,EAAGC,GACnB,IAAIC,EAASL,EAAWlK,OAASkK,EAAWmB,MAAQ,GAChDb,EAASL,EAAWnK,OAASmK,EAAWkB,MAAQ,GAChDrI,EAASoH,EAAGC,EAAGC,EAAGC,EAAQC,GAK9B,OAJAD,EAAOvK,OAAS,EAChBwK,EAAOxK,OAAS,EAChBkK,EAAWH,KAAKQ,GAChBJ,EAAWJ,KAAKS,GACTxH,CACT,iCCpBA,SAASwI,EAAkBC,GACzB,OAAO,WACL,OAAOA,CACT,CACF,CAQA,IAAIC,EAAgB,WAA0B,EAE9CA,EAAcC,YAAcH,EAC5BE,EAAcE,iBAAmBJ,GAAkB,GACnDE,EAAcG,gBAAkBL,GAAkB,GAClDE,EAAcI,gBAAkBN,EAAkB,MAElDE,EAAcK,gBAAkB,WAC9B,OAAOC,IACT,EAEAN,EAAcO,oBAAsB,SAAUR,GAC5C,OAAOA,CACT,EAEAH,EAAOC,QAAUG,qCCGjB,IAAIQ,EA/BgBC,EAAQ,MA4C5Bb,EAAOC,QAAUW,iCCLjBZ,EAAOC,QA5BS,SAASa,EAAWC,EAAQhC,EAAGC,EAAG9N,EAAG8P,EAAG/M,EAAGgN,GAOzD,IAAKH,EAAW,CACd,IAAII,EACJ,QAAerG,IAAXkG,EACFG,EAAQ,IAAIC,MACV,qIAGG,CACL,IAAIC,EAAO,CAACrC,EAAGC,EAAG9N,EAAG8P,EAAG/M,EAAGgN,GACvBI,EAAW,GACfH,EAAQ,IAAIC,MACVJ,EAAOO,QAAQ,OAAO,WAAa,OAAOF,EAAKC,IAAa,MAExDE,KAAO,qBACf,CAGA,MADAL,EAAMM,YAAc,EACdN,CACR,CACF,wBCrCAlB,EAAOC,QAAU,EAAjBD,mCCIA,SAASyB,EAAiBC,GACxB,OAAOA,EAAUC,aAAeD,EAAUH,MAAQ,WACpD,CAIAvB,EAAOC,QAAU,CACfwB,iBAAkBA,EAClBG,iBALF,SAA0BC,GACxB,MAAO,SAAWJ,EAAiBI,GAAa,GAClD,sCCLA,IAAIhT,EAAQgS,EAAQ,MAElBiB,EADajB,EAAQ,MACSkB,WAAWD,mBAC3C9B,EAAOC,QAAU6B,EAAmBjT,sCCHpC,IAAImT,EAAyBnB,EAAAA,MAAAA,QACzBoB,EAAiBD,EAAuBnB,EAAQ,OAChDqB,EAAiCF,EAAuBnB,EAAQ,OAChEsB,EAA0BH,EAAuBnB,EAAQ,OACzDuB,EAAkBJ,EAAuBnB,EAAQ,OACjDwB,EAAmBL,EAAuBnB,EAAQ,OAClDyB,EAAY,CAAC,eAAgB,iBAAkB,yBAC/CC,EAA2B1B,EAAQ,MAErCe,EADaf,EAAQ,MACOe,iBAE5BY,EADc3B,EAAQ,MACS2B,mBAC7BC,EAAW5B,EAAQ,MACnBhS,EAAQgS,EAAQ,MAChB6B,EAAY7B,EAAQ,MACtB8B,EAA6BD,EAAUC,2BACvCC,EAAuBF,EAAUE,qBACjCC,EAAmBH,EAAUG,iBAM/B,SAASC,EAA6BjB,EAAWkB,GAC/C,IAAIC,EACAC,EAAgBrB,EAAiBC,GACrC,OAAOmB,EAAsB,SAAUE,GAIrC,SAASF,EAAOxU,GACd,IAAI2U,EAAuBC,EAC3BA,EAAQF,EAAiB5O,KAAKoM,KAAMlS,IAAUkS,MAC9C,EAAI2B,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,6BAA6B,WAC5G,IAAIC,EAAyBD,EAAME,MAAMC,SACzCH,EAAMI,UAAS,SAAUC,GACvB,OAGEJ,IAA2BI,EAAaF,SAAW,CACjDG,KAAMD,EAAaF,SAASI,UAC5BC,UAAWC,EAAaJ,EAAaG,UAAUE,cAC7C,IAER,GACF,IACA,IAAIC,EAAevB,EAAmBhU,EAAMwV,gBACxCC,EAAgF,QAAzDd,EAAwB3U,EAAM0V,6BAA6D,IAA1Bf,GAAmCA,EAK3HI,EAAWZ,EAA2BoB,EAAcd,EAAeF,EAAWvU,EAAOyV,GAQzF,OAPAb,EAAME,MAAQ,CACZI,KAAMH,EAASI,UACfQ,UAAW3V,EACX4V,iBAAkBL,EAClBH,UAAWC,EAAaE,EAAaD,aACrCP,SAAUA,GAELH,CACT,EAlCA,EAAIhB,EAAyB,SAAGY,EAAQE,GAyCxCF,EAAOqB,yBAA2B,SAAkCC,EAAWC,GAC7E,IAAIC,EAGAL,EAAYI,EAAUJ,UACtBJ,EAAevB,EAAmB8B,EAAUN,gBAC5CC,EAAoF,QAA7DO,EAAwBF,EAAUJ,6BAA6D,IAA1BM,GAAmCA,EAC/HC,EAAU7B,EAAqBG,EAAWoB,GAC1CO,EAAU9B,EAAqBG,EAAWuB,GAC1Cf,EAAWgB,EAAUhB,SAOzB,GAAIgB,EAAUH,iBAAiBN,cAAgBC,EAAaD,cAAgBrB,EAASgC,EAASC,GAM5F,MAAO,CACLhB,MAFFH,EAAWZ,EAA2BoB,EAAcd,EAAeF,EAAWuB,EAAWL,IAExEN,UACfS,iBAAkBL,EAClBI,UAAWG,EACXV,UAAWC,EAAaE,EAAaD,aACrCP,SAAUA,GAGZA,EAASoB,SAASL,GAClB,IAAIZ,EAAOH,EAASI,UACpB,OAAID,IAASa,EAAUb,KACd,CACLA,KAAMA,EACNS,UAAWG,EACXF,iBAAkBL,EAClBH,UAAWC,EAAaE,EAAaD,cAIpC,IACT,EACA,IAAIc,EAAS5B,EAAO5O,UAuFpB,OAtFAwQ,EAAOC,kBAAoB,WACzBnE,KAAKoE,qDACP,EACAF,EAAOG,mBAAqB,SAA4BZ,EAAWI,GAC7D7D,KAAK4C,MAAMC,WAAagB,EAAUhB,UACpCgB,EAAUhB,SAASyB,UACnBtE,KAAKoE,uDAELpE,KAAKuE,4BAET,EACAL,EAAOM,qBAAuB,WAC5BxE,KAAK4C,MAAMC,SAASyB,SACtB,EACAJ,EAAOO,sBAAwB,SAA+Bb,EAAWc,GAEvE,GAAIA,EAAU1B,OAAShD,KAAK4C,MAAMI,KAChC,OAAO,EAKT,IADA,IAAI7R,EAAO5C,OAAO4C,KAAKyS,GACde,EAAK,EAAGA,EAAKxT,EAAK6C,OAAQ2Q,IAAM,CACvC,IAAItT,EAAMF,EAAKwT,GACf,GAAY,mBAARtT,GACF,GAAIqT,EAAUhB,iBAAiBN,cAAgBpD,KAAK4C,MAAMc,iBAAiBN,YACzE,OAAO,OAGT,IAAKf,EAAU1O,eAAetC,KAAS8Q,EAAiByB,EAAUvS,GAAM2O,KAAKlS,MAAMuD,IACjF,OAAO,CAGb,CACA,OAAO,CACT,EAKA6S,EAAOK,2BAA6B,WAClC,IAAIK,EAAc5E,KAAK4C,MACrBI,EAAO4B,EAAY5B,KAIjB6B,EAHSD,EAAY/B,SAGGI,UACxBD,IAAS6B,GACX7E,KAAK8C,SAAS,CACZE,KAAM6B,GAGZ,EACAX,EAAOE,oDAAsD,WAC3D,IAAIU,EAAe9E,KAAK4C,MACtBI,EAAO8B,EAAa9B,KACpBH,EAAWiC,EAAajC,SACtBgC,EAAehC,EAASI,UAI5BJ,EAASkC,YAAY/E,KAAKlS,MAAOkS,KAAKgF,2BAIlChC,IAAS6B,GACX7E,KAAK8C,SAAS,CACZE,KAAM6B,GAGZ,EAIAX,EAAOe,OAAS,WAEd,IAAIC,EAAclF,KAAKlS,MACrBqX,EAAeD,EAAYC,aAG3BrX,GAFiBoX,EAAY5B,eACL4B,EAAY1B,uBAC5B,EAAIhC,EAAwC,SAAG0D,EAAatD,IACtE,OAAOzT,EAAMiX,cAAcjE,GAAW,EAAII,EAAwB,UAAG,EAAIA,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGzT,GAAQkS,KAAK4C,MAAMI,MAAO,CAAC,EAAG,CACnKqC,IAAKF,EACLG,MAAOtF,KAAK4C,MAAMM,YAEtB,EACOZ,CACT,CA7K6B,CA6K3BnU,EAAMgT,YAAY,EAAIQ,EAA0B,SAAGW,EAAQ,cAAeC,GAAgBD,CAC9F,CACA,SAASa,EAAaC,GACpB,MAAO,CACLA,YAAaA,EAEjB,CAaA9D,EAAOC,QAAU,CACfgG,gBALF,SAAyBpE,EAAWqE,GAElC,OAAO3D,EAAyBV,EAAWqE,EAAcpD,EAC3D,sCCzNA,IAAIqD,EAAoBtF,EAAQ,MAC5BuF,EAAiCvF,EAAQ,MACzC4B,EAAW5B,EAAQ,MACnBhS,EAAQgS,EAAQ,MAChBwF,EAAWxF,EAAQ,MACrByF,EAA4BD,EAASC,0BAErCC,GADaF,EAASG,WACTH,EAASE,YACpBE,EAAkB5X,EAAM4X,gBAC1BC,EAAW7X,EAAM6X,SACjBC,EAAS9X,EAAM8X,OACf3M,EAAUnL,EAAMmL,QACd4M,EAAuB,CACzB3C,qBAAqB,GA2EvBjE,EAAOC,QA/DP,SAAsCzR,GACpC,IAAIsV,EAActV,EAAMsV,YACtB+C,EAAQrY,EAAMqY,MACd7W,EAAYxB,EAAMwB,UAClB2V,EAASnX,EAAMmX,OACbmB,EAfN,SAAwBzX,GACtB,IAAI0X,EAAclY,EAAM8X,OAAOtX,GAO/B,OANKoT,EAASsE,EAAY/T,QAAS3D,KAIjC0X,EAAY/T,QAAU3D,GAEjB0X,EAAY/T,OACrB,CAMwBgU,CAAehX,GACjCiX,EAAYjN,GAAQ,WACtB,IAAIkN,EAAUX,EAAWM,GACzB,OAAOP,EAA0BY,EAASJ,EAC5C,GAAG,CAACD,EAAOC,IACP/C,EAAe/J,GAAQ,WACzB,MAAO,CACL8J,YAAaA,EAEjB,GAAG,CAACA,IAIAqD,EAAUR,EAAO,MAEnBS,EADcV,EAAS,MACC,GACtBW,EAAeV,EAAO,MACtBW,EAAWtN,GAAQ,WACrB8J,EAAYyD,MAAMN,GAClB,IAAIO,EAAM1D,EAAY2D,OAAOR,EAAUS,UACvCP,EAAQnU,QAAUwU,EAAI9D,KAItB,IAAIiE,EAAmB7D,EAAY8D,OAAOX,GACtCY,EAAsB/D,EAAYgE,UAAUN,GAAK,SAAUO,GAC7DZ,EAAQnU,QAAU+U,EAAYrE,KAC9B0D,EAAYD,EAAQnU,QACtB,IACIgV,GAAW,EAaf,OAJIX,EAAarU,SACfqU,EAAarU,UAEfqU,EAAarU,QAXb,WACOgV,IACHA,GAAW,EACXX,EAAarU,QAAU,KACvB2U,EAAiB3C,UACjB6C,EAAoB7C,UAExB,EAKOwC,CACT,GAAG,CAAC1D,EAAamD,IAOjB,OANAR,GAAgB,WACd,IAAIwB,EAAYZ,EAAarU,QAC7B,OAAO,WACLiV,GAAaA,GACf,CACF,GAAG,CAACX,IACgBzY,EAAMiX,cAAcK,EAAkB+B,SAAU,CAClE7Y,MAAO0U,GACOlV,EAAMiX,cAAcM,EAA+B8B,SAAU,CAC3E7Y,MAAOuX,GACNjB,EAAO,CACRnX,MAAO2Y,EAAQnU,WAEnB,qCCvFA,IAAIgP,EAAyBnB,EAAAA,MAAAA,QACzBsH,EAAYnG,EAAuBnB,EAAQ,MAC3CqB,EAAiCF,EAAuBnB,EAAQ,OAChEsB,EAA0BH,EAAuBnB,EAAQ,OACzDuB,EAAkBJ,EAAuBnB,EAAQ,OACjDwB,EAAmBL,EAAuBnB,EAAQ,OAClDuH,EAAiBpG,EAAuBnB,EAAQ,OAChDyB,EAAY,CAAC,gBACf+F,EAAa,CAAC,eAAgB,iBAAkB,yBAChDC,EAAa,CAAC,eAAgB,iBAAkB,yBAC9C/F,EAA2B1B,EAAQ,MACnC0H,EAA+B1H,EAAQ,MACvCwF,EAAWxF,EAAQ,MACrBY,EAAmB4E,EAAS5E,iBAC5BG,EAAmByE,EAASzE,iBAC1BuE,EAAoBtF,EAAQ,MAC5B2H,EAAyB3H,EAAQ,MAEnC2B,EADc3B,EAAQ,MACS2B,mBAC7BC,EAAW5B,EAAQ,MACnB4H,EAAY5H,EAAQ,MACpBhS,EAAQgS,EAAQ,MAChB6B,EAAY7B,EAAQ,MACtB6H,EAAsBhG,EAAUgG,oBAChCC,EAAajG,EAAUiG,WACvBC,EAAoBlG,EAAUkG,kBAC9BjG,EAA6BD,EAAUC,2BACvC2D,EAA4B5D,EAAU4D,0BACtC1D,EAAuBF,EAAUE,qBACjC2D,EAAa7D,EAAU6D,WACvBsC,EAAyBnG,EAAUmG,uBACnChG,EAAmBH,EAAUG,iBAE3BiG,GADUjI,EAAQ,MACR,WAiLd,SAASkI,EAAWC,GAClB,MAAqC,oBAAvBA,EAAoC,CAChD9H,MAAO8H,EACPC,SAAUD,EACVE,YAAa,SAAqBC,GACF,oBAAvBH,GAAqCA,GAC9C,GACEA,GAAsB,CAAC,CAC7B,CACA,SAASlG,EAA6BjB,EAAWkB,EAAWqG,GAEtC3H,EAAiBI,GADrC,IAAImB,EAEAC,EAAgBrB,EAAiBC,GACjCwH,EApCN,SAAgCtG,GAC9B,IAAIuG,EAA0B,KAC1BC,GAAgB,EACpB,IAAK,IAAIC,KAAgBzG,EAAW,CAClC,IAAI2E,EAAW3E,EAAUyG,GACrBC,EAAqB/B,EAAS2B,UAAY3B,EAAS2B,SAASK,gBAItC7O,IAAtB6M,EAAS2B,WACXE,GAAgB,GAEdE,IAC8B,IAA9BA,EAAmB/U,QAAgN+T,GAAU,GAC7Oa,GAAkLb,GAAU,GAC9La,GAA0B,EAAIlB,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGqB,EAAmB,IAAK,CAAC,EAAG,CACtHD,aAAcA,IAGpB,CAEA,OADGD,GAA6C,OAA5BD,GAA0Kb,GAAU,GACjMa,GAA2B,CAAC,CACrC,CAciBK,CAAuB5G,GAClC6G,EAAyBR,EAAiBQ,wBA1DhD,SAAsCP,GACpC,IAAI3V,EAAO2V,EAAS3V,KAEpB,OADCA,GAAiK+U,GAAU,GACrK,SAAUja,GAEf,IADA,IAAIkV,EAAOlV,EAAM6a,EAASG,cACjB/U,EAAI,EAAGA,EAAIf,EAAKgB,OAAQD,IAAK,CACpC,IAAKiP,GAAwB,kBAATA,EAClB,OAAO,KAETA,EAAOA,EAAKhQ,EAAKe,GACnB,CACA,OAAOiP,CACT,CACF,CA6C0EmG,CAA6BR,GACjGxT,EAAYuT,EAAiBvT,WAAawT,EAASxT,UACtDA,GAA8M4S,GAAU,GACzN,IAAIqB,EAAuBV,EAAiBU,sBA/C9C,SAAoCT,GAClC,IAAIU,EAAgBV,EAASW,MAE7B,OADCD,GAAwKtB,GAAU,GAC5K,SAAUwB,EAAUC,GACzB,OAAO,EAAI9B,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAG6B,GAAW,CAAC,GAAG,EAAI5H,EAA0B,SAAG,CAAC,EAAG0H,EAAeG,GAC9I,CACF,CAyCsEC,CAA2Bd,GAC/F,OAAOrG,EAAsB,SAAUE,GAIrC,SAASF,EAAOxU,GACd,IAAI2U,EAAuBC,EAC3BA,EAAQF,EAAiB5O,KAAKoM,KAAMlS,IAAUkS,MAC9C,EAAI2B,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,6BAA6B,WAC5GA,EAAMI,SAAS,CACbE,KAAMN,EAAMgH,UAAUzG,WAE1B,KACA,EAAItB,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,YAAY,WAC3F,IAAIiH,EAAiBjH,EAAMkH,qBAC3B,SAAUD,GAAkBA,EAAeE,SAAWF,EAAeG,OACvE,KACA,EAAInI,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,cAAc,WAC7F,QAASA,EAAMqH,oBACjB,KACA,EAAIpI,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,sBAAsB,SAAU8G,EAAYlB,EAAoB0B,GAC/I,IAAKtH,EAAMuH,cAAc,qBACvB,MAAO,CACL3F,QAAS,WAAoB,GAGjC5B,EAAMwH,kBAAoBF,EAC1B,IAAIG,EAAsB,CACxBb,MAAOE,EACPM,OAAQ,KACRN,WAAYA,GAKd,MAAO,CACLlF,QAJU5B,EAAM0H,WAAWD,EAAqB9B,EAAWC,GAAqB,CAChF+B,OAAO,IAGQ7B,YAEnB,KACA,EAAI7G,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,aAAa,SAAU4H,EAAUhC,EAAoBiC,GACpI,IAAK7H,EAAMuH,cAAc,YACvB,MAAO,CACL3F,QAAS,WAAoB,GAGjC,IAAIkG,EAAWnC,EAAWC,GACtBqB,EAAiBjH,EAAMkH,qBAC3B,IAAKD,EAIH,OAHA1B,EAAWwC,QAAO,SAAUC,GAC1B,OAAOA,EAAKnC,UACd,IAAGnB,UAAUoD,GACN,KAET,IAAIhB,EAAaG,EAAegB,UAAYL,EAC5C,GAAIC,GAAWA,EAAQF,MACrB,OAAO3H,EAAMkI,mBAAmBpB,EAAYlB,GAE9C,IAAIuC,EAAwB7C,EAAoB1K,MAK5C6M,GAJWU,EAAsBC,WACpBD,EAAsBE,aAGb,CACxBzB,MAAOgB,EACPR,OAJWH,EAAeG,OAK1BN,WAAYA,IAGd,MAAO,CACLlF,QAFU5B,EAAM0H,WAAWD,EAAqBK,EAAUD,GAE3C/B,YAEnB,IACA,IAAInF,EAAevB,EAAmBhU,EAAMwV,gBACxCC,EAAgF,QAAzDd,EAAwB3U,EAAM0V,6BAA6D,IAA1Bf,GAAmCA,EAkB/H,OAjBAC,EAAMsI,qBAAsB,EAC5BtI,EAAMqH,qBAAuB,KAC7BrH,EAAMwH,kBAAoB,MACsC,IAA5DhC,EAAkB+C,sCACpBvI,EAAMgH,UAAYzH,EAA2BoB,EAAcd,EAAeF,EAAWvU,EAAOyV,GAE5Fb,EAAMgH,UAAYzH,EAA2BoB,EAAcd,EAAeF,EAAWvU,EAAOyV,EAAqBb,EAAMsC,2BAEzHtC,EAAME,MAAQ,CACZI,KAAMN,EAAMgH,UAAUzG,UACtBiI,YAAa7H,EACb8H,mBAAoB9H,EACpBH,UAAWR,EAAM0I,gBAAgB/H,GACjCgI,mBAAoB,GAEtB3I,EAAM4I,cAAe,EACrB5I,EAAM6I,aAAc,EACb7I,CACT,EA1FA,EAAIhB,EAAyB,SAAGY,EAAQE,GA2FxC,IAAI0B,EAAS5B,EAAO5O,UAySpB,OAxSAwQ,EAAOC,kBAAoB,WACzBnE,KAAKsL,cAAe,GAC4C,IAA5DpD,EAAkB+C,uCACpBjL,KAAKoE,qDAET,EACAF,EAAOG,mBAAqB,SAA4BZ,EAAWI,IACD,IAA5DqE,EAAkB+C,wCAChBpH,EAAUwH,qBAAuBrL,KAAK4C,MAAMyI,mBAC9CrL,KAAKoE,sDAELpE,KAAKuE,6BAGX,EAOAL,EAAOsH,iCAAmC,SAA0C5H,GAClF,IACIE,EADA2H,EAASzL,KAETqD,EAAevB,EAAmB8B,EAAUN,gBAC5CC,EAAoF,QAA7DO,EAAwBF,EAAUJ,6BAA6D,IAA1BM,GAAmCA,EAC/HC,EAAU7B,EAAqBG,EAAWrC,KAAKlS,OAC/CkW,EAAU9B,EAAqBG,EAAWuB,GAC1C8H,EAAoB7D,EAA6BxF,EAAWrC,KAAKlS,OACjE6d,EAAoB9D,EAA6BxF,EAAWuB,GAO5DP,EAAaD,cAAgBpD,KAAK4C,MAAMsI,YAAY9H,aAAgBrB,EAAS2J,EAAmBC,IAAuB5J,EAASgC,EAASC,GAgBjIhE,KAAKuL,aACfvL,KAAK0J,UAAUzF,SAASL,IAhBxB5D,KAAK4L,YAE2D,IAA5D1D,EAAkB+C,sCACpBjL,KAAK0J,UAAYzH,EAA2BoB,EAAcd,EAAeF,EAAWuB,EAAWL,GAE/FvD,KAAK0J,UAAYzH,EAA2BoB,EAAcd,EAAeF,EAAWuB,EAAWL,EAAqBvD,KAAKgF,2BAE3HhF,KAAK8C,UAAS,SAAUe,GACtB,MAAO,CACLqH,YAAa7H,EACb8H,mBAAoB9H,EACpBH,UAAWuI,EAAOL,gBAAgB/H,GAClCgI,mBAAoBxH,EAAUwH,mBAAqB,EAEvD,KAIF,IAAIrI,EAAOhD,KAAK0J,UAAUzG,UACtBD,IAAShD,KAAK4C,MAAMI,MACtBhD,KAAK8C,SAAS,CACZE,KAAMA,GAGZ,EACAkB,EAAOM,qBAAuB,WAC5BxE,KAAKsL,cAAe,EACpBtL,KAAK4L,UACP,EACA1H,EAAOO,sBAAwB,SAA+Bb,EAAWc,GAEvE,GAAIA,EAAU1B,OAAShD,KAAK4C,MAAMI,MAAQ0B,EAAUxB,YAAclD,KAAK4C,MAAMM,WAAawB,EAAU2G,qBAAuBrL,KAAK4C,MAAMyI,mBACpI,OAAO,EAKT,IADA,IAAIla,EAAO5C,OAAO4C,KAAKyS,GACde,EAAK,EAAGA,EAAKxT,EAAK6C,OAAQ2Q,IAAM,CACvC,IAAItT,EAAMF,EAAKwT,GACf,GAAY,mBAARtT,GACF,GAAIqT,EAAUwG,YAAY9H,cAAgBpD,KAAK4C,MAAMsI,YAAY9H,YAC/D,OAAO,OAGT,IAAKf,EAAU1O,eAAetC,KAAS8Q,EAAiByB,EAAUvS,GAAM2O,KAAKlS,MAAMuD,IACjF,OAAO,CAGb,CACA,OAAO,CACT,EACA6S,EAAOkH,gBAAkB,SAAyB/H,GAChD,MAAO,CACLwG,QAAS7J,KAAK6L,SACdC,UAAW9L,KAAK+L,WAChBC,SAAUhM,KAAKiM,UACfC,kBAAmBlM,KAAK4K,mBACxBxH,YAAaC,EAAaD,YAE9B,EACAc,EAAOK,2BAA6B,WAClC,IAAIvB,EAAOhD,KAAK4C,MAAMI,KAGlB6B,EAAe7E,KAAK0J,UAAUzG,UAC9BD,IAAS6B,GACX7E,KAAK8C,SAAS,CACZE,KAAM6B,GAGZ,EACAX,EAAOE,oDAAsD,WAC3D,IAAIpB,EAAOhD,KAAK4C,MAAMI,KAClB6B,EAAe7E,KAAK0J,UAAUzG,UAIlCjD,KAAK0J,UAAU3E,YAAY/E,KAAKlS,MAAOkS,KAAKgF,2BAIxChC,IAAS6B,GACX7E,KAAK8C,SAAS,CACZE,KAAM6B,GAGZ,EAKAX,EAAO0F,mBAAqB,WAG1B,IAAI1E,EAAclF,KAAKlS,MAErBqe,GADIjH,EAAYC,cACJ,EAAI3D,EAAwC,SAAG0D,EAAatD,IACtE9T,GAAQ,EAAI4Z,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGyE,GAAYnM,KAAK4C,MAAMI,MACjG2G,EAAiBT,EAAuBpb,GAC5C,GAAsB,MAAlB6b,EACF,OAAO,KAET,IAAIyC,EAAyBpE,EAAoB1K,MAC/C+O,EAAQD,EAAuBC,MAC/BC,EAAYF,EAAuBE,UACnCC,EAAgBH,EAAuBG,cACvCC,EAAgBJ,EAAuBI,cACvC1B,EAAasB,EAAuBtB,WACpCC,EAAeqB,EAAuBrB,aACZ,kBAAnBpB,GAAqS5B,GAAU,GACxT,IAAI0E,EAAQ9C,EAAe0C,GACvBK,EAAW/C,EAAe2C,GAC9B,GAAa,MAATG,GAA6B,MAAZC,EACnB,OAAO,KAER3Q,MAAMC,QAAQyQ,IAAiO1E,GAAU,GACpO,kBAAb2E,GAAyP3E,GAAU,GAC5Q,IAAI8B,EAAU1U,IAAciT,EAAUsE,EAASH,GAAiBG,EAASF,GACrE1C,EAAS3U,IAAciT,EAAUsE,EAAS5B,GAAc4B,EAAS3B,GACrE,MAAuB,mBAAZlB,GAA0C,IAAjB4C,EAAMzY,QAAkC,qBAAX8V,EAExD,KAEF,CACLA,OAAQA,EACRa,UAAW8B,EAAMzY,OACjB6V,QAASA,EAEb,EACA3F,EAAOyI,iBAAmB,WAIxB,OAHK3M,KAAK4M,gBACR5M,KAAK4M,cAAgB,IAAI9E,GAEpB9H,KAAK4M,aACd,EACA1I,EAAO+F,cAAgB,SAAuB4C,GAC5C,OAAI7M,KAAKsL,YAKX,EACApH,EAAOkG,WAAa,SAAoBD,EAAqBK,EAAUD,GACrE,IASIuC,EATAC,EAAS/M,KAEXoD,EADwBtB,EAAmB9B,KAAKlS,MAAMwV,gBACpBF,YAChC4J,EAAehN,KAAKlS,MAItBqe,GAHIa,EAAa7H,aACA6H,EAAa1J,eACN0J,EAAaxJ,uBACzB,EAAIhC,EAAwC,SAAGwL,EAAcrF,IACvE7Z,GAAQ,EAAI4Z,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGyE,GAAYnM,KAAK4C,MAAMI,MAEjGiK,EAAgBpF,EAA6BxF,EAAW8J,GAC5DW,EAAoB3E,EAAuB9F,EAAW8J,GACtDW,GAAoB,EAAIpF,EAAwB,UAAG,EAAIA,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGuF,GAAgBH,GAAoB9M,KAAKkK,mBAC9J,IAAIgD,EAAiBxE,EAAiByE,aAAarf,EAAO,CACxDwb,MAAOa,EAAoBb,MAC3BQ,OAAQK,EAAoBL,QAC3BgD,IACyB,kBAAnBI,GAAkD,OAAnBA,IAA6NnF,GAAU,GAC/QmF,GAAiB,EAAIxF,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGwF,GAAiBlN,KAAKkK,mBACzG4C,GAAoB,EAAIpF,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGwF,GAAiBJ,GACvG,IAAIM,EAAc7C,EAAU,CAC1BF,QAASE,EAAQF,YACflQ,EACe,MAAfiT,GAA+F,OAA3D,OAAZ7C,QAAgC,IAAZA,OAAqB,EAASA,EAAQ5B,YACpFyE,EAAYzE,SAAuB,OAAZ4B,QAAgC,IAAZA,OAAqB,EAASA,EAAQ5B,UAEnF,IAAInC,EAAUX,EAAW6C,EAAiBvC,OACtCI,EAAYX,EAA0BY,EAAS0G,EAAgBE,GAC/DC,EAAsB,KACtBrN,KAAK+J,sBACP/J,KAAK+J,qBAAqBvB,cAE5BxI,KAAKuL,aAAc,EACnB,IAyBI+B,EAAU,WACRP,EAAOhD,uBAAyBsD,IAClCN,EAAOhD,qBAAuB,KAC9BgD,EAAO/B,qBAAsB,EAEjC,EAqBA,OApBAhL,KAAKgL,qBAAsB,EAC3BqC,EAAsBrN,KAAK2M,mBAAmBY,QAAQ,CACpDnK,YAAaA,EACbmD,UAAWA,EACXiH,4BAA4B,IAC3BC,UAAS,SAAUC,GACpB,OAAOzF,EAAWwC,QAAO,SAAUC,IArCxB,SAAgBgD,EAASnF,GACpC,IAAIoF,EAAWZ,EAAOrD,UAAUzG,UAChC8J,EAAOrD,UAAUkE,aAAaxE,EAAqB0D,EAAmB3C,EAAoBX,YAAajD,EAAUC,QAAQqH,MACzH,IAAIC,EAAWf,EAAOrD,UAAUzG,UAW3BlB,EAAS4L,EAAUG,GAQtBvF,IAPAwE,EAAOjK,SAAS,CACdE,KAAM8K,EACN3C,mBAAoB,CAClB/H,YAAa2J,EAAOjf,MAAMwV,eAAeF,cAE1CmF,EAIP,CAcIwF,CAAOL,GAAS,WACdhD,EAAK/Q,OACL+Q,EAAKnC,UACP,GACF,GACF,IAEK,GAAE,CACL/H,MAAO8M,EACP/E,SAAU+E,EACV9E,YAAa8E,IACZlG,UAAUoD,GAAY,CAAC,GAC1BxK,KAAK+J,qBAAuB/J,KAAKgL,oBAAsBqC,EAAsB,KACtEA,CACT,EACAnJ,EAAO0H,SAAW,WAChB5L,KAAK0J,UAAUpF,UACftE,KAAKkK,kBAAoB,KACzBlK,KAAKuL,aAAc,EACfvL,KAAK+J,uBACP/J,KAAK+J,qBAAqBvB,cAC1BxI,KAAK+J,qBAAuB,KAC5B/J,KAAKgL,qBAAsB,GAEzBhL,KAAK4M,eACP5M,KAAK4M,cAActI,SAEvB,EAIAJ,EAAOe,OAAS,WAEd,IAAI+I,EAAehO,KAAKlS,MACtBqX,EAAe6I,EAAa7I,aAG5BrX,GAFiBkgB,EAAa1K,eACN0K,EAAaxK,uBAC7B,EAAIhC,EAAwC,SAAGwM,EAAcpG,IACvE,OAAoBzZ,EAAMiX,cAAcK,EAAkB+B,SAAU,CAClE7Y,MAAOqR,KAAK4C,MAAMuI,oBACJhd,EAAMiX,cAAcjE,GAAW,EAAIsG,EAAmB,SAAG,CAAC,EAAG3Z,EAAOkS,KAAK4C,MAAMI,KAAM,CACnGqC,IAAKF,EACLG,MAAOtF,KAAK4C,MAAMM,aAEtB,EACOZ,CACT,CAtY6B,CAsY3BnU,EAAMgT,YAAY,EAAIQ,EAA0B,SAAGW,EAAQ,cAAeC,GAAgBD,CAC9F,CAeAhD,EAAOC,QAAU,CACfgG,gBAPF,SAAyBpE,EAAWqE,EAAckD,GAEhD,OAAO7G,EAAyBV,EAAWqE,GAAc,SAAUyI,EAAgB5L,GACjF,OAAOD,EAA6B6L,EAAgB5L,EAAWqG,EACjE,GACF,sCCznBA,IACI/G,GAAmBL,EADMnB,EAAAA,MAAAA,SACiBA,EAAQ,OAClD4H,EAAY5H,EAAQ,MACpBwF,EAAWxF,EAAQ,MACrB+N,EAAavI,EAAStE,WAAW6M,WACjCtI,EAA4BD,EAASC,0BACrCuI,EAA2BxI,EAASwI,yBAClCrG,EAAsC,WACxC,SAASA,EAAuBpH,IAC9B,EAAIiB,EAA0B,SAAG3B,KAAM,uBAAwB,KAC/D,EAAI2B,EAA0B,SAAG3B,KAAM,mBAAmB,GAC9C,MAARU,IACFV,KAAKoO,yBAA2B1N,EAAK2N,wBACrCrO,KAAKsO,qBAAuB5N,EAAK6N,oBAErC,CACA,IAAIrK,EAAS4D,EAAuBpU,UA4PpC,OA3PAwQ,EAAOsK,uBAAyB,WAC9B,MAAO,CACLH,wBAAyBrO,KAAKoO,yBAC9BG,oBAAqBvO,KAAKsO,qBAE9B,EACApK,EAAOuK,cAAgB,SAAuBrL,EAAamD,EAAWmI,GACpE,MAAoB,sBAAhBA,GAAuD,qBAAhBA,GACG,cAAxCtL,EAAYyD,MAAMN,GAAWoI,OAK5B,MAJH3O,KAAK4O,uBAAuBxL,EAAamD,GAClCnD,EAAY2D,OAAOR,EAAUS,UAI1C,EACA9C,EAAO2K,eAAiB,WACtB,OAAI7O,KAAK8O,gBAEY,MAAf9O,KAAK+O,OACA,CACLvO,MAAOR,KAAK+O,QAEa,MAAlB/O,KAAKgP,UACP,CACLpI,SAAU5G,KAAKgP,gBAFZ,EAMA,IAEX,EACA9K,EAAOqJ,QAAU,SAAiBtQ,GAChC,IAAIyF,EAAQ1C,KACRoD,EAAcnG,EAAKmG,YACrBmD,EAAYtJ,EAAKsJ,UACjB0I,EAAwBhS,EAAKuQ,2BAC7BA,OAAuD,IAA1ByB,GAA2CA,EACtEC,EAAY9L,EAAY8D,OAAOX,GAC/B/F,EAAQ,WAGVkC,EAAM4L,qBAAuB5L,EAAM4L,qBAAqBzf,OAAOqgB,EACjE,EACI3G,EAAW,WACRiF,GACH9K,EAAMyM,6BAERzM,EAAM4L,qBAAuB5L,EAAM4L,qBAAqBzf,OAAOqgB,EACjE,EACI1G,EAAc,WAGhB9F,EAAM4L,qBAAuB5L,EAAM4L,qBAAqBzf,OAAOqgB,EACjE,EACA,OAAKf,EAAyB/K,GASvB8K,EAAW9K,EAAamD,GAAe,GAAE,CAC9C/F,MAAOA,EACP+H,SAAUA,EACVC,YAAaA,IAXNpF,EAAYmK,QAAQ,CACzBhH,UAAWA,IACN,GAAE,CACP/F,MAAOA,EACP+H,SAAUA,EACVC,YAAaA,GAQnB,EACAtE,EAAOkL,gBAAkB,SAAyBC,GAC/CrP,KAAKsP,eAA4KvH,GAAU,GAChK,oBAAjBsH,IAGTrP,KAAKsP,cAAcC,sBAAwBvP,KAAKsP,cAAcC,uBAAyB,GACvFvP,KAAKsP,cAAcC,sBAAsBxR,KAAKsR,GAC1CrP,KAAK8O,kBAEY,MAAf9O,KAAK+O,OACPM,EAAa,CACX7O,MAAOR,KAAK+O,SAEa,MAAlB/O,KAAKgP,WACdK,EAAa,CACXzI,SAAU5G,KAAKgP,aAKzB,EAWA9K,EAAOsL,MAAQ,SAAeC,EAAcC,GAC1C,IAKIX,EALAtD,EAASzL,KACToD,EAAcqM,EAAarM,YAC7BmD,EAAYkJ,EAAalJ,UACzB8I,EAAeI,EAAaJ,aAC1BM,GAAmB,EAEvB3P,KAAK4P,iBACL,IAAIC,EAA2B7P,KAAKsP,eAAiBtP,KAAKsP,cAAcC,sBACxEvP,KAAKsP,cAAgB,CACnBlM,YAAaA,EACbmM,sBAAuBM,GAA4B,GACnDtJ,UAAWA,GAET8I,IAAoF,IAApErP,KAAKsP,cAAcC,sBAAsB1b,QAAQwb,IAEnErP,KAAKsP,cAAcC,sBAAsBxR,KAAKsR,GAEhD,IAAIS,EAAoBJ,EAAsB9J,EAA0BW,EAAUC,QAAQqH,KAAMtH,EAAUC,QAAQlX,UAAWogB,GAAuBnJ,EAChJC,EAAUxG,KAAKuN,QAAQ,CACzBnK,YAAaA,EACbmD,UAAWuJ,IACD,SAAE,WACZrE,EAAOsE,gBAAkB,IAC3B,IAAG3I,UAAU,CACXzN,KAAM,WAGJ8R,EAAOqD,iBAAkB,EACzBrD,EAAOsD,OAAS,KAIhBtD,EAAOuE,sBAAsB,CAC3BC,kBAAmBN,GAEvB,EACAnP,MAAO,SAAe0P,GAGpBzE,EAAOqD,iBAAkB,EACzBrD,EAAOsD,OAASmB,EAChBzE,EAAOuD,UAAY,KACnB,IAAIO,EAAwB9D,EAAO6D,eAAiB7D,EAAO6D,cAAcC,sBAIrEI,EACEJ,GACFA,EAAsBjf,SAAQ,SAAU+e,GACtCA,EAAa,CACX7O,MAAO0P,GAEX,IAGFnB,EAASmB,CAEb,IAQF,GANAlQ,KAAK+P,gBAAkB,CACrBzL,QAAS,WACPkC,EAAQgC,aACV,GAEFmH,GAAmB,EACfZ,EACF,MAAMA,EAER,OAAO/O,KAAKgP,SACd,EACA9K,EAAOiM,MAAQ,SAAeT,GAE5B,OADC1P,KAAKsP,eAA2JvH,GAAU,GACpK/H,KAAKwP,MAAM,CAChBpM,YAAapD,KAAKsP,cAAclM,YAChCmD,UAAWvG,KAAKsP,cAAc/I,UAC9B8I,aAAc,MACbK,EACL,EACAxL,EAAOI,QAAU,WACftE,KAAK4P,iBACL5P,KAAKmP,4BACP,EACAjL,EAAO0L,eAAiB,WACtB5P,KAAK+O,OAAS,KACd/O,KAAKgP,UAAY,KAGbhP,KAAK+P,iBACP/P,KAAK+P,gBAAgBzL,UAEnBtE,KAAKoQ,oBACPpQ,KAAKoQ,kBAAkB9L,UACvBtE,KAAKoQ,kBAAoB,KAE7B,EACAlM,EAAO0K,uBAAyB,SAAgCxL,EAAamD,GAC3EvG,KAAKqQ,kCACLrQ,KAAKoO,yBAA2BhL,EAAY8D,OAAOX,EACrD,EACArC,EAAOmM,gCAAkC,WACvCrQ,KAAKoO,0BAA4BpO,KAAKoO,yBAAyB9J,UAC/DtE,KAAKoO,yBAA2B,IAClC,EACAlK,EAAOiL,2BAA6B,WAClCnP,KAAKqQ,kCACLrQ,KAAKsO,qBAAqBhe,SAAQ,SAAUggB,GAC1C,OAAOA,EAAEhM,SACX,IACAtE,KAAKsO,qBAAuB,EAC9B,EACApK,EAAO8L,sBAAwB,SAA+B3T,GAC5D,IAAI0Q,EAAS/M,KACTiQ,EAAoB5T,EAAM4T,kBAC7BjQ,KAAKsP,eAAkLvH,GAAU,GAClM,IAAIwI,EAAsBvQ,KAAKsP,cAC7BlM,EAAcmN,EAAoBnN,YAClCmM,EAAwBgB,EAAoBhB,sBAC5ChJ,EAAYgK,EAAoBhK,UAKlC,IAAIvG,KAAKgP,YAGThP,KAAKgP,UAAY5L,EAAY2D,OAAOR,EAAUS,UAG9ChH,KAAKoQ,kBAAoBhN,EAAYgE,UAAUpH,KAAKgP,WAAW,SAAUpI,GAEvE,GAA4B,MAAxBmG,EAAOuC,cAAuB,CAChC,IAAIkB,EAAgCzD,EAAOuC,cAAcC,sBACrDxT,MAAMC,QAAQwU,IAChBA,EAA8BlgB,SAAQ,SAAU+e,GAC9C,OAAOA,EAAa,CAClBzI,SAAUA,GAEd,GAEJ,CACF,IACI5G,KAAKgP,WAAaiB,GAAqBlU,MAAMC,QAAQuT,IAAwB,CAC/E,IAAI3I,EAAW5G,KAAKgP,UACpBO,EAAsBjf,SAAQ,SAAU+e,GACtC,OAAOA,EAAa,CAClBzI,SAAUA,GAEd,GACF,CACF,EACOkB,CACT,CAtQ0C,GAuQ1CxI,EAAOC,QAAUuI,qCC9QjB,IAAIxG,EAAyBnB,EAAAA,MAAAA,QACzBoB,EAAiBD,EAAuBnB,EAAQ,OAChDsB,EAA0BH,EAAuBnB,EAAQ,OACzDuB,EAAkBJ,EAAuBnB,EAAQ,OACjDwB,EAAmBL,EAAuBnB,EAAQ,OAClDsF,EAAoBtF,EAAQ,MAC5B2H,EAAyB3H,EAAQ,MACjCuF,EAAiCvF,EAAQ,MACzC4B,EAAW5B,EAAQ,MACnBhS,EAAQgS,EAAQ,MAElB+H,EADa/H,EAAQ,MACQ+H,kBAC3BuI,EAAYtQ,EAAQ,MACtByF,EAA4B6K,EAAU7K,0BAEtCC,GADa4K,EAAU3K,WACV2K,EAAU5K,YAMrB6K,EAAe,CAAC,EAChBxK,EAAuB,CACzB3C,qBAAqB,GAYnBoN,EAAuC,SAAUnO,GAEnD,SAASmO,EAAwB7iB,GAC/B,IAAI4U,EACJA,EAAQF,EAAiB5O,KAAKoM,KAAMlS,IAAUkS,MAQ9C,EAAI2B,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,qBAAqB,SAAUkO,GAC9G,IAAIpQ,EAAwB,MAAhBoQ,EAAOpQ,MAAgB,KAAOoQ,EAAOpQ,MAC7CoG,EAA8B,MAAnBgK,EAAOhK,SAAmB,KAAOgK,EAAOhK,SACvDlE,EAAMI,UAAS,SAAUe,GACvB,IAAIgN,EAAsBhN,EAAUiN,gBAMpC,OALID,UACKH,EAAaG,GAIlBjK,IAAa/C,EAAU+C,UAAYpG,IAAUqD,EAAUrD,MAClD,KAEF,CACLuQ,YAAaC,EAAexQ,EAAOoG,EAAU/C,EAAUoN,aAAcpN,EAAUqN,gBAC/EtK,SAAUA,EACVkK,gBAAiB,KAErB,GACF,IACA,IAIIG,EACAH,EALAI,EAAiB,CACnBC,iBAAkB,KAClBC,sBAAuB,MAIzB,GAAItjB,EAAMqY,MAAO,CACf,IAAIA,EAAQrY,EAAMqY,MAElB2K,EAAkBO,EADJxL,EAAWM,GACoByK,OAAQ9iB,EAAMwB,WAC3D2hB,EAAeP,EAAaI,GAAmBJ,EAAaI,GAAiBG,aAAe,IAAInJ,CAClG,MACEmJ,EAAe,IAAInJ,EAUrB,OARApF,EAAM4O,2BAA4B,EAClC5O,EAAME,OAAQ,EAAIrB,EAAwB,SAAG,CAC3CgQ,qBAAsBzjB,EAAMsV,YAC5BoO,mBAAoB1jB,EAAMwB,UAC1BmiB,UAAW3jB,EAAMqY,MACjB8K,aAAcA,EACdC,eAAgBA,GACfQ,EAAmC5jB,EAAOmjB,EAAcC,EAAgBJ,IACpEpO,CACT,EAtDA,EAAIhB,EAAyB,SAAGiP,EAAyBnO,GAuDzDmO,EAAwBhN,yBAA2B,SAAkCC,EAAWC,GAC9F,OAAIA,EAAU4N,YAAc7N,EAAUuC,OAAStC,EAAU0N,uBAAyB3N,EAAUR,aAAgBrB,EAAS8B,EAAU2N,mBAAoB5N,EAAUtU,WAGtJ,KAFEqiB,EAAyB/N,EAAWC,EAG/C,EACA,IAAIK,EAASyM,EAAwBjd,UA0GrC,OAzGAwQ,EAAOC,kBAAoB,WACzB,IAAIsH,EAASzL,KACb,IAAuC,IAAnCA,KAAKsR,0BAoCP,OA7BAtR,KAAKsR,2BAA4B,OAEjCtR,KAAK8C,UAAS,SAAUe,GACtB,IAAI+N,EAAWD,EAAyBlG,EAAO3d,MAAO+V,GAClDiN,EAAkBc,EAASd,gBAC7BG,EAAeW,EAASX,aAC1B,GAAuB,MAAnBH,GAA4D,MAAjCJ,EAAaI,GAC1C,GAAI5I,EAAkB2J,2CAA4C,CAChE,IAAIC,EAAcb,EAAapC,iBAC/B,GAAmB,MAAfiD,EAAqB,CACvB,IAAIC,EAAuBC,EACvBpL,EAA8D,QAAlDmL,EAAwBD,EAAYlL,gBAAgD,IAA1BmL,EAAmCA,EAAwB,KACjIvR,EAAqD,QAA5CwR,EAAqBF,EAAYtR,aAA0C,IAAvBwR,EAAgCA,EAAqB,KAClHnB,EAAsBhN,EAAUiN,gBACT,MAAvBD,UACKH,EAAaG,GAEtBe,EAASb,YAAcC,EAAexQ,EAAOoG,EAAUqK,EAAcpN,EAAUqN,gBAC/EU,EAAShL,SAAWA,EACpBgL,EAASd,gBAAkB,IAC7B,MACEG,EAAa7B,gBAAgB3D,EAAOwG,kBAExC,MACEhB,EAAa7B,gBAAgB3D,EAAOwG,mBAGxC,OAAOL,CACT,IAGF,IAAIhN,EAAc5E,KAAK4C,MACrBsO,EAAiBtM,EAAYsM,eAC7BD,EAAerM,EAAYqM,aAC3BH,EAAkBlM,EAAYkM,gBAE5BA,UACKJ,EAAaI,GAEtBI,EAAeC,iBAAmBnR,KAAKiS,kBACvCf,EAAeE,sBAAwB,SAAU5Q,GAC/C,OAAOiL,EAAO3I,UAAS,SAAUe,GAC/B,IAAIgN,EAAsBhN,EAAUiN,gBAIpC,OAHID,UACKH,EAAaG,GAEf,CACLE,YAoDD,CACLvQ,MAAO,KACP1S,MAAO,KAEPqiB,MAAO,MAvDDW,gBAAiB,KAErB,GACF,EAII9Q,KAAKlS,MAAMqY,OACb8K,EAAa7B,gBAAgBpP,KAAKiS,kBAEtC,EACA/N,EAAOG,mBAAqB,SAA4B6N,EAAYrO,GAElE,IAAIiB,EAAe9E,KAAK4C,MACtBqO,EAAenM,EAAamM,aAC5BH,EAAkBhM,EAAagM,gBAC7BA,WACKJ,EAAaI,UAEb9Q,KAAK4C,MAAMkO,iBAEhB9Q,KAAKlS,MAAMqY,OAAS8K,IAAiBpN,EAAUoN,cACjDA,EAAa7B,gBAAgBpP,KAAKiS,kBAEtC,EACA/N,EAAOM,qBAAuB,WAC5BxE,KAAK4C,MAAMqO,aAAa3M,UACxBtE,KAAKsR,2BAA4B,CACnC,EACApN,EAAOO,sBAAwB,SAA+Bb,EAAWc,GACvE,OAAOd,EAAUqB,SAAWjF,KAAKlS,MAAMmX,QAAUP,EAAUqM,cAAgB/Q,KAAK4C,MAAMmO,WACxF,EACA7M,EAAOe,OAAS,WACd,IAAIkN,EAAenS,KAAK4C,MACtBmO,EAAcoB,EAAapB,YAC3B1N,EAAe8O,EAAa9O,aAO9B,OAAoBlV,EAAMiX,cAAcK,EAAkB+B,SAAU,CAClE7Y,MAAO0U,GACOlV,EAAMiX,cAAcM,EAA+B8B,SAAU,CAC3E7Y,MAAOuX,GACNlG,KAAKlS,MAAMmX,OAAO8L,IACvB,EACOJ,CACT,CAzK2C,CAyKzCxiB,EAAMgT,WAiBR,SAAS6P,EAAexQ,EAAOoG,EAAUqK,EAAcC,GACrD,MAAO,CACL1Q,MAAOA,GAAgB,KACvB1S,MAAO8Y,EAAWA,EAAS5D,KAAO,KAClCmN,MAAO,SAAeT,GACpB,IAAI0C,EAAenB,EAAad,MAAMT,GAClC0C,GAA2D,oBAApClB,EAAeC,iBACxCD,EAAeC,iBAAiB,CAC9BvK,SAAUwL,IAEH5R,GAAyD,oBAAzC0Q,EAAeE,uBAGxCF,EAAeE,sBAAsB5Q,EAEzC,EAEJ,CACA,SAAS6Q,EAAmB7K,EAASlX,GACnC,OAAO+iB,KAAKC,UAAU,CACpBC,GAAI/L,EAAQgM,QAAUhM,EAAQgM,QAAUhM,EAAQ+L,GAChDjjB,UAAWA,GAEf,CACA,SAASqiB,EAAyB7jB,EAAO+V,GACvC,IAGIoN,EAHA9K,EAAQrY,EAAMqY,MACdsM,EAA0B5O,EAAUoN,aAAazC,yBAGrD,GAFA3K,EAAUoN,aAAarB,iBAEnBzJ,EAAO,CACT,IACI2K,EAAkBO,EADRxL,EAAWM,GACwByK,OAAQ9iB,EAAMwB,WAC/D2hB,EAAeP,EAAaI,GAAmBJ,EAAaI,GAAiBG,aAAe,IAAInJ,EAAuB2K,EACzH,MACExB,EAAe,IAAInJ,EAAuB2K,GAE5C,OAAO,EAAIlR,EAAwB,SAAG,CACpCkQ,UAAW3jB,EAAMqY,MACjBoL,qBAAsBzjB,EAAMsV,YAC5BoO,mBAAoB1jB,EAAMwB,UAC1B2hB,aAAcA,GACbS,EAAmC5jB,EAAOmjB,EAAcpN,EAAUqN,gBAIvE,CAEA,SAASQ,EAAmC5jB,EAAOmjB,EAAcC,EAAgBJ,GAC/E,IAAI1N,EAActV,EAAMsV,YACtB+C,EAAQrY,EAAMqY,MACd7W,EAAYxB,EAAMwB,UAClB8d,EAActf,EAAMsf,YAClBsF,EAAqBtP,EACzB,IAAI+C,EA6EF,OAJA8K,EAAa3M,UAIN,CACL9D,MAAO,KACP6C,aALkB,CAClBD,YAAasP,GAKb3B,YA5IG,CACLvQ,MAAO,KACP1S,MAAO,CAAC,EAERqiB,MAAO,MAyILW,gBAAiB,MAhFnB,IAAItK,EAAUX,EAAWM,GACrBI,EAAYX,EAA0BY,EAASlX,EAAW8d,GAC1D/J,EAAe,CACjBD,YAAasP,GAEf,GAA+B,kBAApB5B,GAAgCJ,EAAaI,GAAkB,CAGxE,IAAIlK,EAAW8J,EAAaI,GAAiBlK,SAC7C,OAAIA,EAEK,CACLpG,MAAO,KACP6C,aAAcA,EACd0N,YAAaC,EAAe,KAAMpK,EAAUqK,EAAcC,GAC1DtK,SAAUA,EACVkK,gBAAiBA,GAIZ,CACLtQ,MAAO,KACP6C,aAAcA,EACd0N,YA5FD,CACLvQ,MAAO,KACP1S,MAAO,KAEPqiB,MAAO,MAyFDvJ,SAAU,KACVkK,gBAAiBA,EAGvB,CACA,IACE,IAAI6B,EAAgB1B,EAAaxC,cAAciE,EAAoBnM,EAAWzY,EAAM4gB,aAQhFM,EAPgBiC,EAAazB,MAAM,CACrCpM,YAAasP,EACbrD,aAAc,KACd9I,UAAWA,KAIoBoM,EAQjC,OALA7B,EAAkBA,GAAmBO,EAAmB7K,EAAQoK,OAAQ9iB,EAAMwB,WAC9EohB,EAAaI,GAAmB,CAC9BG,aAAcA,EACdrK,SAAUoI,GAEPA,EASE,CACLxO,MAAO,KACP6C,aAAcA,EACd0N,YAAaC,EAAe,KAAMhC,EAAWiC,EAAcC,GAC3DtK,SAAUoI,EACV8B,gBAAiBA,GAbV,CACLtQ,MAAO,KACP6C,aAAcA,EACd0N,YAvHD,CACLvQ,MAAO,KACP1S,MAAO,KAEPqiB,MAAO,MAoHDvJ,SAAU,KACVkK,gBAAiBA,EAUvB,CAAE,MAAOtQ,GACP,MAAO,CACLA,MAAOA,EACP6C,aAAcA,EACd0N,YAAaC,EAAexQ,EAAO,KAAMyQ,EAAcC,GACvDtK,SAAU,KACVkK,gBAAiBA,EAErB,CAaJ,CAEAxR,EAAOC,QAAUoR,qCCxWjB,IAAIxiB,EAAQgS,EAAQ,MACpBb,EAAOC,QAAUpR,EAAMoP,cAAc,CACnCgG,qBAAqB,uCCFvB,IAAIjC,EAAyBnB,EAAAA,MAAAA,QACzBsH,EAAYnG,EAAuBnB,EAAQ,MAC3CqB,EAAiCF,EAAuBnB,EAAQ,OAChEoB,EAAiBD,EAAuBnB,EAAQ,OAChDsB,EAA0BH,EAAuBnB,EAAQ,OACzDuB,EAAkBJ,EAAuBnB,EAAQ,OACjDwB,EAAmBL,EAAuBnB,EAAQ,OAClDyB,EAAY,CAAC,eAAgB,iBAAkB,yBAC/CC,EAA2B1B,EAAQ,MACnC0H,EAA+B1H,EAAQ,MAEzCe,EADaf,EAAQ,MACOe,iBAC1BuE,EAAoBtF,EAAQ,MAC5B2H,EAAyB3H,EAAQ,MAEnC2B,EADc3B,EAAQ,MACS2B,mBAC7BC,EAAW5B,EAAQ,MACnBhS,EAAQgS,EAAQ,MAChB6B,EAAY7B,EAAQ,MACtB8H,EAAajG,EAAUiG,WACvBhG,EAA6BD,EAAUC,2BACvC2D,EAA4B5D,EAAU4D,0BACtC1D,EAAuBF,EAAUE,qBACjC2D,EAAa7D,EAAU6D,WACvBsC,EAAyBnG,EAAUmG,uBACnChG,EAAmBH,EAAUG,iBACjBhC,EAAQ,MAgTtB,SAASgD,EAAaC,EAAawP,GACjC,MAAO,CACLxP,YAAaA,EACbwP,QAASA,EAEb,CAeAtT,EAAOC,QAAU,CACfgG,gBAPF,SAAyBpE,EAAWqE,EAAcqN,GAEhD,OAAOhR,EAAyBV,EAAWqE,GAAc,SAAUyI,EAAgB5L,GACjF,OA3TJ,SAAsClB,EAAWkB,EAAWwQ,GAC1D,IAAIvQ,EACAC,EAAgBrB,EAAiBC,GACrC,OAAOmB,EAAsB,SAAUE,GAIrC,SAASF,EAAOxU,GACd,IAAI2U,EAAuBC,EAC3BA,EAAQF,EAAiB5O,KAAKoM,KAAMlS,IAAUkS,MAC9C,EAAI2B,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,6BAA6B,WAC5G,IAAIC,EAAyBD,EAAME,MAAMC,SACzCH,EAAMI,UAAS,SAAUC,GACvB,OAGEJ,IAA2BI,EAAaF,SAAW,CACjDG,KAAMD,EAAaF,SAASI,WAC1B,IAER,GACF,KACA,EAAItB,EAA0B,UAAG,EAAIF,EAAiC,SAAGiB,GAAQ,YAAY,SAAUsH,EAAkB8I,EAAiBxK,EAAoBiC,GAC5J,GAAI7H,EAAM4I,aAER,MAAO,CACLhH,QAAS,WAAoB,GAGjC,IACElB,EADwBtB,EAAmBY,EAAM5U,MAAMwV,gBACrBF,YAChC6J,EAAgBpF,EAA6BxF,EAAWK,EAAM5U,OAC9Dof,EAA6C,oBAArBlD,EAAkCA,EAAiBtH,EAAMqQ,yBAA2B/I,EAChHkD,GAAiB,EAAI3L,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAG0L,GAAgBC,GACnG,IAAIJ,EAAoBgG,GAAkB,EAAIvR,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAG2L,GAAiB4F,GAAmB5F,EAC5IE,EAAc7C,EAAU,CAC1BF,QAASE,EAAQF,YACflQ,EACe,MAAfiT,GAA+F,OAA3D,OAAZ7C,QAAgC,IAAZA,OAAqB,EAASA,EAAQ5B,YACpFyE,EAAYzE,SAAuB,OAAZ4B,QAAgC,IAAZA,OAAqB,EAASA,EAAQ5B,UAEnF,IAiBI0E,EAjBA7C,EAAyC,oBAAvBlC,EAAoC,CAGxD3O,KAAM2O,EACN9H,MAAO8H,GACLA,GAAsB,CAAC,EACvBnC,EAAQN,EAAWgN,GACnBtM,EAAYX,EAA0BO,EAAO+G,EAAgBE,GAYjE,OATA1K,EAAME,MAAMoQ,eAAiB9F,EAG7BxK,EAAMqH,sBAAwBrH,EAAMqH,qBAAqBvB,cAMpC,MADD9F,EAAMiK,mBAAmB8B,cAAcrL,EAAamD,EAAuB,OAAZgE,QAAgC,IAAZA,OAAqB,EAASA,EAAQmE,cAE3IhM,EAAME,MAAMC,SAAS+K,aAAad,EAAmBvG,EAAUC,QAAQqH,MACvEnL,EAAMI,UAAS,SAAUmQ,GACvB,MAAO,CACLjQ,KAAMiQ,EAAYpQ,SAASI,UAC3BkI,mBAAoB,CAClB/H,YAAaV,EAAM5U,MAAMwV,eAAeF,aAG9C,IAAG,WACDoH,EAAS7Q,MAAQ6Q,EAAS7Q,OAC1B6Q,EAASjC,UAAYiC,EAASjC,UAChC,IACO,CACLjE,QAAS,WAAoB,KAGjC5B,EAAMiK,mBAAmBY,QAAQ,CAC/BnK,YAAaA,EACbmD,UAAWA,EAEXiH,4BAA4B,IAC3BC,UAAS,SAAUyF,GAEpB,OADAxQ,EAAME,MAAMC,SAAS+K,aAAad,EAAmBvG,EAAUC,QAAQqH,MAChE5F,EAAWwC,QAAO,SAAUC,GACjC,OAAOhI,EAAMI,UAAS,SAAUmQ,GAC9B,MAAO,CACLjQ,KAAMiQ,EAAYpQ,SAASI,UAC3BkI,mBAAoB,CAClB/H,YAAaV,EAAM5U,MAAMwV,eAAeF,aAG9C,IAAG,WACDsH,EAAK/Q,OACL+Q,EAAKnC,UACP,GACF,GACF,IAAY,SAAE,WAGR7F,EAAMqH,uBAAyBsD,IACjC3K,EAAMqH,qBAAuB,KAEjC,IAAG3C,WAAU,EAAI7F,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGiJ,GAAW,CAAC,EAAG,CAC5F2I,MAAO,SAAe1K,GACpB/F,EAAMqH,qBAAuBsD,EAAsB5E,EACnD+B,EAAS2I,OAAS3I,EAAS2I,MAAM1K,EACnC,KAEK,CACLnE,QAAS,WACP+I,GAAuBA,EAAoB7E,aAC7C,GAEJ,IACA,IAAInF,EAAevB,EAAmBhU,EAAMwV,gBACxCC,EAAgF,QAAzDd,EAAwB3U,EAAM0V,6BAA6D,IAA1Bf,GAAmCA,EAC/HC,EAAMqH,qBAAuB,KAK7B,IAAIlH,EAAWZ,EAA2BoB,EAAcd,EAAeF,EAAWvU,EAAOyV,GAWzF,OAVAb,EAAME,MAAQ,CACZI,KAAMH,EAASI,UACf+P,eAAgB,KAChBvP,UAAW3V,EACX4V,iBAAkBL,EAClB8H,mBAAoB9H,EACpBH,UAAWC,EAAaE,EAAaD,YAAaV,EAAM0Q,UACxDvQ,SAAUA,GAEZH,EAAM4I,cAAe,EACd5I,CACT,EAlIA,EAAIhB,EAAyB,SAAGY,EAAQE,GAmIxC,IAAI0B,EAAS5B,EAAO5O,UAgKpB,OA/JAwQ,EAAOC,kBAAoB,WACzBnE,KAAKsL,cAAe,EACpBtL,KAAKoE,qDACP,EACAF,EAAOG,mBAAqB,SAA4BZ,EAAWI,GAM7D7D,KAAK4C,MAAMC,WAAagB,EAAUhB,UACpCgB,EAAUhB,SAASyB,UACnBtE,KAAK4M,eAAiB5M,KAAK4M,cAActI,UACzCtE,KAAK+J,sBAAwB/J,KAAK+J,qBAAqBvB,cACvDxI,KAAKoE,uDAELpE,KAAKuE,4BAET,EAMAjC,EAAOqB,yBAA2B,SAAkCC,EAAWC,GAC7E,IAAIC,EAGAL,EAAYI,EAAUJ,UACtBJ,EAAevB,EAAmB8B,EAAUN,gBAC5CC,EAAoF,QAA7DO,EAAwBF,EAAUJ,6BAA6D,IAA1BM,GAAmCA,EAC/HC,EAAU7B,EAAqBG,EAAWoB,GAC1CO,EAAU9B,EAAqBG,EAAWuB,GAC1C8H,EAAoB7D,EAA6BxF,EAAWoB,GAC5DkI,EAAoB9D,EAA6BxF,EAAWuB,GAC5Df,EAAWgB,EAAUhB,SAOzB,GAAIgB,EAAUH,iBAAiBN,cAAgBC,EAAaD,cAAgBrB,EAAS2J,EAAmBC,KAAuB5J,EAASgC,EAASC,GAM/I,MAAO,CACLhB,MAFFH,EAAWZ,EAA2BoB,EAAcd,EAAeF,EAAWuB,EAAWL,IAExEN,UACf+P,eAAgB,KAChBvP,UAAWG,EACXF,iBAAkBL,EAClB8H,mBAAoB9H,EACpBH,UAAWC,EAAaE,EAAaD,YAAaS,EAAUX,UAAU0P,SACtE/P,SAAUA,GAEFgB,EAAUmP,gBACpBnQ,EAASoB,SAASL,GAEpB,IAAIZ,EAAOH,EAASI,UACpB,OAAID,IAASa,EAAUb,KACd,CACLA,KAAMA,EACNS,UAAWG,GAGR,IACT,EACAM,EAAOM,qBAAuB,WAC5BxE,KAAKsL,cAAe,EACpBtL,KAAK4C,MAAMC,SAASyB,UACpBtE,KAAK4M,eAAiB5M,KAAK4M,cAActI,UACzCtE,KAAK+J,sBAAwB/J,KAAK+J,qBAAqBvB,aACzD,EACAtE,EAAOO,sBAAwB,SAA+Bb,EAAWc,GAEvE,GAAIA,EAAU1B,OAAShD,KAAK4C,MAAMI,MAAQ0B,EAAUxB,YAAclD,KAAK4C,MAAMM,UAC3E,OAAO,EAKT,IADA,IAAI/R,EAAO5C,OAAO4C,KAAKyS,GACde,EAAK,EAAGA,EAAKxT,EAAK6C,OAAQ2Q,IAAM,CACvC,IAAItT,EAAMF,EAAKwT,GACf,GAAY,mBAARtT,GACF,GAAI2O,KAAK4C,MAAMc,iBAAiBN,cAAgBsB,EAAUhB,iBAAiBN,YACzE,OAAO,OAGT,IAAKf,EAAU1O,eAAetC,KAAS8Q,EAAiByB,EAAUvS,GAAM2O,KAAKlS,MAAMuD,IACjF,OAAO,CAGb,CACA,OAAO,CACT,EACA6S,EAAOK,2BAA6B,WAClC,IAAIK,EAAc5E,KAAK4C,MACrBI,EAAO4B,EAAY5B,KAIjB6B,EAHSD,EAAY/B,SAGGI,UACxBD,IAAS6B,GACX7E,KAAK8C,SAAS,CACZE,KAAM6B,GAGZ,EACAX,EAAOE,oDAAsD,WAC3D,IAAIU,EAAe9E,KAAK4C,MACtBI,EAAO8B,EAAa9B,KACpBH,EAAWiC,EAAajC,SACtBgC,EAAehC,EAASI,UAI5BJ,EAASkC,YAAY/E,KAAKlS,MAAOkS,KAAKgF,2BAIlChC,IAAS6B,GACX7E,KAAK8C,SAAS,CACZE,KAAM6B,GAGZ,EAKAX,EAAO6O,sBAAwB,WAC7B,OAAO5K,EAAuB9F,EAAWrC,KAAKlS,MAChD,EACAoW,EAAOyI,iBAAmB,WAIxB,OAHK3M,KAAK4M,gBACR5M,KAAK4M,cAAgB,IAAI9E,GAEpB9H,KAAK4M,aACd,EAEA1I,EAAOe,OAAS,WAEd,IAAIC,EAAclF,KAAKlS,MACrBqX,EAAeD,EAAYC,aAG3BrX,GAFiBoX,EAAY5B,eACL4B,EAAY1B,uBAC5B,EAAIhC,EAAwC,SAAG0D,EAAatD,IAClEuQ,EAAenS,KAAK4C,MACtBM,EAAYiP,EAAajP,UACzBiI,EAAqBgH,EAAahH,mBACpC,OAAoBhd,EAAMiX,cAAcK,EAAkB+B,SAAU,CAClE7Y,MAAOwc,GACOhd,EAAMiX,cAAcjE,GAAW,EAAIsG,EAAmB,SAAG,CAAC,EAAG3Z,EAAOkS,KAAK4C,MAAMI,KAAM,CACnGqC,IAAKF,EACLG,MAAOpC,KAEX,EACOZ,CACT,CArS6B,CAqS3BnU,EAAMgT,YAAY,EAAIQ,EAA0B,SAAGW,EAAQ,cAAeC,GAAgBD,CAC9F,CAkBWF,CAA6B6L,EAAgB5L,EAAWwQ,EACjE,GACF,sCC7VA,IAAIQ,EAAqBlT,EAAQ,KAC7B4H,EAAY5H,EAAQ,MAexB,SAASmT,EAAevW,GACtB,MAA0B,kBAAZA,GAAoC,OAAZA,IAAqBhB,MAAMC,QAAQe,IAAYsW,EAAmBtW,EAAQqG,YAClH,CACA9D,EAAOC,QAAU,CACfuC,mBAbF,SAA4BwD,GAE1B,OADCgO,EAAehO,IAAgMyC,GAAU,GACnNzC,CACT,EAWEgO,eAAgBA,sCCrBlB,IAAIvL,EAAY5H,EAAQ,MAcxBb,EAAOC,QATP,SAA2B9F,EAAe+L,GAExC,IAAK,IAAInU,KADPmU,GAAwC,kBAAjBA,GAA+NuC,GAAU,GAClPvC,EACd,GAAIA,EAAa7R,eAAetC,GAAM,CACpC,IAAI2V,EAAWxB,EAAanU,KAC1B2V,GAAiC,kBAAbA,GAA6C,oBAAbA,IAAoPe,GAAU,EACtT,CAEJ,qCCbA,IACIN,GAAYnG,EADanB,EAAAA,MAAAA,SACUA,EAAQ,MAC3CoT,EAAoBpT,EAAQ,MAC5BwF,EAAWxF,EAAQ,MACrBY,EAAmB4E,EAAS5E,iBAC5BG,EAAmByE,EAASzE,iBAC1BuE,EAAoBtF,EAAQ,MAC5BuF,EAAiCvF,EAAQ,MACzC4H,EAAY5H,EAAQ,MACpBhS,EAAQgS,EAAQ,MAElBqT,EADcrT,EAAQ,MACEqT,YACtB5hB,EAAazD,EAAMyD,WAqCvB0N,EAAOC,QAhCP,SAAkC0O,EAAgBzI,EAAcpD,GAE9D,IAAIG,EAAgBrB,EAAiB+M,GACrCsF,EAAkBxS,EAAiBkN,GAAiBzI,GACpD,IAAInD,EAAY,CAAC,EACjB,IAAK,IAAIhR,KAAOmU,EACdnD,EAAUhR,GAAOmiB,EAAYhO,EAAanU,IAE5C,IAAIoiB,EAAYrR,EAA6B6L,EAAgB5L,GAE7D,SAASqR,EAAW5lB,EAAOuX,GACzB,IAAIsO,EACA5W,EAAUnL,EAAW6T,GACZ,MAAX1I,GAAqOgL,GAAU,GACjP,IAAI7B,EAAuBtU,EAAW8T,GACtC,OAAoBvX,EAAMiX,cAAcqO,GAAW,EAAIhM,EAAmB,SAAG,CAAC,EAAG3Z,EAAO,CACtFwV,eAAgBvG,EAChByG,sBAA0K,QAAlJmQ,EAAiD,OAAzBzN,QAA0D,IAAzBA,OAAkC,EAASA,EAAqB3C,2BAA2D,IAA1BoQ,GAAmCA,EACrNxO,aAAcrX,EAAMqX,cAAgBE,IAExC,CAUA,OArBAoO,EAAUxS,YAAcsB,EAYxBmR,EAAWzS,YAAcsB,EACFpU,EAAMulB,WAAWA,EAS1C,qCChDA,IACInS,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAElDyT,EADazT,EAAQ,MACEyT,YAgBzBtU,EAAOC,QAfP,SAAsC8C,EAAWvU,GAC/C,IAAImf,EAAgB,CAAC,EAYrB,OARA1e,OAAO4C,KAAKkR,GAAW/R,SAAQ,SAAUe,GACvC,IAAIwiB,EAAsBC,EAAuBC,EAC7CC,EAAe3R,EAAUhR,GACzB4iB,EAAcnmB,EAAMuD,GACpB6iB,EAAWN,EAAYI,EAAcC,GACrCE,EAAqC,MAAZD,GAAsC,yBAAlBA,EAASE,KAA6M,QAA1KP,EAA2E,QAAnDC,EAAwBI,EAASG,UAAU,UAA0C,IAA1BP,OAAmC,EAASA,EAAsBQ,MAAMhlB,iBAAgD,IAAzBukB,EAAkCA,EAAuB,CAAC,EAA+G,QAA1GE,EAAqC,OAAbG,QAAkC,IAAbA,OAAsB,EAASA,EAASI,MAAMhlB,iBAAiD,IAA1BykB,EAAmCA,EAAwB,CAAC,EAC5f9G,GAAgB,EAAI1L,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAG0L,GAAgBkH,EACpG,IACOlH,CACT,mCClBA,IAAIxH,EAAoBtF,EAAQ,MAC5BoU,EAA8BpU,EAAQ,MACtCqU,EAA+BrU,EAAQ,MACvCsU,EAAgCtU,EAAQ,MACxCwQ,EAA0BxQ,EAAQ,MAClCuU,EAA6BvU,EAAQ,MACrCwU,EAAsBxU,EAAQ,KAC9ByU,EAAiBzU,EAAQ,MAE3B0U,EADa1U,EAAQ,MACA0U,UACnBC,EAAkB3U,EAAQ,MAC1B4U,EAA2B5U,EAAQ,MACnC6U,EAAiB7U,EAAQ,MACzB8U,EAAsB9U,EAAQ,MAC9B+U,EAAc/U,EAAQ,MACtBgV,EAAmBhV,EAAQ,MAC3BiV,EAAcjV,EAAQ,MACtBkV,EAAwBlV,EAAQ,MAChCmV,EAAoBnV,EAAQ,MAC5BoV,EAAiBpV,EAAQ,MACzBqV,EAAyBrV,EAAQ,KACjCsV,EAAsBtV,EAAQ,MAC9BuV,EAAkCvV,EAAQ,MAC1CwV,EAAkBxV,EAAQ,MAC1ByV,EAAezV,EAAQ,MAM3Bb,EAAOC,QAAU,CACfsW,kBAAmBD,EAAaC,kBAChCC,cAAenF,EACfoF,mBAAoBvB,EACpBwB,cAAeJ,EAAaI,cAC5BC,gBAAiBL,EAAaK,gBAC9BxQ,kBAAmBA,EACnByQ,wBAAyBN,EAAaM,wBACtCC,kBAAmBP,EAAaO,kBAChCC,eAAgBR,EAAaQ,eAC7BC,wBAAyB9B,EAA4BhP,gBACrD+Q,0BAA2B7B,EAA8BlP,gBACzDgR,uBAAwB7B,EAA2BnP,gBACnDiR,sBAAuBZ,EAAaY,sBACpCC,QAASb,EAAaa,QACtBC,eAAgBd,EAAac,eAC7BC,oBAAqBf,EAAae,oBAElChC,oBAAqBA,EACrBI,yBAA0BA,EAC1BD,gBAAiBA,EACjB5G,WAAY0H,EAAa1H,WACzB2G,UAAWA,EACXD,eAAgBA,EAChBI,eAAgBA,EAChBE,YAAaA,EACbC,iBAAkBA,EAClBF,oBAAqBA,EACrBM,eAAgBA,EAChBH,YAAaA,EACbC,sBAAuBA,EACvBC,kBAAmBA,EACnBE,uBAAwBA,EACxBC,oBAAqBA,EACrBC,gCAAiCA,EACjCC,gBAAiBA,iCCxDnBrW,EAAOC,QALP,SAA4B6D,GAC1B,MAA8B,kBAAhBA,GAA4C,OAAhBA,GAEb,oBAAtBA,EAAYyD,OAAsD,oBAAvBzD,EAAY2D,QAAuD,oBAAvB3D,EAAY8D,QAAwD,oBAAxB9D,EAAYmK,SAA2D,oBAA1BnK,EAAYgE,SACrM,oCCRA,IAAI0N,EAAkB3U,EAAQ,MAC1BsV,EAAsBtV,EAAQ,MAC9BhS,EAAQgS,EAAQ,MAChBwF,EAAWxF,EAAQ,MACrBvO,EAAa+T,EAAS/T,WACtBglB,EAAYjR,EAASiR,UACTzW,EAAQ,MA2BtBb,EAAOC,QA1BP,SAA6BtC,GAC3B,IAAI4Z,EAAsB5Z,EAAK4Z,oBAC7B/oB,EAAQmP,EAAKnP,MAEXgpB,EAAeD,EAAoBC,aACrCC,EAAUF,EAAoBE,QAC9BC,EAAcH,EAAoBG,YAClCC,EAAaJ,EAAoBI,WACjCC,EAAeL,EAAoBK,aACjC/V,EAAY2V,IACZK,EAAkBvlB,EAAWkjB,GAC7B1R,EAAcqS,IAQlB,OAPAmB,GAAU,WACRxT,EAAYgU,MAAM,CAChBvW,KAAM,0BACNsW,gBAAiBA,EACjBD,aAAcA,GAElB,GAAG,CAAC9T,EAAa+T,EAAiBD,IACd/oB,EAAMiX,cAAcjE,EAAW,CACjD6V,YAAaA,EACbC,WAAYA,EACZnpB,MAAOA,EACPipB,QAASA,GAEb,qCChCA,IAAIzV,EAAyBnB,EAAAA,MAAAA,QACzBoB,EAAiBD,EAAuBnB,EAAQ,OAChDwB,EAAmBL,EAAuBnB,EAAQ,OAClDkX,EAAsB/V,EAAuBnB,EAAQ,MACrDmX,EAAWnX,EAAQ,MAErBoX,EADapX,EAAQ,MACqBoX,+BACxCC,EAAmBrX,EAAQ,MAC3B4H,EAAY5H,EAAQ,MACpBsQ,EAAYtQ,EAAQ,MACtBsX,EAAuBhH,EAAUpP,WACjC6M,EAAauJ,EAAqBvJ,WAClCwJ,EAA6BD,EAAqBC,2BAClDxP,EAAoBuI,EAAUvI,kBAC9BtC,EAA4B6K,EAAU7K,0BACtC+R,EAAwBlH,EAAUkH,sBAClCC,EAAkCnH,EAAUmH,gCAC5ChE,EAAcnD,EAAUmD,YACxBiE,EAA2BpH,EAAUoH,yBACrCC,EAAgCrH,EAAUqH,8BAC1CC,EAAYtH,EAAUsH,UACtBC,EAAmBvH,EAAUuH,iBAC3BC,EAAuC,oBAAZC,QAO3BC,EAAgC5pB,OAAO6pB,OAAO,IAClD,SAASC,EAAczR,GACrB,OAAI7K,MAAMC,QAAQ4K,GACTA,EAAShN,MAAK,SAAUtG,GAC7B,OAAOA,EAAE+kB,aACX,IAEKzR,EAASyR,aAClB,CAWA,SAASC,EAA0B1R,GACjC,OAAI7K,MAAMC,QAAQ4K,GACTA,EAASxV,KAAI,SAAUkC,GAC5B,OAAOA,EAAEglB,yBACX,IAAGta,OAAOua,SAASC,OAEd5R,EAAS0R,yBAClB,CAQA,SAASG,EAAkBC,EAAU9R,EAAU+R,GAC7C,OAAI5c,MAAMC,QAAQ4K,GACT,CACL8R,SAAUA,EACV9R,SAAUA,EACV5D,KAAM4D,EAASxV,KAAI,SAAUkC,GAC3B,OAAOA,EAAE0P,IACX,IACAqV,cAAeA,EAAczR,GAC7B+R,WAAYA,GAGT,CACLD,SAAUA,EACV9R,SAAUA,EACV5D,KAAM4D,EAAS5D,KACfqV,cAAeA,EAAczR,GAC7B+R,WAAYA,EAEhB,CAQA,IAAIC,EAA2C,WAC7C,SAASA,EAA4BxV,IACnC,EAAIzB,EAA0B,SAAG3B,KAAM,SAAU,IAAI6Y,MACrD,EAAIlX,EAA0B,SAAG3B,KAAM,gBAAiB,IAAI6Y,KAC5D7Y,KAAK8Y,aAAe1V,CACtB,CACA,IAAIc,EAAS0U,EAA4BllB,UA0CzC,OAzCAwQ,EAAO5G,IAAM,SAAayb,GACxB,IAAIC,EAAmBC,EACvB,OAAiK,QAAzJD,EAAiF,QAA5DC,EAAmBjZ,KAAKkZ,OAAO5b,IAAIyb,UAAsD,IAArBE,OAA8B,EAASA,EAAiB,UAAsC,IAAtBD,EAA+BA,OAAoB7e,CAC9N,EACA+J,EAAOiV,mBAAqB,SAA4BJ,EAAoBpqB,GAE1E,IAAI+T,EAAQ1C,KACRoZ,EAAWpZ,KAAKkZ,OAAO5b,IAAIyb,GAC/B,GAAKK,EAME,CACL,IAAIC,EAAkBD,EAAS,GAC7BE,EAAoBF,EAAS,GAC/BzqB,EAAM2B,SAAQ,SAAUipB,GACtBF,EAAgBtb,KAAKwb,EACvB,IACAD,EAAkBE,gBAAgBxZ,KAAK8Y,aACzC,KAbe,CACb,IAAIW,EAAmB,IAAIjC,GAAiB,WAC1C,OAAO9U,EAAMgX,QAAQX,EACvB,IACA/Y,KAAKkZ,OAAOS,IAAIZ,EAAoB,CAACpqB,EAAO8qB,IAC5CA,EAAiBD,gBAAgBxZ,KAAK8Y,aACxC,CAQF,EACA5U,EAAOwV,QAAU,SAAiBnH,GAChC,IACIqH,EADAnO,EAASzL,KAET6Z,GAAwE,QAAxDD,EAAwB5Z,KAAK8Z,cAAcxc,IAAIiV,UAA2C,IAA1BqH,EAAmCA,EAAwB,GAAK,EAEpJ,OADA5Z,KAAK8Z,cAAcH,IAAIpH,EAAIsH,GACpB,CACLvV,QAAS,WACP,IAAIyV,EACAC,GAA8E,QAA3DD,EAAyBtO,EAAOqO,cAAcxc,IAAIiV,UAA4C,IAA3BwH,EAAoCA,EAAyB,GAAK,EACxJC,EAAiB,EACnBvO,EAAOqO,cAAcH,IAAIpH,EAAIyH,IAE7BvO,EAAOqO,cAAsB,OAAEvH,GAC/B9G,EAAOyN,OAAe,OAAE3G,GAE5B,EAEJ,EACOqG,CACT,CAjD+C,GAkD3CqB,EAAoC,WACtC,SAASA,EAAqB7W,GAC5BpD,KAAK8Y,aAAe1V,EACpBpD,KAAKkZ,OAAS5B,EAAS7M,OArHN,KAsHbvC,EAAkBgS,sBACpBla,KAAKma,6BAA+B,IAAIvB,EAA4BxV,GAExE,CAOA,IAAIgX,EAAUH,EAAqBvmB,UA4anC,OA3aA0mB,EAAQC,KAAO,SAAcrG,EAAcC,EAAaqG,EAAsBC,GAC5E,OAAOva,KAAKwa,mBAAmBxG,EAAcC,EAAa0D,EAAsB3D,EAAcC,GAAcqG,EAAsBC,EACpI,EAOAH,EAAQI,mBAAqB,SAA4BxG,EAAcC,EAAa8E,EAAoBuB,EAAsBC,GAC5H,IACIE,EAAuBC,EAAwBC,EAAwBC,EADvE7N,EAAS/M,KAEToD,EAAcpD,KAAK8Y,aAKvB,GAAmB,MAAf7E,EACF,MAAO,CACLyE,SAAUK,EACV/V,KAAM,KACNqV,eAAe,EACfzR,SAAU,KACV+R,WAAY,GAGhB,IAAIA,EAAavV,EAAYyX,WAAWC,WAIxC,IAA2M,KAArL,OAAjB9G,QAA0C,IAAjBA,GAAuF,QAAnDyG,EAAwBzG,EAAarL,gBAAgD,IAA1B8R,OAArE,EAAiHA,EAAsBM,UAC5Lhf,MAAMC,QAAQiY,IAA8XlM,GAAU,GAC5X,IAAvBkM,EAAYjgB,QACd,MAAO,CACL0kB,SAAUK,EACV/V,KAAMmV,EACNE,eAAe,EACfzR,SAAUuR,EACVQ,WAAYA,GAQlB,IAAIqC,EAAchb,KAAKkZ,OAAO5b,IAAIyb,GAClC,GAAmB,MAAfiC,EAAqB,CACvB,IAAIC,EACJ,GAAyB,YAArBD,EAAY5G,MAAsB2D,EAAUiD,EAAYE,SAU1D,MATA9X,EAAYgU,MAAM,CAChBvW,KAAM,oBACNmC,KAAMgY,EAAYhkB,OAAOgM,KACzBgE,SAAUgN,EACVmH,cAAc,EACd9C,cAAe2C,EAAYhkB,OAAOqhB,cAClC+C,iBAAiB,EACjBC,kBAAmBL,EAAYK,oBAE3BL,EAAYE,QAEpB,GAAyB,SAArBF,EAAY5G,MAAmB4G,EAAYhkB,OAAO4P,WAAmG,QAApFqU,EAAwB3C,EAA0B0C,EAAYhkB,OAAO4P,iBAAiD,IAA1BqU,IAAoCA,EAAsBjnB,QAiBzN,OAhBAgM,KAAKsb,4BAELN,EAAYhkB,OAAO4P,UAKfoU,EAAYhkB,OAAOqhB,eACrBjV,EAAYgU,MAAM,CAChBvW,KAAM,gCACNmC,KAAMgY,EAAYhkB,OAAOgM,KACzBgE,SAAUgN,EACVmH,cAAc,EACdI,QAAQ,IAGLP,EAAYhkB,MAEvB,CAIA,IAAIwkB,EAAmB5H,EAAYI,EAAcC,GAC3B,MAApBuH,GAAy4BzT,GAAU,GACr5B,IAAInB,EAAqC,yBAA1B4U,EAAiBpH,KAAkCoH,EAAiBnH,UAAUjjB,KAAI,SAAUkC,GACzG,OAAO8P,EAAY2D,OAAOzT,EAC5B,IAAK8P,EAAY2D,OAAOyU,GACpBC,EAAiBhD,EAAkBM,EAAoBnS,EAAU+R,GACrE,IAAK8C,EAAepD,cAMlB,OALArY,KAAKsb,4BAA4B1U,GACjC5G,KAAKkZ,OAAOS,IAAIZ,EAAoB,CAClC3E,KAAM,OACNpd,OAAQykB,IAEHA,EAaT,IAAIC,EAAqB,KACzB,GAAIxT,EAAkBgS,sBAA6K,KAAhG,QAApDQ,EAAyB1G,EAAarL,gBAAiD,IAA3B+R,OAAoC,EAASA,EAAuBiB,iBAnOnL,SAA+B/U,GAC7B,IAAIgV,EAAuBC,EAC3B,OAAI9f,MAAMC,QAAQ4K,GACTA,EAAShN,MAAK,SAAUtG,GAC7B,IAAIwoB,EAAuBC,EAC3B,OAA6K,QAApKD,EAA4E,QAAnDC,EAAyBzoB,EAAE0oB,0BAA2D,IAA3BD,OAAoC,EAASA,EAAuB/nB,cAA8C,IAA1B8nB,EAAmCA,EAAwB,GAAK,CACvP,KAEkL,QAA3KF,EAAmF,QAA1DC,EAAyBjV,EAASoV,0BAA2D,IAA3BH,OAAoC,EAASA,EAAuB7nB,cAA8C,IAA1B4nB,EAAmCA,EAAwB,GAAK,CAC9P,CA0N+MK,CAAsBrV,GAAW,CAC1O8U,EAAqB,GACrB,IAAIQ,EAAgB3E,EAA+BvX,KAAK8Y,cACpDqD,EAAe,IApNzB,SAAiCvV,EAAUrG,GACrCxE,MAAMC,QAAQ4K,GAChBA,EAAStW,QAAQiQ,GAEjBA,EAAEqG,EAEN,CA+MMwV,CAAwBxV,GAAU,SAAUyV,GAC1C,IAAIC,EACkD,QAArDA,EAAwBD,EAAKL,0BAA0D,IAA1BM,GAA4CA,EAAsBhsB,SAAQ,SAAU2M,GAChJ,IAAIsf,EACA/V,EAAUvJ,EAAKuJ,QACjBgW,EAA0Bvf,EAAKuf,wBAC7BC,EAAwB1P,EAAO2P,wBAAwBR,EAAelI,EAAcC,EAAazN,EAASgW,GAC5GjD,EAAckD,EAAsBlD,YACpCoD,EAAoBF,EAAsBE,kBAC5CR,EAAape,KAAKwb,GAC6B,QAA9CgD,EAAsBb,SAAwD,IAAxBa,GAA0CA,EAAoBxe,KAAK4e,EAC5H,GACF,IAGuC,MAArC3c,KAAKma,8BAAkLpS,GAAU,GACnM/H,KAAKma,6BAA6BhB,mBAAmBJ,EAAoBoD,EAC3E,CACA,IAAIS,EAAqB,GACrB1U,EAAkBgS,qBAAuBwB,IAC3CkB,EAAqBlB,EAAmBtqB,KAAI,SAAUoV,GACpD,OAAOkR,EAA2B3K,EAAO+L,aAActS,EACzD,IAAGxI,OAAOua,UAIZ,IAAIsE,EAA0C,yBAA1BrB,EAAiBpH,KAAkCoH,EAAiBnH,UAAU,GAAGC,MAAQkH,EAAiBlH,MAC1HwI,EAA2B9c,KAAK+c,6CAA6ChE,EAAoB/E,EAAc6I,EAAepB,GAC9HuB,EAA+D,OAA7BF,QAAkE,IAA7BA,OAAsC,EAASA,EAAyB5B,QAC/I+B,EAMI,QAN4BtC,EAA4F,QAAlEC,EAAyBtC,EAA0B1R,UAAkD,IAA3BgU,OAAoC,EAASA,EAAuBxpB,KAAI,SAAUiL,GACxN,IAAI6gB,EAAc7gB,EAAM6gB,YAIxB,OAHY9Z,EAAYyX,WAGXsC,uBAAuBD,EACtC,WAA2C,IAA3BvC,EAAoCA,EAAyB,GAC7E,GAAIiC,EAAmB5oB,QAAUipB,EAA6BjpB,QAAU+jB,EAAUiF,GAAkC,CAClH,IAAII,EAAuBC,EAC3Bja,EAAYgU,MAAM,CAChBvW,KAAM,oBACNmC,KAAMyY,EAAezY,KACrBgE,SAAUgN,EACVmH,cAAc,EACdC,iBAAiB,EACjB/C,cAAeoD,EAAepD,cAE9BgD,kBAAmB,GAAGxsB,QAAO,EAAIwoB,EAA6B,SAAgK,QAA5J+F,EAAqD,OAA7BN,QAAkE,IAA7BA,OAAsC,EAASA,EAAyBzB,yBAAyD,IAA1B+B,EAAmCA,EAAwB,KAAK,EAAI/F,EAA6B,SAAmD,QAA/CgG,EAAuB3B,SAAyD,IAAzB2B,EAAkCA,EAAuB,OAE7b,IAAIC,EAAW,GAOf,GANIV,EAAmB5oB,OAAS,IAC9BspB,EAAWA,EAASzuB,OAAO+tB,IAEzBK,EAA6BjpB,OAAS,IACxCspB,EAAWA,EAASzuB,OAAOouB,IAEzBK,EAAStpB,OAAS,EAIpB,MAHIgpB,GACFM,EAASvf,KAAKif,GAEVO,QAAQC,IAAIF,GAMpB,GAAIN,EACF,MAAMA,CAEV,CAcA,OAbAhd,KAAKsb,4BAA4B1U,GAMjCxD,EAAYgU,MAAM,CAChBvW,KAAM,gCACNmC,KAAMyY,EAAezY,KACrBgE,SAAUgN,EACVmH,cAAc,EACdI,QAAQ,IAEH9C,EAAkBM,EAAoBnS,EAAU+R,EACzD,EACAyB,EAAQsC,wBAA0B,SAAiCR,EAAelI,EAAcC,EAAazN,EAASgW,GACpH,IAAIiB,EAAoB5F,EAAyB7D,EAAcC,GAC3D3kB,GAAY,EAAIiS,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGkc,GAAoB,CAAC,EAAG,CACxGlL,GAAIiK,IAGFjW,EAAYX,EAA0BY,EAASlX,EAAW,CAAC,GAG3DouB,EAAkBxP,EAAWlO,KAAK8Y,aAAcvS,GAChDgT,EAAc2C,EAAcyB,QAAQpX,EAAWmX,GAInD,MAAO,CACLf,kBAAmBpW,EAAUC,QAC7B+S,YAAaA,EAEjB,EACAa,EAAQkB,4BAA8B,SAAqC1U,GACzE,IAAIgX,EAAS5d,KACTjE,MAAMC,QAAQ4K,GAChBA,EAAStW,SAAQ,SAAUgD,GACzBwkB,EAA8B8F,EAAO9E,aAAcxlB,EAAEuqB,sBAAuBvqB,EAAEwqB,oBAChF,IAEAhG,EAA8B9X,KAAK8Y,aAAclS,EAASiX,sBAAuBjX,EAASkX,oBAE9F,EACA1D,EAAQ2D,SAAW,SAAkBC,EAAeC,EAAc3D,GAChE,IAAItjB,EAAS,CAAC,EACd,IAAK,IAAI3F,KAAO2sB,EACdhnB,EAAO3F,GAAO2O,KAAKqa,KAAK2D,EAAc3sB,GAAM4sB,EAAa5sB,GAAMipB,EAAsBjpB,GAEvF,OAAO2F,CACT,EACAojB,EAAQhT,UAAY,SAAmBqU,EAAgByC,GACrD,IAAIC,EAASne,KACToD,EAAcpD,KAAK8Y,aACnBJ,EAAW+C,EAAe/C,SAC1B0F,EAAmB3C,EAAe7U,SACtC,IAAKwX,EACH,MAAO,CACL9Z,QAAS,WAAoB,GAMjC,IAAI+Z,EAAwBre,KAAKse,mBAAmB7C,GAClD8C,EAAiBF,EAAsB,GACvCG,EAAkBH,EAAsB,GAItCE,GACFL,IAIF,IAAIO,EAAc,GAqBlB,GApBI1iB,MAAMC,QAAQoiB,IACfriB,MAAMC,QAAQwiB,IAAoLzW,GAAU,GAC7MyW,EAAgBluB,SAAQ,SAAUsW,EAAU8X,GAC1CD,EAAY1gB,KAAKqF,EAAYgE,UAAUR,GAAU,SAAU+X,GACzD,IAAIhG,EAAavV,EAAYyX,WAAWC,WACxCqD,EAAOS,sBAAsBlG,EAAU8F,EAAiBG,EAAgBD,EAAK/F,GAC7EuF,GACF,IACF,OAEqB,MAAnBM,GAA4BziB,MAAMC,QAAQwiB,KAAsLzW,GAAU,GAC5O0W,EAAY1gB,KAAKqF,EAAYgE,UAAUoX,GAAiB,SAAUG,GAChE,IAAIhG,EAAavV,EAAYyX,WAAWC,WACxCqD,EAAOjF,OAAOS,IAAIjB,EAAU,CAC1BtE,KAAM,OACNpd,OAAQyhB,EAAkBC,EAAUiG,EAAgBhG,KAEtDuF,GACF,MAEEhW,EAAkBgS,oBAAqB,CACzC,IAAI2E,EAAuBC,EACvBC,EAAkN,QAAxLF,EAAyF,QAAhEC,EAAyB9e,KAAKma,oCAAqE,IAA3B2E,OAAoC,EAASA,EAAuBxhB,IAAIob,UAAiD,IAA1BmG,EAAmCA,OAAwB1kB,EACzR,GAA+B,OAA3B4kB,QAA8D,IAA3BA,GAAqCA,EAAuB/qB,OAAQ,CACzG,IAAIkoB,EAAgB3E,EAA+BvX,KAAK8Y,cACxDiG,EAAuBzuB,SAAQ,SAAUipB,GACvCkF,EAAY1gB,KAAKme,EAAchV,OAAOqS,GACxC,GACF,CACF,CACA,MAAO,CACLjV,QAAS,WACPma,EAAYnuB,SAAQ,SAAUgD,GAC5B,OAAOA,EAAEgR,SACX,IACA6Z,EAAOjF,OAAe,OAAER,EAC1B,EAEJ,EACA0B,EAAQ4E,cAAgB,SAAuBC,EAAiBf,GAC9D,IAAIgB,EAASlf,KACTye,EAAclwB,OAAO4C,KAAK8tB,GAAiB7tB,KAAI,SAAUC,GAC3D,OAAO6tB,EAAO9X,UAAU6X,EAAgB5tB,GAAM6sB,EAChD,IACA,MAAO,CACL5Z,QAAS,WACPma,EAAYnuB,SAAQ,SAAU6uB,GAC5BA,EAAW7a,SACb,GACF,EAEJ,EACA8V,EAAQkE,mBAAqB,SAA4B7C,GACvD,IAAIrY,EAAcpD,KAAK8Y,aACnBsF,EAAmB3C,EAAe7U,SACtC,IAAKwX,EACH,MAAO,EAAC,EAAO,MAEjB,IAAIzF,EAGJ,GADAA,EAAavV,EAAYyX,WAAWC,WAChCW,EAAe9C,aAAeA,EAChC,MAAO,EAAC,EAAO8C,EAAe7U,UAEhC,IAAI8R,EAAW+C,EAAe/C,SAC9B,GAAI3c,MAAMC,QAAQoiB,GAAmB,CACnC,IAAIG,GAAiB,EACjBa,EAAmB,GAsBvB,OArBAhB,EAAiB9tB,SAAQ,SAAUsW,EAAU8X,GAC3C,IAAIF,EAAkBpb,EAAY2D,OAAOH,EAASsN,UAC9CmL,EAAazY,EAAS5D,KACtBsc,EAAcd,EAAgBxb,KAC9Buc,EAAcvH,EAAiBqH,EAAYC,GAC3CC,IAAgBF,IAClBb,GAAkB,EAAIjd,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGid,GAAkB,CAAC,EAAG,CACxGxb,KAAMuc,IAERhB,GAAiB,GAEnBa,EAAiBV,GAAOF,CAC1B,IAGID,GACFve,KAAKkZ,OAAOS,IAAIjB,EAAU,CACxBtE,KAAM,OACNpd,OAAQyhB,EAAkBC,EAAU0G,EAAkBzG,KAGnD,CAAC4F,EAAgBa,EAC1B,CACA,IAAIZ,EAAkBpb,EAAY2D,OAAOqX,EAAiBlK,UACtDmL,EAAajB,EAAiBpb,KAC9Bsc,EAAcd,EAAgBxb,KAC9Buc,EAAcvH,EAAiBqH,EAAYC,GAC3CE,EAAyB,CAC3Bxc,KAAMuc,EACNlH,cAAemG,EAAgBnG,cAC/B2D,mBAAoBwC,EAAgBxC,mBACpC1D,0BAA2BkG,EAAgBlG,0BAC3CmH,YAAajB,EAAgBiB,YAC7BvL,SAAUsK,EAAgBtK,SAC1B2J,sBAAuBW,EAAgBX,sBACvCC,oBAAqBU,EAAgBV,qBAQvC,OANIyB,IAAgBF,GAClBrf,KAAKkZ,OAAOS,IAAIjB,EAAU,CACxBtE,KAAM,OACNpd,OAAQyhB,EAAkBC,EAAU8G,EAAwB7G,KAGzD,CAAC4G,IAAgBF,EAAYG,EACtC,EACApF,EAAQsF,uBAAyB,SAAgCT,GAC/D,IAAIU,EAAS3f,KACb,OAAOzR,OAAO4C,KAAK8tB,GAAiBrlB,MAAK,SAAUvI,GACjD,OAAOsuB,EAAOrB,mBAAmBW,EAAgB5tB,IAAM,EACzD,GACF,EACA+oB,EAAQ2C,6CAA+C,SAAsDrE,EAAU1E,EAAc6I,EAAepB,GAClJ,IAAImE,EAAS5f,KACT6f,EAA0BjI,EAAgC5X,KAAK8Y,aAAc9E,EAAc6I,GAC/F,GAA+B,MAA3BgD,EACF,OAAO,KAMT,IAAIC,EAAiBD,EAAwB3E,QACzCG,EAAoBwE,EAAwBxE,kBAC5CH,EAAU4E,EAAeC,MAAK,WAChCH,EAAO1G,OAAe,OAAER,EAC1B,IAAU,OAAE,SAAUlY,GACpBof,EAAO1G,OAAe,OAAER,EAC1B,IASA,OAPAwC,EAAQja,YAAc6e,EAAe7e,YACrCjB,KAAKkZ,OAAOS,IAAIjB,EAAU,CACxBtE,KAAM,UACNiH,kBAAmBA,EACnBH,QAASA,EACTlkB,OAAQykB,IAEH,CACLP,QAASA,EACTG,kBAAmBA,EAEvB,EACAjB,EAAQwE,sBAAwB,SAA+BlG,EAAUsH,EAAerB,EAAgBD,EAAK/F,GAC3G,IAAIsH,EACAC,EAAwBlgB,KAAKkZ,OAAO5b,IAAIob,GAC5C,GAAIX,EAAUmI,GACZC,EAAwBxB,EAAezK,SAASrG,KAAKhN,UADvD,CAIA,IAAI2d,EAA4C,OAA1B0B,QAA4D,IAA1BA,GAAuG,QAA1DD,EAAwBC,EAAsBlpB,cAA8C,IAA1BipB,OAA5E,EAAwHA,EAAsBrZ,SACzO,IAAI4X,GAAoBziB,MAAMC,QAAQwiB,GAAtC,CAIA,IAAI4B,EAAgB5B,GAAkB,EAAInH,EAA6B,SAAGmH,IAAmB,EAAInH,EAA6B,SAAG2I,GACjII,EAAc1B,GAAOC,EACrB3e,KAAKkZ,OAAOS,IAAIjB,EAAU,CACxBtE,KAAM,OACNpd,OAAQyhB,EAAkBC,EAAU0H,EAAezH,IALrD,MAFEwH,EAAwBxB,EAAezK,SAASrG,KAAKhN,KAHvD,CAYF,EACOoZ,CACT,CA3bwC,GA4bxC,SAASkG,EAAwBE,GAC8MtY,GAAU,EACzP,CACA,SAASuY,EAAuBld,GAC9B,OAAO,IAAI6W,EAAqB7W,EAClC,CACA,IAAImd,EAAgBtI,EAAoB,IAAIC,QAAY,IAAIW,IAU5DvZ,EAAOC,QAAU,CACf+gB,uBAAwBA,EACxBE,kCAXF,SAA2Cpd,GACzC,IAAImY,EAASgF,EAAcjjB,IAAI8F,GAC/B,GAAImY,EACF,OAAOA,EAET,IAAIkF,EAAkBH,EAAuBld,GAE7C,OADAmd,EAAc5G,IAAIvW,EAAaqd,GACxBA,CACT,sCCvlBctgB,EAAQ,MAAtB,IACIugB,EAAiB,KAQrBphB,EAAOC,QAAU,CACfohB,OARF,SAAgBC,GAEdF,EAAiBE,CACnB,EAMEtjB,IALF,WACE,OAAOojB,CACT,sCCRA,IAAI3Y,EAAY5H,EAAQ,MAYpBmX,EAAwB,WAC1B,SAASA,EAASuJ,GAChB7gB,KAAK8gB,UAAYD,EACf7gB,KAAK8gB,UAAY,GAAgJ/Y,GAAU,GAC7K/H,KAAK+gB,KAAO,IAAIlI,GAClB,CACA,IAAI3U,EAASoT,EAAS5jB,UAkCtB,OAjCAwQ,EAAOyV,IAAM,SAAatoB,EAAK1C,GAG7B,GAFAqR,KAAK+gB,KAAa,OAAE1vB,GACpB2O,KAAK+gB,KAAKpH,IAAItoB,EAAK1C,GACfqR,KAAK+gB,KAAKrlB,KAAOsE,KAAK8gB,UAAW,CACnC,IAAIE,EAAWhhB,KAAK+gB,KAAK5vB,OAAOwI,OAC3BqnB,EAASC,MACZjhB,KAAK+gB,KAAa,OAAEC,EAASryB,MAEjC,CACF,EACAuV,EAAO5G,IAAM,SAAajM,GACxB,IAAI1C,EAAQqR,KAAK+gB,KAAKzjB,IAAIjM,GAK1B,OAJa,MAAT1C,IACFqR,KAAK+gB,KAAa,OAAE1vB,GACpB2O,KAAK+gB,KAAKpH,IAAItoB,EAAK1C,IAEdA,CACT,EACAuV,EAAOgd,IAAM,SAAa7vB,GACxB,OAAO2O,KAAK+gB,KAAKG,IAAI7vB,EACvB,EACA6S,EAAe,OAAI,SAAiB7S,GAClC2O,KAAK+gB,KAAa,OAAE1vB,EACtB,EACA6S,EAAOxI,KAAO,WACZ,OAAOsE,KAAK+gB,KAAKrlB,IACnB,EACAwI,EAAO2c,SAAW,WAChB,OAAO7gB,KAAK8gB,UAAY9gB,KAAK+gB,KAAKrlB,IACpC,EACAwI,EAAOid,MAAQ,WACbnhB,KAAK+gB,KAAKI,OACZ,EACO7J,CACT,CAzC4B,GA6C5BhY,EAAOC,QAAU,CACfkL,OAJF,SAAgBoW,GACd,OAAO,IAAIvJ,EAASuJ,EACtB,sCCpDA,IACI/L,EADQ3U,EAAQ,MACQ5C,cAAc,CACxC6jB,yBAA0B,SAAkCC,GAC1D,OAAOA,GACT,IAEF/hB,EAAOC,QAAUuV,qCCVjB,IAAIxT,EAAyBnB,EAAAA,MAAAA,QACzBoB,EAAiBD,EAAuBnB,EAAQ,OAChDwB,EAAmBL,EAAuBnB,EAAQ,OAClDmX,EAAWnX,EAAQ,MACnBqX,EAAmBrX,EAAQ,MAC3B4H,EAAY5H,EAAQ,MAEtB4X,EADa5X,EAAQ,MACA4X,UAGnBuJ,GAFUnhB,EAAQ,MAEK,oBACvBohB,EAA4B,oBAC5BtJ,EAAuC,oBAAZC,QAC/B,SAASsJ,EAAqBjb,GAC5B,YAAuDpM,IAAhDoM,EAAUC,QAAQqH,KAAK+C,OAAOjI,SAAS8Y,IAChD,CACA,SAASC,EAAwBte,EAAamD,EAAWob,EAAkBC,EAAmBC,GAC5F,IAAInT,EAAmC,OAArBiT,QAAkD,IAArBA,EAA8BA,EAAmBH,EAAqBjb,GAAagb,EAA4BD,EAC1JQ,EAAqC,OAAtBF,QAAoD,IAAtBA,EAA+BA,EAAoBxe,EAAY2e,kCAC5GC,EAAkB,GAAGnzB,OAAO6f,EAAa,KAAK7f,OAAOizB,EAAc,KAAKjzB,OAAO0X,EAAUC,QAAQyb,YACrG,OAAoB,MAAhBJ,EACK,GAAGhzB,OAAOmzB,EAAiB,KAAKnzB,OAAOgzB,GAEzCG,CACT,CACA,SAASE,EAAe3b,EAAWyb,GACjC,IAAIG,EAAkB,CACpBC,KAAM7b,EAAUS,SAASqb,OACzBC,aAAa,EAAI3gB,EAA0B,SAAG,CAAC,EAAG4E,EAAUS,SAAS6G,KAAKhN,KAAM0F,EAAUC,QAAQlX,WAClGizB,gBAAiBhc,EAAUC,SAE7B,MAAO,CACLwb,gBAAiBA,EACjBhO,aAAczN,EAAUC,QAAQqH,KAAK7G,SACrCiN,YAAakO,EACb5b,UAAWA,EAEf,CACA,IAAIic,EAAS,IACb,SAASC,EAAiBT,EAAiBzb,EAAWmc,EAAuB/zB,EAAOg0B,EAAqBC,GACvG,IAAIC,EAAcrB,EAAqBjb,GACnCuc,EAAen0B,EACfo0B,EAA6BJ,EAC7BlJ,EAAmB,IAAIjC,GAAiB,SAAUpU,GACpD,IAAI4f,EAAY5f,EAAY8D,OAAOX,GACnC,MAAO,CACLjC,QAAS,WAIHue,GAA6C,MAA9BE,GACjBA,EAA2Bva,cAE7Bwa,EAAU1e,UACVse,EAAUK,EACZ,EAEJ,IACIA,EAAa,CACfjB,gBAAiBA,EACjBzP,GAAIiQ,IACJU,uBAAwB,EACxBR,sBAAuBA,EACvBS,SAAU,WACR,OAAOL,CACT,EACAM,SAAU,SAAkBC,GAC1BP,EAAeO,CACjB,EACAC,uBAAwB,SAAgC7a,GAClDoa,GAA6C,MAA9BE,GACjBA,EAA2Bva,cAE7Bua,EAA6Bta,CAC/B,EACA+Q,gBAAiB,SAAyBpW,GACxC,OAAOqW,EAAiBD,gBAAgBpW,EAC1C,EACAmgB,gBAAiB,SAAyBngB,GACxC,OAAOqW,EAAiB8J,gBAAgBngB,EAC1C,EACAogB,uBAAwB,WACtB/J,EAAiB+J,wBACnB,GAEF,OAAOP,CACT,CACA,IAAIQ,EAAiC,WACnC,SAASA,EAAkBrgB,GACzB,IAAIV,EAAQ1C,MACZ,EAAI2B,EAA0B,SAAG3B,KAAM,oBAAoB,SAAUijB,GACnEvgB,EAAMwW,OAAe,OAAE+J,EAAWjB,gBACpC,IACAhiB,KAAK8Y,aAAe1V,EACpBpD,KAAKkZ,OAAS5B,EAAS7M,OArFN,IAsFnB,CACA,IAAIvG,EAASuf,EAAkB/vB,UAgQ/B,OA/PAwQ,EAAOyZ,QAAU,SAAiBpX,EAAWmX,EAAiBiE,EAAkBC,EAAmBpX,EAAUqX,EAAc1K,GACzH,IAAI6K,EAAkBN,EAAwB1hB,KAAK8Y,aAAcvS,EAAWob,EAAkBC,EAAmBC,GACjH,OAAO7hB,KAAK0jB,sBAAsB1B,EAAiBzb,EAAWmX,EAAiBiE,EAAkBC,EAAmBpX,EAAU2M,EAChI,EAOAjT,EAAOwf,sBAAwB,SAA+B1B,EAAiBzb,EAAWmX,EAAiBiE,EAAkBC,EAAmBpX,EAAU2M,GACxJ,IAAI/T,EAAcpD,KAAK8Y,aACnBpK,EAAmC,OAArBiT,QAAkD,IAArBA,EAA8BA,EAAmBH,EAAqBjb,GAAagb,EAA4BD,EAC1JQ,EAAqC,OAAtBF,QAAoD,IAAtBA,EAA+BA,EAAoBxe,EAAY2e,kCAI5GkB,EAAajjB,KAAKkZ,OAAO5b,IAAI0kB,GAC7B2B,EAA4B,KAC5BC,EAA+B,MAAdX,EACH,MAAdA,IAIFA,EAAajjB,KAAK6jB,mBAAmB7B,EAAiBzb,EAAWmX,EAAiBhP,EAAaoT,EAAc3K,GAAiB,EAAI5V,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGiJ,GAAW,CAAC,EAAG,CAC7MhC,YAAa,SAAqBC,GAMC,MAA7Bkb,GACFA,EAA0Brf,UAE5B,IAAIwf,EAAmC,OAAbtZ,QAAkC,IAAbA,OAAsB,EAASA,EAAShC,YACvFsb,GAAuBA,EAAoBrb,EAC7C,MASJkb,EAA4BV,EAAWzJ,gBAAgBpW,GACvD,IAAI4X,EAAciI,EAAWE,WAC7B,GAAIpL,EAAUiD,GASZ,MARA5X,EAAYgU,MAAM,CAChBvW,KAAM,iBACN6N,YAAaA,EACb0M,gBAAiBwI,EACjBrd,UAAWA,EACXwd,kBAAmBd,EAAWP,sBAC9BZ,aAAcA,IAEV9G,EAER,GAAIA,aAAuBva,MACzB,MAAMua,EAER,OAAOA,CACT,EAOA9W,EAAOgD,OAAS,SAAgBqS,EAAapC,GAC3C,IAAI/T,EAAcpD,KAAK8Y,aACnBkJ,EAAkBzI,EAAYyI,gBAChCzb,EAAYgT,EAAYhT,UACtB0c,EAAajjB,KAAKgkB,uBAAuBhC,EAAiBzb,EAAW,KAAMgT,EAAa,MACxF4F,EAAa8D,EAAWM,gBAAgBngB,GAM5C,OALAA,EAAYgU,MAAM,CAChBvW,KAAM,uBACNsW,gBAAiBA,EACjB8M,WAAYhB,EAAW1Q,KAElB,CACLjO,QAAS,WACP6a,EAAW7a,SACb,EAEJ,EACAJ,EAAOsf,uBAAyB,SAAgCjK,GAC9D,IAAI0J,EAAajjB,KAAKkZ,OAAO5b,IAAIic,EAAYyI,iBAC3B,MAAdiB,GACFA,EAAWO,wBAEf,EACAtf,EAAOggB,0BAA4B,SAAmC3d,EAAWob,EAAkBC,EAAmBC,GACpH,IACIG,EAAkBN,EADJ1hB,KAAK8Y,aACoCvS,EAAWob,EAAkBC,EAAmBC,GAC3G,OAAO7hB,KAAKkZ,OAAO5b,IAAI0kB,EACzB,EACA9d,EAAO8f,uBAAyB,SAAgChC,EAAiBzb,EAAWmc,EAAuB/zB,EAAOg0B,GACxH,IAAIM,EAAajjB,KAAKkZ,OAAO5b,IAAI0kB,GAKjC,OAJkB,MAAdiB,IACFA,EAAaR,EAAiBT,EAAiBzb,EAAWmc,EAAuB/zB,EAAOg0B,EAAqB3iB,KAAKmkB,kBAClHnkB,KAAKkZ,OAAOS,IAAIqI,EAAiBiB,IAE5BA,CACT,EACA/e,EAAO2f,mBAAqB,SAA4B7B,EAAiBzb,EAAWmX,EAAiBhP,EAAaoT,EAAc3K,EAAiB3M,GAC/I,IAWI4Z,EACAC,EAZA5Y,EAASzL,KACToD,EAAcpD,KAAK8Y,aAMnBiL,EAAoB3gB,EAAYyD,MAAMN,GACtC+d,EAAcP,EAAkBpV,OAChC4V,EAA+B,cAAhBD,EACfE,EAAmBD,GAAiC,YAAjBzC,GAA8C,UAAhBwC,EAKjEG,EAAwB,WAAkC,EAC9D,OAAQ/V,GACN,IAAK,aAED0V,GAAc,EACdC,GAAoB,EACpB,MAEJ,IAAK,mBAEDD,GAAeG,EACfF,EAAoBG,EACpB,MAEJ,IAAK,oBAEDJ,GAAc,EACdC,EAAoBG,EACpB,MAGJ,QAEIJ,GAAc,EACdC,GAAoB,EAS1B,GAAIA,EAAmB,CACrB,IAAI9K,EAAc2I,EAAe3b,EAAWyb,GACxC0C,EAAcjC,EAAiBT,EAAiBzb,EAAWwd,EAAmBxK,EAAa,KAAMvZ,KAAKmkB,kBAC1GnkB,KAAKkZ,OAAOS,IAAIqI,EAAiB0C,EACnC,CACA,GAAIN,EAAa,CACf,IACIzB,EADAgC,EAAezC,EAAe3b,EAAWyb,GAE7CtE,EAAgBtW,UAAU,CACxB+L,MAAO,SAAe1K,GACpBka,EAAsBla,EACtB,IAAIwa,EAAaxX,EAAOyN,OAAO5b,IAAI0kB,GAC/BiB,GACFA,EAAWK,uBAAuBX,GAEpC,IAAIiC,EAA6B,OAAbpa,QAAkC,IAAbA,OAAsB,EAASA,EAAS2I,MAC7EyR,GASFA,GAR6C,EAAIrjB,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGkH,GAAe,CAAC,EAAG,CAChID,YAAa,WAEPgZ,EAAqBjb,IACvBkC,EAAaD,aAEjB,IAIN,EACA7O,KAAM,WACJ,IAAIspB,EAAaxX,EAAOuY,uBAAuBhC,EAAiBzb,EAAWwd,EAAmBY,EAAchC,GAC5GM,EAAWC,wBAA0B,EACrCD,EAAWG,SAASuB,GACpBF,IACA,IAAII,EAA4B,OAAbra,QAAkC,IAAbA,OAAsB,EAASA,EAAS7Q,KAC5D,MAAhBkrB,GAEFA,EADezhB,EAAY2D,OAAOR,EAAUS,UAGhD,EACAxG,MAAO,SAAeuO,GACpB,IAAIkU,EAAaxX,EAAOuY,uBAAuBhC,EAAiBzb,EAAWwd,EAAmBhV,EAAQ4T,GAO5D,IAAtCM,EAAWC,wBACbD,EAAWG,SAASrU,GAMtB0V,IACA9B,EAAsB,KACtBM,EAAWK,uBAAuB,MAClC,IAAIwB,EAA6B,OAAbta,QAAkC,IAAbA,OAAsB,EAASA,EAAShK,MACjFskB,GAAiBA,EAAc/V,EACjC,EACAxG,SAAU,WACRkc,IACA9B,EAAsB,KACtB,IAAIM,EAAaxX,EAAOyN,OAAO5b,IAAI0kB,GAC/BiB,GACFA,EAAWK,uBAAuB,MAEpC,IAAIyB,EAAgC,OAAbva,QAAkC,IAAbA,OAAsB,EAASA,EAASjC,SACpFwc,GAAoBA,GACtB,EACAvc,YAA0B,OAAbgC,QAAkC,IAAbA,OAAsB,EAASA,EAAShC,cAE5E,IAAIwc,EAAehlB,KAAKkZ,OAAO5b,IAAI0kB,GACnC,IAAKgD,EAAc,CACjB,IAAIlF,EAAiB,IAAIvC,SAAQ,SAAUta,GACzCwhB,EAAwBxhB,CAC1B,IAGA6c,EAAe7e,YAAc,SAAWsF,EAAUS,SAAS6G,KAAKhN,KAAO,IACvEmkB,EAAevC,EAAiBT,EAAiBzb,EAAWwd,EAAmBjE,EAAgB6C,EAAqB3iB,KAAKmkB,kBACzHnkB,KAAKkZ,OAAOS,IAAIqI,EAAiBgD,EACnC,CACF,KAAO,CACL,IAAID,EAAgC,OAAbva,QAAkC,IAAbA,OAAsB,EAASA,EAASjC,SACpFwc,GAAoBA,GACtB,CACA,IAAI9B,EAAajjB,KAAKkZ,OAAO5b,IAAI0kB,GAYjC,OAXgB,MAAdiB,GAAsNlb,GAAU,GAClO3E,EAAYgU,MAAM,CAChBvW,KAAM,sBACNojB,WAAYhB,EAAW1Q,GACvBhM,UAAWA,EACX4Q,gBAAiBA,EACjBzI,YAAaA,EACboT,aAAcA,EACdiC,kBAAmBA,EACnBK,YAAaA,IAERnB,CACT,EACOQ,CACT,CA1QqC,GA2QrC,SAASwB,EAAoB7hB,GAC3B,OAAO,IAAIqgB,EAAkBrgB,EAC/B,CACA,IAAImd,EAAgBtI,EAAoB,IAAIC,QAAY,IAAIW,IAU5DvZ,EAAOC,QAAU,CACf0lB,oBAAqBA,EACrB1N,+BAXF,SAAwCnU,GACtC,IAAImY,EAASgF,EAAcjjB,IAAI8F,GAC/B,GAAImY,EACF,OAAOA,EAET,IAAIkF,EAAkBwE,EAAoB7hB,GAE1C,OADAmd,EAAc5G,IAAIvW,EAAaqd,GACxBA,CACT,EAIEiB,wBAAyBA,sCClX3B,IAAIjc,EAAoBtF,EAAQ,MAC5BhS,EAAQgS,EAAQ,MAChB7G,EAAUnL,EAAMmL,QAepBgG,EAAOC,QAdP,SAAkCzR,GAChC,IAAIG,EAAWH,EAAMG,SACnBmV,EAActV,EAAMsV,YACpB8hB,EAAyBp3B,EAAMo3B,uBAC7BnoB,EAAUzD,GAAQ,WACpB,MAAO,CACL8J,YAAaA,EACb8hB,uBAAwBA,EAE5B,GAAG,CAAC9hB,EAAa8hB,IACjB,OAAoB/2B,EAAMiX,cAAcK,EAAkB+B,SAAU,CAClE7Y,MAAOoO,GACN9O,EACL,qCChBA,IACI0T,GAAmBL,EADMnB,EAAAA,MAAAA,SACiBA,EAAQ,OAClD4H,EAAY5H,EAAQ,MAQpBqX,EAAgC,WAClC,SAASA,EAAiBtQ,GACxB,IAAIxE,EAAQ1C,MACZ,EAAI2B,EAA0B,SAAG3B,KAAM,eAAgB,IACvD,EAAI2B,EAA0B,SAAG3B,KAAM,oBAAqB,OAC5D,EAAI2B,EAA0B,SAAG3B,KAAM,0BAA2B,MAClEA,KAAK0Z,QAAU,SAAUtW,GAKvB,OAJAV,EAAMyiB,eACqB,IAAvBziB,EAAMyiB,eACRziB,EAAM0iB,kBAAoBle,EAAO9D,IAE5B,CACLkB,QAAS,WACP5B,EAAMyiB,aAAen2B,KAAKq2B,IAAI,EAAG3iB,EAAMyiB,aAAe,GAC3B,IAAvBziB,EAAMyiB,eACqB,MAA3BziB,EAAM0iB,mBAAgNrd,GAAU,GAClOrF,EAAM0iB,kBAAkB9gB,UACxB5B,EAAM0iB,kBAAoB,KAE9B,EAEJ,CACF,CACA,IAAIlhB,EAASsT,EAAiB9jB,UAyD9B,OAxDAwQ,EAAOsV,gBAAkB,SAAyBpW,GAChD,IACIkiB,EADA7Z,EAASzL,KAIb,GAAIoD,EAAYmiB,WACd,MAAO,CACLjhB,QAAS,WAAoB,GAUjC,IAAI0e,EAAYhjB,KAAK0Z,QAAQtW,GACzBoiB,EAAsB,KACtBhC,EAAyB,WAC3BiC,aAAaD,GACbA,EAAsB,KACtB/Z,EAAOia,wBAA0B,KACjC1C,EAAU1e,SACZ,EAYA,OAXAkhB,EAAsBG,WAAWnC,EAxDF,KAiE4B,QAA1D8B,EAAwBtlB,KAAK0lB,+BAA+D,IAA1BJ,GAA4CA,EAAsB1xB,KAAKoM,MAC1IA,KAAK0lB,wBAA0BlC,EACxB,CACLlf,QAAS,WACP,IAAIshB,EAC0D,QAA7DA,EAAyBna,EAAOia,+BAAgE,IAA3BE,GAA6CA,EAAuBhyB,KAAK6X,EACjJ,EAEJ,EACAvH,EAAOqf,gBAAkB,SAAyBngB,GAChD,IAAI+b,EAAanf,KAAK0Z,QAAQtW,GAE9B,OADApD,KAAKwjB,yBACErE,CACT,EACAjb,EAAOsf,uBAAyB,WAC9B,IAAIqC,EACwD,QAA3DA,EAAyB7lB,KAAK0lB,+BAAgE,IAA3BG,GAA6CA,EAAuBjyB,KAAKoM,MAC7IA,KAAK0lB,wBAA0B,IACjC,EACAxhB,EAAO4hB,eAAiB,WACtB,OAAO9lB,KAAKmlB,YACd,EACO3N,CACT,CAjFoC,GAkFpClY,EAAOC,QAAUiY,qCC5FjB,IACE3C,EADa1U,EAAQ,MACA0U,UA2FvBvV,EAAOC,QA1FP,SAASqV,EAAemR,EAAqBC,EAAYC,GAEvD,IAAIC,EAAiB,KACwB,MAAzCF,EAAWG,KAAKC,wBAClBF,EAAiBF,EAAWG,KAAKE,QAEnC,IAAIC,EAAeN,EAAWO,gBAAgBN,GAC1ClP,EAAUuP,EAAavP,QACzBC,EAAcsP,EAAatP,YAC3BC,EAAaqP,EAAarP,WACxBuP,EAAmB,CAAC,EACpBC,EAAuB,CAAC,EACb,MAAX1P,GACqBxoB,OAAO4C,KAAK4lB,GAClBzmB,SAAQ,SAAUo2B,GACjC,IAAIC,EAAwB5P,EAAQ2P,GAClCE,EAA6BD,EAAsBC,2BACnDrc,EAAUoc,EAAsBpc,QAChCsc,EAAaF,EAAsBE,WACnCv3B,EAAYq3B,EAAsBr3B,UAChC8T,EAAc2iB,EAAoBe,eAAeF,GAGrDJ,EAAiBE,GAAiB7R,EAAUzR,EAAayjB,EAAYv3B,EAAW,CAC9Eof,YAAyB,OAAZnE,QAAgC,IAAZA,OAAqB,EAASA,EAAQmE,YACvEqY,mBAAgC,OAAZxc,QAAgC,IAAZA,OAAqB,EAASA,EAAQwc,mBAC9EC,iBAAkB,kBACjBJ,EACL,IAEiB,MAAf5P,GACwBzoB,OAAO4C,KAAK6lB,GAClB1mB,SAAQ,SAAU22B,GACpC,IAAIC,EAAwBlQ,EAAYiQ,GACxC,GAA6B,MAAzBC,EAAJ,CAGA,IAAIC,EAAmBD,EAAsBlB,WAC3CoB,EAAeF,EAAsBjB,iBACvCQ,EAAqBQ,GAAsBrS,EAAemR,EAAqBoB,EAAkBC,EAHjG,CAIF,IAEF,IAAIC,GAAa,EACjB,MAAO,CACL/iB,QAAS,WACH+iB,IAGoB,MAApBb,GACFj4B,OAAO+4B,OAAOd,GAAkBl2B,SAAQ,SAAU2M,IAEhDsqB,EADmBtqB,EAAKqH,UAE1B,IAE0B,MAAxBmiB,GACFl4B,OAAO+4B,OAAOb,GAAsBn2B,SAAQ,SAAU+L,IAEpDkrB,EADmBlrB,EAAMiI,UAE3B,IAEF+iB,GAAa,EACf,EACArQ,YAAayP,EACbxP,WAA2B,OAAfA,QAAsC,IAAfA,EAAwBA,EAAa,KACxEH,aAAc,WACZ,IAEM0Q,EAFFC,EAAkBzB,EAAWG,KAAKC,sBACtC,GAAuB,MAAnBqB,EAGF,MADAvB,EAAwD,QAAtCsB,EAAkBtB,SAAgD,IAApBsB,EAA6BA,EAAkBxB,EAAWG,KAAKE,OAYjI,OAF8B,MAA9BoB,EAAyB,QAAYA,EAAyB,QAAIA,CAGpE,EAEIJ,iBACF,OAAOA,CACT,EACAtQ,QAASyP,EACTtP,aAAc8O,EAAWG,KAAKuB,cAElC,qCC3FA,IACInmB,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChD4H,EAAY5H,EAAQ,MACpBhS,EAAQgS,EAAQ,MAChBwF,EAAWxF,EAAQ,MACrBwnB,EAAoBhiB,EAAStE,WAAWsmB,kBACxC1f,EAAatC,EAASsC,WACtB2f,EAA2BjiB,EAASiiB,yBACpC1f,EAAoBvC,EAASuC,kBAC7B2f,EAAgBliB,EAASkiB,cACzBjiB,EAA4BD,EAASC,0BACrCC,EAAaF,EAASE,WACtBiiB,EAAuBniB,EAASmiB,qBAE9BC,GADU5nB,EAAQ,MACC,MACnB6nB,EAAW,OAsRf1oB,EAAOC,QAAU,CACfsV,UA7QF,SAAmBzR,EAAa6kB,EAAoB34B,EAAWib,EAASqc,GACtE,IAAIsB,EAAwBC,EAA+CC,EAGa,QAAvFF,EAAyB/5B,EAAMk6B,0DAA2F,IAA3BH,GAA0H,QAA5EC,EAAyBD,EAAuBI,8BAA+D,IAA3BH,GAA6CA,EAAuB71B,QAYtS01B,IACA,IAQIO,EAuBAC,EAgEAC,EA8DA7X,EACA8X,EACAC,EA/JAja,EAAiH,QAAlG0Z,EAAmC,OAAZ7d,QAAgC,IAAZA,OAAqB,EAASA,EAAQmE,mBAAkD,IAAzB0Z,EAAkCA,EAAuB,mBAClLrB,GAAqB,EAAIxlB,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAe,OAAZgJ,QAAgC,IAAZA,OAAqB,EAASA,EAAQwc,oBAAqB,CAAC,EAAG,CAC5K1c,OAAO,IAOLue,GAA0B,EAC1BC,EAA2B,SAAkCtiB,EAAWuiB,GAE1E,OADAF,GAA0B,EACnBxlB,EAAY2lB,kBAAkB,CACnCxiB,UAAWA,EACXxH,OAAQ+pB,GAEZ,EAWIE,EAAmB,IAAInB,EACvBoB,EAAqBhhB,EAAWwC,QAAO,SAAUC,GACnD,OAAOse,EAAiB5hB,UAAUsD,EACpC,IAEIwe,EAAe,KAKfC,GAAwB,EACxBC,EAAqB,SAA4BxY,GAQnD,IAAIyY,EADJF,GAAwB,EAExB,IAAIG,EAAU,IAAIzB,EAClB,IAA6D,IAAzD3f,EAAkBqhB,mCAA6C,CAgBjE,IAAItH,EAAa,uBAAyB6F,EAAqBlX,EAAQthB,GACvE+5B,EAAa1B,EAAkBvkB,EAAa6e,GAAY,WAEtD,OADc7e,EAAYomB,aACXjc,QAAQqD,EAAQthB,EAAWy3B,EAC5C,GACF,KAAO,CAELsC,EADcjmB,EAAYomB,aACLjc,QAAQqD,EAAQthB,EAAWy3B,EAClD,CACA,IAYEve,EAZ0B6gB,EAAWjiB,UAAU,CAC7C5G,MAAO,SAAe0P,GACpBgZ,EAAehZ,EACfoZ,EAAQ9oB,MAAM0P,EAChB,EACAvW,KAAM,SAAcqJ,GAClBsmB,EAAQ3vB,KAAKqJ,EACf,EACAuF,SAAU,WACR+gB,EAAQ/gB,UACV,IAEkCC,YAEtC,OADAggB,EAAgChgB,EACzBP,EAAWwC,QAAO,SAAUC,GACjC,IAAI+e,EAAsBH,EAAQliB,UAAUsD,GAC5C,OAAO,WACL+e,EAAoBjhB,cACpBggB,GACF,CACF,GACF,EAEIkB,EAAiB,SAAwBnjB,EAAWojB,IACO,IAAzDzhB,EAAkBqhB,qCASpBJ,GAAwB,GAiB1B,IAAIS,EAAwBjC,EAAkBvkB,EAAamD,EAAUC,QAAQyb,WAAY0H,GAASviB,UAAU,CAC1G5G,MAAO,SAAe0P,GACpB8Y,EAAiBxoB,MAAM0P,EACzB,EACAvW,KAAM,SAAcqJ,GAClBgmB,EAAiBrvB,KAAKqJ,EACxB,EACAuF,SAAU,WACRygB,EAAiBzgB,UACnB,IAEFkgB,EAA2BmB,EAAsBphB,WACnD,EACIqhB,EAA8B,SAAqCC,GACrE,IAAIvjB,EAAYX,EAA0BkkB,EAAiBx6B,EAAWy3B,IACtEwB,EAAkBnlB,EAAY8D,OAAOX,GACjB,eAAhBmI,MAO8B,qBAAhBA,GAA8E,cAAxCtL,EAAYyD,MAAMN,GAAWoI,SAEnF+a,EAAenjB,GAAW,WAGxB,IAAIuiB,EAAoBM,EAAmBU,EAAgBlZ,QAE3D,OADwBiY,EAAyBtiB,EAAWuiB,EAE9D,IAEJ,EAIA,GAAgC,+BAA5Bb,EAAmB7T,KAAuC,CAK9C,QADduU,GAFA/X,EADiCqX,EACGrX,QAElB2B,KACgKxK,GAAU,GAC5L,IAAIgiB,EAAUnC,EAAyBtqB,IAAIqrB,GAC3C,GAAe,MAAXoB,EACFF,EAA4BE,OACvB,CAQL,IAAIjB,EAAoC,eAAhBpa,EAA+B,KAAO0a,EAAmBxY,GAE7EoZ,EAAwBpC,EAAyBqC,OAAOtB,GAAS,SAAUuB,GAC7ExB,IACA,IAAIniB,EAAYX,EAA0BskB,EAAiB56B,EAAWy3B,GACtEwB,EAAkBnlB,EAAY8D,OAAOX,GACZ,MAArBuiB,GACFY,EAAenjB,GAAW,WACxB,OAAOsiB,EAAyBtiB,EAAWuiB,EAC7C,GAEJ,IACAJ,EAAuBsB,EAAsB1lB,OAC/C,CACF,KAAO,CACL,IACIkC,EAAUX,EADUoiB,GAGxBU,EAA4B,OAD5B/X,EAASpK,EAAQoK,QACA4B,QAAkB5B,EAAO4B,QAAU5B,EAAO2B,GAC3DsX,EAA4BrjB,EAC9B,CACA,IAAI6gB,GAAa,EACb8C,GAAa,EACbC,GAA4B,EAC5BC,EAAe,WACbF,IAGJ5B,GAAmBA,EAAgBjkB,UACnC6lB,GAAa,EACf,EACIG,EAAuB,WACrBF,IAGAxB,EACFH,GAA4BA,IAE5BD,GAAiCA,IAEnCE,GAAwBA,IACxB0B,GAA4B,EAC9B,EACA,MAAO,CACLhW,KAAM,iBACNhR,YAAaA,EACbwjB,2BAA4BA,EAC5BtiB,QAAS,WACH+iB,IAGJgD,IACAC,IACAjD,GAAa,EACf,EACAgD,aAAcA,EACdC,qBAAsBA,EACtBtC,SAAUA,EACVzV,GAAIoW,EAEAtB,iBACF,OAAOA,GAAc8C,CACvB,EAEIjB,mBACF,OAAOA,CACT,EACAroB,KAAM+P,EAAO/P,KACbkmB,mBAAoBA,EACpBrY,YAAaA,EACb3P,OAAQoqB,EAAwBF,OAAqB9uB,EACrD7K,UAAWA,EAEf,EAGEi7B,0BAvRF,WAEI,IAAIC,EAAuBC,EADJ,OAArB1C,IAIFA,EACuF,QAAtFyC,EAAwBr8B,EAAMk6B,0DAA0F,IAA1BmC,GAAwH,QAA3EC,EAAyBD,EAAsBlC,8BAA+D,IAA3BmC,OAA7F,EAA0IA,EAAuBn4B,QAEvS,sCCxBA,IACIiP,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChDgV,EAAmBhV,EAAQ,MAc/Bb,EAAOC,QAPP,SAAwBmrB,EAAUp7B,EAAWib,GAG3C,OAAO4K,EADKuV,EACmBp7B,GAAW,EAAIiS,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGgJ,GAAU,CAAC,EAAG,CACxHmE,YAAa,eAEjB,qCCfA,IACIic,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7DyU,EAAiBzU,EAAQ,MAE3BoqB,EADapqB,EAAQ,MACgBoqB,0BACnCK,EAAkBzqB,EAAQ,MAC1BsQ,EAAYtQ,EAAQ,MACtB0qB,EAAcpa,EAAUoa,YACxBjU,EAAYnG,EAAUmG,UACtB3Q,EAASwK,EAAUxK,OACnBD,EAAWyK,EAAUzK,SACnB8kB,EAAsC,CACxC1W,KAAM,2BAkJR9U,EAAOC,QAhJP,SAA2BwmB,EAAqBC,EAAYzb,GAC1D,IAAIwgB,EAAuBC,EAAwBC,EAAwBC,EAqB3EX,IACA,IAAIY,EAA6R,QAAvPJ,EAAoC,OAAZxgB,QAAgC,IAAZA,GAAsG,QAAvEygB,EAAyBzgB,EAAQ6gB,wCAAyE,IAA3BJ,OAAzF,EAAsIA,EAAuBnU,2BAA2D,IAA1BkU,EAAmCA,EAAwBD,EAChWO,EAAwR,QAArPJ,EAAqC,OAAZ1gB,QAAgC,IAAZA,GAAsG,QAAvE2gB,EAAyB3gB,EAAQ6gB,wCAAyE,IAA3BF,OAAzF,EAAsIA,EAAuBjF,wBAAyD,IAA3BgF,EAAoCA,EAAyB,KAC7VK,EAAeV,IACfW,EAAoCtlB,EAAO,IAAIulB,IAAI,CAACL,KACpDM,EAAYzlB,EAASmlB,GACvBtU,EAAsB4U,EAAU,GAChCC,EAAyBD,EAAU,GACjCE,EAAa3lB,EAASqlB,GACxBpF,EAAmB0F,EAAW,GAC9BC,EAAsBD,EAAW,GAC/BE,EAAoBhB,GAAY,WAClC,GAAIS,EAAah5B,QAAS,CACxB,IAAIw5B,EAA0B,CAC5B1X,KAAM,2BAERmX,EAAkCj5B,QAAQy5B,IAAID,GAC9CJ,EAAuBI,EACzB,CACF,GAAG,CAACJ,EAAwBJ,IACxBU,EAA2BnB,GAAY,SAAUja,GACnD,GAAI0a,EAAah5B,QAAS,CACxB,IAAI25B,EAA6BrX,EAAemR,EAAqBC,EAAYpV,GACjF2a,EAAkCj5B,QAAQy5B,IAAIE,GAC9CP,EAAuBO,GACvBL,EAAoBhb,EACtB,CACF,GAAG,CAACmV,EAAqBC,EAAY0F,EAAwBJ,IACzDY,EAA2BjmB,GAAO,GA4FtC,OA3FA2Q,GAAU,WACR,OAAO,WAQLsV,EAAyB55B,SAAU,CACrC,CACF,GAAG,IACHskB,GAAU,WACR,IAAyC,IAArCsV,EAAyB55B,QAc3B,OAJA45B,EAAyB55B,SAAU,OACF,4BAA7BukB,EAAoBzC,MAA0D,MAApB6R,GAC5D+F,EAAyB/F,IAwB7B,IAAIkG,EAAiCZ,EAAkCj5B,QACvE,GAAIg5B,EAAah5B,QAAS,CACxB,IACE85B,EADEC,GAAY,EAAI1B,EAAqC,SAAGwB,GAE5D,IACE,IAAKE,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIsL,EAAgCH,EAAMz9B,MAC1C,GAAI49B,IAAkC1V,EACpC,MAEFsV,EAAuC,OAAEI,GACE,4BAAvCA,EAA8BnY,MAChCmY,EAA8BjoB,SAElC,CACF,CAAE,MAAO4L,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CACF,GAAG,CAACsW,EAAqBoP,EAAkB+F,EAA0BV,IACrE1U,GAAU,WACR,OAAO,WAGL,IACE4V,EADEC,GAAa,EAAI9B,EAAqC,SAAGY,EAAkCj5B,SAE/F,IACE,IAAKm6B,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAIyL,EAAuBF,EAAO79B,MACA,4BAA9B+9B,EAAqBtY,MACvBsY,EAAqBpoB,SAEzB,CACF,CAAE,MAAO4L,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACF,CACF,GAAG,IACI,CAA8B,4BAA7BsW,EAAoBzC,KAAqC,KAAOyC,EAAqBmV,EAA0BH,EACzH,oCC7JA,IAAIc,EAA0BxsB,EAAQ,MAClCwF,EAAWxF,EAAQ,MACrB0qB,EAAcllB,EAASklB,YACvBjU,EAAYjR,EAASiR,UA4CvBtX,EAAOC,QA9BP,WACE,IAAIqtB,EAAkBD,EAAwB,MAC1CE,EAAgBF,GAAwB,GACxCG,EAAejC,GAAY,WACE,MAA3B+B,EAAgBt6B,UAClBs6B,EAAgBt6B,QAAQkW,cACxBokB,EAAgBt6B,QAAU,MAE5Bu6B,EAAcv6B,SAAU,CAC1B,GAAG,IACCy6B,EAAalC,GAAY,SAAUpiB,GACrCmkB,EAAgBt6B,QAAUmW,EAC1BokB,EAAcv6B,SAAU,CAC1B,GAAG,IACC06B,EAAgBnC,GAAY,WAC9B+B,EAAgBt6B,QAAU,KAC1Bu6B,EAAcv6B,SAAU,CAC1B,GAAG,IAMH,OAHAskB,GAAU,WACR,OAAOkW,CACT,GAAG,CAACA,IACG,CACLD,cAAeA,EACfE,WAAYA,EACZD,aAAcA,EACdE,cAAeA,EAEnB,qCC9CA,IAAIC,EAAsB9sB,EAAQ,MAEhCoqB,EADapqB,EAAQ,MACgBoqB,0BACnC2C,EAAkB/sB,EAAQ,MAC1BgtB,EAA+BhtB,EAAQ,MAIzCqT,GAHcrT,EAAQ,MACIitB,cACZjtB,EAAQ,MACEqT,aA6B1BlU,EAAOC,QAXP,SAAqByH,EAAU3V,GAC7B,IAAIuvB,EAAOqM,EAAoB3vB,MAC/B,OAAIsjB,EAEKA,EAAK1L,YAAYlO,EAAU3V,GArBtC,SAA4B2V,EAAU3V,GAGpCk5B,IACA,IAAIvW,EAAeR,EAAYxM,GAW/B,OAVAmmB,EAA6BnZ,EAAc,mCACpBkZ,EAAgBlZ,EAAc3iB,EAAK,iBAChC2R,IAS5B,CASWqqB,CAAmBrmB,EAAU3V,EAExC,qCCpCA,IACEmvB,EADargB,EAAQ,MACwBqgB,kCAC3C/K,EAAsBtV,EAAQ,MAC9BwsB,EAA0BxsB,EAAQ,MAClCsQ,EAAYtQ,EAAQ,MACtByW,EAAYnG,EAAUmG,UACtB5Q,EAAWyK,EAAUzK,SAErB2R,EADcxX,EAAQ,MACYwX,sBACtBxX,EAAQ,MAqEtBb,EAAOC,QApEP,SAAyByU,EAAcC,EAAaqG,GAClD,IAAIlX,EAAcqS,IACd6X,EAAmB9M,EAAkCpd,GACrDkoB,EAAeqB,GAAwB,GAEzCjmB,EADcV,EAAS,GACC,GACtB+S,EAAqBpB,EAAsB3D,EAAcC,GAGzDwH,EAAiB6R,EAAiB9S,mBAAmBxG,EAAcC,EAAa8E,EAAoBuB,GACpGiT,EAA2BZ,GAAwB,GAWvD,SAASa,KACsB,IAAzBlC,EAAah5B,UAA0D,IAArCi7B,EAAyBj7B,SAO/DoU,GAAY,SAAU4C,GACpB,OAAOA,EAAQ,CACjB,GACF,CA6BA,OAtBAsN,GAAU,WACR0U,EAAah5B,SAAU,EACvB,IAAI6sB,EAAamO,EAAiBlmB,UAAUqU,EAAgB+R,GAC5D,OAAO,WAKLlC,EAAah5B,SAAU,EACvB6sB,EAAW7a,SACb,CAIF,GAAG,CAAClB,EAAa2V,IAQV,CAEL/V,KAAMyY,EAAezY,KACrByqB,oBA9CF,WACEF,EAAyBj7B,SAAU,CACrC,EA6CEo7B,mBAtDF,WACEH,EAAyBj7B,SAAU,EACdg7B,EAAiBhP,mBAAmB7C,GAAgB,IAEvE+R,GAEJ,EAkDF,qCC7EA,IAAI7nB,EAAWxF,EAAQ,MACrByW,EAAYjR,EAASiR,UACrB3Q,EAASN,EAASM,OAWpB3G,EAAOC,QAVP,WACE,IAAI+rB,EAAerlB,GAAO,GAO1B,OANA2Q,GAAU,WAER,OADA0U,EAAah5B,SAAU,EAChB,WACLg5B,EAAah5B,SAAU,CACzB,CACF,GAAG,IACIg5B,CACT,oCCZA,IAAI7V,EAAsBtV,EAAQ,MAC9B4H,EAAY5H,EAAQ,MACpBhS,EAAQgS,EAAQ,MAChBwF,EAAWxF,EAAQ,MACrBwtB,EAAgChoB,EAAStE,WAAWssB,8BACpD/Z,EAAcjO,EAASiO,YACrBgD,EAAYzoB,EAAMyoB,UACpB5Q,EAAW7X,EAAM6X,SACjB1M,EAAUnL,EAAMmL,QAkClBgG,EAAOC,QAjCP,SAAkCyU,EAAcC,GAC9C,IAAI7Q,EAAcqS,IACd4T,EAAa/vB,GAAQ,WACvB,IAAI4a,EAAWN,EAAYI,EAAcC,GACzC,OAAgB,MAAZC,EACK,MAEW,2BAAlBA,EAASE,MAAiKrM,GAAU,GAC/K4lB,EAA8BvqB,EAAa8Q,EAASI,OAC7D,GAAG,CAAClR,EAAa4Q,EAAcC,IAC3BwX,EAAYzlB,EAAuB,MAAdqjB,GACvBuE,EAAWnC,EAAU,GACrBoC,EAAcpC,EAAU,GAmB1B,OAlBA7U,GAAU,WACR,IAAInO,EAEJ,GADAolB,EAA0B,MAAdxE,GACM,MAAdA,EAAoB,CACtB,IAAIyE,EAAoB,WACtBD,GAAY,EACd,EACAplB,EAAe4gB,EAAWjiB,UAAU,CAClCmB,SAAUulB,EACVttB,MAAOstB,GAEX,CACA,OAAO,WACDrlB,GACFA,EAAaD,aAEjB,CACF,GAAG,CAAC6gB,IACGuE,CACT,qCCzCA,IACErD,EADapqB,EAAQ,MACgBoqB,0BACnCwD,EAAuB5tB,EAAQ,MAC/B6tB,EAA6B7tB,EAAQ,MACrCsV,EAAsBtV,EAAQ,MAEhC+N,EADc/N,EAAQ,MACCkB,WAAW6M,WAwBpC5O,EAAOC,QAlBP,SAA0BmrB,EAAUp7B,EAAWib,GAG7CggB,IACA,IAAInnB,EAAcqS,IACdtP,EAAQ6nB,EAA2BtD,EAAUp7B,EAAWib,GAAWA,EAAQwc,mBAAqBxc,EAAQwc,mBAAqB,CAC/H1c,OAAO,IAUT,OARW0jB,EAAqB,CAC9BzT,qBAAsB,qBACtB0N,SAAsB,OAAZzd,QAAgC,IAAZA,OAAqB,EAASA,EAAQyd,SACpEtK,gBAAiBxP,EAAW9K,EAAa+C,GACzCuI,YAAyB,OAAZnE,QAAgC,IAAZA,OAAqB,EAASA,EAAQmE,YACvEvI,MAAOA,EACP2b,aAA0B,OAAZvX,QAAgC,IAAZA,OAAqB,EAASA,EAAQ0jB,uBAG5E,qCC7BA,IAAInZ,EAAkB3U,EAAQ,MAC1BwF,EAAWxF,EAAQ,MACrBuhB,EAA0B/b,EAAS+b,wBACnCnK,EAAiC5R,EAAS4R,+BACxC2W,EAAsB/tB,EAAQ,KAC9B+sB,EAAkB/sB,EAAQ,MAC1BsV,EAAsBtV,EAAQ,MAC9BhS,EAAQgS,EAAQ,MAChBvO,EAAazD,EAAMyD,WACrBglB,EAAYzoB,EAAMyoB,UAClB5Q,EAAW7X,EAAM6X,SACjBC,EAAS9X,EAAM8X,OA8EjB3G,EAAOC,QA7EP,SAA8BtC,GAC5B,IAAIkJ,EAAQlJ,EAAKkJ,MACfmU,EAAuBrd,EAAKqd,qBAC5BoD,EAAkBzgB,EAAKygB,gBACvBhP,EAAczR,EAAKyR,YACnBsZ,EAAW/qB,EAAK+qB,SAChBlG,EAAe7kB,EAAK6kB,aAClB1e,EAAcqS,IACd0B,EAAkBvlB,EAAWkjB,GAC7BqZ,EAAgB5W,EAA+BnU,GAC/CqoB,EAAYzlB,EAAS,GACvBooB,EAAiB3C,EAAU,GAC3B/kB,EAAc+kB,EAAU,GACtB4C,EAAuBH,IACzBnB,EAAasB,EAAqBtB,WAClCC,EAAgBqB,EAAqBrB,cACnCnL,EAAe,GAAGhzB,OAAOu/B,EAAgB,KAAKv/B,OAAoB,OAAbm5B,QAAkC,IAAbA,EAAsBA,EAAW,IAC3GhG,EAAkBN,EAAwBte,EAAa+C,EAAOuI,EAAaoT,EAAcD,GACzFyM,EAAsBnX,EAAgBiK,0BAAyB,WACjE,OAAO+M,EAAczK,sBAAsB1B,EAAiB7b,EAAOuX,EAAiBhP,EAAaoT,EAAc,CAC7G3O,MAAO4Z,EACPxkB,SAAUykB,EACVxsB,MAAOwsB,GACN7V,EACL,IACI+U,EAA2BjmB,GAAO,GACtC2Q,GAAU,WACR,OAAO,WAQLsV,EAAyB55B,SAAU,CACrC,CACF,GAAG,IACHskB,GAAU,WACR,IAAyC,IAArCsV,EAAyB55B,QAa3B,OAJA45B,EAAyB55B,SAAU,OACnCoU,GAAY,SAAU4lB,GACpB,OAAOA,EAAI,CACb,IAGF,IAAInN,EAAagP,EAAcjnB,OAAOonB,EAAqBnX,GAC3D,OAAO,WACLgI,EAAW7a,SACb,CAKF,GAAG,CAAClB,EAAa4e,IACjBpL,GAAU,WAIRuX,EAAc3K,uBAAuB8K,EAEvC,IAEA,IAAIta,EAAesa,EAAoBta,aACrCC,EAAcqa,EAAoBra,YAGpC,OAFuBiZ,EAAgBlZ,EAAcC,EAAaqG,GACxCtX,IAE5B,qCCxFA,IACIzB,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChD+tB,EAAsB/tB,EAAQ,KAC9ByqB,EAAkBzqB,EAAQ,MAC1BouB,EAA2BpuB,EAAQ,KACnCsV,EAAsBtV,EAAQ,MAC9B4H,EAAY5H,EAAQ,MACpBwF,EAAWxF,EAAQ,MACrB0qB,EAAcllB,EAASklB,YACvBjU,EAAYjR,EAASiR,UACrB5Q,EAAWL,EAASK,SAClByK,EAAYtQ,EAAQ,MACtB+N,EAAauC,EAAUpP,WAAW6M,WAClClG,EAAsByI,EAAUzI,oBAChCpC,EAA4B6K,EAAU7K,0BACtC4oB,EAAyB/d,EAAU+d,uBACnC5a,EAAcnD,EAAUmD,YACxB6a,EAAiBhe,EAAUge,eACftuB,EAAQ,MA6JtBb,EAAOC,QA5JP,SAA6BmB,GAC3B,IAAIvL,EAAYuL,EAAKvL,UACnB6e,EAAetT,EAAKsT,aACpBC,EAAcvT,EAAKuT,YACnB8E,EAAqBrY,EAAKqY,mBAC1B2V,EAAehuB,EAAKguB,aACpBC,EAA+BjuB,EAAKiuB,6BACpCC,EAAoBluB,EAAKkuB,kBACzBC,EAAqBnuB,EAAKmuB,mBAC1BvU,EAAuB5Z,EAAK4Z,qBAC5B9P,EAAW9J,EAAK8J,SAChBskB,EAAUpuB,EAAKouB,QACfC,EAAkBruB,EAAKquB,gBACrB3rB,EAAcqS,IACd4Y,EAAuBH,IACzBrB,EAAgBwB,EAAqBxB,cACrCE,EAAasB,EAAqBtB,WAClCD,EAAeuB,EAAqBvB,aACpCE,EAAgBqB,EAAqBrB,cACnCgC,EAAqC,MAAnBD,GAA2C,MAAhBL,GAAgD,kBAAjBA,EAA4BA,EAAaK,GAAmB,KACxIzD,EAAeV,IACfa,EAAYzlB,EAAS5C,GACvB6rB,EAAsBxD,EAAU,GAChCyD,EAAyBzD,EAAU,GACjCE,EAAa3lB,EAAS+S,GACxBoW,EAA6BxD,EAAW,GACxCyD,EAAgCzD,EAAW,GACzC0D,EAAsBd,EAAyBva,EAAcC,IAC/C7Q,IAAgB6rB,GAAuBlW,IAAuBoW,KAE9ErC,IACAgC,IACAI,EAAuB9rB,GACvBgsB,EAA8BrW,IAEhC,IAAIuW,EAiFN,SAA4Bn6B,EAAW6e,EAAc0a,EAAcC,GACjE,IAAIY,EAAsBC,EACtB3kB,EAAwB7C,EAAoB1K,MAC9C+O,EAAQxB,EAAsBwB,MAC9BC,EAAYzB,EAAsByB,UAClCC,EAAgB1B,EAAsB0B,cACtCC,EAAgB3B,EAAsB2B,cACtC1B,EAAaD,EAAsBC,WACnCC,EAAeF,EAAsBE,aACnC/B,EAAaylB,EAAeC,EAAcC,GAC9C,GAAkB,MAAd3lB,EACF,MAAO,CACLc,OAAQ,KACRD,SAAS,GAGW,kBAAfb,GAA+QjB,GAAU,GAClS,IAAI0E,EAAQzD,EAAWqD,GACnBK,EAAW1D,EAAWsD,GAC1B,GAAa,MAATG,GAA6B,MAAZC,EACnB,MAAO,CACL5C,OAAQ,KACRD,SAAS,GAGZ9N,MAAMC,QAAQyQ,IAAwM1E,GAAU,GAC3M,kBAAb2E,GAAwN3E,GAAU,GAC3O,IAEI8B,EAFAC,EAAuB,YAAd3U,EAA4E,QAAjDo6B,EAAuB7iB,EAAS5B,UAAkD,IAAzBykB,EAAkCA,EAAuB,KAA4D,QAApDC,EAAwB9iB,EAAS3B,UAAqD,IAA1BykB,EAAmCA,EAAwB,KAC5Q,OAAX1lB,GAAqC,kBAAXA,GAAqO/B,GAAU,GAGzQ8B,EADgB,YAAd1U,EACkB,MAAV2U,IAA8C,IAA5B4C,EAASH,GAEjB,MAAVzC,IAA8C,IAA5B4C,EAASF,GAEvC,MAAO,CACL1C,OAAQA,EACRD,QAASA,EAEb,CAxH4B4lB,CAAmBt6B,EAAW6e,EAAc0a,EAAcC,GAClF7kB,EAASwlB,EAAoBxlB,OAC7BD,EAAUylB,EAAoBzlB,QA6EhC,OA1EA+M,GAAU,WACR,OAAO,WACLkW,GACF,CACF,GAAG,CAACA,IAsEG,CArEQjC,GAAY,SAAUvhB,EAAOiB,GAG1C,IAAImlB,EAAyB,OAAZnlB,QAAgC,IAAZA,OAAqB,EAASA,EAAQmlB,WAC3E,IAA6B,IAAzBpE,EAAah5B,QAIf,MAAO,CACLgS,QAAS,WAAoB,GAGjC,IAAIkX,EAAmB5H,EAAYI,EAAcC,GACjD,IAA8B,IAA1B4Y,EAAcv6B,SAAoC,MAAhBo8B,GAAwBW,EAO5D,OAHIK,GACFA,EAAW,MAEN,CACLprB,QAAS,WAAoB,IAGX,MAApBkX,GAAsD,yBAA1BA,EAAiBpH,OAA4SrM,GAAU,GACrW,IAAI4nB,EAAkBnU,EAAiBlH,MAAMhlB,UACzCwd,EAAoB0O,EAAiBlsB,UACrCsgC,EAA6B,OAAZrlB,QAAgC,IAAZA,OAAqB,EAASA,EAAQslB,wBAC3EC,GAAgB,EAAIvuB,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGouB,GAAkB7iB,GACpGijB,EAAsBvB,EAAuBr5B,EAAWmU,EAAOQ,EAAQgmB,GAAe,EAAIvuB,EAAwB,SAAG,CAAC,EAAGquB,GAAiBf,GAIvH,MAAnBE,IAOFgB,EAAoBxd,GAAKyc,GAE3B,IAAIgB,EAAkBpqB,EAA0BgpB,EAAmBmB,EAAqB,CACtF1lB,OAAO,IAkBT,OAhBA6D,EAAW9K,EAAa4sB,GAAiB5oB,WAAU,EAAI7F,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGiJ,GAAW,CAAC,EAAG,CAClI2I,MAAO,SAAe1K,GACpBskB,EAAWtkB,GACX+B,EAAS2I,OAAS3I,EAAS2I,MAAM1K,EACnC,EACAF,SAAU,WACRykB,IACAxiB,EAASjC,UAAYiC,EAASjC,WAC9BmnB,GAAcA,EAAW,KAC3B,EACAlvB,MAAO,SAAeuO,GACpBie,IACAxiB,EAAShK,OAASgK,EAAShK,MAAMuO,GACjC2gB,GAAcA,EAAW3gB,EAC3B,KAEK,CACLzK,QAASwoB,EAEb,GAIA,CAAC1pB,EAAa4rB,EAAiB75B,EAAW2U,EAAQijB,EAAYD,EAAcE,EAAeH,EAAewC,EAAqBX,EAAc1a,EAAanT,KAAMoT,EAAaqG,IAC3JzQ,EAASijB,EAC7B,qCCtIA,IAAImD,EAAmB9vB,EAAQ,MAC3BhS,EAAQgS,EAAQ,MAChBwF,EAAWxF,EAAQ,MACrByF,EAA4BD,EAASC,0BACrCC,EAAaF,EAASE,WACpBvM,EAAUnL,EAAMmL,QAQpBgG,EAAOC,QAPP,SAAoCmrB,EAAUp7B,EAAW8d,GACvD,IAAI8iB,EAAgBD,EAAiB3gC,GACjC6gC,EAAkBF,EAAiB7iB,GAAe,CAAC,GACvD,OAAO9T,GAAQ,WACb,OAAOsM,EAA0BC,EAAW6kB,GAAWwF,EAAeC,EACxE,GAAG,CAACzF,EAAUwF,EAAeC,GAC/B,qCCZA,IAAIpuB,EAAW5B,EAAQ,MAErB6F,EADa7F,EAAQ,MACD6F,SAkBtB1G,EAAOC,QAXP,SAA0BjQ,GACxB,IAAIm8B,EAAYzlB,EAAS1W,GACvB8gC,EAAoB3E,EAAU,GAC9B4E,EAAuB5E,EAAU,GACnC,OAAI1pB,EAASzS,EAAW8gC,GACfA,GAEPC,EAAqB/gC,GACdA,EAEX,qCCnBA,IACIiS,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChDyqB,EAAkBzqB,EAAQ,MAC1BsV,EAAsBtV,EAAQ,MAC9BhS,EAAQgS,EAAQ,MAElBmwB,EADanwB,EAAQ,MACYiW,eAC/BpQ,EAAW7X,EAAM6X,SACnB4Q,EAAYzoB,EAAMyoB,UAClB3Q,EAAS9X,EAAM8X,OACf4kB,EAAc18B,EAAM08B,YA4DtBvrB,EAAOC,QA3DP,SAAqBgxB,GACnB,IAAIC,EAAmBC,UAAUz8B,OAAS,QAAsBmG,IAAjBs2B,UAAU,GAAmBA,UAAU,GAAKH,EACvFltB,EAAcqS,IACd6V,EAAeV,IACf8F,EAAiBzqB,EAAO7C,GACxButB,EAAc1qB,EAAOsqB,GACrBK,EAAuB3qB,EAAO,IAAIulB,KAClCC,EAAYzlB,GAAS,GACvB6qB,EAAqBpF,EAAU,GAC/BqF,EAAsBrF,EAAU,GAC9Bne,EAAUud,GAAY,SAAU1L,GAC9BuR,EAAep+B,UAAY8Q,GAAeutB,EAAYr+B,UAAYi+B,IACpEK,EAAqBt+B,QAAgB,OAAE6sB,GACnCmM,EAAah5B,SACfw+B,EAAoBF,EAAqBt+B,QAAQoJ,KAAO,GAG9D,GAAG,CAAC0H,EAAakoB,EAAciF,IAwC/B,OAvCA3Z,GAAU,WACJ8Z,EAAep+B,UAAY8Q,GAAeutB,EAAYr+B,UAAYi+B,IACpEK,EAAqBt+B,QAAU,IAAIk5B,IAC/BF,EAAah5B,SACfw+B,GAAoB,GAEtBJ,EAAep+B,QAAU8Q,EACzButB,EAAYr+B,QAAUi+B,EAE1B,GAAG,CAACntB,EAAakoB,EAAciF,IA8BxB,CA7BM1F,GAAY,SAAU3wB,GAC7BoxB,EAAah5B,SACfw+B,GAAoB,GAEtB,IAAI3R,EAAaqR,EAAiBptB,GAAa,EAAI7B,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGrH,GAAS,CAAC,EAAG,CAC5Hq2B,SAAUA,EACVQ,YAAa,SAAqB7d,EAAU8d,GAC1C,IAAIC,EACJ3jB,EAAQ6R,GACuC,QAA9C8R,EAAsB/2B,EAAO62B,mBAAiD,IAAxBE,GAA0CA,EAAoBr9B,KAAKsG,EAAQgZ,EAAU8d,EAC9I,EACAE,QAAS,SAAiB1wB,GACxB,IAAI2wB,EACJ7jB,EAAQ6R,GAC+B,QAAtCgS,EAAkBj3B,EAAOg3B,eAAyC,IAApBC,GAAsCA,EAAgBv9B,KAAKsG,EAAQsG,EACpH,EACA4wB,cAAe,WACb,IAAIC,EACJ/jB,EAAQ6R,GAC2C,QAAlDkS,EAAwBn3B,EAAOk3B,qBAAqD,IAA1BC,GAA4CA,EAAsBz9B,KAAKsG,EACpI,EACA6T,OAAQ,WACN,IAAIujB,EACiC,QAApCA,EAAiBp3B,EAAO6T,cAAuC,IAAnBujB,GAAqCA,EAAe19B,KAAKsG,EACxG,KAGF,OADA02B,EAAqBt+B,QAAQy5B,IAAI5M,GAC1BA,CACT,GAAG,CAAC7R,EAASkjB,EAAkBptB,EAAakoB,EAAciF,IAC1CM,EAClB,qCCrEA,IACItvB,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChD8sB,EAAsB9sB,EAAQ,MAC9BoxB,EAAsBpxB,EAAQ,MAC9BqxB,EAA6BrxB,EAAQ,MACrCgtB,EAA+BhtB,EAAQ,MACvCwF,EAAWxF,EAAQ,MACrB0qB,EAAcllB,EAASklB,YAEvB7kB,GADgBL,EAASynB,cACdznB,EAASK,UAClByK,EAAYtQ,EAAQ,MACtBqT,EAAc/C,EAAU+C,YACxBmE,EAAwBlH,EAAUkH,sBAClC8Z,EAAwBhhB,EAAUghB,sBAqFpC,SAASC,EAAYhxB,GACnB,IAAI+qB,EAAYzlB,GAAS,GACvB2rB,EAAgBlG,EAAU,GAC1BmG,EAAmBnG,EAAU,GAC3BjhB,EAAW,CACb2I,MAAO,WACL,OAAOye,GAAiB,EAC1B,EACArpB,SAAU,WACR,OAAOqpB,GAAiB,EAC1B,EACApxB,MAAO,WACL,OAAOoxB,GAAiB,EAC1B,GAKEC,EAAuBN,GAAoB,EAAIhwB,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGb,GAAO,CAAC,EAAG,CACxH8J,SAAUA,EACVskB,QALc,WAChB,OAAO8C,GAAiB,EAC1B,KAQA,MAAO,CAHMC,EAAqB,GACtBA,EAAqB,GAENF,EADVE,EAAqB,GAExC,CAUAvyB,EAAOC,QATP,SAA+BuyB,EAAeC,GAC5C,IAAInR,EAAOqM,EAAoB3vB,MAC/B,OAAIsjB,EACKA,EAAKvL,sBAAsByc,EAAeC,GA7GrD,SAAsCD,EAAeC,GACnD,IAAI/d,EAAeR,EAAYse,GAC/B3E,EAA6BnZ,EAAc,6CAC3C,IAAIsG,EAAuB,0BACvB0X,EAAwBP,EAAsBzd,EAAcsG,GAC9DqU,EAA+BqD,EAAsBrD,6BACrDC,EAAoBoD,EAAsBpD,kBAC1CC,EAAqBmD,EAAsBnD,mBAC3CE,EAAkBiD,EAAsBjD,gBACtCkD,EAAwBT,EAA2Bxd,EAAc+d,EAAmBzX,GACtFoU,EAAeuD,EAAsBvD,aACrCza,EAAcge,EAAsBhe,YACpCrB,EAAUqf,EAAsBrf,QAC9BmG,EAAqBpB,EAAsB3D,EAAcC,GAGzDie,EAAeR,EAAY,CAC3BpX,qBAAsBA,EACtBqU,6BAA8BA,EAC9Bx5B,UAAW,WACXu5B,aAAcA,EACd3V,mBAAoBA,EACpB/E,aAAcA,EACdC,YAAaA,EACb8a,gBAAiBA,EACjBF,mBAAoBA,EACpBD,kBAAmBA,IAErBuD,EAAeD,EAAa,GAC5BE,EAAcF,EAAa,GAC3BG,EAAoBH,EAAa,GACjCI,EAAuBJ,EAAa,GAGlCK,EAAgBb,EAAY,CAC5BpX,qBAAsBA,EACtBqU,6BAA8BA,EAC9Bx5B,UAAW,UACXu5B,aAAcA,EACd3V,mBAAoBA,EACpB/E,aAAcA,EACdC,YAAaA,EACb8a,gBAAiBA,EACjBF,mBAAoBA,EACpBD,kBAAmBA,IAErB4D,EAAWD,EAAc,GACzBE,EAAUF,EAAc,GACxBG,EAAgBH,EAAc,GAC9BI,EAAmBJ,EAAc,GAmBnC,MAAO,CACLvvB,KAAM0rB,EACN8D,SAAUA,EACVL,aAAcA,EACdM,QAASA,EACTL,YAAaA,EACbM,cAAeA,EACfL,kBAAmBA,EACnBzf,QA1BsBiY,GAAY,SAAUv7B,EAAWib,GAGvD,OAFAooB,IACAL,IACO1f,EAAQtjB,GAAW,EAAIiS,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGgJ,GAAU,CAAC,EAAG,CACxGqoB,mBAAez4B,IAEnB,GAAG,CAACw4B,EAAkBL,EAAsB1f,IAsB9C,CAkCWigB,CAA6Bf,EAAeC,EAEvD,qCCrIA,IACExH,EADapqB,EAAQ,MACgBoqB,0BACnCwD,EAAuB5tB,EAAQ,MAC/B6tB,EAA6B7tB,EAAQ,MACrCsV,EAAsBtV,EAAQ,MAC9B4H,EAAY5H,EAAQ,MAItB2yB,GAHc3yB,EAAQ,MACIitB,cACZjtB,EAAQ,MACWkB,YACjCsmB,EAAoBmL,EAAqBnL,kBACzCzZ,EAAa4kB,EAAqB5kB,WACtB/N,EAAQ,MAkFtBb,EAAOC,QAjFP,SAA2BmrB,EAAUqI,EAAgBxoB,GAGnDggB,IACA,IAOIyI,EAPA5vB,EAAcqS,IACduS,EAAW+K,EAAe/K,SAC5BtZ,EAAcqkB,EAAerkB,YAC7B3P,EAASg0B,EAAeh0B,OACxBzP,EAAYyjC,EAAezjC,UAC3By3B,EAAqBgM,EAAehM,mBAClCxgB,EAAYynB,EAA2BtD,EAAUp7B,EAAWy3B,GAEhE,GAA4B,8BAAxBgM,EAAe3e,KACf7N,EAAUC,QAAQqH,KAAK+C,OAAO/P,OAASkyB,EAAelyB,MAA6OkH,GAAU,GAC/SirB,EAA6B,CAC3B1Y,qBAAsB,sBACtB0N,SAAUA,EACVtK,gBAAiBiK,EAAkBvkB,EAAamD,EAAUC,QAAQyb,YAAY,WAC5E,OAAI7e,IAAgB2vB,EAAe3vB,aAAyB,MAAVrE,EACzCqE,EAAY2lB,kBAAkB,CACnCxiB,UAAWA,EACXxH,OAAQA,IAGHqE,EAAYmK,QAAQ,CACzBhH,UAAWA,GAGjB,IACAmI,YAAaA,EACbvI,MAAOI,EACPub,aAA0B,OAAZvX,QAAgC,IAAZA,OAAqB,EAASA,EAAQ0jB,2BAErE,CAEL,IAAIgF,EAA0B/kB,EAAW9K,EAAamD,GAuBtDysB,EAA6B,CAC3B1Y,qBAAsB,sBACtBoD,gBAvBY,MAAV3e,GAAkBqE,IAAgB2vB,EAAe3vB,YAKjCrE,EAAOm0B,QAAQD,IACRF,EAAe3vB,YAQtB6vB,GAUlBjL,SAAUA,EACVtZ,YAAaA,EACbvI,MAAOI,EACPub,aAA0B,OAAZvX,QAAgC,IAAZA,OAAqB,EAASA,EAAQ0jB,sBAE5E,CAaA,OAZWF,EAAqBiF,EAalC,qCC7FA,IACIrI,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7DwF,EAAWxF,EAAQ,MACrB0U,EAAYlP,EAASkP,UACrB0V,EAA4B5kB,EAAS4kB,0BACnCK,EAAkBzqB,EAAQ,MAC1BsV,EAAsBtV,EAAQ,MAC9BsQ,EAAYtQ,EAAQ,MACtB0qB,EAAcpa,EAAUoa,YACxBjU,EAAYnG,EAAUmG,UACtB3Q,EAASwK,EAAUxK,OACnBD,EAAWyK,EAAUzK,SAErBH,EADc1F,EAAQ,MACC0F,WACrBstB,EAAiC,CACnC/e,KAAM,sBAER,SAASgf,EAAmBnL,GAC1B,MAAgC,+BAA5BA,EAAmB7T,UAC8Bja,IAA5C8tB,EAAmBrX,OAAOjI,SAAS8Y,UAGJtnB,IAD1B0L,EAAWoiB,GACVrX,OAAOjI,SAAS8Y,IACjC,CA2KAniB,EAAOC,QA1KP,SAAwB0oB,EAAoBoL,GAqB1C,IAAIC,EAA0D,OAA1BD,QAA4D,IAA1BA,EAAmCA,EAAwBF,EAC7H/vB,EAAcqS,IAClB8U,IACA,IAAIe,EAAeV,IACf2I,EAA+BttB,EAAO,IAAIulB,IAAI,CAAC8H,KAC/C7H,EAAYzlB,GAAS,WACrB,OAAOstB,CACT,IACAE,EAAiB/H,EAAU,GAC3BgI,EAAoBhI,EAAU,GAC5BE,EAAa3lB,GAAS,WACtB,OAAOstB,CACT,IACAI,EAAgC/H,EAAW,GAC3CgI,EAAmChI,EAAW,GAC5C2H,IAAkCI,IAMpCH,EAA6BjhC,QAAQy5B,IAAIuH,GACzCK,EAAiCL,GACjCG,EAAkBH,IAEpB,IAAIM,EAAe/I,GAAY,WACzBS,EAAah5B,UACfihC,EAA6BjhC,QAAQy5B,IAAIoH,GACzCM,EAAkBN,GAEtB,GAAG,CAAC7H,IACAuI,EAAsBhJ,GAAY,SAAUv7B,EAAWib,GACzD,IAAIupB,EAA2B,MAAXvpB,GAAmBA,EAAQ5W,eAAe,iBAAmB,CAC/E+a,YAAanE,EAAQmE,YACrBqY,mBAAoBxc,EAAQwc,mBAC5BC,iBAAkBzc,EAAQyc,kBACxBzc,EACJ,GAAI+gB,EAAah5B,QAAS,CACxB,IAAIyhC,EACAC,EAAwBnf,EAAgH,QAArGkf,EAAoC,OAAZxpB,QAAgC,IAAZA,OAAqB,EAASA,EAAQqoB,qBAAqD,IAA1BmB,EAAmCA,EAAwB3wB,EAAa6kB,EAAoB34B,EAAWwkC,GAC3PP,EAA6BjhC,QAAQy5B,IAAIiI,GACzCP,EAAkBO,EACpB,CACF,GAAG,CAAC5wB,EAAa6kB,EAAoBwL,EAAmBnI,IACpDY,EAA2BjmB,GAAO,GAuGtC,OAtGA2Q,GAAU,WACR,OAAO,WAQLsV,EAAyB55B,SAAU,CACrC,CACF,GAAG,IACHskB,GAAU,WACR,IAAyC,IAArCsV,EAAyB55B,QAiB3B,OAPA45B,EAAyB55B,SAAU,OACP,uBAAxBkhC,EAAepf,MACjByf,EAAoBL,EAAelkC,UAAW,CAC5Cof,YAAa8kB,EAAe9kB,YAC5BqY,mBAAoByM,EAAezM,sBAyBzC,IAAIkN,EAA4BV,EAA6BjhC,QAC7D,GAAIg5B,EAAah5B,QAAS,CACxB,IACE85B,EADEC,GAAY,EAAI1B,EAAqC,SAAGsJ,GAE5D,IACE,IAAK5H,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIiT,EAA2B9H,EAAMz9B,MACrC,GAAIulC,IAA6BV,EAC/B,MAEFS,EAAkC,OAAEC,GACE,uBAAlCA,EAAyB9f,OACvBgf,EAAmBnL,GACrBiM,EAAyB5vB,SAAW4vB,EAAyB5vB,UAE7D4vB,EAAyB7J,cAAgB6J,EAAyB7J,eAGxE,CACF,CAAE,MAAOna,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CACF,GAAG,CAACizB,EAAgBlI,EAAcuI,EAAqB5L,IACvDrR,GAAU,WACR,OAAO,WAGL,IACE4V,EADEC,GAAa,EAAI9B,EAAqC,SAAG4I,EAA6BjhC,SAE1F,IACE,IAAKm6B,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAIiT,EAA2B1H,EAAO79B,MACA,uBAAlCulC,EAAyB9f,OACvBgf,EAAmBnL,GACrBiM,EAAyB5vB,SAAW4vB,EAAyB5vB,UAE7D4vB,EAAyB7J,cAAgB6J,EAAyB7J,eAGxE,CACF,CAAE,MAAOna,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACF,CACF,GAAG,CAAC0nB,IACG,CAAyB,uBAAxBuL,EAAepf,KAAgC,KAAOof,EAAgBK,EAAqBD,EACrG,oCCjMA,IAAI3G,EAAsB9sB,EAAQ,MAC9BqxB,EAA6BrxB,EAAQ,MACrCgtB,EAA+BhtB,EAAQ,MAIzCqT,GAHarT,EAAQ,MACIitB,cACXjtB,EAAQ,MACEqT,aA4B1BlU,EAAOC,QATP,SAAgCuyB,EAAeC,GAC7C,IAAInR,EAAOqM,EAAoB3vB,MAC/B,OAAIsjB,EACKA,EAAKpL,uBAAuBsc,EAAeC,GArBtD,SAAuCD,EAAe7d,GACpD,IAAID,EAAeR,EAAYse,GAC/B3E,EAA6BnZ,EAAc,8CAC3C,IAAIie,EAAwBT,EAA2Bxd,EAAcC,EAAa,4BAalF,MAAO,CAZUge,EAAsBvD,aAC3BuD,EAAsBrf,QAYpC,CAOWuhB,CAA8BrC,EAAeC,EAExD,qCCjCA,IACIxwB,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAElDqgB,EADargB,EAAQ,MACwBqgB,kCAC3C1L,EAAkB3U,EAAQ,MAE5BoX,EADcpX,EAAQ,MACqBoX,+BACzC2V,EAAkB/sB,EAAQ,MAC1ByqB,EAAkBzqB,EAAQ,MAC1BoV,EAAiBpV,EAAQ,MACzBsV,EAAsBtV,EAAQ,MAC9B4H,EAAY5H,EAAQ,MACpB6B,EAAY7B,EAAQ,MACtB0qB,EAAc7oB,EAAU6oB,YACxBj5B,EAAaoQ,EAAUpQ,WACvBwiC,EAAapyB,EAAUoyB,WACrBC,EAAYl0B,EAAQ,MACtB+N,EAAammB,EAAUhzB,WAAW6M,WAClCtI,EAA4ByuB,EAAUzuB,0BACtC+R,EAAwB0c,EAAU1c,sBAClC2c,EAAqBD,EAAUC,mBAC/B1gB,EAAcygB,EAAUzgB,YACxB6a,EAAiB4F,EAAU5F,eACftuB,EAAQ,MACtB,SAASo0B,EAAQ3xB,EAAO4xB,GACtB,OAAQA,EAAO1kC,MACb,IAAK,UAED,IAAI2kC,EACJ,OAAO,EAAIlzB,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGqB,GAAQ,CAAC,EAAG,CACnF8L,YAAa8lB,EAAO9lB,YACpBugB,oBAA6E,QAAvDwF,EAAwBD,EAAOE,0BAA0D,IAA1BD,EAAmCA,EAAwB7xB,EAAMqsB,oBACtJS,WAAY8E,EAAO9E,WACnBgF,mBAAoBF,EAAOE,mBAC3BC,aAAcH,EAAOG,aACrB7S,aAAc0S,EAAO1S,eAG3B,IAAK,QAED,MAAO,CACLpT,iBAAavU,EACb80B,oBAAqBuF,EAAOpxB,YAC5B+rB,2BAA4BqF,EAAOzb,mBACnC2W,gBAAYv1B,EACZw6B,aAAc,KACd7S,kBAAc3nB,GAGpB,QAGI,MADAq6B,EAAO1kC,KACD,IAAI2Q,MAAM,sDAGxB,CAuQAnB,EAAOC,QAtQP,SAAoCyU,EAAc+d,EAAmBzX,GACnE,IAAIsa,EAAoBnf,IACpBof,EAAsBP,EAAmBtgB,EAAcsG,GACzDwa,EAAqBD,EAAoBC,mBACzCC,EAA4BF,EAAoBE,0BAChDhG,EAAkB8F,EAAoB9F,gBACpChW,EAAqBpB,EAAsB3D,EAAc+d,GACzDiD,EAAcZ,EAAWG,EAAS,CAClC7lB,iBAAavU,EACb80B,oBAAqB2F,EACrBzF,2BAA4BpW,EAC5B2W,gBAAYv1B,EACZu6B,mBAAoB,KACpBC,aAAc,KACd7S,kBAAc3nB,IAEhB86B,EAAeD,EAAY,GAC3BE,EAAWF,EAAY,GACrBtmB,EAAcumB,EAAavmB,YAC7BugB,EAAsBgG,EAAahG,oBACnCE,EAA6B8F,EAAa9F,2BAC1CO,EAAauF,EAAavF,WAC1BgF,EAAqBO,EAAaP,mBAClCC,EAAeM,EAAaN,aAC5B7S,EAAemT,EAAanT,aAC1B1e,EAAqC,OAAvBsxB,QAAsD,IAAvBA,EAAgCA,EAAqBE,EAClGzG,EAAgB5W,EAA+BnU,GAC/CkqB,EAAmB9M,EAAkCpd,GACrD+T,EAAkBvlB,EAAWkjB,GAC7BqgB,EAAc/xB,IAAgB6rB,GAAuBlW,IAAuBoW,EAC5EiG,EAAkB7f,EAAeuf,GACnCO,EAAWD,EAAgB,GAC3BvgB,EAAYugB,EAAgB,GAC5BxB,EAAewB,EAAgB,GAC7BnhB,EAAc8d,EAClB,GAAIoD,EACFD,EAAS,CACPplC,KAAM,QACNsT,YAAaA,EACb2V,mBAAoBA,IAEtB6a,SACK,GAAoB,MAAhBe,GAAoC,MAAZU,EAAkB,CAc/CC,EAGJ,IAAIC,EAAuB,SAA8BC,GACvD9F,GAAcA,EAA0B,OAAf8F,QAAsC,IAAfA,EAAwBA,EAAa,KACvF,EAUI9X,EAAqC,MAAnB2X,EAASt2B,OAAiBs2B,EAASt2B,OAASmP,EAAW9K,EAAauxB,GAOtFpb,EAAcpC,EAAgBiK,0BAAyB,WACzD,OAAO+M,EAAcxQ,QAAQgX,EAAcjX,EAAiBhP,EAAaoT,EAAc,CACrFthB,MAAO+0B,EACPhtB,SAAU,WAMRgtB,GACF,GACCF,EAASrN,SAAU7Q,EACxB,IACIse,EAAYnI,EAAiBjT,KAAKd,EAAYvF,aAAcuF,EAAYtF,YAAaqG,GAAsBtX,KAChG,MAAbyyB,GAAyM1tB,GAAU,GAOrNkM,EAD2Bwa,EAAegH,EAAWV,EASvD,CAMA,IAAIW,EAAmBxI,EAAgBlZ,EAAcC,EAAaqG,GAChEoU,EAAegH,EAAiB1yB,KAChCyqB,GAAsBiI,EAAiBjI,oBACvCC,GAAqBgI,EAAiBhI,mBACpC9a,GASN,SAA4B0H,EAAsB4a,EAAUtB,EAAclF,EAAc3V,EAAoB/E,EAAc+gB,EAA2BhG,EAAiBla,EAAWkd,EAAmB+C,GAClM,IAAIxJ,EAAeV,IACfoE,EAAqC,MAAnBD,GAA2C,MAAhBL,GAAgD,kBAAjBA,EAA4BA,EAAaK,GAAmB,KAC5I,OAAOlE,GAAY,SAAU8K,EAA0BprB,GAGrD,IAA6B,IAAzB+gB,EAAah5B,QAEf,MAAO,CACLgS,QAAS,WAAoB,GAMjC,IAKIqrB,EACA7iB,EANA4nB,EAAiC,OAAZnqB,QAAgC,IAAZA,OAAqB,EAASA,EAAQqoB,cAC/ElkB,EAA0B,OAAZnE,QAAgC,IAAZA,OAAqB,EAASA,EAAQmE,YACxEoT,EAA2B,OAAZvX,QAAgC,IAAZA,OAAqB,EAASA,EAAQ0jB,sBACzEyB,EAAyB,OAAZnlB,QAAgC,IAAZA,OAAqB,EAASA,EAAQmlB,WACvElU,EAAmB5H,EAAYI,EAAc+d,GAGjD,GAAwB,MAApBvW,EACFmU,EAAkB,CAAC,EACnB7iB,EAAoB,CAAC,OAChB,GAA8B,yBAA1B0O,EAAiBpH,KAAiC,CAC3D,IAAIwhB,EAAuBC,EAAwBC,EAAwBC,EAC3EpG,EAAyM,QAAtLiG,EAAqF,QAA5DC,EAAyBra,EAAiBnH,UAAU,UAA2C,IAA3BwhB,OAAoC,EAASA,EAAuBvhB,MAAMhlB,iBAAiD,IAA1BsmC,EAAmCA,EAAwB,CAAC,EAC7Q9oB,EAAsM,QAAjLgpB,EAAsF,QAA5DC,EAAyBva,EAAiBnH,UAAU,UAA2C,IAA3B0hB,OAAoC,EAASA,EAAuBzmC,iBAAkD,IAA3BwmC,EAAoCA,EAAyB,CAAC,CAC9Q,MACEnG,EAAkBnU,EAAiBlH,MAAMhlB,UACzCwd,EAAoB0O,EAAiBlsB,UAOvC,IAAI0a,GAAmB,EAAIzI,EAAwB,UAAG,EAAIA,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGouB,GAAkB7iB,GAAoB6oB,GAIvI,MAAnB5G,GAA4B4G,EAAyBhiC,eAAe,QAOtEqW,EAAiBuI,GAAKyc,GAExB,IAAI2F,EAAe/uB,EAA0BkvB,EAAoB9qB,EAAkB,CACjFK,OAAO,IAuBT,OAbAwK,EAAU8f,EAAanuB,QAAQlX,UAAW,CACxCof,YAAaA,EACbkkB,cAAe8B,EACf1N,iBAAkB,YAEpBkO,EAAS,CACPplC,KAAM,UACN4e,YAAaA,EACbghB,WAAYA,EACZgF,mBAAoBA,EACpBC,aAAcA,EACd7S,aAAcA,IAET,CACLxd,QAASsvB,EAEb,GAQA,CAAC7a,EAAoBmc,EAAUtB,EAAc5E,EAAiBna,GAChE,CAhGgBmhB,CAAmB1b,EAAsB4a,EAAUtB,EAAclF,EAAc3V,EAAoB/E,EAAc+gB,EAA2BhG,EAAiBla,EAAWkd,EAAmB+C,GACzM,MAAO,CACLpG,aAAcA,EACdza,YAAaA,EACbrB,QAASA,GACT6a,oBAAqBA,GACrBC,mBAAoBA,GAExB,qCCrLA,IAAIjoB,EAAoBtF,EAAQ,MAC5B4H,EAAY5H,EAAQ,MAEtBvO,EADauO,EAAQ,MACCvO,WAMxB0N,EAAOC,QALP,WACE,IAAIxC,EAAUnL,EAAW6T,GAEzB,OADa,MAAX1I,GAAidgL,GAAU,GACtdhL,EAAQqG,WACjB,qCCR8BjD,EAAQ,MACxBA,EAAQ,MAWtBb,EAAOC,QAVP,SAAsCyU,EAAciiB,GASpD,qCCXA,IAAIxgB,EAAsBtV,EAAQ,MAC9BwF,EAAWxF,EAAQ,MACrByW,EAAYjR,EAASiR,UACrB3Q,EAASN,EAASM,OAoCpB3G,EAAOC,QAzBP,SAAyC22B,EAAShY,GAChD,IAAI9a,EAAcqS,IACd0gB,EAAgBlwB,EAAO,MACvBmwB,EAAgBr6B,MAAMs6B,KAAKH,GAASI,OAAOhlC,KAAK,IAcpD,OAbAslB,GAAU,WACR,IAAI2f,EAAQnzB,EAAYyX,WACpB2b,EAAoBD,EAAME,wBAAwBP,GAClD/W,EAAaoX,EAAMG,6BAA6BF,EAAmBtY,GAEvE,OADAiY,EAAc7jC,QAAU6sB,EACjB,WACL,OAAOA,EAAW7a,SACpB,CAKF,GAAG,CAAC8xB,EAAelY,EAAU9a,IACtB,CACLkB,QAAS,WACsB,MAAzB6xB,EAAc7jC,SAChB6jC,EAAc7jC,QAAQgS,SAE1B,EAEJ,qCCtCA,IAAImR,EAAsBtV,EAAQ,MAEhCyW,EADazW,EAAQ,MACAyW,UAErBD,EADcxW,EAAQ,MACUwW,oBAclCrX,EAAOC,QAbP,SAAyBrF,EAAQy8B,GAI/B,IAAIC,EAAsD,OAA1BD,QAA4D,IAA1BA,EAAmCA,EAAwBhgB,EACzHvT,EAAcqS,IAClBmB,GAAU,WAIR,OAF4BggB,EAA0BxzB,EAAalJ,GACjCoK,OAEpC,GAAG,CAAClB,EAAalJ,EAAQ08B,GAC3B,qCCjBA,IACEt9B,EADa6G,EAAQ,MACF7G,QAcrBgG,EAAOC,QAPP,SAAiCs3B,GAC/B,OAAOv9B,GAAQ,WACb,MAAO,CACLhH,QAASukC,EAEb,GAAG,GACL,wBClBAv3B,EAAOC,QAAU,EAAjBD,yCCIA,IAAIuW,EAAoB1V,EAAQ,MAC5B22B,EAAmB32B,EAAQ,MAC3B4H,EAAY5H,EAAQ,MAoBxBb,EAAOC,QAnBP,SAAqCw3B,GACnC,OAAQA,GACN,IAAK,aACH,OAAOlhB,EACT,IAAK,eACH,OAAOihB,EAAiBE,oBAC1B,IAAK,aACH,OAAOF,EAAiBG,kBAC1B,IAAK,aACH,OAAOH,EAAiBI,kBAC1B,IAAK,cACH,OAAOJ,EAAiBK,mBAC1B,IAAK,aACH,OAAOL,EAAiBM,kBAC1B,IAAK,cACH,OAAON,EAAiBO,mBAE8GtvB,GAAU,EACtJ,qCCrBA,IACEuvB,EADan3B,EAAQ,MACOm3B,iBAE5BC,EADcp3B,EAAQ,MACUo3B,oBAC9BC,EAAoBr3B,EAAQ,MAC5B6H,EAAsB7H,EAAQ,MAC9B4H,EAAY5H,EAAQ,MAEpBs3B,GADUt3B,EAAQ,MACL,cAGbu3B,EAAkB,+BAibtB,SAASC,EAAoBpB,EAAOvtB,EAAY4uB,GAC9C,GAAY,MAARA,EACF,OAAOA,EAET,IACEvrB,EAD2BrE,EAAoB1K,MAChB+O,MAC7BwrB,EAAY7uB,EAAWma,SAASuU,GACb,kBAAdG,GAA6K9vB,GAAU,GAChM,IAAI+vB,EAASR,EAAiBtuB,EAAW+uB,YAAa1rB,EAAOwrB,GACzDG,EAAiBzB,EAAM9rB,OAAOqtB,EAAQF,EAAKK,WAQ/C,OAPAD,EAAeE,eAAeN,GACW,MAArCI,EAAe7U,SAAS,WAG1B6U,EAAe5U,SAAS,KAAM,UAEhCpa,EAAWoa,SAASyU,EAAY,EAAGH,GAC5BM,CACT,CAQA,SAASG,EAAWC,EAAaC,EAAaC,GAG5C,IAFA,IACEC,EAD2BvwB,EAAoB1K,MACjBi7B,KACvB5zB,EAAK,EAAGA,EAAKyzB,EAAYpkC,OAAQ2Q,IAAM,CAC9C,IAAIizB,EAAOQ,EAAYzzB,GACvB,GAAKizB,EAAL,CAGA,IAAI/pB,EAAO+pB,EAAKY,gBAAgBD,GAC5BE,EAAS5qB,GAAQA,EAAKkqB,YAC1B,GAAIU,EAAQ,CACV,GAAIH,EAAQpX,IAAIuX,GACd,SAEFH,EAAQvM,IAAI0M,EACd,CACAJ,EAAYt6B,KAAK65B,EATjB,CAUF,CACF,CACAt4B,EAAOC,QAAU,CACfo4B,oBAAqBA,EACrBe,WArLF,SAAoBnC,EAAOoC,EAAQ9qB,EAAM+qB,GACvC,IACEL,EAD2BvwB,EAAoB1K,MACjBi7B,KAQ5BT,EAASR,EAAiBqB,EAAOZ,YAAalqB,EAAKkqB,aACnDH,EAAOrB,EAAMj5B,IAAIw6B,GAUrB,OATKF,IACHA,EAAOrB,EAAM9rB,OAAOqtB,EAAQc,IAE9BhB,EAAKiB,gBAAgBhrB,EAAM0qB,GACI,MAA3BX,EAAKzU,SAAS,WAGhByU,EAAKxU,SAAS,KAAM,UAEfwU,CACT,EAgKEkB,WAtFF,SAAoBH,EAAQF,GAC1B,IAAIM,EAAyB/wB,EAAoB1K,MAC/C+O,EAAQ0sB,EAAuB1sB,MAC/BksB,EAAOQ,EAAuBR,KAC5B9rB,EAAQksB,EAAOK,iBAAiB3sB,GACpC,GAAKI,EAAL,CAIA,IADA,IAAIwsB,EACKt0B,EAAK,EAAGA,EAAK8H,EAAMzY,OAAQ2Q,IAAM,CACxC,IAAIizB,EAAOnrB,EAAM9H,GACbkJ,EAAO+pB,GAAQA,EAAKY,gBAAgBD,GAC5B,MAAR1qB,GAAgBA,EAAKkqB,cAAgBU,OACrBt+B,IAAd8+B,IACFA,EAAYxsB,EAAMysB,MAAM,EAAGv0B,SAENxK,IAAd8+B,GACTA,EAAUl7B,KAAK65B,EAEnB,MACkBz9B,IAAd8+B,GACFN,EAAOQ,iBAAiBF,EAAW5sB,EAdrC,CAgBF,EAgEE+sB,cA1SF,SAAuBT,EAAQtnC,EAAKgoC,GAClC,IAAIC,EAAY9B,EAAkBC,EAAYpmC,EAAK,MACnD,OAAOsnC,EAAOH,gBAAgBc,EAAWD,EAC3C,EAwSEE,gBAvQF,SAAyBC,EAAUnoC,EAAKgoC,GACtC,IAAIC,EAAY9B,EAAkBC,EAAYpmC,EAAK,MAC/CooC,EAAalC,EAAoB+B,EAAWD,GAChD,OAAO/B,EAAiBkC,EAAUC,EACpC,EAoQEC,gBAhOF,SAAyBf,EAAQgB,EAAS7vB,GACxC,IAAIsC,EAAyBpE,EAAoB1K,MAC/Cs8B,EAASxtB,EAAuBwtB,OAChCvtB,EAAQD,EAAuBC,MAC7BI,EAAQksB,EAAOK,iBAAiB3sB,GACpC,GAAKI,EAAL,CAIA,IAAIwsB,EACJ,GAAc,MAAVnvB,EACFmvB,EAAYxsB,EAAM5d,OAAO8qC,OACpB,CACLV,EAAY,GAEZ,IADA,IAAIY,GAAc,EACTl1B,EAAK,EAAGA,EAAK8H,EAAMzY,OAAQ2Q,IAAM,CACxC,IAAIizB,EAAOnrB,EAAM9H,GAEjB,GADAs0B,EAAUl7B,KAAK65B,GACH,MAARA,EAIA9tB,IADa8tB,EAAKzU,SAASyW,KAE7BX,EAAUl7B,KAAK47B,GACfE,GAAc,EAElB,CACKA,GACHZ,EAAUl7B,KAAK47B,EAEnB,CACAhB,EAAOQ,iBAAiBF,EAAW5sB,EAvBnC,MAFEssB,EAAOQ,iBAAiB,CAACQ,GAAUttB,EA0BvC,EAiMEytB,iBAhIF,SAA0BnB,EAAQgB,EAAS7vB,GACzC,IAAIiwB,EAAyB/xB,EAAoB1K,MAC/Cs8B,EAASG,EAAuBH,OAChCvtB,EAAQ0tB,EAAuB1tB,MAC7BI,EAAQksB,EAAOK,iBAAiB3sB,GACpC,GAAKI,EAAL,CAIA,IAAIwsB,EACJ,GAAc,MAAVnvB,EACFmvB,EAAY,CAACU,GAAS9qC,OAAO4d,OACxB,CACLwsB,EAAY,GAEZ,IADA,IAAIY,GAAc,EACTl1B,EAAK,EAAGA,EAAK8H,EAAMzY,OAAQ2Q,IAAM,CACxC,IAAIizB,EAAOnrB,EAAM9H,GACjB,GAAY,MAARizB,EAEE9tB,IADa8tB,EAAKzU,SAASyW,KAE7BX,EAAUl7B,KAAK47B,GACfE,GAAc,GAGlBZ,EAAUl7B,KAAK65B,EACjB,CACKiC,GACHZ,EAAUe,QAAQL,EAEtB,CACAhB,EAAOQ,iBAAiBF,EAAW5sB,EAtBnC,MAFEssB,EAAOQ,iBAAiB,CAACQ,GAAUttB,EAyBvC,EAkGE4tB,OA7dF,SAAgB1D,EAAO7oB,GACrB,IAAIirB,EAASpC,EAAMj5B,IAAIoQ,EAAQ2U,QAC/B,GAAKsW,EAAL,CAGA,IAAI9tB,EAAwB7C,EAAoB1K,MAC9C+O,EAAQxB,EAAsBwB,MAC9BvB,EAAaD,EAAsBC,WACnCyB,EAAgB1B,EAAsB0B,cACtCC,EAAgB3B,EAAsB2B,cACtCF,EAAYzB,EAAsByB,UAClC4tB,EAAiBrvB,EAAsBqvB,eACvCnvB,EAAeF,EAAsBE,aACnCovB,EAAmBxB,EAAOH,gBAAgB9qB,EAAQ0sB,UAClDC,EAAiBF,GAAoBA,EAAiB3B,gBAAgBlsB,GAC1E,GAAK6tB,EAAL,CAQA,IAAIG,EAAqBhD,EAAiBqB,EAAOZ,YAAarqB,EAAQ4rB,WAClEiB,EAAwB5B,EAAOH,gBAAgB9qB,EAAQ4rB,WACvDkB,EAA6C,OAA1BD,QAA4D,IAA1BA,EAAmCA,EAAwBhE,EAAMj5B,IAAIg9B,GAC1HG,EAAiBD,GAAoBA,EAAiBhC,gBAAgBlsB,GAC1E,GAAKkuB,EAsBE,CACwB,MAAzBD,GAGF5B,EAAOE,gBAAgB2B,EAAkB9sB,EAAQ4rB,WAEnD,IAAIoB,EAAcF,EAKdG,EAAeR,EAAiBnB,iBAAiB3sB,GACjDsuB,IACFA,EAAeA,EAAavpC,KAAI,SAAUwmC,GACxC,OAAOD,EAAoBpB,EAAOmE,EAAa9C,EACjD,KAEF,IAAIgD,EAAYF,EAAY1B,iBAAiB3sB,GACzCwuB,EAAeH,EAAYlC,gBAAgBlsB,GAC/CouB,EAAYxC,eAAeiC,GAEvBS,GACFF,EAAYvB,iBAAiByB,EAAWvuB,GAEtCwuB,GACFH,EAAY7B,gBAAgBgC,EAAcvuB,GAE5C,IAAI2sB,EAAY,GACZv4B,EAAOgN,EAAQhN,KACnB,GAAIk6B,GAAaD,EACf,GAAkB,MAAdj6B,EAAKo6B,MAAe,CAEtB,IAAIL,GAAkB/5B,EAAKo6B,QAAUL,EAAetX,SAASrY,GAM3D,OALA,IAAIwtB,EAAU,IAAI9M,IAClB2M,EAAWyC,EAAW3B,EAAWX,GACjCH,EAAWwC,EAAc1B,EAAWX,EAKxC,MAAO,GAAmB,MAAf53B,EAAKq6B,OAAgB,CAE9B,IAAIN,GAAkB/5B,EAAKq6B,SAAWN,EAAetX,SAASpY,GAM5D,OALA,IAAIiwB,EAAW,IAAIxP,IACnB2M,EAAWwC,EAAc1B,EAAW+B,GACpC7C,EAAWyC,EAAW3B,EAAW+B,EAKrC,MAEE/B,EAAY0B,OAGd1B,EADS0B,GAIGC,EAQd,GAJiB,MAAb3B,GAAqBA,IAAc2B,GACrCF,EAAYvB,iBAAiBF,EAAW5sB,GAGtCouB,GAAkBJ,EACpB,GAAkB,MAAd35B,EAAKo6B,OAAgC,MAAfp6B,EAAKq6B,OAG7BN,EAAevC,eAAemC,QACzB,GAAmB,MAAf35B,EAAKq6B,QAAgC,MAAdr6B,EAAKo6B,OAAiBp6B,EAAKu6B,KAAM,CACjER,EAAerX,WAAWiX,EAAelX,SAAS3W,GAAgBA,GAClE,IAAI0uB,EAAcb,EAAelX,SAASpY,GACf,kBAAhBmwB,GACTT,EAAerX,SAAS8X,EAAanwB,EAEzC,MAAO,GAAkB,MAAdrK,EAAKo6B,OAAgC,MAAfp6B,EAAKq6B,QAAkBr6B,EAAKy6B,MAAO,CAClEV,EAAerX,WAAWiX,EAAelX,SAAS5W,GAAgBA,GAClE,IAAI6uB,EAAYf,EAAelX,SAASrY,GACf,kBAAdswB,GACTX,EAAerX,SAASgY,EAAWtwB,EAEvC,CAEJ,KA3GuB,CAErB,IAAI9B,EAAautB,EAAM9rB,OAAO6vB,EAAoBH,EAAiBlC,WACnEjvB,EAAWoa,SAAS,EAAGsU,GACvB1uB,EAAWkvB,eAAeiC,GAC1B,IAAIkB,EAAclB,EAAiBnB,iBAAiB3sB,GAChDgvB,IACFA,EAAcA,EAAYjqC,KAAI,SAAUwmC,GACtC,OAAOD,EAAoBpB,EAAOvtB,EAAY4uB,EAChD,IACA5uB,EAAWmwB,iBAAiBkC,EAAahvB,IAE3CssB,EAAOE,gBAAgB7vB,EAAY0E,EAAQ4rB,YAC3CmB,EAAiBlE,EAAM9rB,OAAO6sB,EAAiBtuB,EAAW+uB,YAAazrB,GAAY4tB,IACpE9W,UAAS,EAAO7W,GAC/BkuB,EAAerX,UAAS,EAAO5W,GAC/BiuB,EAAerX,SAAS,KAAMtY,GAC9B2vB,EAAerX,SAAS,KAAMrY,GAC1BsvB,GACFI,EAAevC,eAAemC,GAEhCrxB,EAAW6vB,gBAAgB4B,EAAgBnuB,EAC7C,CA/BA,MAFEqsB,EAAOvV,SAAS,KAAM1V,EAAQ4rB,UAZhC,CAmIF,kCC3JA,IAAIgC,EAAmB,CACrBR,OAAO,EACPC,QAAQ,EACRQ,MAAM,EACNJ,OAAO,EACPF,MAAM,EACNO,WAAW,GAETthC,EAAS,CACX0/B,OAAQ,SACRvtB,MAAO,QACPvB,WAAY,YACZyB,cAAe,cACfC,cAAe,kBACf+rB,KAAM,OACN2B,eAAgB,WAChB5tB,UAAW,WACXvB,aAAc,eAQZ/C,EAAsB,CACxB2Y,OAAQ,SAAgB8a,GACtBvhC,EAASuhC,CACX,EACAn+B,IAAK,WACH,OAAOpD,CACT,EAMAwhC,iBAAkB,SAA0B9nC,GAC1C,OAAO0nC,EAAiB3nC,eAAeC,EAAKiN,KAC9C,GAEFvB,EAAOC,QAAUyI,qCCzCjB,IACI2iB,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7D0V,EAAoB1V,EAAQ,MAC5B6H,EAAsB7H,EAAQ,MAC9B4H,EAAY5H,EAAQ,MAEpB62B,GADU72B,EAAQ,MACI,CACxB85B,OAAQ,SAAgB1D,EAAO7oB,GAC7B,IAAIirB,EAASpC,EAAMj5B,IAAIoQ,EAAQ2U,QAC/B,GAAc,MAAVsW,EAAgB,CAClB,IAAIgD,EAAUhD,EAAOxV,SAASzV,EAAQ0sB,UACf,kBAAZuB,EACTpF,EAAc,OAAEoF,GACP5/B,MAAMC,QAAQ2/B,IACvBA,EAAQrrC,SAAQ,SAAUiiB,GACN,kBAAPA,GACTgkB,EAAc,OAAEhkB,EAEpB,GAEJ,CACF,IAEE0kB,EAAoB,CACtBgD,OAAQ,SAAgB1D,EAAO7oB,GAC7B,IAAIirB,EAASpC,EAAMj5B,IAAIoQ,EAAQ2U,QAC/B,GAAc,MAAVsW,EAAJ,CAGA,IAAIiD,EAAcluB,EAAQmuB,WAAWD,YACpB,MAAfA,GAAgJ7zB,GAAU,GAC5J,IAAI4zB,EAAUhD,EAAOxV,SAASzV,EAAQ0sB,WACzBr+B,MAAMC,QAAQ2/B,GAAWA,EAAU,CAACA,IAC1CrrC,SAAQ,SAAUiiB,GACvB,GAAkB,kBAAPA,EAAiB,CAC1B,IACE6Z,EADEC,GAAY,EAAI1B,EAAqC,SAAGiR,GAE5D,IACE,IAAKvP,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAI6a,EAAe1P,EAAMz9B,MACrBqa,EAAautB,EAAMj5B,IAAIw+B,GACT,MAAd9yB,GAIJ6M,EAAkBijB,WAAW9vB,EAAYuJ,EAC3C,CACF,CAAE,MAAOrC,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CACF,GAzBA,CA0BF,GAEE22B,EAAoB,CACtB+C,OAAQ8B,EAAYlmB,EAAkB6jB,kBAEpCvC,EAAqB,CACvB8C,OAAQ8B,EAAYlmB,EAAkBikB,mBAEpC1C,EAAoB,CACtB6C,OAAQ+B,EAAYnmB,EAAkB6jB,kBAEpCrC,EAAqB,CACvB4C,OAAQ+B,EAAYnmB,EAAkBikB,mBAExC,SAASiC,EAAYE,GACnB,OAAO,SAAU1F,EAAO7oB,GACtB,IAAIitB,EACAhC,EAASpC,EAAMj5B,IAAIoQ,EAAQ2U,QAC/B,GAAc,MAAVsW,EAAJ,CAGA,IAEIuD,EAAkBb,EAFlBO,EAAcluB,EAAQmuB,WAAWD,YACpB,MAAfA,GAAgJ7zB,GAAU,GAE5J,IACEm0B,EAAmBvD,EAAOH,gBAAgB9qB,EAAQ0sB,SACpD,CAAE,MAAO+B,GAAU,CACnB,IAAKD,EACH,IACEb,EAAc1C,EAAOK,iBAAiBtrB,EAAQ0sB,SAChD,CAAE,MAAOgC,GAAW,CAEtB,GAAwB,MAApBF,GAA2C,MAAfb,EAAhC,CAIA,IAKE7O,EALE3hB,EAAwB7C,EAAoB1K,MAC9Ci7B,EAAO1tB,EAAsB0tB,KAC7BlsB,EAAQxB,EAAsBwB,MAC5BgwB,EAAkD,QAAhC1B,EAAeU,SAA0C,IAAjBV,EAA0BA,EAAe,CAACuB,GACpGzP,GAAa,EAAI9B,EAAqC,SAAG0R,GAE7D,IACE,IAAIC,EAAQ,WACV,IAAIC,EAAa/P,EAAO79B,MACxB,GAAkB,MAAd4tC,EACF,MAAO,WAET,IAAIC,EAAaD,EAAW/D,gBAAgB,QAC5C,IAAKgE,EACH,MAAO,WAET,IAEEC,EAFEC,EAAeF,EAAWzE,YAC1B4E,GAAa,EAAIhS,EAAqC,SAAGiR,GAE7D,IACE,IAAKe,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAI6a,EAAeW,EAAO9tC,MACtBqa,EAAautB,EAAMj5B,IAAIw+B,GAC3B,GAAkB,MAAd9yB,EAQJ,KAJqG,QAAhE4zB,EAAwB5zB,EAAWgwB,iBAAiB3sB,UAA8C,IAA1BuwB,OAAmC,EAASA,EAAsBhjC,MAAK,SAAUg+B,GAC5L,IAAIiF,EACJ,OAAiB,OAATjF,QAA0B,IAATA,GAAoF,QAAxDiF,EAAwBjF,EAAKY,gBAAgBD,UAA6C,IAA1BsE,OAA1E,EAAsHA,EAAsB9E,eAAiB2E,CAC1M,KACA,CAGA,IAAII,EAAajnB,EAAkB8hB,oBAAoBpB,EAAOvtB,EAAYuzB,GAC1D,MAAdO,GAAgI/0B,GAAU,GAC5Ik0B,EAASjzB,EAAY8zB,EAHrB,CAIF,CACF,CAAE,MAAO5sB,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACF,EACA,IAAKksB,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAC9C,KAAI2b,EACON,GADc,CAI7B,CAAE,MAAOpsB,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CAtDA,CAfA,CAsEF,CACF,CACA,SAASy7B,EAAYC,GACnB,OAAO,SAAU1F,EAAO7oB,GACtB,IAAIqvB,EACApE,EAASpC,EAAMj5B,IAAIoQ,EAAQ2U,QAC/B,GAAc,MAAVsW,EAAJ,CAGA,IAKIqE,EACAC,EANAC,EAAsBxvB,EAAQmuB,WAChCD,EAAcsB,EAAoBtB,YAClCuB,EAAeD,EAAoBC,aACpB,MAAfvB,GAAgJ7zB,GAAU,GAC1I,MAAhBo1B,GAAgJp1B,GAAU,GAG5J,IACEi1B,EAAmBrE,EAAOH,gBAAgB9qB,EAAQ0sB,SACpD,CAAE,MAAOgD,GAAW,CACpB,IAAKJ,EACH,IACEC,EAActE,EAAOK,iBAAiBtrB,EAAQ0sB,SAChD,CAAE,MAAOiD,GAAW,CAEtB,GAAwB,MAApBL,GAA2C,MAAfC,EAAhC,CAIA,IAKEK,EALElxB,EAAyBpE,EAAoB1K,MAC/Ci7B,EAAOnsB,EAAuBmsB,KAC9BlsB,EAAQD,EAAuBC,MAC7BkxB,EAAkD,QAAhCR,EAAeE,SAA0C,IAAjBF,EAA0BA,EAAe,CAACC,GACpGQ,GAAa,EAAI7S,EAAqC,SAAG4S,GAE7D,IACE,IAAIE,EAAS,WACX,IAAIjB,EAAac,EAAO3uC,MACxB,GAAkB,MAAd6tC,EACF,MAAO,WAET,IAEEkB,EAFEhB,EAAeF,EAAWzE,YAC1B4F,GAAa,EAAIhT,EAAqC,SAAGiR,GAE7D,IACE,IAAK+B,EAAWrqC,MAAOoqC,EAASC,EAAWrR,KAAKrL,MAAO,CACrD,IAAI6a,EAAe4B,EAAO/uC,MACtBqa,EAAautB,EAAMj5B,IAAIw+B,GAC3B,GAAkB,MAAd9yB,EAQJ,KAJsG,QAAjE40B,EAAyB50B,EAAWgwB,iBAAiB3sB,UAA+C,IAA3BuxB,OAAoC,EAASA,EAAuBhkC,MAAK,SAAUg+B,GAC/L,IAAIiG,EACJ,OAAiB,OAATjG,QAA0B,IAATA,GAAqF,QAAzDiG,EAAyBjG,EAAKY,gBAAgBD,UAA8C,IAA3BsF,OAA3E,EAAwHA,EAAuB9F,eAAiB2E,CAC7M,KACA,CAGA,IAAII,EAAajnB,EAAkB6iB,WAAWnC,EAAOvtB,EAAYwzB,EAAYW,GAC7D,MAAdL,GAAgI/0B,GAAU,GAC5Ik0B,EAASjzB,EAAY8zB,EAHrB,CAIF,CACF,CAAE,MAAO5sB,GACPytB,EAAWpqC,EAAE2c,EACf,CAAE,QACAytB,EAAWp9B,GACb,CACF,EACA,IAAKi9B,EAAWlqC,MAAOgqC,EAASE,EAAWlR,KAAKrL,MAC9C,KAAI2c,EACQH,GADc,CAI9B,CAAE,MAAOvtB,GACPstB,EAAWjqC,EAAE2c,EACf,CAAE,QACAstB,EAAWj9B,GACb,CAlDA,CAnBA,CAsEF,CACF,CACAjB,EAAOC,QAAU,CACf23B,kBAAmBA,EACnBF,oBAAqBA,EACrBG,mBAAoBA,EACpBC,kBAAmBA,EACnBC,mBAAoBA,EACpBJ,kBAAmBA,sCCtOrB,IAAIphB,EAAoB1V,EAAQ,MAC5B6H,EAAsB7H,EAAQ,MAC9B22B,EAAmB32B,EAAQ,MAC3B29B,EAA8B39B,EAAQ,MACtC+V,EAA0B/V,EAAQ,MAClCgW,EAAoBhW,EAAQ,MAC5BiW,EAAiBjW,EAAQ,MACzB49B,EAAiC59B,EAAQ,MACzC69B,EAAe79B,EAAQ,MACvB89B,EAAkB99B,EAAQ,MAC1B+9B,EAA0B/9B,EAAQ,MAClC+N,EAAa/N,EAAQ,MACrBqW,EAAwBrW,EAAQ,MAChCg+B,EAAqBh+B,EAAQ,MAC7Bi+B,EAAaj+B,EAAQ,MACrBynB,EAA2BznB,EAAQ,MACnCwF,EAAWxF,EAAQ,MACrBm3B,EAAmB3xB,EAAS2xB,iBAC5B+G,EAAyB14B,EAAS04B,uBAClCC,EAAa34B,EAAS24B,WACpBr8B,EAA6B9B,EAAQ,MACrCiB,EAAqBjB,EAAQ,KAC7BgO,EAA2BhO,EAAQ,MACnCuW,EAAiBvW,EAAQ,MACzBo+B,EAAyBp+B,EAAQ,MACjCq+B,EAAyBr+B,EAAQ,MACjCs+B,EAAiCt+B,EAAQ,MACzCu+B,EAAoBv+B,EAAQ,MAC5Bw+B,EAAsBx+B,EAAQ,MAC9By+B,EAAmBz+B,EAAQ,MAC3B0+B,EAAwB1+B,EAAQ,MAChC2+B,EAAoB3+B,EAAQ,MAC5B4+B,EAAkB5+B,EAAQ,MAC1B6+B,EAAoB7+B,EAAQ,MAC5B8+B,EAAgB9+B,EAAQ,MACxBwW,EAAsBxW,EAAQ,MAC9B++B,EAA0B/+B,EAAQ,MAClC2F,EAAa3F,EAAQ,MACrBwX,EAAwBxX,EAAQ,MAChCsxB,EAAwBtxB,EAAQ,MAChCquB,EAAyBruB,EAAQ,MACjCyX,EAAkCzX,EAAQ,MAC1Cm0B,EAAqBn0B,EAAQ,MAC7Bq3B,EAAoBr3B,EAAQ,MAC5B2nB,EAAuB3nB,EAAQ,MAC/BsuB,EAAiBtuB,EAAQ,MACzB2X,EAAgC3X,EAAQ,MACxC4X,EAAY5X,EAAQ,MACpBgC,EAAmBhC,EAAQ,MAC3B6X,EAAmB7X,EAAQ,MAC3Bg/B,EAAoBh/B,EAAQ,MAC5Bi/B,GAAwBj/B,EAAQ,KAChCk/B,GAAal/B,EAAQ,MACrB+H,GAAoB/H,EAAQ,MAC5Bm/B,GAAgBn/B,EAAQ,MACxBo/B,GAAqBp/B,EAAQ,MAC7Bq/B,GAAar/B,EAAQ,MACrBs/B,GAAwBt/B,EAAQ,MAgBpCb,EAAOC,QAAU,CAEfmgC,YAAalB,EACbmB,QAAS3B,EACT/1B,WAAYg2B,EACZ2B,mBAAoB1B,EACpB2B,aAAcf,EACdgB,OAAQpB,EACR7W,cAAe0X,GACfQ,MAAOnB,EACPoB,kBAAmBrB,EAAoBqB,kBACvC/9B,2BAA4BA,EAC5Bg+B,4BAA6BtB,EAAoBsB,4BACjDr6B,0BAA2B64B,EAA+B74B,0BAC1Ds6B,qBAAsBvB,EAAoBuB,qBAC1CC,wBAAyB1B,EAA+B0B,wBACxDC,kBAAmBrB,EAAgBqB,kBACnCC,uBAAwB1B,EAAoB0B,uBAC5Cn+B,qBAAsBy8B,EAAoBz8B,qBAC1Co+B,QAASlC,EAAWkC,QACpB9sB,YAAa4qB,EAAW5qB,YACxB+sB,sBAAuBnC,EAAWmC,sBAClCC,sBAAuBzB,EAAgByB,sBACvCC,sBAAuB1B,EAAgB0B,sBACvCC,sBAAuBtC,EAAWsC,sBAClCC,kBAAmBhC,EAAoBgC,kBACvCC,uBAAwBxC,EAAWwC,uBACnC/6B,WAAYu4B,EAAWv4B,WACvBiiB,qBAAsBA,EACtBlU,YAAa+qB,EAAoB/qB,YACjCitB,uBAAwBlC,EAAoBkC,uBAC5CC,oBAAqBnC,EAAoBmC,oBACzCC,cAAehC,EAAgBgC,cAC/BlpB,yBAA0B8mB,EAAoB9mB,yBAC9C1P,uBAAwBw2B,EAAoBx2B,uBAC5C64B,+BAAgCrC,EAAoBqC,+BACpDC,iCAAkCtC,EAAoBsC,iCACtDnpB,8BAA+BA,EAC/BrB,QAAS2nB,EAAW3nB,QACpByqB,WAAY9C,EAAW8C,WACvBC,qBAAsB/C,EAAW+C,qBACjCC,UAAWhD,EAAWgD,UACtB1qB,eAAgBA,EAEhBV,cAAe+nB,EAA+B/nB,cAC9CC,gBAAiB8nB,EAA+B9nB,gBAEhDorB,uBAAwBvD,EACxBjoB,kBAAmBA,EACnBihB,iBAAkBA,EAClBwK,UAAWrC,EAAcqC,UACzBC,YAAatC,EAAcsC,YAE3BrrB,wBAAyBA,EACzBC,kBAAmBA,EACnBC,eAAgBA,EAChBlI,WAAYA,EACZsI,sBAAuBA,EACvBrI,yBAA0BA,EAC1BwI,oBAAqBA,EAErB3O,oBAAqBA,EAErB4f,yBAA0BA,EAC1B0X,cAAeA,GACfJ,wBAAyBA,EAEzBC,kBAAmBA,EACnBE,WAAYA,GACZn3B,kBAAmBA,GACnBs5B,mBAAoBpC,GAAsBoC,mBAC1CC,cAAe1C,EAAgB0C,cAC/BC,mBAAoB3C,EAAgB2C,mBACpCC,OAAQ5C,EAAgB4C,OACxBC,QAAS7C,EAAgB6C,QACzBC,SAAU9C,EAAgB8C,SAC1BC,QAAS/C,EAAgB+C,QACzBC,UAAWhD,EAAgBgD,UAC3BC,aAAcjD,EAAgBiD,aAC9Bl8B,WAAYA,EACZwxB,iBAAkBA,EAClB+G,uBAAwBA,EACxB7G,kBAAmBA,EACnB8G,WAAYA,EACZvmB,UAAWA,EACX5V,iBAAkBA,EAClB6V,iBAAkBA,EAClBwnB,WAAYA,GACZ7nB,sBAAuBA,EACvB2c,mBAAoBA,EACpB7C,sBAAuBA,EACvBjD,uBAAwBA,EACxB5W,gCAAiCA,EACjC6W,eAAgBA,EAChBptB,WAAY,CACV29B,kBAAmBA,EACnBiD,iBAAkBpD,EAClBz9B,mBAAoBA,EACpB8gC,sBAAuB3D,EAAuB2D,sBAC9Ch0B,WAAYiwB,EAAmBjwB,WAC/ByZ,kBAAmBwW,EAAmBxW,kBACtCjQ,2BAA4BymB,EAAmBzmB,2BAC/CiW,8BAA+BwQ,EAAmBxQ,8BAClD8R,sBAAuBA,wCC7K3B,IAAI13B,EAAY5H,EAAQ,MACpBgiC,EAAuC,uCAI3C7iC,EAAOC,QAAU,CACf6iC,8BAJF,SAAuCC,GACnCA,IAAoBF,GAA0Mp6B,GAAU,EAC5O,EAGEu6B,mBAAoB,SAA4BC,GAC9C,OAAOA,CACT,EACAC,0BAA2B,WACzB,MAAM,IAAI/hC,MAAM,kBAClB,EACA0hC,qCAAsCA,sCChBxC,IAAIM,EAA8B,YAEhCH,EADaniC,EAAQ,MACSmiC,mBAMhChjC,EAAOC,QAAU,CACfkjC,4BAA6BA,EAC7BC,8BAPF,SAAuCh1B,GACrC,GAAe,MAAXA,GAAsC,kBAAZA,GAAwE,kBAAzCA,EAAQ+0B,GACnE,OAAOH,EAAmB50B,EAAQ+0B,GAEtC,sCCPA,IACI9X,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7D0V,EAAoB1V,EAAQ,MAE5B6V,GADU7V,EAAQ,MACF5R,OAAO6pB,OAAO,CAChCuqB,UAAW,YACXC,aAAc,eACdC,YAAa,iBAEX5sB,EAAkB1nB,OAAO6pB,OAAO,CAClC0qB,OAAQ,SACRC,QAAS,YA+NX,SAASC,EAAax8B,GACpB,OAAIA,EAAQQ,SAASi8B,YAAcz8B,EAAQQ,SAASi8B,WAAWjvC,OAAS,GAA6C,gBAAxCwS,EAAQQ,SAASi8B,WAAW,GAAG7uB,KACnG5N,EAAQQ,SAASi8B,WAAW,GAAGpiC,KAEjC,IACT,CACAvB,EAAOC,QAAU,CACfyW,cAAeA,EACfC,gBAAiBA,EACjBitB,QAtOF,SAAiBC,EAAS38B,EAAS48B,EAAmB3zC,GACpD,IAAI4zC,EAA0BD,EAAoB,CAACA,GAAqB,GACpEE,EAAgB7zC,EAAU,CAACA,GAAW,GA0B1C,OAzBA0zC,EAAQ7yC,SAAQ,SAAU4J,GACxB,OAAQA,EAAOpK,MACb,IAAK,cACH,IAAIyzC,EAmCZ,SAAoBrpC,EAAQsM,GAC1B,IAAIg9B,EAAqBtpC,EAAOspC,mBAC5BC,EAAYT,EAAax8B,GAC7B,IAAKi9B,EACH,OAAO,KAET,OAAO,SAAUlN,EAAOvzB,GACtB,IAAI0K,EAAU6oB,EAAMyM,aAAaS,GACjC,GAAK/1B,EAAL,CAGA,IAAIg2B,EAAWh2B,EAAQyV,SAASqgB,IAChBznC,MAAMC,QAAQ0nC,GAAYA,EAAW,CAACA,IAC5CpzC,SAAQ,SAAUiiB,GACtBA,GAAoB,kBAAPA,GACfgkB,EAAc,OAAEhkB,EAEpB,GAPA,CAQF,CACF,CAtD+BoxB,CAAWzpC,EAAQsM,GACtC+8B,IACFF,EAAwBtlC,KAAKwlC,GAC7BD,EAAcvlC,KAAKwlC,IAErB,MACF,IAAK,YACH,IAAIK,EAgDZ,SAAkB1pC,EAAQsM,GACxB,IAAIq9B,EAAW3pC,EAAO2pC,SACpBC,EAAiB5pC,EAAO4pC,eACxBC,EAAW7pC,EAAO6pC,SACpB,IAAKF,EAEH,OAAO,KAET,IAAIJ,EAAYT,EAAax8B,GAC7B,IAAKs9B,IAAmBL,EACtB,OAAO,KAET,OAAO,SAAUlN,EAAOvzB,GACtB,IAAIghC,EAASzN,EAAMj5B,IAAIumC,GACvB,GAAKG,EAAL,CAGA,IAAIt2B,EAAU6oB,EAAMyM,aAAaS,GACjC,GAAK/1B,EAAL,CAGA,IAEE0e,EAFEmQ,EAAa7uB,EAAQ8qB,gBAAgBuL,GACrC1X,GAAY,EAAI1B,EAAqC,SAAGmZ,GAE5D,IACE,IAAKzX,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIgjB,EAAO7X,EAAMz9B,MACjB,GAAK4tC,EAAL,CAGA,IAAIvzB,EAAa6M,EAAkBujB,cAAc4K,EAAQC,EAAK5yC,IAAK4yC,EAAK5K,SACxE,GAAKrwB,EAAL,CAGA,IAAI8zB,EAAajnB,EAAkB8hB,oBAAoBpB,EAAOvtB,EAAYuzB,GAC1E,GAAKO,EAGL,OAAQmH,EAAKC,eACX,IAAK,SACHruB,EAAkB6jB,gBAAgB1wB,EAAY8zB,GAC9C,MACF,IAAK,UACHjnB,EAAkBikB,iBAAiB9wB,EAAY8zB,GAVnD,CAJA,CAoBF,CACF,CAAE,MAAO5sB,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CAlCA,CAJA,CAuCF,CACF,CAxG6B4jC,CAASjqC,EAAQsM,GAClCo9B,IACFP,EAAwBtlC,KAAK6lC,GAC7BN,EAAcvlC,KAAK6lC,IAErB,MACF,IAAK,eACH,IAAIQ,EAkGZ,SAAqBlqC,EAAQsM,GAC3B,IAAIq9B,EAAW3pC,EAAO2pC,SACpBQ,EAAiBnqC,EAAOmqC,eACxBC,EAAmBpqC,EAAOoqC,iBAC1Bd,EAAqBtpC,EAAOspC,mBAC9B,IAAKK,EAEH,OAAO,KAET,IAAIJ,EAAYT,EAAax8B,GAC7B,IAAKi9B,EACH,OAAO,KAET,OAAO,SAAUlN,EAAOvzB,GACtB,GAAKA,EAAL,CAGA,IAAIuhC,EAAY,GAIZC,EAAiBxhC,EAAKygC,GAC1B,GAAIe,GAAkBzoC,MAAMC,QAAQwnC,GAAqB,CACvD,IACEhX,EADEC,GAAa,EAAI9B,EAAqC,SAAG6Y,GAE7D,IACE,IAAK/W,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAIwjB,EAAYjY,EAAO79B,MACnB61C,GAA4C,kBAAnBA,IAC3BA,EAAiBA,EAAeC,GAEpC,CACF,CAAE,MAAOv0B,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACIxE,MAAMC,QAAQwoC,GAChBA,EAAel0C,SAAQ,SAAUo0C,GAC3BA,GAAYA,EAASnyB,IAA0B,kBAAbmyB,GAAgD,kBAAhBA,EAASnyB,IAC7EgyB,EAAUxmC,KAAK2mC,EAASnyB,GAE5B,IACSiyB,GAAkBA,EAAejyB,IAAmC,kBAAtBiyB,EAAejyB,IACtEgyB,EAAUxmC,KAAKymC,EAAejyB,GAElC,MAAWiyB,GAAgD,kBAAvBhB,GAA6D,kBAAnBgB,IAE9C,kBAD9BA,EAAiBA,EAAehB,IAE9Be,EAAUxmC,KAAKymC,GACNzoC,MAAMC,QAAQwoC,IACvBA,EAAel0C,SAAQ,SAAUiiB,GACb,kBAAPA,GACTgyB,EAAUxmC,KAAKwU,EAEnB,MAMR,SAAoBsxB,EAAUQ,EAAgBC,EAAkB/N,EAAOgO,GAErE,IAAIP,EAASzN,EAAMj5B,IAAIumC,GACvB,IAAKG,EACH,OAEF,GAAIM,EAAiBtwC,OAAS,EAE5B,OAGF,IADA,IAAI2wC,EAAcX,EACTjwC,EAAI,EAAGA,EAAIuwC,EAAiBtwC,OAAS,EAAGD,IAC3C4wC,IACFA,EAAcA,EAAYnM,gBAAgB8L,EAAiBvwC,KAI/D,IAAKswC,IAAmBM,EAEtB,OAEF,IACElI,EADEE,GAAa,EAAIhS,EAAqC,SAAG0Z,GAE7D,IACE,IAAI/H,EAAQ,WACV,IAAIjrC,EAAMorC,EAAO9tC,MACbqa,EAAa6M,EAAkBujB,cAAcuL,EAAatzC,EAAIA,IAAKA,EAAIgoC,SACvErwB,GACFu7B,EAAUj0C,SAAQ,SAAUozC,GAC1B7tB,EAAkBijB,WAAW9vB,EAAY06B,EAC3C,GAEJ,EACA,IAAK/G,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAC9Cqb,GAEJ,CAAE,MAAOpsB,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACF,CA5CIu4B,CAAW+K,EAAUQ,EAAgBC,EAAkB/N,EAAOgO,EA1C9D,CA2CF,CACF,CA9JgCK,CAAY1qC,EAAQsM,GACxC49B,IACFf,EAAwBtlC,KAAKqmC,GAC7Bd,EAAcvlC,KAAKqmC,IAI3B,IACO,CACLhB,kBAAmB,SAA2B7M,EAAOvzB,GACnDqgC,EAAwB/yC,SAAQ,SAAUu0C,GACxCA,EAAsBtO,EAAOvzB,EAC/B,GACF,EACAvT,QAAS,SAAiB8mC,EAAOvzB,GAC/BsgC,EAAchzC,SAAQ,SAAUw0C,GAC9BA,EAAYvO,EAAOvzB,EACrB,GACF,EAEJ,sCCrDA,IACEs0B,EADan3B,EAAQ,MACOm3B,iBAE5BC,EADcp3B,EAAQ,MACUo3B,oBAC9BxvB,EAAY5H,EAAQ,MAQpB4kC,EAAgC,WAClC,SAASA,EAAiBhmC,EAAQimC,EAAS3iB,GACzCriB,KAAKilC,QAAU5iB,EACfriB,KAAKklC,SAAWF,EAChBhlC,KAAKmlC,QAAUpmC,CACjB,CACA,IAAImF,EAAS6gC,EAAiBrxC,UA8E9B,OA7EAwQ,EAAOg0B,eAAiB,SAAwBn5B,GAC9CiB,KAAKklC,SAASE,WAAWrmC,EAAOg5B,YAAa/3B,KAAKilC,QACpD,EACA/gC,EAAO6zB,UAAY,WACjB,OAAO/3B,KAAKilC,OACd,EACA/gC,EAAO+zB,QAAU,WACf,IAAInoC,EAAOkQ,KAAKklC,SAASjN,QAAQj4B,KAAKilC,SAEtC,OADU,MAARn1C,GAA0JiY,GAAU,GAC/JjY,CACT,EACAoU,EAAOif,SAAW,SAAkBtiB,EAAMH,GACxC,IAAI+4B,EAAalC,EAAoB12B,EAAMH,GAC3C,OAAOV,KAAKklC,SAAS/hB,SAASnjB,KAAKilC,QAASxL,EAC9C,EACAv1B,EAAOkf,SAAW,SAAkBz0B,EAAOkS,EAAMH,GAE/C,OADC2kC,EAAiB12C,IAAiLoZ,GAAU,GACtM/H,KAAKslC,iBAAiB32C,EAAOkS,EAAMH,EAC5C,EAMAwD,EAAOohC,iBAAmB,SAA0B32C,EAAOkS,EAAMH,GAC/D,IAAI+4B,EAAalC,EAAoB12B,EAAMH,GAE3C,OADAV,KAAKklC,SAAS9hB,SAASpjB,KAAKilC,QAASxL,EAAY9qC,GAC1CqR,IACT,EACAkE,EAAOs0B,gBAAkB,SAAyB33B,EAAMH,GACtD,IAAI+4B,EAAalC,EAAoB12B,EAAMH,GACvC6kC,EAAWvlC,KAAKklC,SAASM,kBAAkBxlC,KAAKilC,QAASxL,GAC7D,OAAmB,MAAZ8L,EAAmBvlC,KAAKmlC,QAAQ7nC,IAAIioC,GAAYA,CACzD,EACArhC,EAAO20B,gBAAkB,SAAyBF,EAAQ93B,EAAMH,GAC5Di4B,aAAkBoM,GAA2Jh9B,GAAU,GACzL,IAAI0xB,EAAalC,EAAoB12B,EAAMH,GACvC6kC,EAAW5M,EAAOZ,YAEtB,OADA/3B,KAAKklC,SAASO,kBAAkBzlC,KAAKilC,QAASxL,EAAY8L,GACnDvlC,IACT,EACAkE,EAAOwhC,wBAA0B,SAAiC7kC,EAAM8kC,EAAUjlC,GAChF,IAAIklC,EAAe5lC,KAAKw4B,gBAAgB33B,EAAMH,GAC9C,IAAKklC,EAAc,CACjB,IAAIC,EACApM,EAAalC,EAAoB12B,EAAMH,GACvColC,EAAWxO,EAAiBt3B,KAAK+3B,YAAa0B,GAGlDmM,EAAoE,QAApDC,EAAoB7lC,KAAKmlC,QAAQ7nC,IAAIwoC,UAA6C,IAAtBD,EAA+BA,EAAoB7lC,KAAKmlC,QAAQ16B,OAAOq7B,EAAUH,GAC7J3lC,KAAK64B,gBAAgB+M,EAAc/kC,EAAMH,EAC3C,CACA,OAAOklC,CACT,EACA1hC,EAAO80B,iBAAmB,SAA0Bn4B,EAAMH,GACxD,IAAIgC,EAAQ1C,KACRy5B,EAAalC,EAAoB12B,EAAMH,GACvCqlC,EAAY/lC,KAAKklC,SAASc,mBAAmBhmC,KAAKilC,QAASxL,GAC/D,OAAiB,MAAbsM,EACKA,EAEFA,EAAU30C,KAAI,SAAUm0C,GAC7B,OAAmB,MAAZA,EAAmB7iC,EAAMyiC,QAAQ7nC,IAAIioC,GAAYA,CAC1D,GACF,EACArhC,EAAOi1B,iBAAmB,SAA0B8M,EAASplC,EAAMH,GAChE3E,MAAMC,QAAQiqC,IAAkKl+B,GAAU,GAC3L,IAAI0xB,EAAalC,EAAoB12B,EAAMH,GACvCqlC,EAAYE,EAAQ70C,KAAI,SAAUunC,GACpC,OAAOA,GAAUA,EAAOZ,WAC1B,IAEA,OADA/3B,KAAKklC,SAASgB,mBAAmBlmC,KAAKilC,QAASxL,EAAYsM,GACpD/lC,IACT,EACAkE,EAAOiiC,iBAAmB,WACxBnmC,KAAKmlC,QAAQiB,sBAAsBpmC,KAAKilC,QAC1C,EACOF,CACT,CArFoC,GAsFpC,SAASM,EAAiB12C,GACxB,OAAgB,MAATA,GAAkC,kBAAVA,GAAsBoN,MAAMC,QAAQrN,IAAUA,EAAM03C,MAAMhB,EAC3F,CACA/lC,EAAOC,QAAUwlC,qCCrGjB,IAAIrG,EAAoBv+B,EAAQ,MAE9BmmC,EADanmC,EAAQ,MACDmmC,SAClBv+B,EAAY5H,EAAQ,MAcpBomC,EAAwC,WAC1C,SAASA,EAAyBC,EAAM97B,GACtC1K,KAAKymC,UAAY,CAAC/7B,EAAM87B,GACxBxmC,KAAK0mC,MAAQF,EACbxmC,KAAK2mC,MAAQj8B,CACf,CAQA,IAAIxG,EAASqiC,EAAyB7yC,UAoItC,OAnIAwQ,EAAO0iC,iCAAmC,SAA0CvkB,GAClF,IAAIwkB,EAAa7mC,KAAK0mC,MAAMppC,IAAI+kB,GAC5BykB,EAAa9mC,KAAK2mC,MAAMrpC,IAAI+kB,GAChC,YAAmBloB,IAAf2sC,EACgB,MAAdD,EACKA,EAEQnI,EAAkBhvC,MAAMm3C,GAMjB,OAAfC,EACF,KACgB,MAAdD,EACSnI,EAAkBzE,OAAO4M,EAAYC,GASpCpI,EAAkBhvC,MAAMo3C,EAO/C,EACA5iC,EAAO6iC,eAAiB,SAAwB1kB,GAC9C,IAAIykB,EAAa9mC,KAAK2mC,MAAMrpC,IAAI+kB,GAChC,IAAKykB,EAAY,CACf,IAAID,EAAa7mC,KAAK0mC,MAAMppC,IAAI+kB,GAC/BwkB,GAAqJ9+B,GAAU,GAChK++B,EAAapI,EAAkBj0B,OAAO4X,EAAQqc,EAAkBzG,QAAQ4O,IACxE7mC,KAAK2mC,MAAMhtB,IAAI0I,EAAQykB,EACzB,CACA,OAAOA,CACT,EACA5iC,EAAOkhC,WAAa,SAAoB4B,EAAUC,GAChD,IAAIC,EAAalnC,KAAK2mC,MAAMrpC,IAAI0pC,GAC5BG,EAAannC,KAAK0mC,MAAMppC,IAAI0pC,GAC9BE,GAAcC,GAAoLp/B,GAAU,GAC9M,IAAI2C,EAAO1K,KAAK+mC,eAAeE,GAC3BE,GACFzI,EAAkB0G,WAAW+B,EAAYz8B,GAEvCw8B,GACFxI,EAAkB0G,WAAW8B,EAAYx8B,EAE7C,EACAxG,EAAOkjC,qBAAuB,SAA8BzO,EAAQsO,GAClE,IAAIv8B,EAAO1K,KAAK+mC,eAAeE,GAC/BvI,EAAkB0G,WAAWzM,EAAQjuB,EACvC,EACAxG,EAAOuG,OAAS,SAAgB4X,EAAQsjB,IACpC3lC,KAAK0mC,MAAMW,UAAUhlB,KAAYikB,GAAYtmC,KAAK2mC,MAAMU,UAAUhlB,KAAYikB,IAA2Lv+B,GAAU,GACrR,IAAI4wB,EAAS+F,EAAkBj0B,OAAO4X,EAAQsjB,GAC9C3lC,KAAK2mC,MAAMhtB,IAAI0I,EAAQsW,EACzB,EACAz0B,EAAe,OAAI,SAAiBme,GAClCriB,KAAK2mC,MAAc,OAAEtkB,EACvB,EACAne,EAAOmjC,UAAY,SAAmBhlB,GACpC,OAAOriB,KAAK2mC,MAAMzlB,IAAImB,GAAUriB,KAAK2mC,MAAMU,UAAUhlB,GAAUriB,KAAK0mC,MAAMW,UAAUhlB,EACtF,EACAne,EAAO+zB,QAAU,SAAiB5V,GAChC,IAAK,IAAI1d,EAAK,EAAGA,EAAK3E,KAAKymC,UAAUzyC,OAAQ2Q,IAAM,CACjD,IAAIg0B,EAAS34B,KAAKymC,UAAU9hC,GAAIrH,IAAI+kB,GACpC,GAAIsW,EACF,OAAO+F,EAAkBzG,QAAQU,GAC5B,GAAe,OAAXA,EACT,OAAO,IAEX,CACF,EACAz0B,EAAOif,SAAW,SAAkBd,EAAQoX,GAC1C,IAAK,IAAI90B,EAAK,EAAGA,EAAK3E,KAAKymC,UAAUzyC,OAAQ2Q,IAAM,CACjD,IAAIg0B,EAAS34B,KAAKymC,UAAU9hC,GAAIrH,IAAI+kB,GACpC,GAAIsW,EAAQ,CACV,IAAIhqC,EAAQ+vC,EAAkBvb,SAASwV,EAAQc,GAC/C,QAAct/B,IAAVxL,EACF,OAAOA,CAEX,MAAO,GAAe,OAAXgqC,EACT,OAAO,IAEX,CACF,EACAz0B,EAAOkf,SAAW,SAAkBf,EAAQoX,EAAY9qC,GACtD,IAAIm4C,EAAa9mC,KAAK+mC,eAAe1kB,GACrCqc,EAAkBtb,SAAS0jB,EAAYrN,EAAY9qC,EACrD,EACAuV,EAAOshC,kBAAoB,SAA2BnjB,EAAQoX,GAC5D,IAAK,IAAI90B,EAAK,EAAGA,EAAK3E,KAAKymC,UAAUzyC,OAAQ2Q,IAAM,CACjD,IAAIg0B,EAAS34B,KAAKymC,UAAU9hC,GAAIrH,IAAI+kB,GACpC,GAAIsW,EAAQ,CACV,IAAI4M,EAAW7G,EAAkB8G,kBAAkB7M,EAAQc,GAC3D,QAAiBt/B,IAAborC,EACF,OAAOA,CAEX,MAAO,GAAe,OAAX5M,EACT,OAAO,IAEX,CACF,EACAz0B,EAAOuhC,kBAAoB,SAA2BpjB,EAAQoX,EAAY8L,GACxE,IAAIuB,EAAa9mC,KAAK+mC,eAAe1kB,GACrCqc,EAAkB+G,kBAAkBqB,EAAYrN,EAAY8L,EAC9D,EACArhC,EAAO8hC,mBAAqB,SAA4B3jB,EAAQoX,GAC9D,IAAK,IAAI90B,EAAK,EAAGA,EAAK3E,KAAKymC,UAAUzyC,OAAQ2Q,IAAM,CACjD,IAAIg0B,EAAS34B,KAAKymC,UAAU9hC,GAAIrH,IAAI+kB,GACpC,GAAIsW,EAAQ,CACV,IAAIoN,EAAYrH,EAAkBsH,mBAAmBrN,EAAQc,GAC7D,QAAkBt/B,IAAd4rC,EACF,OAAOA,CAEX,MAAO,GAAe,OAAXpN,EACT,OAAO,IAEX,CACF,EACAz0B,EAAOgiC,mBAAqB,SAA4B7jB,EAAQoX,EAAYsM,GAC1E,IAAIe,EAAa9mC,KAAK+mC,eAAe1kB,GACrCqc,EAAkBwH,mBAAmBY,EAAYrN,EAAYsM,EAC/D,EACOQ,CACT,CAlJ4C,GAmJ5CjnC,EAAOC,QAAUgnC,qCCpKjB,IAAI7H,EAAoBv+B,EAAQ,MAC5BwF,EAAWxF,EAAQ,MACrBmmC,EAAW3gC,EAAS2gC,SACpBgB,EAAc3hC,EAAS2hC,YACrB72B,EAAYtQ,EAAQ,MACtB2hC,EAAUrxB,EAAUqxB,QACpBC,EAAYtxB,EAAUsxB,UAEtBwF,EADcpnC,EAAQ,MACaqnC,sBAEnCC,EADctnC,EAAQ,MACUunC,mBAC9B3C,EAAmB5kC,EAAQ,MAC3B4H,EAAY5H,EAAQ,MAOpBwnC,EAAsC,WACxC,SAASA,EAAuB3C,EAASjN,EAAW6P,EAAiBC,GACnE7nC,KAAK8nC,UAAY9C,EACjBhlC,KAAK+nC,iBAAmBH,GAAmB,KAC3C5nC,KAAKgoC,SAAW,CAAC,EACjBhoC,KAAKioC,WAAalQ,EAClB/3B,KAAKkoC,mBAAoB,EACzBloC,KAAKmoC,0BAA4B,IAAI3c,IACrCxrB,KAAKooC,sBAAwBP,CAC/B,CACA,IAAI3jC,EAASyjC,EAAuBj0C,UA4EpC,OA3EAwQ,EAAOmkC,cAAgB,SAAuBtpC,EAAQupC,GACpD,IAAI5lC,EAAQ1C,KACEjB,EAAOwpC,eACbj4C,SAAQ,SAAU+xB,GACxB,IAAI1T,EAAS5P,EAAOsoC,UAAUhlB,GAC9B,GAAI1T,IAAW23B,EAAU,CACvB,IAAIkC,EAAezpC,EAAOzB,IAAI+kB,GAC1BmmB,IACE9lC,EAAMolC,UAAUT,UAAUhlB,KAAYikB,GACxC5jC,EAAM+H,OAAO4X,EAAQqc,EAAkBzG,QAAQuQ,IAEjD9lC,EAAMolC,UAAUV,qBAAqBoB,EAAcnmB,GAEvD,MAAW1T,IAAW24B,GACpB5kC,EAAc,OAAE2f,EAEpB,IACIimB,GAAiBA,EAAct0C,QACjCs0C,EAAch4C,SAAQ,SAAUm4C,GAC9B,IAAIC,EAAUhmC,EAAMqlC,kBAAoBrlC,EAAMqlC,iBAAiBU,EAAa1R,QAC3E2R,GAAwK3gC,GAAU,GACnL2gC,EAAQzO,OAAOv3B,EAAO+lC,EACxB,GAEJ,EACAvkC,EAAOuG,OAAS,SAAgB4X,EAAQsjB,GACtC3lC,KAAK8nC,UAAUr9B,OAAO4X,EAAQsjB,UACvB3lC,KAAKgoC,SAAS3lB,GACrB,IAAIsW,EAAS34B,KAAK1C,IAAI+kB,GAGtB,OADCsW,GAA8I5wB,GAAU,GAClJ4wB,CACT,EACAz0B,EAAe,OAAI,SAAiBme,GAChCA,IAAWyf,GAAyI/5B,GAAU,UACzJ/H,KAAKgoC,SAAS3lB,GACrBriB,KAAK8nC,UAAkB,OAAEzlB,EAC3B,EACAne,EAAO5G,IAAM,SAAa+kB,GACxB,IAAKriB,KAAKgoC,SAASr0C,eAAe0uB,GAAS,CACzC,IAAI1T,EAAS3O,KAAK8nC,UAAUT,UAAUhlB,GAEpCriB,KAAKgoC,SAAS3lB,GADZ1T,IAAW23B,EACW,IAAIvB,EAAiB/kC,KAAMA,KAAK8nC,UAAWzlB,GAE3C1T,IAAW24B,EAAc,UAAOntC,CAE5D,CACA,OAAO6F,KAAKgoC,SAAS3lB,EACvB,EACAne,EAAOykC,QAAU,WACf,IAAIxiB,EAAOnmB,KAAK1C,IAAIwkC,GAKpB,OAJK3b,IACHA,EAAOnmB,KAAKyK,OAAOq3B,EAASC,IAE5B5b,GAAQA,EAAK8R,YAAc8J,GAAyQh6B,GAAU,GACzSoe,CACT,EACAjiB,EAAO0kC,gBAAkB,WACvB5oC,KAAKkoC,mBAAoB,CAC3B,EACAhkC,EAAO2kC,6BAA+B,WACpC,OAAO7oC,KAAKkoC,iBACd,EACAhkC,EAAOkiC,sBAAwB,SAA+B/jB,GAC5DriB,KAAKmoC,0BAA0Bpc,IAAI1J,EACrC,EACAne,EAAO4kC,4BAA8B,WACnC,OAAO9oC,KAAKmoC,yBACd,EACAjkC,EAAOwjC,mBAAqB,SAA4BvhC,EAAO7W,GAC7D,OAAOm4C,EAAoBthC,EAAO7W,EAAW0Q,KAAMA,KAAKooC,sBAC1D,EACAlkC,EAAOsjC,sBAAwB,SAA+BxgC,EAAU+hC,GACtE,OAAOxB,EAAuBvgC,EAAU+hC,EAAmB/oC,KAAMA,KAAKooC,sBACxE,EACOT,CACT,CAvF0C,GAwF1CroC,EAAOC,QAAUooC,qCC3GjB,IAAIhiC,EAAWxF,EAAQ,MACrB4hC,EAAYp8B,EAASo8B,UACrBhB,EAAgBp7B,EAASo7B,cAEzBwG,EADcpnC,EAAQ,MACaqnC,sBAEnCC,EADctnC,EAAQ,MACUunC,mBAC9B3/B,EAAY5H,EAAQ,MAUpB6oC,EAA8C,WAChD,SAASA,EAA+BhE,EAASiE,EAAcC,EAAcrB,GAC3E7nC,KAAK8nC,UAAY9C,EACjBhlC,KAAKmpC,eAAiBF,EACtBjpC,KAAKopC,cAAgBF,EACrBlpC,KAAKooC,sBAAwBP,CAC/B,CACA,IAAI3jC,EAAS8kC,EAA+Bt1C,UAkD5C,OAjDAwQ,EAAOuG,OAAS,SAAgB4X,EAAQsjB,GACtC,OAAO3lC,KAAKmpC,eAAe1+B,OAAO4X,EAAQsjB,EAC5C,EACAzhC,EAAe,OAAI,SAAiBme,GAClCriB,KAAKmpC,eAAuB,OAAE9mB,EAChC,EACAne,EAAO5G,IAAM,SAAa+kB,GACxB,OAAOriB,KAAKmpC,eAAe7rC,IAAI+kB,EACjC,EACAne,EAAOykC,QAAU,WACf,OAAO3oC,KAAKmpC,eAAeR,SAC7B,EACAzkC,EAAOmlC,iBAAmB,WACxB,IAAIljB,EAAOnmB,KAAKmpC,eAAe7rC,IAAI0C,KAAKopC,cAAc/mB,QAItD,OAHK8D,IACHA,EAAOnmB,KAAKmpC,eAAe1+B,OAAOzK,KAAKopC,cAAc/mB,OAAQ0f,IAExD5b,CACT,EACAjiB,EAAOolC,cAAgB,SAAuBp1B,EAAUq1B,EAAWxuB,GACjE,IAAIyuB,EAAQt1B,EAASrG,KAAKo1B,WAAW1H,MAAK,SAAUkO,GAClD,MAA0B,gBAAnBA,EAAUr1B,MAA0Bq1B,EAAU5oC,OAAS0oC,GAAgC,kBAAnBE,EAAUr1B,MAA4Bq1B,EAAUD,MAAM3oC,OAAS0oC,CAC5I,IAMA,OALIC,GAAwB,kBAAfA,EAAMp1B,OACjBo1B,EAAQA,EAAMA,OAEdA,GAAwB,gBAAfA,EAAMp1B,MAA2PrM,GAAU,GACpRyhC,EAAMzuB,SAAWA,GAA0MhT,GAAU,GAChOyhC,CACT,EACAtlC,EAAO8+B,aAAe,SAAsBuG,GAC1C,IAAIC,EAAQxpC,KAAKspC,cAActpC,KAAKopC,cAAeG,GAAW,GAC1D9P,EAAasH,EAAcyI,EAAOxpC,KAAKopC,cAAc95C,WACzD,OAAO0Q,KAAKqpC,mBAAmB7Q,gBAAgBiB,EACjD,EACAv1B,EAAOwlC,mBAAqB,SAA4BH,GACtD,IAAIC,EAAQxpC,KAAKspC,cAActpC,KAAKopC,cAAeG,GAAW,GAC1D9P,EAAasH,EAAcyI,EAAOxpC,KAAKopC,cAAc95C,WACzD,OAAO0Q,KAAKqpC,mBAAmBrQ,iBAAiBS,EAClD,EACAv1B,EAAO0kC,gBAAkB,WACvB5oC,KAAKmpC,eAAeP,iBACtB,EACA1kC,EAAOwjC,mBAAqB,SAA4BvhC,EAAO7W,GAC7D,OAAOm4C,EAAoBthC,EAAO7W,EAAW0Q,KAAMA,KAAKooC,sBAC1D,EACAlkC,EAAOsjC,sBAAwB,SAA+BxgC,EAAU+hC,GACtE,OAAOxB,EAAuBvgC,EAAU+hC,EAAmB/oC,KAAMA,KAAKooC,sBACxE,EACOY,CACT,CA1DkD,GA2DlD1pC,EAAOC,QAAUypC,qCC5EjB,IACEnjC,EADa1F,EAAQ,MACC0F,WACpBsI,EAA2BhO,EAAQ,MAErCyF,EADczF,EAAQ,MACgByF,0BACpCm4B,EAAiC59B,EAAQ,MACzC4H,EAAY5H,EAAQ,MA0BxBb,EAAOC,QArBP,SAAiC6D,EAAalJ,GAC3CiU,EAAyB/K,IAAwK2E,GAAU,GAC5M,IAAIwoB,EAAW1qB,EAAW3L,EAAOq2B,UACjC,GAAsC,aAAlCA,EAAS3f,OAAO+4B,cAClB,MAAM,IAAIlpC,MAAM,+CAElB,IAAI2iC,EAAoBlpC,EAAOkpC,kBAC3BD,EAAUjpC,EAAOipC,QACnByG,EAAqB1vC,EAAO0vC,mBAC5Bt6C,EAAY4K,EAAO5K,UACjBiX,EAAYX,EAA0B2qB,EAAUjhC,GAKpD,OAJI6zC,IAEFC,EAD4BrF,EAA+BmF,QAAQC,EAAS5S,EAAU6S,GAC5CA,mBAErChgC,EAAYymC,cAAc,CAC/BtjC,UAAWA,EACX2M,SAAU02B,EACVn6C,QAAS2zC,GAEb,iCC5BA9jC,EAAOC,QAHP,SAA2B6D,EAAa3T,GACtC2T,EAAY0mC,aAAar6C,EAC3B,qCCFA,IACI4nB,GAAsB/V,EADGnB,EAAAA,MAAAA,SACoBA,EAAQ,MAEvD0F,EADa1F,EAAQ,MACC0F,WAEtBw4B,EADcl+B,EAAQ,MACak+B,uBACjClwB,EAA2BhO,EAAQ,MAErCyF,EADczF,EAAQ,MACgByF,0BACpCm4B,EAAiC59B,EAAQ,MAEzC4H,GADmB5H,EAAQ,MACfA,EAAQ,OACVA,EAAQ,MA4EtBb,EAAOC,QAvEP,SAAwB6D,EAAalJ,GAClCiU,EAAyB/K,IAAwK2E,GAAU,GAC5M,IAAIwoB,EAAW1qB,EAAW3L,EAAOq2B,UACjC,GAAsC,aAAlCA,EAAS3f,OAAO+4B,cAClB,MAAM,IAAIlpC,MAAM,+CAElB,GAAsB,YAAlB8vB,EAASnc,KACX,MAAM,IAAI3T,MAAM,2DAElB,IAAImpC,EAAqB1vC,EAAO0vC,mBAC9BxG,EAAoBlpC,EAAOkpC,kBAC3B3zC,EAAUyK,EAAOzK,QACf0zC,EAAUjpC,EAAOipC,QACnB/1B,EAAclT,EAAOkT,YACrB8jB,EAAUh3B,EAAOg3B,QACjBE,EAAgBl3B,EAAOk3B,cACvB9hC,EAAY4K,EAAO5K,UACnBy6C,EAAc7vC,EAAO6vC,YACnBxjC,EAAYX,EAA0B2qB,EAAUjhC,EAAW8d,EAAaixB,KAW5E,GATkC,oBAAvBuL,IACTA,EAAqBA,KAQnBzG,EAAS,CACX,IAAI6G,EAAwBjM,EAA+BmF,QAAQC,EAAS5S,EAAU6S,EAAmB3zC,GACzG2zC,EAAoB4G,EAAsB5G,kBAC1C3zC,EAAUu6C,EAAsBv6C,OAClC,CACA,IAAIuhC,EAAS,GAiCb,MAAO,CACL1sB,QAjCiBlB,EAAY6mC,gBAAgB,CAC7C1jC,UAAWA,EACXqjC,mBAAoBA,EACpBxG,kBAAmBA,EACnB3zC,QAASA,EACTs6C,YAAaA,IACZ3iC,UAAU,CACXzN,KAAM,SAAc+T,GAClB,IAAI4jB,EACAv1B,MAAMC,QAAQ0R,GAChBA,EAAQpd,SAAQ,SAAU45C,GACpBA,EAAKlZ,QACPA,EAAOjzB,KAAKosC,MAAMnZ,GAAQ,EAAI3Z,EAA6B,SAAG6yB,EAAKlZ,QAEvE,IAEItjB,EAAQsjB,QACVA,EAAOjzB,KAAKosC,MAAMnZ,GAAQ,EAAI3Z,EAA6B,SAAG3J,EAAQsjB,SAGrC,QAApCM,EAAiBp3B,EAAO6T,cAAuC,IAAnBujB,GAAqCA,EAAe19B,KAAKsG,EACxG,EACAqO,SAAU,WACR,IAAIwoB,EAAc72B,EAAO62B,YACrBA,GAEFA,EADe3tB,EAAY2D,OAAOR,EAAUS,UACvBhE,KAAwB,IAAlBguB,EAAOh9B,OAAeg9B,EAAS,KAE9D,EACAxwB,MAAO0wB,EACP1oB,YAAa4oB,IAGS5oB,YAE1B,qCCvFA,IACImiB,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAE/DigC,EADajgC,EAAQ,MACQigC,kBAC3B3vB,EAAYtQ,EAAQ,MACtBiqC,EAAe35B,EAAU25B,aACzBC,EAA0B55B,EAAU45B,wBACpCC,EAAiC75B,EAAU65B,+BAC3CC,EAA+B95B,EAAU85B,6BACzCC,EAA+B/5B,EAAU+5B,6BACzCC,EAAmBh6B,EAAUg6B,iBAC7BC,EAAYj6B,EAAUi6B,UACtBC,EAAQl6B,EAAUk6B,MAClBC,EAAen6B,EAAUm6B,aACzBC,EAAkBp6B,EAAUo6B,gBAC5BC,EAA8Br6B,EAAUq6B,4BACxCC,EAAkBt6B,EAAUs6B,gBAC5BC,EAAev6B,EAAUu6B,aACzBC,EAAgBx6B,EAAUw6B,cAC1BC,EAAsBz6B,EAAUy6B,oBAChCC,EAAiB16B,EAAU06B,eAC3BC,EAAiB36B,EAAU26B,eAC3BC,EAAe56B,EAAU46B,aACzBC,EAAS76B,EAAU66B,OACjBC,EAAmB,CAAC,KAAM,OAAQ,aAAc,MAYpD,SAASC,EAA0BC,EAAuBC,EAA0Bp8C,EAAW2zC,EAAY0I,EAAmB9D,GAC5H,IAAI+D,EAEFxf,EADEC,GAAY,EAAI1B,EAAqC,SAAGsY,GAE5D,IACE,IAAI3G,EAAQ,WACV,IAAImN,EAAYrd,EAAMz9B,MACtB,OAAQ86C,EAAUr1B,MAChB,KAAK42B,EACCvB,EAAU1uB,OACZxsB,OAAO8O,eAAeouC,EAAgE,QAAxCI,EAAmBpC,EAAUqC,aAAwC,IAArBD,EAA8BA,EAAmBpC,EAAU5oC,KAAM,CAC7JvD,IAAKyuC,EAAiCtC,EAAWn6C,EAAWo8C,EAA0BC,EAAmB9D,GACzGluB,IAAKqyB,EAAiCvC,EAAWn6C,EAAWo8C,EAA0BC,KAGxFp9C,OAAO8O,eAAeouC,EAAiE,QAAzCQ,EAAoBxC,EAAUqC,aAAyC,IAAtBG,EAA+BA,EAAoBxC,EAAU5oC,KAAM,CAChKvD,IAAK4uC,EAAmCzC,EAAWn6C,EAAWo8C,EAA0BC,EAAmB9D,GAC3GluB,IAAKwyB,EAAmC1C,EAAWn6C,EAAWo8C,EAA0BC,KAG5F,MACF,KAAKN,EACH,IAAIe,EAA4D,QAAzCR,EAAoBnC,EAAUqC,aAAyC,IAAtBF,EAA+BA,EAAoBnC,EAAU5oC,KACrItS,OAAO8O,eAAeouC,EAAuBW,EAAiB,CAC5D9uC,IAAK,WACH,IAAI+uC,EACAC,EAAelM,EAAyD,QAAtCiM,EAAkB5C,EAAU/oC,YAAsC,IAApB2rC,EAA6BA,EAAkB,GAAI/8C,GAGnIX,EAAQ+8C,EAAyBvoB,SAASsmB,EAAU5oC,KAAMyrC,GAO9D,OAHa,MAAT39C,IACFA,EAoMhB,SAA4C86C,EAAW6C,EAAcZ,EAA0BC,EAAmB9D,GAChH,IACEvK,EADEE,GAAa,EAAI7S,EAAqC,SAAGkd,GAE7D,IACE,IAAKrK,EAAWlqC,MAAOgqC,EAASE,EAAWlR,KAAKrL,MAAO,CACrD,IAAIynB,EAAUpL,EAAO3uC,MACrB,GAAqB,WAAjB+5C,EAAQt0B,KAAmB,CAC7B,IAAIzlB,EAAQ+5C,EAAQ3R,OAAO0S,EAAWiC,EAA0BY,EAAcX,GAC9E,QAAcxxC,IAAVxL,EACF,OAAOA,CAEX,CACF,CACF,CAAE,MAAOuhB,GACPstB,EAAWjqC,EAAE2c,EACf,CAAE,QACAstB,EAAWj9B,GACb,CACF,CAtNwBgsC,CAAmC9C,EAAW6C,EAAcZ,EAA0BC,EAAmB9D,IAE5Gl5C,CACT,EACAgrB,IAAK4xB,EAAiBiB,SAAS/C,EAAU5oC,WAAQ1G,EAEjD,SAAUsyC,GACR,IAAIC,EACAJ,EAAelM,EAA0D,QAAvCsM,EAAmBjD,EAAU/oC,YAAuC,IAArBgsC,EAA8BA,EAAmB,GAAIp9C,GAE1Io8C,EAAyBpG,iBAAiBmH,EAAUhD,EAAU5oC,KAAMyrC,EACtE,IAEF,MACF,KAAKvB,EACCW,EAAyBzT,YAAcwR,EAAU35C,MACnD07C,EAA0BC,EAAuBC,EAA0Bp8C,EAAWm6C,EAAUxG,WAAY0I,EAAmB9D,GAEjI,MACF,KAAK4C,EACHe,EAA0BC,EAAuBC,EAA0Bp8C,EAAWm6C,EAAUxG,WAAY0I,EAAmB9D,GAC/H,MACF,KAAKgD,EAEH,MACF,KAAKH,EACL,KAAKN,EACL,KAAKC,EACL,KAAKS,EACL,KAAKR,EACL,KAAKC,EACL,KAAKC,EACL,KAAKG,EACL,KAAKC,EACL,KAAKK,EACL,KAAKC,EACL,KAAKE,EACL,KAAKE,EACL,KAAKH,EAEH,MAAM,IAAI1qC,MAAM,+GAClB,QAEE,MADAgpC,EAAUr1B,KACJ,IAAI3T,MAAM,+GAEtB,EACA,IAAK4rB,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAI4qB,EACAI,EACJ3P,GACF,CACF,CAAE,MAAOpsB,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CACA,SAASyrC,EAAiCvC,EAAWn6C,EAAWo8C,EAA0BC,GACxF,OAAO,SAAac,GAClB,IAAIE,EACAL,EAAelM,EAA0D,QAAvCuM,EAAmBlD,EAAU/oC,YAAuC,IAArBisC,EAA8BA,EAAmB,GAAIr9C,GAC1I,GAAgB,MAAZm9C,EACF,MAAM,IAAIhsC,MAAM,8EAEhB,IAAImsC,EAAgBH,EAASr7C,KAAI,SAAU84C,GACzC,GAAY,MAARA,EACF,MAAM,IAAIzpC,MAAM,oFAElB,IAAI2hB,EAAO8nB,EAAK9nB,KAChB,GAAY,MAARA,EACF,MAAM,IAAI3hB,MAAM,oGAElB,IAAIosC,EAAiBlB,EAAkBruC,IAAI8kB,GAC3C,GAAsB,MAAlByqB,EACF,MAAM,IAAIpsC,MAAM,kCAAkC5R,OAAOuzB,EAAM,mBAEjE,OAAOyqB,CACT,IACAnB,EAAyBvS,iBAAiByT,EAAenD,EAAU5oC,KAAMyrC,EAE7E,CACF,CACA,SAASH,EAAmC1C,EAAWn6C,EAAWo8C,EAA0BC,GAC1F,OAAO,SAAac,GAClB,IAAIK,EACAR,EAAelM,EAA0D,QAAvC0M,EAAmBrD,EAAU/oC,YAAuC,IAArBosC,EAA8BA,EAAmB,GAAIx9C,GAC1I,GAAgB,MAAZm9C,EACFf,EAAyBtoB,SAASqpB,EAAUhD,EAAU5oC,KAAMyrC,OACvD,CACL,IAAIlqB,EAAOqqB,EAASrqB,KACpB,GAAY,MAARA,EACF,MAAM,IAAI3hB,MAAM,kFAElB,IAAIosC,EAAiBlB,EAAkBruC,IAAI8kB,GAC3C,GAAsB,MAAlByqB,EACF,MAAM,IAAIpsC,MAAM,kCAAkC5R,OAAOuzB,EAAM,mBAEjEspB,EAAyB7S,gBAAgBgU,EAAgBpD,EAAU5oC,KAAMyrC,EAC3E,CACF,CACF,CACA,SAASP,EAAiCtC,EAAWn6C,EAAWo8C,EAA0BC,EAAmB9D,GAC3G,OAAO,WACL,IAAIkF,EACAT,EAAelM,EAA0D,QAAvC2M,EAAmBtD,EAAU/oC,YAAuC,IAArBqsC,EAA8BA,EAAmB,GAAIz9C,GACtI09C,EAAgBtB,EAAyB1S,iBAAiByQ,EAAU5oC,KAAMyrC,GAI9E,YAHsBnyC,IAAlB6yC,IACFA,EAkEN,SAAwDvD,EAAW6C,EAAcZ,EAA0BC,EAAmB9D,GAC5H,IACEpL,EADEE,GAAa,EAAIhS,EAAqC,SAAGkd,GAE7D,IACE,IAAKlL,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAIynB,EAAUjM,EAAO9tC,MACrB,GAAqB,iBAAjB+5C,EAAQt0B,KAAyB,CACnC,IAAI64B,EAASvE,EAAQ3R,OAAO0S,EAAWiC,EAA0BY,EAAcX,GAC/E,GAAc,MAAVsB,EACF,OAAOA,EAAO77C,KAAI,SAAU87C,GAC1B,GAAa,MAATA,EACF,OAAOvB,EAAkBruC,IAAI4vC,EAEjC,GAEJ,CACF,CACF,CAAE,MAAOh9B,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACF,CAxFsB4sC,CAA+C1D,EAAW6C,EAAcZ,EAA0BC,EAAmB9D,IAElH,MAAjBmF,EACKA,EAAc57C,KAAI,SAAUw0C,GACjC,GAAoB,MAAhBA,EAAsB,CACxB,IAAIwH,EAAiB,CAAC,EAQtB,OAPA5B,EAA0B4B,EAAgBxH,EAAct2C,EAAWm6C,EAAUxG,WAAY0I,EAAmB9D,GAOrGuF,CACT,CACE,OAAOxH,CAGX,IAEOoH,CAEX,CACF,CACA,SAASd,EAAmCzC,EAAWn6C,EAAWo8C,EAA0BC,EAAmB9D,GAC7G,OAAO,WACL,IAAIwF,EACAf,EAAelM,EAA0D,QAAvCiN,EAAmB5D,EAAU/oC,YAAuC,IAArB2sC,EAA8BA,EAAmB,GAAI/9C,GACtIs2C,EAAe8F,EAAyBlT,gBAAgBiR,EAAU5oC,KAAMyrC,GAI5E,QAHqBnyC,IAAjByrC,IACFA,EAiBN,SAAkD6D,EAAW6C,EAAcZ,EAA0BC,EAAmB9D,GACtH,IACErb,EADEC,GAAa,EAAI9B,EAAqC,SAAGkd,GAE7D,IACE,IAAKpb,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAIynB,EAAUlc,EAAO79B,MACrB,GAAqB,WAAjB+5C,EAAQt0B,KAAmB,CAC7B,IAAI84B,EAAQxE,EAAQ3R,OAAO0S,EAAWiC,EAA0BY,EAAcX,GAC9E,GAAa,MAATuB,EACF,OAAOvB,EAAkBruC,IAAI4vC,EAEjC,CACF,CACF,CAAE,MAAOh9B,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACF,CAnCqB+sC,CAAyC7D,EAAW6C,EAAcZ,EAA0BC,EAAmB9D,IAE5G,MAAhBjC,EAAsB,CACxB,IAAIwH,EAAiB,CAAC,EAQtB,OAPA5B,EAA0B4B,EAAgBxH,EAAct2C,EAAWm6C,EAAUxG,WAAY0I,EAAmB9D,GAOrGuF,CACT,CACE,OAAOxH,CAEX,CACF,CA8DAtmC,EAAOC,QAAU,CACfguC,qBArQF,SAA8B7B,EAA0Bp8C,EAAW2zC,EAAY0I,EAAmB9D,GAChG,IAAI4D,EAAwB,CAAC,EAQ7B,OAPAD,EAA0BC,EAAuBC,EAA0Bp8C,EAAW2zC,EAAY0I,EAAmB9D,GAO9G4D,CACT,sCCnCA,IACEj4B,EADarT,EAAQ,MACEqT,YAEvBqE,EADc1X,EAAQ,MACe0X,yBAErC8pB,EADcxhC,EAAQ,MACHwhC,OAEnB4L,EADcptC,EAAQ,MACWotC,qBAC/BxlC,EAAY5H,EAAQ,MAexBb,EAAOC,QAAU,CACfioC,sBAbF,SAA+BxgC,EAAU+hC,EAAmByE,EAAO3F,GACjE,IAAI4F,EAAoBj6B,EAAYxM,GAChC8F,EAAoB+K,EAAyB41B,EAAmB1E,GAEhEx2B,EAAKw2B,EAAkBpH,GACvB+L,EAAeF,EAAMlwC,IAAIiV,GAE7B,OADkB,MAAhBm7B,GAA4K3lC,GAAU,GACjL,CAEL4lC,cAAeJ,EAAqBG,EAAc5gC,EAAmB2gC,EAAkBxK,WAAYuK,EAAO3F,GAE9G,sCCtBA,IACE+F,EADaztC,EAAQ,MACQytC,kBAE7BL,EADcptC,EAAQ,MACWotC,qBAQnCjuC,EAAOC,QAAU,CACfmoC,mBARF,SAA4BvhC,EAAO7W,EAAWk+C,EAAO3F,GACnD,IAAIgG,EAAiBD,EAAkBznC,GACvC,MAAO,CAELwnC,cAAeJ,EAAqBC,EAAM7E,UAAWr5C,EAAWu+C,EAAe7mC,SAASi8B,WAAYuK,EAAO3F,GAE/G,uCCTqBvmC,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OADpD,IAEIwF,EAAWxF,EAAQ,MACNwF,EAASykC,aACLzkC,EAASmoC,iBACGnoC,EAAS4kC,6BACrB5kC,EAAS8kC,iBAChB9kC,EAAS+kC,UACb/kC,EAASglC,MACFhlC,EAASilC,aACNjlC,EAASklC,gBACTllC,EAASolC,gBACZplC,EAASqlC,aACRrlC,EAASooC,cACTpoC,EAASslC,cACRtlC,EAASwlC,eACXxlC,EAAS0lC,aACR1lC,EAASqoC,cAChBroC,EAAS2lC,OACG3lC,EAASsoC,mBAClB9tC,EAAQ,MAED5R,OAAOmF,UAAUC,eAyKtC2L,EAAOC,QAxKgB,WAA6B,qCCvBpD,IAAI0+B,EAAkB99B,EAAQ,MAmB9Bb,EAAOC,QAAU,CACf2uC,aAfF,SAAsBC,GACpB,OAAO,SAAe3nC,EAASlX,EAAW8d,EAAa28B,EAAaqE,GAClE,IAAIp3C,EAASm3C,EAAG3nC,EAASlX,EAAW8d,EAAa28B,EAAaqE,GAI9D,OAAIp3C,aAAkByJ,MACbw9B,EAAgBxzB,QAAO,SAAUC,GACtC,OAAOA,EAAKlK,MAAMxJ,EACpB,IAEKinC,EAAgB5H,KAAKr/B,EAC9B,CACF,sCClBA,IAAIyoC,EAAwBt/B,EAAQ,MAElC+tC,EADa/tC,EAAQ,MACG+tC,aACtBnmC,EAAY5H,EAAQ,MA6BxBb,EAAOC,QAAU,CACfkL,OAxBF,SAAgBkf,EAASviB,GAEvB,IAAIinC,EAAeH,EAAavkB,GAiBhC,MAAO,CACLpc,QAjBF,SAAiB/G,EAASlX,EAAW8d,EAAa28B,EAAaqE,GAC7D,IAAIE,EAAqB7O,EAAsBnwC,EAAWkX,EAAQ+nC,mBAClE,GAA8B,iBAA1B/nC,EAAQmjC,cAGV,OAFCviC,GAAsMW,GAAU,GAC/MgiC,GAAwIhiC,GAAU,GAC7IX,EAAUZ,EAAS8nC,EAAoBlhC,GAEhD,IAAIohC,EAAephC,EAAYqhC,KAC/B,OAAoB,MAAhBD,GACAzE,GAAoIhiC,GAAU,GACzIsmC,EAAa7nC,EAAS8nC,EAAoB,CAC/CjkC,OAAO,IACNokC,KAAKD,IAEHH,EAAa7nC,EAAS8nC,EAAoBlhC,EAAa28B,EAAaqE,EAC7E,EAIF,sCC/BA,IAAIr2B,EAAY5X,EAAQ,MAOpBuuC,EAkgBJ,SAAsB3/B,EAAQ4/B,GAC5B,EAtfE1Q,EAA+B,WAOjC,SAASA,EAAgBl/B,GAOvBiB,KAAKmlC,QAAUpmC,CACjB,CAdAk/B,EAAgBxzB,OAAS,SAAgB1L,GACvC,OAAO,IAAIk/B,EAAgBl/B,EAC7B,EAuCAk/B,EAAgB2Q,iBAAmB,SAA0B1wB,GAC3DwwB,EAAkBxwB,CACpB,EAMA+f,EAAgB5H,KAAO,SAAcwY,GACnC,OAiTJ,SAAsBA,GACpB,MAAsB,kBAARA,GAA4B,OAARA,GAAyC,oBAAlBA,EAAIznC,SAC/D,CAnTW0nC,CAAaD,GAAOE,EAAeF,GAAO92B,EAAU82B,GAAOG,EAAYH,GAAOI,EAAUJ,EACjG,EASA,IAAI3qC,EAAS+5B,EAAgBvqC,UAqS7B,OApSAwQ,EAAc,MAAI,SAAgBiqC,GAChC,IAAIzrC,EAAQ1C,KACZ,OAAOi+B,EAAgBxzB,QAAO,SAAUC,GACtC,IAAIjC,EAuBJ,OAtBA/F,EAAM0E,UAAU,CACd+L,MAAO,SAAe+7B,GACpBzmC,EAAeymC,CACjB,EACAv1C,KAAM+Q,EAAK/Q,KACX4O,SAAUmC,EAAKnC,SACf/H,MAAO,SAAe2uC,GACpB,IACEhB,EAAGgB,GAAS/nC,UAAU,CACpB+L,MAAO,SAAe+7B,GACpBzmC,EAAeymC,CACjB,EACAv1C,KAAM+Q,EAAK/Q,KACX4O,SAAUmC,EAAKnC,SACf/H,MAAOkK,EAAKlK,OAEhB,CAAE,MAAO4uC,GACP1kC,EAAKlK,MAAM4uC,GAAQ,EACrB,CACF,IAGK,WACL,OAAO3mC,EAAaD,aACtB,CACF,GACF,EAOAtE,EAAOrV,OAAS,SAAgB8K,GAC9B,IAAI8R,EAASzL,KACb,OAAOi+B,EAAgBxzB,QAAO,SAAUC,GACtC,IAAIpY,EAWJ,OAVAmZ,EAAOrE,UAAU,CACf+L,MAAO,SAAe1K,GACpBnW,EAAUmW,CACZ,EACA9O,KAAM+Q,EAAK/Q,KACX6G,MAAOkK,EAAKlK,MACZ+H,SAAU,WACRjW,EAAUqH,EAAKyN,UAAUsD,EAC3B,IAEK,WACLpY,GAAWA,EAAQkW,aACrB,CACF,GACF,EAaAtE,EAAW,GAAI,SAAasG,GAC1B,IAAIuC,EAAS/M,KACb,OAAOi+B,EAAgBxzB,QAAO,SAAUC,GACtC,IAAI2kC,EAAO,SAAc7a,GACvB,OAAO,WACL,IACEhqB,EAASgqB,IAAWhqB,EAASgqB,GAAQ2V,MAAM3/B,EAAUimB,UACvD,CAAE,MAAOjwB,GACPkuC,EAAgBluC,GAAO,EACzB,CAEAkK,EAAK8pB,IAAW9pB,EAAK8pB,GAAQ2V,MAAMz/B,EAAM+lB,UAC3C,CACF,EACA,OAAO1jB,EAAO3F,UAAU,CACtB+L,MAAOk8B,EAAK,SACZ11C,KAAM01C,EAAK,QACX7uC,MAAO6uC,EAAK,SACZ9mC,SAAU8mC,EAAK,YACf7mC,YAAa6mC,EAAK,gBAEtB,GACF,EASAnrC,EAAgB,QAAI,SAAkBiqC,GACpC,IAAIvwB,EAAS5d,KACb,OAAOi+B,EAAgBxzB,QAAO,SAAUC,GACtC,IAAIjC,EAAemV,EAAOxW,UAAUsD,GACpC,OAAO,WACLjC,EAAaD,cACb2lC,GACF,CACF,GACF,EAYAjqC,EAAOgvB,QAAU,SAAiBoc,GAChC,IAAInxB,EAASne,KACb,OAAOi+B,EAAgBxzB,QAAO,SAAUC,GACtC,IAAI6kC,GAAW,EACXj9C,EAAU6rB,EAAO/W,UAAU,CAC7BzN,KAAM,SAAchL,GAClB4gD,GAAW,EACX7kC,EAAK/Q,KAAKhL,EACZ,EACA6R,MAAOkK,EAAKlK,MACZ+H,SAAU,WACJgnC,EACF7kC,EAAKnC,WAELjW,EAAUg9C,EAAUloC,UAAUsD,EAElC,IAEF,OAAO,WACLpY,EAAQkW,aACV,CACF,GACF,EASAtE,EAAOkD,UAAY,SAAmBoD,GAOpC,OA+JJ,SAAoBzL,EAAQyL,GAC1B,IACI8C,EADAkiC,GAAS,EAOTC,EAAa,SAAoBZ,GACnC,OAAOtgD,OAAO8O,eAAewxC,EAAK,SAAU,CAC1CvxC,IAAK,WACH,OAAOkyC,CACT,GAEJ,EACA,SAASE,IACP,GAAIpiC,EAAS,CACX,GAAIA,EAAQ9E,YACV8E,EAAQ9E,mBAER,IACE8E,GACF,CAAE,MAAO9M,GACPkuC,EAAgBluC,GAAO,EACzB,CAGF8M,OAAUnT,CACZ,CACF,CAGA,IAAIsO,EAAegnC,EAAW,CAC5BjnC,YAAa,WACX,IAAKgnC,EAAQ,CACXA,GAAS,EAGT,IACEhlC,EAAShC,aAAegC,EAAShC,YAAYC,EAC/C,CAAE,MAAOjI,GACPkuC,EAAgBluC,GAAO,EACzB,CAAE,QACAkvC,GACF,CACF,CACF,IAIF,IACEllC,EAAS2I,OAAS3I,EAAS2I,MAAM1K,EACnC,CAAE,MAAOjI,GACPkuC,EAAgBluC,GAAO,EACzB,CAGA,GAAIgvC,EACF,OAAO/mC,EAIT,IAAIiC,EAAO+kC,EAAW,CACpB91C,KAAM,SAAchL,GAClB,IAAK6gD,GAAUhlC,EAAS7Q,KACtB,IACE6Q,EAAS7Q,KAAKhL,EAChB,CAAE,MAAO6R,GACPkuC,EAAgBluC,GAAO,EACzB,CAEJ,EACAA,MAAO,SAAemvC,EAASC,GAC7B,GAAIJ,IAAWhlC,EAAShK,MACtBgvC,GAAS,EACTd,EAAgBiB,EAASC,IAAyB,GAClDF,QACK,CACLF,GAAS,EACT,IACEhlC,EAAShK,MAAMmvC,EACjB,CAAE,MAAOP,GACPV,EAAgBU,GAAQ,EAC1B,CAAE,QACAM,GACF,CACF,CACF,EACAnnC,SAAU,WACR,IAAKinC,EAAQ,CACXA,GAAS,EACT,IACEhlC,EAASjC,UAAYiC,EAASjC,UAChC,CAAE,MAAO/H,GACPkuC,EAAgBluC,GAAO,EACzB,CAAE,QACAkvC,GACF,CACF,CACF,IAIF,IACEpiC,EAAUvO,EAAO2L,EACnB,CAAE,MAAOlK,GACPkK,EAAKlK,MAAMA,GAAO,EACpB,CAEI80B,EAQAka,GACFE,IAEF,OAAOjnC,CACT,CAxRWonC,CAAW7vC,KAAKmlC,QAAS36B,EAClC,EAMAtG,EAAO9S,IAAM,SAAa+8C,GACxB,IAAIjvB,EAASlf,KACb,OAAOi+B,EAAgBxzB,QAAO,SAAUC,GACtC,IAAIjC,EAAeyW,EAAO9X,UAAU,CAClCmB,SAAUmC,EAAKnC,SACf/H,MAAOkK,EAAKlK,MACZ7G,KAAM,SAAchL,GAClB,IACE,IAAImhD,EAAW3B,EAAGx/C,GAClB+b,EAAK/Q,KAAKm2C,EACZ,CAAE,MAAOtvC,GACPkK,EAAKlK,MAAMA,GAAO,EACpB,CACF,IAGF,OAAO,WACLiI,EAAaD,aACf,CACF,GACF,EAOAtE,EAAOuJ,SAAW,SAAkB0gC,GAClC,IAAIxuB,EAAS3f,KACb,OAAOi+B,EAAgBxzB,QAAO,SAAUC,GACtC,IAAIqlC,EAAgB,GACpB,SAAS58B,EAAM1K,GACbzI,KAAKgwC,KAAOvnC,EACZsnC,EAAchyC,KAAK0K,EACrB,CACA,SAASF,IACPwnC,EAAcE,OAAOF,EAAcl8C,QAAQmM,KAAKgwC,MAAO,GAC1B,IAAzBD,EAAc/7C,QAChB0W,EAAKnC,UAET,CAqBA,OApBAoX,EAAOvY,UAAU,CACf+L,MAAOA,EACPxZ,KAAM,SAAchL,GAClB,IACO+b,EAAK8kC,QACRvR,EAAgB5H,KAAK8X,EAAGx/C,IAAQyY,UAAU,CACxC+L,MAAOA,EACPxZ,KAAM+Q,EAAK/Q,KACX6G,MAAOkK,EAAKlK,MACZ+H,SAAUA,GAGhB,CAAE,MAAO/H,GACPkK,EAAKlK,MAAMA,GAAO,EACpB,CACF,EAEAA,MAAOkK,EAAKlK,MACZ+H,SAAUA,IAEL,WACLwnC,EAAcz/C,SAAQ,SAAU4+C,GAC9B,OAAOA,EAAI1mC,aACb,IACAunC,EAAc/7C,OAAS,CACzB,CACF,GACF,EASAkQ,EAAOuqC,KAAO,SAAcD,GAC1B,IAAI5uB,EAAS5f,KAMb,OAAOi+B,EAAgBxzB,QAAO,SAAUC,GACtC,IAAIjC,EACAynC,EAWJ,OAVW,SAASzB,IAClBhmC,EAAemX,EAAOxY,UAAU,CAC9BzN,KAAM+Q,EAAK/Q,KACX6G,MAAOkK,EAAKlK,MACZ+H,SAAU,WACR2nC,EAAUvqB,WAAW8oB,EAAMD,EAC7B,GAEJ,CACAC,GACO,WACLhpB,aAAayqB,GACbznC,EAAaD,aACf,CACF,GACF,EASAtE,EAAOisC,UAAY,WACjB,IAAIC,EAASpwC,KACb,OAAO,IAAIud,SAAQ,SAAUta,EAASotC,GACpC,IAAIC,GAAW,EACfF,EAAOhpC,UAAU,CACfzN,KAAM,SAAc0pB,GACbitB,IACHA,GAAW,EACXrtC,EAAQogB,GAEZ,EACA7iB,MAAO6vC,EACP9nC,SAAUtF,GAEd,GACF,EACOg7B,CACT,CAnWmC,GAuWnC,SAAS8Q,EAAeF,GACtB,OAAOA,aAAe5Q,EAAkB4Q,EAAM5Q,EAAgBxzB,QAAO,SAAUC,GAC7E,OAAOmkC,EAAIznC,UAAUsD,EACvB,GACF,CACA,SAASskC,EAAY9zB,GACnB,OAAO+iB,EAAgBxzB,QAAO,SAAUC,GAEtCwQ,EAAQ6E,MAAK,SAAUpxB,GACrB+b,EAAK/Q,KAAKhL,GACV+b,EAAKnC,UACP,GAAGmC,EAAKlK,MACV,GACF,CACA,SAASyuC,EAAUtgD,GACjB,OAAOsvC,EAAgBxzB,QAAO,SAAUC,GACtCA,EAAK/Q,KAAKhL,GACV+b,EAAKnC,UACP,GACF,CAkJAjJ,EAAOC,QAAU0+B,qCChiBjB,IACI18B,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChDq/B,EAAar/B,EAAQ,MACrB4H,EAAY5H,EAAQ,MAMpB+9B,EAAuC,WACzC,SAASA,EAAwBjhC,GAC/B,IAAIvB,EAAOuB,EAAKvB,KACd60C,EAAMtzC,EAAKszC,IACX70C,EAAO,GAAwJqM,GAAU,GACzKwoC,EAAM,GAA2IxoC,GAAU,GAC7J/H,KAAKwwC,WAAa,IAAI33B,IACtB7Y,KAAKywC,MAAQ/0C,EACbsE,KAAK0wC,KAAOH,CACd,CACA,IAAIrsC,EAASg6B,EAAwBxqC,UA+CrC,OA9CAwQ,EAAOid,MAAQ,WACbnhB,KAAKwwC,WAAWrvB,OAClB,EACAjd,EAAO5G,IAAM,SAAaqzC,EAASrhD,GACjC,IAAIoT,EAAQ1C,KACR0Y,EAAWk4B,EAAYD,EAASrhD,GACpC0Q,KAAKwwC,WAAWlgD,SAAQ,SAAU4iB,EAAU7hB,GAqDhD,IAAmBw/C,EAAWN,EAAXM,EApDE39B,EAAS29B,UAoDAN,EApDW7tC,EAAMguC,KAqDtCG,EAAYN,GAAOzhD,KAAKC,OApDzB2T,EAAM8tC,WAAmB,OAAEn/C,EAE/B,IACA,IAAI6hB,EAAWlT,KAAKwwC,WAAWlzC,IAAIob,GACnC,OAAgB,MAAZxF,EACK,KAELnX,MAAMC,QAAQkX,EAASxF,SAClBwF,EAASxF,QAAQtc,KAAI,SAAUsc,GACpC,OAAO,EAAInM,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGmM,GAAU,CAAC,EAAG,CACrFojC,YAAY,EAAIvvC,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGmM,EAAQojC,YAAa,CAAC,EAAG,CACrGC,eAAgB79B,EAAS29B,aAG/B,KAEK,EAAItvC,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAG2R,EAASxF,SAAU,CAAC,EAAG,CAC9FojC,YAAY,EAAIvvC,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAG2R,EAASxF,QAAQojC,YAAa,CAAC,EAAG,CAC9GC,eAAgB79B,EAAS29B,aAG/B,EACA3sC,EAAOyV,IAAM,SAAag3B,EAASrhD,EAAWoe,GAC5C,IAAImjC,EAAY/hD,KAAKC,MACjB2pB,EAAWk4B,EAAYD,EAASrhD,GAOpC,GANA0Q,KAAKwwC,WAAmB,OAAE93B,GAC1B1Y,KAAKwwC,WAAW72B,IAAIjB,EAAU,CAC5Bm4B,UAAWA,EACXnjC,QAASA,IAGP1N,KAAKwwC,WAAW90C,KAAOsE,KAAKywC,MAAO,CACrC,IAAIzvB,EAAWhhB,KAAKwwC,WAAWr/C,OAAOwI,OACjCqnB,EAASC,MACZjhB,KAAKwwC,WAAmB,OAAExvB,EAASryB,MAEvC,CACF,EACOuvC,CACT,CA1D2C,GA2D3C,SAAS0S,EAAYD,EAASrhD,GAC5B,OAAO+iB,KAAKC,UAAUktB,EAAW,CAC/BmR,QAASA,EACTrhD,UAAWA,IAEf,CASAgQ,EAAOC,QAAU2+B,qCClFjB,IAAI8S,EAAa7wC,EAAQ,MA8DzBb,EAAOC,QApDP,SAAoC0xC,EAAKC,GACvC,MAAO,CACL3jC,QAAS,SAAiBqD,EAAQthB,EAAW8d,EAAa28B,GACxD,IAAIoH,EAAmBH,IACnBI,EAAc,CAChBj+B,MAAO,SAAe1K,GACpBwoC,EAAI75B,MAAM,CACRvW,KAAM,gBACNswC,iBAAkBA,EAClBvgC,OAAQA,EACRthB,UAAWA,EACX8d,YAAaA,GAEjB,EACAzT,KAAM,SAAcuZ,GAClB+9B,EAAI75B,MAAM,CACRvW,KAAM,eACNswC,iBAAkBA,EAClBj+B,SAAUA,GAEd,EACA1S,MAAO,SAAeuO,GACpBkiC,EAAI75B,MAAM,CACRvW,KAAM,gBACNswC,iBAAkBA,EAClB3wC,MAAOuO,GAEX,EACAxG,SAAU,WACR0oC,EAAI75B,MAAM,CACRvW,KAAM,mBACNswC,iBAAkBA,GAEtB,EACA3oC,YAAa,WACXyoC,EAAI75B,MAAM,CACRvW,KAAM,sBACNswC,iBAAkBA,GAEtB,GASF,OAAOD,EAAQ3jC,QAAQqD,EAAQthB,EAAW8d,EAAa28B,GAPlC,SAAwB9F,GAC3CgN,EAAI75B,MAAM,CACRvW,KAAM,eACNswC,iBAAkBA,EAClBlN,KAAMA,GAEV,IACwF,GAAEmN,EAC5F,EAEJ,qCC7DA,IAAIjS,EAAoBh/B,EAAQ,MAC5B4H,EAAY5H,EAAQ,MACVA,EAAQ,MAWtB,SAASmgC,EAAQztB,GACf,IAAIhF,EAAOgF,EAQX,MAPoB,oBAAThF,EACTA,EAAOA,IAEEA,EAAc,UAEvBA,EAAOA,EAAc,SAEhBA,CACT,CACA,SAASqzB,EAAWrzB,GAClB,IAAI7G,EAAWs5B,EAAQzyB,GACvB,MAA2B,kBAAb7G,GAAsC,OAAbA,GAAqBA,EAASoN,OAAS+qB,EAAkBkS,QAClG,CACA,SAASjQ,EAAUvzB,GACjB,IAAIrH,EAAU85B,EAAQzyB,GACtB,MAA0B,kBAAZrH,GAAoC,OAAZA,GAAoBA,EAAQ4N,OAAS+qB,EAAkBmS,OAC/F,CACA,SAASC,EAAiB1jC,GACxB,IAAIggC,EAAiBvN,EAAQzyB,GAC7B,MAAiC,kBAAnBggC,GAAkD,OAAnBA,GAA2BA,EAAez5B,OAAS+qB,EAAkBqS,eACpH,CACA,SAASrQ,EAAqBtzB,GAC5B,IAAI7G,EAAWs5B,EAAQzyB,GACvB,MAA2B,kBAAb7G,GAAsC,OAAbA,GAAqBA,EAASoN,OAAS+qB,EAAkBsS,oBAClG,CACA,SAASj+B,EAAYX,GACnB,IAAI7L,EAAWs5B,EAAQztB,GAEvB,OADCquB,EAAWl6B,IAA+Ie,GAAU,GAC9Jf,CACT,CAmCA1H,EAAOC,QAAU,CACfiU,YAAaA,EACb8sB,QAASA,EACTI,sBArCF,SAA+B7tB,GAC7B,IAAI6+B,EACA1qC,EAAWwM,EAAYX,GACvBD,EAAuD,QAA5C8+B,EAAqB1qC,EAAS2B,gBAA6C,IAAvB+oC,OAAgC,EAASA,EAAmB9+B,QAC3H5J,EAAyB,OAAZ4J,QAAgC,IAAZA,OAAqB,EAASA,EAAQ5J,WAC3E,OAAgB,OAAZ4J,GAAuC,kBAAZA,GAAuC,OAAf5J,GAA6C,kBAAfA,EAC5E,KAEFhC,CACT,EA6BE45B,uBA5BF,SAAgC/tB,GAC9B,IAAI8+B,EACA3qC,EAAWwM,EAAYX,GACvBD,EAAwD,QAA7C++B,EAAsB3qC,EAAS2B,gBAA8C,IAAxBgpC,OAAiC,EAASA,EAAoB/+B,QAClI,OAAgB,OAAZA,GAAuC,kBAAZA,EACtB,KAEF5L,CACT,EAqBEnB,WApBF,SAAoBgN,GAClB,IAAIrM,EAAU85B,EAAQztB,GAEtB,OADCuuB,EAAU56B,IAA4IuB,GAAU,GAC1JvB,CACT,EAiBEonC,kBAhBF,SAA2B/6B,GACzB,IAAIg7B,EAAiBvN,EAAQztB,GAE7B,OADC0+B,EAAiB1D,IAA0J9lC,GAAU,GAC/K8lC,CACT,EAaEtN,sBAZF,SAA+B1tB,GAC7B,IAAI7L,EAAWs5B,EAAQztB,GAEvB,OADCsuB,EAAqBn6B,IAA4Je,GAAU,GACrLf,CACT,EASEyP,QA7EF,SAAiBm7B,GAC8U7pC,GAAU,EACzW,EA4EEm5B,WAAYA,EACZE,UAAWA,EACXmQ,iBAAkBA,EAClBpQ,qBAAsBA,kCC3FxB,IA2CI0Q,EAA2B,IA3Ca,WAC1C,SAASjqB,IACP5nB,KAAK8xC,oBAAsB,IAAIj5B,IAC/B7Y,KAAK+xC,WAAa,IAAIl5B,GACxB,CACA,IAAI3U,EAAS0jB,EAAyBl0B,UAoCtC,OAnCAwQ,EAAOyV,IAAM,SAAatoB,EAAK1C,GAC7BqR,KAAK8xC,oBAAoBn4B,IAAItoB,EAAK1C,GAClC,IAAIqjD,EAAYhyC,KAAK+xC,WAAWz0C,IAAIjM,GACnB,MAAb2gD,GACFA,EAAU1hD,SAAQ,SAAU+wB,GAC1B,IACEA,EAAG1yB,EACL,CAAE,MAAO4E,GAGPoyB,YAAW,WACT,MAAMpyB,CACR,GAAG,EACL,CACF,GAEJ,EACA2Q,EAAO5G,IAAM,SAAajM,GACxB,OAAO2O,KAAK8xC,oBAAoBx0C,IAAIjM,EACtC,EACA6S,EAAO+lB,OAAS,SAAgB54B,EAAK6sB,GACnC,IAAI+zB,EACAD,EAAkE,QAArDC,EAAuBjyC,KAAK+xC,WAAWz0C,IAAIjM,UAA2C,IAAzB4gD,EAAkCA,EAAuB,IAAIzmB,IAC3IwmB,EAAUjmB,IAAI7N,GAKd,OADAle,KAAK+xC,WAAWp4B,IAAItoB,EAAK2gD,GAClB,CACL1tC,QALY,WACZ0tC,EAAkB,OAAE9zB,EACtB,EAKF,EACAha,EAAOid,MAAQ,WACbnhB,KAAK8xC,oBAAoB3wB,OAC3B,EACOyG,CACT,CA1C4C,IA4C5CtoB,EAAOC,QAAUsyC,qCC5CjB,IACItwC,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChD89B,EAAkB99B,EAAQ,MAE5ByF,EADazF,EAAQ,MACgByF,0BACnCkS,EAAgC3X,EAAQ,MACxCg+B,EAAqBh+B,EAAQ,MAE/B0F,EADc1F,EAAQ,MACC0F,WACrBkC,EAAY5H,EAAQ,MA+GxB,SAAS+xC,EAAqB9uC,EAAamD,GACzC,OAAO43B,EAAmBjwB,WAAW9K,EAAamD,GAAWnV,KAAI,WAC/D,OAAOgS,EAAY2D,OAAOR,EAAUS,SACtC,GACF,CACA1H,EAAOC,QArCP,SAAoB6D,EAAa+C,EAAO7W,EAAWib,GACjD,IAAI6d,EACA+pB,EAAYtsC,EAAWM,GACU,UAAnCgsC,EAAUvhC,OAAO+4B,eAAgI5hC,GAAU,GAC7J,IAAIgf,GAAqB,EAAIxlB,EAAwB,SAAG,CACtD8I,OAAO,GACM,OAAZE,QAAgC,IAAZA,OAAqB,EAASA,EAAQwc,oBACzDxgB,EAAYX,EAA0BusC,EAAW7iD,EAAWy3B,GAC5DrY,EAAiH,QAAlG0Z,EAAmC,OAAZ7d,QAAgC,IAAZA,OAAqB,EAASA,EAAQmE,mBAAkD,IAAzB0Z,EAAkCA,EAAuB,eACtL,SAASgqB,EAASxrC,GAIhB,OAHAkR,EAA8B1U,EAAawD,EAASiX,sBAAuBjX,EAASkX,qBAG7ElX,EAAS5D,IAClB,CACA,OAAQ0L,GACN,IAAK,eAED,OAAOwjC,EAAqB9uC,EAAamD,GAAWnV,IAAIghD,GAE5D,IAAK,mBAED,MAA4C,cAAxChvC,EAAYyD,MAAMN,GAAWoI,OACxBsvB,EAAgB5H,KAAKjzB,EAAY2D,OAAOR,EAAUS,WAAW5V,IAAIghD,GAEnEF,EAAqB9uC,EAAamD,GAAWnV,IAAIghD,GAE5D,QAEE,MAAM,IAAI3xC,MAAM,mCAAqCiO,GAE3D,qCCvHA,IAAIzG,EAAa9H,EAAQ,MACrB+H,EAAoB/H,EAAQ,MAC5Bo/B,EAAqBp/B,EAAQ,MAC7B4H,EAAY5H,EAAQ,MAEpBkyC,EADuC,oBAAZn6B,QACsB,IAAIA,QAAY,IAAIW,IA+EzE,SAAS8O,EAAkBvkB,EAAa6e,EAAY0H,GAClD,OAAO1hB,EAAWwC,QAAO,SAAUC,GACjC,IAAIgG,EAAe4hC,EAAgBlvC,GAC/BmvC,EAAgB7hC,EAAapT,IAAI2kB,GAsCrC,OArCKswB,GACH5oB,IAAmB,SAAE,WACnB,OAAOjZ,EAAqB,OAAEuR,EAChC,IAAG7a,UAAU,CACX+L,MAAO,SAAe1K,GACpB8pC,EAAgB,CACdtwB,WAAYA,EACZqH,QAAS,IAAIiW,EACbiT,yBAA0B,IAAIjT,EAC9B92B,aAAcA,EACdyS,QAAS,MAEXxK,EAAaiJ,IAAIsI,EAAYswB,EAC/B,EACA54C,KAAM,SAAcuZ,GAClB,IAAIu/B,EAAYC,EAAiBhiC,EAAcuR,GAC/CwwB,EAAUnpB,QAAQ3vB,KAAKuZ,GACvBu/B,EAAUD,yBAAyB74C,KAAKuZ,EAC1C,EACA1S,MAAO,SAAeuO,GACpB,IAAI0jC,EAAYC,EAAiBhiC,EAAcuR,GAC/CwwB,EAAUnpB,QAAQ9oB,MAAMuO,GACxB0jC,EAAUD,yBAAyBhyC,MAAMuO,EAC3C,EACAxG,SAAU,WACR,IAAIkqC,EAAYC,EAAiBhiC,EAAcuR,GAC/CwwB,EAAUnpB,QAAQ/gB,WAClBkqC,EAAUD,yBAAyBjqC,UACrC,EACAC,YAAa,SAAqBC,GAChC,IAAIgqC,EAAYC,EAAiBhiC,EAAcuR,GAC/CwwB,EAAUnpB,QAAQ9gB,cAClBiqC,EAAUD,yBAAyBhqC,aACrC,IAGe,MAAjB+pC,GAAgLxqC,GAAU,GAQhM,SAAuC2I,EAAc6hC,GACnD,OAAOtqC,EAAWwC,QAAO,SAAUC,GACjC,IAAIjC,EAAe8pC,EAAcjpB,QAAQliB,UAAUsD,GACnD,OAAO,WACLjC,EAAaD,cACb,IAAImqC,EAAwBjiC,EAAapT,IAAIi1C,EAActwB,YAC3D,GAAI0wB,EAAuB,CACzB,IAAIh8B,EAAsBg8B,EAAsBlqC,aACrB,MAAvBkO,GAAoF,IAArDg8B,EAAsBrpB,QAAQspB,qBAC/Dj8B,EAAoBnO,cACpBkI,EAAqB,OAAE6hC,EAActwB,YAEzC,CACF,CACF,GACF,CAtBW4wB,CAA8BniC,EAAc6hC,GAAenrC,UAAUsD,EAC9E,GACF,CAyBA,SAASooC,EAA0C1vC,EAAasN,EAAc6hC,GAC5E,OAAOtqC,EAAWwC,QAAO,SAAUC,GACjC,IAAIjC,EAAe8pC,EAAcC,yBAAyBprC,UAAU,CAClE5G,MAAOkK,EAAKlK,MACZ7G,KAAM,SAAcuZ,GACb9P,EAAY2vC,gBAAgBR,EAActwB,YAI/CvX,EAAK/Q,OAHH+Q,EAAKnC,UAIT,EACAA,SAAUmC,EAAKnC,SACfC,YAAakC,EAAKnC,WAEpB,OAAO,WACLE,EAAaD,aACf,CACF,GACF,CA8EA,SAAS8pC,EAAgBlvC,GACvB,IAAImY,EAAS82B,EAA2B/0C,IAAI8F,GAC5C,GAAc,MAAVmY,EACF,OAAOA,EAET,IAAI7K,EAAe,IAAImI,IAEvB,OADAw5B,EAA2B14B,IAAIvW,EAAasN,GACrCA,CACT,CAKA,SAASgiC,EAAiBhiC,EAAcuR,GACtC,IAAI1G,EAAS7K,EAAapT,IAAI2kB,GAE9B,OADY,MAAV1G,GAAqJxT,GAAU,GAC1JwT,CACT,CACAjc,EAAOC,QAAU,CACf2O,WAtMF,SAAoB9K,EAAamD,GAC/B,OAAOohB,EAAkBvkB,EAAamD,EAAUC,QAAQyb,YAAY,WAClE,OAAO7e,EAAYmK,QAAQ,CACzBhH,UAAWA,GAEf,GACF,EAiMEohB,kBAAmBA,EACnBjQ,2BA1FF,SAAoCtU,EAAaoD,GAC/C,IAAIkK,EAAe4hC,EAAgBlvC,GAC/BmvC,EAAgB7hC,EAAapT,IAAIkJ,EAAQyb,YAC7C,IAAKswB,EACH,OAAO,KAET,IAAKnvC,EAAY2vC,gBAAgBR,EAActwB,YAC7C,OAAO,KAET,GAAI/Z,EAAkB8qC,gBAAiB,CACrC,IAAI55B,EAAWm5B,EAAcr3B,QAC7B,GAAI9B,EACF,OAAOA,CAEX,CACA,IAAI8B,EAAU,IAAIqC,SAAQ,SAAUta,EAASotC,GAC3C,IAAI4C,GAAgB,EACpBH,EAA0C1vC,EAAasN,EAAc6hC,GAAenrC,UAAU,CAC5FmB,SAAUtF,EACVzC,MAAO6vC,EACP12C,KAAM,SAAcuZ,GAMd+/B,GACFhwC,EAAQiQ,EAEZ,IAEF+/B,GAAgB,CAClB,IACA,GAAI/qC,EAAkB8qC,gBAAiB,CAKrCT,EAAcr3B,QAAUA,EACxB,IAAI5N,EAAU,WACZilC,EAAcr3B,QAAU,IAC1B,EACAA,EAAQ6E,KAAKzS,EAASA,EACxB,CACA,OAAO4N,CACT,EA8CEyS,8BArCF,SAAuCvqB,EAAaoD,GAClD,IAAIkK,EAAe4hC,EAAgBlvC,GAC/BmvC,EAAgB7hC,EAAapT,IAAIkJ,EAAQyb,YAC7C,OAAKswB,GAGAnvC,EAAY2vC,gBAAgBR,EAActwB,YAGxC6wB,EAA0C1vC,EAAasN,EAAc6hC,GALnE,IAMX,sCCnPA,IACE3sC,EADazF,EAAQ,MACgByF,0BAErCC,EADc1F,EAAQ,MACC0F,WAoBzBvG,EAAOC,QAZP,SAA+B6D,EAAayP,EAAYvjB,EAAW8d,GACjE,IAAIjH,EAAQN,EAAWgN,GACvB,GAAmC,UAA/B1M,EAAMyK,OAAO+4B,cACf,MAAM,IAAIlpC,MAAM,wCAElB,IAAI8F,EAAYX,EAA0BO,EAAO7W,EAAW8d,GAC5D,OAAOhK,EAAYmK,QAAQ,CACzBhH,UAAWA,IACVnV,KAAI,WACL,OAAOgS,EAAY2D,OAAOR,EAAUS,UAAUhE,IAChD,IAAGmtC,WACL,qCCtBA,IAAIjoC,EAAoB/H,EAAQ,MAE9B+yC,EADa/yC,EAAQ,MACH+yC,OAChBC,EAAS,UAeb,IAAIC,EAAU,EAcd9zC,EAAOC,QAAU,CACf+3B,iBA7BF,SAA0B/kB,EAAIknB,EAAYlpC,GACxC,IACIc,GADa6W,EAAkBmrC,qBAAuB,EAAI9gC,EAAK2gC,EAAO3gC,EAAIrK,EAAkBorC,qBACzE,IAAM7Z,EAO7B,OANa,MAATlpC,IACFc,GAAO,IAAMd,GAEa,IAAxBc,EAAIwC,QAAQs/C,KACd9hD,EAAM8hD,EAAS9hD,GAEVA,CACT,EAoBEkiD,6BATF,SAAsCC,EAAUC,EAASljD,GACvD,IAAIc,EAAM,GAAGxC,OAAOskD,GAAQtkD,OAAO2kD,EAAU,KAAK3kD,OAAO4kD,GAIzD,OAHa,MAATljD,IACFc,GAAO,IAAMd,GAERc,CACT,EAIEgtC,uBAhBF,WACE,MAAO,GAAGxvC,OAAOskD,EAAQ,UAAUtkD,OAAOukD,IAC5C,EAeE9U,WArBF,SAAoB/rB,GAClB,OAA8B,IAAvBA,EAAG1e,QAAQs/C,EACpB,qCCjBA,IACIxoB,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7DomC,EAA2BpmC,EAAQ,MACnCwnC,EAAyBxnC,EAAQ,MACjCuzC,EAAevzC,EAAQ,MACvBg/B,EAAoBh/B,EAAQ,MAC5B+H,EAAoB/H,EAAQ,MAE9Bm+B,EADan+B,EAAQ,MACCm+B,WACpBqV,EAA8BxzC,EAAQ,MACtCyzC,EAAoCzzC,EAAQ,MAE9C0zC,EADc1zC,EAAQ,MACQ0zC,kBAC5BnV,EAAoBv+B,EAAQ,MAC5B6B,EAAY7B,EAAQ,MACtBmmC,EAAWtkC,EAAUskC,SACrBwN,EAAU9xC,EAAU8xC,QAClBC,EAA6B5zC,EAAQ,MACrC4+B,EAAkB5+B,EAAQ,MAC1Bk0B,EAAYl0B,EAAQ,MACtB6zC,EAAmB3f,EAAU2f,iBAC7BC,EAAiB5f,EAAU4f,eACzBlsC,EAAY5H,EAAQ,MACpBiqC,EAAejL,EAAkBiL,aACnCM,EAAYvL,EAAkBuL,UAC9BoD,EAAmB3O,EAAkB2O,iBACrCrD,EAAmBtL,EAAkBsL,iBACrCF,EAA+BpL,EAAkBoL,6BACjDI,EAAQxL,EAAkBwL,MAC1BC,EAAezL,EAAkByL,aACjCC,EAAkB1L,EAAkB0L,gBACpCE,EAAkB5L,EAAkB4L,gBACpCC,EAAe7L,EAAkB6L,aACjC+C,EAAgB5O,EAAkB4O,cAClC9C,EAAgB9L,EAAkB8L,cAClCE,EAAiBhM,EAAkBgM,eACnCE,EAAelM,EAAkBkM,aACjC2C,EAAgB7O,EAAkB6O,cAClC1C,EAASnM,EAAkBmM,OAC3B2C,EAAqB9O,EAAkB8O,mBACrCnM,EAAU/C,EAAgB+C,QAC5BrB,EAAwB1B,EAAgB0B,sBACxCM,EAAgBhC,EAAgBgC,cAChCX,EAAoBrB,EAAgBqB,kBAuBtC,IAAI8T,EAA2B,WAC7B,SAASA,EAAYC,EAAmBC,EAAmBC,EAAwB/kD,EAAWglD,EAAUC,EAAiBxc,EAAWyc,GAClIx0C,KAAKy0C,mBAAqBN,EAC1Bn0C,KAAK00C,mBAAqBN,EAC1Bp0C,KAAKioC,WAAalQ,EAClB/3B,KAAKmlC,QAAUgP,EAAkBE,GACjCr0C,KAAK20C,+BAAiC,IAAI97B,IAC1C,IAAI+7B,EAAwB50C,KAAK60C,kCAAkCR,GACjErP,EAAU4P,EAAsB,GAChCjJ,EAAoBiJ,EAAsB,GAC5C50C,KAAK80C,2BAA6B,KAClC90C,KAAK+0C,UAAYT,EACjBt0C,KAAKklC,SAAWF,EAChBhlC,KAAKg1C,iBAAuC,OAApBT,QAAgD,IAApBA,EAA6BA,EAAkB,KACnGv0C,KAAKi1C,mBAAqBtJ,EAC1B3rC,KAAKk1C,mBAAoB,EACzBl1C,KAAKm1C,WAAa7lD,EAClB0Q,KAAKo1C,+BAAiCZ,CACxC,CACA,IAAItwC,EAASgwC,EAAYxgD,UAwazB,OAvaAwQ,EAAO2wC,kCAAoC,SAA2CxS,GACpF,IAAIgT,EAAQr1C,KAAK20C,+BAA+Br3C,IAAI+kC,GACpD,GAAa,MAATgT,EAAe,CACjB,IAAIC,EAASt1C,KAAK00C,mBAAmBrS,GACjC2C,EAAU,IAAIuB,EAAyBvmC,KAAKy0C,mBAAmBpS,GAAkBiT,GAErFD,EAAQ,CAACrQ,EADe,IAAI2C,EAAuB3C,EAAShlC,KAAKioC,gBAAY9tC,EAAW6F,KAAK+0C,YAE7F/0C,KAAK20C,+BAA+Bh7B,IAAI0oB,EAAiBgT,EAC3D,CACA,OAAOA,CACT,EACAnxC,EAAO2C,MAAQ,SAAegH,EAAMwU,GAGlC,OAFAriB,KAAKu1C,2BAA2B1nC,GAChC7N,KAAKw1C,UAAU3nC,EAAMwU,IACa,IAA3BriB,KAAKk1C,kBAA6B,CACvCvmC,OAAQ,UACR8mC,0BAA2Bz1C,KAAK80C,4BAC9B,CACFnmC,OAAQ,YACR8mC,0BAA2Bz1C,KAAK80C,2BAEpC,EACA5wC,EAAOwxC,kBAAoB,SAA2B70C,GAEpD,OADCb,KAAKm1C,WAAWxhD,eAAekN,IAAyHkH,GAAU,GAC5J/H,KAAKm1C,WAAWt0C,EACzB,EACAqD,EAAOyxC,eAAiB,WACtB31C,KAAKk1C,mBAAoB,CAC3B,EACAhxC,EAAO0xC,0BAA4B,SAAmCpM,EAAOnnB,GAC3E,GAAmB,OAAfmnB,EAAM3oC,MAAgC,MAAf2oC,EAAMsC,QAAiBxN,EAAWjc,GAA7D,CAGA,IAEE+J,EAFE1rB,OAAqBvG,GAAdqvC,EAAM9oC,KAAoB0/B,EAAkBoJ,EAAM9oC,KAAMV,KAAKm1C,YAAc,CAAC,EACnF9oB,GAAY,EAAI1B,EAAqC,SAAG3qB,KAAK+0C,WAEjE,IACE,IAAK1oB,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIynB,EAAUtc,EAAMz9B,MACpB,GAAqB,WAAjB+5C,EAAQt0B,KAAmB,CAC7B,IAAIq4B,EAAW/D,EAAQ3R,OAAOyS,EAAOxpC,KAAKi1C,mBAAmB33C,IAAI+kB,GAAS3hB,EAAMV,KAAKi1C,oBACrF,QAAiB96C,IAAbsyC,EACF,OAAOA,CAEX,CACF,CACF,CAAE,MAAOv8B,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACAP,KAAK21C,gBAnBL,CAoBF,EACAzxC,EAAO2xC,wBAA0B,SAAiCrM,EAAOnnB,GACvE,IAEEmK,EAFE9rB,OAAqBvG,GAAdqvC,EAAM9oC,KAAoB0/B,EAAkBoJ,EAAM9oC,KAAMV,KAAKm1C,YAAc,CAAC,EACnF1oB,GAAa,EAAI9B,EAAqC,SAAG3qB,KAAK+0C,WAElE,IACE,IAAKtoB,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAIynB,EAAUlc,EAAO79B,MACrB,GAAqB,WAAjB+5C,EAAQt0B,KAAmB,CAC7B,IAAIq4B,EAAW/D,EAAQ3R,OAAOyS,EAAOxpC,KAAKi1C,mBAAmB33C,IAAI+kB,GAAS3hB,EAAMV,KAAKi1C,oBACrF,QAAiB96C,IAAbsyC,IAAwC,OAAbA,GAAqBzsC,KAAKklC,SAASmC,UAAUoF,KAAcnG,GACxF,OAAOmG,CAEX,CACF,CACF,CAAE,MAAOv8B,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACAP,KAAK21C,gBACP,EACAzxC,EAAO4xC,8BAAgC,SAAuCtM,EAAOnnB,GACnF,IAGEoa,EAHE/5B,EAAQ1C,KACRU,OAAqBvG,GAAdqvC,EAAM9oC,KAAoB0/B,EAAkBoJ,EAAM9oC,KAAMV,KAAKm1C,YAAc,CAAC,EACnFxY,GAAa,EAAIhS,EAAqC,SAAG3qB,KAAK+0C,WAElE,IACE,IAAKpY,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAIynB,EAAUjM,EAAO9tC,MACrB,GAAqB,iBAAjB+5C,EAAQt0B,KAAyB,CACnC,IAAIq4B,EAAW/D,EAAQ3R,OAAOyS,EAAOxpC,KAAKi1C,mBAAmB33C,IAAI+kB,GAAS3hB,EAAMV,KAAKi1C,oBACrF,GAAgB,MAAZxI,GAIF,GAHoBA,EAASpG,OAAM,SAAUd,GAC3C,OAAmB,MAAZA,GAAoB7iC,EAAMwiC,SAASmC,UAAU9B,KAAce,CACpE,IAEE,OAAOmG,OAEJ,GAAiB,OAAbA,EACT,OAAO,IAEX,CACF,CACF,CAAE,MAAOv8B,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACAP,KAAK21C,gBACP,EACAzxC,EAAOsxC,UAAY,SAAmB3nC,EAAMwU,GAC1C,IAAI1T,EAAS3O,KAAKklC,SAASmC,UAAUhlB,GAIrC,GAHI1T,IAAWmlC,GACb9zC,KAAK21C,iBAEHhnC,IAAW23B,EAAU,CACvB,IAAI3N,EAAS34B,KAAKmlC,QAAQ7nC,IAAI+kB,GAC1B0zB,EAAgBrX,EAAkBsX,qBAAqBrd,GACtC,MAAjBod,IACF/1C,KAAK80C,2BAAgE,MAAnC90C,KAAK80C,2BAAqC9lD,KAAKq2B,IAAIrlB,KAAK80C,2BAA4BiB,GAAiBA,GAEzI/1C,KAAKi2C,oBAAoBpoC,EAAKo1B,WAAY5gB,EAC5C,CACF,EACAne,EAAO+xC,oBAAsB,SAA6BhT,EAAY5gB,GACpE,IAAI5W,EAASzL,KACbijC,EAAW3yC,SAAQ,SAAUm5C,GAC3B,OAAQA,EAAUr1B,MAChB,KAAKi3B,EACH5/B,EAAOyqC,aAAazM,EAAWpnB,GAC/B,MACF,KAAK2oB,EACCvB,EAAU1uB,OACZtP,EAAO0qC,iBAAiB1M,EAAWpnB,GAEnC5W,EAAO2qC,WAAW3M,EAAWpnB,GAE/B,MACF,KAAK+nB,EACH3+B,EAAO4qC,kBAAkB5M,EAAU6M,YAAaj0B,GAChD,MACF,KAAKqoB,EACkBnyB,QAAQ9M,EAAOiqC,kBAAkBjM,EAAUrpC,cACzCqpC,EAAU8M,cAC/B9qC,EAAOwqC,oBAAoBxM,EAAUxG,WAAY5gB,GAEnD,MACF,KAAK0oB,EAED,IAAIyL,EAAe/M,EAAUgN,YAC7B,GAAoB,MAAhBD,EAAsB,CAET/qC,EAAOy5B,SAASjN,QAAQ5V,KACtBonB,EAAU35C,MACzB2b,EAAOwqC,oBAAoBxM,EAAUxG,WAAY5gB,EAErD,KAAO,CAQL,IAAIq0B,EAAcjrC,EAAOy5B,SAASjN,QAAQ5V,GACzB,MAAfq0B,GAAoJ3uC,GAAU,GAChK,IAAI4uC,EAAU1C,EAAeyC,GACzBE,EAAuBnrC,EAAOy5B,SAAS/hB,SAASwzB,EAASH,IAChC,IAAzBI,EACFnrC,EAAOwqC,oBAAoBxM,EAAUxG,WAAY5gB,GAChB,MAAxBu0B,GAGTnrC,EAAOkqC,gBAEX,CAEA,MAEJ,KAAK5H,EAID,IAAI8I,EAAclD,EAA4BlK,EAAWxG,EAAYx3B,EAAO0pC,YACxE0B,EAAY97B,OACdtP,EAAO0qC,iBAAiBU,EAAax0B,GAErC5W,EAAO2qC,WAAWS,EAAax0B,GAEjC,MAEJ,KAAK2rB,EAED,IAAI8I,EAAelD,EAAkCnK,EAAWxG,EAAYx3B,EAAO0pC,YACnF1pC,EAAOyqC,aAAaY,EAAcz0B,GAClC,MAEJ,KAAK4oB,EACHx/B,EAAOsrC,mBAAmBtN,EAAWpnB,GACrC,MACF,KAAKsoB,EACL,KAAKW,EACH7/B,EAAOwqC,oBAAoBxM,EAAUxG,WAAY5gB,GACjD,MACF,KAAKwoB,EACH,IAAImM,EAAgBvrC,EAAO0pC,WAC3B1pC,EAAO0pC,WAAatB,EAAkBpoC,EAAO0pC,WAAY1L,EAAUziC,SAASiwC,oBAAqBxN,EAAU/oC,MAC3G+K,EAAOwqC,oBAAoBxM,EAAUziC,SAASi8B,WAAY5gB,GAC1D5W,EAAO0pC,WAAa6B,EACpB,MACF,KAAKvM,EACH,IAAIyM,EAAmBzrC,EAAOypC,kBAC9BzpC,EAAOwqC,oBAAoBxM,EAAUxG,WAAY5gB,GACjD5W,EAAOypC,kBAAoBgC,EAC3B,MACF,KAAKjJ,EACH,IAAIwI,EAAchN,EAAUgN,YACxBU,EAAa1rC,EAAOy5B,SAASjN,QAAQ5V,GACzB,MAAd80B,GAAmJpvC,GAAU,GAC/J,IAAIqvC,EAASnD,EAAekD,GAED,MADD1rC,EAAOy5B,SAAS/hB,SAASi0B,EAAQX,IAIzDhrC,EAAOkqC,iBAET,MACF,KAAK/K,EACH,IAAI1iC,EAAkBmvC,oCAGpB,MAAM,IAAI52C,MAAM,wCAFhBgL,EAAO6rC,kBAAkB7N,EAAWpnB,GAItC,MACF,KAAKyrB,EACH,IAA8C,IAA1CriC,EAAO2pC,+BACT,MAEF3pC,EAAOwqC,oBAAoBxM,EAAUziC,SAASi8B,WAAY5gB,GAC1D,MACF,KAAK8oB,EACH1/B,EAAO8rC,eAAe9N,EAAWpnB,GACjC,MACF,KAAKkoB,EACH9+B,EAAO8rC,eAAe9N,EAAU+N,aAAcn1B,GAC9C,MACF,QAEuIta,GAAU,GAErJ,GACF,EACA7D,EAAOqzC,eAAiB,SAAwB10C,EAAUwf,GACpDxf,EAASmE,UACXhH,KAAKi2C,oBAAoB,CAACpzC,EAASmE,UAAWqb,EAElD,EACAne,EAAO6yC,mBAAqB,SAA4BU,EAAcp1B,GACpE,IAAIkyB,EAAkBv0C,KAAKg1C,iBACL,OAApBT,GAA0KxsC,GAAU,GACtL,IAAI2vC,EAAejX,EAAsBgX,EAAaE,cAClDC,EAAqB53C,KAAKklC,SAAS/hB,SAASd,EAAQq1B,GACxD,GAA0B,MAAtBE,EAAJ,CAMA,IAAIC,EAAwBtD,EAAgBj3C,IAAIs6C,GAChD,GAA6B,MAAzBC,EAA+B,CACjC,IAAItxC,EAAYmtC,EAAamE,GACzBb,EAAgBh3C,KAAKm1C,WACzBn1C,KAAKm1C,WAAatB,EAAkB7zC,KAAKm1C,WAAY5uC,EAAU0wC,oBAAqBQ,EAAa/2C,MACjGV,KAAKw1C,UAAUjvC,EAAW8b,GAC1BriB,KAAKm1C,WAAa6B,CACpB,MAGEh3C,KAAK21C,gBAXP,WAJ6Bx7C,IAAvBy9C,GACF53C,KAAK21C,gBAgBX,EACAzxC,EAAOgyC,aAAe,SAAsB1M,EAAOnnB,GACjD,IAAIoX,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC2C,EAAa93C,KAAKklC,SAAS/hB,SAASd,EAAQoX,QAC7Bt/B,IAAf29C,QAEiB39C,KADnB29C,EAAa93C,KAAK41C,0BAA0BpM,EAAOnnB,KAEjDriB,KAAKklC,SAAS9hB,SAASf,EAAQoX,EAAYqe,EAGjD,EACA5zC,EAAOkyC,WAAa,SAAoB5M,EAAOnnB,GAC7C,IAAIoX,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC5P,EAAWvlC,KAAKklC,SAASM,kBAAkBnjB,EAAQoX,QACtCt/B,IAAborC,IAEc,OADhBA,EAAWvlC,KAAK61C,wBAAwBrM,EAAOnnB,IAE7CriB,KAAKklC,SAASO,kBAAkBpjB,EAAQoX,EAAY8L,GAC9B,OAAbA,GACTvlC,KAAKklC,SAAS9hB,SAASf,EAAQoX,EAAY,OAG/B,MAAZ8L,GACFvlC,KAAKw1C,UAAUhM,EAAOjE,EAE1B,EACArhC,EAAOiyC,iBAAmB,SAA0B3M,EAAOnnB,GACzD,IAAItV,EAAS/M,KACTy5B,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvCpP,EAAY/lC,KAAKklC,SAASc,mBAAmB3jB,EAAQoX,QACvCt/B,IAAd4rC,IAEe,OADjBA,EAAY/lC,KAAK81C,8BAA8BtM,EAAOnnB,IAEpDriB,KAAKklC,SAASgB,mBAAmB7jB,EAAQoX,EAAYsM,GAC9B,OAAdA,GACT/lC,KAAKklC,SAAS9hB,SAASf,EAAQoX,EAAY,OAG3CsM,GACFA,EAAUz1C,SAAQ,SAAUi1C,GACV,MAAZA,GACFx4B,EAAOyoC,UAAUhM,EAAOjE,EAE5B,GAEJ,EACArhC,EAAOmyC,kBAAoB,SAA2B7M,EAAOnnB,GAC3D,IAAIoX,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvCxc,EAAS34B,KAAKmlC,QAAQ7nC,IAAI+kB,GAC1BgzB,EAAkB,MAAV1c,EAAiB+F,EAAkBqZ,uBAAuBpf,EAAQc,GAAcd,EAC5F,GAAa,MAAT0c,OACYl7C,IAAVk7C,GACFr1C,KAAK21C,qBAEF,CACL,IAAItT,EAAkBgT,EAAM,GAC1B9P,EAAW8P,EAAM,GACf2C,EAAah4C,KAAKmlC,QAClB8S,EAAcj4C,KAAKklC,SACnBgT,EAAwBl4C,KAAKi1C,mBAC7BkD,EAAyBn4C,KAAK60C,kCAAkCxS,GAClE2C,EAAUmT,EAAuB,GACjCxM,EAAoBwM,EAAuB,GAC7Cn4C,KAAKmlC,QAAUnlC,KAAKy0C,mBAAmBpS,GACvCriC,KAAKklC,SAAWF,EAChBhlC,KAAKi1C,mBAAqBtJ,EAC1B3rC,KAAKu1C,2BAA2B/L,GAChCxpC,KAAKw1C,UAAUhM,EAAOjE,GACtBvlC,KAAKmlC,QAAU6S,EACfh4C,KAAKklC,SAAW+S,EAChBj4C,KAAKi1C,mBAAqBiD,CAC5B,CACF,EACAh0C,EAAOozC,kBAAoB,SAA2B9N,EAAOnnB,GAC3D,IAAIoX,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC5P,EAAWvlC,KAAKklC,SAASM,kBAAkBnjB,EAAQoX,GACvD,GAAgB,MAAZ8L,EACF,YAAiBprC,IAAborC,OACFvlC,KAAK21C,sBAGP,EAEF,IAAIp9C,EAAOyH,KAAKklC,SAAS/hB,SAASoiB,EAAUwO,EAA2BqE,+BACnEC,EAAiCr4C,KAAKklC,SAAS/hB,SAASoiB,EAAUwO,EAA2BuE,iDACjG,GAAY,MAAR//C,GAAiBwD,MAAMC,QAAQq8C,GAAnC,CAIA,IAAI9D,EAAkBv0C,KAAKg1C,iBACL,OAApBT,GAAkLxsC,GAAU,GAG9L,IAGEu1B,EAHE0Z,EAAgBh3C,KAAKm1C,WAErB3X,GAAa,EAAI7S,EAAqC,SAAG0tB,GAE7D,IACE,IAAK7a,EAAWlqC,MAAOgqC,EAASE,EAAWlR,KAAKrL,MAAO,CACrD,IAAIs3B,EAAajb,EAAO3uC,MACxBqR,KAAKm1C,WAAaoD,EAAWjpD,UAC7B,IAAIuoD,EAAwBtD,EAAgBj3C,IAAIi7C,EAAWj5C,QAC3D,GAA6B,MAAzBu4C,EAA+B,CACjC,IAAItxC,EAAYmtC,EAAamE,GAC7B73C,KAAKi2C,oBAAoB1vC,EAAU08B,WAAYnB,EACjD,MAGE9hC,KAAK21C,gBAET,CACF,CAAE,MAAOzlC,GACPstB,EAAWjqC,EAAE2c,EACf,CAAE,QACAstB,EAAWj9B,GACb,CACAP,KAAKm1C,WAAa6B,CA5BlB,MAFEh3C,KAAK21C,gBA+BT,EAOAzxC,EAAOqxC,2BAA6B,SAAoC1nC,GACtE,IAAI2qC,EAAsB3qC,EAAK2qC,oBAC/B,GAA2B,MAAvBA,EACF,IAAK,IAAIC,EAAK,EAAGC,EAAenqD,OAAO4C,KAAKqnD,GAAsBC,EAAKC,EAAa1kD,OAAQykD,IAAM,CAChG,IAEE/a,EAFEib,EAAeD,EAAaD,GAC5B9a,GAAa,EAAIhT,EAAqC,SAAG6tB,EAAoBG,IAEjF,IACE,IAAKhb,EAAWrqC,MAAOoqC,EAASC,EAAWrR,KAAKrL,MAAO,CACrD,IAAI23B,EAAelb,EAAO/uC,MACtByoD,EAASnD,EAAe2E,GACI,MAA5B54C,KAAKmlC,QAAQ7nC,IAAI85C,IACnBp3C,KAAKklC,SAASz6B,OAAO2sC,EAAQpD,GAEqB,MAAhDh0C,KAAKklC,SAAS/hB,SAASi0B,EAAQuB,IACjC34C,KAAKklC,SAAS9hB,SAASg0B,EAAQuB,GAAc,EAEjD,CACF,CAAE,MAAOzoC,GACPytB,EAAWpqC,EAAE2c,EACf,CAAE,QACAytB,EAAWp9B,GACb,CACF,CAEJ,EACO2zC,CACT,CA5b+B,GA6b/B50C,EAAOC,QAAU,CACfsH,MAzcF,SAAestC,EAAmBC,EAAmBC,EAAwBngC,EAAUogC,EAAUC,EAAiBxc,EAAWyc,GAC3H,IAAInyB,EAASnO,EAASmO,OACpBxU,EAAOqG,EAASrG,KAChBve,EAAY4kB,EAAS5kB,UAEvB,OADc,IAAI4kD,EAAYC,EAAmBC,EAAmBC,EAAwB/kD,EAAWglD,EAAUC,EAAiBxc,EAAWyc,GAC9H3tC,MAAMgH,EAAMwU,EAC7B,sCC7DA,IAAI/gB,EAAyBnB,EAAAA,MAAAA,QACzBoB,EAAiBD,EAAuBnB,EAAQ,OAChDwqB,EAA8BrpB,EAAuBnB,EAAQ,OAC7DwB,EAAmBL,EAAuBnB,EAAQ,OAClDkX,EAAsB/V,EAAuBnB,EAAQ,MACrD89B,EAAkB99B,EAAQ,MAC1B6wC,EAAa7wC,EAAQ,MACrBuzC,EAAevzC,EAAQ,MACvBk/B,EAAal/B,EAAQ,MACrB+H,EAAoB/H,EAAQ,MAC5Bq/B,EAAar/B,EAAQ,MACrB04C,EAAe14C,EAAQ,MACvBwF,EAAWxF,EAAQ,MACrBm3B,EAAmB3xB,EAAS2xB,iBAC5B+G,EAAyB14B,EAAS04B,uBAElCwV,EADc1zC,EAAQ,MACQ0zC,kBAC5BnV,EAAoBv+B,EAAQ,MAC5B6B,EAAY7B,EAAQ,MACtB8/B,EAA8Bj+B,EAAUi+B,4BACxCC,EAAuBl+B,EAAUk+B,qBAC/BpB,EAAoB3+B,EAAQ,MAC5B24C,EAA0B34C,EAAQ,KAClCk0B,EAAYl0B,EAAQ,MACtB4hC,EAAY1N,EAAU0N,UACtBC,EAAe3N,EAAU2N,aACzBjB,EAAgB1M,EAAU0M,cACxBh5B,EAAY5H,EAAQ,MACVA,EAAQ,MAUtB,IAAI44C,EAAwB,WAC1B,SAASA,EAAS18C,GAChB,IAAIqG,EAAQ1C,KACRqiC,EAAkBhmC,EAAMgmC,gBAC1BtK,EAAY17B,EAAM07B,UAClBihB,EAAkB38C,EAAM28C,gBACxBn+B,EAAWxe,EAAMwe,SACjBo+B,EAAkB58C,EAAM48C,gBACxB1yC,EAAYlK,EAAMkK,UAClB2yC,EAAsB78C,EAAM68C,oBAC5B3E,EAAkBl4C,EAAMk4C,gBACxB4E,EAAmB98C,EAAM88C,iBACzBC,EAAmB/8C,EAAM+8C,iBACzBC,EAAkCh9C,EAAMi9C,+BACxCC,EAAgCl9C,EAAMk9C,8BACtCC,EAAYn9C,EAAMm9C,UAClBhF,EAAgCn4C,EAAMm4C,8BACtC9pC,EAAOrO,EAAMqO,KACb3L,EAAS1C,EAAM0C,OACf06C,EAA2Bp9C,EAAMo9C,yBACjChqD,EAAU4M,EAAM5M,QAChBiqD,EAAMr9C,EAAMq9C,KACd,EAAI/3C,EAA0B,SAAG3B,KAAM,6CAA6C,SAAUzH,GAC5F,IAAI+gD,EAAiC52C,EAAM22C,gCACC,oBAAnCC,GAAkPvxC,GAAU,GACrQ,IAAI4xC,EAAgBd,GAAa,WAC7B,OAAOS,EAA+B/gD,EACxC,IACAqhD,EAAWD,EAAc,GACzB3iD,EAAS2iD,EAAc,GAOzB,OANAj3C,EAAMm3C,KAAK,CACTh5C,KAAM,qCACNi5C,UAAWp3C,EAAMq3C,WACjBC,cAAet3C,EAAMu3C,WAAWzzC,QAAQqH,KAAK+C,OAAO/P,KACpD+4C,SAAUA,IAEL5iD,CACT,IACAgJ,KAAKk6C,iBAAmB7X,EACxBriC,KAAKioC,WAAalQ,EAClB/3B,KAAKm6C,0BAA4BV,EACjCz5C,KAAKo6C,6BAA8B,EACnCp6C,KAAKq6C,oBAAsB,IAAIxhC,IAC/B7Y,KAAK65C,KAAOH,EACZ15C,KAAK+5C,WAAa/I,IAClBhxC,KAAKs6C,oBAAsB,EAC3Bt6C,KAAKi6C,WAAa1zC,EAClBvG,KAAKu6C,qBAAuBrB,EAC5Bl5C,KAAKg1C,iBAAmBT,EACxBv0C,KAAKw6C,kBAAoBrB,EACzBn5C,KAAKy6C,uBAAyB,IAAI5hC,IAClC7Y,KAAK06C,mBAAqB,KAC1B16C,KAAK26C,4BAA8B,EACnC36C,KAAK46C,iBAAmB5B,EACxBh5C,KAAK66C,WAAarB,EAClBx5C,KAAK2mC,MAAQj8B,EACb1K,KAAKmlC,QAAU,IAAItsB,IACnB7Y,KAAK86C,OAAS,UACd96C,KAAK+6C,UAAYlgC,EACjB7a,KAAKg7C,eAAiB,IAAIniC,IAC1B7Y,KAAKi7C,SAAWxrD,EAChBuQ,KAAKk7C,kBAAuC,IAApBjC,EACxBj5C,KAAKq5C,gCAAkCA,EACvCr5C,KAAKm7C,+BAAiC5B,EACtCv5C,KAAKo7C,yBAAiF,iBAAtDp7C,KAAKi6C,WAAWzzC,QAAQqH,KAAK+C,OAAO+4B,cACpE3pC,KAAKo1C,+BAAiCZ,EACtCx0C,KAAKq7C,mBAAqB,IAAIxiC,IAC9B7Y,KAAKs7C,YAAc,IAAI9vB,IACvBxrB,KAAKu7C,aAAe,GACpB,IAAIhpC,EAAKvS,KAAKs6C,sBACdv7C,EAAOqI,UAAU,CACfmB,SAAU,WACR,OAAO7F,EAAM84C,UAAUjpC,EACzB,EACA/R,MAAO,SAAe2uC,GACpB,OAAOzsC,EAAMqM,OAAOogC,EACtB,EACAx1C,KAAM,SAAcuZ,GAClB,IACExQ,EAAM+4C,MAAMlpC,EAAIW,EAClB,CAAE,MAAO1S,GACPkK,EAAKlK,MAAMA,EACb,CACF,EACA2S,MAAO,SAAe1K,GACpB,IAAIizC,EACJh5C,EAAMi5C,OAAOppC,EAAI9J,GACjB/F,EAAMm3C,KAAK,CACTh5C,KAAM,gBACNi5C,UAAWp3C,EAAMq3C,WACjBnpC,OAAQlO,EAAMu3C,WAAWzzC,QAAQqH,KAAK+C,OACtCthB,UAAWoT,EAAMu3C,WAAWzzC,QAAQlX,UACpC8d,YAAgF,QAAlEsuC,EAAwBh5C,EAAMu3C,WAAWzzC,QAAQ4G,mBAAmD,IAA1BsuC,EAAmCA,EAAwB,CAAC,GAExJ,IAEsB,MAApBtC,GACFp5C,KAAK47C,2BAAwD,MAA7BxC,EAAiBlmC,SAAmB,CAClElQ,KAAMo2C,EAAiBlmC,UACrB,KAAMkmC,EAAiB3pD,SAAS,EAExC,CAGA,IAAIyU,EAAS60C,EAASrlD,UAshCtB,OArhCAwQ,EAAO23C,OAAS,WACd,IAAIpwC,EAASzL,KACb,GAAoB,cAAhBA,KAAK86C,OAAT,CAGA96C,KAAK86C,OAAS,YACd96C,KAAKu6C,qBAA6B,OAAEv6C,KAAKi6C,WAAWzzC,QAAQyb,YAC3B,IAA7BjiB,KAAKg7C,eAAet/C,OACtBsE,KAAKg7C,eAAe1qD,SAAQ,SAAU4+C,GACpC,OAAOA,EAAI1mC,aACb,IACAxI,KAAKg7C,eAAe75B,SAEtB,IAAI26B,EAAoB97C,KAAK06C,mBACH,OAAtBoB,IACF97C,KAAK06C,mBAAqB,KAC1BoB,EAAkBxrD,SAAQ,SAAU2pC,GAClC,OAAOxuB,EAAOswC,+BAA+BC,aAAa/hB,EAC5D,IAEAj6B,KAAKi8C,oBAEPj8C,KAAKq6C,oBAAoBl5B,QACe,MAApCnhB,KAAKk8C,8BACPl8C,KAAKk8C,4BAA4B53C,UACjCtE,KAAKk8C,4BAA8B,MAErCl8C,KAAKu7C,aAAe,GACpBv7C,KAAKm8C,4BACLn8C,KAAKo8C,sBAzBL,CA0BF,EACAl4C,EAAOm4C,mBAAqB,WAC1B,IAAIC,EACJ,OAAQt8C,KAAK86C,QACX,IAAK,UAKL,IAAK,sBAEDwB,EAAc,SACd,MAEJ,IAAK,YAEDA,EAAc,WACd,MAEJ,IAAK,gBAEDA,EAAct8C,KAAK26C,4BAA8B,EAAI,SAAW,WAChE,MAEJ,QACE36C,KAAK86C,OAC6G/yC,GAAU,GAEhI/H,KAAKu6C,qBAAqB5gC,IAAI3Z,KAAKi6C,WAAWzzC,QAAQyb,WAAYq6B,EACpE,EACAp4C,EAAOq4C,UAAY,SAAmBC,GACpC,IAAIzvC,EAAS/M,KACTw5C,EAAYx5C,KAAK66C,WACrB,GAAiB,MAAbrB,EAAmB,CACrB,IAAIjnC,EAAKvS,KAAKs6C,sBACdrc,EAAgBxzB,QAAO,SAAUC,GAC/B,IAAI+xC,EAAoBjD,EAAUkD,UAAS,WACzC,IACEF,IACA9xC,EAAKnC,UACP,CAAE,MAAO/H,GACPkK,EAAKlK,MAAMA,EACb,CACF,IACA,OAAO,WACL,OAAOg5C,EAAUqC,OAAOY,EAC1B,CACF,IAAGr1C,UAAU,CACXmB,SAAU,WACR,OAAOwE,EAAOyuC,UAAUjpC,EAC1B,EACA/R,MAAO,SAAemvC,GACpB,OAAO5iC,EAAOgC,OAAO4gC,EACvB,EACAx8B,MAAO,SAAe1K,GACpB,OAAOsE,EAAO4uC,OAAOppC,EAAI9J,EAC3B,GAEJ,MACE+zC,GAEJ,EACAt4C,EAAOs3C,UAAY,SAAmBjpC,GACpCvS,KAAKg7C,eAAuB,OAAEzoC,GACG,IAA7BvS,KAAKg7C,eAAet/C,OACtBsE,KAAK67C,SACL77C,KAAK2mC,MAAMp+B,WACXvI,KAAK65C,KAAK,CACRh5C,KAAM,mBACNi5C,UAAW95C,KAAK+5C,aAGtB,EACA71C,EAAO6K,OAAS,SAAgBvO,GAC9BR,KAAK67C,SACL77C,KAAK2mC,MAAMnmC,MAAMA,GACjBR,KAAK65C,KAAK,CACRh5C,KAAM,gBACNi5C,UAAW95C,KAAK+5C,WAChBv5C,MAAOA,GAEX,EACA0D,EAAOy3C,OAAS,SAAgBppC,EAAI9J,GAClCzI,KAAKg7C,eAAerhC,IAAIpH,EAAI9J,GAC5BzI,KAAKq8C,oBACP,EAIAn4C,EAAOu3C,MAAQ,SAAekB,EAAKzpC,GACjC,IAAI0K,EAAS5d,KACbA,KAAKu8C,WAAU,WACb,IAIE3C,EAJmBf,GAAa,WAC9Bj7B,EAAOg/B,YAAY1pC,GACnB0K,EAAOi/B,6CACT,IAC0B,GAC5Bj/B,EAAOi8B,KAAK,CACVh5C,KAAM,eACNi5C,UAAWl8B,EAAOm8B,WAClB7mC,SAAUA,EACV0mC,SAAUA,GAEd,GACF,EACA11C,EAAO44C,qBAAuB,SAA8BC,GAC1D,IAAI5+B,EAASne,KACTg9C,EAAU,GA4Bd,OA3BAD,EAAUzsD,SAAQ,SAAU4iB,GAC1B,GAAsB,OAAlBA,EAASlQ,MAAwC,MAAvBkQ,EAAS49B,YAAuB59B,EAASvf,eAAe,UAAtF,CAGO,GAAqB,MAAjBuf,EAASlQ,KAAc,CAGhC,IAAIguB,EAAS9d,EAASvf,eAAe,WAAgC,MAAnBuf,EAAS8d,OAAiB9d,EAAS8d,OAAS,KAC1FisB,EAAWjsB,EAASA,EAAO5/B,KAAI,SAAUkL,GAE3C,OADcA,EAAMxE,OAEtB,IAAGxG,KAAK,MAAQ,cACZkP,EAAQ6+B,EAAW50B,OAAO,eAAgB,mCAAqC0T,EAAO87B,WAAWzzC,QAAQqH,KAAK+C,OAAO/P,KAAO,qBAAuBo8C,EAAW,6DASlK,MARAz8C,EAAMzB,OAAS,CACbiyB,OAAQA,EACRzqB,UAAW4X,EAAO87B,WAAWzzC,QAAQqH,KACrCve,UAAW6uB,EAAO87B,WAAWzzC,QAAQlX,WAIvCkR,EAAM08C,MACA18C,CACR,CACE,IAAI28C,EAAmBjqC,EACvB8pC,EAAQj/C,KAAKo/C,EACf,CACF,IACOH,CACT,EAMA94C,EAAOk5C,2BAA6B,SAAoCL,GACtE,IAAIM,EACJ,GAAIN,EAAU/oD,OAAS,EAOrB,OANI+oD,EAAUnjD,MAAK,SAAU0jD,GAC3B,IAAIC,EACJ,OAA0J,KAA5F,QAArDA,EAAwBD,EAAaxM,kBAAkD,IAA1ByM,OAAmC,EAASA,EAAsBC,aAC1I,KACoIz1C,GAAU,IAEvI,EAET,IAAImL,EAAW6pC,EAAU,GACrBS,GAA2J,KAA1F,QAAhDH,EAAuBnqC,EAAS49B,kBAAiD,IAAzBuM,OAAkC,EAASA,EAAqBG,cAI7I,OAHIA,GAAgC,YAAhBx9C,KAAK86C,QACqH/yC,GAAU,KAEpJy1C,IACFx9C,KAAK47C,2BAA2B1oC,EAAU,KAAMlT,KAAKm6C,2BACrDn6C,KAAK2mC,MAAMhtC,KAAKuZ,IACT,EAGX,EACAhP,EAAO04C,YAAc,SAAqB1pC,GACxC,GAAoB,cAAhBlT,KAAK86C,OAAT,CAGA96C,KAAKs7C,YAAYn6B,QACjB,IAAI47B,EAAYhhD,MAAMC,QAAQkX,GAAYA,EAAW,CAACA,GAClDuqC,EAAoBz9C,KAAK88C,qBAAqBC,GAClD,GAAiC,IAA7BU,EAAkBzpD,OAapB,OAVc+oD,EAAUnjD,MAAK,SAAU8jD,GACrC,IAAIC,EACJ,OAAmH,KAAxE,QAAlCA,EAAgBD,EAAE5M,kBAA0C,IAAlB6M,OAA2B,EAASA,EAAcC,SACvG,MAEE59C,KAAK86C,OAAS,gBACd96C,KAAKq8C,qBACLr8C,KAAKo6C,6BAA8B,QAErCp6C,KAAK2mC,MAAMhtC,KAAKuZ,GAMlB,IADmBlT,KAAKo9C,2BAA2BK,GACnD,CAGA,IAAII,EAwzBR,SAAmCd,GACjC,IAAIe,EAA0B,GAC1BC,EAAuB,GAiB3B,OAhBAhB,EAAUzsD,SAAQ,SAAU4iB,GAC1B,GAAqB,MAAjBA,EAASlgB,MAAkC,MAAlBkgB,EAAS8qC,MAAe,CACnD,IAAIA,EAAQ9qC,EAAS8qC,MACnBhrD,EAAOkgB,EAASlgB,KACL,MAATgrD,GAAyB,MAARhrD,GAC2P+U,GAAU,GAE1Rg2C,EAAqBhgD,KAAK,CACxBigD,MAAOA,EACPhrD,KAAMA,EACNkgB,SAAUA,GAEd,MACE4qC,EAAwB//C,KAAKmV,EAEjC,IACO,CAAC4qC,EAAyBC,EACnC,CA50BgCE,CAA0BR,GACpDK,EAA0BD,EAAsB,GAChDE,EAAuBF,EAAsB,GAC3CK,EAA6BJ,EAAwB9pD,OAAS,EASlE,GAAIkqD,EAA4B,CAI9B,GAAIl+C,KAAKo7C,yBAA0B,CACjC,IAAI54B,EAAS6b,IACbr+B,KAAKi6C,WAAa,CAChBzzC,QAASxG,KAAKi6C,WAAWzzC,QACzBQ,SAAUk5B,EAAqBlgC,KAAKi6C,WAAWjzC,SAAS6G,KAAM2U,EAAQxiB,KAAKi6C,WAAWjzC,SAAS1X,UAAW0Q,KAAKi6C,WAAWjzC,SAASsN,OACnI6R,KAAM8Z,EAA4BjgC,KAAKi6C,WAAW9zB,KAAKtY,KAAM2U,EAAQxiB,KAAKi6C,WAAW9zB,KAAK72B,WAE9F,CACA,IAAI6uD,EAAmBn+C,KAAKo+C,kBAAkBN,GAC9C99C,KAAKq+C,yBAAyBF,EAChC,CACA,GAAIJ,EAAqB/pD,OAAS,EAAG,CACnC,IAAIsqD,EAAoBt+C,KAAKu+C,6BAA6BR,GAC1D/9C,KAAKq+C,yBAAyBC,EAChC,CACIt+C,KAAKo7C,2BAGgC,MAAnCqC,EAAkB,GAAG3M,WAEvB2M,EAAkB,GAAG3M,WAAa,CAChC0N,6BAA8Bx+C,KAAKi6C,WAAWjzC,SAASqb,QAGzDo7B,EAAkB,GAAG3M,WAAW0N,6BAA+Bx+C,KAAKi6C,WAAWjzC,SAASqb,QAQ5F,IAAIo8B,EAAgBz+C,KAAKi8C,iBAAiBiC,EAA6Bl+C,KAAKi6C,gBAAa9/C,GACrF+jD,GACEl+C,KAAKo6C,6BACPp6C,KAAK0+C,cAGT1+C,KAAK2+C,wBAAwBF,GAC7Bz+C,KAAK2mC,MAAMhtC,KAAKuZ,EAxDhB,CAxBA,CAiFF,EACAhP,EAAO03C,2BAA6B,SAAoC1oC,EAAUzjB,EAASgqD,GACzF,IAAIv6B,EAASlf,KAEb,GAD8B,OAA5BA,KAAK06C,oBAA4L3yC,GAAU,GAC7L,MAAZmL,GAA+B,MAAXzjB,EAAxB,CAGA,IAAIqsD,EAAoB,GACxB,GAAI5oC,EAAU,CACZ,IAAIxF,EAAUkxC,EAAkB1rC,EAAUlT,KAAKi6C,WAAW9zB,KAAM4b,EAAW,CACzEM,gBAAiBriC,KAAKk6C,iBACtBniB,UAAW/3B,KAAKioC,WAChBj1C,KAAM,GACNsmD,+BAAwE,MAAxCt5C,KAAKq5C,gCAA0Cr5C,KAAK6+C,0CAA4C,KAChItF,8BAA+Bv5C,KAAKm7C,+BACpC3G,8BAA+Bx0C,KAAKo1C,+BACpCqE,yBAA0BA,IAE5BqF,EAAkCpxC,GAClCouC,EAAkB/9C,KAAK,CACrBwI,UAAWvG,KAAKi6C,WAChBvsC,QAASA,EACTje,QAASA,IAEXuQ,KAAK++C,4BAA4BrxC,EAASouC,EAC5C,MAAWrsD,GACTqsD,EAAkB/9C,KAAK,CACrBwI,UAAWvG,KAAKi6C,WAChBvsC,QAAS,CACPsjB,OAAQ,KACRsX,cAAe,KACf0W,wBAAyB,KACzBC,iBAAkB,KAClBlgD,OAAQ+/B,EAAkBr0B,SAC1By0C,SAAS,GAEXzvD,QAASA,IAGbuQ,KAAK06C,mBAAqBoB,EAC1BA,EAAkBxrD,SAAQ,SAAU2pC,GAClC,OAAO/a,EAAO68B,+BAA+BoD,YAAYllB,EAC3D,IAGAj6B,KAAKi8C,kBAvCL,CAwCF,EACA/3C,EAAO66C,4BAA8B,SAAqCrxC,EAASouC,GACjF,GAAIpuC,EAAQuxC,kBAAoBvxC,EAAQuxC,iBAAiBjrD,OAAQ,CAC/D,IAEEo4B,EAFE6yB,EAAmBvxC,EAAQuxC,iBAC3B5yB,GAAY,EAAI1B,EAAqC,SAAGs0B,GAE5D,IACE,IAAK5yB,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIm+B,EAAkBhzB,EAAMz9B,MAC5B,OAAQywD,EAAgBhrC,MACtB,IAAK,sBACH,IACI7N,EADkBvG,KAAKq/C,yBACK/hD,IAAI8hD,EAAgBxH,oBACpD,GAAiB,MAAbrxC,EACFvG,KAAKs/C,oCAAoCF,OACpC,CACL,IAAIG,EAAgCv/C,KAAKw/C,+BAA+Bj5C,EAAW64C,GACnFtD,EAAkB/9C,KAAKosC,MAAM2R,GAAmB,EAAIzkC,EAA6B,SAAGkoC,GACtF,CACA,MACF,IAAK,eAEH,MACF,QAEqLx3C,GAAU,GAEnM,CACF,CAAE,MAAOmI,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CACF,EAKA2D,EAAOu7C,0BAA4B,SAAmCL,EAAiBM,GACrF,IAAIpwD,EAEFA,EAD6B,mBAA3BowD,EAAkBtrC,MAAsD,wBAAzBgrC,EAAgBhrC,KACrDy/B,EAAkBuL,EAAgB9vD,UAAWowD,EAAkBzI,oBAAqBmI,EAAgB1+C,MAEpG0+C,EAAgB9vD,UAE9B,IAAI4kB,EAAW+rB,EAA4Byf,EAAmBN,EAAgB/8B,OAAQ/yB,GACtF,OAAOsvD,EAAkB,CACvB57C,KAAMo8C,EAAgBp8C,MACrBkR,EAAUkrC,EAAgBzZ,SAAU,CACrCtD,gBAAiBriC,KAAKk6C,iBACtBniB,UAAW/3B,KAAKioC,WAChBj1C,KAAMosD,EAAgBpsD,KACtBsmD,+BAAwE,MAAxCt5C,KAAKq5C,gCAA0Cr5C,KAAK6+C,0CAA4C,KAChItF,8BAA+Bv5C,KAAKm7C,+BACpC1B,yBAA0Bz5C,KAAKm6C,0BAC/B3F,8BAA+Bx0C,KAAKo1C,gCAExC,EACAlxC,EAAOs7C,+BAAiC,SAAwC3H,EAAuB8H,GACrG,IAAIp5C,EAAYmtC,EAAamE,GACzBiE,EAAoB,GACpB8D,EAAgB5/C,KAAKy/C,0BAA0BE,EAAqBp5C,GAQxE,OAPAu4C,EAAkCc,GAClC9D,EAAkB/9C,KAAK,CACrBwI,UAAWvG,KAAKi6C,WAChBvsC,QAASkyC,EACTnwD,QAAS,OAEXuQ,KAAK++C,4BAA4Ba,EAAe9D,GACzCA,CACT,EACA53C,EAAOo7C,oCAAsC,SAA6CK,GACxF,IAAIhgC,EAAS3f,KAEbA,KAAKq/C,yBAAyBh5B,KAAKs5B,EAAoB/H,oBAAoB73B,MAAK,SAAUxZ,GACxF,GAAiB,MAAbA,GAAuC,YAAlBoZ,EAAOm7B,OAAhC,CAGA,IAOM+E,EAPFN,EAAgC5/B,EAAO6/B,+BAA+Bj5C,EAAWo5C,GAIrF,GAHAJ,EAA8BjvD,SAAQ,SAAU2pC,GAC9C,OAAOta,EAAOo8B,+BAA+BoD,YAAYllB,EAC3D,IACiC,MAA7Bta,EAAO+6B,yBAIRmF,EAAwBlgC,EAAO+6B,oBAAoB38C,KAAKosC,MAAM0V,GAAuB,EAAIxoC,EAA6B,SAAGkoC,IAE1H5/B,EAAOs8B,kBAXT,CAaF,GACF,EACA/3C,EAAOk6C,kBAAoB,SAA2BrB,GACpD,IAAIn9B,EAAS5f,KAUb,OATgC,OAA5BA,KAAK06C,qBACP16C,KAAK06C,mBAAmBpqD,SAAQ,SAAU2pC,GACxCra,EAAOm8B,+BAA+BC,aAAa/hB,EACrD,IACAj6B,KAAK06C,mBAAqB,MAE5B16C,KAAKo6C,6BAA8B,EACnCp6C,KAAKq6C,oBAAoBl5B,QACzBnhB,KAAKmlC,QAAQhkB,QACN47B,EAAU3rD,KAAI,SAAU0uD,GAC7B,IAAIC,EAAenB,EAAkBkB,EAAalgC,EAAOq6B,WAAW9zB,KAAM4b,EAAW,CACnFM,gBAAiBziB,EAAOs6B,iBACxBniB,UAAWnY,EAAOqoB,WAClBj1C,KAAM,GACNsmD,+BAA0E,MAA1C15B,EAAOy5B,gCAA0Cz5B,EAAOi/B,0CAA4C,KACpItF,8BAA+B35B,EAAOu7B,+BACtC1B,yBAA0B75B,EAAOu6B,0BACjC3F,8BAA+B50B,EAAOw1B,iCAGxC,OADAx1B,EAAOm8B,+BAA+BiE,cAAcpgC,EAAOq6B,WAAY8F,EAAcngC,EAAOq7B,UACrF8E,CACT,GACF,EAMA77C,EAAOm6C,yBAA2B,SAAkC4B,GAClE,IAAI7P,EAASpwC,KACO,cAAhBA,KAAK86C,QAGTmF,EAAS3vD,SAAQ,SAAUod,GACzB,IAAIsxC,EAA0BtxC,EAAQsxC,wBACpCC,EAAmBvxC,EAAQuxC,iBAC3BC,EAAUxxC,EAAQwxC,QAepB,GAdA9O,EAAO0K,OAASoE,EAAU,gBAAkB,sBAC5C9O,EAAOiM,qBACH6C,IACF9O,EAAOgK,6BAA8B,GAEnC6E,GAAgD,IAA5BA,EAAiBjrD,QACvCirD,EAAiB3uD,SAAQ,SAAU8uD,GACjC,IAAIc,EACAC,EAAsB/P,EAAO8J,iBACjC9J,EAAO8J,iBAAiF,QAA7DgG,EAAwBd,EAAgB/c,uBAAuD,IAA1B6d,EAAmCA,EAAwB9P,EAAO8J,iBAClK9J,EAAOgQ,wBAAwBhB,GAC/BhP,EAAO8J,iBAAmBiG,CAC5B,IAEEnB,GAA8D,IAAnCA,EAAwBhrD,SACrDo8C,EAAOgK,4BAAgD,kBAAlBhK,EAAO0K,OAC5CkE,EAAwB1uD,SAAQ,SAAU+vD,GACxC,IAAIC,EACAH,EAAsB/P,EAAO8J,iBACjC9J,EAAO8J,iBAAwF,QAApEoG,EAAwBD,EAAuBhe,uBAAuD,IAA1Bie,EAAmCA,EAAwBlQ,EAAO8J,iBACzK9J,EAAOmQ,+BAA+B7yC,EAAS2yC,GAC/CjQ,EAAO8J,iBAAmBiG,CAC5B,IACI/P,EAAO8K,kBAAsC,kBAAlB9K,EAAO0K,QAA4B,CAShE,IAAI0F,EAAgB,GACpBxB,EAAwB1uD,SAAQ,SAAUmwD,GACf,UAArBA,EAAYrsC,MACdosC,EAAcziD,KAAKqyC,EAAOsQ,sBAAsBD,EAAYzC,MAAOyC,EAAYztD,KAAMytD,EAAa,CAChGz9C,KAAMy9C,EAAYz9C,OAGxB,IACIw9C,EAAcxsD,OAAS,GACzBo8C,EAAOiO,yBAAyBmC,EAEpC,CAEJ,GACF,EACAt8C,EAAO24C,4CAA8C,WAC9C78C,KAAKo7C,0BAG+B,IAArCp7C,KAAK26C,8BAA0E,IAArC36C,KAAKo6C,6BACjDp6C,KAAKm8C,2BAET,EASAj4C,EAAOk8C,wBAA0B,SAAiChB,GAChE,IAAIuB,EAAU3gD,KACd,OAAQo/C,EAAgBhrC,MACtB,IAAK,sBACH,IAAImgC,EAAkBv0C,KAAKq/C,yBACvBxxC,EAAO0mC,EAAgBj3C,IAAI8hD,EAAgBxH,oBAC/C,GAAY,MAAR/pC,EAGF7N,KAAK4gD,6CAA6CxB,EAAiB1L,EAAa7lC,QAC3E,CAGL,IAAI0E,EAAKvS,KAAKs6C,sBACdt6C,KAAK26C,8BACL,IAAIkG,EAAwB,WAC1BF,EAAQhG,8BACRgG,EAAQ9D,6CACV,EAKI/zB,EAAoBmV,EAAgB5H,KAAK,IAAI9Y,SAAQ,SAAUta,EAASotC,GAC1EkE,EAAgBluB,KAAK+4B,EAAgBxH,oBAAoB73B,KAAK9c,EAASotC,EACzE,KACApS,EAAgBxzB,QAAO,SAAUC,GAC/B,IAAI+xC,EACAh0C,EAAeqgB,EAAkB1hB,UAAU,CAC7CzN,KAAM,SAAcmnD,GAClB,GAAkB,MAAdA,EAAoB,CACtB,IAAIC,EAA6B,WAC/B,IACE,IAAIx6C,EAAYmtC,EAAaoN,GACzBE,EAA4B94C,EAAkB+4C,8BAC9CC,EAA8D,MAA7BF,GAAqCL,EAAQhG,4BAA8B,EAa9Gf,EAZmBf,GAAa,WAG9B,GAFA8H,EAAQQ,uBAAuB/B,EAAiB74C,GAE5C26C,EACFP,EAAQS,0BAERJ,EAA2Bt2C,EAAKnC,cAC3B,CACL,IAAIk2C,EAAgBkC,EAAQ1E,mBAC5B0E,EAAQhC,wBAAwBF,EAClC,CACF,IAC0B,GAC5BkC,EAAQ9G,KAAK,CACXh5C,KAAM,uBACNi5C,UAAW6G,EAAQ5G,WACnBC,cAAezzC,EAAU1F,KACzB+4C,SAAUA,IAEPsH,GACHx2C,EAAKnC,UAET,CAAE,MAAO/H,GACPkK,EAAKlK,MAAMA,EACb,CACF,EACIg5C,EAAYmH,EAAQ9F,WACP,MAAbrB,EACFuH,IAEAtE,EAAoBjD,EAAUkD,SAASqE,EAE3C,MACEr2C,EAAKnC,UAET,EACA/H,MAAOkK,EAAKlK,QAEd,OAAO,WACLiI,EAAaD,cACa,MAAtBm4C,EAAQ9F,YAA2C,MAArB4B,GAChCkE,EAAQ9F,WAAWgB,OAAOY,EAE9B,CACF,IAAGr1C,UAAU,CACXmB,SAAU,WACRo4C,EAAQnF,UAAUjpC,GAClBsuC,GACF,EACArgD,MAAO,SAAe6gD,GACpBV,EAAQ5xC,OAAOsyC,GACfR,GACF,EACA1tC,MAAO,SAAe1K,GACpB,OAAOk4C,EAAQhF,OAAOppC,EAAI9J,EAC5B,GAEJ,CACA,MACF,IAAK,eACHzI,KAAK4gD,6CAA6CxB,EAAiBA,EAAgBvxC,MACnF,MACF,QAEiJ9F,GAAU,GAE/J,EACA7D,EAAO08C,6CAA+C,SAAsDxB,EAAiBM,GAC3H1/C,KAAKmhD,uBAAuB/B,EAAiBM,GAC7C1/C,KAAK68C,6CACP,EACA34C,EAAOi9C,uBAAyB,SAAgC/B,EAAiBM,GAC/E,IAAIK,EAAe//C,KAAKy/C,0BAA0BL,EAAiBM,GACnE1/C,KAAK+7C,+BAA+BiE,cAAchgD,KAAKi6C,WAAY8F,GACnE//C,KAAKq+C,yBAAyB,CAAC0B,GACjC,EAaA77C,EAAOq8C,+BAAiC,SAAwCR,EAAcU,GAC5F,IAAIa,EAEAtD,EAAQyC,EAAYzC,MAEpBuD,EADKd,EAAYztD,KACF5B,IAAIwN,QAAQtN,KAAK,KAChCkwD,EAAiBxhD,KAAKq6C,oBAAoB/8C,IAAI0gD,GAC5B,MAAlBwD,IACFA,EAAiB,IAAI3oC,IACrB7Y,KAAKq6C,oBAAoB1gC,IAAIqkC,EAAOwD,IAEtC,IAUI3d,EAVA4d,EAAgBD,EAAelkD,IAAIikD,GACnCG,EAAoC,MAAjBD,GAAgD,aAAvBA,EAAcrtC,KAAsBqtC,EAAc1E,UAAY,KAC9GyE,EAAe7nC,IAAI4nC,EAAS,CAC1BntC,KAAM,cACNqsC,YAAaA,IAOU,WAArBA,EAAYrsC,KACdyvB,EAAW4c,EAAY5c,SACO,UAArB4c,EAAYrsC,KACrByvB,EAAW4c,EAAYvsC,SAASmO,OAG2Hta,GAAU,GAEvK,IAcI45C,EACAC,EAfAC,EAAe9B,EAAahhD,OAAOzB,IAAIumC,GACvCie,GAA2E,QAAxDR,EAAwBvB,EAAazX,qBAAqD,IAA1BgZ,EAAmCA,EAAwB,IAAItjD,QAAO,SAAUyqC,GACrK,IAAIsZ,EAAUzqB,EAAiBmR,EAAapmB,OAAQomB,EAAarO,UACjE,OAEEqO,EAAapmB,SAAWwhB,GAGxBke,IAAYle,CAEhB,IAGkB,MAAhBge,GAAkJ95C,GAAU,GAG9J,IAAIi6C,EAAsBhiD,KAAKmlC,QAAQ7nC,IAAIumC,GAC3C,GAA2B,MAAvBme,EAA6B,CAG/BL,EAAmBjjB,EAAkBzE,OAAO+nB,EAAoBrpB,OAAQkpB,GACxE,IAAII,EAAiB,IAAIppC,IACrBqpC,EAAgB,SAAuBx0C,GACzC,IAAIrc,EAgYZ,SAAyB1C,GACvB,IAAIwzD,EACJ,OAAiE,QAAzDA,EAAkB9vC,KAAKC,UAAUktB,EAAW7wC,WAAyC,IAApBwzD,EAA6BA,EAAkB,EAC1H,CAnYkBC,CAAgB10C,GAC1Bu0C,EAAetoC,IAAItoB,EAAKqc,EAC1B,EACAs0C,EAAoB1Z,cAAch4C,QAAQ4xD,GAC1CJ,EAAexxD,QAAQ4xD,GACvBN,EAAqB7lD,MAAMs6B,KAAK4rB,EAAe36B,SACjD,MACEq6B,EAAmBE,EACnBD,EAAqBE,EASvB,GAPA9hD,KAAKmlC,QAAQxrB,IAAIkqB,EAAU,CACzBlL,OAAQgpB,EACRrZ,cAAesZ,IAKO,MAApBF,EAA0B,CAC5B,IAAIvD,EAAmBn+C,KAAKu+C,6BAA6BmD,GACzD1hD,KAAKq+C,yBAAyBF,EAChC,CACF,EAOAj6C,EAAOq6C,6BAA+B,SAAsCR,GAC1E,IAAIsE,EAAUriD,KACVwgD,EAAgB,GAkDpB,OAjDAzC,EAAqBztD,SAAQ,SAAUgyD,GACrC,IAAItE,EAAQsE,EAAoBtE,MAC9BhrD,EAAOsvD,EAAoBtvD,KAC3BkgB,EAAWovC,EAAoBpvC,SAC7BsuC,EAAiBa,EAAQhI,oBAAoB/8C,IAAI0gD,GAKrD,GAJsB,MAAlBwD,IACFA,EAAiB,IAAI3oC,IACrBwpC,EAAQhI,oBAAoB1gC,IAAIqkC,EAAOwD,KAEP,IAA9BxD,EAAMnqD,QAAQ,WAAmB,CACnC,IAAI0tD,EAAUvuD,EAAK5B,IAAIwN,QAAQtN,KAAK,KAChCmwD,EAAgBD,EAAelkD,IAAIikD,GACvC,GAAqB,MAAjBE,EAMF,OALAA,EAAgB,CACdrtC,KAAM,WACN2oC,UAAW,CAACuF,SAEdd,EAAe7nC,IAAI4nC,EAASE,GAEvB,GAA2B,aAAvBA,EAAcrtC,KAEvB,YADAqtC,EAAc1E,UAAUh/C,KAAKukD,GAG/B,IAAI7B,EAAcgB,EAAchB,YACT,UAArBA,EAAYrsC,MAAyNrM,GAAU,GACjPy4C,EAAcziD,KAAKskD,EAAQ3B,sBAAsB1C,EAAOhrD,EAAMytD,EAAavtC,GAC7E,KAAO,CAKL,IAAIqvC,EAAWvvD,EAAKkmC,MAAM,GAAI,GAAG9nC,IAAIwN,QAAQtN,KAAK,KAC9CkxD,EAAiBhB,EAAelkD,IAAIilD,GACxC,GAAsB,MAAlBC,EAMF,OALAA,EAAiB,CACfpuC,KAAM,WACN2oC,UAAW,CAACuF,SAEdd,EAAe7nC,IAAI4oC,EAAUC,GAExB,GAA4B,aAAxBA,EAAepuC,KAExB,YADAouC,EAAezF,UAAUh/C,KAAKukD,GAGhC,IAAIG,EAAeD,EAAe/B,YACV,WAAtBgC,EAAaruC,MAA6NrM,GAAU,GACtPy4C,EAAcziD,KAAKskD,EAAQK,uBAAuB1E,EAAOhrD,EAAMyvD,EAAcvvC,GAC/E,CACF,IACOstC,CACT,EACAt8C,EAAOw8C,sBAAwB,SAA+B1C,EAAOhrD,EAAMytD,EAAavtC,GACtF,IAAIyvC,EACA9e,EAAW4c,EAAYvsC,SAASmO,OAChC89B,EAAsBngD,KAAKk6C,iBAC/Bl6C,KAAKk6C,iBAA6E,QAAzDyI,EAAwBlC,EAAYpe,uBAAuD,IAA1BsgB,EAAmCA,EAAwB3iD,KAAKk6C,iBAC1J,IAAI6F,EAAenB,EAAkB1rC,EAAUutC,EAAYvsC,SAAUusC,EAAY9a,SAAU,CACzFtD,gBAAiBriC,KAAKk6C,iBACtBniB,UAAW/3B,KAAKioC,WAChBj1C,KAAMytD,EAAYztD,KAClBsmD,+BAAwE,MAAxCt5C,KAAKq5C,gCAA0Cr5C,KAAK6+C,0CAA4C,KAChItF,8BAA+Bv5C,KAAKm7C,+BACpC1B,yBAA0Bz5C,KAAKm6C,0BAC/B3F,8BAA+Bx0C,KAAKo1C,iCAEtCp1C,KAAK+7C,+BAA+BiE,cAAchgD,KAAKi6C,WAAY8F,GAInE,IAAI6C,EAAc5iD,KAAKmlC,QAAQ7nC,IAAIumC,GAClB,MAAf+e,GAAiL76C,GAAU,GAC7L,IAAIugC,EAAgBsa,EAAYta,cAChC,GAA6B,IAAzBA,EAAct0C,OAAc,CAC9B,IAAI6uD,EACAC,EAA2B,CAC7B9xB,OAAQ,KACRsX,cAAeA,EACf0W,wBAAyB,KACzBC,iBAAkB,KAClBlgD,OAAQ+/B,EAAkBr0B,SAC1By0C,SAAoJ,KAAxF,QAAjD2D,EAAwB3vC,EAAS49B,kBAAkD,IAA1B+R,OAAmC,EAASA,EAAsBjF,WAExI59C,KAAK+7C,+BAA+BiE,cAAchgD,KAAKi6C,WAAY6I,EACrE,CAEA,OADA9iD,KAAKk6C,iBAAmBiG,EACjBJ,CACT,EAKA77C,EAAOw+C,uBAAyB,SAAgC1E,EAAOhrD,EAAMytD,EAAavtC,GACxF,IAAI2wB,EAAW4c,EAAY5c,SACzBh2B,EAAO4yC,EAAY5yC,KACnBve,EAAYmxD,EAAYnxD,UACxB+yC,EAAkBoe,EAAYpe,gBAC5B8d,EAAsBngD,KAAKk6C,iBAC/Bl6C,KAAKk6C,iBAAuC,OAApB7X,QAAgD,IAApBA,EAA6BA,EAAkBriC,KAAKk6C,iBAExG,IAAI1Q,EAAQ37B,EAAKo1B,WAAW,IACjB,MAATuG,GAAgC,gBAAfA,EAAMp1B,OAA2C,IAAjBo1B,EAAMzuB,SAAmJhT,GAAU,GACtN,IAAIg7C,EAAwB/iD,KAAKgjD,qBAAqB9vC,EAAU2wB,EAAU2F,EAAOl6C,EAAW0D,EAAMytD,EAAYztD,MAC5Gs1C,EAAgBya,EAAsBza,cACtC2a,EAASF,EAAsBE,OAC/BC,EAAYH,EAAsBG,UAClCn/C,EAAUg/C,EAAsBh/C,QAChCg8C,EAAegD,EAAsBhD,aACrCtmB,EAAaspB,EAAsBtpB,WA+BrC,GA3BAz5B,KAAK+7C,+BAA+BiE,cAAchgD,KAAKi6C,WAAY8F,GAAc,SAAUxpB,GACzF,IAAI4sB,EAAsB5sB,EAAMj5B,IAAIumC,GACpC,GAA2B,MAAvBsf,EAAJ,CAIA,IAAIC,EAAeD,EAAoBnqB,iBAAiBS,GACxD,GAAoB,MAAhB2pB,GAIAA,EAAapvD,SAAW+P,EAAQ/P,SAAUovD,EAAaxpD,MAAK,SAAUypD,EAAa9yD,GACrF,OAAOwT,EAAQxT,MAAY8yD,GAAeA,EAAYtrB,YACxD,IAFA,CASA,IAAIurB,GAAY,EAAIjsC,EAA6B,SAAG+rC,GACpDE,EAAUJ,GAAa3sB,EAAMj5B,IAAI2lD,GACjCE,EAAoBhqB,iBAAiBmqB,EAAW7pB,EALhD,CAZA,CAkBF,IAI6B,IAAzB6O,EAAct0C,OAAc,CAC9B,IAAI8uD,EAA2B,CAC7B9xB,OAAQ,KACRsX,cAAeA,EACf0W,wBAAyB,KACzBC,iBAAkB,KAClBlgD,OAAQ+/B,EAAkBr0B,SAC1By0C,SAAS,GAEXl/C,KAAK+7C,+BAA+BiE,cAAchgD,KAAKi6C,WAAY6I,EACrE,CAEA,OADA9iD,KAAKk6C,iBAAmBiG,EACjBJ,CACT,EACA77C,EAAO8+C,qBAAuB,SAA8B9vC,EAAU2wB,EAAU2F,EAAOl6C,EAAW0D,EAAMuwD,GACtG,IAAIC,EAAcC,EAAqBxmD,EAAMymD,EACzC1gD,EAAOkQ,EAASlQ,KACF,kBAATA,GAA8K+E,GAAU,GACjM,IAAI47C,EAA+C,QAAhCH,EAAeha,EAAMsC,aAAoC,IAAjB0X,EAA0BA,EAAeha,EAAM3oC,KACtG44B,EAAasH,EAAcyI,EAAOl6C,GAIlCszD,EAAc5iD,KAAKmlC,QAAQ7nC,IAAIumC,GAClB,MAAf+e,GAAkL76C,GAAU,GAC9L,IAAI85C,EAAee,EAAYjqB,OAC7B2P,EAAgBsa,EAAYta,cAK1BvkC,EAAU26B,EAAkBsH,mBAAmB6b,EAAcpoB,GACpD,MAAX11B,GAA6LgE,GAAU,GAGzM,IAAI67C,EAAiB5wD,EAAKA,EAAKgB,OAAS,GACpCkvD,EAAYW,SAASD,EAAgB,IACvCV,IAAcU,GAAkBV,GAAa,GAAkLn7C,GAAU,GAC3O,IAAI49B,EAA0D,QAA9C8d,EAAsBja,EAAMoP,oBAAkD,IAAxB6K,EAAiCA,EAAsBzgD,EAAKg/B,GAC5G,kBAAb2D,GAA6K59B,GAAU,GAIhM,IAAIk7C,EAA6M,QAAnMhmD,EAAgE,QAAxDymD,EAAmB1jD,KAAKioC,WAAWjlC,EAAM2iC,UAA4C,IAArB+d,EAA8BA,EAA+B,OAAZ3/C,QAAgC,IAAZA,OAAqB,EAASA,EAAQm/C,UAAiC,IAATjmD,EAAkBA,EAE3Oq6B,EAAiBuM,EAAUpK,EAAYypB,GACnB,kBAAXD,GAA8Kl7C,GAAU,GAGjM,IAAImM,EAAW+rB,EAA4BuJ,EAAOyZ,EAAQ3zD,GAKtDqyD,EAAmBjjB,EAAkBhvC,MAAMmyD,GAC3C79C,GAAU,EAAIqT,EAA6B,SAAGtT,GAgBlD,OAfAC,EAAQk/C,GAAaD,EACrBvkB,EAAkBwH,mBAAmByb,EAAkBloB,EAAYz1B,GACnEhE,KAAKmlC,QAAQxrB,IAAIkqB,EAAU,CACzBlL,OAAQgpB,EACRrZ,cAAeA,IAWV,CACLA,cAAeA,EACf2a,OAAQA,EACRC,UAAWA,EACXn/C,QAASA,EACTg8C,aAdiBnB,EAAkB1rC,EAAUgB,EAAUyxB,EAAU,CACjEtD,gBAAiBriC,KAAKk6C,iBACtBniB,UAAW/3B,KAAKioC,WAChBj1C,KAAM,GAAGnE,QAAO,EAAIwoB,EAA6B,SAAGksC,GAAoB,CAACI,EAAa/kD,OAAOskD,KAC7F5J,+BAAwE,MAAxCt5C,KAAKq5C,gCAA0Cr5C,KAAK6+C,0CAA4C,KAChItF,8BAA+Bv5C,KAAKm7C,+BACpC1B,yBAA0Bz5C,KAAKm6C,0BAC/B3F,8BAA+Bx0C,KAAKo1C,iCAQpC3b,WAAYA,EAEhB,EACAv1B,EAAOk9C,0BAA4B,SAAmC0C,EAAYC,GAChF,IAAIC,EAAUhkD,KACdA,KAAKu7C,aAAax9C,KAAKgmD,GACiB,MAApC/jD,KAAKk8C,8BAGTl8C,KAAKk8C,4BAA8B4H,GAAW,WAC5CE,EAAQ9H,4BAA8B,KACtC,IAAIuC,EAAgBuF,EAAQ/H,mBAC5B+H,EAAQrF,wBAAwBF,GAChC,IACEjyB,EADEC,GAAa,EAAI9B,EAAqC,SAAGq5B,EAAQzI,cAErE,IACE,IAAK9uB,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,EAErD1Y,EADeikB,EAAO79B,QAExB,CACF,CAAE,MAAOuhB,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACAyjD,EAAQzI,aAAe,EACzB,IACF,EACAr3C,EAAOy6C,wBAA0B,SAAiCF,GAC3C,MAAjBA,GAAyBA,EAAczqD,OAAS,GAClDgM,KAAKw6C,kBAAkBvgB,OAAOj6B,KAAKi6C,WAAWzzC,QAAS,IAAIglB,IAAIizB,GAEnE,EACAv6C,EAAOi4C,0BAA4B,WACjCn8C,KAAKw6C,kBAAkBjyC,SAASvI,KAAKi6C,WAAWzzC,QAClD,EACAtC,EAAO63C,6BAA+B,WAEpC,OADA/7C,KAAKs7C,YAAYvvB,IAAI/rB,KAAKk6C,kBACnBl6C,KAAK46C,iBAAiB56C,KAAKk6C,iBACpC,EACAh2C,EAAO+/C,kBAAoB,WACzB,OAA8B,IAA1BjkD,KAAKs7C,YAAY5/C,KACZ,IAAI8vB,IAAI,CAACxrB,KAAKk6C,mBAEdl6C,KAAKs7C,WAEhB,EACAp3C,EAAO+3C,iBAAmB,SAA0B11C,GAClD,IAEEk2B,EAFEgiB,EAAgB,IAAIjzB,IACpBmR,GAAa,EAAIhS,EAAqC,SAAG3qB,KAAKikD,qBAElE,IACE,IAAKtnB,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAIohB,EAAkB5F,EAAO9tC,MAChBqR,KAAK46C,iBAAiBvY,GAAiB6hB,IAAI39C,GACjDjW,SAAQ,SAAUgkB,GACvB,OAAOmqC,EAAc1yB,IAAIzX,EAC3B,GACF,CACF,CAAE,MAAOpE,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACA,OAAOxE,MAAMs6B,KAAKooB,EACpB,EACAv6C,EAAOw6C,YAAc,WACnB,IACEphB,EADEE,GAAa,EAAI7S,EAAqC,SAAG3qB,KAAKikD,qBAElE,IACE,IAAKzmB,EAAWlqC,MAAOgqC,EAASE,EAAWlR,KAAKrL,MAAO,CACrD,IAAIohB,EAAkB/E,EAAO3uC,MACxBqR,KAAKq7C,mBAAmBn6B,IAAImhB,IAC/BriC,KAAKq7C,mBAAmB1hC,IAAI0oB,EAAiBriC,KAAK+6C,UAAU1Y,GAAiBn7B,OAAOlH,KAAKi6C,YAE7F,CACF,CAAE,MAAO/pC,GACPstB,EAAWjqC,EAAE2c,EACf,CAAE,QACAstB,EAAWj9B,GACb,CACF,EACA2D,EAAOk4C,qBAAuB,WAC5B,IACE1e,EADEC,GAAa,EAAIhT,EAAqC,SAAG3qB,KAAKq7C,mBAAmB/zB,UAErF,IACE,IAAKqW,EAAWrqC,MAAOoqC,EAASC,EAAWrR,KAAKrL,MAAO,CACpCyc,EAAO/uC,MACb2V,SACb,CACF,CAAE,MAAO4L,GACPytB,EAAWpqC,EAAE2c,EACf,CAAE,QACAytB,EAAWp9B,GACb,CACAP,KAAKq7C,mBAAmBl6B,OAC1B,EACAjd,EAAOm7C,uBAAyB,WAC9B,IAAI9K,EAAkBv0C,KAAKg1C,iBAE3B,OADCT,GAA0KxsC,GAAU,GAC9KwsC,CACT,EACOwE,CACT,CA/nC4B,GAqpC5B,SAAS6F,EAAkB1rC,EAAUgB,EAAUyxB,EAAUp7B,GACvD,IAAI45C,EACAnhD,EAAOkQ,EAASlQ,KAClBguB,EAAS9d,EAAS8d,OAChBjyB,EAAS+/B,EAAkBr0B,SAC3BkuB,EAAS+F,EAAkBj0B,OAAOyJ,EAASmO,OAAQsjB,GACvD5mC,EAAO4a,IAAIzF,EAASmO,OAAQsW,GAC5B,IAAIonB,EAAejH,EAAwBsL,UAAUrlD,EAAQmV,EAAUlR,EAAMuH,GAC7E,OAAO,EAAIhJ,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGw+C,GAAe,CAAC,EAAG,CAC1F/uB,OAAQA,EACRkuB,SAAoJ,KAAxF,QAAjDiF,EAAwBjxC,EAAS49B,kBAAkD,IAA1BqT,OAAmC,EAASA,EAAsBvG,WAE1I,CAMA,SAASkB,EAAkCpxC,GACzC,IAAIsxC,EAA0BtxC,EAAQsxC,wBACP,MAA3BA,GAAsE,IAAnCA,EAAwBhrD,QAC4K+T,GAAU,EAEvP,CACAzI,EAAOC,QAAU,CACfgO,QAvrCF,SAAiBrT,GACf,OAAO,IAAI6+C,EAAS7+C,EACtB,sCC/BA,IACIqH,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAElDigC,EADajgC,EAAQ,MACQigC,kBAC3Br4B,EAAY5H,EAAQ,MAuFxBb,EAAOC,QAAU,CACfs0C,kBAdF,SAA2BwQ,EAAkBpN,EAAqBv2C,GAChE,GAA2B,MAAvBu2C,EACF,OAAOoN,EAET,IAAIC,GAAgB,EAAI/iD,EAAwB,SAAG,CAAC,EAAG8iD,GACnDE,EAAW7jD,EAAO0/B,EAAkB1/B,EAAM2jD,GAAoB,CAAC,EAMnE,OALApN,EAAoB3mD,SAAQ,SAAUk0D,GACpC,IAAIC,EACA91D,EAAsD,QAA7C81D,EAAqBF,EAASC,EAAI3jD,aAA0C,IAAvB4jD,EAAgCA,EAAqBD,EAAIE,aAC3HJ,EAAcE,EAAI3jD,MAAQlS,CAC5B,IACO21D,CACT,EAGEl7C,qBAhFF,SAA8BpC,EAAUiG,EAAe03C,GAIrD,OAAoC,MAAhC39C,EAASiwC,oBACJ0N,GAGT39C,EAASiwC,oBAAoB3mD,SAAQ,SAAUioD,GAC7C,IAAIoM,EAAkBhxD,eAAe4kD,EAAW13C,MAIhD,OADAvR,EAAYA,IAAa,EAAIiS,EAAwB,SAAG,CAAC,EAAGojD,GACpDpM,EAAWnkC,MACjB,IAAK,gBACH9kB,EAAUipD,EAAW13C,MAAQ03C,EAAWmM,aACxC,MACF,IAAK,eACH,IAAKz3C,EAActZ,eAAe4kD,EAAW13C,MAAO,CAUlDvR,EAAUipD,EAAW13C,WAAQ1G,EAC7B,KACF,CACA7K,EAAUipD,EAAW13C,MAAQoM,EAAcsrC,EAAW13C,MACtD,MACF,QAE6KkH,GAAU,GAE3L,IACOzY,GAAaq1D,GA/BpB,IAAIr1D,CAgCN,EA0CE4yC,sBAhCF,SAA+B37B,EAAWgoC,EAAmBj/C,GAC3D,IAAIg/C,EAAqB,CAAC,EAa1B,OAZA/nC,EAAU0wC,oBAAoB3mD,SAAQ,SAAUk0D,GAC9C,IAAI71D,EAAQ61D,EAAIE,aACW,MAAvBp1D,EAAUk1D,EAAI3jD,QAChBlS,EAAQW,EAAUk1D,EAAI3jD,OAExBytC,EAAmBkW,EAAI3jD,MAAQlS,CACjC,IACyB,MAArB4/C,GACFhgD,OAAO4C,KAAKo9C,GAAmBj+C,SAAQ,SAAUs0D,GAC/CtW,EAAmBsW,GAAWrW,EAAkBqW,GAAStnD,KAC3D,IAEKgxC,CACT,sCC7EA,IACI/sC,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChD29B,EAA8B39B,EAAQ,MACtCwF,EAAWxF,EAAQ,MACrBgiC,EAAuCx8B,EAASw8B,qCAChDC,EAAgCz8B,EAASy8B,8BACvCnE,EAAkB99B,EAAQ,MAC1B0kD,EAA6B1kD,EAAQ,MACrC0+B,EAAwB1+B,EAAQ,MAChC2kD,EAAkC3kD,EAAQ,MAC1C+H,EAAoB/H,EAAQ,MAC5B4kD,EAAmB5kD,EAAQ,MAC3B6kD,EAA6B7kD,EAAQ,MACrC8kD,EAAoB9kD,EAAQ,MAC5B+kD,EAAoB/kD,EAAQ,MAC5B2+B,EAAoB3+B,EAAQ,MAE5Bq+B,GADYr+B,EAAQ,MACkB,WACxC,SAASq+B,EAAuBtkC,GAC9B,IACIirD,EAAaC,EAAuBC,EAAuBC,EAAmBC,EAAuBC,EAAuBC,EAAmBC,EAAkBC,EADjKjjD,EAAQ1C,KAEZA,KAAK4lD,WAAa1rD,EAAO0rD,WACzB5lD,KAAKm6C,2BAAgE,IAApCjgD,EAAOu/C,yBACxC,IAAIlF,EAAkBr6C,EAAOq6C,gBACzB+E,EAAiCp/C,EAAOo/C,+BACxCC,EAAgCr/C,EAAOq/C,8BAS3Cv5C,KAAKoX,MAAuC,QAA9B+tC,EAAcjrD,EAAOw/C,WAAiC,IAAhByL,EAAyBA,EAAczlD,EAC3FM,KAAK6lD,oBAA+E,QAAxDT,EAAwBlrD,EAAO2rD,2BAA2D,IAA1BT,EAAmCA,EAAwBJ,EACvJhlD,KAAK8lD,sBAA0F,QAAjET,EAAwBnrD,EAAO6rD,oCAAoE,IAA1BV,EAAmCA,GAA+E,IAAvDn9C,EAAkB89C,kCAA6C,UAAY,OAC7OhmD,KAAKg1C,iBAAmBT,EACxBv0C,KAAKu6C,qBAAuB,IAAI1hC,IAChC7Y,KAAKimD,SAAWpB,EAA2B7kD,KAAM9F,EAAOg3C,SACxDlxC,KAAKioC,WAAwD,QAA1Cqd,EAAoBprD,EAAO69B,iBAA6C,IAAtButB,EAA+BA,EAAoBP,EACxH/kD,KAAKooC,sBAAkF,QAAzDmd,EAAwBrrD,EAAO2tC,4BAA4D,IAA1B0d,EAAmCA,EAAwB,GAC1JvlD,KAAKkmD,cAAgB,IAAIhB,EAAkBhrD,EAAOq8B,MAA4D,QAApDivB,EAAwBtrD,EAAO0tC,uBAAuD,IAA1B4d,EAAmCA,EAAwB1nB,EAA6B99B,KAAKioC,WAAYjoC,KAAKooC,uBACpOpoC,KAAK66C,WAAwD,QAA1C4K,EAAoBvrD,EAAOs/C,iBAA6C,IAAtBiM,EAA+BA,EAAoB,KACxHzlD,KAAKmmD,OAASjsD,EAAOq8B,MACrBv2B,KAAKuK,QAAUrQ,EAAOqQ,QACtBvK,KAAKomD,UAAqD,QAAxCV,EAAmBxrD,EAAOqrB,gBAA2C,IAArBmgC,GAA8BA,EAChG1lD,KAAKqmD,SAAW,SAAUC,GACxB,OAAO5jD,EAAMujD,SAAWpB,EAA2BniD,EAAO4jD,EAC5D,EAQAtmD,KAAKw6C,kBAA0E,QAArDmL,EAAwBzrD,EAAOi/C,wBAAwD,IAA1BwM,EAAmCA,EAAwB,IAAI9mB,EACtJ7+B,KAAKq5C,gCAAkCC,EACvCt5C,KAAKm7C,+BAAiC5B,EACtCv5C,KAAKo1C,+BAAiCl7C,EAAOs6C,8BAI7CsQ,EAAgC9kD,KAClC,CACA,IAAIkE,EAASs6B,EAAuB9qC,UAmSpC,OAlSAwQ,EAAO2W,SAAW,WAChB,OAAO7a,KAAKmmD,MACd,EACAjiD,EAAOslB,WAAa,WAClB,OAAOxpB,KAAKimD,QACd,EACA/hD,EAAOqiD,oBAAsB,WAC3B,OAAOvmD,KAAKw6C,iBACd,EACAt2C,EAAOsiD,aAAe,WACpB,OAAOxmD,KAAK66C,UACd,EACA32C,EAAO6uC,gBAAkB,SAAyB0T,GAEhD,MAAuB,WADLzmD,KAAKu6C,qBAAqBj9C,IAAImpD,EAElD,EACAviD,EAAO6d,gCAAkC,WACvC,OAAO/hB,KAAK8lD,oBACd,EACA5hD,EAAOi7C,YAAc,SAAqBuH,GACxC,IAAIj7C,EAASzL,KAWb,OAJAA,KAAK2mD,kBAAiB,WACpBl7C,EAAOy6C,cAAc/G,YAAYuH,GACjCj7C,EAAOy6C,cAAchC,KACvB,IACO,CACL5/C,QAXY,WACZmH,EAAOk7C,kBAAiB,WACtBl7C,EAAOy6C,cAAclK,aAAa0K,GAClCj7C,EAAOy6C,cAAchC,KACvB,GACF,EAQF,EACAhgD,EAAO83C,aAAe,SAAsB/hB,GAC1C,IAAIltB,EAAS/M,KACbA,KAAK2mD,kBAAiB,WACpB55C,EAAOm5C,cAAclK,aAAa/hB,GAClCltB,EAAOm5C,cAAchC,KACvB,GACF,EACAhgD,EAAO0iD,cAAgB,SAAuB3sB,EAAQ4sB,GACpD,IAAIjpC,EAAS5d,KACbA,KAAK2mD,kBAAiB,WACpB/oC,EAAOsoC,cAAclK,aAAa/hB,GAClCrc,EAAOsoC,cAAc/G,YAAY0H,GACjCjpC,EAAOsoC,cAAchC,KACvB,GACF,EACAhgD,EAAO2lC,cAAgB,SAAuBuP,GAC5C,IAAI3wC,EAAezI,KAAK8mD,SAAS,CAC/BC,aAAc,WACZ,OAAO9oB,EAAgBxzB,QAAO,SAAUk8B,GAAQ,GAClD,EACAsS,iBAAiB,EACjB1yC,UAAW6yC,EAAiB7yC,UAC5B6yC,iBAAkBA,EAClB3pD,QAAS,OACR2X,UAAU,CAAC,GACd,MAAO,CACL9C,QAAS,WACP,OAAOmE,EAAaD,aACtB,EAEJ,EACAtE,EAAO2C,MAAQ,SAAeN,GAC5B,OAA0C,IAAtCvG,KAAKooC,sBAAsBp0C,QAiOnC,SAAyCuS,GACvC,MAAoC,cAA7BA,EAAU4f,KAAKtY,KAAKuG,MAAmE,MAA3C7N,EAAU4f,KAAKtY,KAAK2qC,mBACzE,CAnOoDwO,CAAgCzgD,GAGzEvG,KAAKinD,qCAAqC1gD,EAAWvG,KAAKooC,uBAFxDpoC,KAAKmmD,OAAOt/C,MAAMN,EAG7B,EACArC,EAAO87C,cAAgB,SAAuBz5C,EAAWmH,GACvD1N,KAAK8mD,SAAS,CACZC,aAAc,WACZ,OAAO9oB,EAAgB5H,KAAK,CAC1BrzB,KAAM0K,GAEV,EACAurC,iBAAiB,EACjB1yC,UAAWA,EACX6yC,iBAAkB,KAClB3pD,QAAS,OACR2X,UAAU,CAAC,EAChB,EACAlD,EAAO4lC,aAAe,SAAsBr6C,GAC1C,IAAI0uB,EAASne,KACbA,KAAK2mD,kBAAiB,WACpBxoC,EAAO+nC,cAAcpc,aAAar6C,GAClC0uB,EAAO+nC,cAAchC,KACvB,GACF,EACAhgD,EAAO6C,OAAS,SAAgBmiC,GAC9B,OAAOlpC,KAAKmmD,OAAOp/C,OAAOmiC,EAC5B,EACAhlC,EAAOkD,UAAY,SAAmBR,EAAUsX,GAC9C,OAAOle,KAAKmmD,OAAO/+C,UAAUR,EAAUsX,EACzC,EACAha,EAAOgD,OAAS,SAAgBX,GAC9B,OAAOvG,KAAKmmD,OAAOj/C,OAAOX,EAC5B,EACArC,EAAOqhB,SAAW,WAChB,OAAOvlB,KAAKomD,SACd,EACAliD,EAAO+iD,qCAAuC,SAA8C1gD,EAAW+tC,GACrG,IAAIp1B,EAASlf,KACTs1C,EAASxW,EAAkBr0B,SAC3B1L,EAASiB,KAAKmmD,OAAOe,YACrBlwD,EAASgJ,KAAKmmD,OAAOt/C,MAAMN,EAAW,CACxC+tC,SAAUA,EACVD,uBAAwBlS,EACxBgS,kBAAmB,SAA2B9R,GAE5C,OADAD,EAA8BC,GACvBtjC,CACT,EACAq1C,kBAAmB,SAA2B/R,GAE5C,OADAD,EAA8BC,GACvBiT,CACT,IAQF,OANIA,EAAO55C,OAAS,GAClBsE,KAAK2mD,kBAAiB,WACpBznC,EAAOgnC,cAAciB,aAAa7R,GAClCp2B,EAAOgnC,cAAchC,KACvB,IAEKltD,CACT,EACAkN,EAAOyiD,iBAAmB,SAA0BnK,GAClD,IAAIhD,EAAYx5C,KAAK66C,WACJ,MAAbrB,EACFA,EAAUkD,SAASF,GAEnBA,GAEJ,EAUAt4C,EAAOqJ,QAAU,SAAiBtQ,GAChC,IAAI0iB,EAAS3f,KACTuG,EAAYtJ,EAAKsJ,UACrB,OAAOvG,KAAK8mD,SAAS,CACnBC,aAAc,WACZ,OAAOpnC,EAAO6J,aAAajc,QAAQhH,EAAUC,QAAQqH,KAAK+C,OAAQrK,EAAUC,QAAQlX,UAAWiX,EAAUC,QAAQ4G,aAAe,CAAC,EAAG,KACtI,EACA6rC,iBAAiB,EACjB1yC,UAAWA,EACX6yC,iBAAkB,KAClB3pD,QAAS,MAEb,EAUAyU,EAAOkjD,oBAAsB,SAA6B/qD,GACxD,IAAIujB,EAAS5f,KACTuG,EAAYlK,EAAMkK,UACpB9W,EAAU4M,EAAM5M,QAClB,OAAOuQ,KAAK8mD,SAAS,CACnBC,aAAc,WACZ,OAAOnnC,EAAO4J,aAAajc,QAAQhH,EAAUC,QAAQqH,KAAK+C,OAAQrK,EAAUC,QAAQlX,UAAWiX,EAAUC,QAAQ4G,aAAe,CAAC,EAAG,KACtI,EACA6rC,iBAAiB,EACjB1yC,UAAWA,EACX6yC,iBAAkB,KAClB3pD,QAASA,GAEb,EAYAyU,EAAO+lC,gBAAkB,SAAyB3tC,GAChD,IAMI88C,EANAhJ,EAASpwC,KACTuG,EAAYjK,EAAMiK,UACpBqjC,EAAqBttC,EAAMstC,mBAC3BxG,EAAoB9mC,EAAM8mC,kBAC1B3zC,EAAU6M,EAAM7M,QAChBs6C,EAAcztC,EAAMytC,YAStB,OAPIH,GAAsBxG,KACxBgW,EAAmB,CACjB7yC,UAAWA,EACX2M,SAAU02B,EACVn6C,QAAS2zC,IAGNpjC,KAAK8mD,SAAS,CACnBC,aAAc,WACZ,OAAO3W,EAAO5mB,aAAajc,QAAQhH,EAAUC,QAAQqH,KAAK+C,OAAQrK,EAAUC,QAAQlX,WAAW,EAAIiS,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGgF,EAAUC,QAAQ4G,aAAc,CAAC,EAAG,CACnM/C,OAAO,IACL0/B,EACN,EACAkP,iBAAiB,EACjB1yC,UAAWA,EACX6yC,iBAAkBA,EAClB3pD,QAASA,GAEb,EAWAyU,EAAO6kB,kBAAoB,SAA2Bs+B,GACpD,IAAI9gD,EAAY8gD,EAAM9gD,UACpBxH,EAASsoD,EAAMtoD,OACjB,OAAOiB,KAAK8mD,SAAS,CACnBC,aAAc,WACZ,OAAOhoD,CACT,EACAk6C,iBAAiB,EACjB1yC,UAAWA,EACX6yC,iBAAkB,KAClB3pD,QAAS,MAEb,EACAyU,EAAOojD,OAAS,WACd,IAAIC,EACJ,MAAO,0BAA0B14D,OAAgD,QAAxC04D,EAAmBvnD,KAAK4lD,kBAA6C,IAArB2B,EAA8BA,EAAmB,GAAI,IAChJ,EACArjD,EAAO4iD,SAAW,SAAkBU,GAClC,IAAI7G,EAAU3gD,KACV+mD,EAAeS,EAAMT,aACvB9N,EAAkBuO,EAAMvO,gBACxB1yC,EAAYihD,EAAMjhD,UAClB6yC,EAAmBoO,EAAMpO,iBACzB3pD,EAAU+3D,EAAM/3D,QACdg4D,EAAeznD,KAAKkmD,cACpB3vB,EAAQv2B,KAAKmmD,OACjB,OAAOloB,EAAgBxzB,QAAO,SAAUC,GACtC,IAAIg9C,EAAWzC,EAAkB13C,QAAQ,CACvC80B,gBAAiBF,EACjBpK,UAAW4oB,EAAQ1Y,WACnBgR,gBAAiBA,EACjBS,IAAKiH,EAAQvpC,MACb7Q,UAAWA,EACX2yC,oBAAqByH,EAAQpG,qBAC7BhG,gBAAiBoM,EAAQ3L,iBACzBmE,iBAAkBwH,EAAQnG,kBAC1BpB,iBAAkBA,EAClBJ,gBAAiB,SAAyB3W,GAExC,OADAD,EAA8BC,GACvBolB,CACT,EACAnO,+BAAgCqH,EAAQtH,gCACxCE,8BAA+BoH,EAAQxF,+BACvC3B,UAAWmH,EAAQ9F,WACnBrG,8BAA+BmM,EAAQvL,+BACvC1qC,KAAMA,EAGN3L,OAAQgoD,IACRlsC,SAAU,SAAkBwnB,GAE1B,OADAD,EAA8BC,GACvB9L,CACT,EACAkjB,yBAA0BkH,EAAQxG,0BAClC1qD,QAASA,IAEX,OAAO,WACL,OAAOi4D,EAAS7L,QAClB,CACF,GACF,EACOrd,CACT,CArV0C,IA8V1C,SAAS9+B,IAAiB,CAD1B8+B,EAAuB9qC,UAAU,6BAA8B,EAE/D4L,EAAOC,QAAUi/B,qCChXjB,IAAIl9B,EAAyBnB,EAAAA,MAAAA,QACzBoB,EAAiBD,EAAuBnB,EAAQ,OAChDwB,EAAmBL,EAAuBnB,EAAQ,OAClDyX,EAAkCzX,EAAQ,MAC1C2X,EAAgC3X,EAAQ,MACxCgC,EAAmBhC,EAAQ,MAC3B6X,EAAmB7X,EAAQ,MAC3B+H,EAAoB/H,EAAQ,MAE9BggC,EADahgC,EAAQ,MACcggC,wBACjC1vB,EAAYtQ,EAAQ,MACtB6/B,EAAoBvvB,EAAUuvB,kBAC9BE,EAAuBzvB,EAAUyvB,qBACjCW,EAAyBpwB,EAAUowB,uBACjC9+B,EAAW5B,EAAQ,MACnB4H,EAAY5H,EAAQ,MAqBpBwnD,GApBUxnD,EAAQ,MAoB6B,WACjD,SAASwnD,EAAgC5qD,EAASsF,EAAWvU,EAAOowB,EAAU3a,GAC5E,IAAIb,EAAQ1C,MACZ,EAAI2B,EAA0B,SAAG3B,KAAM,aAAa,WAClD0C,EAAMklD,QAAS,EACgB,oBAApBllD,EAAMmlD,WACfnlD,EAAMmlD,WAEV,IACA7nD,KAAK6nD,UAAY3pC,EACjBle,KAAK8nD,SAAW/qD,EAChBiD,KAAK+nD,MAAQ,CAAC,EACd/nD,KAAKgoD,WAAa3lD,EAClBrC,KAAKioD,OAAS,CAAC,EACfjoD,KAAKkoD,WAAa,CAAC,EACnBloD,KAAK4nD,QAAS,EACd5nD,KAAKmoD,qBAAuB5kD,EAC5BvD,KAAKiE,SAASnW,EAChB,CACA,IAAIoW,EAASyjD,EAAgCj0D,UAyF7C,OAxFAwQ,EAAOI,QAAU,WACf,IAAK,IAAIjT,KAAO2O,KAAKkoD,WACfloD,KAAKkoD,WAAWv0D,eAAetC,IACjC+2D,EAAgBpoD,KAAKkoD,WAAW72D,GAGtC,EACA6S,EAAOjB,QAAU,WACf,GAAIjD,KAAK4nD,OAAQ,CAGf,IACI95C,EADAH,EAAW3N,KAAK+nD,MAEpB,IAAK,IAAI12D,KAAO2O,KAAKkoD,WACnB,GAAIloD,KAAKkoD,WAAWv0D,eAAetC,GAAM,CACvC,IAAIwR,EAAW7C,KAAKkoD,WAAW72D,GAC3Bg3D,EAAW16C,EAAStc,GACxB,GAAIwR,EAAU,CACZ,IAAIylD,EAAWzlD,EAASI,WACpB6K,GAAYw6C,IAAaD,MAC3Bv6C,EAAWA,IAAY,EAAIvM,EAAwB,SAAG,CAAC,EAAGoM,IACjDtc,GAAOi3D,EAEpB,KAAO,CACL,IAAIC,EAAOvoD,KAAKioD,OAAO52D,GACnBm3D,OAAqBruD,IAATouD,EAAqBA,EAAO,MACxCz6C,GAAa3L,EAAiBqmD,EAAWH,MAC3Cv6C,EAAWA,IAAY,EAAIvM,EAAwB,SAAG,CAAC,EAAGoM,IACjDtc,GAAOm3D,EAEpB,CACF,CAEFxoD,KAAK+nD,MAAQj6C,GAAYH,EACzB3N,KAAK4nD,QAAS,CAChB,CACA,OAAO5nD,KAAK+nD,KACd,EACA7jD,EAAOa,YAAc,SAAqBjX,EAAOowB,GAC/Cle,KAAK6nD,UAAY3pC,GAC+C,IAA5DhW,EAAkB+C,uCACpBjL,KAAKiE,SAASnW,EAElB,EACAoW,EAAOD,SAAW,SAAkBnW,GAClCkS,KAAKioD,OAAS,CAAC,EACf,IAAIQ,EAAiB5nB,EAAuB7gC,KAAKgoD,WAAYl6D,GAC7D,IAAK,IAAIuD,KAAOo3D,EACd,GAAIA,EAAe90D,eAAetC,GAAM,CACtC,IAAIq3D,EAAgBD,EAAep3D,GAC/BwR,EAAW7C,KAAKkoD,WAAW72D,GACV,MAAjBq3D,GACc,MAAZ7lD,GACFA,EAASyB,UAEXzB,EAAW,MACqB,yBAAvB6lD,EAAct0C,KACP,MAAZvR,EACFA,EAAW,IAAI8lD,EAAqB3oD,KAAK8nD,SAAS1kD,YAAapD,KAAKmoD,qBAAsBO,EAAiC,MAAlB1oD,KAAK6nD,UAAmB7nD,KAAK4oD,YAEpI/lD,aAAoB8lD,GAAsK5gD,GAAU,GACtMlF,EAASgmD,YAAYH,IAGP,MAAZ7lD,EACFA,EAAW,IAAIimD,EAAiB9oD,KAAK8nD,SAAS1kD,YAAapD,KAAKmoD,qBAAsBO,EAAiC,MAAlB1oD,KAAK6nD,UAAmB7nD,KAAK4oD,YAEhI/lD,aAAoBimD,GAAmK/gD,GAAU,GACnMlF,EAASgmD,YAAYH,IAGzB1oD,KAAKioD,OAAO52D,GAAOvD,EAAMuD,GACzB2O,KAAKkoD,WAAW72D,GAAOwR,CACzB,CAEF7C,KAAK4nD,QAAS,CAChB,EACA1jD,EAAO0J,aAAe,SAAsBte,EAAWkX,GACrD,IAAK,IAAInV,KAAO2O,KAAKkoD,WACnB,GAAIloD,KAAKkoD,WAAWv0D,eAAetC,GAAM,CACvC,IAAIwR,EAAW7C,KAAKkoD,WAAW72D,GAC3BwR,GACFA,EAAS+K,aAAate,EAAWkX,EAErC,CAEFxG,KAAK4nD,QAAS,CAChB,EACOD,CACT,CA7GmD,IAiH/CmB,EAAgC,WAClC,SAASA,EAAiB1lD,EAAaG,EAAqB2Q,EAAU60C,EAAyB7qC,GAC7F,IAAIzS,EAASzL,MACb,EAAI2B,EAA0B,SAAG3B,KAAM,aAAa,SAAU4G,GAC5D6E,EAAOs8C,MAAQnhD,EAAS5D,KACxByI,EAAOu9C,eAAiBpiD,EAASyR,cACjC5M,EAAOw9C,uBAAyBriD,EAASiX,sBACzCpS,EAAOy9C,qBAAuBtiD,EAASkX,oBACvCrS,EAAOo8C,WACT,IACA,IAAI74C,EAAY5L,EAAY2D,OAAOmN,GACnClU,KAAK6nD,UAAY3pC,EACjBle,KAAK+nD,MAAQ/4C,EAAUhM,KACvBhD,KAAKgpD,eAAiBh6C,EAAUqJ,cAChCrY,KAAKipD,uBAAyBj6C,EAAU6O,sBACxC7d,KAAKkpD,qBAAuBl6C,EAAU8O,oBACtC9d,KAAK8Y,aAAe1V,EACpBpD,KAAKmoD,qBAAuB5kD,EAC5BvD,KAAKmpD,UAAYj1C,GAC+C,IAA5DhM,EAAkB+C,sCAChB89C,IACF/oD,KAAKopD,cAAgBhmD,EAAYgE,UAAU4H,EAAWhP,KAAK4oD,YAG7D5oD,KAAKopD,cAAgBhmD,EAAYgE,UAAU4H,EAAWhP,KAAK4oD,UAE/D,CACA,IAAIxuC,EAAU0uC,EAAiBp1D,UA0F/B,OAzFA0mB,EAAQ9V,QAAU,WACZtE,KAAKopD,gBACPppD,KAAKopD,cAAc9kD,UACnBtE,KAAKopD,cAAgB,KAEzB,EACAhvC,EAAQnX,QAAU,WAChB,IAA4B,IAAxBjD,KAAKgpD,eAAyB,CAsBhC,IAAInpC,EAA0BjI,EAAgC5X,KAAK8Y,aAAc9Y,KAAKmpD,UAAUt7C,KAAM7N,KAAKmpD,UAAU70C,OACjH4G,EAAsC,OAA5B2E,QAAgE,IAA5BA,OAAqC,EAASA,EAAwB3E,QACxH,GAAe,MAAXA,IACElb,KAAKmoD,qBAEF,CACL,IAAIkB,EACAhuC,EAA8K,QAAzJguC,EAAoD,OAA5BxpC,QAAgE,IAA5BA,OAAqC,EAASA,EAAwBxE,yBAAyD,IAA1BguC,EAAmCA,EAAwB,GAWrP,MATArpD,KAAK8Y,aAAa1B,MAAM,CACtBvW,KAAM,oBACNmC,KAAMhD,KAAK+nD,MACX/gD,SAAUhH,KAAKmpD,UAAUt7C,KACzBsN,cAAc,EACd9C,cAAerY,KAAKgpD,eACpB5tC,iBAAiB,EACjBC,kBAAmBA,IAEfH,CACR,CAEJ,CAEA,OADApD,EAA8B9X,KAAK8Y,aAAc9Y,KAAKipD,uBAAwBjpD,KAAKkpD,sBAC5ElpD,KAAK+nD,KACd,EACA3tC,EAAQyuC,YAAc,SAAqB30C,GACzC,GAA0B,MAAtBlU,KAAKopD,gBAAyBppB,EAAkB9rB,EAAUlU,KAAKmpD,WAAnE,CAGAnpD,KAAKsE,UACL,IAAIsC,EAAW5G,KAAK8Y,aAAa/R,OAAOmN,GACxClU,KAAK+nD,MAAQ/vC,EAAiBhY,KAAK+nD,MAAOnhD,EAAS5D,MACnDhD,KAAKgpD,eAAiBpiD,EAASyR,cAC/BrY,KAAKipD,uBAAyBriD,EAASiX,sBACvC7d,KAAKkpD,qBAAuBtiD,EAASkX,oBACrC9d,KAAKmpD,UAAYj1C,EACjBlU,KAAKopD,cAAgBppD,KAAK8Y,aAAa1R,UAAUR,EAAU5G,KAAK4oD,UARhE,CASF,EACAxuC,EAAQxM,aAAe,SAAsBte,EAAWkX,GACtD,IAAIzE,EAASzS,EAAW0Q,KAAKmpD,UAAU75D,WAAvC,CAiBA,IAAIqtB,EAAoBwjB,EAAwB35B,EAASlX,GACrD4kB,EAAWgsB,EAAqBlgC,KAAKmpD,UAAUt7C,KAAM7N,KAAKmpD,UAAU9mC,OAAQ/yB,EAAWqtB,GAC3F3c,KAAK6oD,YAAY30C,EAVjB,CAWF,EACO40C,CACT,CAtHoC,GA0HhCH,EAAoC,WACtC,SAASA,EAAqBvlD,EAAaG,EAAqB2Q,EAAU60C,EAAyB7qC,GACjG,IAAInR,EAAS/M,MACb,EAAI2B,EAA0B,SAAG3B,KAAM,aAAa,SAAUgD,GAC5D+J,EAAO66C,QAAS,EAChB76C,EAAO86C,WACT,IACA7nD,KAAK6nD,UAAY3pC,EACjBle,KAAK+nD,MAAQ,GACb/nD,KAAK8Y,aAAe1V,EACpBpD,KAAKkoD,WAAa,GAClBloD,KAAK4nD,QAAS,EACd5nD,KAAKmoD,qBAAuB5kD,EAC5BvD,KAAKspD,yBAA2BP,EAChC/oD,KAAK6oD,YAAY30C,EACnB,CACA,IAAIq1C,EAAUZ,EAAqBj1D,UA+CnC,OA9CA61D,EAAQjlD,QAAU,WAChBtE,KAAKkoD,WAAW53D,QAAQ83D,EAC1B,EACAmB,EAAQtmD,QAAU,WAChB,GAAIjD,KAAK4nD,OAAQ,CAKf,IAFA,IACI95C,EADAH,EAAW3N,KAAK+nD,MAEXpjD,EAAK,EAAGA,EAAK3E,KAAKkoD,WAAWl0D,OAAQ2Q,IAAM,CAClD,IAAI0jD,EAAW16C,EAAShJ,GACpB2jD,EAAWtoD,KAAKkoD,WAAWvjD,GAAI1B,WAC/B6K,GAAYw6C,IAAaD,KAC3Bv6C,EAAWA,GAAYH,EAASurB,MAAM,EAAGv0B,IAChC5G,KAAKuqD,EAElB,CACKx6C,GAAY9N,KAAKkoD,WAAWl0D,SAAW2Z,EAAS3Z,SACnD8Z,EAAWH,EAASurB,MAAM,EAAGl5B,KAAKkoD,WAAWl0D,SAE/CgM,KAAK+nD,MAAQj6C,GAAYH,EACzB3N,KAAK4nD,QAAS,CAChB,CACA,OAAO5nD,KAAK+nD,KACd,EACAwB,EAAQV,YAAc,SAAqB30C,GAEzC,IADA,IAAIG,EAAYH,EAASG,UAClBrU,KAAKkoD,WAAWl0D,OAASqgB,EAAUrgB,QAAQ,CACjCgM,KAAKkoD,WAAW7oD,MACtBiF,SACX,CACA,IAAK,IAAIK,EAAK,EAAGA,EAAK0P,EAAUrgB,OAAQ2Q,IAClCA,EAAK3E,KAAKkoD,WAAWl0D,OACvBgM,KAAKkoD,WAAWvjD,GAAIkkD,YAAYx0C,EAAU1P,IAE1C3E,KAAKkoD,WAAWvjD,GAAM,IAAImkD,EAAiB9oD,KAAK8Y,aAAc9Y,KAAKmoD,qBAAsB9zC,EAAU1P,GAAK3E,KAAKspD,yBAA0BtpD,KAAK4oD,WAGhJ5oD,KAAK4nD,QAAS,CAChB,EACA2B,EAAQ37C,aAAe,SAAsBte,EAAWkX,GACtDxG,KAAKkoD,WAAW53D,SAAQ,SAAUuS,GAChC,OAAOA,EAAS+K,aAAate,EAAWkX,EAC1C,IACAxG,KAAK4nD,QAAS,CAChB,EACOe,CACT,CAhEwC,GAiExC,SAASP,EAAgBjpC,GACvBA,GAAcA,EAAW7a,SAC3B,CACAhF,EAAOC,QAAUooD,qCCnVAxnD,EAAQ,MAAzB,IACI2nB,EAAuB3nB,EAAQ,MAEjC+hC,EADa/hC,EAAQ,MACY+hC,sBAC/BzxB,EAAYtQ,EAAQ,MACtB8/B,EAA8BxvB,EAAUwvB,4BACxCC,EAAuBzvB,EAAUyvB,qBAEjC4B,EADc3hC,EAAQ,MACF2hC,QA4BtB,SAAS3B,EAAwB35B,EAASlX,EAAW8d,GAYnD,MAXwB,CACtB6U,WAAY6F,EAAqBthB,EAAQoK,OAAQthB,GACjDue,KAAMrH,EACNlX,UAAWA,EACX8d,YAAaA,EAQjB,CACA9N,EAAOC,QAAU,CACfqG,0BAnCF,SAAmCY,EAASlX,EAAW8d,GACrD,IAAIiV,EAASoO,UAAUz8B,OAAS,QAAsBmG,IAAjBs2B,UAAU,GAAmBA,UAAU,GAAKqR,EAC7Ev7B,EAAYC,EAAQD,UACpB+nC,EAAqBpM,EAAsB37B,EAAWC,EAAQoK,OAAO29B,kBAAmBj/C,GACxFqtB,EAAoBwjB,EAAwB35B,EAAS8nC,EAAoBlhC,GAc7E,MAb0B,CACxBpG,SAAUk5B,EAAqB15B,EAAQQ,SAAUqb,EAAQisB,EAAoB3xB,GAC7EnW,QAASmW,EACTwJ,KAAM8Z,EAA4B15B,EAAW8b,EAAQisB,GAWzD,EAiBEnO,wBAAyBA,sCCpD3B,IACI5+B,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChD2F,EAAa3F,EAAQ,MACrBwF,EAAWxF,EAAQ,MACrBozC,EAA+B5tC,EAAS4tC,6BAGxCiW,GAFa7jD,EAAS24B,WACRn+B,EAAQ,MACSqpD,oBAC7BxnD,EAAY7B,EAAQ,MACtBspD,EAAuBznD,EAAUynD,qBACjC9nB,EAAS3/B,EAAU2/B,OACnB+nB,EAAqB1nD,EAAU0nD,mBAC/B9nB,EAAU5/B,EAAU4/B,QACpBC,EAAW7/B,EAAU6/B,SACrB8nB,EAA2B3nD,EAAU2nD,yBAErC3nB,GADUhgC,EAAU8/B,QACL9/B,EAAUggC,cACvBjgC,EAAW5B,EAAQ,MACnB4H,EAAY5H,EAAQ,MACVA,EAAQ,MA+GtB,SAASgjB,EAASwV,EAAQc,GACxB,IAAI9qC,EAAQgqC,EAAOc,GAInB,OAHI9qC,GAA0B,kBAAVA,IACfA,EAAMgF,eAAeiuC,IAAajzC,EAAMgF,eAAekuC,KAAoR95B,GAAU,GAEnVpZ,CACT,CAwNA2Q,EAAOC,QAAU,CACf7P,MA3RF,SAAeipC,GACb,OAAO,EAAIp3B,EAAwB,SAAG,CAAC,EAAGo3B,EAC5C,EA0REyM,WA9QF,SAAoBrmC,EAAQ2L,GAC1B,IAAK,IAAIrZ,KAAO0N,EACVA,EAAOpL,eAAetC,IACpBA,IAAQswC,GAAUtwC,IAAQ2wC,IAC5Bt3B,EAAKrZ,GAAO0N,EAAO1N,GAI3B,EAuQEoZ,OAhQF,SAAgB4X,EAAQsjB,GAEtB,IAAIhN,EAAS,CAAC,EAGd,OAFAA,EAAOgJ,GAAUtf,EACjBsW,EAAOqJ,GAAgB2D,EAChBhN,CACT,EA2PEvgB,OA7GF,SAAgBugB,GACd7yB,EAAW6yB,EACb,EA4GEZ,UArPF,SAAmBY,GACjB,OAAOA,EAAOgJ,EAChB,EAoPEqU,qBAnLF,SAA8Brd,GAC5B,GAAc,MAAVA,EACF,OAAO,KAET,IAAIod,EAAgBpd,EAAO+wB,GAC3B,MAA6B,kBAAlB3T,EAEF,KAEFA,CACT,EA0KEvQ,kBAvNF,SAA2B7M,EAAQc,GACjC,IAAImwB,EAAYjxB,EAAOc,GACvB,GAAiB,MAAbmwB,EACF,OAAOA,EAIT,IAAIC,EAAOD,EAGX,MAFkB,kBAATC,GAAqBA,GAAiC,kBAAlBA,EAAKjoB,IAA6Z75B,GAAU,GAEld8hD,EAAKjoB,EACd,EA6MEoE,mBArMF,SAA4BrN,EAAQc,GAClC,IAAIqwB,EAAQnxB,EAAOc,GACnB,OAAa,MAATqwB,EACKA,GAEU,kBAAVA,GAAsB/tD,MAAMC,QAAQ8tD,EAAMjoB,KAAua95B,GAAU,GAE7d+hD,EAAMjoB,GACf,EA8LE5J,QAhPF,SAAiBU,GACf,OAAOA,EAAOqJ,EAChB,EA+OE7e,SAAUA,EACVjoB,MAxIF,SAAe6uD,EAASC,GAWtB,OAAO,EAAIzoD,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAGwoD,GAAUC,EACrF,EA6HE5mC,SA5GF,SAAkBuV,EAAQc,EAAY9qC,GAapCgqC,EAAOc,GAAc9qC,CACvB,EA+FE82C,kBAxFF,SAA2B9M,EAAQc,EAAY8L,GAE7C,IAAIskB,EAAO,CAAC,EACZA,EAAKjoB,GAAW2D,EAChB5M,EAAOc,GAAcowB,CACvB,EAoFE3jB,mBA7EF,SAA4BvN,EAAQc,EAAYsM,GAE9C,IAAI+jB,EAAQ,CAAC,EACbA,EAAMjoB,GAAYkE,EAClBpN,EAAOc,GAAcqwB,CACvB,EAyEE7vB,OAzKF,SAAgBgwB,EAAYC,GAa1B,IAZ2C,IAUvCC,EAAU,KACVh5D,EAAO5C,OAAO4C,KAAK+4D,GACdvlD,EAAK,EAAGA,EAAKxT,EAAK6C,OAAQ2Q,IAAM,CACvC,IAAItT,EAAMF,EAAKwT,IACXwlD,GAAYpoD,EAASkoD,EAAW54D,GAAM64D,EAAW74D,OACnD84D,EAAsB,OAAZA,EAAmBA,GAAU,EAAI5oD,EAAwB,SAAG,CAAC,EAAG0oD,IAClE54D,GAAO64D,EAAW74D,GAE9B,CACA,OAAmB,OAAZ84D,EAAmBA,EAAUF,CACtC,EAqJElS,uBAtDF,SAAgCpf,EAAQc,GACtC,IAAIowB,EAAOlxB,EAAOc,GAClB,OAAY,MAARowB,EACKA,IAES,kBAATA,GAA8C,kBAAlBA,EAAKjoB,IAAuD,MAA9BioB,EAAKJ,KAAgQ1hD,GAAU,GAC3U,CAAC8hD,EAAKJ,GAAuBI,EAAKjoB,IAC3C,EAgDEwoB,uBApEF,SAAgCzxB,EAAQc,EAAY4I,EAAiBkD,GAEnE,IAAIskB,EAAO,CAAC,EACZA,EAAKjoB,GAAW2D,EAChBskB,EAAKJ,GAAwBpnB,EAC7B1J,EAAOc,GAAcowB,CACvB,EA+DEQ,0BAhDF,SAAmC1xB,EAAQgN,GACzC,IAAIpzB,EAAK4Q,EAASwV,EAAQgxB,GAC1B,OAAU,MAANp3C,GAAci3C,EAAmBj3C,GAC5B,MAGS,kBAAPA,IACTA,EAAKA,EAAGA,IAEM,kBAAPA,GAAqMxK,GAAU,GACjNwrC,EAA6B5N,EAAUpzB,GAChD,EAsCE+3C,2BArCF,SAAoC3xB,EAAQgN,GAC1C,IAAI4kB,EAAgBpnC,EAASwV,EAAQgxB,GACrC,OAAqB,MAAjBY,GAAyBf,EAAmBe,GACvC,MAERxuD,MAAMC,QAAQuuD,IAA0NxiD,GAAU,GAC5OwiD,EAAcn5D,KAAI,SAAUmhB,GACjC,OAAU,MAANA,EACK,MAGS,kBAAPA,IACTA,EAAKA,EAAGA,IAEM,kBAAPA,GAA+NxK,GAAU,GAC3OwrC,EAA6B5N,EAAUpzB,GAChD,IACF,sCC/VA,IACEnJ,EADajJ,EAAQ,MACWiJ,qBAC9BqH,EAAYtQ,EAAQ,MACtBqqD,EAA6B/5C,EAAU+5C,2BACvC9oB,EAAqBjxB,EAAUixB,mBAC/BD,EAAgBhxB,EAAUgxB,cAC1BE,EAASlxB,EAAUkxB,OACnB8oB,EAAsCh6C,EAAUg6C,oCAC9C1oD,EAAW5B,EAAQ,MACnB4H,EAAY5H,EAAQ,MACVA,EAAQ,MA+BtB,SAAS2gC,EAAoB95B,EAAUkjC,IACnB,kBAATA,GAA8B,OAATA,GAAkBnuC,MAAMC,QAAQkuC,KAAkMniC,GAAU,GAC1Q,IAAIsa,EAAS6nB,EAAKvI,GACdt/B,EAAY6nC,EAAKzI,GACjBipB,EAAaxgB,EAAKxI,GAClBipB,GAAgF,IAA9CzgB,EAAKugB,GACvCG,EAA+B1gB,EAAKsgB,GACxC,GAAsB,kBAAXnoC,GAA4C,kBAAdhgB,GAAwC,OAAdA,GAA0D,kBAA7BA,EAAU2E,EAASnG,OAAmD,OAA7BwB,EAAU2E,EAASnG,OAAwC,kBAAf6pD,GAA0C,OAAfA,IAAwD,MAAhCE,GAAwC7uD,MAAMC,QAAQ4uD,IAAgC,CAC5T,IAAIt2C,EAAQo2C,EACRG,EAA0BD,EAC1BjG,EAAoBtiD,EAAU2E,EAASnG,MAE3C,OAAOq/B,EAAqBl5B,EAAUqb,EADdjZ,EAAqBpC,EAAUsN,EAAMhlB,UAAWq1D,GACPrwC,EAAOq2C,EAAiCE,EAC3G,CAQA,OAAO,IACT,CAUA,SAASlqB,EAAkB35B,EAAU8jD,GACnC,IAAIz2C,EAAY,KAQhB,OAPAy2C,EAAMx6D,SAAQ,SAAU45C,EAAMvlC,GAC5B,IAAIuP,EAAmB,MAARg2B,EAAepJ,EAAoB95B,EAAUkjC,GAAQ,KACpD,MAAZh2B,IACFG,EAAYA,GAAa,IACftW,KAAKmW,EAEnB,IACiB,MAAbG,EACK,KAEA,CACLD,KAAM,uBACNC,UAAWA,EAGjB,CACA,SAAST,EAAY5M,EAAUkjC,GAC7B,OAAY,MAARA,EACKA,EACEljC,EAAS2B,WAAyC,IAA7B3B,EAAS2B,SAASoS,QAC/Chf,MAAMC,QAAQkuC,IAAmSniC,GAAU,GACrT44B,EAAkB35B,EAAUkjC,KAEjCnuC,MAAMC,QAAQkuC,IAAuSniC,GAAU,GAC1T+4B,EAAoB95B,EAAUkjC,GAEzC,CA4CA,SAAS7J,EAAuBr5B,EAAUkjC,GACxC,OAAY,MAARA,EACKA,EACEljC,EAAS2B,WAAyC,IAA7B3B,EAAS2B,SAASoS,QAC/Chf,MAAMC,QAAQkuC,IAAmSniC,GAAU,GAWhU,SAAoBf,EAAU8jD,GAC5B,IAAIC,EAAM,KAQV,OAPAD,EAAMx6D,SAAQ,SAAU45C,GACtB,IAAI33B,EAAa,MAAR23B,EAAenS,EAAU/wB,EAAUkjC,GAAQ,KAC1C,MAAN33B,IACFw4C,EAAMA,GAAO,IACThtD,KAAKwU,EAEb,IACOw4C,CACT,CApBWC,CAAWhkD,EAAUkjC,KAE1BnuC,MAAMC,QAAQkuC,IAAmTniC,GAAU,GACtUgwB,EAAU/wB,EAAUkjC,GAE/B,CAoBA,SAASnS,EAAU/wB,EAAUkjC,IACT,kBAATA,GAA8B,OAATA,GAAkBnuC,MAAMC,QAAQkuC,KAAkMniC,GAAU,GAC1Q,IAAIsa,EAAS6nB,EAAKvI,GAClB,MAAsB,kBAAXtf,EACFA,EAGF,IACT,CAwBA,SAASxK,EAAyB7Q,EAAUkjC,GAC1C,IAAIwH,EACJ,OAAY,MAARxH,EACK,CAAC,GAC+H,KAAhF,QAA5CwH,EAAqB1qC,EAAS2B,gBAA6C,IAAvB+oC,OAAgC,EAASA,EAAmB32B,SAC1Hhf,MAAMC,QAAQkuC,IAAmSniC,GAAU,GACrTi5B,EAA+Bh6B,EAAUkjC,KAE9CnuC,MAAMC,QAAQkuC,IAAmTniC,GAAU,GACtUk5B,EAAiCj6B,EAAUkjC,IAAS,CAAC,EAEhE,CACA,SAASjJ,EAAiCj6B,EAAUkjC,GAClD,IAAIh2B,EAAW4sB,EAAoB95B,EAAUkjC,GAC7C,OAAKh2B,EAGEA,EAAS5kB,UAFP,IAGX,CACA,SAAS0xC,EAA+Bh6B,EAAU8jD,GAChD,IAAIx7D,EAAY,CAAC,EASjB,OARAw7D,EAAMx6D,SAAQ,SAAU3B,EAAOgW,GAC7B,GAAa,MAAThW,EAAe,CACjB,IAAIs8D,EAAgBhqB,EAAiCj6B,EAAUrY,GAC1C,MAAjBs8D,GACF18D,OAAOC,OAAOc,EAAW27D,EAE7B,CACF,IACO37D,CACT,CACA,SAAS47D,EAA0BC,EAAcC,GAC/C,OAAOD,EAAa72C,QAAU82C,EAAa92C,OAAS62C,EAAa9oC,SAAW+oC,EAAa/oC,QAAU8oC,EAAat9C,OAASu9C,EAAav9C,MAAQ9L,EAASopD,EAAa77D,UAAW87D,EAAa97D,UAC9L,CA0BA,SAAS4wC,EAAqBl5B,EAAUqb,EAAQ/yB,EAAWkX,GACzD,IACIqkD,EAA0Bp6B,UAAUz8B,OAAS,EAAIy8B,UAAU,QAAKt2B,EACpE,MAAO,CACLia,KAAM,yBACNiO,OAAQA,EACRsoC,gCALoCl6B,UAAUz8B,OAAS,QAAsBmG,IAAjBs2B,UAAU,IAAmBA,UAAU,GAMnGo6B,wBAAqD,OAA5BA,QAAgE,IAA5BA,EAAqCA,EAA0B,KAC5Hh9C,KAAM7G,EACN1X,UAAWA,EACXglB,MAAO9N,EAEX,CAQAlH,EAAOC,QAAU,CACfygC,kBAtCF,SAA2B3hC,EAAGC,GAC5B,OAAID,IAAMC,IAEM,MAALD,EACG,MAALC,EACO,MAALA,EACG,MAALD,EACa,2BAAXA,EAAE+V,MAAgD,2BAAX9V,EAAE8V,KAC3C82C,EAA0B7sD,EAAGC,GAChB,yBAAXD,EAAE+V,MAA8C,yBAAX9V,EAAE8V,OACzC/V,EAAEgW,UAAUrgB,SAAWsK,EAAE+V,UAAUrgB,QAAUqK,EAAEgW,UAAUgyB,OAAM,SAAU/yC,EAAGS,GACjF,OAAOm3D,EAA0B53D,EAAGgL,EAAE+V,UAAUtgB,GAClD,KAIJ,EAuBEmsC,qBAAsBA,EACtBD,4BAVF,SAAqCpyB,EAAMwU,EAAQ/yB,GACjD,MAAO,CACL+yB,OAAQA,EACRxU,KAAMA,EACNve,UAAWA,EAEf,EAKE+wC,uBAAwBA,EACxBn+B,qBA7JF,SAA8BG,EAAWgpD,GACvC,IAAIN,EAAM,CAAC,EACX,IAAK,IAAI15D,KAAOgR,EACd,GAAIA,EAAU1O,eAAetC,GAAM,CACjC,IAAI2V,EAAW3E,EAAUhR,GACrB64C,EAAOmhB,EAAOh6D,GAClB05D,EAAI15D,GAAOgvC,EAAuBr5B,EAAUkjC,EAC9C,CAEF,OAAO6gB,CACT,EAoJEjqB,oBAAqBA,EACrBH,kBAAmBA,EACnB/sB,YAAaA,EACbitB,uBAtLF,SAAgCx+B,EAAWgpD,GACzC,IAAIh3C,EAAY,CAAC,EACjB,IAAK,IAAIhjB,KAAOgR,EACd,GAAIA,EAAU1O,eAAetC,GAAM,CACjC,IAAI2V,EAAW3E,EAAUhR,GACrB64C,EAAOmhB,EAAOh6D,GAClBgjB,EAAUhjB,GAAOuiB,EAAY5M,EAAUkjC,EACzC,CAEF,OAAO71B,CACT,EA6KE4sB,iCAAkCA,EAClCD,+BAAgCA,EAChCnpB,yBAA0BA,EAC1B1P,uBAxGF,SAAgC9F,EAAWgpD,GACzC,IAAI/7D,EAAY,CAAC,EACjB,IAAK,IAAI+B,KAAOgR,EACd,GAAIA,EAAU1O,eAAetC,GAAM,CACjC,IAEI45D,EAAgBpzC,EAFLxV,EAAUhR,GACdg6D,EAAOh6D,IAElB9C,OAAOC,OAAOc,EAAW27D,EAC3B,CAEF,OAAO37D,CACT,sCChNa,IAAAg8D,EAAAnrD,EAAAA,MAAAA,QAETmB,EAAyBnB,EAAAA,MAAAA,QACzBwqB,EAA8BrpB,EAAuBnB,EAAQ,OAC7DwB,EAAmBL,EAAuBnB,EAAQ,OAClDwF,EAAWxF,EAAQ,MACrBgiC,EAAuCx8B,EAASw8B,qCAChDC,EAAgCz8B,EAASy8B,8BAEvCl6B,GADa/H,EAAQ,MACDA,EAAQ,OAC5BorD,EAAmBprD,EAAQ,MAC3B+zC,EAAc/zC,EAAQ,KACtB4kD,EAAmB5kD,EAAQ,MAC3Bu+B,EAAoBv+B,EAAQ,MAC5BqrD,EAA8BrrD,EAAQ,KACtCsrD,EAActrD,EAAQ,MACtBurD,EAAuBvrD,EAAQ,MAC/B4zC,EAA6B5zC,EAAQ,MACrCwrD,EAA0BxrD,EAAQ,MAClC4+B,EAAkB5+B,EAAQ,MAC1BsQ,EAAYtQ,EAAQ,MACtB2hC,EAAUrxB,EAAUqxB,QACpBC,EAAYtxB,EAAUsxB,UAEtB6pB,EADczrD,EAAQ,MACUyrD,oBAC9B7jD,EAAY5H,EAAQ,MAepBy+B,EAAgC,WAClC,SAASA,EAAiB7/B,EAAQwL,GAChC,IACIshD,EAAuBC,EAAsBC,EAAoBC,EAAcC,EAD/EvpD,EAAQ1C,MAEZ,EAAI2B,EAA0B,SAAG3B,KAAM,WAAW,WAC5C0C,EAAMwpD,SACJxpD,EAAMwpD,OAAOvyD,OAAOsnB,KACtBve,EAAMwpD,OAAS,KAEfxpD,EAAMypD,aAAazpD,EAAM0pD,SAG/B,IAWApsD,KAAKqsD,mBAAqB,EAC1BrsD,KAAKssD,eAAiB,EACtBtsD,KAAKusD,qBAAmI,QAA3GV,EAAoC,OAAZthD,QAAgC,IAAZA,OAAqB,EAASA,EAAQiiD,2BAA2D,IAA1BX,EAAmCA,EAvCrJ,GAwC9B7rD,KAAKksD,OAAS,KACdlsD,KAAKmsD,aAAkH,QAAlGL,EAAmC,OAAZvhD,QAAgC,IAAZA,OAAqB,EAASA,EAAQkiD,mBAAkD,IAAzBX,EAAkCA,EAAuBP,EACxLvrD,KAAKioC,WAA4G,QAA9F8jB,EAAiC,OAAZxhD,QAAgC,IAAZA,OAAqB,EAASA,EAAQwtB,iBAA8C,IAAvBg0B,EAAgCA,EAAqBhH,EAC9K/kD,KAAK0sD,yBAA2B,KAChC1sD,KAAK2sD,2BAA6B,IAAInhC,IACtCxrB,KAAK4sD,sBAAwB,IAAIphC,IACjCxrB,KAAKoX,MAA2F,QAAlF40C,EAA2B,OAAZzhD,QAAgC,IAAZA,OAAqB,EAASA,EAAQmvC,WAAkC,IAAjBsS,EAA0BA,EAAe,KACjJhsD,KAAK6sD,0BAAwC,OAAZtiD,QAAgC,IAAZA,OAAqB,EAASA,EAAQuiD,yBAC3F9sD,KAAKg1C,iBAA2H,QAAvGiX,EAAoC,OAAZ1hD,QAAgC,IAAZA,OAAqB,EAASA,EAAQgqC,uBAAuD,IAA1B0X,EAAmCA,EAAwB,KACnMjsD,KAAK+sD,kBAAoB,KACzB/sD,KAAKgtD,cAAgBjuD,EACrBiB,KAAKitD,eAAiB,GACtBjtD,KAAKktD,OAAS,IAAIr0C,IAClB7Y,KAAKmtD,mBAAoB,EACzBntD,KAAKotD,eAAiB,IAAIxB,GAAoB,WAC5C,OAAOlpD,EAAM2qD,yBACf,IACArtD,KAAKstD,oBAAsB,IAAI3B,EAAoC,OAAZphD,QAAgC,IAAZA,OAAqB,EAASA,EAAQmvC,IAAK15C,KAAKotD,gBAC3HptD,KAAKutD,kBAAoB,IAAI/hC,IAC7BxrB,KAAKo1C,+BAA6C,OAAZ7qC,QAAgC,IAAZA,OAAqB,EAASA,EAAQiqC,8BAgapG,SAAgCc,GAC9B,IAAKA,EAAOp0B,IAAI4gB,GAAU,CACxB,IAAI0rB,EAAa9uB,EAAkBj0B,OAAOq3B,EAASC,GACnDuT,EAAO37B,IAAImoB,EAAS0rB,EACtB,CACF,CApaIC,CAAuBztD,KAAKgtD,cAC9B,CACA,IAAI9oD,EAAS06B,EAAiBlrC,UA2Z9B,OA1ZAwQ,EAAOgjD,UAAY,WACjB,IAAIwG,EACJ,OAA4D,QAApDA,EAAwB1tD,KAAK+sD,yBAAyD,IAA1BW,EAAmCA,EAAwB1tD,KAAKgtD,aACtI,EACA9oD,EAAOmpD,wBAA0B,WAC/B,IAAIM,EACJ,OAA6D,QAArDA,EAAyB3tD,KAAK+sD,yBAA0D,IAA3BY,EAAoCA,EAAyB3tD,KAAKgtD,aACzI,EACA9oD,EAAO2C,MAAQ,SAAeN,EAAWgE,GACvC,IAAIqjD,EAAmBC,EAAuBC,EAAuBC,EACjE75C,EAAW3N,EAAU4f,KACrBpnB,EAASiB,KAAKqtD,0BACdW,EAA0BhuD,KAAK0sD,yBAC/BuB,EAAYjuD,KAAKktD,OAAO5vD,IAAIiJ,EAAUC,QAAQyb,YAC9CisC,EAAsC,MAAbD,EAAoBA,EAAUE,MAAQ,KAGnE,GAA+B,MAA3BH,IAG4B,MAA1BE,GAAkCA,GAA0BF,GAK9D,MAAO,CACLr/C,OAAQ,SAId,IAAI2lC,EAAwG,QAA5FsZ,EAAgC,OAAZrjD,QAAgC,IAAZA,OAAqB,EAASA,EAAQ+pC,gBAA4C,IAAtBsZ,EAA+BA,EAAoB,GACnKzZ,EAA8H,QAAzG0Z,EAAoC,OAAZtjD,QAAgC,IAAZA,OAAqB,EAASA,EAAQ4pC,yBAAyD,IAA1B0Z,EAAmCA,EAAwB,SAAUxrB,GAE7M,OADAD,EAA8BC,GACvBtjC,CACT,EACIq1C,EAA8H,QAAzG0Z,EAAoC,OAAZvjD,QAAgC,IAAZA,OAAqB,EAASA,EAAQ6pC,yBAAyD,IAA1B0Z,EAAmCA,EAAwB,SAAUzrB,GAE7M,OADAD,EAA8BC,GACvBtjC,CACT,EAEA,OAwdJ,SAA+B2jB,EAAuBwrC,EAAwBE,EAAoBtB,GAChG,IAAIrX,EAA4B/yB,EAAsB+yB,0BACpD9mC,EAAS+T,EAAsB/T,OACjC,GAAyC,kBAA9B8mC,IAIqB,MAA1ByY,GAAkCzY,EAA4ByY,GAChE,MAAO,CACLv/C,OAAQ,SAId,GAAe,YAAXA,EACF,MAAO,CACLA,OAAQ,WAGZ,GAA0B,MAAtBy/C,GAA0D,MAA5BtB,EAAkC,CAElE,GADcsB,GAAsBt/D,KAAKC,MAAQ+9D,EAE/C,MAAO,CACLn+C,OAAQ,QAGd,CAIA,MAAO,CACLA,OAAQ,YACRkiC,UAAkC,OAAvBud,QAAsD,IAAvBA,EAAgCA,EAAqB,KAEnG,CAzfWC,CADqBna,EAAYrtC,MAAMstC,EAAmBC,EAAkI,QAA9G2Z,EAAoC,OAAZxjD,QAAgC,IAAZA,OAAqB,EAASA,EAAQ8pC,8BAA8D,IAA1B0Z,EAAmCA,EAAwB5rB,EAAsCjuB,EAAUogC,EAAUt0C,KAAKg1C,iBAAkBh1C,KAAKioC,WAAYjoC,KAAKo1C,gCACzT8Y,EAAsC,OAAdD,QAAoC,IAAdA,OAAuB,EAASA,EAAUpd,UAAW7wC,KAAK6sD,0BAC9J,EACA3oD,EAAOgD,OAAS,SAAgBX,GAC9B,IAAIkF,EAASzL,KACTuS,EAAKhM,EAAUC,QAAQyb,WACvB3a,GAAW,EAmCX2mD,EAAYjuD,KAAKktD,OAAO5vD,IAAIiV,GAqBhC,OApBiB,MAAb07C,GACyB,IAAvBA,EAAUK,WAIZtuD,KAAKitD,eAAiBjtD,KAAKitD,eAAejvD,QAAO,SAAU2+C,GACzD,OAAOA,IAAQpqC,CACjB,KAGF07C,EAAUK,UAAY,GAGtBtuD,KAAKktD,OAAOvzC,IAAIpH,EAAI,CAClBhM,UAAWA,EACX+nD,SAAU,EACVH,MAAO,KACPtd,UAAW,OAGR,CACLvsC,QAxDY,WAEZ,IAAIgD,EAAJ,CAGAA,GAAW,EAEX,IAAI2mD,EAAYxiD,EAAOyhD,OAAO5vD,IAAIiV,GAClC,GAAiB,MAAb07C,IAKJA,EAAUK,WACiB,IAAvBL,EAAUK,UAAgB,CAC5B,IAAIzB,EAA4BphD,EAAOohD,0BAEvC,GAD8C,MAAvBoB,EAAUpd,WAAkD,MAA7Bgc,GAAqCoB,EAAUpd,WAAa/hD,KAAKC,MAAQ89D,EAE7HphD,EAAOyhD,OAAe,OAAE36C,GACxB9G,EAAO8iD,kBAOP,GALA9iD,EAAOwhD,eAAelvD,KAAKwU,GAKvB9G,EAAOwhD,eAAej5D,OAASyX,EAAO8gD,qBAAsB,CAC9D,IAAI5P,EAAMlxC,EAAOwhD,eAAeuB,QAChC/iD,EAAOyhD,OAAe,OAAEvQ,GACxBlxC,EAAO8iD,YACT,CAEJ,CA5BA,CA6BF,EAyBF,EACArqD,EAAO6C,OAAS,SAAgBmN,GAC9B,IAAInV,EAASiB,KAAKknD,YAKlB,OAJeuE,EAAYpxC,KAAKtb,EAAQmV,EAAUlU,KAAKotD,eAKzD,EAIAlpD,EAAOuqD,OAAS,SAAgBC,EAAiB9lB,GAC/C,IAAI77B,EAAS/M,KACT05C,EAAM15C,KAAKoX,MACJ,MAAPsiC,GACFA,EAAI,CACF74C,KAAM,qBACN6tD,gBAAiBA,IAMrB1uD,KAAKqsD,sBACmB,IAApBzjB,IACF5oC,KAAK0sD,yBAA2B1sD,KAAKqsD,oBAEnCnkD,EAAkBymD,wBAKpB3uD,KAAKotD,eAAewB,kBAAkB5uD,KAAKutD,mBAE7C,IAAIxuD,EAASiB,KAAKknD,YACdzI,EAAgB,GAmBpB,GAlBAz+C,KAAKstD,oBAAoBuB,oBAAoB9vD,EAAQiB,KAAKutD,kBAAmB9O,EAAeiQ,GAC5F1uD,KAAK2sD,2BAA2Br8D,SAAQ,SAAUmY,GAChDsE,EAAO+hD,gCAAgCrmD,GAAkC,IAApBmgC,EACvD,IACW,MAAP8Q,GACFA,EAAI,CACF74C,KAAM,wBACN6tD,gBAAiBA,EACjBK,iBAAkB/uD,KAAKutD,kBACvByB,qBAAsBhvD,KAAK4sD,wBAG/B5sD,KAAKutD,kBAAkBpsC,QACvBnhB,KAAK4sD,sBAAsBzrC,QAKJ,MAAnButC,EAAyB,CAM3B,IAAIn8C,EAAKm8C,EAAgBloD,QAAQyb,WAC7BgsC,EAAYjuD,KAAKktD,OAAO5vD,IAAIiV,GAChC,GAAiB,MAAb07C,EACFA,EAAUE,MAAQnuD,KAAKqsD,mBACvB4B,EAAUpd,UAAY/hD,KAAKC,WACtB,GAA0D,UAAtD2/D,EAAgBloD,QAAQqH,KAAK+C,OAAO+4B,eAA6B3pC,KAAKusD,qBAAuB,GAAKvsD,KAAKitD,eAAej5D,OAASgM,KAAKusD,qBAAsB,CAGnK,IAAI0C,EAAqB,CACvB1oD,UAAWmoD,EACXJ,SAAU,EACVH,MAAOnuD,KAAKqsD,mBACZxb,UAAW/hD,KAAKC,OAElBiR,KAAKitD,eAAelvD,KAAKwU,GACzBvS,KAAKktD,OAAOvzC,IAAIpH,EAAI08C,EACtB,CACF,CACA,OAAOxQ,CACT,EACAv6C,EAAOgrD,QAAU,SAAiBnwD,EAAQowD,GACxC,IAAI7Z,EAASt1C,KAAKqtD,2BA+OtB,SAAgC/X,EAAQv2C,EAAQqwD,EAAmBD,EAA0BJ,EAAkBC,GAKzGG,GACFA,EAAyB7+D,SAAQ,SAAU+xB,GACzC,IAQI6nC,EARAmF,EAAe/Z,EAAOh4C,IAAI+kB,GAC1BmmB,EAAezpC,EAAOzB,IAAI+kB,GAIT,OAAjBmmB,KASF0hB,EALkB,MAAhBmF,EAKW3wB,EAAkBhvC,MAAM2/D,GAOR,MAAhB7mB,EAAuB9J,EAAkBhvC,MAAM84C,GAAgB,QAK9E9J,EAAkBtb,SAAS8mC,EAAYnrB,EAAgB2qB,mBAAoB0F,GAC3EJ,EAAqBjjC,IAAI1J,GACzBizB,EAAO37B,IAAI0I,EAAQ6nC,IACrB,IAKF,IADA,IAAIh0B,EAAUn3B,EAAOwpC,eACZ5jC,EAAK,EAAGA,EAAKuxB,EAAQliC,OAAQ2Q,IAAM,CAC1C,IAAI0d,EAAS6T,EAAQvxB,GACjB6jC,EAAezpC,EAAOzB,IAAI+kB,GAC1BgtC,EAAe/Z,EAAOh4C,IAAI+kB,GAQ9B,GAAImmB,GAAgB6mB,EAAc,CAKhC,IAAInF,EAAaxrB,EAAkBzG,QAAQo3B,KAAkBtb,EAA2Bub,uBAAyB9mB,EAAe9J,EAAkBzE,OAAOo1B,EAAc7mB,GACnK0hB,IAAemF,IAKjBN,EAAiBhjC,IAAI1J,GACrBizB,EAAO37B,IAAI0I,EAAQ6nC,GAEvB,MAA4B,OAAjB1hB,GACT8M,EAAe,OAAEjzB,GACI,OAAjBgtC,GACFN,EAAiBhjC,IAAI1J,IAEdmmB,IACT8M,EAAO37B,IAAI0I,EAAQmmB,GACnBumB,EAAiBhjC,IAAI1J,GAEzB,CACF,CA1TIktC,CAAuBja,EAAQv2C,EAI/BiB,KAAKqsD,mBAAqB,EAAG8C,EAA0BnvD,KAAKutD,kBAAmBvtD,KAAK4sD,uBAGpF,IAAIlT,EAAM15C,KAAKoX,MACJ,MAAPsiC,GACFA,EAAI,CACF74C,KAAM,gBACN9B,OAAQA,EACRywD,WAAYla,IAAWt1C,KAAK+sD,mBAGlC,EACA7oD,EAAOkD,UAAY,SAAmBR,EAAUsX,GAC9C,OAAOle,KAAKstD,oBAAoBlmD,UAAUR,EAAUsX,EACtD,EACAha,EAAOurD,OAAS,WACd,IAAI7xC,EAAS5d,KACTA,KAAKksD,SACPlsD,KAAKksD,OAAS,KACdlsD,KAAKmtD,mBAAoB,GAE3BntD,KAAKssD,iBAUL,MAAO,CACLhoD,QAVY,WACRsZ,EAAO0uC,eAAiB,IAC1B1uC,EAAO0uC,iBACuB,IAA1B1uC,EAAO0uC,gBAAwB1uC,EAAOuvC,oBACxCvvC,EAAO2wC,aACP3wC,EAAOuvC,mBAAoB,GAGjC,EAIF,EACAjpD,EAAOojD,OAAS,WACd,MAAO,oBACT,EACApjD,EAAO4W,SAAW,WAChB,OAAO9a,KAAKqsD,kBACd,EAIAnoD,EAAOwrD,sBAAwB,WAC7B,OAAO1vD,KAAKutD,iBACd,EACArpD,EAAOuyB,wBAA0B,SAAiCP,GAChE,IAAI/X,EAASne,KACT2vD,EAAgB,IAAI92C,IAOxB,OANAqd,EAAQ5lC,SAAQ,SAAU+xB,GACxB,IAAIutC,EACAj3B,EAASxa,EAAO+oC,YAAY5pD,IAAI+kB,GACpCstC,EAAch2C,IAAI0I,EAAqF,QAA5EutC,EAAwBlxB,EAAkBsX,qBAAqBrd,UAA+C,IAA1Bi3B,EAAmCA,EAAwB,KAC5K,IACAD,EAAch2C,IAAI,SAAU3Z,KAAK0sD,0BAC1B,CACLx2B,QAASA,EACTy5B,cAAeA,EAEnB,EACAzrD,EAAO2rD,uBAAyB,SAAgCC,GAC9D,IACIC,EAD0B/vD,KAAKy2B,wBAAwBq5B,EAAsB55B,SAC9By5B,cAC/CK,EAAoBF,EAAsBH,cAG9C,GAAII,EAAqBzyD,IAAI,YAAc0yD,EAAkB1yD,IAAI,UAC/D,OAAO,EAIT,IACE8uB,EADEC,GAAY,EAAI1B,EAAqC,SAAGmlC,EAAsB55B,SAElF,IACE,IAAK7J,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIoB,EAAS+J,EAAMz9B,MACnB,GAAIohE,EAAqBzyD,IAAI+kB,KAAY2tC,EAAkB1yD,IAAI+kB,GAC7D,OAAO,CAEX,CACF,CAAE,MAAOnS,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACA,OAAO,CACT,EACA2D,EAAOwyB,6BAA+B,SAAsCF,EAAmBtY,GAC7F,IAAIgB,EAASlf,KACTyI,EAAe,CACjByV,SAAUA,EACVsY,kBAAmBA,GAMrB,OADAx2B,KAAK2sD,2BAA2B5gC,IAAItjB,GAC7B,CACLnE,QALY,WACZ4a,EAAOytC,2BAAmC,OAAElkD,EAC9C,EAKF,EACAvE,EAAO4qD,gCAAkC,SAAyCrmD,EAAcwnD,GAC9F,IAAItwC,EAAS3f,KACTke,EAAWzV,EAAayV,SAExBgY,EADkBztB,EAAa+tB,kBACHN,SACG+5B,GAAoB/5B,EAAQt8B,MAAK,SAAUyoB,GAC5E,OAAO1C,EAAOitC,sBAAsB1rC,IAAImB,EAC1C,MAIAnE,GACF,EACAha,EAAO0C,SAAW,WACY,MAA1B5G,KAAK+sD,mBAAkLhlD,GAAU,GACnM,IAAI2xC,EAAM15C,KAAKoX,MACJ,MAAPsiC,GACFA,EAAI,CACF74C,KAAM,mBAGVb,KAAKstD,oBAAoB4C,sBAAsBlwD,KAAKknD,aAChDlnD,KAAKksD,SACPlsD,KAAKksD,OAAS,KACdlsD,KAAKmtD,mBAAoB,GAE3BntD,KAAK+sD,kBAAoBvB,EAA4B/gD,OAAOzK,KAAKknD,YACnE,EACAhjD,EAAOisD,QAAU,WACa,MAA1BnwD,KAAK+sD,mBAA6MhlD,GAAU,GAC9N,IAAI2xC,EAAM15C,KAAKoX,MACJ,MAAPsiC,GACFA,EAAI,CACF74C,KAAM,kBAGVb,KAAK+sD,kBAAoB,KACrB/sD,KAAKmtD,mBACPntD,KAAKuuD,aAEPvuD,KAAKstD,oBAAoB8C,sBAC3B,EACAlsD,EAAOqqD,WAAa,WACdvuD,KAAKssD,eAAiB,EACxBtsD,KAAKmtD,mBAAoB,EAGvBntD,KAAKksD,SAGTlsD,KAAKksD,OAASlsD,KAAKqwD,WACnBrwD,KAAKmsD,aAAansD,KAAKosD,SACzB,EAKAloD,EAAOosD,KAAO,WAEZ,GAA8B,MAA1BtwD,KAAK+sD,kBAIT,IADA,IAAIwD,EAAQvwD,KAAKqwD,YACTE,EAAM52D,OAAOsnB,OACvB,EACA/c,EAAOmsD,SAAQ/E,IAAAkF,MAAG,SAAUH,IAAQ,IAAAI,EAAAC,EAAAjkC,EAAAD,EAAAjmB,EAAA2N,EAAAwlC,EAAAiX,EAAAhsD,EAAA0d,EAAA,OAAAipC,IAAAsF,MAAC,SAAD9I,GAAA,cAAAA,EAAApuD,KAAAouD,EAAAnuD,MAAA,SAG5B82D,EAAazwD,KAAKqsD,mBAClBqE,EAAa,IAAIllC,IAGjBiB,GAAa,EAAI9B,EAAqC,SAAG3qB,KAAKktD,OAAO5lC,UAASwgC,EAAApuD,KAAA,EAG3E+yB,EAAWn5B,IAAG,WAAIk5B,EAASC,EAAWH,KAAKrL,KAAI,CAAA6mC,EAAAnuD,KAAA,SAKlD,OAJI4M,EAAYimB,EAAO79B,MAAM4X,UACzB2N,EAAW3N,EAAU4f,KACzBulC,EAAqB8E,KAAKxwD,KAAKgtD,cAAe94C,EAAUw8C,EAAY1wD,KAAKg1C,iBAAkBh1C,KAAKo1C,qCAChG0S,EAAAnuD,KAAA,IACK,WAGD82D,IAAezwD,KAAKqsD,mBAAkB,CAAAvE,EAAAnuD,KAAA,gBAAAmuD,EAAA+I,OAAA,sBAAA/I,EAAAnuD,KAAA,gBAAAmuD,EAAAnuD,KAAA,iBAAAmuD,EAAApuD,KAAA,GAAAouD,EAAAgJ,GAAAhJ,EAAA,SAK5Cr7B,EAAWl5B,EAACu0D,EAAAgJ,IAAM,QAEH,OAFGhJ,EAAApuD,KAAA,GAElB+yB,EAAWlsB,IAAIunD,EAAAiJ,OAAA,YAWjB,GARW,OADPrX,EAAM15C,KAAKoX,QAEbsiC,EAAI,CACF74C,KAAM,WACN6vD,WAAYA,IAKQ,IAApBA,EAAWh1D,KAEbsE,KAAKgtD,cAAc7rC,aAInB,IADIwvC,EAAW3wD,KAAKgtD,cAAczkB,eACzB5jC,EAAK,EAAGA,EAAKgsD,EAAS38D,OAAQ2Q,IACjC0d,EAASsuC,EAAShsD,GACjB+rD,EAAWxvC,IAAImB,IAClBriB,KAAKgtD,cAAcgE,OAAO3uC,GAG/B,OAAAylC,EAAA+I,OAAA,mCAAA/I,EAAAmJ,OAAA,GAhDuBZ,EAAQ,wBAoD7BzxB,CACT,CA5coC,GAmlBpCt/B,EAAOC,QAAUq/B,qCCznBjB,IACIjU,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7D4H,EAAY5H,EAAQ,MACpB0+B,EAAqC,WACvC,SAASA,IACP7+B,KAAKkxD,2BAA6B,IAAIr4C,IACtC7Y,KAAKmxD,2BAA6B,IAAIt4C,IACtC7Y,KAAKoxD,wBAA0B,IAAIv4C,GACrC,CAMA,IAAI3U,EAAS26B,EAAsBnrC,UAqKnC,OApKAwQ,EAAO+1B,OAAS,SAAgBo3B,EAAkBC,GAChD,GAA4B,IAAxBA,EAAe51D,KAAnB,CAGA,IAGE0wB,EAHEmlC,EAA6BF,EAAiBpvC,WAC9CuvC,EAAgC,IAAIhmC,IACpCa,GAAY,EAAI1B,EAAqC,SAAG2mC,GAE5D,IACE,IAAKjlC,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IACIwwC,EADQrlC,EAAMz9B,MACUszB,WACxByvC,EAAkC1xD,KAAKkxD,2BAA2B5zD,IAAIm0D,GACnC,MAAnCC,EAIGA,EAAgCxwC,IAAIqwC,KACvCG,EAAgC/3C,IAAI43C,EAA4BF,GAChEG,EAA8BzlC,IAAI0lC,KAIpCzxD,KAAKkxD,2BAA2Bv3C,IAAI83C,EAAiB,IAAI54C,IAAI,CAAC,CAAC04C,EAA4BF,MAC3FG,EAA8BzlC,IAAI0lC,GAEtC,CAGF,CAAE,MAAOvhD,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACA,GAA2C,IAAvCixD,EAA8B91D,KAAlC,CAMA,IAEE8wB,EAFEmlC,EAAmC3xD,KAAKmxD,2BAA2B7zD,IAAIi0D,IAA+B,IAAI/lC,IAC1GiB,GAAa,EAAI9B,EAAqC,SAAG6mC,GAE7D,IACE,IAAK/kC,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAI2wC,EAAmBplC,EAAO79B,MAC9BqR,KAAK6xD,uBAAuBD,GAC5BD,EAAiC5lC,IAAI6lC,EACvC,CACF,CAAE,MAAO1hD,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACAP,KAAKmxD,2BAA2Bx3C,IAAI43C,EAA4BI,EAlBhE,CAjCA,CAoDF,EAMAztD,EAAOqE,SAAW,SAAkB8oD,GAClC,IAAIE,EAA6BF,EAAiBpvC,WAC9C6vC,EAA2B9xD,KAAKmxD,2BAA2B7zD,IAAIi0D,GACnE,GAAgC,MAA5BO,EAAJ,CAIA,IAMEr1B,EANEs1B,EAA4B,IAAIvmC,IAIhCwmC,EAA0B,IAAIxmC,IAC9BmR,GAAa,EAAIhS,EAAqC,SAAGmnC,GAE7D,IACE,IAAKn1B,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAIwwC,EAAkBh1B,EAAO9tC,MACzB+iE,EAAkC1xD,KAAKkxD,2BAA2B5zD,IAAIm0D,GACrEC,IAGLA,EAAwC,OAAEH,GACtCG,EAAgCh2D,KAAO,EACzCs2D,EAAwBjmC,IAAI0lC,GAE5BM,EAA0BhmC,IAAI0lC,GAElC,CAGF,CAAE,MAAOvhD,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACA,IACE+8B,EADEE,GAAa,EAAI7S,EAAqC,SAAGonC,GAE7D,IACE,IAAKv0B,EAAWlqC,MAAOgqC,EAASE,EAAWlR,KAAKrL,MAAO,CACrD,IAAIgxC,EAAoB30B,EAAO3uC,MAC/BqR,KAAK6xD,uBAAuBI,GAC5BjyD,KAAKkxD,2BAAmC,OAAEe,EAC5C,CAIF,CAAE,MAAO/hD,GACPstB,EAAWjqC,EAAE2c,EACf,CAAE,QACAstB,EAAWj9B,GACb,CACA,IACEm9B,EADEC,GAAa,EAAIhT,EAAqC,SAAGqnC,GAE7D,IACE,IAAKr0B,EAAWrqC,MAAOoqC,EAASC,EAAWrR,KAAKrL,MAAO,CACrD,IAAIixC,EAAoBx0B,EAAO/uC,MAC/BqR,KAAK6xD,uBAAuBK,EAC9B,CAGF,CAAE,MAAOhiD,GACPytB,EAAWpqC,EAAE2c,EACf,CAAE,QACAytB,EAAWp9B,GACb,CACAP,KAAKmxD,2BAAmC,OAAEI,EA5D1C,CA6DF,EACArtD,EAAO2tD,uBAAyB,SAAgCJ,GAC9D,IAAIU,EAAenyD,KAAKoxD,wBAAwB9zD,IAAIm0D,GAChC,MAAhBU,GACFA,EAAalvD,UAEfjD,KAAKoxD,wBAAgC,OAAEK,EACzC,EACAvtD,EAAOkuD,mCAAqC,SAA4C99C,GACtF,IAAIm9C,EAAkBn9C,EAAM2N,WACxBowC,EAA4BryD,KAAKkxD,2BAA2B5zD,IAAIm0D,GACpE,GAAiC,MAA7BY,GAAwE,IAAnCA,EAA0B32D,KACjE,OAAO,KAET,IAOIuH,EAPAqvD,EAAqBtyD,KAAKoxD,wBAAwB9zD,IAAIm0D,GAC1D,GAA0B,MAAtBa,EACF,MAAO,CACLp3C,QAASo3C,EAAmBp3C,QAC5BG,kBAAmBi3C,EAAmBj3C,mBAI1C,IAAIH,EAAU,IAAIqC,SAAQ,SAAUjN,GAClCrN,EAAUqN,CACZ,IACa,MAAXrN,GAAkM8E,GAAU,GAC9M,IAAIsT,EAAoBtf,MAAMs6B,KAAKg8B,EAA0B/qC,UAM7D,OALAtnB,KAAKoxD,wBAAwBz3C,IAAI83C,EAAiB,CAChDv2C,QAASA,EACTjY,QAASA,EACToY,kBAAmBA,IAEd,CACLH,QAASA,EACTG,kBAAmBA,EAEvB,EACOwjB,CACT,CAjLyC,GAkLzCv/B,EAAOC,QAAUs/B,oCCrLjB,IACIt9B,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChD2+B,EAAoB3+B,EAAQ,MAC5B4H,EAAY5H,EAAQ,MACpBoyD,EAA4BhkE,OAAO6pB,OAAO,CAC5Co6C,6BAA6B,IAQ3BhH,EAA2C,WAC7C,SAASA,EAA4BhlB,GACnCxmC,KAAK0mC,MAAQF,EACbxmC,KAAK2mC,MAAQ7H,EAAkBr0B,QACjC,CACA,IAAIvG,EAASsnD,EAA4B93D,UAkEzC,OAjEAwQ,EAAOgd,IAAM,SAAamB,GACxB,OAAIriB,KAAK2mC,MAAMzlB,IAAImB,GACAriB,KAAK2mC,MAAMrpC,IAAI+kB,KACVkwC,EAEfvyD,KAAK0mC,MAAMxlB,IAAImB,EAE1B,EACAne,EAAO5G,IAAM,SAAa+kB,GACxB,GAAIriB,KAAK2mC,MAAMzlB,IAAImB,GAAS,CAC1B,IAAIykB,EAAa9mC,KAAK2mC,MAAMrpC,IAAI+kB,GAChC,OAAIykB,IAAeyrB,OACjB,EAEOzrB,CAEX,CACE,OAAO9mC,KAAK0mC,MAAMppC,IAAI+kB,EAE1B,EACAne,EAAOmjC,UAAY,SAAmBhlB,GACpC,IAAIsW,EAAS34B,KAAK1C,IAAI+kB,GACtB,YAAeloB,IAAXw+B,EACK,UACa,OAAXA,EACF,cAEA,UAEX,EACAz0B,EAAOid,MAAQ,WACbnhB,KAAK0mC,MAAQ5H,EAAkBr0B,SAC/BzK,KAAK2mC,MAAMxlB,OACb,EACAjd,EAAe,OAAI,SAAiBme,GAClCriB,KAAK2mC,MAAc,OAAEtkB,EACvB,EACAne,EAAO8sD,OAAS,SAAgB3uC,GAC9BriB,KAAK2mC,MAAMhtB,IAAI0I,EAAQkwC,EACzB,EACAruD,EAAOyV,IAAM,SAAa0I,EAAQsW,GAChC34B,KAAK2mC,MAAMhtB,IAAI0I,EAAQsW,EACzB,EACAz0B,EAAOqkC,aAAe,WACpB,OAAOh6C,OAAO4C,KAAK6O,KAAKsnD,SAC1B,EACApjD,EAAOxI,KAAO,WACZ,OAAOnN,OAAO4C,KAAK6O,KAAKsnD,UAAUtzD,MACpC,EACAkQ,EAAOojD,OAAS,WACd,IAAI5kD,EAAQ1C,KACRpC,GAAS,EAAI2D,EAAwB,SAAG,CAAC,EAAGvB,KAAK0mC,MAAM4gB,UAS3D,OARAtnD,KAAK2mC,MAAM4B,eAAej4C,SAAQ,SAAU+xB,GAC1C,IAAIsW,EAASj2B,EAAMpF,IAAI+kB,QACRloB,IAAXw+B,SACK/6B,EAAOykB,GAEdzkB,EAAOykB,GAAUsW,CAErB,IACO/6B,CACT,EACAsG,EAAOuuD,uBAAyB,WAC9B,OAAO,IAAIjnC,IAAIxrB,KAAK2mC,MAAM4B,eAC5B,EACOijB,CACT,CAxE+C,GAgF/ClsD,EAAOC,QAAU,CACfkL,OARF,SAAgB+7B,GACd,OAAO,IAAIglB,EAA4BhlB,EACzC,EAOEisB,uBANF,SAAgC1zD,GAE9B,OADEA,aAAkBysD,GAAyKzjD,GAAU,GAChMhJ,EAAO0zD,wBAChB,sCC5FA,IAAIC,EAAuBC,EACvBpsB,EAA2BpmC,EAAQ,MACnCwnC,EAAyBxnC,EAAQ,MACjC6oC,EAAiC7oC,EAAQ,MACzCsrD,EAActrD,EAAQ,MACtB2+B,EAAoB3+B,EAAQ,MAC5B4H,EAAY5H,EAAQ,MAEpByyD,GADUzyD,EAAQ,MACU,qBAAXnB,EAAAA,EAAyBA,EAAAA,EAA2B,qBAAX6zD,OAAyBA,YAAS14D,GAC5F24D,EAAkO,QAAhNJ,EAAoC,OAAZE,QAAgC,IAAZA,GAA4E,QAA7CD,EAAqBC,EAAQG,kBAA+C,IAAvBJ,OAA/D,EAAwGA,EAAmBG,sBAAsD,IAA1BJ,EAAmCA,EAAwB,SAAUx0C,EAAUnhB,EAAS2D,EAAMwwB,EAASrwB,GACnV,OAAOqd,EAASisB,MAAMptC,EAAS2D,EACjC,EAaIwkD,EAAiC,WAoBnC,SAASA,EAAkB3uB,EAAOqR,EAAiB7P,EAAW8P,GAC5D7nC,KAAKgzD,mBAAoB,EACzBhzD,KAAK+nC,iBAAmBH,GAAmB,KAC3C5nC,KAAKizD,sBAAuB,EAC5BjzD,KAAKkzD,aAAe,IAAI1nC,IACxBxrB,KAAKmzD,0BAA4B,IAAI3nC,IACrCxrB,KAAKmmD,OAAS5vB,EACdv2B,KAAKozD,0BAA4B,IAAI5nC,IACrCxrB,KAAKqzD,QAAU,KACfrzD,KAAKioC,WAAalQ,EAClB/3B,KAAKooC,sBAAwBP,CAC/B,CAKA,IAAI3jC,EAASghD,EAAkBxxD,UAwO/B,OAvOAwQ,EAAOi7C,YAAc,SAAqB1vD,IACrCuQ,KAAKozD,0BAA0BlyC,IAAIzxB,IAAauQ,KAAKmzD,0BAA0BjyC,IAAIzxB,KAAqKsY,GAAU,GACrQ/H,KAAKmzD,0BAA0BpnC,IAAIt8B,EACrC,EAKAyU,EAAO83C,aAAe,SAAsBvsD,GACtCuQ,KAAKmzD,0BAA0BjyC,IAAIzxB,GAErCuQ,KAAKmzD,0BAAkC,OAAE1jE,GAChCuQ,KAAKozD,0BAA0BlyC,IAAIzxB,KAC5CuQ,KAAKizD,sBAAuB,EAC5BjzD,KAAKozD,0BAAkC,OAAE3jE,GAE7C,EAKAyU,EAAOovD,UAAY,WACjBtzD,KAAKizD,sBAAuB,EAC5BjzD,KAAKmzD,0BAA0BhyC,QAC/BnhB,KAAKozD,0BAA0BjyC,OACjC,EAKAjd,EAAO87C,cAAgB,SAAuBz5C,EAAWmH,EAASje,GAChEuQ,KAAKizD,sBAAuB,EAC5BjzD,KAAKkzD,aAAannC,IAAI,CACpB3X,KAAM,UACN7N,UAAWA,EACXmH,QAASA,EACTje,QAASA,GAEb,EAMAyU,EAAO4lC,aAAe,SAAsBr6C,GAC1CuQ,KAAKizD,sBAAuB,EAC5BjzD,KAAKkzD,aAAannC,IAAI,CACpB3X,KAAM,UACN3kB,QAASA,GAEb,EAOAyU,EAAOijD,aAAe,SAAsBpoD,GAC1CiB,KAAKizD,sBAAuB,EAC5BjzD,KAAKkzD,aAAannC,IAAI,CACpB3X,KAAM,SACNrV,OAAQA,GAEZ,EAKAmF,EAAOggD,IAAM,SAAawK,GACxB,IAAI6E,EAAwD,IAAnCvzD,KAAKozD,6BAAqCpzD,KAAKqzD,QAUxE,IANCrzD,KAAKizD,sBAAgE,IAAxCjzD,KAAKmzD,0BAA0Bz3D,OAAe63D,EAU1E,MAAO,GAELvzD,KAAKizD,sBACHjzD,KAAKgzD,oBACPhzD,KAAKmmD,OAAOgK,UACZnwD,KAAKgzD,mBAAoB,GAG7B,IAAI/C,EAAmBjwD,KAAKwzD,cAsB5B,OArBIxzD,KAAKmzD,0BAA0Bz3D,MAAQsE,KAAKizD,sBAAwBjzD,KAAKozD,0BAA0B13D,QAChGsE,KAAKgzD,oBACRhzD,KAAKmmD,OAAOv/C,WACZ5G,KAAKgzD,mBAAoB,GAE3BhzD,KAAKyzD,iBAEPzzD,KAAKizD,sBAAuB,EACxBjzD,KAAKozD,0BAA0B13D,KAAO,EACnCsE,KAAKqzD,UACRrzD,KAAKqzD,QAAUrzD,KAAKmmD,OAAOsJ,UAGzBzvD,KAAKqzD,UACPrzD,KAAKqzD,QAAQ/uD,UACbtE,KAAKqzD,QAAU,MAMZrzD,KAAKmmD,OAAOsI,OAAOC,EAAiBuB,EAC7C,EAMA/rD,EAAOwvD,0BAA4B,SAAmCC,GACpE,IAAIjxD,EAAQ1C,KACR0N,EAAUimD,EAAejmD,QAC3BnH,EAAYotD,EAAeptD,UAC3B9W,EAAUkkE,EAAelkE,QACvBsP,EAAS2O,EAAQ3O,OACnBupC,EAAgB56B,EAAQ46B,cACtBtD,EAAU,IAAIuB,EAAyBvmC,KAAKmmD,OAAOe,YAAanoD,GAChE4sC,EAAoB,IAAIhE,EAAuB3C,EAAShlC,KAAKioC,WAAYjoC,KAAK+nC,iBAAkB/nC,KAAKooC,uBAQzG,GAPIE,GAAiBA,EAAct0C,QACjCs0C,EAAch4C,SAAQ,SAAUm4C,GAC9B,IAAIC,EAAUhmC,EAAMqlC,kBAAoBrlC,EAAMqlC,iBAAiBU,EAAa1R,QAC3E2R,GAA6K3gC,GAAU,GACxL2gC,EAAQzO,OAAO0R,EAAmBlD,EACpC,IAEEh5C,EAAS,CACX,IAAIykB,EAAW3N,EAAUS,SACX,MAAZkN,GAAoKnM,GAAU,GAGhLtY,EAFgC,IAAIu5C,EAA+BhE,EAAS2G,EAAmBz3B,EAAUlU,KAAKooC,uBAC3FwrB,EAAe70D,EAAQmV,GAE5C,CACA,IAAIi7C,EAA2BxjB,EAAkB7C,8BAEjD,OADA9oC,KAAKmmD,OAAO+I,QAAQnwD,EAAQowD,GACrBxjB,EAAkB9C,8BAC3B,EAMA3kC,EAAOsvD,YAAc,WACnB,IAAI/nD,EAASzL,KACb,IAAKA,KAAKkzD,aAAax3D,KACrB,OAAO,EAET,IAAIu0D,GAAmB,EAoBvB,OAnBAjwD,KAAKkzD,aAAa5iE,SAAQ,SAAU0S,GAClC,GAAkB,YAAdA,EAAKoR,KAAoB,CAC3B,IAAIy/C,EAA0BpoD,EAAOioD,0BAA0B1wD,GAC/DitD,EAAmBA,GAAoB4D,CACzC,MAAO,GAAkB,WAAd7wD,EAAKoR,KAAmB,CACjC,IAAIrV,EAASiE,EAAKjE,OAClB0M,EAAO06C,OAAO+I,QAAQnwD,EACxB,KAAO,CACL,IAAItP,EAAUuT,EAAKvT,QACfib,EAAOo0B,EAAkBr0B,SACzBu6B,EAAU,IAAIuB,EAAyB96B,EAAO06C,OAAOe,YAAax8C,GAClEihC,EAAoB,IAAIhE,EAAuB3C,EAASv5B,EAAOw8B,WAAYx8B,EAAOs8B,iBAAkBt8B,EAAO28B,uBAC/G0qB,EAAerjE,EAAS,KAAM,CAACk8C,GAAoB,KAAM,gCACzDskB,EAAmBA,GAAoBtkB,EAAkB9C,+BACzD,IAAIsmB,EAA2BxjB,EAAkB7C,8BACjDr9B,EAAO06C,OAAO+I,QAAQxkD,EAAMykD,EAC9B,CACF,IACAnvD,KAAKkzD,aAAa/xC,QACX8uC,CACT,EAOA/rD,EAAOuvD,cAAgB,WACrB,IAAI1mD,EAAS/M,KACT0K,EAAOo0B,EAAkBr0B,SACzBu6B,EAAU,IAAIuB,EAAyBvmC,KAAKmmD,OAAOe,YAAax8C,GAChEihC,EAAoB,IAAIhE,EAAuB3C,EAAShlC,KAAKioC,WAAYjoC,KAAK+nC,iBAAkB/nC,KAAKooC,uBAGrG0rB,EAAgB,SAAuBpN,GACzC,GAAIA,EAAiBqN,aAAc,CACjC,IAAIA,EAAerN,EAAiBqN,aACpCjB,EAAeiB,EAAc,KAAM,CAACpoB,GAAoB,KAAM,iCAChE,KAAO,CACL,IAAIplC,EAAYmgD,EAAiBngD,UAC/BmH,EAAUg5C,EAAiBh5C,QAC3Bje,EAAUi3D,EAAiBj3D,QACzBsP,EAAS2O,EAAQ3O,OACnBupC,EAAgB56B,EAAQ46B,cAI1B,GAHIvpC,GACF4sC,EAAkBtD,cAActpC,EAAQupC,GAEtC74C,EAAS,CACX,IAAIukE,EACAj1D,IACFi1D,EAAeJ,EAAe70D,EAAQwH,EAAUS,WAElD,IAAIitD,EAA4B,IAAIjrB,EAA+BhE,EAAS2G,EAAmBplC,EAAUS,SAAU+F,EAAOq7B,uBAC1H0qB,EAAerjE,EAAS,KAAM,CAACwkE,EAA2BD,GAAe,KAAM,iCACjF,CACF,CACF,EAGIh0D,KAAKizD,sBAAwBjzD,KAAKozD,0BAA0B13D,MAC9DsE,KAAKozD,0BAA0B9iE,QAAQwjE,GAIrC9zD,KAAKmzD,0BAA0Bz3D,OACjCsE,KAAKmzD,0BAA0B7iE,SAAQ,SAAUo2D,GAC/CoN,EAAcpN,GACd35C,EAAOqmD,0BAA0BrnC,IAAI26B,EACvC,IACA1mD,KAAKmzD,0BAA0BhyC,SAEjCnhB,KAAKmmD,OAAO+I,QAAQxkD,EACtB,EACOw6C,CACT,CA7QqC,GA8QrC,SAAS0O,EAAe70D,EAAQmV,GAQ9B,OAPmBu3C,EAAYpxC,KAAKtb,EAAQmV,GAAUlR,IAQxD,CACA1D,EAAOC,QAAU2lD,qCChTjB,IAAI5jD,EAAyBnB,EAAAA,MAAAA,QACzBwqB,EAA8BrpB,EAAuBnB,EAAQ,OAC7DwB,EAAmBL,EAAuBnB,EAAQ,OAClDkX,EAAsB/V,EAAuBnB,EAAQ,MACrDwF,EAAWxF,EAAQ,MACrBiqC,EAAezkC,EAASykC,aACxBC,EAA0B1kC,EAAS0kC,wBACnCC,EAAiC3kC,EAAS2kC,+BAC1CC,EAA+B5kC,EAAS4kC,6BACxCC,EAA+B7kC,EAAS6kC,6BACxCC,EAAmB9kC,EAAS8kC,iBAC5BC,EAAY/kC,EAAS+kC,UACrBC,EAAQhlC,EAASglC,MACjBC,EAAejlC,EAASilC,aACxBC,EAAkBllC,EAASklC,gBAC3BC,EAA8BnlC,EAASmlC,4BACvCC,EAAkBplC,EAASolC,gBAC3BC,EAAerlC,EAASqlC,aACxBC,EAAgBtlC,EAASslC,cACzBC,EAAsBvlC,EAASulC,oBAC/BC,EAAiBxlC,EAASwlC,eAC1BC,EAAiBzlC,EAASylC,eAC1BC,EAAe1lC,EAAS0lC,aACxBC,EAAS3lC,EAAS2lC,OAChBpjC,EAAoB/H,EAAQ,MAE9BqpD,EADcrpD,EAAQ,MACSqpD,mBAC7BjrB,EAAyBp+B,EAAQ,MACjCu+B,EAAoBv+B,EAAQ,MAE9B+zD,EADc/zD,EAAQ,MACmB+zD,6BACvC7/B,EAAYl0B,EAAQ,MACtBqqD,EAA6Bn2B,EAAUm2B,2BACvC9oB,EAAqBrN,EAAUqN,mBAC/ByyB,EAAyB9/B,EAAU8/B,uBACnC1yB,EAAgBpN,EAAUoN,cAC1BE,EAAStN,EAAUsN,OACnB8oB,EAAsCp2B,EAAUo2B,oCAChD2J,EAAuB//B,EAAU+/B,qBACjCtyB,EAAUzN,EAAUyN,QACpB1B,EAAoB/L,EAAU+L,kBAC9BI,EAAwBnM,EAAUmM,sBAClCO,EAAgB1M,EAAU0M,cAE1BszB,EADcl0D,EAAQ,MACQk0D,kBAC5BC,EAAYn0D,EAAQ,MACtBo0D,EAA0CD,EAAUC,wCACpDC,EAAsBF,EAAUE,oBAEhCvgB,EADc9zC,EAAQ,MACK8zC,eACzBlsC,EAAY5H,EAAQ,MACxB,SAASka,EAAK4uB,EAAc/0B,EAAUugD,GAEpC,OADa,IAAIhJ,EAAYxiB,EAAc/0B,EAA4B,OAAlBugD,QAA4C,IAAlBA,EAA2BA,EAAgB,IAAIJ,GAChHh6C,MAChB,CAKA,IAAIoxC,EAA2B,WAC7B,SAASA,EAAYxiB,EAAc/0B,EAAUugD,GAC3C,IAAIC,EACJ10D,KAAK20D,yBAA2BzsD,EAAkBgS,qBAAsF,QAA9Dw6C,EAAwBxgD,EAAS22C,+BAA+D,IAA1B6J,GAAoCA,EAAsB1gE,QAAS,EAAIqjB,EAA6B,SAAGnD,EAAS22C,yBAA2B,GAC3R7qD,KAAK40D,oBAAsB,GAC3B50D,KAAK60D,2BAA6B,GAClC70D,KAAKgpD,gBAAiB,EACtBhpD,KAAK80D,kCAAmC,EACxC90D,KAAKipD,uBAAyB,KAC9BjpD,KAAK+0D,OAAS7gD,EAASI,MACvBtU,KAAKgtD,cAAgB/jB,EACrBjpC,KAAKg1D,aAAe,IAAIxpC,IACxBxrB,KAAKmpD,UAAYj1C,EACjBlU,KAAKm1C,WAAajhC,EAAS5kB,UAC3B0Q,KAAKotD,eAAiBqH,EACtBz0D,KAAKi1D,gBAAkB,GACvBj1D,KAAKk1D,cAAgBhhD,EAASrG,KAAKhN,KACnCb,KAAKm1D,gBAAkB,IAAI3pC,GAC7B,CACA,IAAItnB,EAASunD,EAAY/3D,UA2yBzB,OA1yBAwQ,EAAOmW,KAAO,WACZ,IAAI+6C,EAAkBp1D,KAAKmpD,UACzBt7C,EAAOunD,EAAgBvnD,KACvBwU,EAAS+yC,EAAgB/yC,OACzBsoC,EAAkCyK,EAAgBzK,gCAChDlU,EAAc5oC,EAAK4oC,YACnB9d,EAAS34B,KAAKgtD,cAAc1vD,IAAI+kB,GAYhCgzC,GAA6B1K,EAI7B0K,GAA4C,MAAf5e,GAAiC,MAAV9d,IACrC+F,EAAkBzG,QAAQU,KACxB9qB,EAAK/d,MASxBuyB,IAAWyf,IACTuzB,GAA4B,IAQhC,GAAIA,GAA4C,MAAf5e,GAAiC,MAAV9d,EAAgB,CACtE,IAAI28B,EAAsBt1D,KAAK42C,qBAAqBje,EAAQ8d,IAChC,IAAxB6e,EAEFD,GAA4B,EACI,MAAvBC,IAETt1D,KAAKgpD,gBAAiB,EAE1B,CACAhpD,KAAK80D,kCAAoCO,EACzC,IAAIryD,EAAOhD,KAAKw1C,UAAU3nC,EAAMwU,EAAQ,MAKxC,OAJIriB,KAAKm1D,gBAAgBz5D,KAAO,IAC9BsE,KAAKotD,eAAemI,yBAAyBv1D,KAAKm1D,iBAClDn1D,KAAKm1D,gBAAgBh0C,SAEhB,CACLne,KAAMA,EACNqV,cAAerY,KAAKgpD,gBAAkBqM,EACtCr5C,mBAAoB9T,EAAkBgS,qBAAuBla,KAAK40D,oBAAoB5gE,OAASgM,KAAK40D,oBAAsB,KAC1Ht8C,0BAA2BtY,KAAK60D,2BAChCp1C,YAAazf,KAAKg1D,aAClB9gD,SAAUlU,KAAKmpD,UACftrC,sBAAuB7d,KAAKipD,uBAC5BnrC,oBAAqB9d,KAAKi1D,gBAE9B,EACA/wD,EAAOsxD,mBAAqB,WAE1B,GADAx1D,KAAKgpD,gBAAiB,EAClB9gD,EAAkBgS,qBAAuBla,KAAK20D,yBAAyB3gE,OAAQ,CACjF,IAAIyhE,EAAMz1D,KAAK20D,yBAAyB30D,KAAK20D,yBAAyB3gE,OAAS,GAInE,OAARyhE,GACFz1D,KAAK40D,oBAAoB72D,KAAK,CAC5ByI,QAASivD,EAAIC,iBAAiBnvD,UAC9BiW,wBAAyBi5C,EAAIj5C,yBAGnC,CACF,EACAtY,EAAOsxC,UAAY,SAAmB3nC,EAAMwU,EAAQ1U,GAClD,IAAIgrB,EAAS34B,KAAKgtD,cAAc1vD,IAAI+kB,GAEpC,GADAriB,KAAKg1D,aAAajpC,IAAI1J,GACR,MAAVsW,EAIF,YAHex+B,IAAXw+B,GACF34B,KAAKw1D,qBAEA78B,EAET,IAAI31B,EAAO2K,GAAY,CAAC,EAExB,OADsB3N,KAAKi2C,oBAAoBpoC,EAAKo1B,WAAYtK,EAAQ31B,GAC/CA,EAAO,IAClC,EACAkB,EAAOwxC,kBAAoB,SAA2B70C,GAEpD,OADCb,KAAKm1C,WAAWxhD,eAAekN,IAAoHkH,GAAU,GACvJ/H,KAAKm1C,WAAWt0C,EACzB,EACAqD,EAAOyxD,2BAA6B,SAAoCC,EAAWphC,EAAQqhC,GACzF,IAAIC,EACJ,GAAqJ,WAAtF,QAAzDA,EAAwB91D,KAAKipD,8BAA8D,IAA1B6M,OAAmC,EAASA,EAAsBthC,QAAzI,CAMA,IAAIlgB,EAAQtU,KAAKk1D,cACjB,OAAQ1gC,GACN,IAAK,QAQH,YAPAx0B,KAAKipD,uBAAyB,CAC5Bz0B,OAAQA,EACRgV,MAAO,CACLx2C,KAAM4iE,EACNthD,MAAOA,KAIb,IAAK,MAkBH,YAjBmC,MAA/BtU,KAAKipD,uBACPjpD,KAAKipD,uBAAyB,CAC5Bz0B,OAAQA,EACRuhC,OAAQ,CAAC,CACP/iE,KAAM4iE,EACNthD,MAAOA,KAIXtU,KAAKipD,uBAAyB,CAC5Bz0B,OAAQA,EACRuhC,OAAQ,GAAGlnE,QAAO,EAAIwoB,EAA6B,SAAGrX,KAAKipD,uBAAuB8M,QAAS,CAAC,CAC1F/iE,KAAM4iE,EACNthD,MAAOA,OA1BjB,CAkCF,EACApQ,EAAO+xC,oBAAsB,SAA6BhT,EAAYtK,EAAQ31B,GAC5E,IAAK,IAAIjP,EAAI,EAAGA,EAAIkvC,EAAWjvC,OAAQD,IAAK,CAC1C,IAAI01C,EAAYxG,EAAWlvC,GAC3B,OAAQ01C,EAAUr1B,MAChB,KAAKg3B,EAGD,GAAkB,MADDprC,KAAKg2D,mBAAmBvsB,EAAW9Q,EAAQ31B,GACpC,CACtB,IAAIwxB,EAASiV,EAAUjV,OAOvB,MANe,SAAXA,GACFx0B,KAAK21D,2BAA2BlsB,EAAUz2C,KAAMwhC,EAAQmE,IAKnD,CACT,CACA,MAEJ,KAAK0S,EACHrrC,KAAKi2D,YAAYxsB,EAAW9Q,EAAQ31B,GACpC,MACF,KAAKgoC,EACCvB,EAAU1uB,OACZ/a,KAAKk2D,gBAAgBzsB,EAAW9Q,EAAQ31B,GAExChD,KAAKm2D,UAAU1sB,EAAW9Q,EAAQ31B,GAEpC,MACF,KAAK0nC,EAEH,GADqBnyB,QAAQvY,KAAK01C,kBAAkBjM,EAAUrpC,cACvCqpC,EAAU8M,aAE/B,IADsBv2C,KAAKi2C,oBAAoBxM,EAAUxG,WAAYtK,EAAQ31B,GAE3E,OAAO,EAGX,MACF,KAAK+nC,EAED,IAA0D,IAAtD/qC,KAAKo2D,oBAAoB3sB,EAAW9Q,EAAQ31B,GAC9C,OAAO,EAET,MAEJ,KAAKkoC,EACL,KAAKC,EAED,IAAKjjC,EAAkBymD,uBACrB,MAAM,IAAIluD,MAAM,gDAElBT,KAAKq2D,mBAAmB5sB,EAAW9Q,EAAQ31B,GAC3C,MAEJ,KAAK6nC,EACH7qC,KAAKs2D,uBAAuB7sB,EAAW9Q,EAAQ31B,GAC/C,MACF,KAAKqnC,EACHrnC,EAAKymC,EAAU5oC,MAAQb,KAAKu2D,6BAA6B9sB,EAAW9Q,GACpE,MACF,KAAK2R,EAED,IAAIksB,EAAcx2D,KAAKo2D,oBAAoB3sB,EAAUziC,SAAU2xB,EAAQ,CAAC,IACpD,IAAhB69B,IACFA,EAAc,MAEhBxzD,EAAKymC,EAAU5oC,MAAQ21D,EACvB,MAEJ,KAAKvrB,EACHjrC,KAAKy2D,kBAAkBhtB,EAAW9Q,EAAQ31B,GAC1C,MACF,KAAK8nC,EACH9qC,KAAK02D,2CAA2CjtB,EAAW9Q,EAAQ31B,GACnE,MACF,KAAK2nC,EACL,KAAKF,EAED,IAAIpyB,EAAgBrY,KAAKgpD,eACrB2N,EAA4B32D,KAAK40D,oBAAoB5gE,OACrDkU,EAAkBgS,qBACpBla,KAAK20D,yBAAyB52D,KAAK,MAErC,IAAI64D,EAAmB52D,KAAKi2C,oBAAoBxM,EAAUxG,WAAYtK,EAAQ31B,GAQ9E,GAJAhD,KAAKgpD,eAAiB3wC,GAAiBrY,KAAK40D,oBAAoB5gE,OAAS2iE,GAA6B32D,KAAK60D,2BAA2B7gE,OAAS,EAC3IkU,EAAkBgS,qBACpBla,KAAK20D,yBAAyBt1D,OAE3Bu3D,EACH,OAAO,EAET,MAEJ,KAAKtrB,EAGD,IADwBtrC,KAAKi2C,oBAAoBxM,EAAUxG,WAAYtK,EAAQ31B,GAE7E,OAAO,EAET,MAEJ,KAAK4nC,EACH,IAAI1iC,EAAkBmvC,oCAGpB,MAAM,IAAI52C,MAAM,wCAFhBT,KAAK62D,iBAAiBptB,EAAW9Q,EAAQ31B,GAI3C,MACF,KAAKonC,EACHpqC,KAAK82D,iBAAiBrtB,EAAW9Q,EAAQ31B,GACzC,MACF,KAAKunC,EACL,KAAKC,EACH,IAAItiC,EAAkBgS,oBAGpB,MAAM,IAAIzZ,MAAM,uCAFhBT,KAAK+2D,gBAAgBttB,EAAW9Q,EAAQ31B,GAI1C,MACF,QAEkI+E,GAAU,GAEhJ,CACA,OAAO,CACT,EACA7D,EAAO8xD,mBAAqB,SAA4BvsB,EAAW9Q,EAAQ31B,GACzE,OAAQymC,EAAUD,MAAMp1B,MACtB,KAAKi3B,EACH,OAAOrrC,KAAKi2D,YAAYxsB,EAAUD,MAAO7Q,EAAQ31B,GACnD,KAAKgoC,EACH,OAAIvB,EAAUD,MAAMzuB,OACX/a,KAAKk2D,gBAAgBzsB,EAAUD,MAAO7Q,EAAQ31B,GAE9ChD,KAAKm2D,UAAU1sB,EAAUD,MAAO7Q,EAAQ31B,GAEnD,KAAKmoC,EAKL,KAAKD,EACH,IAAKhjC,EAAkBymD,uBACrB,MAAM,IAAIluD,MAAM,gDAElB,OAAOT,KAAKq2D,mBAAmB5sB,EAAUD,MAAO7Q,EAAQ31B,GAC1D,KAAKunC,EACL,KAAKC,EACH,IAAKtiC,EAAkBymD,uBACrB,MAAM,IAAIluD,MAAM,gDAElB,OAAOT,KAAK+2D,gBAAgBttB,EAAUD,MAAO7Q,EAAQ31B,GACvD,QACEymC,EAAUD,MAAMp1B,KACgHrM,GAAU,GAEhJ,EACA7D,EAAOmyD,mBAAqB,SAA4B7sB,EAAO7Q,EAAQ31B,GACrE,IACIwgD,EAOA58C,EARAlE,EAAQ1C,KAERgH,EAAWwiC,EAAMxiC,SACjBgwD,EAAiBt4B,EAAkB3G,UAAUY,GAe7Cs+B,EAA6B,SAAoCC,GACnE,OAAgB,MAAZtwD,EAIK,CACL5D,KAAM4D,EAAS5D,KACfqV,cAAezR,EAASyR,eAIrB,CACLrV,MAFF4D,EAAWyT,EAAK3X,EAAMsqD,cAAekK,EAAwBx0D,EAAM0qD,iBAElDpqD,KACfqV,cAAezR,EAASyR,cAE5B,EAuCI8+C,EAAwBn3D,KAAKotD,eAAegK,wBAAwBJ,EAAgBxtB,EAAOxpC,KAAKm1C,YA/BrF,WACb,GAAgB,MAAZnuC,EAAkB,CACpB,IAAI3V,EAAM,CACR+wB,KAAM40C,EACNz0C,gBAAiB7f,EAAMqyD,OACvBzyC,aAAa,EAAI3gB,EAA0B,SAAG,CAAC,EAAGqF,EAASnG,KAAMmG,EAAStG,KAAO0/B,EAAkBp5B,EAAStG,KAAMgC,EAAMyyC,YAAc,CAAC,IAKzI,OAAOqf,EAHe,CACpByC,2BAA4BA,IAEc,WAC1C,IAAII,EAAoBC,EAAiB9tB,EAAO9mC,EAAMyyC,WAAY9jD,EAAKqR,EAAMwyD,eAC3EqC,EAAiBF,EAAkB,GACnCG,EAAgBH,EAAkB,GACpC,MAAO,CACLE,eAAgBA,EAChB3wD,SAAUA,EACVpG,MAAOg3D,EAEX,GACF,CACE,IAAIC,EAAqBH,EAAiB9tB,EAAO9mC,EAAMyyC,WAAY,KAAMzyC,EAAMwyD,eAG/E,MAAO,CACLqC,eAHiBE,EAAmB,GAIpC7wD,cAAUzM,EACVqG,MAJiBi3D,EAAmB,GAO1C,GAC0HR,GACxHjgE,EAASmgE,EAAsB,GAC/BO,EAAaP,EAAsB,GACnCK,EAAgBL,EAAsB,GACtCQ,EAAiBR,EAAsB,GACvCS,EAAaT,EAAsB,GACnCU,EAAiBV,EAAsB,GAKzC,GAAsB,MAAlBQ,EAAwB,CAI1B,GAH4C,MAAxCA,EAAe95C,uBACjB7d,KAAK83D,0BAA0BH,EAAe95C,uBAEP,MAArC85C,EAAe37C,mBAA4B,CAC7C,IACEoQ,EADEC,GAAY,EAAI1B,EAAqC,SAAGgtC,EAAe37C,oBAE3E,IACE,IAAKqQ,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAI82C,EAAU3rC,EAAMz9B,MACpBqR,KAAK40D,oBAAoB72D,KAAKg6D,EAChC,CACF,CAAE,MAAO7nD,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CACA,GAAgD,MAA5Co3D,EAAer/C,0BAAmC,CACpDtY,KAAKgpD,eAAiBhpD,KAAKgpD,gBAAkB2O,EAAer/C,0BAA0BtkB,OAAS,EAC/F,IACEw4B,EADEC,GAAa,EAAI9B,EAAqC,SAAGgtC,EAAer/C,2BAE5E,IACE,IAAKmU,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAI+2C,EAAuBxrC,EAAO79B,MAClCqR,KAAK60D,2BAA2B92D,KAAKi6D,EACvC,CACF,CAAE,MAAO9nD,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACF,CACA,IACEk8B,EADEE,GAAa,EAAIhS,EAAqC,SAAGgtC,EAAe75C,qBAE5E,IACE,IAAK6e,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAIzgB,EAAQi8B,EAAO9tC,MACnBqR,KAAKi1D,gBAAgBl3D,KAAKyC,EAC5B,CACF,CAAE,MAAO0P,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACAP,KAAKgpD,eAAiBhpD,KAAKgpD,gBAAkB2O,EAAet/C,aAC9D,CA4BA,GAvBIm/C,GACFx3D,KAAKi1D,gBAAgBl3D,KAAKy5D,GAMV,MAAdE,GACF13D,KAAKg1D,aAAajpC,IAAI2rC,GAQN,MAAdE,IACF53D,KAAKgpD,gBAAiB,EACtBhpD,KAAK60D,2BAA2B92D,KAAK,CACnC/K,KAAM,GAAGnE,OAAOmR,KAAKk1D,cAAe,KAAKrmE,OAAO26C,EAAMx2C,MACtDkqB,YAAa06C,KAGK,MAAlBC,EAAwB,CAC1B,IACEv6B,EADEE,GAAa,EAAI7S,EAAqC,SAAGktC,GAE7D,IACE,IAAKr6B,EAAWlqC,MAAOgqC,EAASE,EAAWlR,KAAKrL,MAAO,CACrD,IAAIuY,EAAW8D,EAAO3uC,MACtBqR,KAAKm1D,gBAAgBppC,IAAIyN,EAC3B,CACF,CAAE,MAAOtpB,GACPstB,EAAWjqC,EAAE2c,EACf,CAAE,QACAstB,EAAWj9B,GACb,CACF,CAGA,OADAyC,EADuD,QAAhCwgD,EAAeha,EAAMsC,aAAoC,IAAjB0X,EAA0BA,EAAeha,EAAM3oC,MACtF7J,EACjBA,CACT,EACAkN,EAAO6yD,gBAAkB,SAAyBvtB,EAAO7Q,EAAQ31B,GAC/D,IAAIi1D,EACAzgB,EAAehO,EAAMgO,aAID,oBAAtBA,EAAapjC,MAAmJrM,GAAU,GAC5K,IAAImwD,EAAiE,QAA9CD,EAAsBzgB,EAAa1L,aAA2C,IAAxBmsB,EAAiCA,EAAsBzgB,EAAa32C,KAC7Is3D,EAAmB,CAAC,EACxBn4D,KAAKi2C,oBAAoB,CAACuB,GAAe7e,EAAQw/B,GAIjD,IAAIC,EAA6BD,EAAiBD,GAClD,GAAkC,MAA9BE,GAAsC5O,EAAmB4O,GAC3Dp1D,EAAKk1D,GAAmBE,MAD1B,CAIA,IAAIC,EAgWR,SAA+C7uB,EAAO4uB,GACpD,OAAI5uB,EAAM8M,YAAYv7B,QACnBhf,MAAMC,QAAQo8D,IAAqMrwD,GAAU,GACvN,CACLqM,KAAM,iBACN22C,IAAKqN,EAA2BhnE,KAAI,SAAU8hB,GAC5C,OAAOolD,EAAsBplD,EAAU,gHACzC,MAGK,CACLkB,KAAM,mBACN7B,GAAI+lD,EAAsBF,EAA4B,2GAG5D,CA/W0CG,CAAsC/uB,EAAO4uB,GACnF,OAAQC,EAAgCjkD,MACtC,IAAK,iBACH,IAAIu8C,EAmZZ,SAAgDnnB,EAAO4uB,EAA4B3D,GACjF,GAAIjrB,EAAMp1B,OAASm2B,EAA8B,CAC/C,GAA4C,MAAxCf,EAAMgO,aAAaghB,kBAA2B,CAChD,IAAI5f,EAAepP,EAAMoP,aAGzB,OAFkB,MAAhBA,GAAwN7wC,GAAU,GAE7NqwD,EAA2BhnE,KAAI,SAAUmhB,GAC9C,OAAOkiD,EAAcgE,mBAAmBlmD,EAAIqmC,EAC9C,GACF,CAEE,OAAOwf,CAEX,CACiKrwD,GAAU,EAE7K,CAnauB2wD,CAAuClvB,EAAO6uB,EAAgCtN,IAAK/qD,KAAKotD,gBACvGptD,KAAK20D,yBAAyB52D,KAAK,MACnCiF,EAAKk1D,GAAmBl4D,KAAK24D,eAAenvB,EAAM8M,YAAaqa,EAAUh4B,EAAQ31B,GACjFhD,KAAK20D,yBAAyBt1D,MAC9B,MACF,IAAK,mBACH,IAAIu5D,EAiXZ,SAAwEpvB,EAAO4uB,EAA4B3D,GACzG,GAAIjrB,EAAMp1B,OAASm2B,EAA8B,CAC/C,GAA4C,MAAxCf,EAAMgO,aAAaghB,kBAA2B,CAChD,IAAI5f,EAAepP,EAAMoP,aAGzB,OAFkB,MAAhBA,GAAwN7wC,GAAU,GAE7N,CAAC0sD,EAAcgE,mBAAmBL,EAA4Bxf,GAAe,KACtF,CAEE,MAAO,CAACwf,EAA4B,KAExC,CACE,MAAO,CAACA,EAA4B,CAClC1C,iBAAkBlsB,EAClBhtB,wBAAyB47C,GAG/B,CAlYoCS,CAA+DrvB,EAAO6uB,EAAgC9lD,GAAIvS,KAAKotD,gBACzI0L,EAAUF,EAAsB,GAChCG,EAAuBH,EAAsB,GAC/C54D,KAAK20D,yBAAyB52D,KAAKg7D,GACnC,IAAIprD,EAAW3K,EAAKk1D,GACN,MAAZvqD,GAAwC,kBAAbA,GAAkP5F,GAAU,GACzR/E,EAAKk1D,GAAmBl4D,KAAKw1C,UAAUhM,EAAM8M,YAAawiB,EAE1DnrD,GACA3N,KAAK20D,yBAAyBt1D,MAC9B,MACF,QACEg5D,EAAgCjkD,KAtBpC,CAwBF,EACAlQ,EAAO2yD,iBAAmB,SAA0BrtB,EAAO7Q,EAAQ31B,GACjE,IAAIg2D,EACAd,EAAoD,QAAjCc,EAAgBxvB,EAAMsC,aAAqC,IAAlBktB,EAA2BA,EAAgBxvB,EAAM3oC,KAC7G44B,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC8jB,EAAoCv6B,EAAkB8G,kBAAkB7M,EAAQc,GACpF,GAAyC,MAArCw/B,EAKF,OAJAj2D,EAAKk1D,GAAmBe,OACkB9+D,IAAtC8+D,GACFj5D,KAAKw1D,qBAEAyD,EAET,IAAIC,EAAkCl5D,KAAKgtD,cAAc1vD,IAAI27D,GAE7D,GADAj5D,KAAKg1D,aAAajpC,IAAIktC,GACiB,MAAnCC,EAKF,OAJAl2D,EAAKk1D,GAAmBgB,OACgB/+D,IAApC++D,GACFl5D,KAAKw1D,qBAEA0D,EAET,IAAIC,EAAiBjF,EAA6BgF,GAElD,OADAl2D,EAAKk1D,GAAmBiB,EACjBA,CACT,EACAj1D,EAAO+xD,YAAc,SAAqBzsB,EAAO7Q,EAAQ31B,GACvD,IAAIo2D,EACAlB,EAAoD,QAAjCkB,EAAgB5vB,EAAMsC,aAAqC,IAAlBstB,EAA2BA,EAAgB5vB,EAAM3oC,KAC7G44B,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvCxmD,EAAQ+vC,EAAkBvb,SAASwV,EAAQc,GAK/C,YAJct/B,IAAVxL,GACFqR,KAAKw1D,qBAEPxyD,EAAKk1D,GAAmBvpE,EACjBA,CACT,EACAuV,EAAOiyD,UAAY,SAAmB3sB,EAAO7Q,EAAQ31B,GACnD,IAAIq2D,EACAnB,EAAoD,QAAjCmB,EAAgB7vB,EAAMsC,aAAqC,IAAlButB,EAA2BA,EAAgB7vB,EAAM3oC,KAC7G44B,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC5P,EAAW7G,EAAkB8G,kBAAkB7M,EAAQc,GAC3D,GAAgB,MAAZ8L,EAKF,OAJAviC,EAAKk1D,GAAmB3yB,OACPprC,IAAborC,GACFvlC,KAAKw1D,qBAEAjwB,EAET,IAAI53B,EAAW3K,EAAKk1D,GACN,MAAZvqD,GAAwC,kBAAbA,GAAkP5F,GAAU,GAEzR,IAAIpZ,EAAQqR,KAAKw1C,UAAUhM,EAAOjE,EAAU53B,GAE5C,OADA3K,EAAKk1D,GAAmBvpE,EACjBA,CACT,EACAuV,EAAO4yD,iBAAmB,SAA0BttB,EAAO7Q,EAAQ31B,GACjE,IAAIs2D,EACApB,EAAoD,QAAjCoB,EAAgB9vB,EAAMsC,aAAqC,IAAlBwtB,EAA2BA,EAAgB9vB,EAAM3oC,KAC7G44B,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvCokB,EAAc76B,EAAkBqZ,uBAAuBpf,EAAQc,GACnE,GAAmB,MAAf8/B,EAKF,OAJAv2D,EAAKk1D,GAAmBqB,OACJp/D,IAAhBo/D,GACFv5D,KAAKw1D,qBAEAxyD,EAAKk1D,GAEd,IAAI71B,EAAkBk3B,EAAY,GAChCl3C,EAASk3C,EAAY,GACnBtlD,EAAc,CAAC,EAQnB,OAPAjU,KAAKs2D,uBAAuB9sB,EAAMgwB,eAAgB,CAChDp3C,KAAMC,GACLpO,GACHjR,EAAKk1D,GAAmB,CACtBuB,cAAexlD,EACfylD,SAAUr3B,GAELr/B,EAAKk1D,EACd,EACAh0D,EAAOgyD,gBAAkB,SAAyB1sB,EAAO7Q,EAAQ31B,GAC/D,IAAIy2B,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvCpP,EAAYrH,EAAkBsH,mBAAmBrN,EAAQc,GAC7D,OAAOz5B,KAAK24D,eAAenvB,EAAOzD,EAAWpN,EAAQ31B,EACvD,EACAkB,EAAOy0D,eAAiB,SAAwBnvB,EAAOzD,EAAWpN,EAAQ31B,GACxE,IACI22D,EADAluD,EAASzL,KAETk4D,EAAoD,QAAjCyB,EAAgBnwB,EAAMsC,aAAqC,IAAlB6tB,EAA2BA,EAAgBnwB,EAAM3oC,KACjH,GAAiB,MAAbklC,EAKF,OAJA/iC,EAAKk1D,GAAmBnyB,OACN5rC,IAAd4rC,GACF/lC,KAAKw1D,qBAEAzvB,EAET,IAAIp4B,EAAW3K,EAAKk1D,GACN,MAAZvqD,GAAoB5R,MAAMC,QAAQ2R,IAAqO5F,GAAU,GACnR,IAAI6xD,EAAcjsD,GAAY,GAiB9B,OAhBAo4B,EAAUz1C,SAAQ,SAAUi1C,EAAUs0B,GACpC,GAAgB,MAAZt0B,EAMF,YALiBprC,IAAborC,GACF95B,EAAO+pD,0BAGToE,EAAYC,GAAat0B,GAG3B,IAAI8iB,EAAWuR,EAAYC,GACb,MAAZxR,GAAwC,kBAAbA,GAAkPtgD,GAAU,GAGzR6xD,EAAYC,GAAapuD,EAAO+pC,UAAUhM,EAAOjE,EAAU8iB,EAC7D,IACArlD,EAAKk1D,GAAmB0B,EACjBA,CACT,EAMA11D,EAAOuyD,kBAAoB,SAA2Bhf,EAAc9e,EAAQ31B,GAG1E,IAAI82D,EAAet5B,EAAsBiX,EAAaE,cAClD32C,EAAY09B,EAAkBvb,SAASwV,EAAQmhC,GAClC,MAAb94D,GAYJhB,KAAKs2D,uBAAuB,CAC1BliD,KAAM,iBACNvT,KAAM42C,EAAa3uC,aACnBpI,KAAM+2C,EAAa/2C,MAClBi4B,EAAQ31B,GACXA,EAAKmxD,GAA0B1c,EAAasiB,iBAC5C/2D,EAAKoxD,GAAwBpzD,QAjBT7G,IAAd6G,GACFhB,KAAKw1D,oBAiBX,EACAtxD,EAAOqyD,6BAA+B,SAAsCyD,EAAqBrhC,GAC/F,IAAI8d,EAAcujB,EAAoBvjB,YACtC,GAAmB,MAAfA,EAAqB,CAEvB,IAAI9Q,EAAWjH,EAAkBzG,QAAQU,GACzC,GAAgB,MAAZgN,GAAoBA,IAAaq0B,EAAoBlqE,KAEvD,OAAO,IAEX,KAAO,CACL,IAAIwlE,EAAsBt1D,KAAK42C,qBAAqBje,EAAQ8d,GAC5D,IAA4B,IAAxB6e,EAEF,OAAO,KACF,GAA2B,MAAvBA,EAIT,YAFAt1D,KAAKw1D,oBAIT,CACA,IAAIyE,EAAY,CAAC,EAEjB,OADAj6D,KAAKs2D,uBAAuB0D,EAAoBhzD,SAAU2xB,EAAQshC,GAC3DA,CACT,EAQA/1D,EAAOkyD,oBAAsB,SAA6B8D,EAAgBvhC,EAAQ31B,GAChF,IAAIyzC,EAAcyjB,EAAezjB,YACjC,GAAmB,MAAfA,EAAqB,CAEvB,IAAI9Q,EAAWjH,EAAkBzG,QAAQU,GACzC,GAAgB,MAAZgN,GAAoBA,IAAau0B,EAAepqE,KAElD,OAAO,KAGP,IADsBkQ,KAAKi2C,oBAAoBikB,EAAej3B,WAAYtK,EAAQ31B,GAGhF,OAAO,CAGb,KAAO,CACL,IAAIsyD,EAAsBt1D,KAAK42C,qBAAqBje,EAAQ8d,GAGxD0jB,EAAsBn6D,KAAKgpD,eAC3BoR,EAAwCp6D,KAAK80D,iCASjD,GARA90D,KAAK80D,iCAAmCsF,IAAiE,IAAxB9E,EAIjFt1D,KAAKi2C,oBAAoBikB,EAAej3B,WAAYtK,EAAQ31B,GAG5DhD,KAAK80D,iCAAmCsF,GACZ,IAAxB9E,EAGF,YADAt1D,KAAKgpD,eAAiBmR,GAEjB,GAA2B,MAAvB7E,EAGT,OADAt1D,KAAKw1D,qBACE,IAEX,CACA,OAAOxyD,CACT,EACAkB,EAAOoyD,uBAAyB,SAAgCkD,EAAgB7gC,EAAQ31B,GACtF,IAAIq3D,EAAmBr3D,EAAKy+B,GACJ,MAApB44B,IACFA,EAAmBr3D,EAAKy+B,GAAiB,CAAC,IAEd,kBAArB44B,GAAqD,MAApBA,IAAkLtyD,GAAU,GAClN,MAAhB/E,EAAK2+B,KACP3+B,EAAK2+B,GAAUjD,EAAkB3G,UAAUY,IAG7C0hC,EAAiBb,EAAe34D,MAAQ24D,EAAe94D,KAAO0/B,EAAkBo5B,EAAe94D,KAAMV,KAAKm1C,YAAc,CAAC,EACzHnyC,EAAK0+B,GAAsB1hC,KAAK+0D,OAChC/xD,EAAKynD,GAAuCzqD,KAAK80D,iCAC7C5sD,EAAkBgS,qBAChBla,KAAK20D,yBAAyB3gE,OAAS,GAAiF,OAA5EgM,KAAK20D,yBAAyB30D,KAAK20D,yBAAyB3gE,OAAS,KACnHgP,EAAKwnD,IAA8B,EAAInzC,EAA6B,SAAGrX,KAAK20D,0BAGlF,EACAzwD,EAAOwyD,2CAA6C,SAAoD4D,EAA0B3hC,EAAQ31B,GACxI,IAAIq3D,EAAmBr3D,EAAKy+B,GACJ,MAApB44B,IACFA,EAAmBr3D,EAAKy+B,GAAiB,CAAC,IAEd,kBAArB44B,GAAqD,MAApBA,IAAkLtyD,GAAU,GAClN,MAAhB/E,EAAK2+B,KACP3+B,EAAK2+B,GAAUjD,EAAkB3G,UAAUY,IAE7C,IAAI4hC,EAAa,CAAC,EACdC,EAAqBx6D,KAAKk1D,cAC9Bl1D,KAAKk1D,cAAgBoF,EAAyBz5D,KAC9C,IAAI8uB,EAAkB3vB,KAAKm1C,WAKvBwP,EAAoB2V,EAAyB55D,KAAO0/B,EAAkBk6B,EAAyB55D,KAAMV,KAAKm1C,YAAc,CAAC,EAC7Hn1C,KAAKm1C,WAAa5W,EAAuBn1B,qBAAqBkxD,EAA0Bt6D,KAAK+0D,OAAOzlE,UAAWq1D,GAC/G3kD,KAAKi2C,oBAAoBqkB,EAAyBr3B,WAAYtK,EAAQ4hC,GAGtEv6D,KAAKm1C,WAAaxlB,EAClB3vB,KAAKk1D,cAAgBsF,EAErBH,EAAiBC,EAAyBz5D,MAAQ05D,CACpD,EACAr2D,EAAO4zD,0BAA4B,SAAmC2C,GACjC,MAA/Bz6D,KAAKipD,uBAIkC,UAAvCjpD,KAAKipD,uBAAuBz0B,SAGN,UAAtBimC,EAAWjmC,OAIfx0B,KAAKipD,uBAAyB,CAC5Bz0B,OAAQ,MACRuhC,OAAQ,GAAGlnE,QAAO,EAAIwoB,EAA6B,SAAGrX,KAAKipD,uBAAuB8M,SAAS,EAAI1+C,EAA6B,SAAGojD,EAAW1E,UAL1I/1D,KAAKipD,uBAAyBwR,GAP9Bz6D,KAAKipD,uBAAyBwR,CAclC,EACAv2D,EAAO0yC,qBAAuB,SAA8Bje,EAAQ8d,GAClE,IAAI9Q,EAAWjH,EAAkBzG,QAAQU,GACrC+hC,EAAa16D,KAAKgtD,cAAc1vD,IAAI22C,EAAetO,IAGvD,OAFwC,MAAd+0B,EAAqBh8B,EAAkBvb,SAASu3C,EAAYjkB,GAAe,IAGvG,EACOgV,CACT,CA/zB+B,GAs0B/B,SAAS6L,EAAiB9tB,EAAOl6C,EAAWirB,EAAaogD,GAEvD,IAAIC,EAAmD,oBAAzBpxB,EAAMqxB,eAAgCrxB,EAAMqxB,eAAiBrxB,EAAMqxB,eAAwB,QACrHtD,EAAiB,KACjBC,EAAgB,KACpB,IACE,IAAIsD,EAAuB,GACL,MAAlBtxB,EAAMxiC,UACR8zD,EAAqB/8D,KAAKwc,GAE5B,IAAI7Z,EAAO8oC,EAAM9oC,KAAO0/B,EAAkBoJ,EAAM9oC,KAAMpR,QAAa6K,EACnE2gE,EAAqB/8D,KAAK2C,GAC1B62D,EAAiBqD,EAAiBzwB,MAAM,KAAM2wB,EAChD,CAAE,MAAOvnE,GAIL,IAAIwnE,EAHN,GAAIxnE,IAAMghE,EACRgD,OAAiBp9D,OAKjBq9D,EAAgB,CACdhuB,MAAO,CACLx2C,KAHsC,QAA9B+nE,EAAcvxB,EAAMx2C,YAAkC,IAAhB+nE,EAAyBA,EAAc,YAIrFzmD,MAAOqmD,GAETn6D,MAAOjN,EAGb,CACA,MAAO,CAACgkE,EAAgBC,EAC1B,CAwEA,SAASc,EAAsB0C,EAAoBC,GACjD,MAAkC,kBAAvBD,EACFA,EACgC,kBAAvBA,GAAyD,MAAtBA,GAA+D,kBAA1BA,EAAmBzoD,GACpGyoD,EAAmBzoD,QAEsDxK,GAAU,EAC9F,CACAzI,EAAOC,QAAU,CACf8a,KAAMA,sCCh/BR,IACIsQ,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7D+6D,EAAmB/6D,EAAQ,MAC3BmmC,EAAW40B,EAAiB50B,SAC9BgB,EAAc4zB,EAAiB5zB,YAC/BwM,EAAUonB,EAAiBpnB,QAMzBhV,EAAiC,WACnC,SAASA,EAAkBmH,GACzB,IAAIvjC,EAAQ1C,KACZA,KAAKm7D,SAAW,IAAItiD,IACL,MAAXotB,GACF13C,OAAO4C,KAAK80C,GAAS31C,SAAQ,SAAUe,GACrCqR,EAAMy4D,SAASxhD,IAAItoB,EAAK40C,EAAQ50C,GAClC,GAEJ,CACAytC,EAAkBr0B,OAAS,SAAgBw7B,GACzC,OAAO,IAAInH,EAAkBmH,EAC/B,EACA,IAAI/hC,EAAS46B,EAAkBprC,UAiD/B,OAhDAwQ,EAAOid,MAAQ,WACbnhB,KAAKm7D,SAAW,IAAItiD,GACtB,EACA3U,EAAe,OAAI,SAAiBme,GAClCriB,KAAKm7D,SAASxhD,IAAI0I,EAAQ,KAC5B,EACAne,EAAO5G,IAAM,SAAa+kB,GACxB,OAAOriB,KAAKm7D,SAAS79D,IAAI+kB,EAC3B,EACAne,EAAOqkC,aAAe,WACpB,OAAOxsC,MAAMs6B,KAAKr2B,KAAKm7D,SAAShqE,OAClC,EACA+S,EAAOmjC,UAAY,SAAmBhlB,GACpC,OAAKriB,KAAKm7D,SAASj6C,IAAImB,GAGa,MAA7BriB,KAAKm7D,SAAS79D,IAAI+kB,GAAkBilB,EAAchB,EAFhDwN,CAGX,EACA5vC,EAAOgd,IAAM,SAAamB,GACxB,OAAOriB,KAAKm7D,SAASj6C,IAAImB,EAC3B,EACAne,EAAO8sD,OAAS,SAAgB3uC,GAC9BriB,KAAKm7D,SAAiB,OAAE94C,EAC1B,EACAne,EAAOyV,IAAM,SAAa0I,EAAQsW,GAChC34B,KAAKm7D,SAASxhD,IAAI0I,EAAQsW,EAC5B,EACAz0B,EAAOxI,KAAO,WACZ,OAAOsE,KAAKm7D,SAASz/D,IACvB,EACAwI,EAAOojD,OAAS,WACd,IAEEl7B,EAFEyiB,EAAM,CAAC,EACPxiB,GAAY,EAAI1B,EAAqC,SAAG3qB,KAAKm7D,UAEjE,IACE,IAAK9uC,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIm6C,EAAchvC,EAAMz9B,MACtB0C,EAAM+pE,EAAY,GAClBzsE,EAAQysE,EAAY,GACtBvsB,EAAIx9C,GAAO1C,CACb,CACF,CAAE,MAAOuhB,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACA,OAAOsuC,CACT,EACO/P,CACT,CA/DqC,GAgErCx/B,EAAOC,QAAUu/B,iCC1DjBx/B,EAAOC,QAjBgB,CAKrB+mC,SAAU,WAKVgB,YAAa,cAKbwM,QAAS,8CCfX,IACInpB,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7DuzC,EAAevzC,EAAQ,MACvBg/B,EAAoBh/B,EAAQ,MAC5B+H,EAAoB/H,EAAQ,MAC5BwzC,EAA8BxzC,EAAQ,MACtCk7D,EAAyBl7D,EAAQ,MAEnC0zC,EADa1zC,EAAQ,MACQ0zC,kBAC3BnV,EAAoBv+B,EAAQ,MAC5B4zC,EAA6B5zC,EAAQ,MACrC4+B,EAAkB5+B,EAAQ,MAE5B8zC,EADc9zC,EAAQ,MACK8zC,eACzBlsC,EAAY5H,EAAQ,MACpBiqC,EAAejL,EAAkBiL,aACnCM,EAAYvL,EAAkBuL,UAC9BoD,EAAmB3O,EAAkB2O,iBACrCrD,EAAmBtL,EAAkBsL,iBACrCE,EAAQxL,EAAkBwL,MAC1BC,EAAezL,EAAkByL,aACjCC,EAAkB1L,EAAkB0L,gBACpCE,EAAkB5L,EAAkB4L,gBACpCC,EAAe7L,EAAkB6L,aACjCC,EAAgB9L,EAAkB8L,cAClC8C,EAAgB5O,EAAkB4O,cAClC1C,EAAelM,EAAkBkM,aACjC2C,EAAgB7O,EAAkB6O,cAClC1C,EAASnM,EAAkBmM,OAC3B2C,EAAqB9O,EAAkB8O,mBACvC9C,EAAiBhM,EAAkBgM,eACnCZ,EAA+BpL,EAAkBoL,6BAC/CzI,EAAU/C,EAAgB+C,QAC5Bf,EAAgBhC,EAAgBgC,cAChCN,EAAwB1B,EAAgB0B,sBAY1C,IAAIirB,EAAoC,WACtC,SAASA,EAAqBziB,EAAc35C,EAAWohE,EAAYnc,EAAiBC,GAClFx0C,KAAKg1C,iBAAuC,OAApBT,QAAgD,IAApBA,EAA6BA,EAAkB,KACnGv0C,KAAKs7D,eAAiB,KACtBt7D,KAAKgtD,cAAgB/jB,EACrBjpC,KAAKu7D,YAAc7K,EACnB1wD,KAAKm1C,WAAa7lD,EAClB0Q,KAAKo1C,+BAAiCZ,CACxC,CACA,IAAItwC,EAASwnD,EAAqBh4D,UAkSlC,OAjSAwQ,EAAOssD,KAAO,SAAc3iD,EAAMwU,GACd,cAAdxU,EAAKuG,MAAsC,mBAAdvG,EAAKuG,OACpCpU,KAAKs7D,eAAiBztD,EAAKhN,MAE7Bb,KAAKw1C,UAAU3nC,EAAMwU,EACvB,EACAne,EAAOsxC,UAAY,SAAmB3nC,EAAMwU,GAC1CriB,KAAKu7D,YAAYxvC,IAAI1J,GACrB,IAAIsW,EAAS34B,KAAKgtD,cAAc1vD,IAAI+kB,GACtB,MAAVsW,GAGJ34B,KAAKi2C,oBAAoBpoC,EAAKo1B,WAAYtK,EAC5C,EACAz0B,EAAOwxC,kBAAoB,SAA2B70C,GAEpD,OADCb,KAAKm1C,WAAWxhD,eAAekN,IAA6HkH,GAAU,GAChK/H,KAAKm1C,WAAWt0C,EACzB,EACAqD,EAAO+xC,oBAAsB,SAA6BhT,EAAYtK,GACpE,IAAIj2B,EAAQ1C,KACZijC,EAAW3yC,SAAQ,SAAUm5C,GAE3B,OAAQA,EAAUr1B,MAChB,KAAKg2B,EAEH1nC,EAAM84D,cAAc/xB,EAAU6M,YAAa3d,GAC3C,MACF,KAAKqS,EACCvB,EAAU1uB,OACZrY,EAAM+4D,oBAAoBhyB,EAAW9Q,GAErCj2B,EAAM84D,cAAc/xB,EAAW9Q,GAEjC,MACF,KAAK+R,EACkBnyB,QAAQ7V,EAAMgzC,kBAAkBjM,EAAUrpC,cACxCqpC,EAAU8M,cAC/B7zC,EAAMuzC,oBAAoBxM,EAAUxG,WAAYtK,GAElD,MACF,KAAKoS,EACH,GAA6B,MAAzBtB,EAAUgN,YAAqB,CACjC,IAAI9Q,EAAWjH,EAAkBzG,QAAQU,IACzB,MAAZgN,GAAoBA,IAAa8D,EAAU35C,MAS/C61C,IAAa5G,EAAgBgD,YAC3Br/B,EAAMuzC,oBAAoBxM,EAAUxG,WAAYtK,EAEpD,KAAO,CACL,IAAI+iC,EAAYh9B,EAAkBzG,QAAQU,GACtCye,EAASnD,EAAeynB,GAC5Bh5D,EAAM64D,YAAYxvC,IAAIqrB,GACtB10C,EAAMuzC,oBAAoBxM,EAAUxG,WAAYtK,EAClD,CACA,MACF,KAAKkS,EACH,IAAImM,EAAgBt0C,EAAMyyC,WAC1BzyC,EAAMyyC,WAAatB,EAAkBnxC,EAAMyyC,WAAY1L,EAAUziC,SAASiwC,oBAAqBxN,EAAU/oC,MACzGgC,EAAMuzC,oBAAoBxM,EAAUziC,SAASi8B,WAAYtK,GACzDj2B,EAAMyyC,WAAa6B,EACnB,MACF,KAAKjJ,EAUH,IAAI8I,EAAclD,EAA4BlK,EAAWxG,EAAYvgC,EAAMyyC,YACvE0B,EAAY97B,OACdrY,EAAM+4D,oBAAoB5kB,EAAale,GAEvCj2B,EAAM84D,cAAc3kB,EAAale,GAEnC,MACF,KAAKgS,EACL,KAAKW,EACH5oC,EAAMuzC,oBAAoBxM,EAAUxG,WAAYtK,GAChD,MACF,KAAK0S,EACL,KAAK2C,EACH,MACF,KAAKC,EAED,IAAI0tB,EAAaj9B,EAAkBzG,QAAQU,GACvCge,EAAU1C,EAAe0nB,GAC7Bj5D,EAAM64D,YAAYxvC,IAAI4qB,GACtB,MAEJ,KAAK1L,EACHvoC,EAAMk5D,sBAAsBnyB,EAAW9Q,GACvC,MACF,KAAK8R,EACH/nC,EAAMuzC,oBAAoBxM,EAAUxG,WAAYtK,GAChD,MACF,KAAKiS,EACH,IAAI1iC,EAAkBmvC,oCAGpB,MAAM,IAAI52C,MAAM,wCAFhBiC,EAAMm5D,qBAAqBpyB,EAAW9Q,GAIxC,MACF,KAAKmV,EACH,IAA6C,IAAzCprC,EAAM0yC,+BACR,MAEF1yC,EAAMuzC,oBAAoBxM,EAAUziC,SAASi8B,WAAYtK,GACzD,MACF,KAAKwS,EACHzoC,EAAMo5D,uBAAuBryB,EAAW9Q,GACxC,MACF,KAAK4R,EACH7nC,EAAMq5D,kCAAkCtyB,EAAW9Q,GACnD,MACF,QAEiI5wB,GAAU,GAE/I,GACF,EACA7D,EAAO63D,kCAAoC,SAA2CvyB,EAAO7Q,GAC3F,IAAItW,EAASriB,KAAK87D,uBAAuBtyB,EAAMgO,aAAc7e,GAC7D,GAAc,MAAVtW,EAAJ,CAGA,IAAI25C,EAAiBh8D,KAAKgtD,cAAc1vD,IAAI+kB,GAC5C,GAAsB,MAAlB25C,EAGJ,GAAIxyB,EAAMgO,aAAaykB,aAAc,CAEnC,IAAIC,EAAsBb,EAAuBW,GACjD,GAA2B,MAAvBE,EAA6B,CAC/B,IACE9vC,EADEC,GAAY,EAAI1B,EAAqC,SAAGuxC,GAE5D,IACE,IAAK7vC,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIgkB,EAAU7Y,EAAMz9B,MACpBqR,KAAKu7D,YAAYxvC,IAAIkZ,EACvB,CACF,CAAE,MAAO/0B,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CACF,KAAO,CACL,IAAI+1C,EAAc9M,EAAM8M,YACpBsC,EAAetC,EAAYsC,aAC/B,GAAoB,MAAhBA,EAEF,OAEF,GAAItC,EAAYv7B,OAAQ,CACtB,IAAImb,EAAUwI,EAAkB4rB,2BAA2B0R,EAAgBpjB,GAC3E,GAAe,MAAX1iB,EAAiB,CACnB,IACE1J,EADEC,GAAa,EAAI9B,EAAqC,SAAGuL,GAE7D,IACE,IAAKzJ,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAIk7C,EAAW3vC,EAAO79B,MACN,MAAZwtE,GACFn8D,KAAKw1C,UAAUc,EAAa6lB,EAEhC,CACF,CAAE,MAAOjsD,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACF,CACF,KAAO,CACL,IAAI67D,EAAW19B,EAAkB2rB,0BAA0B2R,EAAgBpjB,GAC3D,MAAZwjB,GACFp8D,KAAKw1C,UAAUc,EAAa8lB,EAEhC,CACF,CArDA,CAsDF,EACAl4D,EAAO43D,uBAAyB,SAAgCtyB,EAAO7Q,GACrE,IAAIc,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC9yB,EAASqc,EAAkB8G,kBAAkB7M,EAAQc,GAK3C,MAAVpX,GACFriB,KAAKu7D,YAAYxvC,IAAI1J,GAEvB,IAAIrb,EAAWwiC,EAAMxiC,SAKrB,OAJgB,MAAZA,GAEFhH,KAAKi2C,oBAAoB,CAACjvC,GAAW2xB,GAEhCtW,CACT,EACAne,EAAO03D,sBAAwB,SAA+BnkB,EAAc9e,GAC1E,IACI4b,EAAkBv0C,KAAKg1C,iBACL,OAApBT,GAAkYxsC,GAAU,GAC9Y,IAAI2vC,EAAejX,EAAsBgX,EAAaE,cAClDC,EAAqBlZ,EAAkBvb,SAASwV,EAAQ+e,GAC5D,GAA0B,MAAtBE,EAAJ,CAGA,IAAIC,EAAwBtD,EAAgBj3C,IAAIs6C,GAChD,GAA6B,MAAzBC,EAA+B,CACjC,IAAItxC,EAAYmtC,EAAamE,GACzBb,EAAgBh3C,KAAKm1C,WACzBn1C,KAAKm1C,WAAatB,EAAkB7zC,KAAKm1C,WAAY5uC,EAAU0wC,oBAAqBQ,EAAa/2C,MACjGV,KAAKi2C,oBAAoB1vC,EAAU08B,WAAYtK,GAC/C34B,KAAKm1C,WAAa6B,CACpB,CARA,CAYF,EACA9yC,EAAOs3D,cAAgB,SAAuBhyB,EAAO7Q,GACnD,IAAIc,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC5P,EAAW7G,EAAkB8G,kBAAkB7M,EAAQc,GAC3C,MAAZ8L,GAGJvlC,KAAKw1C,UAAUhM,EAAOjE,EACxB,EACArhC,EAAOu3D,oBAAsB,SAA6BjyB,EAAO7Q,GAC/D,IAAIltB,EAASzL,KACTy5B,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvCpP,EAAYrH,EAAkBsH,mBAAmBrN,EAAQc,GAC5C,MAAbsM,GAGJA,EAAUz1C,SAAQ,SAAUi1C,GACV,MAAZA,GACF95B,EAAO+pC,UAAUhM,EAAOjE,EAE5B,GACF,EACArhC,EAAO23D,qBAAuB,SAA8BryB,EAAO7Q,GACjE,IAAIc,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC5P,EAAW7G,EAAkB8G,kBAAkB7M,EAAQc,GAC3D,GAAgB,MAAZ8L,EAAJ,CAGAvlC,KAAKu7D,YAAYxvC,IAAIwZ,GACrB,IAAI2zB,EAAkCl5D,KAAKgtD,cAAc1vD,IAAIioC,GAC7D,GAAuC,MAAnC2zB,EAAJ,CAGA,IAAI7gB,EAAiC3Z,EAAkBvb,SAAS+1C,EAAiCnlB,EAA2BuE,iDAC5H,GAAKv8C,MAAMC,QAAQq8C,GAAnB,CAGA,IAAI9D,EAAkBv0C,KAAKg1C,iBACL,OAApBT,GAAiLxsC,GAAU,GAG7L,IAGE00B,EAHEua,EAAgBh3C,KAAKm1C,WAErBxY,GAAa,EAAIhS,EAAqC,SAAG0tB,GAE7D,IACE,IAAK1b,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAIs3B,EAAa9b,EAAO9tC,MACxBqR,KAAKm1C,WAAaoD,EAAWjpD,UAC7B,IAAIsoD,EAAqBW,EAAWj5C,OAChCu4C,EAAwBtD,EAAgBj3C,IAAIs6C,GAChD,GAA6B,MAAzBC,EAA+B,CACjC,IAAItxC,EAAYmtC,EAAamE,GAC7B73C,KAAKw1C,UAAUjvC,EAAWu7B,EAC5B,CACF,CACF,CAAE,MAAO5xB,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACAP,KAAKm1C,WAAa6B,CAzBlB,CAJA,CALA,CAmCF,EACO0U,CACT,CA5SwC,GA6SxCpsD,EAAOC,QAAU,CACfixD,KAzTF,SAAcvnB,EAAc/0B,EAAUw8C,EAAYnc,EAAiBC,GACjE,IAAInyB,EAASnO,EAASmO,OACpBxU,EAAOqG,EAASrG,KAChBve,EAAY4kB,EAAS5kB,UACV,IAAIo8D,EAAqBziB,EAAc35C,EAAWohE,EAAYnc,EAAiBC,GACrFgc,KAAK3iD,EAAMwU,EACpB,qCCzCA,IAAI/gB,EAAyBnB,EAAAA,MAAAA,QACzBwqB,EAA8BrpB,EAAuBnB,EAAQ,OAC7DkX,EAAsB/V,EAAuBnB,EAAQ,MACrDwF,EAAWxF,EAAQ,MAErBuiC,GAD8B/8B,EAAS88B,4BACP98B,EAAS+8B,+BACvCjyB,EAAYtQ,EAAQ,MACtBiqC,EAAe35B,EAAU25B,aACzB0D,EAAmBr9B,EAAUq9B,iBAC7BvD,EAA+B95B,EAAU85B,6BACzCE,EAAmBh6B,EAAUg6B,iBAC7BC,EAAYj6B,EAAUi6B,UACtBC,EAAQl6B,EAAUk6B,MAClBC,EAAen6B,EAAUm6B,aACzBC,EAAkBp6B,EAAUo6B,gBAC5BE,EAAkBt6B,EAAUs6B,gBAC5BC,EAAev6B,EAAUu6B,aACzB+C,EAAgBt9B,EAAUs9B,cAC1B9C,EAAgBx6B,EAAUw6B,cAC1BE,EAAiB16B,EAAU06B,eAC3BE,EAAe56B,EAAU46B,aACzB2C,EAAgBv9B,EAAUu9B,cAC1B1C,EAAS76B,EAAU66B,OACnB2C,EAAqBx9B,EAAUw9B,mBAC7B/lC,EAAoB/H,EAAQ,MAC5B6B,EAAY7B,EAAQ,MACtBm3B,EAAmBt1B,EAAUs1B,iBAG7Buc,GAFa7xC,EAAUs8B,WACTn+B,EAAQ,MACQ0zC,mBAC5BnV,EAAoBv+B,EAAQ,MAE9B8/B,EADc9/B,EAAQ,MACkB8/B,4BACtCq0B,EAAYn0D,EAAQ,MACtBm4C,EAAkDgc,EAAUhc,gDAC5DF,EAAgCkc,EAAUlc,8BAC1CkX,EAAyBgF,EAAUhF,uBACnC+M,EAAiC/H,EAAU+H,+BACzCC,EAAYn8D,EAAQ,MACtB2hC,EAAUw6B,EAAUx6B,QACpBC,EAAYu6B,EAAUv6B,UACtBC,EAAes6B,EAAUt6B,aACzB5B,EAAoBk8B,EAAUl8B,kBAC9Bm8B,EAAsBD,EAAUC,oBAChC/7B,EAAwB87B,EAAU97B,sBAClCC,EAAwB67B,EAAU77B,sBAClCM,EAAgBu7B,EAAUv7B,cACxBy7B,EAAYr8D,EAAQ,MACtB6zC,EAAmBwoB,EAAUxoB,iBAC7BC,EAAiBuoB,EAAUvoB,eAEzBlsC,GADW5H,EAAQ,MACPA,EAAQ,OACVA,EAAQ,MAkBtB,IAAI24C,EAAuC,WACzC,SAASA,EAAwB7P,EAAc35C,EAAWib,GACxDvK,KAAKk6C,iBAAmB3vC,EAAQ83B,gBAChCriC,KAAKy8D,WAAalyD,EAAQwtB,UAC1B/3B,KAAK08D,qBAAuB,GAC5B18D,KAAKm6C,0BAA4B5vC,EAAQkvC,yBACzCz5C,KAAK28D,yBAA2B,GAChC38D,KAAK48D,oBAAqB,EAC1B58D,KAAK68D,0BAA2B,EAChC78D,KAAK88D,kBAAoB,GACzB98D,KAAK+8D,MAAQxyD,EAAQvX,MAAO,EAAIqkB,EAA6B,SAAG9M,EAAQvX,MAAQ,GAChFgN,KAAKgtD,cAAgB/jB,EACrBjpC,KAAKm1C,WAAa7lD,EAClB0Q,KAAKq5C,gCAAkC9uC,EAAQ+uC,+BAC/Ct5C,KAAKm7C,+BAAiC5wC,EAAQgvC,8BAC9Cv5C,KAAKo1C,+BAAiC7qC,EAAQiqC,6BAChD,CACA,IAAItwC,EAAS40C,EAAwBplD,UAskBrC,OArkBAwQ,EAAO06C,kBAAoB,SAA2B/wC,EAAMwU,EAAQrf,GAClE,IAAI21B,EAAS34B,KAAKgtD,cAAc1vD,IAAI+kB,GAIpC,OAHCsW,GAA8I5wB,GAAU,GACzJ/H,KAAKu1C,2BAA2B1nC,GAChC7N,KAAKi2C,oBAAoBpoC,EAAM8qB,EAAQ31B,GAChC,CACLguB,OAAQ,KACRsX,cAAetoC,KAAK08D,qBACpB1d,wBAAyBh/C,KAAK28D,yBAC9B1d,iBAAkBj/C,KAAK88D,kBACvB/9D,OAAQiB,KAAKgtD,cACb9N,SAAS,EAEb,EAOAh7C,EAAOqxC,2BAA6B,SAAoC1nC,GACtE,IAAI2qC,EAAsB3qC,EAAK2qC,oBAC/B,GAA2B,MAAvBA,EACF,IAAK,IAAIC,EAAK,EAAGC,EAAenqD,OAAO4C,KAAKqnD,GAAsBC,EAAKC,EAAa1kD,OAAQykD,IAAM,CAChG,IAEErsB,EAFEusB,EAAeD,EAAaD,GAC5BpsB,GAAY,EAAI1B,EAAqC,SAAG6tB,EAAoBG,IAEhF,IACE,IAAKtsB,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAI23B,EAAexsB,EAAMz9B,MACrByoD,EAASnD,EAAe2E,GACxB8hB,EAAa16D,KAAKgtD,cAAc1vD,IAAI85C,GACtB,MAAdsjB,IACFA,EAAah8B,EAAkBj0B,OAAO2sC,EAAQpD,GAC9Ch0C,KAAKgtD,cAAcrzC,IAAIy9B,EAAQsjB,IAEjCh8B,EAAkBtb,SAASs3C,EAAY/hB,GAAc,EACvD,CACF,CAAE,MAAOzoC,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CAEJ,EACA2D,EAAOwxC,kBAAoB,SAA2B70C,GAEpD,OADCb,KAAKm1C,WAAWxhD,eAAekN,IAAgIkH,GAAU,GACnK/H,KAAKm1C,WAAWt0C,EACzB,EACAqD,EAAO84D,eAAiB,SAAwBh6D,GAC9C,IAAI2iC,EAAW3iC,EAAKg/B,GAEpB,OADc,MAAZ2D,GAAiL59B,GAAU,GACtL49B,CACT,EACAzhC,EAAO+xC,oBAAsB,SAA6BpoC,EAAM8qB,EAAQ31B,GACtE,IAAK,IAAIjP,EAAI,EAAGA,EAAI8Z,EAAKo1B,WAAWjvC,OAAQD,IAAK,CAC/C,IAAI01C,EAAY57B,EAAKo1B,WAAWlvC,GAChC,OAAQ01C,EAAUr1B,MAChB,KAAKi3B,EACL,KAAKL,EACHhrC,KAAKi9D,gBAAgBpvD,EAAM47B,EAAW9Q,EAAQ31B,GAC9C,MACF,KAAK0nC,EACkBnyB,QAAQvY,KAAK01C,kBAAkBjM,EAAUrpC,cACvCqpC,EAAU8M,cAC/Bv2C,KAAKi2C,oBAAoBxM,EAAW9Q,EAAQ31B,GAE9C,MACF,KAAK6nC,EAED,IAAImM,EAAgBh3C,KAAKm1C,WACzBn1C,KAAKm1C,WAAatB,EAAkB7zC,KAAKm1C,WAAY1L,EAAUziC,SAASiwC,oBAAqBxN,EAAU/oC,MACvGV,KAAKi2C,oBAAoBxM,EAAUziC,SAAU2xB,EAAQ31B,GACrDhD,KAAKm1C,WAAa6B,EAClB,MAEJ,KAAKjM,EAED,IAAI0L,EAAchN,EAAUgN,YAC5B,GAAmB,MAAfA,EAAqB,CACR/X,EAAkBzG,QAAQU,KACxB8Q,EAAU35C,MACzBkQ,KAAKi2C,oBAAoBxM,EAAW9Q,EAAQ31B,EAEhD,KAAO,CACL,IAAIsyD,EAAsBtyD,EAAKrP,eAAe8iD,GAC1CilB,EAAYh9B,EAAkBzG,QAAQU,GACtCye,EAASnD,EAAeynB,GACxBhB,EAAa16D,KAAKgtD,cAAc1vD,IAAI85C,GACtB,MAAdsjB,IACFA,EAAah8B,EAAkBj0B,OAAO2sC,EAAQpD,GAC9Ch0C,KAAKgtD,cAAcrzC,IAAIy9B,EAAQsjB,IAEjCh8B,EAAkBtb,SAASs3C,EAAYjkB,EAAa6e,GAChDA,GACFt1D,KAAKi2C,oBAAoBxM,EAAW9Q,EAAQ31B,EAEhD,CACA,MAEJ,KAAKirC,EAED,IAAIuI,EAAe/M,EAAUgN,YACzBG,EAAuB5zC,EAAKrP,eAAe6iD,GAC3CmlB,EAAaj9B,EAAkBzG,QAAQU,GACvCge,EAAU1C,EAAe0nB,GACzBuB,EAAcl9D,KAAKgtD,cAAc1vD,IAAIq5C,GACtB,MAAfumB,IACFA,EAAcx+B,EAAkBj0B,OAAOksC,EAAS3C,GAChDh0C,KAAKgtD,cAAcrzC,IAAIg9B,EAASumB,IAElCx+B,EAAkBtb,SAAS85C,EAAa1mB,EAAcI,GACtD,MAEJ,KAAK7I,EACL,KAAKC,EACH,IAAIttC,EAAO+oC,EAAU/oC,KAAO0/B,EAAkBqJ,EAAU/oC,KAAMV,KAAKm1C,YAAc,CAAC,EAC9E/a,EAAW2G,EAAc0I,EAAWzpC,KAAKm1C,YACzC7b,EAAYijC,EAAoB9yB,EAAWzpC,KAAKm1C,YACpDn1C,KAAK08D,qBAAqB3+D,KAAK,CAC7B2C,KAAMA,EACN2hB,OAAQqc,EAAkB3G,UAAUY,GACpCyB,SAAUA,EACVrD,OAAQ0S,EAAU1S,OAClBuC,UAAWA,EACXuC,WAAY4N,EAAU5N,WAAauE,EAAkBqJ,EAAU5N,WAAY77B,KAAKm1C,YAAc,CAAC,IAEjG,MACF,KAAKlK,EACHjrC,KAAKm9D,uBAAuBtvD,EAAM47B,EAAW9Q,EAAQ31B,GACrD,MACF,KAAK2nC,EACH3qC,KAAKo9D,gBAAgB3zB,EAAW9Q,EAAQ31B,GACxC,MACF,KAAKsoC,EACHtrC,KAAKq9D,iBAAiB5zB,EAAW9Q,EAAQ31B,GACzC,MACF,KAAKynC,EACH,IAAI6yB,EAAoBt9D,KAAK48D,mBAC7B58D,KAAK48D,oBAAqB,EAC1B58D,KAAKi2C,oBAAoBxM,EAAW9Q,EAAQ31B,GAC5ChD,KAAK48D,mBAAqBU,EAC1B,MACF,KAAKxvB,EACH,IAA4C,IAAxC9tC,KAAKo1C,+BACP,MAEFp1C,KAAKi2C,oBAAoBxM,EAAUziC,SAAU2xB,EAAQ31B,GACrD,MACF,KAAK4nC,EACH,IAAI1iC,EAAkBmvC,oCAGpB,MAAM,IAAI52C,MAAM,wCAFhBT,KAAKu9D,sBAAsB1vD,EAAM47B,EAAW9Q,EAAQ31B,GAItD,MACF,KAAKonC,EACHpqC,KAAKw9D,sBAAsB3vD,EAAM47B,EAAW9Q,EAAQ31B,GACpD,MACF,KAAKmoC,EACHnrC,KAAKy9D,mBAAmBh0B,EAAW9Q,EAAQ31B,GAC3C,MACF,KAAKunC,EACHvqC,KAAKy9D,mBAAmBh0B,EAAU+N,aAAc7e,EAAQ31B,GACxD,MACF,QAE8I+E,GAAU,GAE5J,CACF,EACA7D,EAAOu5D,mBAAqB,SAA4B56D,EAAU81B,EAAQ31B,GAC/C,MAArBH,EAASmE,UACXhH,KAAKi2C,oBAAoBpzC,EAASmE,SAAU2xB,EAAQ31B,EAExD,EACAkB,EAAOk5D,gBAAkB,SAAyBM,EAAO/kC,EAAQ31B,IAK5C,KAJc,OAAhB06D,EAAU,IAAc19D,KAAK01C,kBAAkBgoB,EAAU,KAOxE19D,KAAKi2C,oBAAoBynB,EAAO/kC,EAAQ31B,GAIxChD,KAAK28D,yBAAyB5+D,KAAK,CACjCqW,KAAM,QACNpR,KAAMA,EACNg7C,MAAO0f,EAAM1f,MACbhrD,MAAM,EAAIqkB,EAA6B,SAAGrX,KAAK+8D,OAC/C7oD,SAAU+rB,EAA4By9B,EAAOh/B,EAAkB3G,UAAUY,GAAS34B,KAAKm1C,YACvFxP,SAAUjH,EAAkBzG,QAAQU,GACpC0J,gBAAiBriC,KAAKk6C,kBAG5B,EACAh2C,EAAOm5D,iBAAmB,SAA0BM,EAAQhlC,EAAQ31B,GAIlEhD,KAAKi2C,oBAAoB0nB,EAAQhlC,EAAQ31B,IAKtB,KAJe,OAAjB26D,EAAW,IAAc39D,KAAK01C,kBAAkBioB,EAAW,MAO1E39D,KAAK28D,yBAAyB5+D,KAAK,CACjCqW,KAAM,SACN4pC,MAAO2f,EAAO3f,MACdhrD,MAAM,EAAIqkB,EAA6B,SAAGrX,KAAK+8D,OAC/Cl5B,SAAUnF,EAAkB3G,UAAUY,GACtC9qB,KAAM8vD,EACNruE,UAAW0Q,KAAKm1C,WAChB9S,gBAAiBriC,KAAKk6C,kBAG5B,EACAh2C,EAAOi5D,uBAAyB,SAAgCn5B,EAAQyT,EAAc9e,EAAQ31B,GAC1E,kBAATA,GAAqBA,GAA0I+E,GAAU,GAClL,IAAI49B,EAAWjH,EAAkBzG,QAAQU,GACrCmhC,EAAet5B,EAAsBiX,EAAaE,cAClDimB,EAAqBnmB,EAAaomB,yBAA2B76D,EAAK82D,GACtEp7B,EAAkBtb,SAASuV,EAAQmhC,EAAqC,OAAvB8D,QAAsD,IAAvBA,EAAgCA,EAAqB,MACrI,IAAIlmB,EAAejX,EAAsBgX,EAAaE,cAClDC,EAAqBH,EAAaqmB,yBAA2B96D,EAAK00C,GACtEhZ,EAAkBtb,SAASuV,EAAQ+e,EAAqC,OAAvBE,QAAsD,IAAvBA,EAAgCA,EAAqB,MAC3G,MAAtBA,GACF53C,KAAK88D,kBAAkB/+D,KAAK,CAC1BqW,KAAM,sBACN1T,KAAM+2C,EAAa/2C,KACnBsC,KAAMA,EACNqf,OAAQqc,EAAkB3G,UAAUY,GACpCif,mBAAoBA,EACpB5kD,MAAM,EAAIqkB,EAA6B,SAAGrX,KAAK+8D,OAC/Cp3B,SAAUA,EACVr2C,UAAW0Q,KAAKm1C,WAChB9S,gBAAiBriC,KAAKk6C,kBAG5B,EACAh2C,EAAO+4D,gBAAkB,SAAyBj5B,EAAQyF,EAAW9Q,EAAQ31B,GACzD,kBAATA,GAAqBA,GAAkJ+E,GAAU,GAC1L,IAAI47C,EAAcla,EAAUqC,OAASrC,EAAU5oC,KAC3C44B,EAAasH,EAAc0I,EAAWzpC,KAAKm1C,YAC3C2C,EAAa90C,EAAK2gD,GACtB,GAAkB,MAAd7L,EAsCArO,EAAUr1B,OAASi3B,EAIrB3M,EAAkBtb,SAASuV,EAAQc,EAAYqe,GACtCrO,EAAUr1B,OAAS42B,GAC5BhrC,KAAK+8D,MAAMh/D,KAAK4lD,GACZla,EAAU1uB,OACZ/a,KAAK+9D,qBAAqBt0B,EAAW9Q,EAAQc,EAAYqe,GAEzD93C,KAAKg+D,eAAev0B,EAAW9Q,EAAQc,EAAYqe,GAErD93C,KAAK+8D,MAAM19D,OAGsJ0I,GAAU,OArD7K,CACE,QAAmB5N,IAAf29C,EAA0B,CAW5B,GADsB93C,KAAK48D,oBAAsB58D,KAAK68D,yBAIpD,OACK,IAAK78D,KAAKm6C,0BAMf,aAEJ,CAWAzb,EAAkBtb,SAASuV,EAAQc,EAAY,KAEjD,CAkBF,EACAv1B,EAAOs5D,sBAAwB,SAA+Bx5B,EAAQyF,EAAW9Q,EAAQ31B,GACvF,IAAIygD,EACAja,EAAQC,EAAU6M,YACJ,kBAATtzC,GAAqBA,GAAyJ+E,GAAU,GACjM,IAAI47C,EAAcna,EAAMsC,OAAStC,EAAM3oC,KACnC44B,EAAasH,EAAcyI,EAAOxpC,KAAKm1C,YACvC2C,EAAa90C,EAAK2gD,GACtB,GAAkB,MAAd7L,EAAJ,CAeA,IAAIzV,EAAkBK,EAA8BoV,GACpD,GAAuB,MAAnBzV,EAAJ,CASA,IAAIsD,EAA0D,QAA9C8d,EAAsBja,EAAMoP,oBAAkD,IAAxB6K,EAAiCA,EAAsBzjD,KAAKg9D,eAAellB,GAC7It1B,EAASxiB,KAAKy8D,WAElB3kB,EAAYnS,IAAajH,EAAkB8G,kBAAkB7M,EAAQc,IAAenC,EAAiBoH,EAAkB3G,UAAUY,GAASc,GACtH,kBAAXjX,GAAoKza,GAAU,GACvL22B,EAAkB0rB,uBAAuBzxB,EAAQc,EAAY4I,EAAiB7f,GAC9ExiB,KAAK88D,kBAAkB/+D,KAAK,CAC1BqW,KAAM,eACNpR,KAAM80C,EACNz1B,OAAQG,EACRxvB,KAAM,GAAGnE,QAAO,EAAIwoB,EAA6B,SAAGrX,KAAK+8D,OAAQ,CAACpZ,IAClEhe,SAAUA,EACVr2C,UAAW0Q,KAAKm1C,WAChBtnC,KAAM27B,EACNnH,gBAAiBA,GAjBnB,MAFE3D,EAAkBtb,SAASuV,EAAQc,EAAY,KANjD,KAdA,CACE,QAAmBt/B,IAAf29C,EAA0B,CAE5B,GADsB93C,KAAK48D,oBAAsB58D,KAAK68D,yBAEpD,OACK,IAAK78D,KAAKm6C,0BAIf,aAEJ,CACAzb,EAAkBtb,SAASuV,EAAQc,EAAY,KAEjD,CA2BF,EACAv1B,EAAOq5D,sBAAwB,SAA+Bv5B,EAAQyF,EAAW9Q,EAAQ31B,GACvF,IAAI2gD,EAAcla,EAAUqC,OAASrC,EAAU5oC,KAC3C44B,EAAasH,EAAc0I,EAAWzpC,KAAKm1C,YAC3C2C,EAAa90C,EAAK2gD,GACtB,GAAkB,MAAd7L,EAAJ,CAsBA,IAAImmB,EAAqB5B,EAA+BvkB,GACpDwB,EAAiCt5C,KAAKq5C,gCAClB,MAAtB4kB,GAAiQl2D,GAAU,GACjO,oBAAnCuxC,GAAiPvxC,GAAU,GAChQk2D,EAAmBjtC,OAAOh9B,OAAS,GACc,oBAAxCgM,KAAKm7C,gCACdn7C,KAAKm7C,+BAA+B8iB,EAAmBtvD,OAAQsvD,EAAmBjtC,QAKtF,IAAIktC,EAAgB5mC,EAAiBoH,EAAkB3G,UAAUY,GAASoI,EAAc0I,EAAWzpC,KAAKm1C,aACpG+jB,EAAkCl5D,KAAKgtD,cAAc1vD,IAAI4gE,GAK7D,GAJuC,MAAnChF,IACFA,EAAkCx6B,EAAkBj0B,OAAOyzD,EAAe5O,GAC1EtvD,KAAKgtD,cAAcrzC,IAAIukD,EAAehF,IAET,MAA3B+E,EAAmB1lE,KAYrB,OAHAmmC,EAAkBtb,SAAS81C,EAAiC9gB,EAA+B,MAC3F1Z,EAAkBtb,SAAS81C,EAAiC5gB,EAAiD,SAC7G5Z,EAAkB+G,kBAAkB9M,EAAQc,EAAYykC,GAO1D,IAAIC,EAA4B7kB,EAA+B2kB,EAAmB1lE,MAClFmmC,EAAkBtb,SAAS81C,EAAiC9gB,EAA+B+lB,GAC3F,IAEE3xC,EAFE6rB,EAAiC,GACjC5rB,GAAa,EAAI9B,EAAqC,SAAGszC,EAAmBlnD,SAEhF,IACE,IAAK0V,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAI9a,EAAQqmB,EAAO79B,MACQ,MAAvBwX,EAAM+M,SAASlQ,MACjBhD,KAAK88D,kBAAkB/+D,KAAK,CAC1BqW,KAAM,sBACN1T,KAAM,KACNsC,KAAMmD,EAAM+M,SAASlQ,KACrBqf,OAAQyf,EACR8V,mBAAoBzxC,EAAM7G,OAC1BtM,KAAM,GACN2yC,SAAU5D,EACVzyC,UAAW6W,EAAM7W,UACjB+yC,gBAAiBriC,KAAKk6C,mBAG1B7B,EAA+Bt6C,KAAK,CAClCuB,OAAQ6G,EAAM7G,OACdhQ,UAAW6W,EAAM7W,WAErB,CACF,CAAE,MAAO4gB,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACA,IACEk8B,EADEE,GAAa,EAAIhS,EAAqC,SAAGszC,EAAmB57D,WAEhF,IACE,IAAKs6B,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAIja,EAAWy1B,EAAO9tC,MACQ,MAA1BqY,EAASkM,SAASlQ,MACpBhD,KAAK88D,kBAAkB/+D,KAAK,CAC1BqW,KAAM,sBACN1T,KAAM,KACNsC,KAAMgE,EAASkM,SAASlQ,KACxBqf,OAAQrb,EAASob,KACjBw1B,mBAAoB5wC,EAAS1H,OAC7BtM,KAAM,GACN2yC,SAAU3+B,EAASo3D,WACnB9uE,UAAW0X,EAAS1X,UACpB+yC,gBAAiBriC,KAAKk6C,mBAG1B7B,EAA+Bt6C,KAAK,CAClCuB,OAAQ0H,EAAS1H,OACjBhQ,UAAW0X,EAAS1X,WAExB,CACF,CAAE,MAAO4gB,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACAm+B,EAAkBtb,SAAS81C,EAAiC5gB,EAAiDD,GAC7G3Z,EAAkB+G,kBAAkB9M,EAAQc,EAAYykC,EAhGxD,KArBA,CACE,QAAmB/jE,IAAf29C,EAA0B,CAQ5B,GAAI93C,KAAK68D,yBAGP,OAIC78D,KAAKm6C,2BAA6RpyC,GAAU,EAEjT,CACA22B,EAAkBtb,SAASuV,EAAQc,EAAY,KAEjD,CAiGF,EACAv1B,EAAO85D,eAAiB,SAAwBx0B,EAAO7Q,EAAQc,EAAYqe,GACzE,IAAIumB,EACoB,kBAAfvmB,GAA2BA,GAA+J/vC,GAAU,GAC7M,IAAIya,EAASxiB,KAAKy8D,WAElB3kB,EACgD,QAA/CumB,EAAuB70B,EAAMoP,oBAAmD,IAAzBylB,EAAkCA,EAAuBr+D,KAAKg9D,eAAellB,KAErIpZ,EAAkB8G,kBAAkB7M,EAAQc,IAAenC,EAAiBoH,EAAkB3G,UAAUY,GAASc,GAC7F,kBAAXjX,GAAoKza,GAAU,GAIvL22B,EAAkB+G,kBAAkB9M,EAAQc,EAAYjX,GACxD,IAAI0nC,EAAalqD,KAAKgtD,cAAc1vD,IAAIklB,GACxC,GAAK0nC,EAKM50B,MALM,CAEf,IAAIqQ,EAAW6D,EAAMoP,cAAgB54C,KAAKg9D,eAAellB,GACzDoS,EAAaxrB,EAAkBj0B,OAAO+X,EAAQmjB,GAC9C3lC,KAAKgtD,cAAcrzC,IAAI6I,EAAQ0nC,EACjC,CAIAlqD,KAAKi2C,oBAAoBzM,EAAO0gB,EAAYpS,EAC9C,EACA5zC,EAAO65D,qBAAuB,SAA8Bv0B,EAAO7Q,EAAQc,EAAYqe,GACrF,IAAIp1C,EAAQ1C,KACXjE,MAAMC,QAAQ87C,IAA8K/vC,GAAU,GACvM,IAAIhE,EAAU26B,EAAkBsH,mBAAmBrN,EAAQc,GACvDz1B,EAAU,GACd8zC,EAAWxnD,SAAQ,SAAU45C,EAAM2vB,GACjC,IAAIyE,EAEJ,GAAY,MAARp0B,EAAJ,CAIAxnC,EAAMq6D,MAAMh/D,KAAKa,OAAOi7D,IACN,kBAAT3vB,GAA6KniC,GAAU,GAChM,IAAIya,EAAS9f,EAAM+5D,WAEnBvyB,EACgD,QAA/Co0B,EAAuB90B,EAAMoP,oBAAmD,IAAzB0lB,EAAkCA,EAAuB57D,EAAMs6D,eAAe9yB,KAAUnmC,GAAWA,EAAQ81D,IAEnKviC,EAAiBoH,EAAkB3G,UAAUY,GAASc,EAAYogC,GAC9C,kBAAXr3C,GAAoLza,GAAU,GACvM/D,EAAQjG,KAAKykB,GACb,IAAI0nC,EAAaxnD,EAAMsqD,cAAc1vD,IAAIklB,GACzC,GAAK0nC,EAKM50B,MALM,CAEf,IAAIqQ,EAAW6D,EAAMoP,cAAgBl2C,EAAMs6D,eAAe9yB,GAC1DggB,EAAaxrB,EAAkBj0B,OAAO+X,EAAQmjB,GAC9CjjC,EAAMsqD,cAAcrzC,IAAI6I,EAAQ0nC,EAClC,CAKI50B,EAMJ5yB,EAAMuzC,oBAAoBzM,EAAO0gB,EAAYhgB,GAC7CxnC,EAAMq6D,MAAM19D,KA7BZ,MAFE2E,EAAQjG,KAAKmsC,EAgCjB,IACAxL,EAAkBwH,mBAAmBvN,EAAQc,EAAYz1B,EAC3D,EAKAE,EAAOq6D,oBAAsB,SAA6B5lC,EAAQ6Q,EAAO97B,GACvE,IAAI8wD,EAC2D,QAA/CA,EAAuBh1B,EAAMoP,oBAAmD,IAAzB4lB,GAAyDx+D,KAAKg9D,eAAetvD,GACvIgxB,EAAkB3G,UAAUY,EAE3C,EAKAz0B,EAAOu6D,0CAA4C,SAAmD9lC,EAAQc,EAAYqe,GAO1H,EAKA5zC,EAAOw6D,gDAAkD,SAAyD/lC,EAAQgmC,EAAQn8C,EAAQiX,GAEpInE,CAGN,EACOwjB,CACT,CAxlB2C,GAylB3Cx5C,EAAOC,QAAU,CACf6kD,UAvmBF,SAAmBnb,EAAc/0B,EAAUhB,EAAU3I,GACnD,IAAI8X,EAASnO,EAASmO,OACpBxU,EAAOqG,EAASrG,KAChBve,EAAY4kB,EAAS5kB,UAEvB,OADiB,IAAIwpD,EAAwB7P,EAAc35C,EAAWib,GACpDq0C,kBAAkB/wC,EAAMwU,EAAQnP,EACpD,sCC/DA,IACE+kB,EADa93B,EAAQ,MACF83B,QACjBlwB,EAAY5H,EAAQ,MAKpBi4C,EAAgC,OAChCkX,EAAyB,uBAW7BhwD,EAAOC,QAAU,CACf+4C,gDAdoD,wBAepDF,8BAA+BA,EAC/BkX,uBAAwBA,EACxB4E,6BARF,SAAsCv7B,GAEpC,OADEV,EAAQU,KAAY22B,GAAoLvnD,GAAU,GAC7M4wB,EAAOyf,EAChB,EAMEikB,+BAfF,SAAwC3uD,GACtC,OAAe,MAAXA,GAAsC,kBAAZA,GAAkD,kBAAnBA,EAAQiB,SAAwB5S,MAAMC,QAAQ0R,EAAQnV,OAA0B,OAAjBmV,EAAQnV,OAAkBwD,MAAMC,QAAQ0R,EAAQqJ,UAAahb,MAAMC,QAAQ0R,EAAQrL,YAAetG,MAAMC,QAAQ0R,EAAQsjB,QAG7OtjB,EAFE,IAGX,sCCdiBvN,EAAQ,MAAzB,IACI6X,EAAmB7X,EAAQ,MAC3B+H,EAAoB/H,EAAQ,MAC5By+D,EAAoBz+D,EAAQ,MAC5BsrD,EAActrD,EAAQ,MACtBwrD,EAAuC,WACzC,SAASA,EAAwBjS,EAAK+a,GACpCz0D,KAAKg7C,eAAiB,IAAIxvB,IAC1BxrB,KAAKoX,MAAQsiC,EACb15C,KAAKotD,eAAiBqH,CACxB,CACA,IAAIvwD,EAASynD,EAAwBj4D,UA4HrC,OA3HAwQ,EAAOkD,UAAY,SAAmBR,EAAUsX,GAC9C,IAAIxb,EAAQ1C,KACRyI,EAAe,CACjBo2D,OAAQ,KACR3gD,SAAUA,EACVtX,SAAUA,EACVk4D,OAAO,GAMT,OADA9+D,KAAKg7C,eAAejvB,IAAItjB,GACjB,CACLnE,QALY,WACZ5B,EAAMs4C,eAAuB,OAAEvyC,EACjC,EAKF,EACAvE,EAAOgsD,sBAAwB,SAA+BnxD,GAC5D,IAAI0M,EAASzL,KACbA,KAAKg7C,eAAe1qD,SAAQ,SAAUmY,GAapC,GAAKA,EAAaq2D,MAAlB,CAIA,IAAIl4D,EAAW6B,EAAa7B,SACxBi4D,EAASpT,EAAYpxC,KAAKtb,EAAQ6H,EAASsN,SAAUzI,EAAO2hD,gBAC5Dt/C,EAAWkK,EAAiBpR,EAAS5D,KAAM67D,EAAO77D,MACtD67D,EAAO77D,KAAO8K,EACdrF,EAAao2D,OAASA,CALtB,MAFEp2D,EAAao2D,OAASp2D,EAAa7B,QAQvC,GACF,EACA1C,EAAOksD,qBAAuB,WAC5BpwD,KAAKg7C,eAAe1qD,SAAQ,SAAUmY,GACpC,IAAIo2D,EAASp2D,EAAao2D,OAC1Bp2D,EAAao2D,OAAS,KAClBA,GACEA,EAAO77D,OAASyF,EAAa7B,SAAS5D,OACxCyF,EAAaq2D,OAAQ,GAEvBr2D,EAAa7B,SAAW,CACtB5D,KAAMyF,EAAa7B,SAAS5D,KAC5BqV,cAAewmD,EAAOxmD,cACtB2D,mBAAoB6iD,EAAO7iD,mBAC3B1D,0BAA2BumD,EAAOvmD,0BAClCmH,YAAao/C,EAAOp/C,YACpBvL,SAAU2qD,EAAO3qD,SACjB2J,sBAAuBghD,EAAOhhD,sBAC9BC,oBAAqB+gD,EAAO/gD,sBAG9BrV,EAAaq2D,OAAQ,CAEzB,GACF,EACA56D,EAAO2qD,oBAAsB,SAA6B9vD,EAAQgwD,EAAkBtQ,EAAeiQ,GACjG,IAAI3hD,EAAS/M,KACT++D,EAA8C,IAA1BhQ,EAAiBrzD,KACzCsE,KAAKg7C,eAAe1qD,SAAQ,SAAUmY,GACpC,IAAI6L,EAAQvH,EAAOiyD,oBAAoBjgE,EAAQ0J,EAAcsmD,EAAkBgQ,EAAmBrQ,GACrF,MAATp6C,GACFmqC,EAAc1gD,KAAKuW,EAEvB,GACF,EAUApQ,EAAO86D,oBAAsB,SAA6BjgE,EAAQ0J,EAAcsmD,EAAkBgQ,EAAmBrQ,GACnH,IAAImQ,EAASp2D,EAAao2D,OACxB3gD,EAAWzV,EAAayV,SACxBtX,EAAW6B,EAAa7B,SACxBk4D,EAAQr2D,EAAaq2D,MACnBG,EAAwBF,GAAqBH,EAAkBh4D,EAAS6Y,YAAasvC,GACzF,GAAK+P,GAAUG,EAAf,CAGA,IAAIC,EAAeD,IAA0BJ,EAASpT,EAAYpxC,KAAKtb,EAAQ6H,EAASsN,SAAUlU,KAAKotD,gBAAkByR,EAiBzH,OAfAK,EAAe,CACbl8D,KAFagV,EAAiBpR,EAAS5D,KAAMk8D,EAAal8D,MAG1DqV,cAAe6mD,EAAa7mD,cAC5B2D,mBAAoBkjD,EAAaljD,mBACjC1D,0BAA2B4mD,EAAa5mD,0BACxCmH,YAAay/C,EAAaz/C,YAC1BvL,SAAUgrD,EAAahrD,SACvB2J,sBAAuBqhD,EAAarhD,sBACpCC,oBAAqBohD,EAAaphD,qBAKpCrV,EAAa7B,SAAWs4D,EACxBz2D,EAAaq2D,OAAQ,EACjBI,EAAal8D,OAAS4D,EAAS5D,MAC7BhD,KAAKoX,OAASlP,EAAkBi3D,4BAClCn/D,KAAKoX,MAAM,CACTvW,KAAM,4BACN6tD,gBAAiBA,EACjB9nD,SAAUA,EACVs4D,aAAcA,IAGlBhhD,EAASghD,GACFt4D,EAASsN,SAASI,YAV3B,CAlBA,CA8BF,EACOq3C,CACT,CAnI2C,GAoI3CrsD,EAAOC,QAAUosD,qCCzIjB,IACIt0C,GAAsB/V,EADGnB,EAAAA,MAAAA,SACoBA,EAAQ,MACrDq3B,EAAoBr3B,EAAQ,MAC5Bg/B,EAAoBh/B,EAAQ,MAC5Bq/B,EAAar/B,EAAQ,MACrB4H,EAAY5H,EAAQ,MACpBi/D,EAAWjgC,EAAkBigC,SAC/BC,EAAUlgC,EAAkBkgC,QAC5BC,EAAengC,EAAkBmgC,aACjCC,EAAapgC,EAAkBogC,WAGjC,SAASC,EAAiB//D,EAAKnQ,GAC7B,GAAImQ,EAAI2U,OAASgrD,EAEf,OAoJJ,SAAgCv+D,EAAMvR,GAEpC,OADCA,EAAUqE,eAAekN,IAAyHkH,GAAU,GACtJy3B,EAAWlwC,EAAUuR,GAC9B,CAvJW4+D,CAAuBhgE,EAAIigE,aAAcpwE,GAC3C,GAAImQ,EAAI2U,OAASirD,EAEtB,OAAO5/D,EAAI9Q,MACN,GAAI8Q,EAAI2U,OAASkrD,EAAc,CACpC,IAAI3wE,EAAQ,CAAC,EAIb,OAHA8Q,EAAIs2D,OAAOzlE,SAAQ,SAAUk5C,GAC3B76C,EAAM66C,EAAM3oC,MAAQ2+D,EAAiBh2B,EAAOl6C,EAC9C,IACOX,CACT,CAAO,GAAI8Q,EAAI2U,OAASmrD,EAAY,CAClC,IAAII,EAAS,GAIb,OAHAlgE,EAAIqrD,MAAMx6D,SAAQ,SAAU45C,GAClB,MAARA,GAAey1B,EAAO5hE,KAAKyhE,EAAiBt1B,EAAM56C,GACpD,IACOqwE,CACT,CACF,CAMA,SAASv/B,EAAkB1/B,EAAMpR,GAC/B,IAAIg4B,EAAS,CAAC,EAId,OAHA5mB,EAAKpQ,SAAQ,SAAUmP,GACrB6nB,EAAO7nB,EAAIoB,MAAQ2+D,EAAiB//D,EAAKnQ,EAC3C,IACOg4B,CACT,CAkGA,SAASs4C,EAAiB/+D,EAAMg/D,GAC9B,IAAKA,EACH,OAAOh/D,EAET,IAAIymB,EAAS,GACb,IAAK,IAAIw4C,KAAWD,EAClB,GAAIA,EAAUlsE,eAAemsE,GAAU,CACrC,IAEM3d,EAFFxzD,EAAQkxE,EAAUC,GACtB,GAAa,MAATnxE,EAEF24B,EAAOvpB,KAAK+hE,EAAU,KAAqD,QAA7C3d,EAAkB9vC,KAAKC,UAAU3jB,UAAwC,IAApBwzD,EAA6BA,EAAkB,aAEtI,CAEF,OAAyB,IAAlB76B,EAAOtzB,OAAe6M,EAAOA,EAAO,IAAIhS,OAAOy4B,EAAOh2B,KAAK,KAAM,IAC1E,CAoBA,IAAIytC,EAAkB,CACpB0qB,qBAAsB,oBACtBe,2BAA4B,4BAC5B/oB,cAAe,cACfC,mBAAoB,kBACpByyB,uBAAwB,qBACxBC,qBAAsB,qBAEtBzyB,OAAQ,OACRC,QAAS,QACTC,SAAU,SACVC,QAAS,cACTC,UAAW,SACXC,aAAc,aACd0nB,mBAAoB,mBACpBe,oCAAqC,oCACrCd,yBAA0B,kBAC1BoW,gCAAiC,8BACjCC,4BAA6B,qBAC7BC,yBAA0B,kBAC1BC,sCAAuC,gCACvCN,iBAAkBA,EAClBJ,iBAAkBA,EAClBp/B,kBAAmBA,EACnBm8B,oBAlJF,SAA6B1lB,EAAavnD,GACxC,IAAI6wE,EAAatpB,EAAYspB,WAC3BppC,EAAS8f,EAAY9f,OACrB1lC,EAAMwlD,EAAYxlD,IAClBwP,EAAOg2C,EAAYh2C,KACnBH,EAAOm2C,EAAYn2C,KACnB24B,EAAUwd,EAAYxd,QACpB+mC,EAAa5oC,EAAkBT,EAAQ1lC,EAAKwP,GAC5Cw/D,EAAa,KAcjB,OAbI3/D,GAAQ24B,GAA2B,IAAhB34B,EAAK1M,QAAmC,IAAnBqlC,EAAQrlC,SAClDqsE,EAAa3/D,EAAK1C,QAAO,SAAUyB,GACjC,OAAO45B,EAAQxlC,QAAQ4L,EAAIoB,OAAS,CACtC,KAEEs/D,IAMFE,EAA2B,MAAdA,EAAqB,CAACF,GAAYtxE,QAAO,EAAIwoB,EAA6B,SAAGgpD,IAAe,CAACF,IAEzF,OAAfE,EACKD,EAEAR,EAAiBQ,EAAYhgC,EAAkBigC,EAAY/wE,GAEtE,EAwHEyxC,cA7GF,SAAuByI,EAAOl6C,GAC5B,GAAIk6C,EAAM/P,WAER,OAAO+P,EAAM/P,WAEf,IAAI/4B,EAUN,SAAsB8oC,GACpB,GAAmB,kBAAfA,EAAMp1B,MAA2C,sBAAfo1B,EAAMp1B,KAA8B,CACxE,IAAIksD,EAEEC,EADN,OAAkB,MAAd/2B,EAAM9oC,KAEsC,QAAtC6/D,EAAkB/2B,EAAMxiC,gBAA0C,IAApBu5D,OAA6B,EAASA,EAAgB7/D,KAEQ,OAAzE,QAAvC4/D,EAAmB92B,EAAMxiC,gBAA2C,IAArBs5D,OAA8B,EAASA,EAAiB5/D,MACpG8oC,EAAM9oC,KAER8oC,EAAM9oC,KAAK7R,OAAO26C,EAAMxiC,SAAStG,KAC1C,CACA,IAAIA,EAA6B,qBAAf8oC,EAAM9oC,UAAuBvG,EAAYqvC,EAAM9oC,KACjE,OAAOA,CACT,CAxBa8/D,CAAah3B,GACpB3oC,EAAO2oC,EAAM3oC,KACjB,OAAOH,GAAwB,IAAhBA,EAAK1M,OAAe4rE,EAAiB/+D,EAAMu/B,EAAkB1/B,EAAMpR,IAAcuR,CAClG,EAsGE02B,oBAvEF,SAA6B12B,EAAMH,GACjC,OAAOk/D,EAAiB/+D,EAAM2+B,EAAW9+B,GAC3C,EAsEE8/B,sBArCF,SAA+BmX,GAC7B,MAAO,GAAG9oD,OA9JsB,uBA8JcA,OAAO8oD,EACvD,EAoCElX,sBAnCF,SAA+BkX,GAC7B,MAAO,GAAG9oD,OAhKsB,uBAgKcA,OAAO8oD,EACvD,GAmCAr4C,EAAOC,QAAUw/B,qCC/MjB,IACIpU,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7D6X,EAAmB7X,EAAQ,MAE7B+qC,EADa/qC,EAAQ,MACU+qC,oBAE/B5T,EADcn3B,EAAQ,MACOm3B,iBAC3BoH,EAAoBv+B,EAAQ,MAC5B6B,EAAY7B,EAAQ,MACtB8/D,EAA2Bj+D,EAAUi+D,yBACrCF,EAAkC/9D,EAAU+9D,gCAC5CC,EAA8Bh+D,EAAUg+D,4BACxCrW,EAA2B3nD,EAAU2nD,yBACrC5oB,EAAgB/+B,EAAU++B,cACxBh5B,EAAY5H,EAAQ,MAGpBsgE,GAFUtgE,EAAQ,MAEP,IAAIqrB,KACf6oC,EAAiC,WACnC,SAASA,IAAqB,CAC9B,IAAInwD,EAASmwD,EAAkB3gE,UAc/B,OAbAwQ,EAAOkzD,wBAA0B,SAAiC59B,EAAUgQ,EAAOl6C,EAAWoxE,EAAUzJ,GACpGztB,EAAMp1B,OAAS82B,GAAgInjC,GAAU,GAC3J,IAAI44D,EAAYD,IACdnJ,EAAiBoJ,EAAUpJ,eAC3B3wD,EAAW+5D,EAAU/5D,SAEvB,MAAO,CAAC2wD,OAAgBp9D,EADdwmE,EAAUngE,MACsBoG,OAAUzM,OAAWA,EACjE,EACA+J,EAAO0qD,kBAAoB,SAA2BiJ,GAAiB,EACvE3zD,EAAOu0D,mBAAqB,SAA4BlmD,EAAIozB,GAC6F59B,GAAU,EACnK,EACA7D,EAAOqxD,yBAA2B,SAAkCsC,GAAiB,EAC9ExD,CACT,CAjBqC,GAkBrC,SAASuM,EAAkBn0D,EAAO4pB,EAAMwqC,GACtC,IAAIlnD,EAAMlN,EAAMnP,IAAI+4B,GACf1c,IACHA,EAAM,IAAI6R,IACV/e,EAAMkN,IAAI0c,EAAM1c,IAElBA,EAAIoS,IAAI80C,EACV,CACA,IAAIjV,EAAmC,WACrC,SAASA,EAAoBkV,GAC3B9gE,KAAK+gE,uBAAyB,IAAIloD,IAClC7Y,KAAKghE,uBAAyB,IAAInoD,IAClC7Y,KAAKihE,iBAAmBH,CAC1B,CACA,IAAI1mD,EAAUwxC,EAAoBl4D,UAkJlC,OAjJA0mB,EAAQg9C,wBAA0B,SAAiC59B,EAAUgQ,EAAOl6C,EAAWoxE,EAAUzJ,GACvG,IAAIhuB,EAAejpC,KAAKihE,mBAMpBtoC,EAASsQ,EAAa3rC,IAAIk8B,GAClB,MAAVb,GAAwH5wB,GAAU,GACpI,IAAI0xB,EAAasH,EAAcyI,EAAOl6C,GAClCi2C,EAAW7G,EAAkB8G,kBAAkB7M,EAAQc,GACvDmM,EAA2B,MAAZL,EAAmB,KAAO0D,EAAa3rC,IAAIioC,GAC9D,GAAoB,MAAhBK,GAAwB5lC,KAAKkhE,WAAWt7B,EAAcqxB,GAA6B,CACrF,IAAIkK,EAEJ57B,EAAsC,QAA1B47B,EAAY57B,SAAoC,IAAd47B,EAAuBA,EAAY7pC,EAAiBkC,EAAUC,GAC5GmM,EAAelH,EAAkBj0B,OAAO86B,EAAU,sBAClD,IAAI67B,EAAmBV,IACvBhiC,EAAkBtb,SAASwiB,EAAc+jB,EAA0ByX,EAAiB7J,gBACpF74B,EAAkBtb,SAASwiB,EAAco6B,EAA6BoB,EAAiBx6D,UACvF83B,EAAkBtb,SAASwiB,EAAcq6B,EAA0BmB,EAAiB5gE,OACpFyoC,EAAatvB,IAAI4rB,EAAUK,GAO3B,IAAIy7B,EAAgBp4B,EAAa3rC,IAAIk8B,GAClB,MAAjB6nC,GAAoJt5D,GAAU,GAChK,IAAImiD,EAAaxrB,EAAkBhvC,MAAM2xE,GAGzC,GAFA3iC,EAAkB+G,kBAAkBykB,EAAYzwB,EAAY8L,GAC5D0D,EAAatvB,IAAI6f,EAAU0wB,GACL,MAAlB1gB,EAAMxiC,SAAkB,CAC1B,IAAIs6D,EAEAC,EAAqBxgC,EAAcyI,EAAMxiC,SAAU1X,GACnDkyE,EAAalqC,EAAiBkC,EAAU+nC,GAC5CX,EAAkB5gE,KAAK+gE,uBAAwBS,EAAYj8B,GAC3Dq7B,EAAkB5gE,KAAKghE,uBAAwBxnC,EAAUgoC,GACzD,IAAIC,EAAwE,QAAvDH,EAAwBF,EAAiBx6D,gBAAgD,IAA1B06D,OAAmC,EAASA,EAAsB7hD,YACtJ,GAAqB,MAAjBgiD,EAAuB,CACzB,IACEr1C,EADEC,GAAY,EAAI1B,EAAqC,SAAG82C,GAE5D,IACE,IAAKp1C,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIygD,EAAet1C,EAAMz9B,MACzBiyE,EAAkB5gE,KAAKghE,uBAAwBU,EAAcF,EAC/D,CACF,CAAE,MAAOtxD,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACF,CACF,CACF,CAGA,IAAIohE,EAAS/7B,EAAa+jB,GAEtB/iD,EAAWg/B,EAAao6B,GAG5B,MAAO,CAAC2B,EAAQp8B,EADJK,EAAaq6B,GACQr5D,OAAUzM,OAAWA,EACxD,EACAigB,EAAQw0C,kBAAoB,SAA2BiJ,GAKrD,IAHA,IAAI5uB,EAAejpC,KAAKihE,mBACpBW,EAAU,IAAIp2C,IACdq2C,EAAiB9lE,MAAMs6B,KAAKwhC,GACzBgK,EAAe7tE,QAAQ,CAC5B,IAAIwlC,EAAWqoC,EAAexiE,MAC9Bw4D,EAAe9rC,IAAIyN,GACnB,IACEhN,EADEC,GAAa,EAAI9B,EAAqC,SAA2E,QAAvEm3C,EAAwB9hE,KAAKghE,uBAAuB1jE,IAAIk8B,UAAiD,IAA1BsoC,EAAmCA,EAAwBrB,GAExM,IACE,IAAKh0C,EAAWn5B,MAAOk5B,EAASC,EAAWH,KAAKrL,MAAO,CACrD,IAAI6gD,EACA96D,EAAWwlB,EAAO79B,MACtB,IAAKizE,EAAQ1gD,IAAIla,GAAW,CAC1B,IACEy1B,EADEE,GAAa,EAAIhS,EAAqC,SAA2E,QAAvEo3C,EAAwB/hE,KAAK+gE,uBAAuBzjE,IAAI0J,UAAiD,IAA1B+6D,EAAmCA,EAAwBtB,GAExM,IACE,IAAK9jC,EAAWrpC,MAAOmpC,EAASE,EAAWrQ,KAAKrL,MAAO,CACrD,IAAI8gD,EACAC,EAAkBvlC,EAAO9tC,MAC7BqR,KAAKiiE,+BAA+BD,EAAiB/4B,EAAc4uB,GAC9D+J,EAAQ1gD,IAAI8gD,IACfH,EAAe9jE,KAAKikE,EAExB,CACF,CAAE,MAAO9xD,GACPysB,EAAWppC,EAAE2c,EACf,CAAE,QACAysB,EAAWp8B,GACb,CACF,CACF,CACF,CAAE,MAAO2P,GACPuc,EAAWl5B,EAAE2c,EACf,CAAE,QACAuc,EAAWlsB,GACb,CACF,CACF,EACA6Z,EAAQ6nD,+BAAiC,SAAwC5/C,EAAQ4mB,EAEzF4uB,GAEE,IAAIl/B,EAASsQ,EAAa3rC,IAAI+kB,GAC9B,GAAKsW,EAAL,CAIA,IAAIuxB,EAAaxrB,EAAkBhvC,MAAMipC,GACzC+F,EAAkBtb,SAAS8mC,EAAY6V,GAAiC,GACxE92B,EAAatvB,IAAI0I,EAAQ6nC,EAHzB,CAIF,EACA9vC,EAAQ8mD,WAAa,SAAoBvoC,EAAQs+B,GAC/C,IAAKv4B,EAAkBvb,SAASwV,EAAQonC,GACtC,OAAO,EAGT,IAAIn5D,EAAW83B,EAAkBvb,SAASwV,EAAQqnC,GAC9CkC,EAA8B,OAAbt7D,QAAkC,IAAbA,OAAsB,EAASA,EAAS5D,KAC9Em/D,EAA8B,OAAbv7D,QAAkC,IAAbA,OAAsB,EAASA,EAASsN,SAClF,GAAsB,MAAlBguD,GAA4C,MAAlBC,EAE5B,OAAO,EAET,IACEC,EAD0BnL,EAA2BkL,GAChBn/D,KAEvC,OADegV,EAAiBkqD,EAAgBE,KAC/BF,CAInB,EACA9nD,EAAQq+C,mBAAqB,SAA4BlmD,EAAIihC,GAC4FzrC,GAAU,EACnK,EACAqS,EAAQm7C,yBAA2B,SAAkCsC,GACmF9vD,GAAU,EAClK,EACO6jD,CACT,CAzJuC,GA0JvCtsD,EAAOC,QAAU,CACf80D,kBAAmBA,EACnBzI,oBAAqBA,sCCxMvB,IACEp4C,EADarT,EAAQ,MACEqT,YAEvBI,EADczT,EAAQ,MACEyT,YACtB7L,EAAY5H,EAAQ,MAOpBkiE,EAAe,GAoCnB,IAAI9N,EAA0C,CAAC,EAC/Cj1D,EAAOC,QAAU,CACf+iE,aAnBF,SAAsBxwC,EAAevX,GACnC,IAAK8nD,EAAaruE,OAChB,MAAM,IAAIyM,MAAM,6EAElB,IAAI1D,EAAUslE,EAAaA,EAAaruE,OAAS,GAC7CggB,EAAeR,EAAYse,GAC3BtW,EAAmB5H,EAAYI,EAAcuG,GAC3B,MAApBiB,GAA6LzT,GAAU,GAC7K,2BAA1ByT,EAAiBpH,MAA2NrM,GAAU,GACxP,IAAIw6D,EAAwBxlE,EAAQk6D,2BAA2Bz7C,EAAkBjB,GAC/EvX,EAAOu/D,EAAsBv/D,KAE/B,GADkBu/D,EAAsBlqD,cAEtC,MAAMk8C,EAER,OAAOvxD,CACT,EAIEwxD,oBAtCF,SAA6Bz3D,EAASskB,GACpCghD,EAAatkE,KAAKhB,GAClB,IACE,OAAOskB,GACT,CAAE,QACAghD,EAAahjE,KACf,CACF,EAgCEk1D,wCAAyCA,kCCnD3C,IAAIphB,EAAS,iBAQb7zC,EAAOC,QAAU,CACf00C,eAPF,SAAwBtO,GACtB,OAAOwN,EAASxN,CAClB,EAME68B,SALF,SAAkBjwD,GAChB,OAA8B,IAAvBA,EAAG1e,QAAQs/C,EACpB,EAIEa,iBAVqB,mDCDvB,IAII1S,GAAYhK,EAJDn3B,EAAQ,MACOm3B,kBACdn3B,EAAQ,MACF2hC,QACoB,UAE1CxiC,EAAOC,QAAU,CACf+hC,UAAWA,EACXC,YAHgB,6CCLlB,IACEyJ,EADa7qC,EAAQ,MACG6qC,aAExBuxB,EADcp8D,EAAQ,MACUo8D,oBAC9Bx6D,EAAW5B,EAAQ,MACnB4H,EAAY5H,EAAQ,MA0BxBb,EAAOC,QAjBP,SAAqCs3C,EAAa5T,EAAY3zC,GAC5D,IAAImzE,EAAcx/B,EAAW1H,MAAK,SAAUx8B,GAC1C,OAAOA,EAAOqV,OAAS42B,GAAgBjsC,EAAO8B,OAASg2C,EAAYh2C,MAAQ9B,EAAO+sC,QAAU+K,EAAY/K,OAAS/pC,EAAShD,EAAO2B,KAAMm2C,EAAYn2C,KACrJ,IACE+hE,GAAeA,EAAYruD,OAAS42B,GAA2LjjC,GAAU,GAC3O,IAAIuxB,EAAYijC,EAAoB1lB,EAAavnD,GACjD,MAAO,CACL8kB,KAAM,cACN03B,MAAO22B,EAAY32B,MACnBjrC,KAAMy4B,EACNG,WAAYH,EACZ54B,KAAM,KACNk4C,aAAc6pB,EAAY7pB,aAC1B79B,OAAQ0nD,EAAY1nD,OACpBkoB,WAAYw/B,EAAYx/B,WAE5B,qCC9BA,IACEoI,EADalrC,EAAQ,MACGkrC,aAExBkxB,EADcp8D,EAAQ,MACUo8D,oBAC9Bx6D,EAAW5B,EAAQ,MACnB4H,EAAY5H,EAAQ,MAsBxBb,EAAOC,QAdP,SAA2Cs3C,EAAa5T,EAAY3zC,GAClE,IAAImzE,EAAcx/B,EAAW1H,MAAK,SAAUx8B,GAC1C,OAAOA,EAAOqV,OAASi3B,GAAgBtsC,EAAO8B,OAASg2C,EAAYh2C,MAAQ9B,EAAO+sC,QAAU+K,EAAY/K,OAAS/pC,EAAShD,EAAO2B,KAAMm2C,EAAYn2C,KACrJ,IACE+hE,GAAeA,EAAYruD,OAASi3B,GAAiMtjC,GAAU,GACjP,IAAIuxB,EAAYijC,EAAoB1lB,EAAavnD,GACjD,MAAO,CACL8kB,KAAM,cACN03B,MAAO22B,EAAY32B,MACnBjrC,KAAMy4B,EACNG,WAAYH,EACZ54B,KAAM,KAEV,qCC1BA,IAAIinD,EAAkCxnD,EAAQ,MAChCA,EAAQ,MAWtBb,EAAOC,QAVP,SAAoCxC,EAASwF,EAAeF,EAAWvU,EAAOyV,EAAqB2a,GAQjG,OAAO,IAAIypC,EAAgC5qD,EAASsF,EAAWvU,EAAOowB,EAAU3a,EAClF,oCCXA,IAKIF,EACAq/D,EANA36D,EAAY5H,EAAQ,MAkBxBb,EAAOC,QAXP,SAA4BojE,GAS1B,OARKt/D,IACHA,EAAes/D,EAAMplE,cAAc,MAInCmlE,EAAaC,GAEbA,IAAUD,GAA+J36D,GAAU,GAC9K1E,CACT,qCCjBA,IAAIsC,EAAWxF,EAAQ,MACrBmhC,EAAY37B,EAAS27B,UACrBC,EAAc57B,EAAS47B,YAOzBjiC,EAAOC,QANP,SAA0Bu4C,EAAYnS,GACpC,OAAIA,IAAapE,GACS,MAAjBuW,EAAWvlC,GAAa+uB,EAE1BwW,EAAWvlC,EACpB,iCCHAjT,EAAOC,QAL0B,SAAoCqjE,GAC/DttC,CAGN,iCCJA,IAAIutC,EAAkCt0E,OAAO6pB,OAAO,CAClD0qD,mCAAmC,IASrCxjE,EAAOC,QAAU,CACfiqD,mBAJF,SAA4B76D,GAC1B,OAAOA,IAAUk0E,CACnB,EAGEE,iBATF,WAEE,OAAOF,CACT,sCCNA,IAAInkC,EAAoBv+B,EAAQ,MAE9B+/D,EADa//D,EAAQ,MAC4B+/D,sCAC/Cn4D,EAAY5H,EAAQ,MASxBb,EAAOC,QARP,SAAgCo5B,GAC9B,IAAIqqC,EAA2BtkC,EAAkBvb,SAASwV,EAAQunC,GAClE,OAAgC,MAA5B8C,EACK,MAEPA,aAAoCx3C,KAAoPzjB,GAAU,GAC7Ri7D,EACT,iCCXA,IAAIC,EAAeC,OAAOC,SAc1B7jE,EAAOC,QAbP,SAA2BkgB,EAAasvC,GAItC,IAFA,IAAIoU,EAAW1jD,EAAYwjD,KACvBtpE,EAAOwpE,EAASxpE,QACZA,EAAKsnB,MAAM,CACjB,IAAI5vB,EAAMsI,EAAKhL,MACf,GAAIogE,EAAiB7tC,IAAI7vB,GACvB,OAAO,EAETsI,EAAOwpE,EAASxpE,MAClB,CACA,OAAO,CACT,iCCFA2F,EAAOC,QAHP,SAAkC6D,GAChC,OAAOmV,QAAQnV,GAAeA,EAAY,4BAC5C,qCCVA,IACEm9B,EADapgC,EAAQ,MACYogC,sBAEjCkB,EADcthC,EAAQ,MACIshC,cACxB15B,EAAY5H,EAAQ,MAaxBb,EAAOC,QAZP,SAAwByH,EAAUiN,GAChC,IAAImvD,EACAC,EAAqB9iC,EAAsBv5B,GAC/C,GAAmB,MAAfiN,EACF,OAAOA,EAEgB,kBAAhBA,GAA8JlM,GAAU,GAEjL,IAAIwyD,EAAsE,QAAxD6I,EAAwBnvD,EAAYwtB,UAAsD,IAA1B2hC,OAAmC,EAASA,EAAsBC,EAAmBxiE,MAEvK,OADgB,MAAd05D,GAAgMxyD,GAAU,GACrMwyD,CACT,qCChBA,IAAIx8B,EAAiC59B,EAAQ,MAE3C0F,EADa1F,EAAQ,MACC0F,WAEtBD,EADczF,EAAQ,MACgByF,0BAEtCs6B,EADc//B,EAAQ,MACW+/B,qBACrB//B,EAAQ,MA8CtBb,EAAOC,QA7CP,SAA6B6D,EAAalJ,GACxC,IAAIuO,EAAe5C,EAAW3L,EAAOuO,cACrC,GAA0C,iBAAtCA,EAAamI,OAAO+4B,cACtB,MAAM,IAAIlpC,MAAM,wDAElB,IAAI0iC,EAAUjpC,EAAOipC,QACnBpS,EAAc72B,EAAO62B,YACrBG,EAAUh3B,EAAOg3B,QACjBnjB,EAAS7T,EAAO6T,OAChBze,EAAY4K,EAAO5K,UACnB8d,EAAclT,EAAOkT,YACnB7G,EAAYX,EAA0B6C,EAAcnZ,EAAW8d,GAGjE3d,GADS0zC,EAAUpF,EAA+BmF,QAAQC,EAAS16B,EAAc,KAA8BvO,EAAOzK,SAAWyK,GAClHzK,QA2BjB,MAAO,CACL6U,QA3BQlB,EAAYgkD,oBAAoB,CACxC7gD,UAAWA,EACX9W,QAASA,IACR2X,UAAU,CACXzN,KAAM,SAAcojD,GAClB,GAAc,MAAVhvC,EAAgB,CAClB,IACIyU,EAEE8gD,EAAaC,EAGbC,EANFtvD,EAAW3N,EAAUS,SAEzB,GAAIjL,MAAMC,QAAQ+gD,GAEhBv6B,EAA0C,QAAhC8gD,EAAcvmB,EAAU,UAAgC,IAAhBumB,GAAuF,QAApDC,EAAwBD,EAAYxyB,kBAAkD,IAA1ByyB,OAAtE,EAAkHA,EAAsB/kB,kCAGnNh8B,EAA4D,QAAlDghD,EAAwBzmB,EAAUjM,kBAAkD,IAA1B0yB,OAAmC,EAASA,EAAsBhlB,6BAElH,kBAAXh8B,IACTtO,EAAWgsB,EAAqBhsB,EAASrG,KAAM2U,EAAQtO,EAAS5kB,UAAW4kB,EAASI,QAEtF,IAAItR,EAAOI,EAAY2D,OAAOmN,GAAUlR,KAExC+K,EAAO/K,EACT,CACF,EACAxC,MAAO0wB,EACP3oB,SAAUwoB,IAGGvoB,YAEjB,iCCAAlJ,EAAOC,QAtCiB,CACtB6qC,aAAc,cACdM,UAAW,YACXoD,iBAAkB,kBAClBtD,6BAA8B,2BAC9BD,6BAA8B,2BAC9BE,iBAAkB,kBAClBE,MAAO,QACPlT,WAAY,aACZmT,aAAc,cACdyG,SAAU,WACVxG,gBAAiB,iBACjBC,4BAA6B,2BAC7B2G,qBAAsB,qBACtB1G,gBAAiB,iBACjBC,aAAc,cACd+C,cAAe,eACfsxB,QAAS,UACTE,WAAY,YACZkE,eAAgB,gBAChBx4B,cAAe,eACfZ,wBAAyB,wBACzBC,+BAAgC,8BAChCa,eAAgB,gBAChBD,oBAAqB,oBACrBE,eAAgB,gBAChBk0B,aAAc,cACdoE,UAAW,YACXpyB,QAAS,UACTqyB,cAAe,eACft4B,aAAc,cACd2C,cAAe,eACf41B,gBAAiB,iBACjBt4B,OAAQ,SACR2C,mBAAoB,oBACpBuD,gBAAiB,iBACjB4tB,SAAU,0CClDZ9/D,EAAOC,QAAU,CACfiiC,mBAAoB,mCCEtB,SAASqiC,EAAY/zE,EAAM+Q,EAAMijE,GAC/B,IAAK,IAAIC,EAAOtzC,UAAUz8B,OAAQgwE,EAAgB,IAAIjoE,MAAMgoE,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAC3GD,EAAcC,EAAO,GAAKxzC,UAAUwzC,GAEtC,IAAI1zE,EAAQ,EACRuH,EAAUgsE,EAAcljE,QAAQ,OAAO,WACzC,OAAOhC,OAAOolE,EAAczzE,KAC9B,IACI2f,EAAM,IAAIzP,MAAM3I,GAChB0I,EAAQjS,OAAOC,OAAO0hB,EAAK,CAC7BrP,KAAMA,EACNijE,cAAeA,EACfE,cAAeA,EACfl0E,KAAMA,EACNo0E,YAAa,CAAC,EAAG,KAInB,QAAoB/pE,IAAhBqG,EAAM08C,MAER,IACE,MAAM18C,CACR,CAAE,MAAO27B,GAAU,CAErB,OAAO37B,CACT,CACAlB,EAAOC,QAAU,CACfkL,OAAQ,SAAgB5J,EAAMijE,GAC5B,IAAK,IAAIK,EAAQ1zC,UAAUz8B,OAAQgwE,EAAgB,IAAIjoE,MAAMooE,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACjHJ,EAAcI,EAAQ,GAAK3zC,UAAU2zC,GAEvC,OAAOP,EAAY15B,WAAM,EAAQ,CAAC,QAAStpC,EAAMijE,GAAej1E,OAAOm1E,GACzE,EACAK,cAAe,SAAuBxjE,EAAMijE,GAC1C,IAAK,IAAIQ,EAAQ7zC,UAAUz8B,OAAQgwE,EAAgB,IAAIjoE,MAAMuoE,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACjHP,EAAcO,EAAQ,GAAK9zC,UAAU8zC,GAEvC,OAAOV,EAAY15B,WAAM,EAAQ,CAAC,OAAQtpC,EAAMijE,GAAej1E,OAAOm1E,GACxE,kCCtBF1kE,EAAOC,QAnBiB,CACtB2a,qBAAqB,EACrBsqD,gCAAgC,EAChCxe,kCAAkC,EAClC3O,qCAAqC,EACrCsX,wBAAwB,EACxB8V,2CAA2C,EAC3CC,oCAAoC,EACpCn7C,oCAAoC,EACpCo7C,+BAA+B,EAC/BxF,4BAA4B,EAC5Ble,8BAA+B,KAC/Bh2C,uCAAuC,EACvCqoC,mBAAoB,KACpBD,oBAAqB,EACrBL,iBAAiB,EACjB4xB,iCAAiC,EACjC/yD,4CAA4C,kCCjB9C,IAAIgzD,EAAwB,CAAC,EACzBC,EAAkB,CACpB7T,KAAM,WAAiB,GA+BrB3xB,EAAgB,CAclBylC,QAAS,SAAiBlkE,EAAM+B,GAC9B,IAAI0xC,EAAWuwB,EAAsBhkE,GACrC,GAAIyzC,GAAYA,EAAStgD,OAAS,EAAG,CAEnC,IADA,IAAIgxE,EAAe,GACVrgE,EAAK2vC,EAAStgD,OAAS,EAAG2Q,GAAM,EAAGA,IAAM,CAChD,IAAIsgE,EAAc3wB,EAAS3vC,GAAI9D,EAAM+B,GACrCoiE,EAAahrC,QAAQirC,EACvB,CACA,MAAO,CACLhU,KAAM,SAAczwD,GAClBwkE,EAAa10E,SAAQ,SAAU20E,GAC7B,OAAOA,EAAYzkE,EACrB,GACF,EAEJ,CACA,OAAOskE,CACT,EAIAI,qBAAsB,SAA8BrkE,EAAM6nC,GACnDm8B,EAAsBlxE,eAAekN,KACxCgkE,EAAsBhkE,GAAQ,IAEhCgkE,EAAsBhkE,GAAM9C,KAAK2qC,EACnC,EAIAy8B,qBAAsB,SAA8BtkE,EAAM6nC,GACpDm8B,EAAsBlxE,eAAekN,IAK7C,SAAyBukE,EAAOC,GAC9B,IAAI90E,EAAQ60E,EAAMvxE,QAAQwxE,IACX,IAAX90E,GACF60E,EAAMn1B,OAAO1/C,EAAO,EAExB,CATM+0E,CAAgBT,EAAsBhkE,GAAO6nC,EAEjD,GAQFppC,EAAOC,QAAU+/B,qCCzFjB,IAAIh+B,EAAyBnB,EAAAA,MAAAA,QACzBwqB,EAA8BrpB,EAAuBnB,EAAQ,OAC7DwB,EAAmBL,EAAuBnB,EAAQ,OAClD89B,EAAkB99B,EAAQ,MAC1B4H,EAAY5H,EAAQ,MAOpBo/B,EAAkC,WACpC,SAASA,IACP,IAAI78B,EAAQ1C,MACZ,EAAI2B,EAA0B,SAAG3B,KAAM,aAAa,IACpD,EAAI2B,EAA0B,SAAG3B,KAAM,UAAW,KAClD,EAAI2B,EAA0B,SAAG3B,KAAM,SAAU,IAAIwrB,MACrD,EAAI7pB,EAA0B,SAAG3B,KAAM,gBAAiB,IACxDA,KAAKulE,YAActnC,EAAgBxzB,QAAO,SAAUC,GAClDhI,EAAM8iE,OAAOz5C,IAAIrhB,GAEjB,IADA,IAAI+6D,EAAS/iE,EAAMgjE,QACV3xE,EAAI,EAAGA,EAAI0xE,EAAOzxE,SACrB0W,EAAK8kC,OADwBz7C,IAAK,CAKtC,IAAI6uE,EAAQ6C,EAAO1xE,GACnB,OAAQ6uE,EAAMxuD,MACZ,IAAK,WACH1J,EAAKnC,WACL,MACF,IAAK,QACHmC,EAAKlK,MAAMoiE,EAAMpiE,OACjB,MACF,IAAK,OACHkK,EAAK/Q,KAAKipE,EAAM5/D,MAChB,MACF,QACE4/D,EAAMxuD,KAC0HrM,GAAU,GAEhJ,CACA,OAAO,WACLrF,EAAM8iE,OAAe,OAAE96D,EACzB,CACF,GACF,CACA,IAAIxG,EAASq7B,EAAmB7rC,UA6DhC,OA5DAwQ,EAAOqE,SAAW,YACO,IAAnBvI,KAAKw7C,YAGTx7C,KAAKw7C,WAAY,EACjBx7C,KAAK0lE,QAAQ3nE,KAAK,CAChBqW,KAAM,aAERpU,KAAKwlE,OAAOl1E,SAAQ,SAAUoa,GAC5B,OAAOA,EAAKnC,UACd,IACF,EACArE,EAAO1D,MAAQ,SAAeuO,IACL,IAAnB/O,KAAKw7C,YAGTx7C,KAAKw7C,WAAY,EACjBx7C,KAAK0lE,QAAQ3nE,KAAK,CAChBqW,KAAM,QACN5T,MAAOuO,IAET/O,KAAKwlE,OAAOl1E,SAAQ,SAAUoa,GAC5B,OAAOA,EAAKlK,MAAMuO,EACpB,IACF,EACA7K,EAAOvK,KAAO,SAAcqJ,IACH,IAAnBhD,KAAKw7C,YAGTx7C,KAAK0lE,QAAQ3nE,KAAK,CAChBqW,KAAM,OACNpR,KAAMA,IAERhD,KAAKwlE,OAAOl1E,SAAQ,SAAUoa,GAC5B,OAAOA,EAAK/Q,KAAKqJ,EACnB,IACF,EACAkB,EAAOkD,UAAY,SAAmBoD,GACpC,IAAI/B,EAAezI,KAAKulE,YAAYn+D,UAAUoD,GAE9C,OADAxK,KAAKopD,cAAcrrD,KAAK0K,GACjBA,CACT,EACAvE,EAAOsE,YAAc,WACnB,IACE4jB,EADEC,GAAY,EAAI1B,EAAqC,SAAG3qB,KAAKopD,eAEjE,IACE,IAAK/8B,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAC/BmL,EAAMz9B,MACZ6Z,aACf,CACF,CAAE,MAAO0H,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACAP,KAAKopD,cAAgB,EACvB,EACAllD,EAAO0uC,iBAAmB,WACxB,OAAO5yC,KAAKwlE,OAAO9pE,IACrB,EACO6jC,CACT,CAlGsC,GAmGtCjgC,EAAOC,QAAUggC,iCC9GjB,IAAIomC,EAAc,IAAI9sD,IAClBghD,EAAY,EACZ+L,EASJ,WAIE,IADA,IAAIA,EAAS,IAAIp6C,IACRz3B,EAAI,EAAGA,EAAI,KAAMA,EACxB6xE,EAAO75C,IAAIh4B,EAAE2K,YAEf,OAAOknE,CACT,CAjBaC,GAKTC,EAAgB,KAGhBC,EAAgB,KAyCpBzmE,EAAOC,QAAU,CACf2zC,OAbF,SAAgB8yB,EAAKC,GACnB,GAAa,MAATA,GAAiBD,EAAIhyE,OAASiyE,EAChC,OAnBJ,SAAgBD,GACd,OAEAA,EAAI,KAAOF,GAAiBF,EAAO1kD,IAAI8kD,EAAI,KAE3CA,EAAI,KAAOD,EACFA,EAAgBC,EAElBA,CACT,CAUWE,CAAOF,GAEhB,IAAIG,EAAiBR,EAAYroE,IAAI0oE,GACrC,OAAsB,MAAlBG,IAGJA,EAAiBL,EAAgBjM,IACjC8L,EAAYhsD,IAAIqsD,EAAKG,IAHZA,CAKX,sCClDA,IACI5kE,GAAiBD,EADQnB,EAAAA,MAAAA,SACeA,EAAQ,OAChDwF,EAAWxF,EAAQ,MACrBqgC,EAAwB76B,EAAS66B,sBACjCC,EAAwB96B,EAAS86B,sBASnCnhC,EAAOC,QARP,SAAiCsB,EAAM0F,EAAWvF,EAAWkS,GAC3D,IAAIlQ,GAAO,EAAIzB,EAAwB,SAAG,CAAC,EAAG2R,GAK9C,OAHAlQ,EAAKw9B,EAAsB3/B,IAASG,EAEpCgC,EAAKy9B,EAAsB5/B,IAAS0F,EAC7BvD,CACT,iCCIA1D,EAAOC,QAVP,SAASuG,EAAWulD,GAQlB,OAPA98D,OAAO6pB,OAAOizC,GACd98D,OAAO63E,oBAAoB/a,GAAQ/6D,SAAQ,SAAUuQ,GACnD,IAAIwlE,EAAWhb,EAAOxqD,GAClBwlE,GAAgC,kBAAbA,IAA0B93E,OAAO+3E,SAASD,IAC/DvgE,EAAWugE,EAEf,IACOhb,CACT,iCCfA,IAAI94C,EAAK,IAITjT,EAAOC,QAHP,WACE,OAAOgT,GACT,qCCHA,IAAI5M,EAAWxF,EAAQ,MACrBkgC,EAAyB16B,EAAS06B,uBAClCzsB,EAAcjO,EAASiO,YACvBiE,EAA2BlS,EAASkS,yBAClC0uD,EAAgBpmE,EAAQ,MACxB+H,EAAoB/H,EAAQ,MAC5Bq/B,EAAar/B,EAAQ,MAEvB+yC,EADc/yC,EAAQ,MACH+yC,OAmBrB5zC,EAAOC,QAlBP,SAA+ByU,EAAcC,GAC3C,IAAIC,EAAWN,EAAYI,EAAcC,GACrCuyD,EAAsC,MAAZtyD,EAAmB,OAA2B,2BAAlBA,EAASE,KAAoCF,EAASI,MAAM2N,WAAa,IAAM/N,EAASG,UAAUjjB,KAAI,SAAUq1E,GACxK,OAAOA,EAAInyD,MAAM2N,UACnB,IAAG3wB,KAAK,KAAO,IACXwb,EAAoB+K,EAAyB7D,EAAcC,GAC3DiiB,EAAUmK,EAAuBrsB,EAAcC,GACnD,GAAI/L,EAAkBu8D,0CAA2C,CAC/D,IAAI1Z,EAAyB,qBAAZ70B,EAA0B,UAAuB,MAAXA,EAAkB,OAASn6B,MAAMC,QAAQk6B,GAAW,IAAMA,EAAQ5kC,KAAK,KAAO,IAAM4kC,EAE3I,OADA60B,EAAM7iD,EAAkBmrC,qBAAuB,EAAI0X,EAAM7X,EAAO6X,EAAK7iD,EAAkBorC,oBAChFkzB,EAA0B,IAAMxyD,EAAanT,KAAO,KAA4B,MAArBiM,GAA6By5D,EAAcz5D,GAAqB,KAAOuF,KAAKC,UAAUktB,EAAW1yB,KAAuB,IAAMi+C,CAClM,CACE,IAAI5I,EACAukB,EAAuD,QAA/CvkB,EAAkB9vC,KAAKC,UAAU4jB,UAA0C,IAApBisB,EAA6BA,EAAkB,UAElH,OADAukB,EAAOx+D,EAAkBmrC,qBAAuB,EAAIqzB,EAAOxzB,EAAOwzB,EAAMx+D,EAAkBorC,oBACnFkzB,EAA0B,IAAMxyD,EAAanT,KAAO,IAAMwR,KAAKC,UAAUktB,EAAW1yB,IAAsB,IAAM45D,CAE3H,qCC1BA,IAAI/gE,EAAWxF,EAAQ,MACrBmxC,EAAU3rC,EAAS2rC,QACD3rC,EAASi+D,gBAe7BtkE,EAAOC,QATP,SAAsBsO,GACpB,OAAQA,EAAKuG,OACNk9B,EACIzjC,EAAKtH,UAGLsH,CAEb,qCChBA,IAAIymB,EAAqBn0B,EAAQ,MAC7B4H,EAAY5H,EAAQ,MAqBxBb,EAAOC,QApBP,SAA+ByU,EAAcsG,GAC3C,IAAIG,EAAuBC,EACvBma,EAAsBP,EAAmBtgB,EAAcsG,GACzDsU,EAAoBiG,EAAoBC,mBACxC6xC,EAAkB9xC,EAAoB8xC,gBACpC93C,EAAqB83C,EAAgB39D,WACjB,MAAtB6lB,GAAsU9mB,GAAU,GAClV,IAAI4mB,EAA+BE,EAAmB77B,KAClD+V,GAAgM,QAAzK0R,EAA6E,QAApDC,EAAyB1G,EAAarL,gBAAiD,IAA3B+R,OAAoC,EAASA,EAAuB1R,kBAAkD,IAA1ByR,EAAmCA,EAAwB,IAAI,GACnP,MAAtB1R,GAAsUhB,GAAU,GAClV,IAAIgnB,EAAkB43C,EAAgB53C,gBAEtC,OADqB,MAAnBA,GAAsD,kBAApBA,GAAsKhnB,GAAU,GAC7M,CACL4mB,6BAA8BA,EAC9BI,gBAAiBA,EACjBH,kBAAmBA,EACnBC,mBAAoBA,EACpB8uC,QAAsC,IAA9B50D,EAAmB40D,OAE/B,qCCrBA,IAAIr8D,EAAyBnB,EAAAA,MAAAA,QACzBwB,EAAmBL,EAAuBnB,EAAQ,OAClDymE,EAAiBtlE,EAAuBnB,EAAQ,OAChD4H,EAAY5H,EAAQ,MACVA,EAAQ,MA+BtBb,EAAOC,QA9BP,SAAgCpK,EAAWmU,EAAOQ,EAAQgmB,EAAeF,EAAgBf,GACvF,IAAInnB,EACAm/D,EAAmBh4C,EAAmBi4C,SACxCC,EAAkBl4C,EAAmBm4C,QACvC,GAAkB,aAAd7xE,EAA0B,CAC5B,IAAIoM,GACkB,MAApBslE,GAAsD,MAA1BA,EAAiBv9D,OAA4C,MAA3Bu9D,EAAiB/8D,SAAyM/B,GAAU,GAGpS,IAAIk/D,GAAuB,EAAIL,EAAwB,UAAG,EAAIA,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAG92C,GAAgBF,GAAiB,CAAC,GAAIruB,EAAiB,CAAC,GAAG,EAAII,EAA0B,SAAGJ,EAAgBslE,EAAiB/8D,OAAQA,IAAS,EAAInI,EAA0B,SAAGJ,EAAgBslE,EAAiBv9D,MAAOA,GAAQ/H,IAO3V,OANIwlE,GAAmBA,EAAgBj9D,SACrCm9D,EAAqBF,EAAgBj9D,QAAU,MAE7Ci9D,GAAmBA,EAAgBz9D,QACrC29D,EAAqBF,EAAgBz9D,OAAS,MAEzC29D,CACT,EACqB,MAAnBF,GAAoD,MAAzBA,EAAgBz9D,OAA2C,MAA1By9D,EAAgBj9D,SAAwM/B,GAAU,GAGhS,IAAIgoB,GAAsB,EAAI62C,EAAwB,UAAG,EAAIA,EAAwB,UAAG,EAAIA,EAAwB,SAAG,CAAC,EAAG92C,GAAgBF,GAAiB,CAAC,GAAIloB,EAAiB,CAAC,GAAG,EAAI/F,EAA0B,SAAG+F,EAAgBq/D,EAAgBj9D,OAAQA,IAAS,EAAInI,EAA0B,SAAG+F,EAAgBq/D,EAAgBz9D,MAAOA,GAAQ5B,IAOxV,OANIm/D,GAAoBA,EAAiB/8D,SACvCimB,EAAoB82C,EAAiB/8D,QAAU,MAE7C+8D,GAAoBA,EAAiBv9D,QACvCymB,EAAoB82C,EAAiBv9D,OAAS,MAEzCymB,CACT,qCClCA,IACErY,EADavX,EAAQ,MACiBuX,2BAyCxCpY,EAAOC,QAxCP,SAAyC6D,EAAa4Q,EAAc6I,GAClE,IAAIqqD,EAAuBC,EACvB9rD,EAAoB,GACpBH,EAAUxD,EAA2BtU,EAAayZ,GACtD,GAAe,MAAX3B,EACFG,EAAoB,CAACwB,OAChB,CACL,IAAIuqD,EAAuBC,EACvBrwE,EAASoM,EAAYmjD,sBAAsB6L,mCAAmCv1C,GAClFxB,EAA2H,QAAtG+rD,EAAmC,OAAXpwE,QAA8B,IAAXA,OAAoB,EAASA,EAAOqkB,yBAAyD,IAA1B+rD,EAAmCA,EAAwB,GAC9LlsD,EAAiG,QAAtFmsD,EAA6B,OAAXrwE,QAA8B,IAAXA,OAAoB,EAASA,EAAOkkB,eAAyC,IAApBmsD,EAA6BA,EAAkB,IAC1J,CACA,IAAKnsD,EACH,OAAO,KAET,IAAIosD,EAEc,QAFUJ,EAAqE,QAA5CC,EAAqB9rD,SAAsD,IAAvB8rD,OAAgC,EAASA,EAAmB/1E,KAAI,SAAUm2E,GACjL,OAAOA,EAAG15D,KAAK+C,OAAO/P,IACxB,IAAGvP,KAAK,YAA4C,IAA1B41E,EAAmCA,EAAwB,KACzD,MAAxBI,GAAgE,IAAhCA,EAAqBtzE,SACvDszE,EAAuB,6BAEzB,IAAIx+D,EAAekL,EAAanT,KAC5B2mE,EAAqBF,IAAyBx+D,EAAe,SAASja,OAAOy4E,EAAsB,KAAO,SAASz4E,OAAOy4E,EAAsB,KAAKz4E,OAAOia,EAAc,KAa9K,OAXAoS,EAAQja,YAAcumE,EAKtBpkE,EAAYgU,MAAM,CAChBvW,KAAM,yBACNmG,SAAUgN,EACV6I,cAAeA,EACfxB,kBAAmBA,IAEd,CACLH,QAASA,EACTG,kBAAmBA,EAEvB,qCCzCA,IAAItT,EAAY5H,EAAQ,MAoBxBb,EAAOC,QAnBP,SAA4ByU,EAAcsG,GACxC,IAAIG,EAAuBC,GACkH,KAAtF,QAAnDD,EAAwBzG,EAAarL,gBAAgD,IAA1B8R,OAAmC,EAASA,EAAsBM,SAAmVhT,GAAU,GAC9d,IAAI4+D,EAAuE,QAApDjsD,EAAyB1G,EAAarL,gBAAiD,IAA3B+R,OAAoC,EAASA,EAAuB9H,QAClI,MAAnB+zD,GAA8R5+D,GAAU,GAG1S,IAAI+sB,EAAqB6xC,EAAgBpgE,UAAmB,QAAIogE,EAAgBpgE,UAAmB,QAAIogE,EAAgBpgE,UACnHwuB,EAA4B4xC,EAAgBc,qBAChB,kBAAvB3yC,GAAgS/sB,GAAU,GACnT,IAAIgnB,EAAkB43C,EAAgB53C,gBAEtC,OADqB,MAAnBA,GAAsD,kBAApBA,GAAsKhnB,GAAU,GAC7M,CACLgtB,0BAA2BA,EAC3BhG,gBAAiBA,EACjB+F,mBAAoBA,EACpB6xC,gBAAiBA,EAErB,qCCnBA,IACEnlC,EADarhC,EAAQ,KACSqhC,mBAC5Bz5B,EAAY5H,EAAQ,MAexBb,EAAOC,QAPP,SAA2B6gE,EAAY/uE,EAAKk4C,GAC1C,OAAIl4C,GAAOA,IAAQmwC,EACV,KAAK3yC,OAAOwC,EAAK,KAAKxC,OAAOuxE,IAEvB,MAAb72B,GAAsKxhC,GAAU,GAC3K,KAAKlZ,OAAO06C,EAAW,KAAK16C,OAAOuxE,GAC5C,qCChBA,IAAI5gC,EAAar/B,EAAQ,MACrB4H,EAAY5H,EAAQ,MAUxBb,EAAOC,QALP,SAA8BsnB,EAAYv3B,GACxC,IAAIo4E,EAAkC,MAAtB7gD,EAAWrU,QAAkBqU,EAAWrU,QAAUqU,EAAWtU,GAE7E,OADe,MAAbm1D,GAAuM3/D,GAAU,GAC5M2/D,EAAYr1D,KAAKC,UAAUktB,EAAWlwC,GAC/C,qCCVA,IACIq7B,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAC7D4H,EAAY5H,EAAQ,MA0BxBb,EAAOC,QAzBP,SAAwByD,EAAMhQ,GAC5B,IAEEo5B,EAFEp1B,EAASgM,EACTqpB,GAAY,EAAI1B,EAAqC,SAAG33B,GAE5D,IACE,IAAKq5B,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAI5vB,EAAM+6B,EAAMz9B,MAChB,GAAc,MAAVqI,EACF,OAAO,KAEU,kBAAR3F,GACR0K,MAAMC,QAAQhF,IAA2L+Q,GAAU,GACpN/Q,EAASA,EAAO3F,MAEI,kBAAX2F,GAAwB+E,MAAMC,QAAQhF,KAA6L+Q,GAAU,GACtP/Q,EAASA,EAAO3F,GAEpB,CACF,CAAE,MAAO6e,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACA,OAAOvJ,CACT,qCC3BA,IACI2zB,GAA8BrpB,EADLnB,EAAAA,MAAAA,SAC4BA,EAAQ,OAoDjEb,EAAOC,QAnDP,SAAuC6D,EAAaya,EAAuBC,GACzE,IACEsO,EADEC,GAAY,EAAI1B,EAAqC,SAAG7M,GAE5D,IACE,IAAKuO,EAAU/4B,MAAO84B,EAAQC,EAAUC,KAAKrL,MAAO,CAClD,IAAIu2C,EAAgBprC,EAAMz9B,MAC1ByU,EAAYyiD,oBAAoB,CAC9BzxC,KAAM,uBACNE,MAAOkjD,EAAchuB,MAAMl1B,MAC3BshD,UAAW4B,EAAchuB,MAAMx2C,KAC/BwN,MAAOg3D,EAAch3D,OAEzB,CACF,CAAE,MAAO0P,GACPmc,EAAU94B,EAAE2c,EACd,CAAE,QACAmc,EAAU9rB,GACZ,CACA,GAA6B,MAAzBsd,EACF,OAAQA,EAAsB2W,QAC5B,IAAK,QAED,IAAImzC,EAAwB9pD,EAAsB2rB,MAChDx2C,EAAO20E,EAAsB30E,KAC7BshB,EAAQqzD,EAAsBrzD,MAOhC,MALAlR,EAAYyiD,oBAAoB,CAC9BzxC,KAAM,sBACNE,MAAOA,EACPshD,UAAW5iE,IAEP,IAAIyN,MAAM,2CAA2C5R,OAAOmE,EAAM,UAAUnE,OAAOylB,EAAO,OAEpG,IAAK,MACHuJ,EAAsBk4C,OAAOzlE,SAAQ,SAAU2M,GAC7C,IAAIjK,EAAOiK,EAAKjK,KACdshB,EAAQrX,EAAKqX,MACflR,EAAYyiD,oBAAoB,CAC9BzxC,KAAM,oBACNE,MAAOA,EACPshD,UAAW5iE,GAEf,IACA,MACF,QAEI6qB,EAAsB2W,OAIhC,iCCnDA,IAAI7gC,EAAiBpF,OAAOmF,UAAUC,eAStC2L,EAAOC,QARP,SAAuBsvC,GACrB,IAAK,IAAIo1B,KAAQp1B,EACf,GAAIl7C,EAAeC,KAAKi7C,EAAKo1B,GAC3B,OAAO,EAGX,OAAO,CACT,iCCNA3kE,EAAOC,QAHP,SAAmB9L,GACjB,QAASA,GAAuB,oBAAXA,EAAEssB,IACzB,iCCQAzgB,EAAOC,QAHP,SAA0BqoE,EAAQC,GAChC,OAAOD,IAAWC,IAAsB,OAAXD,GAAqC,kBAAXA,EACzD,iCCTA,IAAIE,EAAuC,qBAAZC,QAC3BC,EAAuC,qBAAZ9vD,QAsD/B5Y,EAAOC,QAjDP,SAASyY,EAAiBrK,EAAUG,GAClC,GAAIH,IAAaG,GAAgC,kBAAbH,GAAyBA,aAAoB6d,KAAO7d,aAAoBkL,KAAOivD,GAAqBn6D,aAAoBo6D,SAAWC,GAAqBr6D,aAAoBuK,UAAYvK,GAAgC,kBAAbG,GAAyBA,aAAoB0d,KAAO1d,aAAoB+K,KAAOivD,GAAqBh6D,aAAoBi6D,SAAWC,GAAqBl6D,aAAoBoK,UAAYpK,EACra,OAAOA,EAET,IAAIm6D,GAAa,EAGbC,EAAYnsE,MAAMC,QAAQ2R,GAAYA,EAAW,KACjDw6D,EAAYpsE,MAAMC,QAAQ8R,GAAYA,EAAW,KACrD,GAAIo6D,GAAaC,EACfF,EAAaE,EAAUxqE,QAAO,SAAUyqE,EAAU9f,EAAU3jD,GAC1D,IACI0jE,EAAYrwD,EADAkwD,EAAUvjE,GACkB2jD,GAU5C,OATI+f,IAAcF,EAAUxjE,KAMxBwjE,EAAUxjE,GAAM0jE,GAGbD,GAAYC,IAAcH,EAAUvjE,EAC7C,IAAG,IAASujE,EAAUl0E,SAAWm0E,EAAUn0E,YACtC,IAAKk0E,IAAcC,EAAW,CAEnC,IAAIG,EAAa36D,EACb46D,EAAaz6D,EACbrT,EAAWlM,OAAO4C,KAAKm3E,GACvBE,EAAWj6E,OAAO4C,KAAKo3E,GAC3BN,EAAaO,EAAS7qE,QAAO,SAAUyqE,EAAU/2E,GAC/C,IACIg3E,EAAYrwD,EADAswD,EAAWj3E,GACiBk3E,EAAWl3E,IAYvD,OAXIg3E,IAAcE,EAAWl3E,KAQzBk3E,EAAWl3E,GAAOg3E,GAGfD,GAAYC,IAAcC,EAAWj3E,EAC9C,IAAG,IAASoJ,EAASzG,SAAWw0E,EAASx0E,MAC3C,CACA,OAAOi0E,EAAat6D,EAAWG,CACjC,qCC7CAxO,EAAOC,QATP,SAAyC6D,GAGvC,IAAIwvD,EAA4B,qBAAX5zD,EAAAA,EAAyBA,EAAAA,EAA2B,qBAAX6zD,OAAyBA,YAAS14D,EAC5FsuE,EAAe7V,GAAWA,EAAQ8V,wBAClCD,GACFA,EAAaE,oBAAoBvlE,EAErC,iCCRA,IAAIwlE,EAAkBrrD,QAAQta,UAQ9B,SAAS4lE,EAAUroE,GACjBmlB,YAAW,WACT,MAAMnlB,CACR,GAAG,EACL,CACAlB,EAAOC,QARP,SAA0B2e,GACxB0qD,EAAgB7oD,KAAK7B,GAAiB,MAAE2qD,EAC1C,iCCYAvpE,EAAOC,QAdP,SAASigC,EAAW7wC,GAClB,IAAKA,GAA0B,kBAAVA,EACnB,OAAOA,EAET,GAAIoN,MAAMC,QAAQrN,GAChB,OAAOA,EAAMyC,IAAIouC,GAInB,IAFA,IAAIruC,EAAO5C,OAAO4C,KAAKxC,GAAO2nC,OAC1BwyC,EAAS,CAAC,EACL/0E,EAAI,EAAGA,EAAI5C,EAAK6C,OAAQD,IAC/B+0E,EAAO33E,EAAK4C,IAAMyrC,EAAW7wC,EAAMwC,EAAK4C,KAE1C,OAAO+0E,CACT,iCClBA,IAAIC,EAASC,EACTC,EAA8C,qBAAXpW,QAA8N,oBAArK,QAAtBkW,EAAUlW,cAAgC,IAAZkW,GAA8E,QAA/CC,EAAsBD,EAAQG,mBAAiD,IAAxBF,OAAjE,EAA2GA,EAAoBj6E,KAC5P,SAASo6E,IACP,OAAIF,EACKpW,OAAOqW,YAAYn6E,MAErBD,KAAKC,KACd,CAMAuQ,EAAOC,QALP,SAAsB8hB,GACpB,IAAI+nD,EAAYD,IACZnyE,EAASqqB,IACb,MAAO,CAAC8nD,IAAqBC,EAAWpyE,EAC1C,qCCZemJ,EAAQ,MACTA,EAAQ,MADtB,IAGIkpE,EADuC,oBAAZnxD,QACM,IAAIA,QAAY,IAAIW,IACzD,SAAS4mB,EAAsB6pC,EAAuB/6B,GACpD,GAAyB,MAArBA,EAA2B,CAC7B,IAAID,EAAqB,CAAC,EAmB1B,OAlBA//C,OAAOC,OAAO8/C,EAAoBg7B,GAClC/6E,OAAO4C,KAAKo9C,GAAmBj+C,SAAQ,SAAUs0D,GAC/C,IAAI2kB,EAAmBh7B,EAAkBqW,GAAStnD,IAC9CksE,EAAiBD,IAIrB,GAAKF,EAAWnoD,IAAIqoD,GAGb,CACL,IAAIE,EAAeJ,EAAW/rE,IAAIisE,GAC9Bj0C,EAGJgZ,EAAmBsW,GAAW6kB,CAChC,MAREJ,EAAW1vD,IAAI4vD,EAAkBC,GACjCl7B,EAAmBsW,GAAW4kB,CAQlC,IACOl7B,CACT,CACE,OAAOg7B,CAEX,CACA7pC,EAAsBiqC,gCAElBvvE,EACJmF,EAAOC,QAAUkgC,oBCzCjBngC,EAAOC,QALP,SAA2BoqE,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAI31E,UAAQ41E,EAAMD,EAAI31E,QAC/C,IAAK,IAAID,EAAI,EAAG81E,EAAO,IAAI9tE,MAAM6tE,GAAM71E,EAAI61E,EAAK71E,IAAK81E,EAAK91E,GAAK41E,EAAI51E,GACnE,OAAO81E,CACT,EACoCvqE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCLzG,IAAIwqE,EAAmB,EAAQ,MAI/BzqE,EAAOC,QAHP,SAA4BoqE,GAC1B,GAAI5tE,MAAMC,QAAQ2tE,GAAM,OAAOI,EAAiBJ,EAClD,EACqCrqE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,0BCE1GD,EAAOC,QANP,SAAgCyqE,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,EACyC1qE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCN9G,IAAI2qE,EAA6B,EAAQ,MAoDzC5qE,EAAOC,QAnDP,SAAoC4qE,EAAGC,GACrC,IAAIC,EAAuB,qBAAXnH,QAA0BiH,EAAEjH,OAAOC,WAAagH,EAAE,cAClE,IAAKE,EAAI,CACP,GAAItuE,MAAMC,QAAQmuE,KAAOE,EAAKH,EAA2BC,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEn2E,OAAqB,CAC/Gq2E,IAAIF,EAAIE,GACZ,IAAIt2E,EAAI,EACJu2E,EAAI,WAAc,EACtB,MAAO,CACLh3E,EAAGg3E,EACHh+C,EAAG,WACD,OAAIv4B,GAAKo2E,EAAEn2E,OAAe,CACxBitB,MAAM,GAED,CACLA,MAAM,EACNtyB,MAAOw7E,EAAEp2E,KAEb,EACAR,EAAG,SAAWg3E,GACZ,MAAMA,CACR,EACAhqE,EAAG+pE,EAEP,CACA,MAAM,IAAIE,UAAU,wIACtB,CACA,IAEEt6D,EAFEu6D,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLp3E,EAAG,WACD+2E,EAAKA,EAAGz2E,KAAKu2E,EACf,EACA79C,EAAG,WACD,IAAIq+C,EAAON,EAAG1wE,OAEd,OADA8wE,EAAmBE,EAAK1pD,KACjB0pD,CACT,EACAp3E,EAAG,SAAWq3E,GACZF,GAAS,EACTx6D,EAAM06D,CACR,EACArqE,EAAG,WACD,IACOkqE,GAAoC,MAAhBJ,EAAW,QAAWA,EAAW,QAC5D,CAAE,QACA,GAAIK,EAAQ,MAAMx6D,CACpB,CACF,EAEJ,EAC6C5Q,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCpDlH,IAAIsrE,EAAgB,EAAQ,MAe5BvrE,EAAOC,QAdP,SAAyBsvC,EAAKx9C,EAAK1C,GAYjC,OAXA0C,EAAMw5E,EAAcx5E,MACTw9C,EACTtgD,OAAO8O,eAAewxC,EAAKx9C,EAAK,CAC9B1C,MAAOA,EACPm8E,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZn8B,EAAIx9C,GAAO1C,EAENkgD,CACT,EACkCvvC,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,yBCfvG,SAAS0rE,IAYP,OAXA3rE,EAAOC,QAAU0rE,EAAW18E,OAAOC,OAASD,OAAOC,OAAO08E,OAAS,SAAU51B,GAC3E,IAAK,IAAIvhD,EAAI,EAAGA,EAAI08B,UAAUz8B,OAAQD,IAAK,CACzC,IAAIgL,EAAS0xB,UAAU18B,GACvB,IAAK,IAAI1C,KAAO0N,EACVxQ,OAAOmF,UAAUC,eAAeC,KAAKmL,EAAQ1N,KAC/CikD,EAAOjkD,GAAO0N,EAAO1N,GAG3B,CACA,OAAOikD,CACT,EAAGh2C,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,QACjE0rE,EAAS9gC,MAAMnqC,KAAMywB,UAC9B,CACAnxB,EAAOC,QAAU0rE,EAAU3rE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCdhG,IAAI4rE,EAAiB,EAAQ,MAM7B7rE,EAAOC,QALP,SAAwB6rE,EAAUC,GAChCD,EAAS13E,UAAYnF,OAAOkc,OAAO4gE,EAAW33E,WAC9C03E,EAAS13E,UAAUyL,YAAcisE,EACjCD,EAAeC,EAAUC,EAC3B,EACiC/rE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,0BCDtGD,EAAOC,QALP,SAAgCsvC,GAC9B,OAAOA,GAAOA,EAAIi7B,WAAaj7B,EAAM,CACnC,QAAWA,EAEf,EACyCvvC,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,0BCF9GD,EAAOC,QAHP,SAA0B+rE,GACxB,GAAsB,qBAAXpI,QAAmD,MAAzBoI,EAAKpI,OAAOC,WAA2C,MAAtBmI,EAAK,cAAuB,OAAOvvE,MAAMs6B,KAAKi1C,EACtH,EACmChsE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,0BCAxGD,EAAOC,QAHP,WACE,MAAM,IAAIirE,UAAU,uIACtB,EACqClrE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCH1G,IAAIlC,EAAiB,EAAQ,MAC7B,SAASkuE,EAAQlgB,EAAQmgB,GACvB,IAAIr6E,EAAO5C,OAAO4C,KAAKk6D,GACvB,GAAI98D,OAAOuF,sBAAuB,CAChC,IAAI23E,EAAUl9E,OAAOuF,sBAAsBu3D,GAC3CmgB,IAAmBC,EAAUA,EAAQztE,QAAO,SAAU0tE,GACpD,OAAOn9E,OAAOo9E,yBAAyBtgB,EAAQqgB,GAAKZ,UACtD,KAAK35E,EAAK4M,KAAKosC,MAAMh5C,EAAMs6E,EAC7B,CACA,OAAOt6E,CACT,CAYAmO,EAAOC,QAXP,SAAwB+1C,GACtB,IAAK,IAAIvhD,EAAI,EAAGA,EAAI08B,UAAUz8B,OAAQD,IAAK,CACzC,IAAIgL,EAAS,MAAQ0xB,UAAU18B,GAAK08B,UAAU18B,GAAK,CAAC,EACpDA,EAAI,EAAIw3E,EAAQh9E,OAAOwQ,IAAS,GAAIzO,SAAQ,SAAUe,GACpDgM,EAAei4C,EAAQjkD,EAAK0N,EAAO1N,GACrC,IAAK9C,OAAOq9E,0BAA4Br9E,OAAOs9E,iBAAiBv2B,EAAQ/mD,OAAOq9E,0BAA0B7sE,IAAWwsE,EAAQh9E,OAAOwQ,IAASzO,SAAQ,SAAUe,GAC5J9C,OAAO8O,eAAei4C,EAAQjkD,EAAK9C,OAAOo9E,yBAAyB5sE,EAAQ1N,GAC7E,GACF,CACA,OAAOikD,CACT,EACiCh2C,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,0BCVtGD,EAAOC,QAZP,SAAuCR,EAAQ+sE,GAC7C,GAAc,MAAV/sE,EAAgB,MAAO,CAAC,EAC5B,IAEI1N,EAAK0C,EAFLuhD,EAAS,CAAC,EACVy2B,EAAax9E,OAAO4C,KAAK4N,GAE7B,IAAKhL,EAAI,EAAGA,EAAIg4E,EAAW/3E,OAAQD,IACjC1C,EAAM06E,EAAWh4E,GACb+3E,EAASj4E,QAAQxC,IAAQ,IAC7BikD,EAAOjkD,GAAO0N,EAAO1N,IAEvB,OAAOikD,CACT,EACgDh2C,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCZrH,IAAIysE,EAAU,gBACd,SAAS1gB,IACP,aACAhsD,EAAOC,QAAU+rD,EAAsB,WACrC,OAAO/rD,CACT,EAAGD,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,QACxE,IAAIA,EAAU,CAAC,EACb0sE,EAAK19E,OAAOmF,UACZw4E,EAASD,EAAGt4E,eACZ0J,EAAiB9O,OAAO8O,gBAAkB,SAAUwxC,EAAKx9C,EAAK86E,GAC5Dt9B,EAAIx9C,GAAO86E,EAAKx9E,KAClB,EACAy9E,EAAU,mBAAqBlJ,OAASA,OAAS,CAAC,EAClDmJ,EAAiBD,EAAQjJ,UAAY,aACrCmJ,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQK,aAAe,gBAC7C,SAASC,EAAO79B,EAAKx9C,EAAK1C,GACxB,OAAOJ,OAAO8O,eAAewxC,EAAKx9C,EAAK,CACrC1C,MAAOA,EACPm8E,YAAY,EACZC,cAAc,EACdC,UAAU,IACRn8B,EAAIx9C,EACV,CACA,IACEq7E,EAAO,CAAC,EAAG,GACb,CAAE,MAAOx8D,GACPw8D,EAAS,SAAgB79B,EAAKx9C,EAAK1C,GACjC,OAAOkgD,EAAIx9C,GAAO1C,CACpB,CACF,CACA,SAASiiE,EAAK+b,EAASC,EAAS5C,EAAM6C,GACpC,IAAIC,EAAiBF,GAAWA,EAAQl5E,qBAAqBq5E,EAAYH,EAAUG,EACjFC,EAAYz+E,OAAOkc,OAAOqiE,EAAep5E,WACzCqJ,EAAU,IAAIkwE,EAAQJ,GAAe,IACvC,OAAOxvE,EAAe2vE,EAAW,UAAW,CAC1Cr+E,MAAOu+E,EAAiBP,EAAS3C,EAAMjtE,KACrCiwE,CACN,CACA,SAASG,EAASh/B,EAAIU,EAAKpvC,GACzB,IACE,MAAO,CACL3P,KAAM,SACN2P,IAAK0uC,EAAGv6C,KAAKi7C,EAAKpvC,GAEtB,CAAE,MAAOyQ,GACP,MAAO,CACLpgB,KAAM,QACN2P,IAAKyQ,EAET,CACF,CACA3Q,EAAQqxD,KAAOA,EACf,IAAIwc,EAAmB,CAAC,EACxB,SAASL,IAAa,CACtB,SAASM,IAAqB,CAC9B,SAASC,IAA8B,CACvC,IAAIC,EAAoB,CAAC,EACzBb,EAAOa,EAAmBlB,GAAgB,WACxC,OAAOrsE,IACT,IACA,IAAIwtE,EAAWj/E,OAAOk/E,eACpBC,EAA0BF,GAAYA,EAASA,EAASlmD,EAAO,MACjEomD,GAA2BA,IAA4BzB,GAAMC,EAAOt4E,KAAK85E,EAAyBrB,KAAoBkB,EAAoBG,GAC1I,IAAIC,EAAKL,EAA2B55E,UAAYq5E,EAAUr5E,UAAYnF,OAAOkc,OAAO8iE,GACpF,SAASK,EAAsBl6E,GAC7B,CAAC,OAAQ,QAAS,UAAUpD,SAAQ,SAAUuc,GAC5C6/D,EAAOh5E,EAAWmZ,GAAQ,SAAUpN,GAClC,OAAOO,KAAK6tE,QAAQhhE,EAAQpN,EAC9B,GACF,GACF,CACA,SAASquE,EAAcd,EAAWe,GAChC,SAASC,EAAOnhE,EAAQpN,EAAKwD,EAASotC,GACpC,IAAI1X,EAASw0C,EAASH,EAAUngE,GAASmgE,EAAWvtE,GACpD,GAAI,UAAYk5B,EAAO7oC,KAAM,CAC3B,IAAIkH,EAAS2hC,EAAOl5B,IAClB9Q,EAAQqI,EAAOrI,MACjB,OAAOA,GAAS,UAAYq9E,EAAQr9E,IAAUu9E,EAAOt4E,KAAKjF,EAAO,WAAao/E,EAAY9qE,QAAQtU,EAAMs/E,SAASluD,MAAK,SAAUpxB,GAC9Hq/E,EAAO,OAAQr/E,EAAOsU,EAASotC,EACjC,IAAG,SAAUngC,GACX89D,EAAO,QAAS99D,EAAKjN,EAASotC,EAChC,IAAK09B,EAAY9qE,QAAQtU,GAAOoxB,MAAK,SAAUmuD,GAC7Cl3E,EAAOrI,MAAQu/E,EAAWjrE,EAAQjM,EACpC,IAAG,SAAUwJ,GACX,OAAOwtE,EAAO,QAASxtE,EAAOyC,EAASotC,EACzC,GACF,CACAA,EAAO1X,EAAOl5B,IAChB,CACA,IAAI0uE,EACJ9wE,EAAe2C,KAAM,UAAW,CAC9BrR,MAAO,SAAeke,EAAQpN,GAC5B,SAAS2uE,IACP,OAAO,IAAIL,GAAY,SAAU9qE,EAASotC,GACxC29B,EAAOnhE,EAAQpN,EAAKwD,EAASotC,EAC/B,GACF,CACA,OAAO89B,EAAkBA,EAAkBA,EAAgBpuD,KAAKquD,EAA4BA,GAA8BA,GAC5H,GAEJ,CACA,SAASlB,EAAiBP,EAAS3C,EAAMjtE,GACvC,IAAI6F,EAAQ,iBACZ,OAAO,SAAUiK,EAAQpN,GACvB,GAAI,cAAgBmD,EAAO,MAAM,IAAInC,MAAM,gCAC3C,GAAI,cAAgBmC,EAAO,CACzB,GAAI,UAAYiK,EAAQ,MAAMpN,EAC9B,OAAO4uE,GACT,CACA,IAAKtxE,EAAQ8P,OAASA,EAAQ9P,EAAQ0C,IAAMA,IAAO,CACjD,IAAI6uE,EAAWvxE,EAAQuxE,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUvxE,GACnD,GAAIwxE,EAAgB,CAClB,GAAIA,IAAmBnB,EAAkB,SACzC,OAAOmB,CACT,CACF,CACA,GAAI,SAAWxxE,EAAQ8P,OAAQ9P,EAAQ0xE,KAAO1xE,EAAQ2xE,MAAQ3xE,EAAQ0C,SAAS,GAAI,UAAY1C,EAAQ8P,OAAQ,CAC7G,GAAI,mBAAqBjK,EAAO,MAAMA,EAAQ,YAAa7F,EAAQ0C,IACnE1C,EAAQ4xE,kBAAkB5xE,EAAQ0C,IACpC,KAAO,WAAa1C,EAAQ8P,QAAU9P,EAAQ8zD,OAAO,SAAU9zD,EAAQ0C,KACvEmD,EAAQ,YACR,IAAI+1B,EAASw0C,EAASR,EAAS3C,EAAMjtE,GACrC,GAAI,WAAa47B,EAAO7oC,KAAM,CAC5B,GAAI8S,EAAQ7F,EAAQkkB,KAAO,YAAc,iBAAkB0X,EAAOl5B,MAAQ2tE,EAAkB,SAC5F,MAAO,CACLz+E,MAAOgqC,EAAOl5B,IACdwhB,KAAMlkB,EAAQkkB,KAElB,CACA,UAAY0X,EAAO7oC,OAAS8S,EAAQ,YAAa7F,EAAQ8P,OAAS,QAAS9P,EAAQ0C,IAAMk5B,EAAOl5B,IAClG,CACF,CACF,CACA,SAAS+uE,EAAoBF,EAAUvxE,GACrC,IAAI6xE,EAAa7xE,EAAQ8P,OACvBA,EAASyhE,EAASnL,SAASyL,GAC7B,QAAIz0E,IAAc0S,EAAQ,OAAO9P,EAAQuxE,SAAW,KAAM,UAAYM,GAAcN,EAASnL,SAAiB,SAAMpmE,EAAQ8P,OAAS,SAAU9P,EAAQ0C,SAAMtF,EAAWq0E,EAAoBF,EAAUvxE,GAAU,UAAYA,EAAQ8P,SAAW,WAAa+hE,IAAe7xE,EAAQ8P,OAAS,QAAS9P,EAAQ0C,IAAM,IAAI+qE,UAAU,oCAAsCoE,EAAa,aAAcxB,EAClY,IAAIz0C,EAASw0C,EAAStgE,EAAQyhE,EAASnL,SAAUpmE,EAAQ0C,KACzD,GAAI,UAAYk5B,EAAO7oC,KAAM,OAAOiN,EAAQ8P,OAAS,QAAS9P,EAAQ0C,IAAMk5B,EAAOl5B,IAAK1C,EAAQuxE,SAAW,KAAMlB,EACjH,IAAInpC,EAAOtL,EAAOl5B,IAClB,OAAOwkC,EAAOA,EAAKhjB,MAAQlkB,EAAQuxE,EAASO,YAAc5qC,EAAKt1C,MAAOoO,EAAQpD,KAAO20E,EAASQ,QAAS,WAAa/xE,EAAQ8P,SAAW9P,EAAQ8P,OAAS,OAAQ9P,EAAQ0C,SAAMtF,GAAY4C,EAAQuxE,SAAW,KAAMlB,GAAoBnpC,GAAQlnC,EAAQ8P,OAAS,QAAS9P,EAAQ0C,IAAM,IAAI+qE,UAAU,oCAAqCztE,EAAQuxE,SAAW,KAAMlB,EACrW,CACA,SAAS2B,EAAaC,GACpB,IAAIC,EAAQ,CACVC,OAAQF,EAAK,IAEf,KAAKA,IAASC,EAAME,SAAWH,EAAK,IAAK,KAAKA,IAASC,EAAMG,WAAaJ,EAAK,GAAIC,EAAMI,SAAWL,EAAK,IAAKhvE,KAAKsvE,WAAWvxE,KAAKkxE,EACrI,CACA,SAASM,EAAcN,GACrB,IAAIt2C,EAASs2C,EAAMO,YAAc,CAAC,EAClC72C,EAAO7oC,KAAO,gBAAiB6oC,EAAOl5B,IAAKwvE,EAAMO,WAAa72C,CAChE,CACA,SAASs0C,EAAQJ,GACf7sE,KAAKsvE,WAAa,CAAC,CACjBJ,OAAQ,SACNrC,EAAYv8E,QAAQy+E,EAAc/uE,MAAOA,KAAKyvE,OAAM,EAC1D,CACA,SAASnoD,EAAOooD,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASrD,GAC9B,GAAIsD,EAAgB,OAAOA,EAAe/7E,KAAK87E,GAC/C,GAAI,mBAAqBA,EAAS/1E,KAAM,OAAO+1E,EAC/C,IAAK7wE,MAAM6wE,EAAS17E,QAAS,CAC3B,IAAID,GAAK,EACP4F,EAAO,SAASA,IACd,OAAS5F,EAAI27E,EAAS17E,QAAS,GAAIk4E,EAAOt4E,KAAK87E,EAAU37E,GAAI,OAAO4F,EAAKhL,MAAQ+gF,EAAS37E,GAAI4F,EAAKsnB,MAAO,EAAItnB,EAC9G,OAAOA,EAAKhL,WAAQwL,EAAWR,EAAKsnB,MAAO,EAAItnB,CACjD,EACF,OAAOA,EAAKA,KAAOA,CACrB,CACF,CACA,MAAO,CACLA,KAAM00E,EAEV,CACA,SAASA,IACP,MAAO,CACL1/E,WAAOwL,EACP8mB,MAAM,EAEV,CACA,OAAOosD,EAAkB35E,UAAY45E,EAA4BjwE,EAAeswE,EAAI,cAAe,CACjGh/E,MAAO2+E,EACPvC,cAAc,IACZ1tE,EAAeiwE,EAA4B,cAAe,CAC5D3+E,MAAO0+E,EACPtC,cAAc,IACZsC,EAAkBpsE,YAAcyrE,EAAOY,EAA4Bd,EAAmB,qBAAsBjtE,EAAQqwE,oBAAsB,SAAUC,GACtJ,IAAIC,EAAO,mBAAqBD,GAAUA,EAAO1wE,YACjD,QAAS2wE,IAASA,IAASzC,GAAqB,uBAAyByC,EAAK7uE,aAAe6uE,EAAKjvE,MACpG,EAAGtB,EAAQixD,KAAO,SAAUqf,GAC1B,OAAOthF,OAAO48E,eAAiB58E,OAAO48E,eAAe0E,EAAQvC,IAA+BuC,EAAOE,UAAYzC,EAA4BZ,EAAOmD,EAAQrD,EAAmB,sBAAuBqD,EAAOn8E,UAAYnF,OAAOkc,OAAOkjE,GAAKkC,CAC5O,EAAGtwE,EAAQywE,MAAQ,SAAUvwE,GAC3B,MAAO,CACLwuE,QAASxuE,EAEb,EAAGmuE,EAAsBE,EAAcp6E,WAAYg5E,EAAOoB,EAAcp6E,UAAW44E,GAAqB,WACtG,OAAOtsE,IACT,IAAIT,EAAQuuE,cAAgBA,EAAevuE,EAAQ0wE,MAAQ,SAAUtD,EAASC,EAAS5C,EAAM6C,EAAakB,QACxG,IAAWA,IAAgBA,EAAcxwD,SACzC,IAAI+tD,EAAO,IAAIwC,EAAcld,EAAK+b,EAASC,EAAS5C,EAAM6C,GAAckB,GACxE,OAAOxuE,EAAQqwE,oBAAoBhD,GAAWtB,EAAOA,EAAK3xE,OAAOomB,MAAK,SAAU/oB,GAC9E,OAAOA,EAAOiqB,KAAOjqB,EAAOrI,MAAQ28E,EAAK3xE,MAC3C,GACF,EAAGi0E,EAAsBD,GAAKjB,EAAOiB,EAAInB,EAAmB,aAAcE,EAAOiB,EAAItB,GAAgB,WACnG,OAAOrsE,IACT,IAAI0sE,EAAOiB,EAAI,YAAY,WACzB,MAAO,oBACT,IAAIpuE,EAAQpO,KAAO,SAAUkyB,GAC3B,IAAIgoC,EAAS98D,OAAO80B,GAClBlyB,EAAO,GACT,IAAK,IAAIE,KAAOg6D,EAAQl6D,EAAK4M,KAAK1M,GAClC,OAAOF,EAAK++E,UAAW,SAASv2E,IAC9B,KAAOxI,EAAK6C,QAAS,CACnB,IAAI3C,EAAMF,EAAKkO,MACf,GAAIhO,KAAOg6D,EAAQ,OAAO1xD,EAAKhL,MAAQ0C,EAAKsI,EAAKsnB,MAAO,EAAItnB,CAC9D,CACA,OAAOA,EAAKsnB,MAAO,EAAItnB,CACzB,CACF,EAAG4F,EAAQ+nB,OAASA,EAAQ2lD,EAAQv5E,UAAY,CAC9CyL,YAAa8tE,EACbwC,MAAO,SAAeU,GACpB,GAAInwE,KAAKtG,KAAO,EAAGsG,KAAKrG,KAAO,EAAGqG,KAAKyuE,KAAOzuE,KAAK0uE,WAAQv0E,EAAW6F,KAAKihB,MAAO,EAAIjhB,KAAKsuE,SAAW,KAAMtuE,KAAK6M,OAAS,OAAQ7M,KAAKP,SAAMtF,EAAW6F,KAAKsvE,WAAWh/E,QAAQi/E,IAAiBY,EAAe,IAAK,IAAItvE,KAAQb,KAAM,MAAQa,EAAKuvE,OAAO,IAAMlE,EAAOt4E,KAAKoM,KAAMa,KAAUhC,OAAOgC,EAAKq4B,MAAM,MAAQl5B,KAAKa,QAAQ1G,EACtU,EACA82D,KAAM,WACJjxD,KAAKihB,MAAO,EACZ,IAAIusC,EAAaxtD,KAAKsvE,WAAW,GAAGE,WACpC,GAAI,UAAYhiB,EAAW19D,KAAM,MAAM09D,EAAW/tD,IAClD,OAAOO,KAAKqwE,IACd,EACA1B,kBAAmB,SAA2B2B,GAC5C,GAAItwE,KAAKihB,KAAM,MAAMqvD,EACrB,IAAIvzE,EAAUiD,KACd,SAAS+2B,EAAOw5C,EAAKC,GACnB,OAAO73C,EAAO7oC,KAAO,QAAS6oC,EAAOl5B,IAAM6wE,EAAWvzE,EAAQpD,KAAO42E,EAAKC,IAAWzzE,EAAQ8P,OAAS,OAAQ9P,EAAQ0C,SAAMtF,KAAcq2E,CAC5I,CACA,IAAK,IAAIz8E,EAAIiM,KAAKsvE,WAAWt7E,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAIk7E,EAAQjvE,KAAKsvE,WAAWv7E,GAC1B4kC,EAASs2C,EAAMO,WACjB,GAAI,SAAWP,EAAMC,OAAQ,OAAOn4C,EAAO,OAC3C,GAAIk4C,EAAMC,QAAUlvE,KAAKtG,KAAM,CAC7B,IAAI+2E,EAAWvE,EAAOt4E,KAAKq7E,EAAO,YAChCyB,EAAaxE,EAAOt4E,KAAKq7E,EAAO,cAClC,GAAIwB,GAAYC,EAAY,CAC1B,GAAI1wE,KAAKtG,KAAOu1E,EAAME,SAAU,OAAOp4C,EAAOk4C,EAAME,UAAU,GAC9D,GAAInvE,KAAKtG,KAAOu1E,EAAMG,WAAY,OAAOr4C,EAAOk4C,EAAMG,WACxD,MAAO,GAAIqB,GACT,GAAIzwE,KAAKtG,KAAOu1E,EAAME,SAAU,OAAOp4C,EAAOk4C,EAAME,UAAU,OACzD,CACL,IAAKuB,EAAY,MAAM,IAAIjwE,MAAM,0CACjC,GAAIT,KAAKtG,KAAOu1E,EAAMG,WAAY,OAAOr4C,EAAOk4C,EAAMG,WACxD,CACF,CACF,CACF,EACAve,OAAQ,SAAgB/gE,EAAM2P,GAC5B,IAAK,IAAI1L,EAAIiM,KAAKsvE,WAAWt7E,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAIk7E,EAAQjvE,KAAKsvE,WAAWv7E,GAC5B,GAAIk7E,EAAMC,QAAUlvE,KAAKtG,MAAQwyE,EAAOt4E,KAAKq7E,EAAO,eAAiBjvE,KAAKtG,KAAOu1E,EAAMG,WAAY,CACjG,IAAIuB,EAAe1B,EACnB,KACF,CACF,CACA0B,IAAiB,UAAY7gF,GAAQ,aAAeA,IAAS6gF,EAAazB,QAAUzvE,GAAOA,GAAOkxE,EAAavB,aAAeuB,EAAe,MAC7I,IAAIh4C,EAASg4C,EAAeA,EAAanB,WAAa,CAAC,EACvD,OAAO72C,EAAO7oC,KAAOA,EAAM6oC,EAAOl5B,IAAMA,EAAKkxE,GAAgB3wE,KAAK6M,OAAS,OAAQ7M,KAAKrG,KAAOg3E,EAAavB,WAAYhC,GAAoBptE,KAAKuI,SAASowB,EAC5J,EACApwB,SAAU,SAAkBowB,EAAQ02C,GAClC,GAAI,UAAY12C,EAAO7oC,KAAM,MAAM6oC,EAAOl5B,IAC1C,MAAO,UAAYk5B,EAAO7oC,MAAQ,aAAe6oC,EAAO7oC,KAAOkQ,KAAKrG,KAAOg/B,EAAOl5B,IAAM,WAAak5B,EAAO7oC,MAAQkQ,KAAKqwE,KAAOrwE,KAAKP,IAAMk5B,EAAOl5B,IAAKO,KAAK6M,OAAS,SAAU7M,KAAKrG,KAAO,OAAS,WAAag/B,EAAO7oC,MAAQu/E,IAAarvE,KAAKrG,KAAO01E,GAAWjC,CACtQ,EACArc,OAAQ,SAAgBqe,GACtB,IAAK,IAAIr7E,EAAIiM,KAAKsvE,WAAWt7E,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAIk7E,EAAQjvE,KAAKsvE,WAAWv7E,GAC5B,GAAIk7E,EAAMG,aAAeA,EAAY,OAAOpvE,KAAKuI,SAAS0mE,EAAMO,WAAYP,EAAMI,UAAWE,EAAcN,GAAQ7B,CACrH,CACF,EACA,MAAS,SAAgB8B,GACvB,IAAK,IAAIn7E,EAAIiM,KAAKsvE,WAAWt7E,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAIk7E,EAAQjvE,KAAKsvE,WAAWv7E,GAC5B,GAAIk7E,EAAMC,SAAWA,EAAQ,CAC3B,IAAIv2C,EAASs2C,EAAMO,WACnB,GAAI,UAAY72C,EAAO7oC,KAAM,CAC3B,IAAI8gF,EAASj4C,EAAOl5B,IACpB8vE,EAAcN,EAChB,CACA,OAAO2B,CACT,CACF,CACA,MAAM,IAAInwE,MAAM,wBAClB,EACAowE,cAAe,SAAuBnB,EAAUb,EAAYC,GAC1D,OAAO9uE,KAAKsuE,SAAW,CACrBnL,SAAU77C,EAAOooD,GACjBb,WAAYA,EACZC,QAASA,GACR,SAAW9uE,KAAK6M,SAAW7M,KAAKP,SAAMtF,GAAYizE,CACvD,GACC7tE,CACL,CACAD,EAAOC,QAAU+rD,EAAqBhsD,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,0BC/S3G,SAASuxE,EAAgB3G,EAAG12E,GAK1B,OAJA6L,EAAOC,QAAUuxE,EAAkBviF,OAAO48E,eAAiB58E,OAAO48E,eAAeD,OAAS,SAAyBf,EAAG12E,GAEpH,OADA02E,EAAE4F,UAAYt8E,EACP02E,CACT,EAAG7qE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,QACjEuxE,EAAgB3G,EAAG12E,EAC5B,CACA6L,EAAOC,QAAUuxE,EAAiBxxE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,6BCPvG,IAAIwxE,EAAoB,EAAQ,MAC5BC,EAAkB,EAAQ,MAC1B9G,EAA6B,EAAQ,MACrC+G,EAAoB,EAAQ,MAIhC3xE,EAAOC,QAHP,SAA4BoqE,GAC1B,OAAOoH,EAAkBpH,IAAQqH,EAAgBrH,IAAQO,EAA2BP,IAAQsH,GAC9F,EACqC3xE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCP1G,IAAIysE,EAAU,gBAWd1sE,EAAOC,QAVP,SAAsBlI,EAAO65E,GAC3B,GAAuB,WAAnBlF,EAAQ30E,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAI85E,EAAO95E,EAAM6rE,OAAOkO,aACxB,QAAaj3E,IAATg3E,EAAoB,CACtB,IAAIrqE,EAAMqqE,EAAKv9E,KAAKyD,EAAO65E,GAAQ,WACnC,GAAqB,WAAjBlF,EAAQllE,GAAmB,OAAOA,EACtC,MAAM,IAAI0jE,UAAU,+CACtB,CACA,OAAiB,WAAT0G,EAAoBtyE,OAASE,QAAQzH,EAC/C,EAC+BiI,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCXpG,IAAIysE,EAAU,gBACVoF,EAAc,EAAQ,MAK1B9xE,EAAOC,QAJP,SAAwBE,GACtB,IAAIpO,EAAM+/E,EAAY3xE,EAAK,UAC3B,MAAwB,WAAjBusE,EAAQ36E,GAAoBA,EAAMuN,OAAOvN,EAClD,EACiCiO,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,0BCNtG,SAASysE,EAAQn9B,GAGf,OAAQvvC,EAAOC,QAAUysE,EAAU,mBAAqB9I,QAAU,iBAAmBA,OAAOC,SAAW,SAAUt0B,GAC/G,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBq0B,QAAUr0B,EAAI1vC,cAAgB+jE,QAAUr0B,IAAQq0B,OAAOxvE,UAAY,gBAAkBm7C,CAC1H,EAAGvvC,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,QAAUysE,EAAQn9B,EAC5F,CACAvvC,EAAOC,QAAUysE,EAAS1sE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC,8BCT/F,IAAIwqE,EAAmB,EAAQ,MAS/BzqE,EAAOC,QARP,SAAqC4qE,EAAGkH,GACtC,GAAKlH,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAOJ,EAAiBI,EAAGkH,GACtD,IAAI/kD,EAAI/9B,OAAOmF,UAAUgL,SAAS9K,KAAKu2E,GAAGjxC,MAAM,GAAI,GAEpD,MADU,WAAN5M,GAAkB69C,EAAEhrE,cAAamtB,EAAI69C,EAAEhrE,YAAY0B,MAC7C,QAANyrB,GAAqB,QAANA,EAAoBvwB,MAAMs6B,KAAK8zC,GACxC,cAAN79C,GAAqB,2CAA2CglD,KAAKhlD,GAAWy9C,EAAiBI,EAAGkH,QAAxG,CALc,CAMhB,EAC8C/xE,EAAOC,QAAQuqE,YAAa,EAAMxqE,EAAOC,QAAiB,QAAID,EAAOC","sources":["../node_modules/antd/es/locale/index.js","../node_modules/antd/es/config-provider/cssVariables.js","../node_modules/antd/es/config-provider/hooks/useConfig.js","../node_modules/antd/es/config-provider/MotionWrapper.js","../node_modules/antd/es/config-provider/index.js","../node_modules/antd/es/config-provider/style/index.js","../node_modules/antd/es/config-provider/hooks/useTheme.js","../node_modules/antd/es/form/validateMessagesContext.js","../node_modules/antd/es/modal/locale.js","../node_modules/fbjs/lib/areEqual.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/fbjs/lib/warning.js","../node_modules/invariant/browser.js","../node_modules/react-relay/index.js","../node_modules/react-relay/lib/ReactRelayContainerUtils.js","../node_modules/react-relay/lib/ReactRelayContext.js","../node_modules/react-relay/lib/ReactRelayFragmentContainer.js","../node_modules/react-relay/lib/ReactRelayLocalQueryRenderer.js","../node_modules/react-relay/lib/ReactRelayPaginationContainer.js","../node_modules/react-relay/lib/ReactRelayQueryFetcher.js","../node_modules/react-relay/lib/ReactRelayQueryRenderer.js","../node_modules/react-relay/lib/ReactRelayQueryRendererContext.js","../node_modules/react-relay/lib/ReactRelayRefetchContainer.js","../node_modules/react-relay/lib/RelayContext.js","../node_modules/react-relay/lib/assertFragmentMap.js","../node_modules/react-relay/lib/buildReactRelayContainer.js","../node_modules/react-relay/lib/getRootVariablesForFragments.js","../node_modules/react-relay/lib/index.js","../node_modules/react-relay/lib/isRelayEnvironment.js","../node_modules/react-relay/lib/relay-hooks/EntryPointContainer.react.js","../node_modules/react-relay/lib/relay-hooks/FragmentResource.js","../node_modules/react-relay/lib/relay-hooks/HooksImplementation.js","../node_modules/react-relay/lib/relay-hooks/LRUCache.js","../node_modules/react-relay/lib/relay-hooks/ProfilerContext.js","../node_modules/react-relay/lib/relay-hooks/QueryResource.js","../node_modules/react-relay/lib/relay-hooks/RelayEnvironmentProvider.js","../node_modules/react-relay/lib/relay-hooks/SuspenseResource.js","../node_modules/react-relay/lib/relay-hooks/loadEntryPoint.js","../node_modules/react-relay/lib/relay-hooks/loadQuery.js","../node_modules/react-relay/lib/relay-hooks/useClientQuery.js","../node_modules/react-relay/lib/relay-hooks/useEntryPointLoader.js","../node_modules/react-relay/lib/relay-hooks/useFetchTrackingRef.js","../node_modules/react-relay/lib/relay-hooks/useFragment.js","../node_modules/react-relay/lib/relay-hooks/useFragmentNode.js","../node_modules/react-relay/lib/relay-hooks/useIsMountedRef.js","../node_modules/react-relay/lib/relay-hooks/useIsOperationNodeActive.js","../node_modules/react-relay/lib/relay-hooks/useLazyLoadQuery.js","../node_modules/react-relay/lib/relay-hooks/useLazyLoadQueryNode.js","../node_modules/react-relay/lib/relay-hooks/useLoadMoreFunction.js","../node_modules/react-relay/lib/relay-hooks/useMemoOperationDescriptor.js","../node_modules/react-relay/lib/relay-hooks/useMemoVariables.js","../node_modules/react-relay/lib/relay-hooks/useMutation.js","../node_modules/react-relay/lib/relay-hooks/usePaginationFragment.js","../node_modules/react-relay/lib/relay-hooks/usePreloadedQuery.js","../node_modules/react-relay/lib/relay-hooks/useQueryLoader.js","../node_modules/react-relay/lib/relay-hooks/useRefetchableFragment.js","../node_modules/react-relay/lib/relay-hooks/useRefetchableFragmentNode.js","../node_modules/react-relay/lib/relay-hooks/useRelayEnvironment.js","../node_modules/react-relay/lib/relay-hooks/useStaticFragmentNodeWarning.js","../node_modules/react-relay/lib/relay-hooks/useSubscribeToInvalidationState.js","../node_modules/react-relay/lib/relay-hooks/useSubscription.js","../node_modules/react-relay/lib/relay-hooks/useUnsafeRef_DEPRECATED.js","../node_modules/relay-runtime/index.js","../node_modules/relay-runtime/lib/handlers/RelayDefaultHandlerProvider.js","../node_modules/relay-runtime/lib/handlers/connection/ConnectionHandler.js","../node_modules/relay-runtime/lib/handlers/connection/ConnectionInterface.js","../node_modules/relay-runtime/lib/handlers/connection/MutationHandlers.js","../node_modules/relay-runtime/lib/index.js","../node_modules/relay-runtime/lib/multi-actor-environment/ActorIdentifier.js","../node_modules/relay-runtime/lib/multi-actor-environment/ActorUtils.js","../node_modules/relay-runtime/lib/mutations/RelayDeclarativeMutationConfig.js","../node_modules/relay-runtime/lib/mutations/RelayRecordProxy.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceMutator.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceProxy.js","../node_modules/relay-runtime/lib/mutations/RelayRecordSourceSelectorProxy.js","../node_modules/relay-runtime/lib/mutations/applyOptimisticMutation.js","../node_modules/relay-runtime/lib/mutations/commitLocalUpdate.js","../node_modules/relay-runtime/lib/mutations/commitMutation.js","../node_modules/relay-runtime/lib/mutations/createUpdatableProxy.js","../node_modules/relay-runtime/lib/mutations/readUpdatableFragment.js","../node_modules/relay-runtime/lib/mutations/readUpdatableQuery.js","../node_modules/relay-runtime/lib/mutations/validateMutation.js","../node_modules/relay-runtime/lib/network/ConvertToExecuteFunction.js","../node_modules/relay-runtime/lib/network/RelayNetwork.js","../node_modules/relay-runtime/lib/network/RelayObservable.js","../node_modules/relay-runtime/lib/network/RelayQueryResponseCache.js","../node_modules/relay-runtime/lib/network/wrapNetworkWithLogObserver.js","../node_modules/relay-runtime/lib/query/GraphQLTag.js","../node_modules/relay-runtime/lib/query/PreloadableQueryRegistry.js","../node_modules/relay-runtime/lib/query/fetchQuery.js","../node_modules/relay-runtime/lib/query/fetchQueryInternal.js","../node_modules/relay-runtime/lib/query/fetchQuery_DEPRECATED.js","../node_modules/relay-runtime/lib/store/ClientID.js","../node_modules/relay-runtime/lib/store/DataChecker.js","../node_modules/relay-runtime/lib/store/OperationExecutor.js","../node_modules/relay-runtime/lib/store/RelayConcreteVariables.js","../node_modules/relay-runtime/lib/store/RelayModernEnvironment.js","../node_modules/relay-runtime/lib/store/RelayModernFragmentSpecResolver.js","../node_modules/relay-runtime/lib/store/RelayModernOperationDescriptor.js","../node_modules/relay-runtime/lib/store/RelayModernRecord.js","../node_modules/relay-runtime/lib/store/RelayModernSelector.js","../node_modules/relay-runtime/lib/store/RelayModernStore.js","../node_modules/relay-runtime/lib/store/RelayOperationTracker.js","../node_modules/relay-runtime/lib/store/RelayOptimisticRecordSource.js","../node_modules/relay-runtime/lib/store/RelayPublishQueue.js","../node_modules/relay-runtime/lib/store/RelayReader.js","../node_modules/relay-runtime/lib/store/RelayRecordSource.js","../node_modules/relay-runtime/lib/store/RelayRecordState.js","../node_modules/relay-runtime/lib/store/RelayReferenceMarker.js","../node_modules/relay-runtime/lib/store/RelayResponseNormalizer.js","../node_modules/relay-runtime/lib/store/RelayStoreReactFlightUtils.js","../node_modules/relay-runtime/lib/store/RelayStoreSubscriptions.js","../node_modules/relay-runtime/lib/store/RelayStoreUtils.js","../node_modules/relay-runtime/lib/store/ResolverCache.js","../node_modules/relay-runtime/lib/store/ResolverFragments.js","../node_modules/relay-runtime/lib/store/TypeID.js","../node_modules/relay-runtime/lib/store/ViewerPattern.js","../node_modules/relay-runtime/lib/store/cloneRelayHandleSourceField.js","../node_modules/relay-runtime/lib/store/cloneRelayScalarHandleSourceField.js","../node_modules/relay-runtime/lib/store/createFragmentSpecResolver.js","../node_modules/relay-runtime/lib/store/createRelayContext.js","../node_modules/relay-runtime/lib/store/defaultGetDataID.js","../node_modules/relay-runtime/lib/store/defaultRequiredFieldLogger.js","../node_modules/relay-runtime/lib/store/experimental-live-resolvers/LiveResolverSuspenseSentinel.js","../node_modules/relay-runtime/lib/store/experimental-live-resolvers/getOutputTypeRecordIDs.js","../node_modules/relay-runtime/lib/store/hasOverlappingIDs.js","../node_modules/relay-runtime/lib/store/isRelayModernEnvironment.js","../node_modules/relay-runtime/lib/store/readInlineData.js","../node_modules/relay-runtime/lib/subscription/requestSubscription.js","../node_modules/relay-runtime/lib/util/RelayConcreteNode.js","../node_modules/relay-runtime/lib/util/RelayDefaultHandleKey.js","../node_modules/relay-runtime/lib/util/RelayError.js","../node_modules/relay-runtime/lib/util/RelayFeatureFlags.js","../node_modules/relay-runtime/lib/util/RelayProfiler.js","../node_modules/relay-runtime/lib/util/RelayReplaySubject.js","../node_modules/relay-runtime/lib/util/StringInterner.js","../node_modules/relay-runtime/lib/util/createPayloadFor3DField.js","../node_modules/relay-runtime/lib/util/deepFreeze.js","../node_modules/relay-runtime/lib/util/generateID.js","../node_modules/relay-runtime/lib/util/getFragmentIdentifier.js","../node_modules/relay-runtime/lib/util/getOperation.js","../node_modules/relay-runtime/lib/util/getPaginationMetadata.js","../node_modules/relay-runtime/lib/util/getPaginationVariables.js","../node_modules/relay-runtime/lib/util/getPendingOperationsForFragment.js","../node_modules/relay-runtime/lib/util/getRefetchMetadata.js","../node_modules/relay-runtime/lib/util/getRelayHandleKey.js","../node_modules/relay-runtime/lib/util/getRequestIdentifier.js","../node_modules/relay-runtime/lib/util/getValueAtPath.js","../node_modules/relay-runtime/lib/util/handlePotentialSnapshotErrors.js","../node_modules/relay-runtime/lib/util/isEmptyObject.js","../node_modules/relay-runtime/lib/util/isPromise.js","../node_modules/relay-runtime/lib/util/isScalarAndEqual.js","../node_modules/relay-runtime/lib/util/recycleNodesInto.js","../node_modules/relay-runtime/lib/util/registerEnvironmentWithDevTools.js","../node_modules/relay-runtime/lib/util/resolveImmediate.js","../node_modules/relay-runtime/lib/util/stableCopy.js","../node_modules/relay-runtime/lib/util/withDuration.js","../node_modules/relay-runtime/lib/util/withProvidedVariables.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport { default as useLocale } from './useLocale';\nexport const ANT_MARK = 'internalMark';\nconst LocaleProvider = props => {\n  const {\n    locale = {},\n    children,\n    _ANT_MARK__\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n  React.useEffect(() => {\n    const clearLocale = changeConfirmLocale(locale && locale.Modal);\n    return clearLocale;\n  }, [locale]);\n  const getMemoizedContextValue = React.useMemo(() => Object.assign(Object.assign({}, locale), {\n    exist: true\n  }), [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\nif (process.env.NODE_ENV !== 'production') {\n  LocaleProvider.displayName = 'LocaleProvider';\n}\nexport default LocaleProvider;","/* eslint-disable import/prefer-default-export, prefer-destructuring */\nimport { generate } from '@ant-design/colors';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport warning from '../_util/warning';\nconst dynamicStyleMark = `-ant-${Date.now()}-${Math.random()}`;\nexport function getStyle(globalPrefixCls, theme) {\n  const variables = {};\n  const formatColor = (color, updater) => {\n    let clone = color.clone();\n    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;\n    return clone.toRgbString();\n  };\n  const fillColor = (colorVal, type) => {\n    const baseColor = new TinyColor(colorVal);\n    const colorPalettes = generate(baseColor.toRgbString());\n    variables[`${type}-color`] = formatColor(baseColor);\n    variables[`${type}-color-disabled`] = colorPalettes[1];\n    variables[`${type}-color-hover`] = colorPalettes[4];\n    variables[`${type}-color-active`] = colorPalettes[6];\n    variables[`${type}-color-outline`] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[`${type}-color-deprecated-bg`] = colorPalettes[0];\n    variables[`${type}-color-deprecated-border`] = colorPalettes[2];\n  };\n  // ================ Primary Color ================\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    const primaryColor = new TinyColor(theme.primaryColor);\n    const primaryColors = generate(primaryColor.toRgbString());\n    // Legacy - We should use semantic naming standard\n    primaryColors.forEach((color, index) => {\n      variables[`primary-${index + 1}`] = color;\n    });\n    // Deprecated\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, c => c.lighten(35));\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, c => c.lighten(20));\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, c => c.tint(20));\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, c => c.tint(50));\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, c => c.setAlpha(c.getAlpha() * 0.12));\n    const primaryActiveColor = new TinyColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, c => c.setAlpha(c.getAlpha() * 0.3));\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, c => c.darken(2));\n  }\n  // ================ Success Color ================\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  }\n  // ================ Warning Color ================\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  }\n  // ================= Error Color =================\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  }\n  // ================= Info Color ==================\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  }\n  // Convert to css variables\n  const cssList = Object.keys(variables).map(key => `--${globalPrefixCls}-${key}: ${variables[key]};`);\n  return `\n  :root {\n    ${cssList.join('\\n')}\n  }\n  `.trim();\n}\nexport function registerTheme(globalPrefixCls, theme) {\n  const style = getStyle(globalPrefixCls, theme);\n  if (canUseDom()) {\n    updateCSS(style, `${dynamicStyleMark}-dynamic-theme`);\n  } else {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'ConfigProvider', 'SSR do not support dynamic theme with css variables.') : void 0;\n  }\n}","import { useContext } from 'react';\nimport DisabledContext from '../DisabledContext';\nimport SizeContext from '../SizeContext';\nfunction useConfig() {\n  const componentDisabled = useContext(DisabledContext);\n  const componentSize = useContext(SizeContext);\n  return {\n    componentDisabled,\n    componentSize\n  };\n}\nexport default useConfig;","import { Provider as MotionProvider } from 'rc-motion';\nimport * as React from 'react';\nimport { useToken } from '../theme/internal';\nexport default function MotionWrapper(props) {\n  const {\n    children\n  } = props;\n  const [, token] = useToken();\n  const {\n    motion\n  } = token;\n  const needWrapMotionProviderRef = React.useRef(false);\n  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n  if (needWrapMotionProviderRef.current) {\n    return /*#__PURE__*/React.createElement(MotionProvider, {\n      motion: motion\n    }, children);\n  }\n  return children;\n}","'use client';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { createTheme } from '@ant-design/cssinjs';\nimport IconContext from \"@ant-design/icons/es/components/Context\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport { merge } from \"rc-util/es/utils/set\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport ValidateMessagesContext from '../form/validateMessagesContext';\nimport LocaleProvider, { ANT_MARK } from '../locale';\nimport LocaleContext from '../locale/context';\nimport defaultLocale from '../locale/en_US';\nimport { DesignTokenContext } from '../theme/internal';\nimport defaultSeedToken from '../theme/themes/seed';\nimport { ConfigConsumer, ConfigContext, defaultIconPrefixCls } from './context';\nimport { registerTheme } from './cssVariables';\nimport { DisabledContextProvider } from './DisabledContext';\nimport useConfig from './hooks/useConfig';\nimport useTheme from './hooks/useTheme';\nimport MotionWrapper from './MotionWrapper';\nimport SizeContext, { SizeContextProvider } from './SizeContext';\nimport useStyle from './style';\nimport { defaultTheme } from '../theme/context';\n/**\n * Since too many feedback using static method like `Modal.confirm` not getting theme, we record the\n * theme register info here to help developer get warning info.\n */\nlet existThemeConfig = false;\nexport const warnContext = process.env.NODE_ENV !== 'production' ? componentName => {\n  process.env.NODE_ENV !== \"production\" ? warning(!existThemeConfig, componentName, `Static function can not consume context like dynamic theme. Please use 'App' component instead.`) : void 0;\n} : /* istanbul ignore next */\nnull;\nexport { ConfigConsumer, ConfigContext, defaultIconPrefixCls };\nexport const configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader'];\n// These props is used by `useContext` directly in sub component\nconst PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'pagination', 'form', 'select', 'button'];\nexport const defaultPrefixCls = 'ant';\nlet globalPrefixCls;\nlet globalIconPrefixCls;\nlet globalTheme;\nfunction getGlobalPrefixCls() {\n  return globalPrefixCls || defaultPrefixCls;\n}\nfunction getGlobalIconPrefixCls() {\n  return globalIconPrefixCls || defaultIconPrefixCls;\n}\nfunction isLegacyTheme(theme) {\n  return Object.keys(theme).some(key => key.endsWith('Color'));\n}\nconst setGlobalConfig = _ref => {\n  let {\n    prefixCls,\n    iconPrefixCls,\n    theme\n  } = _ref;\n  if (prefixCls !== undefined) {\n    globalPrefixCls = prefixCls;\n  }\n  if (iconPrefixCls !== undefined) {\n    globalIconPrefixCls = iconPrefixCls;\n  }\n  if (theme) {\n    if (isLegacyTheme(theme)) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'ConfigProvider', '`config` of css variable theme is not work in v5. Please use new `theme` config instead.') : void 0;\n      registerTheme(getGlobalPrefixCls(), theme);\n    } else {\n      globalTheme = theme;\n    }\n  }\n};\nexport const globalConfig = () => ({\n  getPrefixCls: (suffixCls, customizePrefixCls) => {\n    if (customizePrefixCls) {\n      return customizePrefixCls;\n    }\n    return suffixCls ? `${getGlobalPrefixCls()}-${suffixCls}` : getGlobalPrefixCls();\n  },\n  getIconPrefixCls: getGlobalIconPrefixCls,\n  getRootPrefixCls: () => {\n    // If Global prefixCls provided, use this\n    if (globalPrefixCls) {\n      return globalPrefixCls;\n    }\n    // Fallback to default prefixCls\n    return getGlobalPrefixCls();\n  },\n  getTheme: () => globalTheme\n});\nconst ProviderChildren = props => {\n  const {\n    children,\n    csp: customCsp,\n    autoInsertSpaceInButton,\n    alert,\n    anchor,\n    form,\n    locale,\n    componentSize,\n    direction,\n    space,\n    virtual,\n    dropdownMatchSelectWidth,\n    popupMatchSelectWidth,\n    popupOverflow,\n    legacyLocale,\n    parentContext,\n    iconPrefixCls: customIconPrefixCls,\n    theme,\n    componentDisabled,\n    segmented,\n    statistic,\n    spin,\n    calendar,\n    carousel,\n    cascader,\n    collapse,\n    typography,\n    checkbox,\n    descriptions,\n    divider,\n    drawer,\n    skeleton,\n    steps,\n    image,\n    layout,\n    list,\n    mentions,\n    modal,\n    progress,\n    result,\n    slider,\n    breadcrumb,\n    menu,\n    pagination,\n    input,\n    empty,\n    badge,\n    radio,\n    rate,\n    switch: SWITCH,\n    transfer,\n    avatar,\n    message,\n    tag,\n    table,\n    card,\n    tabs,\n    timeline,\n    timePicker,\n    upload,\n    notification,\n    tree,\n    colorPicker,\n    datePicker,\n    wave\n  } = props;\n  // =================================== Warning ===================================\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(dropdownMatchSelectWidth === undefined, 'ConfigProvider', '`dropdownMatchSelectWidth` is deprecated. Please use `popupMatchSelectWidth` instead.') : void 0;\n  }\n  // =================================== Context ===================================\n  const getPrefixCls = React.useCallback((suffixCls, customizePrefixCls) => {\n    const {\n      prefixCls\n    } = props;\n    if (customizePrefixCls) {\n      return customizePrefixCls;\n    }\n    const mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\n    return suffixCls ? `${mergedPrefixCls}-${suffixCls}` : mergedPrefixCls;\n  }, [parentContext.getPrefixCls, props.prefixCls]);\n  const iconPrefixCls = customIconPrefixCls || parentContext.iconPrefixCls || defaultIconPrefixCls;\n  const shouldWrapSSR = iconPrefixCls !== parentContext.iconPrefixCls;\n  const csp = customCsp || parentContext.csp;\n  const wrapSSR = useStyle(iconPrefixCls, csp);\n  const mergedTheme = useTheme(theme, parentContext.theme);\n  if (process.env.NODE_ENV !== 'production') {\n    existThemeConfig = existThemeConfig || !!mergedTheme;\n  }\n  const baseConfig = {\n    csp,\n    autoInsertSpaceInButton,\n    alert,\n    anchor,\n    locale: locale || legacyLocale,\n    direction,\n    space,\n    virtual,\n    popupMatchSelectWidth: popupMatchSelectWidth !== null && popupMatchSelectWidth !== void 0 ? popupMatchSelectWidth : dropdownMatchSelectWidth,\n    popupOverflow,\n    getPrefixCls,\n    iconPrefixCls,\n    theme: mergedTheme,\n    segmented,\n    statistic,\n    spin,\n    calendar,\n    carousel,\n    cascader,\n    collapse,\n    typography,\n    checkbox,\n    descriptions,\n    divider,\n    drawer,\n    skeleton,\n    steps,\n    image,\n    input,\n    layout,\n    list,\n    mentions,\n    modal,\n    progress,\n    result,\n    slider,\n    breadcrumb,\n    menu,\n    pagination,\n    empty,\n    badge,\n    radio,\n    rate,\n    switch: SWITCH,\n    transfer,\n    avatar,\n    message,\n    tag,\n    table,\n    card,\n    tabs,\n    timeline,\n    timePicker,\n    upload,\n    notification,\n    tree,\n    colorPicker,\n    datePicker,\n    wave\n  };\n  const config = Object.assign({}, parentContext);\n  Object.keys(baseConfig).forEach(key => {\n    if (baseConfig[key] !== undefined) {\n      config[key] = baseConfig[key];\n    }\n  });\n  // Pass the props used by `useContext` directly with child component.\n  // These props should merged into `config`.\n  PASSED_PROPS.forEach(propName => {\n    const propValue = props[propName];\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  });\n  // https://github.com/ant-design/ant-design/issues/27617\n  const memoedConfig = useMemo(() => config, config, (prevConfig, currentConfig) => {\n    const prevKeys = Object.keys(prevConfig);\n    const currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(key => prevConfig[key] !== currentConfig[key]);\n  });\n  const memoIconContextValue = React.useMemo(() => ({\n    prefixCls: iconPrefixCls,\n    csp\n  }), [iconPrefixCls, csp]);\n  let childNode = shouldWrapSSR ? wrapSSR(children) : children;\n  const validateMessages = React.useMemo(() => {\n    var _a, _b, _c, _d;\n    return merge(((_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages) || {}, ((_c = (_b = memoedConfig.locale) === null || _b === void 0 ? void 0 : _b.Form) === null || _c === void 0 ? void 0 : _c.defaultValidateMessages) || {}, ((_d = memoedConfig.form) === null || _d === void 0 ? void 0 : _d.validateMessages) || {}, (form === null || form === void 0 ? void 0 : form.validateMessages) || {});\n  }, [memoedConfig, form === null || form === void 0 ? void 0 : form.validateMessages]);\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /*#__PURE__*/React.createElement(ValidateMessagesContext.Provider, {\n      value: validateMessages\n    }, children);\n  }\n  if (locale) {\n    childNode = /*#__PURE__*/React.createElement(LocaleProvider, {\n      locale: locale,\n      _ANT_MARK__: ANT_MARK\n    }, childNode);\n  }\n  if (iconPrefixCls || csp) {\n    childNode = /*#__PURE__*/React.createElement(IconContext.Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n  if (componentSize) {\n    childNode = /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n  // =================================== Motion ===================================\n  childNode = /*#__PURE__*/React.createElement(MotionWrapper, null, childNode);\n  // ================================ Dynamic theme ================================\n  const memoTheme = React.useMemo(() => {\n    const _a = mergedTheme || {},\n      {\n        algorithm,\n        token,\n        components\n      } = _a,\n      rest = __rest(_a, [\"algorithm\", \"token\", \"components\"]);\n    const themeObj = algorithm && (!Array.isArray(algorithm) || algorithm.length > 0) ? createTheme(algorithm) : defaultTheme;\n    const parsedComponents = {};\n    Object.entries(components || {}).forEach(_ref2 => {\n      let [componentName, componentToken] = _ref2;\n      const parsedToken = Object.assign({}, componentToken);\n      if ('algorithm' in parsedToken) {\n        if (parsedToken.algorithm === true) {\n          parsedToken.theme = themeObj;\n        } else if (Array.isArray(parsedToken.algorithm) || typeof parsedToken.algorithm === 'function') {\n          parsedToken.theme = createTheme(parsedToken.algorithm);\n        }\n        delete parsedToken.algorithm;\n      }\n      parsedComponents[componentName] = parsedToken;\n    });\n    return Object.assign(Object.assign({}, rest), {\n      theme: themeObj,\n      token: Object.assign(Object.assign({}, defaultSeedToken), token),\n      components: parsedComponents\n    });\n  }, [mergedTheme]);\n  if (theme) {\n    childNode = /*#__PURE__*/React.createElement(DesignTokenContext.Provider, {\n      value: memoTheme\n    }, childNode);\n  }\n  // =================================== Render ===================================\n  if (componentDisabled !== undefined) {\n    childNode = /*#__PURE__*/React.createElement(DisabledContextProvider, {\n      disabled: componentDisabled\n    }, childNode);\n  }\n  return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\nconst ConfigProvider = props => {\n  const context = React.useContext(ConfigContext);\n  const antLocale = React.useContext(LocaleContext);\n  return /*#__PURE__*/React.createElement(ProviderChildren, Object.assign({\n    parentContext: context,\n    legacyLocale: antLocale\n  }, props));\n};\nConfigProvider.ConfigContext = ConfigContext;\nConfigProvider.SizeContext = SizeContext;\nConfigProvider.config = setGlobalConfig;\nConfigProvider.useConfig = useConfig;\nObject.defineProperty(ConfigProvider, 'SizeContext', {\n  get: () => {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'ConfigProvider', 'ConfigProvider.SizeContext is deprecated. Please use `ConfigProvider.useConfig().componentSize` instead.') : void 0;\n    return SizeContext;\n  }\n});\nif (process.env.NODE_ENV !== 'production') {\n  ConfigProvider.displayName = 'ConfigProvider';\n}\nexport default ConfigProvider;","import { useStyleRegister } from '@ant-design/cssinjs';\nimport { resetIcon } from '../../style';\nimport { useToken } from '../../theme/internal';\nconst useStyle = (iconPrefixCls, csp) => {\n  const [theme, token] = useToken();\n  // Generate style for icons\n  return useStyleRegister({\n    theme,\n    token,\n    hashId: '',\n    path: ['ant-design-icons', iconPrefixCls],\n    nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce\n  }, () => [{\n    [`.${iconPrefixCls}`]: Object.assign(Object.assign({}, resetIcon()), {\n      [`.${iconPrefixCls} .${iconPrefixCls}-icon`]: {\n        display: 'block'\n      }\n    })\n  }]);\n};\nexport default useStyle;","import useMemo from \"rc-util/es/hooks/useMemo\";\nimport isEqual from \"rc-util/es/isEqual\";\nimport { defaultConfig } from '../../theme/internal';\nexport default function useTheme(theme, parentTheme) {\n  const themeConfig = theme || {};\n  const parentThemeConfig = themeConfig.inherit === false || !parentTheme ? defaultConfig : parentTheme;\n  return useMemo(() => {\n    if (!theme) {\n      return parentTheme;\n    }\n    // Override\n    const mergedComponents = Object.assign({}, parentThemeConfig.components);\n    Object.keys(theme.components || {}).forEach(componentName => {\n      mergedComponents[componentName] = Object.assign(Object.assign({}, mergedComponents[componentName]), theme.components[componentName]);\n    });\n    // Base token\n    return Object.assign(Object.assign(Object.assign({}, parentThemeConfig), themeConfig), {\n      token: Object.assign(Object.assign({}, parentThemeConfig.token), themeConfig.token),\n      components: mergedComponents\n    });\n  }, [themeConfig, parentThemeConfig], (prev, next) => prev.some((prevTheme, index) => {\n    const nextTheme = next[index];\n    return !isEqual(prevTheme, nextTheme, true);\n  }));\n}","import { createContext } from 'react';\n// ZombieJ: We export single file here since\n// ConfigProvider use this which will make loop deps\n// to import whole `rc-field-form`\nexport default /*#__PURE__*/createContext(undefined);","import defaultLocale from '../locale/en_US';\nlet runtimeLocale = Object.assign({}, defaultLocale.Modal);\nlet localeList = [];\nconst generateLocale = () => localeList.reduce((merged, locale) => Object.assign(Object.assign({}, merged), locale), defaultLocale.Modal);\nexport function changeConfirmLocale(newLocale) {\n  if (newLocale) {\n    const cloneLocale = Object.assign({}, newLocale);\n    localeList.push(cloneLocale);\n    runtimeLocale = generateLocale();\n    return () => {\n      localeList = localeList.filter(locale => locale !== cloneLocale);\n      runtimeLocale = generateLocale();\n    };\n  }\n  runtimeLocale = Object.assign({}, defaultLocale.Modal);\n}\nexport function getConfirmLocale() {\n  return runtimeLocale;\n}","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require(\"./emptyFunction\");\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\n\nfunction printWarning(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var argIndex = 0;\n  var message = 'Warning: ' + format.replace(/%s/g, function () {\n    return args[argIndex++];\n  });\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    // --- Welcome to debugging React ---\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n  } catch (x) {}\n}\n\nvar warning = process.env.NODE_ENV !== \"production\" ? function (condition, format) {\n  if (format === undefined) {\n    throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n  }\n\n  if (!condition) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    printWarning.apply(void 0, [format].concat(args));\n  }\n} : emptyFunction;\nmodule.exports = warning;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * Relay v15.0.0\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/index.js');\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction getComponentName(component) {\n  return component.displayName || component.name || 'Component';\n}\nfunction getContainerName(Component) {\n  return 'Relay(' + getComponentName(Component) + ')';\n}\nmodule.exports = {\n  getComponentName: getComponentName,\n  getContainerName: getContainerName\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createRelayContext = _require.__internal.createRelayContext;\nmodule.exports = createRelayContext(React);","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _excluded = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar _require = require('./ReactRelayContainerUtils'),\n  getContainerName = _require.getContainerName;\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\n/**\n * Composes a React component class, returning a new class that intercepts\n * props, resolving them with the provided fragments and subscribing for\n * updates.\n */\nfunction createContainerWithFragments(Component, fragments) {\n  var _class;\n  var containerName = getContainerName(Component);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        var resolverFromThisUpdate = _this.state.resolver;\n        _this.setState(function (updatedState) {\n          return (\n            // If this event belongs to the current data source, update.\n            // Otherwise we should ignore it.\n            resolverFromThisUpdate === updatedState.resolver ? {\n              data: updatedState.resolver.resolve(),\n              relayProp: getRelayProp(updatedState.relayProp.environment)\n            } : null\n          );\n        });\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      // Do not provide a subscription/callback here.\n      // It is possible for this render to be interrupted or aborted,\n      // In which case the subscription would cause a leak.\n      // We will add the subscription in componentDidMount().\n      var resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      _this.state = {\n        data: resolver.resolve(),\n        prevProps: props,\n        prevPropsContext: relayContext,\n        relayProp: getRelayProp(relayContext.environment),\n        resolver: resolver\n      };\n      return _this;\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */\n    _class.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$__rootIsQu;\n      // Any props change could impact the query, so we mirror props in state.\n      // This is an unusual pattern, but necessary for this container usecase.\n      var prevProps = prevState.prevProps;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, prevProps);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var resolver = prevState.resolver;\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (prevState.prevPropsContext.environment !== relayContext.environment || !areEqual(prevIDs, nextIDs)) {\n        // Do not provide a subscription/callback here.\n        // It is possible for this render to be interrupted or aborted,\n        // In which case the subscription would cause a leak.\n        // We will add the subscription in componentDidUpdate().\n        resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        return {\n          data: resolver.resolve(),\n          prevPropsContext: relayContext,\n          prevProps: nextProps,\n          relayProp: getRelayProp(relayContext.environment),\n          resolver: resolver\n        };\n      } else {\n        resolver.setProps(nextProps);\n        var data = resolver.resolve();\n        if (data !== prevState.data) {\n          return {\n            data: data,\n            prevProps: nextProps,\n            prevPropsContext: relayContext,\n            relayProp: getRelayProp(relayContext.environment)\n          };\n        }\n      }\n      return null;\n    };\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (this.state.resolver !== prevState.resolver) {\n        prevState.resolver.dispose();\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      } else {\n        this._rerenderIfStoreHasChanged();\n      }\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.state.resolver.dispose();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (nextState.prevPropsContext.environment !== this.state.prevPropsContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var _this$state = this.state,\n        data = _this$state.data,\n        resolver = _this$state.resolver;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var _this$state2 = this.state,\n        data = _this$state2.data,\n        resolver = _this$state2.resolver;\n      var maybeNewData = resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    // $FlowFixMe[missing-local-annot]\n    ;\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        componentRef = _this$props.componentRef,\n        __relayContext = _this$props.__relayContext,\n        __rootIsQueryRenderer = _this$props.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      return React.createElement(Component, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, props), this.state.data), {}, {\n        ref: componentRef,\n        relay: this.state.relayProp\n      }));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\nfunction getRelayProp(environment) {\n  return {\n    environment: environment\n  };\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, createContainerWithFragments);\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createOperationDescriptor = _require.createOperationDescriptor,\n  deepFreeze = _require.deepFreeze,\n  getRequest = _require.getRequest;\nvar useLayoutEffect = React.useLayoutEffect,\n  useState = React.useState,\n  useRef = React.useRef,\n  useMemo = React.useMemo;\nvar queryRendererContext = {\n  rootIsQueryRenderer: true\n};\nfunction useDeepCompare(value) {\n  var latestValue = React.useRef(value);\n  if (!areEqual(latestValue.current, value)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(value);\n    }\n    latestValue.current = value;\n  }\n  return latestValue.current;\n}\nfunction ReactRelayLocalQueryRenderer(props) {\n  var environment = props.environment,\n    query = props.query,\n    variables = props.variables,\n    render = props.render;\n  var latestVariables = useDeepCompare(variables);\n  var operation = useMemo(function () {\n    var request = getRequest(query);\n    return createOperationDescriptor(request, latestVariables);\n  }, [query, latestVariables]);\n  var relayContext = useMemo(function () {\n    return {\n      environment: environment\n    };\n  }, [environment]);\n\n  // Use a ref to prevent rendering twice when data changes\n  // because of props change\n  var dataRef = useRef(null);\n  var _useState = useState(null),\n    forceUpdate = _useState[1];\n  var cleanupFnRef = useRef(null);\n  var snapshot = useMemo(function () {\n    environment.check(operation);\n    var res = environment.lookup(operation.fragment);\n    dataRef.current = res.data;\n\n    // Run effects here so that the data can be retained\n    // and subscribed before the component commits\n    var retainDisposable = environment.retain(operation);\n    var subscribeDisposable = environment.subscribe(res, function (newSnapshot) {\n      dataRef.current = newSnapshot.data;\n      forceUpdate(dataRef.current);\n    });\n    var disposed = false;\n    function nextCleanupFn() {\n      if (!disposed) {\n        disposed = true;\n        cleanupFnRef.current = null;\n        retainDisposable.dispose();\n        subscribeDisposable.dispose();\n      }\n    }\n    if (cleanupFnRef.current) {\n      cleanupFnRef.current();\n    }\n    cleanupFnRef.current = nextCleanupFn;\n    return res;\n  }, [environment, operation]);\n  useLayoutEffect(function () {\n    var cleanupFn = cleanupFnRef.current;\n    return function () {\n      cleanupFn && cleanupFn();\n    };\n  }, [snapshot]);\n  return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n    value: relayContext\n  }, /*#__PURE__*/React.createElement(ReactRelayQueryRendererContext.Provider, {\n    value: queryRendererContext\n  }, render({\n    props: dataRef.current\n  })));\n}\nmodule.exports = ReactRelayLocalQueryRenderer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectSpread3 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _excluded = [\"componentRef\"],\n  _excluded2 = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"],\n  _excluded3 = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar getRootVariablesForFragments = require('./getRootVariablesForFragments');\nvar _require = require('./ReactRelayContainerUtils'),\n  getComponentName = _require.getComponentName,\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  ConnectionInterface = _require3.ConnectionInterface,\n  Observable = _require3.Observable,\n  RelayFeatureFlags = _require3.RelayFeatureFlags,\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  createOperationDescriptor = _require3.createOperationDescriptor,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  getRequest = _require3.getRequest,\n  getVariablesFromObject = _require3.getVariablesFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\nvar warning = require(\"fbjs/lib/warning\");\nvar FORWARD = 'forward';\n/**\n * Extends the functionality of RelayFragmentContainer by providing a mechanism\n * to load more data from a connection.\n *\n * # Configuring a PaginationContainer\n *\n * PaginationContainer accepts the standard FragmentContainer arguments and an\n * additional `connectionConfig` argument:\n *\n * - `Component`: the component to be wrapped/rendered.\n * - `fragments`: an object whose values are `graphql` fragments. The object\n *   keys determine the prop names by which fragment data is available.\n * - `connectionConfig`: an object that determines how to load more connection\n *   data. Details below.\n *\n * # Loading More Data\n *\n * Use `props.relay.hasMore()` to determine if there are more items to load.\n *\n * ```\n * hasMore(): boolean\n * ```\n *\n * Use `props.relay.isLoading()` to determine if a previous call to `loadMore()`\n * is still pending. This is convenient for avoiding duplicate load calls.\n *\n * ```\n * isLoading(): boolean\n * ```\n *\n * Use `props.relay.loadMore()` to load more items. This will return null if\n * there are no more items to fetch, otherwise it will fetch more items and\n * return a Disposable that can be used to cancel the fetch.\n *\n * `pageSize` should be the number of *additional* items to fetch (not the\n * total).\n *\n * ```\n * loadMore(pageSize: number, callback: ?(error: ?Error) => void): ?Disposable\n * ```\n *\n * A complete example:\n *\n * ```\n * class Foo extends React.Component {\n *   ...\n *   _onEndReached() {\n *     if (!this.props.relay.hasMore() || this.props.relay.isLoading()) {\n *       return;\n *     }\n *     this.props.relay.loadMore(10);\n *   }\n *   ...\n * }\n * ```\n *\n * # Connection Config\n *\n * Here's an example, followed by details of each config property:\n *\n * ```\n * ReactRelayPaginationContainer.createContainer(\n *   Component,\n *   {\n *     user: graphql`fragment FriendsFragment on User {\n *       friends(after: $afterCursor first: $count) @connection {\n *         edges { ... }\n *         pageInfo {\n *           startCursor\n *           endCursor\n *           hasNextPage\n *           hasPreviousPage\n *         }\n *       }\n *     }`,\n *   },\n *   {\n *     direction: 'forward',\n *     getConnectionFromProps(props) {\n *       return props.user && props.user.friends;\n *     },\n *     getFragmentVariables(vars, totalCount) {\n *       // The component presumably wants *all* edges, not just those after\n *       // the cursor, so notice that we don't set $afterCursor here.\n *       return {\n *         ...vars,\n *         count: totalCount,\n *       };\n *     },\n *     getVariables(props, {count, cursor}, fragmentVariables) {\n *       return {\n *         id: props.user.id,\n *         afterCursor: cursor,\n *         count,\n *       },\n *     },\n *     query: graphql`\n *       query FriendsQuery($id: ID!, $afterCursor: ID, $count: Int!) {\n *         node(id: $id) {\n *           ...FriendsFragment\n *         }\n *       }\n *     `,\n *   }\n * );\n * ```\n *\n * ## Config Properties\n *\n * - `direction`: Either \"forward\" to indicate forward pagination using\n *   after/first, or \"backward\" to indicate backward pagination using\n *   before/last.\n * - `getConnectionFromProps(props)`: PaginationContainer doesn't magically know\n *   which connection data you mean to fetch more of (a container might fetch\n *   multiple connections, but can only paginate one of them). This function is\n *   given the fragment props only (not full props), and should return the\n *   connection data. See the above example that returns the friends data via\n *   `props.user.friends`.\n * - `getFragmentVariables(previousVars, totalCount)`: Given the previous variables\n *   and the new total number of items, get the variables to use when reading\n *   your fragments. Typically this means setting whatever your local \"count\"\n *   variable is to the value of `totalCount`. See the example.\n * - `getVariables(props, {count, cursor})`: Get the variables to use when\n *   fetching the pagination `query`. You may determine the root object id from\n *   props (see the example that uses `props.user.id`) and may also set whatever\n *   variables you use for the after/first/before/last calls based on the count\n *   and cursor.\n * - `query`: A query to use when fetching more connection data. This should\n *   typically reference one of the container's fragment (as in the example)\n *   to ensure that all the necessary fields for sub-components are fetched.\n */\n\nfunction createGetConnectionFromProps(metadata) {\n  var path = metadata.path;\n  !path ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to synthesize a ' + 'getConnectionFromProps function.') : invariant(false) : void 0;\n  return function (props) {\n    var data = props[metadata.fragmentName];\n    for (var i = 0; i < path.length; i++) {\n      if (!data || typeof data !== 'object') {\n        return null;\n      }\n      data = data[path[i]];\n    }\n    return data;\n  };\n}\nfunction createGetFragmentVariables(metadata) {\n  var countVariable = metadata.count;\n  !countVariable ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to synthesize a ' + 'getFragmentVariables function.') : invariant(false) : void 0;\n  return function (prevVars, totalCount) {\n    return (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, prevVars), {}, (0, _defineProperty2[\"default\"])({}, countVariable, totalCount));\n  };\n}\nfunction findConnectionMetadata(fragments) {\n  var foundConnectionMetadata = null;\n  var isRelayModern = false;\n  for (var fragmentName in fragments) {\n    var fragment = fragments[fragmentName];\n    var connectionMetadata = fragment.metadata && fragment.metadata.connection;\n    // HACK: metadata is always set to `undefined` in classic. In modern, even\n    // if empty, it is set to null (never undefined). We use that knowlege to\n    // check if we're dealing with classic or modern\n    if (fragment.metadata !== undefined) {\n      isRelayModern = true;\n    }\n    if (connectionMetadata) {\n      !(connectionMetadata.length === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Only a single @connection is ' + 'supported, `%s` has %s.', fragmentName, connectionMetadata.length) : invariant(false) : void 0;\n      !!foundConnectionMetadata ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Only a single fragment with ' + '@connection is supported.') : invariant(false) : void 0;\n      foundConnectionMetadata = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, connectionMetadata[0]), {}, {\n        fragmentName: fragmentName\n      });\n    }\n  }\n  !(!isRelayModern || foundConnectionMetadata !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: A @connection directive must be present.') : invariant(false) : void 0;\n  return foundConnectionMetadata || {};\n}\nfunction toObserver(observerOrCallback) {\n  return typeof observerOrCallback === 'function' ? {\n    error: observerOrCallback,\n    complete: observerOrCallback,\n    unsubscribe: function unsubscribe(subscription) {\n      typeof observerOrCallback === 'function' && observerOrCallback();\n    }\n  } : observerOrCallback || {};\n}\nfunction createContainerWithFragments(Component, fragments, connectionConfig) {\n  var _class;\n  var componentName = getComponentName(Component);\n  var containerName = getContainerName(Component);\n  var metadata = findConnectionMetadata(fragments);\n  var getConnectionFromProps = connectionConfig.getConnectionFromProps || createGetConnectionFromProps(metadata);\n  var direction = connectionConfig.direction || metadata.direction;\n  !direction ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Unable to infer direction of the ' + 'connection, possibly because both first and last are provided.') : invariant(false) : void 0;\n  var getFragmentVariables = connectionConfig.getFragmentVariables || createGetFragmentVariables(metadata);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        _this.setState({\n          data: _this._resolver.resolve()\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_hasMore\", function () {\n        var connectionData = _this._getConnectionData();\n        return !!(connectionData && connectionData.hasMore && connectionData.cursor);\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_isLoading\", function () {\n        return !!_this._refetchSubscription;\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_refetchConnection\", function (totalCount, observerOrCallback, refetchVariables) {\n        if (!_this._canFetchPage('refetchConnection')) {\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        _this._refetchVariables = refetchVariables;\n        var paginatingVariables = {\n          count: totalCount,\n          cursor: null,\n          totalCount: totalCount\n        };\n        var fetch = _this._fetchPage(paginatingVariables, toObserver(observerOrCallback), {\n          force: true\n        });\n        return {\n          dispose: fetch.unsubscribe\n        };\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_loadMore\", function (pageSize, observerOrCallback, options) {\n        if (!_this._canFetchPage('loadMore')) {\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        var observer = toObserver(observerOrCallback);\n        var connectionData = _this._getConnectionData();\n        if (!connectionData) {\n          Observable.create(function (sink) {\n            return sink.complete();\n          }).subscribe(observer);\n          return null;\n        }\n        var totalCount = connectionData.edgeCount + pageSize;\n        if (options && options.force) {\n          return _this._refetchConnection(totalCount, observerOrCallback);\n        }\n        var _ConnectionInterface$ = ConnectionInterface.get(),\n          END_CURSOR = _ConnectionInterface$.END_CURSOR,\n          START_CURSOR = _ConnectionInterface$.START_CURSOR;\n        var cursor = connectionData.cursor;\n        process.env.NODE_ENV !== \"production\" ? warning(cursor != null && cursor !== '', 'ReactRelayPaginationContainer: Cannot `loadMore` without valid `%s` (got `%s`)', direction === FORWARD ? END_CURSOR : START_CURSOR, cursor) : void 0;\n        var paginatingVariables = {\n          count: pageSize,\n          cursor: cursor,\n          totalCount: totalCount\n        };\n        var fetch = _this._fetchPage(paginatingVariables, observer, options);\n        return {\n          dispose: fetch.unsubscribe\n        };\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      _this._isARequestInFlight = false;\n      _this._refetchSubscription = null;\n      _this._refetchVariables = null;\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        _this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      } else {\n        _this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer, _this._handleFragmentDataUpdate);\n      }\n      _this.state = {\n        data: _this._resolver.resolve(),\n        prevContext: relayContext,\n        contextForChildren: relayContext,\n        relayProp: _this._buildRelayProp(relayContext),\n        resolverGeneration: 0\n      };\n      _this._isUnmounted = false;\n      _this._hasFetched = false;\n      return _this;\n    }\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._isUnmounted = false;\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      }\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n        if (prevState.resolverGeneration !== this.state.resolverGeneration) {\n          this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n        } else {\n          this._rerenderIfStoreHasChanged();\n        }\n      }\n    }\n\n    /**\n     * When new props are received, read data for the new props and subscribe\n     * for updates. Props may be the same in which case previous data and\n     * subscriptions can be reused.\n     */;\n    _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      var _nextProps$__rootIsQu;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, this.props);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var prevRootVariables = getRootVariablesForFragments(fragments, this.props);\n      var nextRootVariables = getRootVariablesForFragments(fragments, nextProps);\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (relayContext.environment !== this.state.prevContext.environment || !areEqual(prevRootVariables, nextRootVariables) || !areEqual(prevIDs, nextIDs)) {\n        this._cleanup();\n        // Child containers rely on context.relay being mutated (for gDSFP).\n        if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n          this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        } else {\n          this._resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer, this._handleFragmentDataUpdate);\n        }\n        this.setState(function (prevState) {\n          return {\n            prevContext: relayContext,\n            contextForChildren: relayContext,\n            relayProp: _this2._buildRelayProp(relayContext),\n            resolverGeneration: prevState.resolverGeneration + 1\n          };\n        });\n      } else if (!this._hasFetched) {\n        this._resolver.setProps(nextProps);\n      }\n      var data = this._resolver.resolve();\n      if (data !== this.state.data) {\n        this.setState({\n          data: data\n        });\n      }\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._isUnmounted = true;\n      this._cleanup();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp || nextState.resolverGeneration !== this.state.resolverGeneration) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (nextState.prevContext.environment !== this.state.prevContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    _proto._buildRelayProp = function _buildRelayProp(relayContext) {\n      return {\n        hasMore: this._hasMore,\n        isLoading: this._isLoading,\n        loadMore: this._loadMore,\n        refetchConnection: this._refetchConnection,\n        environment: relayContext.environment\n      };\n    };\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var data = this.state.data;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = this._resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var data = this.state.data;\n      var maybeNewData = this._resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      this._resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._getConnectionData = function _getConnectionData() {\n      // Extract connection data and verify there are more edges to fetch\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        _ = _this$props.componentRef,\n        restProps = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      var props = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, restProps), this.state.data);\n      var connectionData = getConnectionFromProps(props);\n      if (connectionData == null) {\n        return null;\n      }\n      var _ConnectionInterface$2 = ConnectionInterface.get(),\n        EDGES = _ConnectionInterface$2.EDGES,\n        PAGE_INFO = _ConnectionInterface$2.PAGE_INFO,\n        HAS_NEXT_PAGE = _ConnectionInterface$2.HAS_NEXT_PAGE,\n        HAS_PREV_PAGE = _ConnectionInterface$2.HAS_PREV_PAGE,\n        END_CURSOR = _ConnectionInterface$2.END_CURSOR,\n        START_CURSOR = _ConnectionInterface$2.START_CURSOR;\n      !(typeof connectionData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return `null` or a plain object with %s and %s properties, got `%s`.', componentName, EDGES, PAGE_INFO, connectionData) : invariant(false) : void 0;\n      var edges = connectionData[EDGES];\n      var pageInfo = connectionData[PAGE_INFO];\n      if (edges == null || pageInfo == null) {\n        return null;\n      }\n      !Array.isArray(edges) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return an object with %s: Array, got `%s`.', componentName, EDGES, edges) : invariant(false) : void 0;\n      !(typeof pageInfo === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getConnectionFromProps()` in `%s`' + 'to return an object with %s: Object, got `%s`.', componentName, PAGE_INFO, pageInfo) : invariant(false) : void 0;\n      var hasMore = direction === FORWARD ? pageInfo[HAS_NEXT_PAGE] : pageInfo[HAS_PREV_PAGE];\n      var cursor = direction === FORWARD ? pageInfo[END_CURSOR] : pageInfo[START_CURSOR];\n      if (typeof hasMore !== 'boolean' || edges.length !== 0 && typeof cursor === 'undefined') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayPaginationContainer: Cannot paginate without %s fields in `%s`. ' + 'Be sure to fetch %s (got `%s`) and %s (got `%s`).', PAGE_INFO, componentName, direction === FORWARD ? HAS_NEXT_PAGE : HAS_PREV_PAGE, hasMore, direction === FORWARD ? END_CURSOR : START_CURSOR, cursor) : void 0;\n        return null;\n      }\n      return {\n        cursor: cursor,\n        edgeCount: edges.length,\n        hasMore: hasMore\n      };\n    };\n    _proto._getQueryFetcher = function _getQueryFetcher() {\n      if (!this._queryFetcher) {\n        this._queryFetcher = new ReactRelayQueryFetcher();\n      }\n      return this._queryFetcher;\n    };\n    _proto._canFetchPage = function _canFetchPage(method) {\n      if (this._isUnmounted) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayPaginationContainer: Unexpected call of `%s` ' + 'on unmounted container `%s`. It looks like some instances ' + 'of your container still trying to fetch data but they already ' + 'unmounted. Please make sure you clear all timers, intervals, async ' + 'calls, etc that may trigger `%s` call.', method, containerName, method) : void 0;\n        return false;\n      }\n      return true;\n    };\n    _proto._fetchPage = function _fetchPage(paginatingVariables, observer, options) {\n      var _this3 = this;\n      var _assertRelayContext = assertRelayContext(this.props.__relayContext),\n        environment = _assertRelayContext.environment;\n      var _this$props2 = this.props,\n        _ = _this$props2.componentRef,\n        __relayContext = _this$props2.__relayContext,\n        __rootIsQueryRenderer = _this$props2.__rootIsQueryRenderer,\n        restProps = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props2, _excluded2);\n      var props = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, restProps), this.state.data);\n      var fragmentVariables;\n      var rootVariables = getRootVariablesForFragments(fragments, restProps);\n      fragmentVariables = getVariablesFromObject(fragments, restProps);\n      fragmentVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, rootVariables), fragmentVariables), this._refetchVariables);\n      var fetchVariables = connectionConfig.getVariables(props, {\n        count: paginatingVariables.count,\n        cursor: paginatingVariables.cursor\n      }, fragmentVariables);\n      !(typeof fetchVariables === 'object' && fetchVariables !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayPaginationContainer: Expected `getVariables()` to ' + 'return an object, got `%s` in `%s`.', fetchVariables, componentName) : invariant(false) : void 0;\n      fetchVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, fetchVariables), this._refetchVariables);\n      fragmentVariables = (0, _objectSpread3[\"default\"])((0, _objectSpread3[\"default\"])({}, fetchVariables), fragmentVariables);\n      var cacheConfig = options ? {\n        force: !!options.force\n      } : undefined;\n      if (cacheConfig != null && (options === null || options === void 0 ? void 0 : options.metadata) != null) {\n        cacheConfig.metadata = options === null || options === void 0 ? void 0 : options.metadata;\n      }\n      var request = getRequest(connectionConfig.query);\n      var operation = createOperationDescriptor(request, fetchVariables, cacheConfig);\n      var refetchSubscription = null;\n      if (this._refetchSubscription) {\n        this._refetchSubscription.unsubscribe();\n      }\n      this._hasFetched = true;\n      var onNext = function onNext(payload, complete) {\n        var prevData = _this3._resolver.resolve();\n        _this3._resolver.setVariables(getFragmentVariables(fragmentVariables, paginatingVariables.totalCount), operation.request.node);\n        var nextData = _this3._resolver.resolve();\n\n        // Workaround slightly different handling for connection in different\n        // core implementations:\n        // - Classic core requires the count to be explicitly incremented\n        // - Modern core automatically appends new items, updating the count\n        //   isn't required to see new data.\n        //\n        // `setState` is only required if changing the variables would change the\n        // resolved data.\n        // TODO #14894725: remove PaginationContainer equal check\n        if (!areEqual(prevData, nextData)) {\n          _this3.setState({\n            data: nextData,\n            contextForChildren: {\n              environment: _this3.props.__relayContext.environment\n            }\n          }, complete);\n        } else {\n          complete();\n        }\n      };\n      var cleanup = function cleanup() {\n        if (_this3._refetchSubscription === refetchSubscription) {\n          _this3._refetchSubscription = null;\n          _this3._isARequestInFlight = false;\n        }\n      };\n      this._isARequestInFlight = true;\n      refetchSubscription = this._getQueryFetcher().execute({\n        environment: environment,\n        operation: operation,\n        preservePreviousReferences: true\n      }).mergeMap(function (payload) {\n        return Observable.create(function (sink) {\n          onNext(payload, function () {\n            sink.next(); // pass void to public observer's `next`\n            sink.complete();\n          });\n        });\n      })\n      // use do instead of finally so that observer's `complete` fires after cleanup\n      [\"do\"]({\n        error: cleanup,\n        complete: cleanup,\n        unsubscribe: cleanup\n      }).subscribe(observer || {});\n      this._refetchSubscription = this._isARequestInFlight ? refetchSubscription : null;\n      return refetchSubscription;\n    };\n    _proto._cleanup = function _cleanup() {\n      this._resolver.dispose();\n      this._refetchVariables = null;\n      this._hasFetched = false;\n      if (this._refetchSubscription) {\n        this._refetchSubscription.unsubscribe();\n        this._refetchSubscription = null;\n        this._isARequestInFlight = false;\n      }\n      if (this._queryFetcher) {\n        this._queryFetcher.dispose();\n      }\n    }\n\n    // $FlowFixMe[missing-local-annot]\n    ;\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props3 = this.props,\n        componentRef = _this$props3.componentRef,\n        __relayContext = _this$props3.__relayContext,\n        __rootIsQueryRenderer = _this$props3.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props3, _excluded3);\n      return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n        value: this.state.contextForChildren\n      }, /*#__PURE__*/React.createElement(Component, (0, _extends2[\"default\"])({}, props, this.state.data, {\n        ref: componentRef,\n        relay: this.state.relayProp\n      })));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec, connectionConfig) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, function (ComponentClass, fragments) {\n    return createContainerWithFragments(ComponentClass, fragments, connectionConfig);\n  });\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar invariant = require('invariant');\nvar _require = require('relay-runtime'),\n  fetchQuery = _require.__internal.fetchQuery,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  isRelayModernEnvironment = _require.isRelayModernEnvironment;\nvar ReactRelayQueryFetcher = /*#__PURE__*/function () {\n  function ReactRelayQueryFetcher(args) {\n    (0, _defineProperty2[\"default\"])(this, \"_selectionReferences\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_didFetchFinish\", false);\n    if (args != null) {\n      this._cacheSelectionReference = args.cacheSelectionReference;\n      this._selectionReferences = args.selectionReferences;\n    }\n  }\n  var _proto = ReactRelayQueryFetcher.prototype;\n  _proto.getSelectionReferences = function getSelectionReferences() {\n    return {\n      cacheSelectionReference: this._cacheSelectionReference,\n      selectionReferences: this._selectionReferences\n    };\n  };\n  _proto.lookupInStore = function lookupInStore(environment, operation, fetchPolicy) {\n    if (fetchPolicy === 'store-and-network' || fetchPolicy === 'store-or-network') {\n      if (environment.check(operation).status === 'available') {\n        this._retainCachedOperation(environment, operation);\n        return environment.lookup(operation.fragment);\n      }\n    }\n    return null;\n  };\n  _proto.getFetchResult = function getFetchResult() {\n    if (this._didFetchFinish) {\n      // We don't reset '_didFetchFinish' because another callback may be set\n      if (this._error != null) {\n        return {\n          error: this._error\n        };\n      } else if (this._snapshot != null) {\n        return {\n          snapshot: this._snapshot\n        };\n      }\n    } else {\n      return null;\n    }\n  };\n  _proto.execute = function execute(_ref) {\n    var _this = this;\n    var environment = _ref.environment,\n      operation = _ref.operation,\n      _ref$preservePrevious = _ref.preservePreviousReferences,\n      preservePreviousReferences = _ref$preservePrevious === void 0 ? false : _ref$preservePrevious;\n    var reference = environment.retain(operation);\n    var error = function error() {\n      // We may have partially fulfilled the request, so let the next request\n      // or the unmount dispose of the references.\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var complete = function complete() {\n      if (!preservePreviousReferences) {\n        _this.disposeSelectionReferences();\n      }\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var unsubscribe = function unsubscribe() {\n      // Let the next request or the unmount code dispose of the references.\n      // We may have partially fulfilled the request.\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    if (!isRelayModernEnvironment(environment)) {\n      return environment.execute({\n        operation: operation\n      })[\"do\"]({\n        error: error,\n        complete: complete,\n        unsubscribe: unsubscribe\n      });\n    }\n    return fetchQuery(environment, operation)[\"do\"]({\n      error: error,\n      complete: complete,\n      unsubscribe: unsubscribe\n    });\n  };\n  _proto.setOnDataChange = function setOnDataChange(onDataChange) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `setOnDataChange` should have been called after having called `fetch`') : invariant(false) : void 0;\n    if (typeof onDataChange === 'function') {\n      // Mutate the most recent fetchOptions in place,\n      // So that in-progress requests can access the updated callback.\n      this._fetchOptions.onDataChangeCallbacks = this._fetchOptions.onDataChangeCallbacks || [];\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n      if (this._didFetchFinish) {\n        // We don't reset '_didFetchFinish' because another callback may be set\n        if (this._error != null) {\n          onDataChange({\n            error: this._error\n          });\n        } else if (this._snapshot != null) {\n          onDataChange({\n            snapshot: this._snapshot\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * `fetch` fetches the data for the given operation.\n   * If a result is immediately available synchronously, it will be synchronously\n   * returned by this function.\n   *\n   * Otherwise, the fetched result will be communicated via the `onDataChange` callback.\n   * `onDataChange` will be called with the first result (**if it wasn't returned synchronously**),\n   * and then subsequently whenever the data changes.\n   */;\n  _proto.fetch = function fetch(fetchOptions, cacheConfigOverride) {\n    var _this2 = this;\n    var environment = fetchOptions.environment,\n      operation = fetchOptions.operation,\n      onDataChange = fetchOptions.onDataChange;\n    var fetchHasReturned = false;\n    var _error;\n    this.disposeRequest();\n    var oldOnDataChangeCallbacks = this._fetchOptions && this._fetchOptions.onDataChangeCallbacks;\n    this._fetchOptions = {\n      environment: environment,\n      onDataChangeCallbacks: oldOnDataChangeCallbacks || [],\n      operation: operation\n    };\n    if (onDataChange && this._fetchOptions.onDataChangeCallbacks.indexOf(onDataChange) === -1) {\n      // $FlowFixMe[incompatible-use]\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n    }\n    var operationOverride = cacheConfigOverride ? createOperationDescriptor(operation.request.node, operation.request.variables, cacheConfigOverride) : operation;\n    var request = this.execute({\n      environment: environment,\n      operation: operationOverride\n    })[\"finally\"](function () {\n      _this2._pendingRequest = null;\n    }).subscribe({\n      next: function next() {\n        // If we received a response,\n        // Make a note that to notify the callback when it's later added.\n        _this2._didFetchFinish = true;\n        _this2._error = null;\n\n        // Only notify of the first result if `next` is being called **asynchronously**\n        // (i.e. after `fetch` has returned).\n        _this2._onQueryDataAvailable({\n          notifyFirstResult: fetchHasReturned\n        });\n      },\n      error: function error(err) {\n        // If we received a response when we didn't have a change callback,\n        // Make a note that to notify the callback when it's later added.\n        _this2._didFetchFinish = true;\n        _this2._error = err;\n        _this2._snapshot = null;\n        var onDataChangeCallbacks = _this2._fetchOptions && _this2._fetchOptions.onDataChangeCallbacks;\n\n        // Only notify of error if `error` is being called **asynchronously**\n        // (i.e. after `fetch` has returned).\n        if (fetchHasReturned) {\n          if (onDataChangeCallbacks) {\n            onDataChangeCallbacks.forEach(function (onDataChange) {\n              onDataChange({\n                error: err\n              });\n            });\n          }\n        } else {\n          _error = err;\n        }\n      }\n    });\n    this._pendingRequest = {\n      dispose: function dispose() {\n        request.unsubscribe();\n      }\n    };\n    fetchHasReturned = true;\n    if (_error) {\n      throw _error;\n    }\n    return this._snapshot;\n  };\n  _proto.retry = function retry(cacheConfigOverride) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `retry` should be called after having called `fetch`') : invariant(false) : void 0;\n    return this.fetch({\n      environment: this._fetchOptions.environment,\n      operation: this._fetchOptions.operation,\n      onDataChange: null // If there are onDataChangeCallbacks they will be reused\n    }, cacheConfigOverride);\n  };\n  _proto.dispose = function dispose() {\n    this.disposeRequest();\n    this.disposeSelectionReferences();\n  };\n  _proto.disposeRequest = function disposeRequest() {\n    this._error = null;\n    this._snapshot = null;\n\n    // order is important, dispose of pendingFetch before selectionReferences\n    if (this._pendingRequest) {\n      this._pendingRequest.dispose();\n    }\n    if (this._rootSubscription) {\n      this._rootSubscription.dispose();\n      this._rootSubscription = null;\n    }\n  };\n  _proto._retainCachedOperation = function _retainCachedOperation(environment, operation) {\n    this._disposeCacheSelectionReference();\n    this._cacheSelectionReference = environment.retain(operation);\n  };\n  _proto._disposeCacheSelectionReference = function _disposeCacheSelectionReference() {\n    this._cacheSelectionReference && this._cacheSelectionReference.dispose();\n    this._cacheSelectionReference = null;\n  };\n  _proto.disposeSelectionReferences = function disposeSelectionReferences() {\n    this._disposeCacheSelectionReference();\n    this._selectionReferences.forEach(function (r) {\n      return r.dispose();\n    });\n    this._selectionReferences = [];\n  };\n  _proto._onQueryDataAvailable = function _onQueryDataAvailable(_ref2) {\n    var _this3 = this;\n    var notifyFirstResult = _ref2.notifyFirstResult;\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `_onQueryDataAvailable` should have been called after having called `fetch`') : invariant(false) : void 0;\n    var _this$_fetchOptions = this._fetchOptions,\n      environment = _this$_fetchOptions.environment,\n      onDataChangeCallbacks = _this$_fetchOptions.onDataChangeCallbacks,\n      operation = _this$_fetchOptions.operation;\n\n    // `_onQueryDataAvailable` can be called synchronously the first time and can be called\n    // multiple times by network layers that support data subscriptions.\n    // Wait until the first payload to call `onDataChange` and subscribe for data updates.\n    if (this._snapshot) {\n      return;\n    }\n    this._snapshot = environment.lookup(operation.fragment);\n\n    // Subscribe to changes in the data of the root fragment\n    this._rootSubscription = environment.subscribe(this._snapshot, function (snapshot) {\n      // Read from this._fetchOptions in case onDataChange() was lazily added.\n      if (_this3._fetchOptions != null) {\n        var maybeNewOnDataChangeCallbacks = _this3._fetchOptions.onDataChangeCallbacks;\n        if (Array.isArray(maybeNewOnDataChangeCallbacks)) {\n          maybeNewOnDataChangeCallbacks.forEach(function (onDataChange) {\n            return onDataChange({\n              snapshot: snapshot\n            });\n          });\n        }\n      }\n    });\n    if (this._snapshot && notifyFirstResult && Array.isArray(onDataChangeCallbacks)) {\n      var snapshot = this._snapshot;\n      onDataChangeCallbacks.forEach(function (onDataChange) {\n        return onDataChange({\n          snapshot: snapshot\n        });\n      });\n    }\n  };\n  return ReactRelayQueryFetcher;\n}();\nmodule.exports = ReactRelayQueryFetcher;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  RelayFeatureFlags = _require.RelayFeatureFlags;\nvar _require2 = require('relay-runtime'),\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  deepFreeze = _require2.deepFreeze,\n  getRequest = _require2.getRequest;\n/**\n * React may double-fire the constructor, and we call 'fetch' in the\n * constructor. If a request is already in flight from a previous call to the\n * constructor, just reuse the query fetcher and wait for the response.\n */\nvar requestCache = {};\nvar queryRendererContext = {\n  rootIsQueryRenderer: true\n};\n/**\n * @public\n *\n * Orchestrates fetching and rendering data for a single view or view hierarchy:\n * - Fetches the query/variables using the given network implementation.\n * - Normalizes the response(s) to that query, publishing them to the given\n *   store.\n * - Renders the pending/fail/success states with the provided render function.\n * - Subscribes for updates to the root data and re-renders with any changes.\n */\nvar ReactRelayQueryRenderer = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2[\"default\"])(ReactRelayQueryRenderer, _React$Component);\n  function ReactRelayQueryRenderer(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this;\n\n    // Callbacks are attached to the current instance and shared with static\n    // lifecyles by bundling with state. This is okay to do because the\n    // callbacks don't change in reaction to props. However we should not\n    // \"leak\" them before mounting (since we would be unable to clean up). For\n    // that reason, we define them as null initially and fill them in after\n    // mounting to avoid leaking memory.\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleDataChange\", function (params) {\n      var error = params.error == null ? null : params.error;\n      var snapshot = params.snapshot == null ? null : params.snapshot;\n      _this.setState(function (prevState) {\n        var prevRequestCacheKey = prevState.requestCacheKey;\n        if (prevRequestCacheKey) {\n          delete requestCache[prevRequestCacheKey];\n        }\n\n        // Don't update state if nothing has changed.\n        if (snapshot === prevState.snapshot && error === prevState.error) {\n          return null;\n        }\n        return {\n          renderProps: getRenderProps(error, snapshot, prevState.queryFetcher, prevState.retryCallbacks),\n          snapshot: snapshot,\n          requestCacheKey: null\n        };\n      });\n    });\n    var retryCallbacks = {\n      handleDataChange: null,\n      handleRetryAfterError: null\n    };\n    var queryFetcher;\n    var requestCacheKey;\n    if (props.query) {\n      var query = props.query;\n      var request = getRequest(query);\n      requestCacheKey = getRequestCacheKey(request.params, props.variables);\n      queryFetcher = requestCache[requestCacheKey] ? requestCache[requestCacheKey].queryFetcher : new ReactRelayQueryFetcher();\n    } else {\n      queryFetcher = new ReactRelayQueryFetcher();\n    }\n    _this._maybeHiddenOrFastRefresh = false;\n    _this.state = (0, _objectSpread2[\"default\"])({\n      prevPropsEnvironment: props.environment,\n      prevPropsVariables: props.variables,\n      prevQuery: props.query,\n      queryFetcher: queryFetcher,\n      retryCallbacks: retryCallbacks\n    }, fetchQueryAndComputeStateFromProps(props, queryFetcher, retryCallbacks, requestCacheKey));\n    return _this;\n  }\n  ReactRelayQueryRenderer.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.prevQuery !== nextProps.query || prevState.prevPropsEnvironment !== nextProps.environment || !areEqual(prevState.prevPropsVariables, nextProps.variables)) {\n      return resetQueryStateForUpdate(nextProps, prevState);\n    }\n    return null;\n  };\n  var _proto = ReactRelayQueryRenderer.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n    if (this._maybeHiddenOrFastRefresh === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current cached resource will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, so that the query is re-evaluated\n      // (and potentially cause a refetch).\n      this._maybeHiddenOrFastRefresh = false;\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState(function (prevState) {\n        var newState = resetQueryStateForUpdate(_this2.props, prevState);\n        var requestCacheKey = newState.requestCacheKey,\n          queryFetcher = newState.queryFetcher;\n        if (requestCacheKey != null && requestCache[requestCacheKey] != null) {\n          if (RelayFeatureFlags.ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION) {\n            var fetchResult = queryFetcher.getFetchResult();\n            if (fetchResult != null) {\n              var _fetchResult$snapshot, _fetchResult$error;\n              var snapshot = (_fetchResult$snapshot = fetchResult.snapshot) !== null && _fetchResult$snapshot !== void 0 ? _fetchResult$snapshot : null;\n              var error = (_fetchResult$error = fetchResult.error) !== null && _fetchResult$error !== void 0 ? _fetchResult$error : null;\n              var prevRequestCacheKey = prevState.requestCacheKey;\n              if (prevRequestCacheKey != null) {\n                delete requestCache[prevRequestCacheKey];\n              }\n              newState.renderProps = getRenderProps(error, snapshot, queryFetcher, prevState.retryCallbacks);\n              newState.snapshot = snapshot;\n              newState.requestCacheKey = null;\n            } else {\n              queryFetcher.setOnDataChange(_this2._handleDataChange);\n            }\n          } else {\n            queryFetcher.setOnDataChange(_this2._handleDataChange);\n          }\n        }\n        return newState;\n      });\n      return;\n    }\n    var _this$state = this.state,\n      retryCallbacks = _this$state.retryCallbacks,\n      queryFetcher = _this$state.queryFetcher,\n      requestCacheKey = _this$state.requestCacheKey;\n    // We don't need to cache the request after the component commits\n    if (requestCacheKey) {\n      delete requestCache[requestCacheKey];\n    }\n    retryCallbacks.handleDataChange = this._handleDataChange;\n    retryCallbacks.handleRetryAfterError = function (error) {\n      return _this2.setState(function (prevState) {\n        var prevRequestCacheKey = prevState.requestCacheKey;\n        if (prevRequestCacheKey) {\n          delete requestCache[prevRequestCacheKey];\n        }\n        return {\n          renderProps: getLoadingRenderProps(),\n          requestCacheKey: null\n        };\n      });\n    };\n\n    // Re-initialize the ReactRelayQueryFetcher with callbacks.\n    // If data has changed since constructions, this will re-render.\n    if (this.props.query) {\n      queryFetcher.setOnDataChange(this._handleDataChange);\n    }\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(_prevProps, prevState) {\n    // We don't need to cache the request after the component commits\n    var _this$state2 = this.state,\n      queryFetcher = _this$state2.queryFetcher,\n      requestCacheKey = _this$state2.requestCacheKey;\n    if (requestCacheKey) {\n      delete requestCache[requestCacheKey];\n      // HACK\n      delete this.state.requestCacheKey;\n    }\n    if (this.props.query && queryFetcher !== prevState.queryFetcher) {\n      queryFetcher.setOnDataChange(this._handleDataChange);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.state.queryFetcher.dispose();\n    this._maybeHiddenOrFastRefresh = true;\n  };\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.render !== this.props.render || nextState.renderProps !== this.state.renderProps;\n  };\n  _proto.render = function render() {\n    var _this$state3 = this.state,\n      renderProps = _this$state3.renderProps,\n      relayContext = _this$state3.relayContext;\n    // Note that the root fragment results in `renderProps.props` is already\n    // frozen by the store; this call is to freeze the renderProps object and\n    // error property if set.\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(renderProps);\n    }\n    return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n      value: relayContext\n    }, /*#__PURE__*/React.createElement(ReactRelayQueryRendererContext.Provider, {\n      value: queryRendererContext\n    }, this.props.render(renderProps)));\n  };\n  return ReactRelayQueryRenderer;\n}(React.Component);\nfunction getLoadingRenderProps() {\n  return {\n    error: null,\n    props: null,\n    // `props: null` indicates that the data is being fetched (i.e. loading)\n    retry: null\n  };\n}\nfunction getEmptyRenderProps() {\n  return {\n    error: null,\n    props: {},\n    // `props: {}` indicates no data available\n    retry: null\n  };\n}\nfunction getRenderProps(error, snapshot, queryFetcher, retryCallbacks) {\n  return {\n    error: error ? error : null,\n    props: snapshot ? snapshot.data : null,\n    retry: function retry(cacheConfigOverride) {\n      var syncSnapshot = queryFetcher.retry(cacheConfigOverride);\n      if (syncSnapshot && typeof retryCallbacks.handleDataChange === 'function') {\n        retryCallbacks.handleDataChange({\n          snapshot: syncSnapshot\n        });\n      } else if (error && typeof retryCallbacks.handleRetryAfterError === 'function') {\n        // If retrying after an error and no synchronous result available,\n        // reset the render props\n        retryCallbacks.handleRetryAfterError(error);\n      }\n    }\n  };\n}\nfunction getRequestCacheKey(request, variables) {\n  return JSON.stringify({\n    id: request.cacheID ? request.cacheID : request.id,\n    variables: variables\n  });\n}\nfunction resetQueryStateForUpdate(props, prevState) {\n  var query = props.query;\n  var prevSelectionReferences = prevState.queryFetcher.getSelectionReferences();\n  prevState.queryFetcher.disposeRequest();\n  var queryFetcher;\n  if (query) {\n    var request = getRequest(query);\n    var requestCacheKey = getRequestCacheKey(request.params, props.variables);\n    queryFetcher = requestCache[requestCacheKey] ? requestCache[requestCacheKey].queryFetcher : new ReactRelayQueryFetcher(prevSelectionReferences);\n  } else {\n    queryFetcher = new ReactRelayQueryFetcher(prevSelectionReferences);\n  }\n  return (0, _objectSpread2[\"default\"])({\n    prevQuery: props.query,\n    prevPropsEnvironment: props.environment,\n    prevPropsVariables: props.variables,\n    queryFetcher: queryFetcher\n  }, fetchQueryAndComputeStateFromProps(props, queryFetcher, prevState.retryCallbacks\n  // passing no requestCacheKey will cause it to be recalculated internally\n  // and we want the updated requestCacheKey, since variables may have changed\n  ));\n}\n\nfunction fetchQueryAndComputeStateFromProps(props, queryFetcher, retryCallbacks, requestCacheKey) {\n  var environment = props.environment,\n    query = props.query,\n    variables = props.variables,\n    cacheConfig = props.cacheConfig;\n  var genericEnvironment = environment;\n  if (query) {\n    var request = getRequest(query);\n    var operation = createOperationDescriptor(request, variables, cacheConfig);\n    var relayContext = {\n      environment: genericEnvironment\n    };\n    if (typeof requestCacheKey === 'string' && requestCache[requestCacheKey]) {\n      // This same request is already in flight.\n\n      var snapshot = requestCache[requestCacheKey].snapshot;\n      if (snapshot) {\n        // Use the cached response\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getRenderProps(null, snapshot, queryFetcher, retryCallbacks),\n          snapshot: snapshot,\n          requestCacheKey: requestCacheKey\n        };\n      } else {\n        // Render loading state\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getLoadingRenderProps(),\n          snapshot: null,\n          requestCacheKey: requestCacheKey\n        };\n      }\n    }\n    try {\n      var storeSnapshot = queryFetcher.lookupInStore(genericEnvironment, operation, props.fetchPolicy);\n      var querySnapshot = queryFetcher.fetch({\n        environment: genericEnvironment,\n        onDataChange: null,\n        operation: operation\n      });\n\n      // Use network data first, since it may be fresher\n      var _snapshot = querySnapshot || storeSnapshot;\n\n      // cache the request to avoid duplicate requests\n      requestCacheKey = requestCacheKey || getRequestCacheKey(request.params, props.variables);\n      requestCache[requestCacheKey] = {\n        queryFetcher: queryFetcher,\n        snapshot: _snapshot\n      };\n      if (!_snapshot) {\n        return {\n          error: null,\n          relayContext: relayContext,\n          renderProps: getLoadingRenderProps(),\n          snapshot: null,\n          requestCacheKey: requestCacheKey\n        };\n      }\n      return {\n        error: null,\n        relayContext: relayContext,\n        renderProps: getRenderProps(null, _snapshot, queryFetcher, retryCallbacks),\n        snapshot: _snapshot,\n        requestCacheKey: requestCacheKey\n      };\n    } catch (error) {\n      return {\n        error: error,\n        relayContext: relayContext,\n        renderProps: getRenderProps(error, null, queryFetcher, retryCallbacks),\n        snapshot: null,\n        requestCacheKey: requestCacheKey\n      };\n    }\n  } else {\n    queryFetcher.dispose();\n    var _relayContext = {\n      environment: genericEnvironment\n    };\n    return {\n      error: null,\n      relayContext: _relayContext,\n      renderProps: getEmptyRenderProps(),\n      requestCacheKey: null // if there is an error, don't cache request\n    };\n  }\n}\n\nmodule.exports = ReactRelayQueryRenderer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar React = require('react');\nmodule.exports = React.createContext({\n  rootIsQueryRenderer: false\n});","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _excluded = [\"componentRef\", \"__relayContext\", \"__rootIsQueryRenderer\"];\nvar buildReactRelayContainer = require('./buildReactRelayContainer');\nvar getRootVariablesForFragments = require('./getRootVariablesForFragments');\nvar _require = require('./ReactRelayContainerUtils'),\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryFetcher = require('./ReactRelayQueryFetcher');\nvar _require2 = require('./RelayContext'),\n  assertRelayContext = _require2.assertRelayContext;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar React = require('react');\nvar _require3 = require('relay-runtime'),\n  Observable = _require3.Observable,\n  createFragmentSpecResolver = _require3.createFragmentSpecResolver,\n  createOperationDescriptor = _require3.createOperationDescriptor,\n  getDataIDsFromObject = _require3.getDataIDsFromObject,\n  getRequest = _require3.getRequest,\n  getVariablesFromObject = _require3.getVariablesFromObject,\n  isScalarAndEqual = _require3.isScalarAndEqual;\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Composes a React component class, returning a new class that intercepts\n * props, resolving them with the provided fragments and subscribing for\n * updates.\n */\nfunction createContainerWithFragments(Component, fragments, taggedNode) {\n  var _class;\n  var containerName = getContainerName(Component);\n  return _class = /*#__PURE__*/function (_React$Component) {\n    (0, _inheritsLoose2[\"default\"])(_class, _React$Component);\n    // $FlowFixMe[missing-local-annot]\n\n    function _class(props) {\n      var _props$__rootIsQueryR, _this;\n      _this = _React$Component.call(this, props) || this;\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleFragmentDataUpdate\", function () {\n        var resolverFromThisUpdate = _this.state.resolver;\n        _this.setState(function (updatedState) {\n          return (\n            // If this event belongs to the current data source, update.\n            // Otherwise we should ignore it.\n            resolverFromThisUpdate === updatedState.resolver ? {\n              data: updatedState.resolver.resolve()\n            } : null\n          );\n        });\n      });\n      (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_refetch\", function (refetchVariables, renderVariables, observerOrCallback, options) {\n        if (_this._isUnmounted) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'ReactRelayRefetchContainer: Unexpected call of `refetch` ' + 'on unmounted container `%s`. It looks like some instances ' + 'of your container still trying to refetch the data but they already ' + 'unmounted. Please make sure you clear all timers, intervals, async ' + 'calls, etc that may trigger `refetch`.', containerName) : void 0;\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        var _assertRelayContext = assertRelayContext(_this.props.__relayContext),\n          environment = _assertRelayContext.environment;\n        var rootVariables = getRootVariablesForFragments(fragments, _this.props);\n        var fetchVariables = typeof refetchVariables === 'function' ? refetchVariables(_this._getFragmentVariables()) : refetchVariables;\n        fetchVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, rootVariables), fetchVariables);\n        var fragmentVariables = renderVariables ? (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, fetchVariables), renderVariables) : fetchVariables;\n        var cacheConfig = options ? {\n          force: !!options.force\n        } : undefined;\n        if (cacheConfig != null && (options === null || options === void 0 ? void 0 : options.metadata) != null) {\n          cacheConfig.metadata = options === null || options === void 0 ? void 0 : options.metadata;\n        }\n        var observer = typeof observerOrCallback === 'function' ? {\n          // callback is not exectued on complete or unsubscribe\n          // for backward compatibility\n          next: observerOrCallback,\n          error: observerOrCallback\n        } : observerOrCallback || {};\n        var query = getRequest(taggedNode);\n        var operation = createOperationDescriptor(query, fetchVariables, cacheConfig);\n\n        // TODO: T26288752 find a better way\n        _this.state.localVariables = fetchVariables;\n\n        // Cancel any previously running refetch.\n        _this._refetchSubscription && _this._refetchSubscription.unsubscribe();\n\n        // Declare refetchSubscription before assigning it in .start(), since\n        // synchronous completion may call callbacks .subscribe() returns.\n        var refetchSubscription;\n        var storeSnapshot = _this._getQueryFetcher().lookupInStore(environment, operation, options === null || options === void 0 ? void 0 : options.fetchPolicy);\n        if (storeSnapshot != null) {\n          _this.state.resolver.setVariables(fragmentVariables, operation.request.node);\n          _this.setState(function (latestState) {\n            return {\n              data: latestState.resolver.resolve(),\n              contextForChildren: {\n                environment: _this.props.__relayContext.environment\n              }\n            };\n          }, function () {\n            observer.next && observer.next();\n            observer.complete && observer.complete();\n          });\n          return {\n            dispose: function dispose() {}\n          };\n        }\n        _this._getQueryFetcher().execute({\n          environment: environment,\n          operation: operation,\n          // TODO (T26430099): Cleanup old references\n          preservePreviousReferences: true\n        }).mergeMap(function (response) {\n          _this.state.resolver.setVariables(fragmentVariables, operation.request.node);\n          return Observable.create(function (sink) {\n            return _this.setState(function (latestState) {\n              return {\n                data: latestState.resolver.resolve(),\n                contextForChildren: {\n                  environment: _this.props.__relayContext.environment\n                }\n              };\n            }, function () {\n              sink.next();\n              sink.complete();\n            });\n          });\n        })[\"finally\"](function () {\n          // Finalizing a refetch should only clear this._refetchSubscription\n          // if the finizing subscription is the most recent call.\n          if (_this._refetchSubscription === refetchSubscription) {\n            _this._refetchSubscription = null;\n          }\n        }).subscribe((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n          start: function start(subscription) {\n            _this._refetchSubscription = refetchSubscription = subscription;\n            observer.start && observer.start(subscription);\n          }\n        }));\n        return {\n          dispose: function dispose() {\n            refetchSubscription && refetchSubscription.unsubscribe();\n          }\n        };\n      });\n      var relayContext = assertRelayContext(props.__relayContext);\n      var rootIsQueryRenderer = (_props$__rootIsQueryR = props.__rootIsQueryRenderer) !== null && _props$__rootIsQueryR !== void 0 ? _props$__rootIsQueryR : false;\n      _this._refetchSubscription = null;\n      // Do not provide a subscription/callback here.\n      // It is possible for this render to be interrupted or aborted,\n      // In which case the subscription would cause a leak.\n      // We will add the subscription in componentDidMount().\n      var resolver = createFragmentSpecResolver(relayContext, containerName, fragments, props, rootIsQueryRenderer);\n      _this.state = {\n        data: resolver.resolve(),\n        localVariables: null,\n        prevProps: props,\n        prevPropsContext: relayContext,\n        contextForChildren: relayContext,\n        relayProp: getRelayProp(relayContext.environment, _this._refetch),\n        resolver: resolver\n      };\n      _this._isUnmounted = false;\n      return _this;\n    }\n    var _proto = _class.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n      this._isUnmounted = false;\n      this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (this.state.resolver !== prevState.resolver) {\n        prevState.resolver.dispose();\n        this._queryFetcher && this._queryFetcher.dispose();\n        this._refetchSubscription && this._refetchSubscription.unsubscribe();\n        this._subscribeToNewResolverAndRerenderIfStoreHasChanged();\n      } else {\n        this._rerenderIfStoreHasChanged();\n      }\n    }\n\n    /**\n     * When new props are received, read data for the new props and add it to\n     * state. Props may be the same in which case previous data can be reused.\n     */;\n    _class.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$__rootIsQu;\n      // Any props change could impact the query, so we mirror props in state.\n      // This is an unusual pattern, but necessary for this container usecase.\n      var prevProps = prevState.prevProps;\n      var relayContext = assertRelayContext(nextProps.__relayContext);\n      var rootIsQueryRenderer = (_nextProps$__rootIsQu = nextProps.__rootIsQueryRenderer) !== null && _nextProps$__rootIsQu !== void 0 ? _nextProps$__rootIsQu : false;\n      var prevIDs = getDataIDsFromObject(fragments, prevProps);\n      var nextIDs = getDataIDsFromObject(fragments, nextProps);\n      var prevRootVariables = getRootVariablesForFragments(fragments, prevProps);\n      var nextRootVariables = getRootVariablesForFragments(fragments, nextProps);\n      var resolver = prevState.resolver;\n\n      // If the environment has changed or props point to new records then\n      // previously fetched data and any pending fetches no longer apply:\n      // - Existing references are on the old environment.\n      // - Existing references are based on old variables.\n      // - Pending fetches are for the previous records.\n      if (prevState.prevPropsContext.environment !== relayContext.environment || !areEqual(prevRootVariables, nextRootVariables) || !areEqual(prevIDs, nextIDs)) {\n        // Do not provide a subscription/callback here.\n        // It is possible for this render to be interrupted or aborted,\n        // In which case the subscription would cause a leak.\n        // We will add the subscription in componentDidUpdate().\n        resolver = createFragmentSpecResolver(relayContext, containerName, fragments, nextProps, rootIsQueryRenderer);\n        return {\n          data: resolver.resolve(),\n          localVariables: null,\n          prevProps: nextProps,\n          prevPropsContext: relayContext,\n          contextForChildren: relayContext,\n          relayProp: getRelayProp(relayContext.environment, prevState.relayProp.refetch),\n          resolver: resolver\n        };\n      } else if (!prevState.localVariables) {\n        resolver.setProps(nextProps);\n      }\n      var data = resolver.resolve();\n      if (data !== prevState.data) {\n        return {\n          data: data,\n          prevProps: nextProps\n        };\n      }\n      return null;\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._isUnmounted = true;\n      this.state.resolver.dispose();\n      this._queryFetcher && this._queryFetcher.dispose();\n      this._refetchSubscription && this._refetchSubscription.unsubscribe();\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n      // Short-circuit if any Relay-related data has changed\n      if (nextState.data !== this.state.data || nextState.relayProp !== this.state.relayProp) {\n        return true;\n      }\n      // Otherwise, for convenience short-circuit if all non-Relay props\n      // are scalar and equal\n      var keys = Object.keys(nextProps);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        if (key === '__relayContext') {\n          if (this.state.prevPropsContext.environment !== nextState.prevPropsContext.environment) {\n            return true;\n          }\n        } else {\n          if (!fragments.hasOwnProperty(key) && !isScalarAndEqual(nextProps[key], this.props[key])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    _proto._rerenderIfStoreHasChanged = function _rerenderIfStoreHasChanged() {\n      var _this$state = this.state,\n        data = _this$state.data,\n        resolver = _this$state.resolver;\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      var maybeNewData = resolver.resolve();\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    };\n    _proto._subscribeToNewResolverAndRerenderIfStoreHasChanged = function _subscribeToNewResolverAndRerenderIfStoreHasChanged() {\n      var _this$state2 = this.state,\n        data = _this$state2.data,\n        resolver = _this$state2.resolver;\n      var maybeNewData = resolver.resolve();\n\n      // Event listeners are only safe to add during the commit phase,\n      // So they won't leak if render is interrupted or errors.\n      resolver.setCallback(this.props, this._handleFragmentDataUpdate);\n\n      // External values could change between render and commit.\n      // Check for this case, even though it requires an extra store read.\n      if (data !== maybeNewData) {\n        this.setState({\n          data: maybeNewData\n        });\n      }\n    }\n\n    /**\n     * Render new data for the existing props/context.\n     */;\n    _proto._getFragmentVariables = function _getFragmentVariables() {\n      return getVariablesFromObject(fragments, this.props);\n    };\n    _proto._getQueryFetcher = function _getQueryFetcher() {\n      if (!this._queryFetcher) {\n        this._queryFetcher = new ReactRelayQueryFetcher();\n      }\n      return this._queryFetcher;\n    };\n    // $FlowFixMe[missing-local-annot]\n    _proto.render = function render() {\n      // eslint-disable-next-line no-unused-vars\n      var _this$props = this.props,\n        componentRef = _this$props.componentRef,\n        __relayContext = _this$props.__relayContext,\n        __rootIsQueryRenderer = _this$props.__rootIsQueryRenderer,\n        props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_this$props, _excluded);\n      var _this$state3 = this.state,\n        relayProp = _this$state3.relayProp,\n        contextForChildren = _this$state3.contextForChildren;\n      return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n        value: contextForChildren\n      }, /*#__PURE__*/React.createElement(Component, (0, _extends2[\"default\"])({}, props, this.state.data, {\n        ref: componentRef,\n        relay: relayProp\n      })));\n    };\n    return _class;\n  }(React.Component), (0, _defineProperty2[\"default\"])(_class, \"displayName\", containerName), _class;\n}\nfunction getRelayProp(environment, refetch) {\n  return {\n    environment: environment,\n    refetch: refetch\n  };\n}\n\n/**\n * Wrap the basic `createContainer()` function with logic to adapt to the\n * `context.relay.environment` in which it is rendered. Specifically, the\n * extraction of the environment-specific version of fragments in the\n * `fragmentSpec` is memoized once per environment, rather than once per\n * instance of the container constructed/rendered.\n */\nfunction createContainer(Component, fragmentSpec, taggedNode) {\n  // $FlowFixMe[incompatible-return]\n  return buildReactRelayContainer(Component, fragmentSpec, function (ComponentClass, fragments) {\n    return createContainerWithFragments(ComponentClass, fragments, taggedNode);\n  });\n}\nmodule.exports = {\n  createContainer: createContainer\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar isRelayEnvironment = require('./isRelayEnvironment');\nvar invariant = require('invariant');\n\n/**\n * Asserts that the input is a matches the `RelayContext` type defined in\n * `RelayEnvironmentTypes` and returns it as that type.\n */\nfunction assertRelayContext(relay) {\n  !isRelayContext(relay) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayContext: Expected `context.relay` to be an object conforming to ' + 'the `RelayContext` interface, got `%s`.', relay) : invariant(false) : void 0;\n  return relay;\n}\n\n/**\n * Determine if the input is a plain object that matches the `RelayContext`\n * type defined in `RelayEnvironmentTypes`.\n */\nfunction isRelayContext(context) {\n  return typeof context === 'object' && context !== null && !Array.isArray(context) && isRelayEnvironment(context.environment);\n}\nmodule.exports = {\n  assertRelayContext: assertRelayContext,\n  isRelayContext: isRelayContext\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n\n/**\n * Fail fast if the user supplies invalid fragments as input.\n */\nfunction assertFragmentMap(componentName, fragmentSpec) {\n  !(fragmentSpec && typeof fragmentSpec === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'Expected a set of GraphQL fragments, got `%s` instead.', componentName, fragmentSpec) : invariant(false) : void 0;\n  for (var key in fragmentSpec) {\n    if (fragmentSpec.hasOwnProperty(key)) {\n      var fragment = fragmentSpec[key];\n      !(fragment && (typeof fragment === 'object' || typeof fragment === 'function')) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not create Relay Container for `%s`. ' + 'The value of fragment `%s` was expected to be a fragment, got `%s` instead.', componentName, key, fragment) : invariant(false) : void 0;\n    }\n  }\n}\nmodule.exports = assertFragmentMap;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar assertFragmentMap = require('./assertFragmentMap');\nvar _require = require('./ReactRelayContainerUtils'),\n  getComponentName = _require.getComponentName,\n  getContainerName = _require.getContainerName;\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayQueryRendererContext = require('./ReactRelayQueryRendererContext');\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment;\nvar useContext = React.useContext;\n/**\n * Helper to create the Relay HOCs with ref forwarding, setting the displayName\n * and reading the React context.\n */\nfunction buildReactRelayContainer(ComponentClass, fragmentSpec, createContainerWithFragments) {\n  // Sanity-check user-defined fragment input\n  var containerName = getContainerName(ComponentClass);\n  assertFragmentMap(getComponentName(ComponentClass), fragmentSpec);\n  var fragments = {};\n  for (var key in fragmentSpec) {\n    fragments[key] = getFragment(fragmentSpec[key]);\n  }\n  var Container = createContainerWithFragments(ComponentClass, fragments);\n  Container.displayName = containerName;\n  function forwardRef(props, ref) {\n    var _queryRendererContext;\n    var context = useContext(ReactRelayContext);\n    !(context != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '`%s` tried to render a context that was not valid this means that ' + '`%s` was rendered outside of a query renderer.', containerName, containerName) : invariant(false) : void 0;\n    var queryRendererContext = useContext(ReactRelayQueryRendererContext);\n    return /*#__PURE__*/React.createElement(Container, (0, _extends2[\"default\"])({}, props, {\n      __relayContext: context,\n      __rootIsQueryRenderer: (_queryRendererContext = queryRendererContext === null || queryRendererContext === void 0 ? void 0 : queryRendererContext.rootIsQueryRenderer) !== null && _queryRendererContext !== void 0 ? _queryRendererContext : false,\n      componentRef: props.componentRef || ref\n    }));\n  }\n  forwardRef.displayName = containerName;\n  var ForwardContainer = React.forwardRef(forwardRef);\n  if (process.env.NODE_ENV !== \"production\") {\n    // Used by RelayModernTestUtils\n    ForwardContainer.__ComponentClass = ComponentClass;\n    ForwardContainer.displayName = containerName;\n  }\n\n  // $FlowFixMe[incompatible-return]\n  return ForwardContainer;\n}\nmodule.exports = buildReactRelayContainer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('relay-runtime'),\n  getSelector = _require.getSelector;\nfunction getRootVariablesForFragments(fragments, props) {\n  var rootVariables = {};\n  // NOTE: For extra safety, we make sure the rootVariables include the\n  // variables from all owners in this fragmentSpec, even though they\n  // should all point to the same owner\n  Object.keys(fragments).forEach(function (key) {\n    var _selector$selectors$, _selector$selectors$2, _selector$owner$varia;\n    var fragmentNode = fragments[key];\n    var fragmentRef = props[key];\n    var selector = getSelector(fragmentNode, fragmentRef);\n    var fragmentOwnerVariables = selector != null && selector.kind === 'PluralReaderSelector' ? (_selector$selectors$ = (_selector$selectors$2 = selector.selectors[0]) === null || _selector$selectors$2 === void 0 ? void 0 : _selector$selectors$2.owner.variables) !== null && _selector$selectors$ !== void 0 ? _selector$selectors$ : {} : (_selector$owner$varia = selector === null || selector === void 0 ? void 0 : selector.owner.variables) !== null && _selector$owner$varia !== void 0 ? _selector$owner$varia : {};\n    rootVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, rootVariables), fragmentOwnerVariables);\n  });\n  return rootVariables;\n}\nmodule.exports = getRootVariablesForFragments;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./ReactRelayContext');\nvar ReactRelayFragmentContainer = require('./ReactRelayFragmentContainer');\nvar ReactRelayLocalQueryRenderer = require('./ReactRelayLocalQueryRenderer');\nvar ReactRelayPaginationContainer = require('./ReactRelayPaginationContainer');\nvar ReactRelayQueryRenderer = require('./ReactRelayQueryRenderer');\nvar ReactRelayRefetchContainer = require('./ReactRelayRefetchContainer');\nvar EntryPointContainer = require('./relay-hooks/EntryPointContainer.react');\nvar loadEntryPoint = require('./relay-hooks/loadEntryPoint');\nvar _require = require('./relay-hooks/loadQuery'),\n  loadQuery = _require.loadQuery;\nvar ProfilerContext = require('./relay-hooks/ProfilerContext');\nvar RelayEnvironmentProvider = require('./relay-hooks/RelayEnvironmentProvider');\nvar useClientQuery = require('./relay-hooks/useClientQuery');\nvar useEntryPointLoader = require('./relay-hooks/useEntryPointLoader');\nvar useFragment = require('./relay-hooks/useFragment');\nvar useLazyLoadQuery = require('./relay-hooks/useLazyLoadQuery');\nvar useMutation = require('./relay-hooks/useMutation');\nvar usePaginationFragment = require('./relay-hooks/usePaginationFragment');\nvar usePreloadedQuery = require('./relay-hooks/usePreloadedQuery');\nvar useQueryLoader = require('./relay-hooks/useQueryLoader');\nvar useRefetchableFragment = require('./relay-hooks/useRefetchableFragment');\nvar useRelayEnvironment = require('./relay-hooks/useRelayEnvironment');\nvar useSubscribeToInvalidationState = require('./relay-hooks/useSubscribeToInvalidationState');\nvar useSubscription = require('./relay-hooks/useSubscription');\nvar RelayRuntime = require('relay-runtime');\n/**\n * The public interface to react-relay.\n * Currently contains both Relay Hooks and legacy Container APIs.\n * Will eventually only export the interface from ./hooks.js.\n */\nmodule.exports = {\n  ConnectionHandler: RelayRuntime.ConnectionHandler,\n  QueryRenderer: ReactRelayQueryRenderer,\n  LocalQueryRenderer: ReactRelayLocalQueryRenderer,\n  MutationTypes: RelayRuntime.MutationTypes,\n  RangeOperations: RelayRuntime.RangeOperations,\n  ReactRelayContext: ReactRelayContext,\n  applyOptimisticMutation: RelayRuntime.applyOptimisticMutation,\n  commitLocalUpdate: RelayRuntime.commitLocalUpdate,\n  commitMutation: RelayRuntime.commitMutation,\n  createFragmentContainer: ReactRelayFragmentContainer.createContainer,\n  createPaginationContainer: ReactRelayPaginationContainer.createContainer,\n  createRefetchContainer: ReactRelayRefetchContainer.createContainer,\n  fetchQuery_DEPRECATED: RelayRuntime.fetchQuery_DEPRECATED,\n  graphql: RelayRuntime.graphql,\n  readInlineData: RelayRuntime.readInlineData,\n  requestSubscription: RelayRuntime.requestSubscription,\n  // Relay Hooks\n  EntryPointContainer: EntryPointContainer,\n  RelayEnvironmentProvider: RelayEnvironmentProvider,\n  ProfilerContext: ProfilerContext,\n  fetchQuery: RelayRuntime.fetchQuery,\n  loadQuery: loadQuery,\n  loadEntryPoint: loadEntryPoint,\n  useClientQuery: useClientQuery,\n  useFragment: useFragment,\n  useLazyLoadQuery: useLazyLoadQuery,\n  useEntryPointLoader: useEntryPointLoader,\n  useQueryLoader: useQueryLoader,\n  useMutation: useMutation,\n  usePaginationFragment: usePaginationFragment,\n  usePreloadedQuery: usePreloadedQuery,\n  useRefetchableFragment: useRefetchableFragment,\n  useRelayEnvironment: useRelayEnvironment,\n  useSubscribeToInvalidationState: useSubscribeToInvalidationState,\n  useSubscription: useSubscription\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayEnvironmentTypes`.\n */\nfunction isRelayEnvironment(environment) {\n  return typeof environment === 'object' && environment !== null &&\n  // TODO: add applyMutation/sendMutation once ready in both cores\n  typeof environment.check === 'function' && typeof environment.lookup === 'function' && typeof environment.retain === 'function' && typeof environment.execute === 'function' && typeof environment.subscribe === 'function';\n}\nmodule.exports = isRelayEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ProfilerContext = require('./ProfilerContext');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar _require = require('react'),\n  useContext = _require.useContext,\n  useEffect = _require.useEffect;\nvar warning = require(\"fbjs/lib/warning\");\nfunction EntryPointContainer(_ref) {\n  var entryPointReference = _ref.entryPointReference,\n    props = _ref.props;\n  process.env.NODE_ENV !== \"production\" ? warning(entryPointReference.isDisposed === false, '<EntryPointContainer>: Expected entryPointReference to not be disposed ' + 'yet. This is because disposing the entrypoint marks it for future garbage ' + 'collection, and as such may no longer be present in the Relay store. ' + 'In the future, this will become a hard error.') : void 0;\n  var getComponent = entryPointReference.getComponent,\n    queries = entryPointReference.queries,\n    entryPoints = entryPointReference.entryPoints,\n    extraProps = entryPointReference.extraProps,\n    rootModuleID = entryPointReference.rootModuleID;\n  var Component = getComponent();\n  var profilerContext = useContext(ProfilerContext);\n  var environment = useRelayEnvironment();\n  useEffect(function () {\n    environment.__log({\n      name: 'entrypoint.root.consume',\n      profilerContext: profilerContext,\n      rootModuleID: rootModuleID\n    });\n  }, [environment, profilerContext, rootModuleID]);\n  return /*#__PURE__*/React.createElement(Component, {\n    entryPoints: entryPoints,\n    extraProps: extraProps,\n    props: props,\n    queries: queries\n  });\n}\nmodule.exports = EntryPointContainer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar LRUCache = require('./LRUCache');\nvar _require = require('./QueryResource'),\n  getQueryResourceForEnvironment = _require.getQueryResourceForEnvironment;\nvar SuspenseResource = require('./SuspenseResource');\nvar invariant = require('invariant');\nvar _require2 = require('relay-runtime'),\n  _require2$__internal = _require2.__internal,\n  fetchQuery = _require2$__internal.fetchQuery,\n  getPromiseForActiveRequest = _require2$__internal.getPromiseForActiveRequest,\n  RelayFeatureFlags = _require2.RelayFeatureFlags,\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  getFragmentIdentifier = _require2.getFragmentIdentifier,\n  getPendingOperationsForFragment = _require2.getPendingOperationsForFragment,\n  getSelector = _require2.getSelector,\n  getVariablesFromFragment = _require2.getVariablesFromFragment,\n  handlePotentialSnapshotErrors = _require2.handlePotentialSnapshotErrors,\n  isPromise = _require2.isPromise,\n  recycleNodesInto = _require2.recycleNodesInto;\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\n// TODO: Fix to not rely on LRU. If the number of active fragments exceeds this\n// capacity, readSpec() will fail to find cached entries and break object\n// identity even if data hasn't changed.\nvar CACHE_CAPACITY = 1000000;\n\n// this is frozen so that users don't accidentally push data into the array\nvar CONSTANT_READONLY_EMPTY_ARRAY = Object.freeze([]);\nfunction isMissingData(snapshot) {\n  if (Array.isArray(snapshot)) {\n    return snapshot.some(function (s) {\n      return s.isMissingData;\n    });\n  }\n  return snapshot.isMissingData;\n}\nfunction hasMissingClientEdges(snapshot) {\n  var _snapshot$missingClie, _snapshot$missingClie2;\n  if (Array.isArray(snapshot)) {\n    return snapshot.some(function (s) {\n      var _s$missingClientEdges, _s$missingClientEdges2;\n      return ((_s$missingClientEdges = (_s$missingClientEdges2 = s.missingClientEdges) === null || _s$missingClientEdges2 === void 0 ? void 0 : _s$missingClientEdges2.length) !== null && _s$missingClientEdges !== void 0 ? _s$missingClientEdges : 0) > 0;\n    });\n  }\n  return ((_snapshot$missingClie = (_snapshot$missingClie2 = snapshot.missingClientEdges) === null || _snapshot$missingClie2 === void 0 ? void 0 : _snapshot$missingClie2.length) !== null && _snapshot$missingClie !== void 0 ? _snapshot$missingClie : 0) > 0;\n}\nfunction missingLiveResolverFields(snapshot) {\n  if (Array.isArray(snapshot)) {\n    return snapshot.map(function (s) {\n      return s.missingLiveResolverFields;\n    }).filter(Boolean).flat();\n  }\n  return snapshot.missingLiveResolverFields;\n}\nfunction singularOrPluralForEach(snapshot, f) {\n  if (Array.isArray(snapshot)) {\n    snapshot.forEach(f);\n  } else {\n    f(snapshot);\n  }\n}\nfunction getFragmentResult(cacheKey, snapshot, storeEpoch) {\n  if (Array.isArray(snapshot)) {\n    return {\n      cacheKey: cacheKey,\n      snapshot: snapshot,\n      data: snapshot.map(function (s) {\n        return s.data;\n      }),\n      isMissingData: isMissingData(snapshot),\n      storeEpoch: storeEpoch\n    };\n  }\n  return {\n    cacheKey: cacheKey,\n    snapshot: snapshot,\n    data: snapshot.data,\n    isMissingData: isMissingData(snapshot),\n    storeEpoch: storeEpoch\n  };\n}\n\n/**\n * The purpose of this cache is to allow information to be passed from an\n * initial read which suspends through to the commit that follows a subsequent\n * successful read. Specifically, the QueryResource result for the data fetch\n * is passed through so that that query can be retained on commit.\n */\nvar ClientEdgeQueryResultsCache = /*#__PURE__*/function () {\n  function ClientEdgeQueryResultsCache(environment) {\n    (0, _defineProperty2[\"default\"])(this, \"_cache\", new Map());\n    (0, _defineProperty2[\"default\"])(this, \"_retainCounts\", new Map());\n    this._environment = environment;\n  }\n  var _proto = ClientEdgeQueryResultsCache.prototype;\n  _proto.get = function get(fragmentIdentifier) {\n    var _this$_cache$get$, _this$_cache$get;\n    return (_this$_cache$get$ = (_this$_cache$get = this._cache.get(fragmentIdentifier)) === null || _this$_cache$get === void 0 ? void 0 : _this$_cache$get[0]) !== null && _this$_cache$get$ !== void 0 ? _this$_cache$get$ : undefined;\n  };\n  _proto.recordQueryResults = function recordQueryResults(fragmentIdentifier, value // may be mutated after being passed here\n  ) {\n    var _this = this;\n    var existing = this._cache.get(fragmentIdentifier);\n    if (!existing) {\n      var suspenseResource = new SuspenseResource(function () {\n        return _this._retain(fragmentIdentifier);\n      });\n      this._cache.set(fragmentIdentifier, [value, suspenseResource]);\n      suspenseResource.temporaryRetain(this._environment);\n    } else {\n      var existingResults = existing[0],\n        _suspenseResource = existing[1];\n      value.forEach(function (queryResult) {\n        existingResults.push(queryResult);\n      });\n      _suspenseResource.temporaryRetain(this._environment);\n    }\n  };\n  _proto._retain = function _retain(id) {\n    var _this2 = this;\n    var _this$_retainCounts$g;\n    var retainCount = ((_this$_retainCounts$g = this._retainCounts.get(id)) !== null && _this$_retainCounts$g !== void 0 ? _this$_retainCounts$g : 0) + 1;\n    this._retainCounts.set(id, retainCount);\n    return {\n      dispose: function dispose() {\n        var _this$_retainCounts$g2;\n        var newRetainCount = ((_this$_retainCounts$g2 = _this2._retainCounts.get(id)) !== null && _this$_retainCounts$g2 !== void 0 ? _this$_retainCounts$g2 : 0) - 1;\n        if (newRetainCount > 0) {\n          _this2._retainCounts.set(id, newRetainCount);\n        } else {\n          _this2._retainCounts[\"delete\"](id);\n          _this2._cache[\"delete\"](id);\n        }\n      }\n    };\n  };\n  return ClientEdgeQueryResultsCache;\n}();\nvar FragmentResourceImpl = /*#__PURE__*/function () {\n  function FragmentResourceImpl(environment) {\n    this._environment = environment;\n    this._cache = LRUCache.create(CACHE_CAPACITY);\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      this._clientEdgeQueryResultsCache = new ClientEdgeQueryResultsCache(environment);\n    }\n  }\n\n  /**\n   * This function should be called during a Component's render function,\n   * to read the data for a fragment, or suspend if the fragment is being\n   * fetched.\n   */\n  var _proto2 = FragmentResourceImpl.prototype;\n  _proto2.read = function read(fragmentNode, fragmentRef, componentDisplayName, fragmentKey) {\n    return this.readWithIdentifier(fragmentNode, fragmentRef, getFragmentIdentifier(fragmentNode, fragmentRef), componentDisplayName, fragmentKey);\n  }\n\n  /**\n   * Like `read`, but with a pre-computed fragmentIdentifier that should be\n   * equal to `getFragmentIdentifier(fragmentNode, fragmentRef)` from the\n   * arguments.\n   */;\n  _proto2.readWithIdentifier = function readWithIdentifier(fragmentNode, fragmentRef, fragmentIdentifier, componentDisplayName, fragmentKey) {\n    var _this3 = this;\n    var _fragmentNode$metadat, _fragmentNode$metadat2, _missingLiveResolverF2, _missingLiveResolverF3;\n    var environment = this._environment;\n\n    // If fragmentRef is null or undefined, pass it directly through.\n    // This is a convenience when consuming fragments via a HOC API, when the\n    // prop corresponding to the fragment ref might be passed as null.\n    if (fragmentRef == null) {\n      return {\n        cacheKey: fragmentIdentifier,\n        data: null,\n        isMissingData: false,\n        snapshot: null,\n        storeEpoch: 0\n      };\n    }\n    var storeEpoch = environment.getStore().getEpoch();\n\n    // If fragmentRef is plural, ensure that it is an array.\n    // If it's empty, return the empty array directly before doing any more work.\n    if ((fragmentNode === null || fragmentNode === void 0 ? void 0 : (_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) === true) {\n      !Array.isArray(fragmentRef) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected fragment pointer%s for fragment `%s` to be ' + 'an array, instead got `%s`. Remove `@relay(plural: true)` ' + 'from fragment `%s` to allow the prop to be an object.', fragmentKey != null ? \" for key `\".concat(fragmentKey, \"`\") : '', fragmentNode.name, typeof fragmentRef, fragmentNode.name) : invariant(false) : void 0;\n      if (fragmentRef.length === 0) {\n        return {\n          cacheKey: fragmentIdentifier,\n          data: CONSTANT_READONLY_EMPTY_ARRAY,\n          isMissingData: false,\n          snapshot: CONSTANT_READONLY_EMPTY_ARRAY,\n          storeEpoch: storeEpoch\n        };\n      }\n    }\n\n    // Now we actually attempt to read the fragment:\n\n    // 1. Check if there's a cached value for this fragment\n    var cachedValue = this._cache.get(fragmentIdentifier);\n    if (cachedValue != null) {\n      var _missingLiveResolverF;\n      if (cachedValue.kind === 'pending' && isPromise(cachedValue.promise)) {\n        environment.__log({\n          name: 'suspense.fragment',\n          data: cachedValue.result.data,\n          fragment: fragmentNode,\n          isRelayHooks: true,\n          isMissingData: cachedValue.result.isMissingData,\n          isPromiseCached: true,\n          pendingOperations: cachedValue.pendingOperations\n        });\n        throw cachedValue.promise;\n      }\n      if (cachedValue.kind === 'done' && cachedValue.result.snapshot && !((_missingLiveResolverF = missingLiveResolverFields(cachedValue.result.snapshot)) !== null && _missingLiveResolverF !== void 0 && _missingLiveResolverF.length)) {\n        this._throwOrLogErrorsInSnapshot(\n        // $FlowFixMe[incompatible-call]\n        cachedValue.result.snapshot);\n\n        // This cache gets populated directly whenever the store notifies us of\n        // an update. That mechanism does not check for missing data, or\n        // in-flight requests.\n        if (cachedValue.result.isMissingData) {\n          environment.__log({\n            name: 'fragmentresource.missing_data',\n            data: cachedValue.result.data,\n            fragment: fragmentNode,\n            isRelayHooks: true,\n            cached: true\n          });\n        }\n        return cachedValue.result;\n      }\n    }\n\n    // 2. If not, try reading the fragment from the Relay store.\n    // If the snapshot has data, return it and save it in cache\n    var fragmentSelector = getSelector(fragmentNode, fragmentRef);\n    !(fragmentSelector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to receive an object where `...%s` was spread, ' + 'but the fragment reference was not found`. This is most ' + 'likely the result of:\\n' + \"- Forgetting to spread `%s` in `%s`'s parent's fragment.\\n\" + '- Conditionally fetching `%s` but unconditionally passing %s prop ' + 'to `%s`. If the parent fragment only fetches the fragment conditionally ' + '- with e.g. `@include`, `@skip`, or inside a `... on SomeType { }` ' + 'spread  - then the fragment reference will not exist. ' + 'In this case, pass `null` if the conditions for evaluating the ' + 'fragment are not met (e.g. if the `@include(if)` value is false.)', fragmentNode.name, fragmentNode.name, componentDisplayName, fragmentNode.name, fragmentKey == null ? 'a fragment reference' : \"the `\".concat(fragmentKey, \"`\"), componentDisplayName) : invariant(false) : void 0;\n    var snapshot = fragmentSelector.kind === 'PluralReaderSelector' ? fragmentSelector.selectors.map(function (s) {\n      return environment.lookup(s);\n    }) : environment.lookup(fragmentSelector);\n    var fragmentResult = getFragmentResult(fragmentIdentifier, snapshot, storeEpoch);\n    if (!fragmentResult.isMissingData) {\n      this._throwOrLogErrorsInSnapshot(snapshot);\n      this._cache.set(fragmentIdentifier, {\n        kind: 'done',\n        result: fragmentResult\n      });\n      return fragmentResult;\n    }\n\n    // 3. If we don't have data in the store, there's two cases where we should\n    // suspend to await the data: First if any client edges were traversed where\n    // the destination record was missing data; in that case we initiate a query\n    // here to fetch the missing data. Second, there may already be a request\n    // in flight for the fragment's parent query, or for another operation that\n    //  may affect the parent's query data, such as a mutation or subscription.\n    // For any of these cases we can get a promise, which we will cache and\n    // suspend on.\n\n    // First, initiate a query for any client edges that were missing data:\n    var clientEdgeRequests = null;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && ((_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.hasClientEdges) === true && hasMissingClientEdges(snapshot)) {\n      clientEdgeRequests = [];\n      var queryResource = getQueryResourceForEnvironment(this._environment);\n      var queryResults = [];\n      singularOrPluralForEach(snapshot, function (snap) {\n        var _snap$missingClientEd;\n        (_snap$missingClientEd = snap.missingClientEdges) === null || _snap$missingClientEd === void 0 ? void 0 : _snap$missingClientEd.forEach(function (_ref) {\n          var _clientEdgeRequests;\n          var request = _ref.request,\n            clientEdgeDestinationID = _ref.clientEdgeDestinationID;\n          var _this3$_performClient = _this3._performClientEdgeQuery(queryResource, fragmentNode, fragmentRef, request, clientEdgeDestinationID),\n            queryResult = _this3$_performClient.queryResult,\n            requestDescriptor = _this3$_performClient.requestDescriptor;\n          queryResults.push(queryResult);\n          (_clientEdgeRequests = clientEdgeRequests) === null || _clientEdgeRequests === void 0 ? void 0 : _clientEdgeRequests.push(requestDescriptor);\n        });\n      });\n      // Store the query so that it can be retained when our own fragment is\n      // subscribed to. This merges with any existing query results:\n      !(this._clientEdgeQueryResultsCache != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client edge query result cache should exist when ENABLE_CLIENT_EDGES is on.') : invariant(false) : void 0;\n      this._clientEdgeQueryResultsCache.recordQueryResults(fragmentIdentifier, queryResults);\n    }\n    var clientEdgePromises = [];\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && clientEdgeRequests) {\n      clientEdgePromises = clientEdgeRequests.map(function (request) {\n        return getPromiseForActiveRequest(_this3._environment, request);\n      }).filter(Boolean);\n    }\n\n    // Finally look for operations in flight for our parent query:\n    var fragmentOwner = fragmentSelector.kind === 'PluralReaderSelector' ? fragmentSelector.selectors[0].owner : fragmentSelector.owner;\n    var parentQueryPromiseResult = this._getAndSavePromiseForFragmentRequestInFlight(fragmentIdentifier, fragmentNode, fragmentOwner, fragmentResult);\n    var parentQueryPromiseResultPromise = parentQueryPromiseResult === null || parentQueryPromiseResult === void 0 ? void 0 : parentQueryPromiseResult.promise; // for refinement\n    var missingResolverFieldPromises = (_missingLiveResolverF2 = (_missingLiveResolverF3 = missingLiveResolverFields(snapshot)) === null || _missingLiveResolverF3 === void 0 ? void 0 : _missingLiveResolverF3.map(function (_ref2) {\n      var liveStateID = _ref2.liveStateID;\n      var store = environment.getStore();\n\n      // $FlowFixMe[prop-missing] This is expected to be a LiveResolverStore\n      return store.getLiveResolverPromise(liveStateID);\n    })) !== null && _missingLiveResolverF2 !== void 0 ? _missingLiveResolverF2 : [];\n    if (clientEdgePromises.length || missingResolverFieldPromises.length || isPromise(parentQueryPromiseResultPromise)) {\n      var _parentQueryPromiseRe, _clientEdgeRequests2;\n      environment.__log({\n        name: 'suspense.fragment',\n        data: fragmentResult.data,\n        fragment: fragmentNode,\n        isRelayHooks: true,\n        isPromiseCached: false,\n        isMissingData: fragmentResult.isMissingData,\n        // TODO! Attach information here about missing live resolver fields\n        pendingOperations: [].concat((0, _toConsumableArray2[\"default\"])((_parentQueryPromiseRe = parentQueryPromiseResult === null || parentQueryPromiseResult === void 0 ? void 0 : parentQueryPromiseResult.pendingOperations) !== null && _parentQueryPromiseRe !== void 0 ? _parentQueryPromiseRe : []), (0, _toConsumableArray2[\"default\"])((_clientEdgeRequests2 = clientEdgeRequests) !== null && _clientEdgeRequests2 !== void 0 ? _clientEdgeRequests2 : []))\n      });\n      var promises = [];\n      if (clientEdgePromises.length > 0) {\n        promises = promises.concat(clientEdgePromises);\n      }\n      if (missingResolverFieldPromises.length > 0) {\n        promises = promises.concat(missingResolverFieldPromises);\n      }\n      if (promises.length > 0) {\n        if (parentQueryPromiseResultPromise) {\n          promises.push(parentQueryPromiseResultPromise);\n        }\n        throw Promise.all(promises);\n      }\n\n      // Note: we are re-throwing the `parentQueryPromiseResultPromise` here,\n      // because some of our suspense-related code is relying on the instance equality\n      // of thrown promises. See FragmentResource-test.js\n      if (parentQueryPromiseResultPromise) {\n        throw parentQueryPromiseResultPromise;\n      }\n    }\n    this._throwOrLogErrorsInSnapshot(snapshot);\n\n    // At this point, there's nothing we can do. We don't have all the expected\n    // data, but there's no indication the missing data will be fulfilled. So we\n    // choose to return potentially non-typesafe data. The data returned here\n    // might not match the generated types for this fragment/operation.\n    environment.__log({\n      name: 'fragmentresource.missing_data',\n      data: fragmentResult.data,\n      fragment: fragmentNode,\n      isRelayHooks: true,\n      cached: false\n    });\n    return getFragmentResult(fragmentIdentifier, snapshot, storeEpoch);\n  };\n  _proto2._performClientEdgeQuery = function _performClientEdgeQuery(queryResource, fragmentNode, fragmentRef, request, clientEdgeDestinationID) {\n    var originalVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n    var variables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, originalVariables), {}, {\n      id: clientEdgeDestinationID // TODO should be a reserved name\n    });\n\n    var operation = createOperationDescriptor(request, variables, {} //  TODO cacheConfig should probably inherent from parent operation\n    );\n\n    var fetchObservable = fetchQuery(this._environment, operation);\n    var queryResult = queryResource.prepare(operation, fetchObservable\n    // TODO should inherent render policy etc. from parent operation\n    );\n\n    return {\n      requestDescriptor: operation.request,\n      queryResult: queryResult\n    };\n  };\n  _proto2._throwOrLogErrorsInSnapshot = function _throwOrLogErrorsInSnapshot(snapshot) {\n    var _this4 = this;\n    if (Array.isArray(snapshot)) {\n      snapshot.forEach(function (s) {\n        handlePotentialSnapshotErrors(_this4._environment, s.missingRequiredFields, s.relayResolverErrors);\n      });\n    } else {\n      handlePotentialSnapshotErrors(this._environment, snapshot.missingRequiredFields, snapshot.relayResolverErrors);\n    }\n  };\n  _proto2.readSpec = function readSpec(fragmentNodes, fragmentRefs, componentDisplayName) {\n    var result = {};\n    for (var key in fragmentNodes) {\n      result[key] = this.read(fragmentNodes[key], fragmentRefs[key], componentDisplayName, key);\n    }\n    return result;\n  };\n  _proto2.subscribe = function subscribe(fragmentResult, callback) {\n    var _this5 = this;\n    var environment = this._environment;\n    var cacheKey = fragmentResult.cacheKey;\n    var renderedSnapshot = fragmentResult.snapshot;\n    if (!renderedSnapshot) {\n      return {\n        dispose: function dispose() {}\n      };\n    }\n\n    // 1. Check for any updates missed during render phase\n    // TODO(T44066760): More efficiently detect if we missed an update\n    var _this$checkMissedUpda = this.checkMissedUpdates(fragmentResult),\n      didMissUpdates = _this$checkMissedUpda[0],\n      currentSnapshot = _this$checkMissedUpda[1];\n\n    // 2. If an update was missed, notify the component so it updates with\n    // the latest data.\n    if (didMissUpdates) {\n      callback();\n    }\n\n    // 3. Establish subscriptions on the snapshot(s)\n    var disposables = [];\n    if (Array.isArray(renderedSnapshot)) {\n      !Array.isArray(currentSnapshot) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected snapshots to be plural. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n      currentSnapshot.forEach(function (snapshot, idx) {\n        disposables.push(environment.subscribe(snapshot, function (latestSnapshot) {\n          var storeEpoch = environment.getStore().getEpoch();\n          _this5._updatePluralSnapshot(cacheKey, currentSnapshot, latestSnapshot, idx, storeEpoch);\n          callback();\n        }));\n      });\n    } else {\n      !(currentSnapshot != null && !Array.isArray(currentSnapshot)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected snapshot to be singular. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n      disposables.push(environment.subscribe(currentSnapshot, function (latestSnapshot) {\n        var storeEpoch = environment.getStore().getEpoch();\n        _this5._cache.set(cacheKey, {\n          kind: 'done',\n          result: getFragmentResult(cacheKey, latestSnapshot, storeEpoch)\n        });\n        callback();\n      }));\n    }\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      var _this$_clientEdgeQuer, _this$_clientEdgeQuer2;\n      var clientEdgeQueryResults = (_this$_clientEdgeQuer = (_this$_clientEdgeQuer2 = this._clientEdgeQueryResultsCache) === null || _this$_clientEdgeQuer2 === void 0 ? void 0 : _this$_clientEdgeQuer2.get(cacheKey)) !== null && _this$_clientEdgeQuer !== void 0 ? _this$_clientEdgeQuer : undefined;\n      if (clientEdgeQueryResults !== null && clientEdgeQueryResults !== void 0 && clientEdgeQueryResults.length) {\n        var queryResource = getQueryResourceForEnvironment(this._environment);\n        clientEdgeQueryResults.forEach(function (queryResult) {\n          disposables.push(queryResource.retain(queryResult));\n        });\n      }\n    }\n    return {\n      dispose: function dispose() {\n        disposables.forEach(function (s) {\n          return s.dispose();\n        });\n        _this5._cache[\"delete\"](cacheKey);\n      }\n    };\n  };\n  _proto2.subscribeSpec = function subscribeSpec(fragmentResults, callback) {\n    var _this6 = this;\n    var disposables = Object.keys(fragmentResults).map(function (key) {\n      return _this6.subscribe(fragmentResults[key], callback);\n    });\n    return {\n      dispose: function dispose() {\n        disposables.forEach(function (disposable) {\n          disposable.dispose();\n        });\n      }\n    };\n  };\n  _proto2.checkMissedUpdates = function checkMissedUpdates(fragmentResult) {\n    var environment = this._environment;\n    var renderedSnapshot = fragmentResult.snapshot;\n    if (!renderedSnapshot) {\n      return [false, null];\n    }\n    var storeEpoch = null;\n    // Bail out if the store hasn't been written since last read\n    storeEpoch = environment.getStore().getEpoch();\n    if (fragmentResult.storeEpoch === storeEpoch) {\n      return [false, fragmentResult.snapshot];\n    }\n    var cacheKey = fragmentResult.cacheKey;\n    if (Array.isArray(renderedSnapshot)) {\n      var didMissUpdates = false;\n      var currentSnapshots = [];\n      renderedSnapshot.forEach(function (snapshot, idx) {\n        var currentSnapshot = environment.lookup(snapshot.selector);\n        var renderData = snapshot.data;\n        var currentData = currentSnapshot.data;\n        var updatedData = recycleNodesInto(renderData, currentData);\n        if (updatedData !== renderData) {\n          currentSnapshot = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, currentSnapshot), {}, {\n            data: updatedData\n          });\n          didMissUpdates = true;\n        }\n        currentSnapshots[idx] = currentSnapshot;\n      });\n      // Only update the cache when the data is changed to avoid\n      // returning different `data` instances\n      if (didMissUpdates) {\n        this._cache.set(cacheKey, {\n          kind: 'done',\n          result: getFragmentResult(cacheKey, currentSnapshots, storeEpoch)\n        });\n      }\n      return [didMissUpdates, currentSnapshots];\n    }\n    var currentSnapshot = environment.lookup(renderedSnapshot.selector);\n    var renderData = renderedSnapshot.data;\n    var currentData = currentSnapshot.data;\n    var updatedData = recycleNodesInto(renderData, currentData);\n    var updatedCurrentSnapshot = {\n      data: updatedData,\n      isMissingData: currentSnapshot.isMissingData,\n      missingClientEdges: currentSnapshot.missingClientEdges,\n      missingLiveResolverFields: currentSnapshot.missingLiveResolverFields,\n      seenRecords: currentSnapshot.seenRecords,\n      selector: currentSnapshot.selector,\n      missingRequiredFields: currentSnapshot.missingRequiredFields,\n      relayResolverErrors: currentSnapshot.relayResolverErrors\n    };\n    if (updatedData !== renderData) {\n      this._cache.set(cacheKey, {\n        kind: 'done',\n        result: getFragmentResult(cacheKey, updatedCurrentSnapshot, storeEpoch)\n      });\n    }\n    return [updatedData !== renderData, updatedCurrentSnapshot];\n  };\n  _proto2.checkMissedUpdatesSpec = function checkMissedUpdatesSpec(fragmentResults) {\n    var _this7 = this;\n    return Object.keys(fragmentResults).some(function (key) {\n      return _this7.checkMissedUpdates(fragmentResults[key])[0];\n    });\n  };\n  _proto2._getAndSavePromiseForFragmentRequestInFlight = function _getAndSavePromiseForFragmentRequestInFlight(cacheKey, fragmentNode, fragmentOwner, fragmentResult) {\n    var _this8 = this;\n    var pendingOperationsResult = getPendingOperationsForFragment(this._environment, fragmentNode, fragmentOwner);\n    if (pendingOperationsResult == null) {\n      return null;\n    }\n\n    // When the Promise for the request resolves, we need to make sure to\n    // update the cache with the latest data available in the store before\n    // resolving the Promise\n    var networkPromise = pendingOperationsResult.promise;\n    var pendingOperations = pendingOperationsResult.pendingOperations;\n    var promise = networkPromise.then(function () {\n      _this8._cache[\"delete\"](cacheKey);\n    })[\"catch\"](function (error) {\n      _this8._cache[\"delete\"](cacheKey);\n    });\n    // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n    promise.displayName = networkPromise.displayName;\n    this._cache.set(cacheKey, {\n      kind: 'pending',\n      pendingOperations: pendingOperations,\n      promise: promise,\n      result: fragmentResult\n    });\n    return {\n      promise: promise,\n      pendingOperations: pendingOperations\n    };\n  };\n  _proto2._updatePluralSnapshot = function _updatePluralSnapshot(cacheKey, baseSnapshots, latestSnapshot, idx, storeEpoch) {\n    var _currentFragmentResul;\n    var currentFragmentResult = this._cache.get(cacheKey);\n    if (isPromise(currentFragmentResult)) {\n      reportInvalidCachedData(latestSnapshot.selector.node.name);\n      return;\n    }\n    var currentSnapshot = currentFragmentResult === null || currentFragmentResult === void 0 ? void 0 : (_currentFragmentResul = currentFragmentResult.result) === null || _currentFragmentResul === void 0 ? void 0 : _currentFragmentResul.snapshot;\n    if (currentSnapshot && !Array.isArray(currentSnapshot)) {\n      reportInvalidCachedData(latestSnapshot.selector.node.name);\n      return;\n    }\n    var nextSnapshots = currentSnapshot ? (0, _toConsumableArray2[\"default\"])(currentSnapshot) : (0, _toConsumableArray2[\"default\"])(baseSnapshots);\n    nextSnapshots[idx] = latestSnapshot;\n    this._cache.set(cacheKey, {\n      kind: 'done',\n      result: getFragmentResult(cacheKey, nextSnapshots, storeEpoch)\n    });\n  };\n  return FragmentResourceImpl;\n}();\nfunction reportInvalidCachedData(nodeName) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to find cached data for plural fragment `%s` when ' + 'receiving a subscription. ' + \"If you're seeing this, this is likely a bug in Relay.\", nodeName) : invariant(false) : void 0;\n}\nfunction createFragmentResource(environment) {\n  return new FragmentResourceImpl(environment);\n}\nvar dataResources = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction getFragmentResourceForEnvironment(environment) {\n  var cached = dataResources.get(environment);\n  if (cached) {\n    return cached;\n  }\n  var newDataResource = createFragmentResource(environment);\n  dataResources.set(environment, newDataResource);\n  return newDataResource;\n}\nmodule.exports = {\n  createFragmentResource: createFragmentResource,\n  getFragmentResourceForEnvironment: getFragmentResourceForEnvironment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar warning = require(\"fbjs/lib/warning\");\nvar implementation = null;\nfunction inject(impl) {\n  process.env.NODE_ENV !== \"production\" ? warning(implementation !== null, 'Relay HooksImplementation was injected twice.') : void 0;\n  implementation = impl;\n}\nfunction get() {\n  return implementation;\n}\nmodule.exports = {\n  inject: inject,\n  get: get\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n/**\n * JS maps (both plain objects and Map) maintain key insertion\n * order, which means there is an easy way to simulate LRU behavior\n * that should also perform quite well:\n *\n * To insert a new value, first delete the key from the inner _map,\n * then _map.set(k, v). By deleting and reinserting, you ensure that the\n * map sees the key as the last inserted key.\n *\n * Get does the same: if the key is present, delete and reinsert it.\n */\nvar LRUCache = /*#__PURE__*/function () {\n  function LRUCache(capacity) {\n    this._capacity = capacity;\n    !(this._capacity > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'LRUCache: Unable to create instance of cache with zero or negative capacity.') : invariant(false) : void 0;\n    this._map = new Map();\n  }\n  var _proto = LRUCache.prototype;\n  _proto.set = function set(key, value) {\n    this._map[\"delete\"](key);\n    this._map.set(key, value);\n    if (this._map.size > this._capacity) {\n      var firstKey = this._map.keys().next();\n      if (!firstKey.done) {\n        this._map[\"delete\"](firstKey.value);\n      }\n    }\n  };\n  _proto.get = function get(key) {\n    var value = this._map.get(key);\n    if (value != null) {\n      this._map[\"delete\"](key);\n      this._map.set(key, value);\n    }\n    return value;\n  };\n  _proto.has = function has(key) {\n    return this._map.has(key);\n  };\n  _proto[\"delete\"] = function _delete(key) {\n    this._map[\"delete\"](key);\n  };\n  _proto.size = function size() {\n    return this._map.size;\n  };\n  _proto.capacity = function capacity() {\n    return this._capacity - this._map.size;\n  };\n  _proto.clear = function clear() {\n    this._map.clear();\n  };\n  return LRUCache;\n}();\nfunction create(capacity) {\n  return new LRUCache(capacity);\n}\nmodule.exports = {\n  create: create\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n// This contextual profiler can be used to wrap a react sub-tree. It will bind\n// the RelayProfiler during the render phase of these components. Allows\n// collecting metrics for a specific part of your application.\n\n'use strict';\n\nvar React = require('react');\nvar ProfilerContext = React.createContext({\n  wrapPrepareQueryResource: function wrapPrepareQueryResource(cb) {\n    return cb();\n  }\n});\nmodule.exports = ProfilerContext;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar LRUCache = require('./LRUCache');\nvar SuspenseResource = require('./SuspenseResource');\nvar invariant = require('invariant');\nvar _require = require('relay-runtime'),\n  isPromise = _require.isPromise;\nvar warning = require(\"fbjs/lib/warning\");\nvar CACHE_CAPACITY = 1000;\nvar DEFAULT_FETCH_POLICY = 'store-or-network';\nvar DEFAULT_LIVE_FETCH_POLICY = 'store-and-network';\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nfunction operationIsLiveQuery(operation) {\n  return operation.request.node.params.metadata.live !== undefined;\n}\nfunction getQueryCacheIdentifier(environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker) {\n  var fetchPolicy = maybeFetchPolicy !== null && maybeFetchPolicy !== void 0 ? maybeFetchPolicy : operationIsLiveQuery(operation) ? DEFAULT_LIVE_FETCH_POLICY : DEFAULT_FETCH_POLICY;\n  var renderPolicy = maybeRenderPolicy !== null && maybeRenderPolicy !== void 0 ? maybeRenderPolicy : environment.UNSTABLE_getDefaultRenderPolicy();\n  var cacheIdentifier = \"\".concat(fetchPolicy, \"-\").concat(renderPolicy, \"-\").concat(operation.request.identifier);\n  if (cacheBreaker != null) {\n    return \"\".concat(cacheIdentifier, \"-\").concat(cacheBreaker);\n  }\n  return cacheIdentifier;\n}\nfunction getQueryResult(operation, cacheIdentifier) {\n  var rootFragmentRef = {\n    __id: operation.fragment.dataID,\n    __fragments: (0, _defineProperty2[\"default\"])({}, operation.fragment.node.name, operation.request.variables),\n    __fragmentOwner: operation.request\n  };\n  return {\n    cacheIdentifier: cacheIdentifier,\n    fragmentNode: operation.request.node.fragment,\n    fragmentRef: rootFragmentRef,\n    operation: operation\n  };\n}\nvar nextID = 200000;\nfunction createCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription, onDispose) {\n  var isLiveQuery = operationIsLiveQuery(operation);\n  var currentValue = value;\n  var currentNetworkSubscription = networkSubscription;\n  var suspenseResource = new SuspenseResource(function (environment) {\n    var retention = environment.retain(operation);\n    return {\n      dispose: function dispose() {\n        // Normally if this entry never commits, the request would've ended by the\n        // time this timeout expires and the temporary retain is released. However,\n        // we need to do this for live queries which remain open indefinitely.\n        if (isLiveQuery && currentNetworkSubscription != null) {\n          currentNetworkSubscription.unsubscribe();\n        }\n        retention.dispose();\n        onDispose(cacheEntry);\n      }\n    };\n  });\n  var cacheEntry = {\n    cacheIdentifier: cacheIdentifier,\n    id: nextID++,\n    processedPayloadsCount: 0,\n    operationAvailability: operationAvailability,\n    getValue: function getValue() {\n      return currentValue;\n    },\n    setValue: function setValue(val) {\n      currentValue = val;\n    },\n    setNetworkSubscription: function setNetworkSubscription(subscription) {\n      if (isLiveQuery && currentNetworkSubscription != null) {\n        currentNetworkSubscription.unsubscribe();\n      }\n      currentNetworkSubscription = subscription;\n    },\n    temporaryRetain: function temporaryRetain(environment) {\n      return suspenseResource.temporaryRetain(environment);\n    },\n    permanentRetain: function permanentRetain(environment) {\n      return suspenseResource.permanentRetain(environment);\n    },\n    releaseTemporaryRetain: function releaseTemporaryRetain() {\n      suspenseResource.releaseTemporaryRetain();\n    }\n  };\n  return cacheEntry;\n}\nvar QueryResourceImpl = /*#__PURE__*/function () {\n  function QueryResourceImpl(environment) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_clearCacheEntry\", function (cacheEntry) {\n      _this._cache[\"delete\"](cacheEntry.cacheIdentifier);\n    });\n    this._environment = environment;\n    this._cache = LRUCache.create(CACHE_CAPACITY);\n  }\n  var _proto = QueryResourceImpl.prototype;\n  _proto.prepare = function prepare(operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, cacheBreaker, profilerContext) {\n    var cacheIdentifier = getQueryCacheIdentifier(this._environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker);\n    return this.prepareWithIdentifier(cacheIdentifier, operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, profilerContext);\n  }\n\n  /**\n   * This function should be called during a Component's render function,\n   * to either read an existing cached value for the query, or fetch the query\n   * and suspend.\n   */;\n  _proto.prepareWithIdentifier = function prepareWithIdentifier(cacheIdentifier, operation, fetchObservable, maybeFetchPolicy, maybeRenderPolicy, observer, profilerContext) {\n    var environment = this._environment;\n    var fetchPolicy = maybeFetchPolicy !== null && maybeFetchPolicy !== void 0 ? maybeFetchPolicy : operationIsLiveQuery(operation) ? DEFAULT_LIVE_FETCH_POLICY : DEFAULT_FETCH_POLICY;\n    var renderPolicy = maybeRenderPolicy !== null && maybeRenderPolicy !== void 0 ? maybeRenderPolicy : environment.UNSTABLE_getDefaultRenderPolicy();\n\n    // 1. Check if there's a cached value for this operation, and reuse it if\n    // it's available\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    var temporaryRetainDisposable = null;\n    var entryWasCached = cacheEntry != null;\n    if (cacheEntry == null) {\n      // 2. If a cached value isn't available, try fetching the operation.\n      // _fetchAndSaveQuery will update the cache with either a Promise or\n      // an Error to throw, or a QueryResult to return.\n      cacheEntry = this._fetchAndSaveQuery(cacheIdentifier, operation, fetchObservable, fetchPolicy, renderPolicy, profilerContext, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n        unsubscribe: function unsubscribe(subscription) {\n          // 4. If the request is cancelled, make sure to dispose\n          // of the temporary retain; this will ensure that a promise\n          // doesn't remain unnecessarily cached until the temporary retain\n          // expires. Not clearing the temporary retain might cause the\n          // query to incorrectly re-suspend.\n          if (temporaryRetainDisposable != null) {\n            temporaryRetainDisposable.dispose();\n          }\n          var observerUnsubscribe = observer === null || observer === void 0 ? void 0 : observer.unsubscribe;\n          observerUnsubscribe && observerUnsubscribe(subscription);\n        }\n      }));\n    }\n\n    // 3. Temporarily retain here in render phase. When the component reading\n    // the operation is committed, we will transfer ownership of data retention\n    // to the component.\n    // In case the component never commits (mounts or updates) from this render,\n    // this data retention hold will auto-release itself after a timeout.\n    temporaryRetainDisposable = cacheEntry.temporaryRetain(environment);\n    var cachedValue = cacheEntry.getValue();\n    if (isPromise(cachedValue)) {\n      environment.__log({\n        name: 'suspense.query',\n        fetchPolicy: fetchPolicy,\n        isPromiseCached: entryWasCached,\n        operation: operation,\n        queryAvailability: cacheEntry.operationAvailability,\n        renderPolicy: renderPolicy\n      });\n      throw cachedValue;\n    }\n    if (cachedValue instanceof Error) {\n      throw cachedValue;\n    }\n    return cachedValue;\n  }\n\n  /**\n   * This function should be called during a component's commit phase\n   * (e.g. inside useEffect), in order to retain the operation in the Relay store\n   * and transfer ownership of the operation to the component lifecycle.\n   */;\n  _proto.retain = function retain(queryResult, profilerContext) {\n    var environment = this._environment;\n    var cacheIdentifier = queryResult.cacheIdentifier,\n      operation = queryResult.operation;\n    var cacheEntry = this._getOrCreateCacheEntry(cacheIdentifier, operation, null, queryResult, null);\n    var disposable = cacheEntry.permanentRetain(environment);\n    environment.__log({\n      name: 'queryresource.retain',\n      profilerContext: profilerContext,\n      resourceID: cacheEntry.id\n    });\n    return {\n      dispose: function dispose() {\n        disposable.dispose();\n      }\n    };\n  };\n  _proto.releaseTemporaryRetain = function releaseTemporaryRetain(queryResult) {\n    var cacheEntry = this._cache.get(queryResult.cacheIdentifier);\n    if (cacheEntry != null) {\n      cacheEntry.releaseTemporaryRetain();\n    }\n  };\n  _proto.TESTS_ONLY__getCacheEntry = function TESTS_ONLY__getCacheEntry(operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker) {\n    var environment = this._environment;\n    var cacheIdentifier = getQueryCacheIdentifier(environment, operation, maybeFetchPolicy, maybeRenderPolicy, cacheBreaker);\n    return this._cache.get(cacheIdentifier);\n  };\n  _proto._getOrCreateCacheEntry = function _getOrCreateCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription) {\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    if (cacheEntry == null) {\n      cacheEntry = createCacheEntry(cacheIdentifier, operation, operationAvailability, value, networkSubscription, this._clearCacheEntry);\n      this._cache.set(cacheIdentifier, cacheEntry);\n    }\n    return cacheEntry;\n  };\n  _proto._fetchAndSaveQuery = function _fetchAndSaveQuery(cacheIdentifier, operation, fetchObservable, fetchPolicy, renderPolicy, profilerContext, observer) {\n    var _this2 = this;\n    var environment = this._environment;\n\n    // NOTE: Running `check` will write missing data to the store using any\n    // missing data handlers specified on the environment;\n    // We run it here first to make the handlers get a chance to populate\n    // missing data.\n    var queryAvailability = environment.check(operation);\n    var queryStatus = queryAvailability.status;\n    var hasFullQuery = queryStatus === 'available';\n    var canPartialRender = hasFullQuery || renderPolicy === 'partial' && queryStatus !== 'stale';\n    var shouldFetch;\n    var shouldAllowRender;\n    // Different definitions for Promise in our repos can cause this variable\n    // to cause errors when synced elsewhere\n    var resolveNetworkPromise = function resolveNetworkPromise() {};\n    switch (fetchPolicy) {\n      case 'store-only':\n        {\n          shouldFetch = false;\n          shouldAllowRender = true;\n          break;\n        }\n      case 'store-or-network':\n        {\n          shouldFetch = !hasFullQuery;\n          shouldAllowRender = canPartialRender;\n          break;\n        }\n      case 'store-and-network':\n        {\n          shouldFetch = true;\n          shouldAllowRender = canPartialRender;\n          break;\n        }\n      case 'network-only':\n      default:\n        {\n          shouldFetch = true;\n          shouldAllowRender = false;\n          break;\n        }\n    }\n\n    // NOTE: If this value is false, we will cache a promise for this\n    // query, which means we will suspend here at this query root.\n    // If it's true, we will cache the query resource and allow rendering to\n    // continue.\n    if (shouldAllowRender) {\n      var queryResult = getQueryResult(operation, cacheIdentifier);\n      var _cacheEntry = createCacheEntry(cacheIdentifier, operation, queryAvailability, queryResult, null, this._clearCacheEntry);\n      this._cache.set(cacheIdentifier, _cacheEntry);\n    }\n    if (shouldFetch) {\n      var _queryResult = getQueryResult(operation, cacheIdentifier);\n      var networkSubscription;\n      fetchObservable.subscribe({\n        start: function start(subscription) {\n          networkSubscription = subscription;\n          var cacheEntry = _this2._cache.get(cacheIdentifier);\n          if (cacheEntry) {\n            cacheEntry.setNetworkSubscription(networkSubscription);\n          }\n          var observerStart = observer === null || observer === void 0 ? void 0 : observer.start;\n          if (observerStart) {\n            var subscriptionWithConditionalCancelation = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, subscription), {}, {\n              unsubscribe: function unsubscribe() {\n                // Only live queries should have their network requests canceled.\n                if (operationIsLiveQuery(operation)) {\n                  subscription.unsubscribe();\n                }\n              }\n            });\n            observerStart(subscriptionWithConditionalCancelation);\n          }\n        },\n        next: function next() {\n          var cacheEntry = _this2._getOrCreateCacheEntry(cacheIdentifier, operation, queryAvailability, _queryResult, networkSubscription);\n          cacheEntry.processedPayloadsCount += 1;\n          cacheEntry.setValue(_queryResult);\n          resolveNetworkPromise();\n          var observerNext = observer === null || observer === void 0 ? void 0 : observer.next;\n          if (observerNext != null) {\n            var snapshot = environment.lookup(operation.fragment);\n            observerNext(snapshot);\n          }\n        },\n        error: function error(_error) {\n          var cacheEntry = _this2._getOrCreateCacheEntry(cacheIdentifier, operation, queryAvailability, _error, networkSubscription);\n\n          // If, this is the first thing we receive for the query,\n          // before any other payload handled is error, we will cache and\n          // re-throw that error later.\n\n          // We will ignore errors for any incremental payloads we receive.\n          if (cacheEntry.processedPayloadsCount === 0) {\n            cacheEntry.setValue(_error);\n          } else {\n            // TODO:T92030819 Remove this warning and actually throw the network error\n            // To complete this task we need to have a way of precisely tracking suspendable points\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'QueryResource: An incremental payload for query `%s` returned an error: `%s`.', operation.fragment.node.name, String(_error.message)) : void 0;\n          }\n          resolveNetworkPromise();\n          networkSubscription = null;\n          cacheEntry.setNetworkSubscription(null);\n          var observerError = observer === null || observer === void 0 ? void 0 : observer.error;\n          observerError && observerError(_error);\n        },\n        complete: function complete() {\n          resolveNetworkPromise();\n          networkSubscription = null;\n          var cacheEntry = _this2._cache.get(cacheIdentifier);\n          if (cacheEntry) {\n            cacheEntry.setNetworkSubscription(null);\n          }\n          var observerComplete = observer === null || observer === void 0 ? void 0 : observer.complete;\n          observerComplete && observerComplete();\n        },\n        unsubscribe: observer === null || observer === void 0 ? void 0 : observer.unsubscribe\n      });\n      var _cacheEntry2 = this._cache.get(cacheIdentifier);\n      if (!_cacheEntry2) {\n        var networkPromise = new Promise(function (resolve) {\n          resolveNetworkPromise = resolve;\n        });\n\n        // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n        networkPromise.displayName = 'Relay(' + operation.fragment.node.name + ')';\n        _cacheEntry2 = createCacheEntry(cacheIdentifier, operation, queryAvailability, networkPromise, networkSubscription, this._clearCacheEntry);\n        this._cache.set(cacheIdentifier, _cacheEntry2);\n      }\n    } else {\n      var observerComplete = observer === null || observer === void 0 ? void 0 : observer.complete;\n      observerComplete && observerComplete();\n    }\n    var cacheEntry = this._cache.get(cacheIdentifier);\n    !(cacheEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to have cached a result when attempting to fetch query.' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n    environment.__log({\n      name: 'queryresource.fetch',\n      resourceID: cacheEntry.id,\n      operation: operation,\n      profilerContext: profilerContext,\n      fetchPolicy: fetchPolicy,\n      renderPolicy: renderPolicy,\n      queryAvailability: queryAvailability,\n      shouldFetch: shouldFetch\n    });\n    return cacheEntry;\n  };\n  return QueryResourceImpl;\n}();\nfunction createQueryResource(environment) {\n  return new QueryResourceImpl(environment);\n}\nvar dataResources = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction getQueryResourceForEnvironment(environment) {\n  var cached = dataResources.get(environment);\n  if (cached) {\n    return cached;\n  }\n  var newDataResource = createQueryResource(environment);\n  dataResources.set(environment, newDataResource);\n  return newDataResource;\n}\nmodule.exports = {\n  createQueryResource: createQueryResource,\n  getQueryResourceForEnvironment: getQueryResourceForEnvironment,\n  getQueryCacheIdentifier: getQueryCacheIdentifier\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./../ReactRelayContext');\nvar React = require('react');\nvar useMemo = React.useMemo;\nfunction RelayEnvironmentProvider(props) {\n  var children = props.children,\n    environment = props.environment,\n    getEnvironmentForActor = props.getEnvironmentForActor;\n  var context = useMemo(function () {\n    return {\n      environment: environment,\n      getEnvironmentForActor: getEnvironmentForActor\n    };\n  }, [environment, getEnvironmentForActor]);\n  return /*#__PURE__*/React.createElement(ReactRelayContext.Provider, {\n    value: context\n  }, children);\n}\nmodule.exports = RelayEnvironmentProvider;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar invariant = require('invariant');\nvar TEMPORARY_RETAIN_DURATION_MS = 5 * 60 * 1000;\n\n/**\n * Allows you to retain a resource as part of a component lifecycle accounting\n * for Suspense. You temporarily retain the resource during render, then\n * permanently retain it during commit and release it during unmount.\n */\nvar SuspenseResource = /*#__PURE__*/function () {\n  function SuspenseResource(retain) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_retainCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_retainDisposable\", null);\n    (0, _defineProperty2[\"default\"])(this, \"_releaseTemporaryRetain\", null);\n    this._retain = function (environment) {\n      _this._retainCount++;\n      if (_this._retainCount === 1) {\n        _this._retainDisposable = retain(environment);\n      }\n      return {\n        dispose: function dispose() {\n          _this._retainCount = Math.max(0, _this._retainCount - 1);\n          if (_this._retainCount === 0) {\n            !(_this._retainDisposable != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected disposable to release query to be defined.' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n            _this._retainDisposable.dispose();\n            _this._retainDisposable = null;\n          }\n        }\n      };\n    };\n  }\n  var _proto = SuspenseResource.prototype;\n  _proto.temporaryRetain = function temporaryRetain(environment) {\n    var _this2 = this;\n    var _this$_releaseTempora;\n    // If we're executing in a server environment, there's no need\n    // to create temporary retains, since the component will never commit.\n    if (environment.isServer()) {\n      return {\n        dispose: function dispose() {}\n      };\n    }\n\n    // temporaryRetain is called during the render phase. However,\n    // given that we can't tell if this render will eventually commit or not,\n    // we create a timer to autodispose of this retain in case the associated\n    // component never commits.\n    // If the component /does/ commit, permanentRetain will clear this timeout\n    // and permanently retain the data.\n    var retention = this._retain(environment);\n    var releaseQueryTimeout = null;\n    var releaseTemporaryRetain = function releaseTemporaryRetain() {\n      clearTimeout(releaseQueryTimeout);\n      releaseQueryTimeout = null;\n      _this2._releaseTemporaryRetain = null;\n      retention.dispose();\n    };\n    releaseQueryTimeout = setTimeout(releaseTemporaryRetain, TEMPORARY_RETAIN_DURATION_MS);\n\n    // NOTE: Since temporaryRetain can be called multiple times, we release\n    // the previous temporary retain after we re-establish a new one, since\n    // we only ever need a single temporary retain until the permanent retain is\n    // established.\n    // temporaryRetain may be called multiple times by React during the render\n    // phase, as well as multiple times by other query components that are\n    // rendering the same query/variables.\n    (_this$_releaseTempora = this._releaseTemporaryRetain) === null || _this$_releaseTempora === void 0 ? void 0 : _this$_releaseTempora.call(this);\n    this._releaseTemporaryRetain = releaseTemporaryRetain;\n    return {\n      dispose: function dispose() {\n        var _this$_releaseTempora2;\n        (_this$_releaseTempora2 = _this2._releaseTemporaryRetain) === null || _this$_releaseTempora2 === void 0 ? void 0 : _this$_releaseTempora2.call(_this2);\n      }\n    };\n  };\n  _proto.permanentRetain = function permanentRetain(environment) {\n    var disposable = this._retain(environment);\n    this.releaseTemporaryRetain();\n    return disposable;\n  };\n  _proto.releaseTemporaryRetain = function releaseTemporaryRetain() {\n    var _this$_releaseTempora3;\n    (_this$_releaseTempora3 = this._releaseTemporaryRetain) === null || _this$_releaseTempora3 === void 0 ? void 0 : _this$_releaseTempora3.call(this);\n    this._releaseTemporaryRetain = null;\n  };\n  _proto.getRetainCount = function getRetainCount() {\n    return this._retainCount;\n  };\n  return SuspenseResource;\n}();\nmodule.exports = SuspenseResource;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  loadQuery = _require.loadQuery;\nfunction loadEntryPoint(environmentProvider, entryPoint, entryPointParams) {\n  // Start loading the code for the entrypoint\n  var loadingPromise = null;\n  if (entryPoint.root.getModuleIfRequired() == null) {\n    loadingPromise = entryPoint.root.load();\n  }\n  var preloadProps = entryPoint.getPreloadProps(entryPointParams);\n  var queries = preloadProps.queries,\n    entryPoints = preloadProps.entryPoints,\n    extraProps = preloadProps.extraProps;\n  var preloadedQueries = {};\n  var preloadedEntryPoints = {};\n  if (queries != null) {\n    var queriesPropNames = Object.keys(queries);\n    queriesPropNames.forEach(function (queryPropName) {\n      var _queries$queryPropNam = queries[queryPropName],\n        environmentProviderOptions = _queries$queryPropNam.environmentProviderOptions,\n        options = _queries$queryPropNam.options,\n        parameters = _queries$queryPropNam.parameters,\n        variables = _queries$queryPropNam.variables;\n      var environment = environmentProvider.getEnvironment(environmentProviderOptions);\n\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      preloadedQueries[queryPropName] = loadQuery(environment, parameters, variables, {\n        fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n        networkCacheConfig: options === null || options === void 0 ? void 0 : options.networkCacheConfig,\n        __nameForWarning: 'loadEntryPoint'\n      }, environmentProviderOptions);\n    });\n  }\n  if (entryPoints != null) {\n    var entryPointPropNames = Object.keys(entryPoints);\n    entryPointPropNames.forEach(function (entryPointPropName) {\n      var entryPointDescription = entryPoints[entryPointPropName];\n      if (entryPointDescription == null) {\n        return;\n      }\n      var nestedEntryPoint = entryPointDescription.entryPoint,\n        nestedParams = entryPointDescription.entryPointParams;\n      preloadedEntryPoints[entryPointPropName] = loadEntryPoint(environmentProvider, nestedEntryPoint, nestedParams);\n    });\n  }\n  var isDisposed = false;\n  return {\n    dispose: function dispose() {\n      if (isDisposed) {\n        return;\n      }\n      if (preloadedQueries != null) {\n        Object.values(preloadedQueries).forEach(function (_ref) {\n          var innerDispose = _ref.dispose;\n          innerDispose();\n        });\n      }\n      if (preloadedEntryPoints != null) {\n        Object.values(preloadedEntryPoints).forEach(function (_ref2) {\n          var innerDispose = _ref2.dispose;\n          innerDispose();\n        });\n      }\n      isDisposed = true;\n    },\n    entryPoints: preloadedEntryPoints,\n    extraProps: extraProps !== null && extraProps !== void 0 ? extraProps : null,\n    getComponent: function getComponent() {\n      var componentModule = entryPoint.root.getModuleIfRequired();\n      if (componentModule == null) {\n        var _loadingPromise;\n        loadingPromise = (_loadingPromise = loadingPromise) !== null && _loadingPromise !== void 0 ? _loadingPromise : entryPoint.root.load();\n        throw loadingPromise;\n      }\n\n      // On certain platforms, getting an es6 module with a default export from a JSResource will return an object like\n      // {default: module}, so let's assume that if the \"component\" has a static property named \"default\"\n      // that it's actually an es6 module wrapper, so unwrap it. This won't work for React classes with a static property named \"default\", but\n      // that's probably a worthwhile trade-off.\n      var component =\n      // $FlowIgnore[prop-missing]\n      componentModule[\"default\"] != null ? componentModule[\"default\"] : componentModule;\n      // $FlowFixMe[incompatible-cast] - trust me Flow, its entryPoint component\n      return component;\n    },\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get isDisposed() {\n      return isDisposed;\n    },\n    queries: preloadedQueries,\n    rootModuleID: entryPoint.root.getModuleId()\n  };\n}\nmodule.exports = loadEntryPoint;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  fetchQueryDeduped = _require.__internal.fetchQueryDeduped,\n  Observable = _require.Observable,\n  PreloadableQueryRegistry = _require.PreloadableQueryRegistry,\n  RelayFeatureFlags = _require.RelayFeatureFlags,\n  ReplaySubject = _require.ReplaySubject,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  getRequest = _require.getRequest,\n  getRequestIdentifier = _require.getRequestIdentifier;\nvar warning = require(\"fbjs/lib/warning\");\nvar RenderDispatcher = null;\nvar fetchKey = 100001;\nfunction useTrackLoadQueryInRender() {\n  if (RenderDispatcher === null) {\n    var _React$__SECRET_INTER, _React$__SECRET_INTER2;\n    // Flow does not know of React internals (rightly so), but we need to\n    // ensure here that this function isn't called inside render.\n    RenderDispatcher = // $FlowFixMe[prop-missing]\n    (_React$__SECRET_INTER = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER === void 0 ? void 0 : (_React$__SECRET_INTER2 = _React$__SECRET_INTER.ReactCurrentDispatcher) === null || _React$__SECRET_INTER2 === void 0 ? void 0 : _React$__SECRET_INTER2.current;\n  }\n}\nfunction loadQuery(environment, preloadableRequest, variables, options, environmentProviderOptions) {\n  var _React$__SECRET_INTER3, _React$__SECRET_INTER4, _options$__nameForWar, _options$fetchPolicy;\n  // This code ensures that we don't call loadQuery during render.\n  var CurrentDispatcher = // $FlowFixMe[prop-missing]\n  (_React$__SECRET_INTER3 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER3 === void 0 ? void 0 : (_React$__SECRET_INTER4 = _React$__SECRET_INTER3.ReactCurrentDispatcher) === null || _React$__SECRET_INTER4 === void 0 ? void 0 : _React$__SECRET_INTER4.current;\n  process.env.NODE_ENV !== \"production\" ? warning(RenderDispatcher == null || CurrentDispatcher !== RenderDispatcher, 'Relay: `%s` should not be called inside a React render function.', (_options$__nameForWar = options === null || options === void 0 ? void 0 : options.__nameForWarning) !== null && _options$__nameForWar !== void 0 ? _options$__nameForWar : 'loadQuery') : void 0;\n\n  // Every time you call loadQuery, we will generate a new fetchKey.\n  // This will ensure that every query reference that is created and\n  // passed to usePreloadedQuery is independently evaluated,\n  // even if they are for the same query/variables.\n  // Specifically, we want to avoid a case where we try to refetch a\n  // query by calling loadQuery a second time, and have the Suspense\n  // cache in usePreloadedQuery reuse the cached result instead of\n  // re-evaluating the new query ref and triggering a refetch if\n  // necessary.\n  fetchKey++;\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'store-or-network';\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options === null || options === void 0 ? void 0 : options.networkCacheConfig), {}, {\n    force: true\n  });\n\n  // executeWithNetworkSource will retain and execute an operation\n  // against the Relay store, given an Observable that would provide\n  // the network events for the operation.\n  var retainReference;\n  var didExecuteNetworkSource = false;\n  var executeWithNetworkSource = function executeWithNetworkSource(operation, networkObservable) {\n    didExecuteNetworkSource = true;\n    return environment.executeWithSource({\n      operation: operation,\n      source: networkObservable\n    });\n  };\n\n  // N.B. For loadQuery, we unconventionally want to return an Observable\n  // that isn't lazily executed, meaning that we don't want to wait\n  // until the returned Observable is subscribed to to actually start\n  // fetching and executing an operation; i.e. we want to execute the\n  // operation eagerly, when loadQuery is called.\n  // For this reason, we use an intermediate executionSubject which\n  // allows us to capture the events that occur during the eager execution\n  // of the operation, and then replay them to the Observable we\n  // ultimately return.\n  var executionSubject = new ReplaySubject();\n  var returnedObservable = Observable.create(function (sink) {\n    return executionSubject.subscribe(sink);\n  });\n  var unsubscribeFromNetworkRequest;\n  var networkError = null;\n  // makeNetworkRequest will immediately start a raw network request if\n  // one isn't already in flight and return an Observable that when\n  // subscribed to will replay the network events that have occured so far,\n  // as well as subsequent events.\n  var didMakeNetworkRequest = false;\n  var makeNetworkRequest = function makeNetworkRequest(params) {\n    // N.B. this function is called synchronously or not at all\n    // didMakeNetworkRequest is safe to rely on in the returned value\n    // Even if the request gets deduped below, we still wan't to return an\n    // observable that provides the replayed network events for the query,\n    // so we set this to true before deduping, to guarantee that the\n    // `source` observable is returned.\n    didMakeNetworkRequest = true;\n    var observable;\n    var subject = new ReplaySubject();\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      // Here, we are calling fetchQueryDeduped at the network layer level,\n      // which ensures that only a single network request is active for a given\n      // (environment, identifier) pair.\n      // Since network requests can be started /before/ we have the query ast\n      // necessary to process the results, we need to dedupe the raw requests\n      // separately from deduping the operation execution; specifically,\n      // if `loadQuery` is called multiple times before the query ast is available,\n      // we still want the network request to be deduped.\n      // - If a duplicate active network request is found, it will return an\n      // Observable that replays the events of the already active request.\n      // - If no duplicate active network request is found, it will call the fetchFn\n      // to start the request, and return an Observable that will replay\n      // the events from the network request.\n      // We provide an extra key to the identifier to distinguish deduping\n      // of raw network requests vs deduping of operation executions.\n      var identifier = 'raw-network-request-' + getRequestIdentifier(params, variables);\n      observable = fetchQueryDeduped(environment, identifier, function () {\n        var network = environment.getNetwork();\n        return network.execute(params, variables, networkCacheConfig);\n      });\n    } else {\n      var network = environment.getNetwork();\n      observable = network.execute(params, variables, networkCacheConfig);\n    }\n    var _observable$subscribe = observable.subscribe({\n        error: function error(err) {\n          networkError = err;\n          subject.error(err);\n        },\n        next: function next(data) {\n          subject.next(data);\n        },\n        complete: function complete() {\n          subject.complete();\n        }\n      }),\n      unsubscribe = _observable$subscribe.unsubscribe;\n    unsubscribeFromNetworkRequest = unsubscribe;\n    return Observable.create(function (sink) {\n      var subjectSubscription = subject.subscribe(sink);\n      return function () {\n        subjectSubscription.unsubscribe();\n        unsubscribeFromNetworkRequest();\n      };\n    });\n  };\n  var unsubscribeFromExecution;\n  var executeDeduped = function executeDeduped(operation, fetchFn) {\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      // N.B. at this point, if we're calling execute with a query ast (OperationDescriptor),\n      // we are guaranteed to have started a network request. We set this to\n      // true here as well since `makeNetworkRequest` might get skipped in the case\n      // where the query ast is already available and the query executions get deduped.\n      // Even if the execution gets deduped below, we still wan't to return\n      // an observable that provides the replayed network events for the query,\n      // so we set this to true before deduping, to guarantee that the `source`\n      // observable is returned.\n      didMakeNetworkRequest = true;\n    }\n\n    // Here, we are calling fetchQueryDeduped, which ensures that only\n    // a single operation is active for a given (environment, identifier) pair,\n    // and also tracks the active state of the operation, which is necessary\n    // for our Suspense infra to later be able to suspend (or not) on\n    // active operations. Even though we already dedupe raw network requests,\n    // we also need to dedupe and keep track operation execution for our Suspense\n    // infra, and we also want to avoid processing responses more than once, for\n    // the cases where `loadQuery` might be called multiple times after the query ast\n    // is available.\n    // - If a duplicate active operation is found, it will return an\n    // Observable that replays the events of the already active operation.\n    // - If no duplicate active operation is found, it will call the fetchFn\n    // to execute the operation, and return an Observable that will provide\n    // the events for executing the operation.\n    var _fetchQueryDeduped$su = fetchQueryDeduped(environment, operation.request.identifier, fetchFn).subscribe({\n      error: function error(err) {\n        executionSubject.error(err);\n      },\n      next: function next(data) {\n        executionSubject.next(data);\n      },\n      complete: function complete() {\n        executionSubject.complete();\n      }\n    });\n    unsubscribeFromExecution = _fetchQueryDeduped$su.unsubscribe;\n  };\n  var checkAvailabilityAndExecute = function checkAvailabilityAndExecute(concreteRequest) {\n    var operation = createOperationDescriptor(concreteRequest, variables, networkCacheConfig);\n    retainReference = environment.retain(operation);\n    if (fetchPolicy === 'store-only') {\n      return;\n    }\n\n    // N.B. If the fetch policy allows fulfillment from the store but the\n    // environment already has the data for that operation cached in the store,\n    // then we do nothing.\n    var shouldFetch = fetchPolicy !== 'store-or-network' || environment.check(operation).status !== 'available';\n    if (shouldFetch) {\n      executeDeduped(operation, function () {\n        // N.B. Since we have the operation synchronously available here,\n        // we can immediately fetch and execute the operation.\n        var networkObservable = makeNetworkRequest(concreteRequest.params);\n        var executeObservable = executeWithNetworkSource(operation, networkObservable);\n        return executeObservable;\n      });\n    }\n  };\n  var params;\n  var cancelOnLoadCallback;\n  var queryId;\n  if (preloadableRequest.kind === 'PreloadableConcreteRequest') {\n    var preloadableConcreteRequest = preloadableRequest;\n    params = preloadableConcreteRequest.params;\n    var _params = params;\n    queryId = _params.id;\n    !(queryId !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: `loadQuery` requires that preloadable query `%s` has a persisted query id', params.name) : invariant(false) : void 0;\n    var _module = PreloadableQueryRegistry.get(queryId);\n    if (_module != null) {\n      checkAvailabilityAndExecute(_module);\n    } else {\n      // If the module isn't synchronously available, we launch the\n      // network request immediately if the fetchPolicy might produce\n      // a network fetch, regardless of the state of the store cache. We\n      // do this because we can't check if a query is cached without the\n      // ast, and we know that if we don't have the query ast\n      // available, then this query could've never been written to the\n      // store in the first place, so it couldn't have been cached.\n      var networkObservable = fetchPolicy === 'store-only' ? null : makeNetworkRequest(params);\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      var _PreloadableQueryRegi = PreloadableQueryRegistry.onLoad(queryId, function (preloadedModule) {\n        cancelOnLoadCallback();\n        var operation = createOperationDescriptor(preloadedModule, variables, networkCacheConfig);\n        retainReference = environment.retain(operation);\n        if (networkObservable != null) {\n          executeDeduped(operation, function () {\n            return executeWithNetworkSource(operation, networkObservable);\n          });\n        }\n      });\n      cancelOnLoadCallback = _PreloadableQueryRegi.dispose;\n    }\n  } else {\n    var graphQlTaggedNode = preloadableRequest;\n    var request = getRequest(graphQlTaggedNode);\n    params = request.params;\n    queryId = params.cacheID != null ? params.cacheID : params.id;\n    checkAvailabilityAndExecute(request);\n  }\n  var isDisposed = false;\n  var isReleased = false;\n  var isNetworkRequestCancelled = false;\n  var releaseQuery = function releaseQuery() {\n    if (isReleased) {\n      return;\n    }\n    retainReference && retainReference.dispose();\n    isReleased = true;\n  };\n  var cancelNetworkRequest = function cancelNetworkRequest() {\n    if (isNetworkRequestCancelled) {\n      return;\n    }\n    if (didExecuteNetworkSource) {\n      unsubscribeFromExecution && unsubscribeFromExecution();\n    } else {\n      unsubscribeFromNetworkRequest && unsubscribeFromNetworkRequest();\n    }\n    cancelOnLoadCallback && cancelOnLoadCallback();\n    isNetworkRequestCancelled = true;\n  };\n  return {\n    kind: 'PreloadedQuery',\n    environment: environment,\n    environmentProviderOptions: environmentProviderOptions,\n    dispose: function dispose() {\n      if (isDisposed) {\n        return;\n      }\n      releaseQuery();\n      cancelNetworkRequest();\n      isDisposed = true;\n    },\n    releaseQuery: releaseQuery,\n    cancelNetworkRequest: cancelNetworkRequest,\n    fetchKey: fetchKey,\n    id: queryId,\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get isDisposed() {\n      return isDisposed || isReleased;\n    },\n    // $FlowFixMe[unsafe-getters-setters] - this has no side effects\n    get networkError() {\n      return networkError;\n    },\n    name: params.name,\n    networkCacheConfig: networkCacheConfig,\n    fetchPolicy: fetchPolicy,\n    source: didMakeNetworkRequest ? returnedObservable : undefined,\n    variables: variables\n  };\n}\nmodule.exports = {\n  loadQuery: loadQuery,\n  useTrackLoadQueryInRender: useTrackLoadQueryInRender\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useLazyLoadQuery = require('./useLazyLoadQuery');\n\n/**\n * This hook can be used to render client-only queries.\n * These queries are consist of queries for client-only data,\n * schematized via local schema extensions and/or Relay resolvers.\n */\nfunction useClientQuery(gqlQuery, variables, options) {\n  // $FlowFixMe[incompatible-type] client queries can be used with useLazyLoadQuery, but only with `store-only` policy.\n  var query = gqlQuery;\n  return useLazyLoadQuery(query, variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options), {}, {\n    fetchPolicy: 'store-only'\n  }));\n}\nmodule.exports = useClientQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar loadEntryPoint = require('./loadEntryPoint');\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useIsMountedRef = require('./useIsMountedRef');\nvar _require2 = require('react'),\n  useCallback = _require2.useCallback,\n  useEffect = _require2.useEffect,\n  useRef = _require2.useRef,\n  useState = _require2.useState;\nvar initialNullEntryPointReferenceState = {\n  kind: 'NullEntryPointReference'\n};\nfunction useLoadEntryPoint(environmentProvider, entryPoint, options) {\n  var _options$TEST_ONLY__i, _options$TEST_ONLY__i2, _options$TEST_ONLY__i3, _options$TEST_ONLY__i4;\n  /**\n   * We want to always call `entryPointReference.dispose()` for every call to\n   * `setEntryPointReference(loadEntryPoint(...))` so that no leaks of data in Relay\n   * stores will occur.\n   *\n   * However, a call to `setState(newState)` is not always followed by a commit where\n   * this value is reflected in the state. Thus, we cannot reliably clean up each ref\n   * with `useEffect(() => () => entryPointReference.dispose(), [entryPointReference])`.\n   *\n   * Instead, we keep track of each call to `loadEntryPoint` in a ref.\n   * Relying on the fact that if a state change commits, no state changes that were\n   * initiated prior to the currently committing state change will ever subsequently\n   * commit, we can safely dispose of all preloaded entry point references\n   * associated with state changes initiated prior to the currently committing state\n   * change.\n   *\n   * Finally, when the hook unmounts, we also dispose of all remaining uncommitted\n   * entry point references.\n   */\n\n  useTrackLoadQueryInRender();\n  var initialEntryPointReferenceInternal = (_options$TEST_ONLY__i = options === null || options === void 0 ? void 0 : (_options$TEST_ONLY__i2 = options.TEST_ONLY__initialEntryPointData) === null || _options$TEST_ONLY__i2 === void 0 ? void 0 : _options$TEST_ONLY__i2.entryPointReference) !== null && _options$TEST_ONLY__i !== void 0 ? _options$TEST_ONLY__i : initialNullEntryPointReferenceState;\n  var initialEntryPointParamsInternal = (_options$TEST_ONLY__i3 = options === null || options === void 0 ? void 0 : (_options$TEST_ONLY__i4 = options.TEST_ONLY__initialEntryPointData) === null || _options$TEST_ONLY__i4 === void 0 ? void 0 : _options$TEST_ONLY__i4.entryPointParams) !== null && _options$TEST_ONLY__i3 !== void 0 ? _options$TEST_ONLY__i3 : null;\n  var isMountedRef = useIsMountedRef();\n  var undisposedEntryPointReferencesRef = useRef(new Set([initialEntryPointReferenceInternal]));\n  var _useState = useState(initialEntryPointReferenceInternal),\n    entryPointReference = _useState[0],\n    setEntryPointReference = _useState[1];\n  var _useState2 = useState(initialEntryPointParamsInternal),\n    entryPointParams = _useState2[0],\n    setEntryPointParams = _useState2[1];\n  var disposeEntryPoint = useCallback(function () {\n    if (isMountedRef.current) {\n      var nullEntryPointReference = {\n        kind: 'NullEntryPointReference'\n      };\n      undisposedEntryPointReferencesRef.current.add(nullEntryPointReference);\n      setEntryPointReference(nullEntryPointReference);\n    }\n  }, [setEntryPointReference, isMountedRef]);\n  var entryPointLoaderCallback = useCallback(function (params) {\n    if (isMountedRef.current) {\n      var updatedEntryPointReference = loadEntryPoint(environmentProvider, entryPoint, params);\n      undisposedEntryPointReferencesRef.current.add(updatedEntryPointReference);\n      setEntryPointReference(updatedEntryPointReference);\n      setEntryPointParams(params);\n    }\n  }, [environmentProvider, entryPoint, setEntryPointReference, isMountedRef]);\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current entryPointReference will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly leave our\n      // current entryPointReference disposed, we need to load the entryPoint again\n      // and force a re-render by calling entryPointLoaderCallback again,\n      // so that the entryPointReference's queries are correctly re-retained, and\n      // potentially refetched if necessary.\n      maybeHiddenOrFastRefresh.current = false;\n      if (entryPointReference.kind !== 'NullEntryPointReference' && entryPointParams != null) {\n        entryPointLoaderCallback(entryPointParams);\n      }\n      return;\n    }\n\n    // When a new entryPointReference is committed, we iterate over all\n    // entrypoint refs in undisposedEntryPointReferences and dispose all of\n    // the refs that aren't the currently committed one. This ensures\n    // that we don't leave any dangling entrypoint references for the\n    // case that loadEntryPoint is called multiple times before commit; when\n    // this happens, multiple state updates will be scheduled, but only one\n    // will commit, meaning that we need to keep track of and dispose any\n    // query references that don't end up committing.\n    // - We are relying on the fact that sets iterate in insertion order, and we\n    // can remove items from a set as we iterate over it (i.e. no iterator\n    // invalidation issues.) Thus, it is safe to loop through\n    // undisposedEntryPointReferences until we find entryPointReference, and\n    // remove and dispose all previous references.\n    // - We are guaranteed to find entryPointReference in the set, because if a\n    // state change results in a commit, no state changes initiated prior to that\n    // one will be committed, and we are disposing and removing references\n    // associated with commits that were initiated prior to the currently\n    // committing state change. (A useEffect callback is called during the commit\n    // phase.)\n    var undisposedEntryPointReferences = undisposedEntryPointReferencesRef.current;\n    if (isMountedRef.current) {\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(undisposedEntryPointReferences),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var undisposedEntryPointReference = _step.value;\n          if (undisposedEntryPointReference === entryPointReference) {\n            break;\n          }\n          undisposedEntryPointReferences[\"delete\"](undisposedEntryPointReference);\n          if (undisposedEntryPointReference.kind !== 'NullEntryPointReference') {\n            undisposedEntryPointReference.dispose();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, [entryPointReference, entryPointParams, entryPointLoaderCallback, isMountedRef]);\n  useEffect(function () {\n    return function disposeAllRemainingEntryPointReferences() {\n      // undisposedEntryPointReferences.current is never reassigned\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(undisposedEntryPointReferencesRef.current),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var unhandledStateChange = _step2.value;\n          if (unhandledStateChange.kind !== 'NullEntryPointReference') {\n            unhandledStateChange.dispose();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n  }, []);\n  return [entryPointReference.kind === 'NullEntryPointReference' ? null : entryPointReference, entryPointLoaderCallback, disposeEntryPoint];\n}\nmodule.exports = useLoadEntryPoint;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useEffect = _require.useEffect;\n\n/**\n * This hook returns a mutable React ref that holds the value of whether a\n * fetch request is in flight. The reason this is a mutable ref instead of\n * state is because we don't actually want to trigger an update when this\n * changes, but instead synchronously keep track of whether the network request\n * is in flight, for example in order to bail out of a request if one is\n * already in flight. If this was state, due to the nature of concurrent\n * updates, this value wouldn't be in sync with when the request is actually\n * in flight.\n * The additional functions returned by this Hook can be used to mutate\n * the ref.\n */\nfunction useFetchTrackingRef() {\n  var subscriptionRef = useUnsafeRef_DEPRECATED(null);\n  var isFetchingRef = useUnsafeRef_DEPRECATED(false);\n  var disposeFetch = useCallback(function () {\n    if (subscriptionRef.current != null) {\n      subscriptionRef.current.unsubscribe();\n      subscriptionRef.current = null;\n    }\n    isFetchingRef.current = false;\n  }, []);\n  var startFetch = useCallback(function (subscription) {\n    subscriptionRef.current = subscription;\n    isFetchingRef.current = true;\n  }, []);\n  var completeFetch = useCallback(function () {\n    subscriptionRef.current = null;\n    isFetchingRef.current = false;\n  }, []);\n\n  // Dipose of ongoing fetch on unmount\n  useEffect(function () {\n    return disposeFetch;\n  }, [disposeFetch]);\n  return {\n    isFetchingRef: isFetchingRef,\n    startFetch: startFetch,\n    disposeFetch: disposeFetch,\n    completeFetch: completeFetch\n  };\n}\nmodule.exports = useFetchTrackingRef;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar HooksImplementation = require('./HooksImplementation');\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useFragmentNode = require('./useFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require2 = require('react'),\n  useDebugValue = _require2.useDebugValue;\nvar _require3 = require('relay-runtime'),\n  getFragment = _require3.getFragment;\nfunction useFragment_LEGACY(fragment, key) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var fragmentNode = getFragment(fragment);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of useFragment()');\n  var _useFragmentNode = useFragmentNode(fragmentNode, key, 'useFragment()'),\n    data = _useFragmentNode.data;\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: data\n    });\n  }\n  return data;\n}\nfunction useFragment(fragment, key) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    // $FlowFixMe This is safe because impl.useFragment has the type of useFragment...\n    return impl.useFragment(fragment, key);\n    // (i.e. type declared above, but not the supertype used in this function definition)\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useFragment_LEGACY(fragment, key);\n  }\n}\nmodule.exports = useFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./FragmentResource'),\n  getFragmentResourceForEnvironment = _require.getFragmentResourceForEnvironment;\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar _require2 = require('react'),\n  useEffect = _require2.useEffect,\n  useState = _require2.useState;\nvar _require3 = require('relay-runtime'),\n  getFragmentIdentifier = _require3.getFragmentIdentifier;\nvar warning = require(\"fbjs/lib/warning\");\nfunction useFragmentNode(fragmentNode, fragmentRef, componentDisplayName) {\n  var environment = useRelayEnvironment();\n  var FragmentResource = getFragmentResourceForEnvironment(environment);\n  var isMountedRef = useUnsafeRef_DEPRECATED(false);\n  var _useState = useState(0),\n    forceUpdate = _useState[1];\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, fragmentRef);\n\n  // Read fragment data; this might suspend.\n  var fragmentResult = FragmentResource.readWithIdentifier(fragmentNode, fragmentRef, fragmentIdentifier, componentDisplayName);\n  var isListeningForUpdatesRef = useUnsafeRef_DEPRECATED(true);\n  function enableStoreUpdates() {\n    isListeningForUpdatesRef.current = true;\n    var didMissUpdates = FragmentResource.checkMissedUpdates(fragmentResult)[0];\n    if (didMissUpdates) {\n      handleDataUpdate();\n    }\n  }\n  function disableStoreUpdates() {\n    isListeningForUpdatesRef.current = false;\n  }\n  function handleDataUpdate() {\n    if (isMountedRef.current === false || isListeningForUpdatesRef.current === false) {\n      return;\n    }\n\n    // React bails out on noop state updates as an optimization.\n    // If we want to force an update via setState, we need to pass an value.\n    // The actual value can be arbitrary though, e.g. an incremented number.\n    forceUpdate(function (count) {\n      return count + 1;\n    });\n  }\n\n  // Establish Relay store subscriptions in the commit phase, only if\n  // rendering for the first time, or if we need to subscribe to new data\n  // If the fragment identifier changes, it means that the variables on the\n  // fragment owner changed, or the fragment ref points to different records.\n  // In this case, we need to resubscribe to the Relay store.\n  useEffect(function () {\n    isMountedRef.current = true;\n    var disposable = FragmentResource.subscribe(fragmentResult, handleDataUpdate);\n    return function () {\n      // When unmounting or resubscribing to new data, clean up current\n      // subscription. This will also make sure fragment data is no longer\n      // cached so that next time it its read, it will be freshly read from\n      // the Relay store\n      isMountedRef.current = false;\n      disposable.dispose();\n    };\n    // NOTE: We disable react-hooks-deps warning because environment and fragmentIdentifier\n    // is capturing all information about whether the effect should be re-ran.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [environment, fragmentIdentifier]);\n  if (process.env.NODE_ENV !== \"production\") {\n    if (fragmentRef != null && (fragmentResult.data === undefined || Array.isArray(fragmentResult.data) && fragmentResult.data.length > 0 && fragmentResult.data.every(function (data) {\n      return data === undefined;\n    }))) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected to have been able to read non-null data for ' + 'fragment `%s` declared in ' + '`%s`, since fragment reference was non-null. ' + \"Make sure that that `%s`'s parent isn't \" + 'holding on to and/or passing a fragment reference for data that ' + 'has been deleted.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n    }\n  }\n  return {\n    // $FlowFixMe[incompatible-return]\n    data: fragmentResult.data,\n    disableStoreUpdates: disableStoreUpdates,\n    enableStoreUpdates: enableStoreUpdates\n  };\n}\nmodule.exports = useFragmentNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('react'),\n  useEffect = _require.useEffect,\n  useRef = _require.useRef;\nfunction useIsMountedRef() {\n  var isMountedRef = useRef(true);\n  useEffect(function () {\n    isMountedRef.current = true;\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []);\n  return isMountedRef;\n}\nmodule.exports = useIsMountedRef;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  getObservableForActiveRequest = _require.__internal.getObservableForActiveRequest,\n  getSelector = _require.getSelector;\nvar useEffect = React.useEffect,\n  useState = React.useState,\n  useMemo = React.useMemo;\nfunction useIsOperationNodeActive(fragmentNode, fragmentRef) {\n  var environment = useRelayEnvironment();\n  var observable = useMemo(function () {\n    var selector = getSelector(fragmentNode, fragmentRef);\n    if (selector == null) {\n      return null;\n    }\n    !(selector.kind === 'SingularReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useIsOperationNodeActive: Plural fragments are not supported.') : invariant(false) : void 0;\n    return getObservableForActiveRequest(environment, selector.owner);\n  }, [environment, fragmentNode, fragmentRef]);\n  var _useState = useState(observable != null),\n    isActive = _useState[0],\n    setIsActive = _useState[1];\n  useEffect(function () {\n    var subscription;\n    setIsActive(observable != null);\n    if (observable != null) {\n      var onCompleteOrError = function onCompleteOrError() {\n        setIsActive(false);\n      };\n      subscription = observable.subscribe({\n        complete: onCompleteOrError,\n        error: onCompleteOrError\n      });\n    }\n    return function () {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [observable]);\n  return isActive;\n}\nmodule.exports = useIsOperationNodeActive;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useLazyLoadQueryNode = require('./useLazyLoadQueryNode');\nvar useMemoOperationDescriptor = require('./useMemoOperationDescriptor');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require2 = require('relay-runtime'),\n  fetchQuery = _require2.__internal.fetchQuery;\n\n// This separate type export is only needed as long as we are injecting\n// a separate hooks implementation in ./HooksImplementation -- it can\n// be removed after we stop doing that.\n\nfunction useLazyLoadQuery(gqlQuery, variables, options) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var environment = useRelayEnvironment();\n  var query = useMemoOperationDescriptor(gqlQuery, variables, options && options.networkCacheConfig ? options.networkCacheConfig : {\n    force: true\n  });\n  var data = useLazyLoadQueryNode({\n    componentDisplayName: 'useLazyLoadQuery()',\n    fetchKey: options === null || options === void 0 ? void 0 : options.fetchKey,\n    fetchObservable: fetchQuery(environment, query),\n    fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n    query: query,\n    renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n  });\n  return data;\n}\nmodule.exports = useLazyLoadQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ProfilerContext = require('./ProfilerContext');\nvar _require = require('./QueryResource'),\n  getQueryCacheIdentifier = _require.getQueryCacheIdentifier,\n  getQueryResourceForEnvironment = _require.getQueryResourceForEnvironment;\nvar useFetchTrackingRef = require('./useFetchTrackingRef');\nvar useFragmentNode = require('./useFragmentNode');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar useContext = React.useContext,\n  useEffect = React.useEffect,\n  useState = React.useState,\n  useRef = React.useRef;\nfunction useLazyLoadQueryNode(_ref) {\n  var query = _ref.query,\n    componentDisplayName = _ref.componentDisplayName,\n    fetchObservable = _ref.fetchObservable,\n    fetchPolicy = _ref.fetchPolicy,\n    fetchKey = _ref.fetchKey,\n    renderPolicy = _ref.renderPolicy;\n  var environment = useRelayEnvironment();\n  var profilerContext = useContext(ProfilerContext);\n  var QueryResource = getQueryResourceForEnvironment(environment);\n  var _useState = useState(0),\n    forceUpdateKey = _useState[0],\n    forceUpdate = _useState[1];\n  var _useFetchTrackingRef = useFetchTrackingRef(),\n    startFetch = _useFetchTrackingRef.startFetch,\n    completeFetch = _useFetchTrackingRef.completeFetch;\n  var cacheBreaker = \"\".concat(forceUpdateKey, \"-\").concat(fetchKey !== null && fetchKey !== void 0 ? fetchKey : '');\n  var cacheIdentifier = getQueryCacheIdentifier(environment, query, fetchPolicy, renderPolicy, cacheBreaker);\n  var preparedQueryResult = profilerContext.wrapPrepareQueryResource(function () {\n    return QueryResource.prepareWithIdentifier(cacheIdentifier, query, fetchObservable, fetchPolicy, renderPolicy, {\n      start: startFetch,\n      complete: completeFetch,\n      error: completeFetch\n    }, profilerContext);\n  });\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current cached resource will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly attempt to\n      // retain a cached query resource that was disposed, we need to force\n      // a re-render so that the cache entry for this query is re-intiliazed and\n      // and re-evaluated (and potentially cause a refetch).\n      maybeHiddenOrFastRefresh.current = false;\n      forceUpdate(function (n) {\n        return n + 1;\n      });\n      return;\n    }\n    var disposable = QueryResource.retain(preparedQueryResult, profilerContext);\n    return function () {\n      disposable.dispose();\n    };\n    // NOTE: We disable react-hooks-deps warning because the `environment`\n    // and `cacheIdentifier` identities are capturing all information about whether\n    // the effect should be re-executed and the query re-retained.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [environment, cacheIdentifier]);\n  useEffect(function () {\n    // Release any temporary retain that's not released. At this point, if the\n    // cacheIdentifier doesn't change, the query is still permanently retained,\n    // and the temporary retain is redundant.\n    QueryResource.releaseTemporaryRetain(preparedQueryResult);\n    // This effect is intended to run on every commit, thus no dependency\n  });\n\n  var fragmentNode = preparedQueryResult.fragmentNode,\n    fragmentRef = preparedQueryResult.fragmentRef;\n  var _useFragmentNode = useFragmentNode(fragmentNode, fragmentRef, componentDisplayName),\n    data = _useFragmentNode.data;\n  return data;\n}\nmodule.exports = useLazyLoadQueryNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useFetchTrackingRef = require('./useFetchTrackingRef');\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useIsOperationNodeActive = require('./useIsOperationNodeActive');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useEffect = _require.useEffect,\n  useState = _require.useState;\nvar _require2 = require('relay-runtime'),\n  fetchQuery = _require2.__internal.fetchQuery,\n  ConnectionInterface = _require2.ConnectionInterface,\n  createOperationDescriptor = _require2.createOperationDescriptor,\n  getPaginationVariables = _require2.getPaginationVariables,\n  getSelector = _require2.getSelector,\n  getValueAtPath = _require2.getValueAtPath;\nvar warning = require(\"fbjs/lib/warning\");\nfunction useLoadMoreFunction(args) {\n  var direction = args.direction,\n    fragmentNode = args.fragmentNode,\n    fragmentRef = args.fragmentRef,\n    fragmentIdentifier = args.fragmentIdentifier,\n    fragmentData = args.fragmentData,\n    connectionPathInFragmentData = args.connectionPathInFragmentData,\n    paginationRequest = args.paginationRequest,\n    paginationMetadata = args.paginationMetadata,\n    componentDisplayName = args.componentDisplayName,\n    observer = args.observer,\n    onReset = args.onReset,\n    identifierField = args.identifierField;\n  var environment = useRelayEnvironment();\n  var _useFetchTrackingRef = useFetchTrackingRef(),\n    isFetchingRef = _useFetchTrackingRef.isFetchingRef,\n    startFetch = _useFetchTrackingRef.startFetch,\n    disposeFetch = _useFetchTrackingRef.disposeFetch,\n    completeFetch = _useFetchTrackingRef.completeFetch;\n  var identifierValue = identifierField != null && fragmentData != null && typeof fragmentData === 'object' ? fragmentData[identifierField] : null;\n  var isMountedRef = useIsMountedRef();\n  var _useState = useState(environment),\n    mirroredEnvironment = _useState[0],\n    setMirroredEnvironment = _useState[1];\n  var _useState2 = useState(fragmentIdentifier),\n    mirroredFragmentIdentifier = _useState2[0],\n    setMirroredFragmentIdentifier = _useState2[1];\n  var isParentQueryActive = useIsOperationNodeActive(fragmentNode, fragmentRef);\n  var shouldReset = environment !== mirroredEnvironment || fragmentIdentifier !== mirroredFragmentIdentifier;\n  if (shouldReset) {\n    disposeFetch();\n    onReset();\n    setMirroredEnvironment(environment);\n    setMirroredFragmentIdentifier(fragmentIdentifier);\n  }\n  var _getConnectionState = getConnectionState(direction, fragmentNode, fragmentData, connectionPathInFragmentData),\n    cursor = _getConnectionState.cursor,\n    hasMore = _getConnectionState.hasMore;\n\n  // Dispose of pagination requests in flight when unmounting\n  useEffect(function () {\n    return function () {\n      disposeFetch();\n    };\n  }, [disposeFetch]);\n  var loadMore = useCallback(function (count, options) {\n    // TODO(T41131846): Fetch/Caching policies for loadMore\n\n    var onComplete = options === null || options === void 0 ? void 0 : options.onComplete;\n    if (isMountedRef.current !== true) {\n      // Bail out and warn if we're trying to paginate after the component\n      // has unmounted\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected fetch on unmounted component for fragment ' + '`%s` in `%s`. It looks like some instances of your component are ' + 'still trying to fetch data but they already unmounted. ' + 'Please make sure you clear all timers, intervals, ' + 'async calls, etc that may trigger a fetch.', fragmentNode.name, componentDisplayName) : void 0;\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    var fragmentSelector = getSelector(fragmentNode, fragmentRef);\n    if (isFetchingRef.current === true || fragmentData == null || isParentQueryActive) {\n      if (fragmentSelector == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected fetch while using a null fragment ref ' + 'for fragment `%s` in `%s`. When fetching more items, we expect ' + \"initial fragment data to be non-null. Please make sure you're \" + 'passing a valid fragment ref to `%s` before paginating.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n      }\n      if (onComplete) {\n        onComplete(null);\n      }\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    !(fragmentSelector != null && fragmentSelector.kind !== 'PluralReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to be able to find a non-plural fragment owner for ' + \"fragment `%s` when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n    var parentVariables = fragmentSelector.owner.variables;\n    var fragmentVariables = fragmentSelector.variables;\n    var extraVariables = options === null || options === void 0 ? void 0 : options.UNSTABLE_extraVariables;\n    var baseVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, parentVariables), fragmentVariables);\n    var paginationVariables = getPaginationVariables(direction, count, cursor, baseVariables, (0, _objectSpread2[\"default\"])({}, extraVariables), paginationMetadata);\n\n    // If the query needs an identifier value ('id' or similar) and one\n    // was not explicitly provided, read it from the fragment data.\n    if (identifierField != null) {\n      // @refetchable fragments are guaranteed to have an `id` selection\n      // if the type is Node, implements Node, or is @fetchable. Double-check\n      // that there actually is a value at runtime.\n      if (typeof identifierValue !== 'string') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected result to have a string  ' + '`%s` in order to refetch, got `%s`.', identifierField, identifierValue) : void 0;\n      }\n      paginationVariables.id = identifierValue;\n    }\n    var paginationQuery = createOperationDescriptor(paginationRequest, paginationVariables, {\n      force: true\n    });\n    fetchQuery(environment, paginationQuery).subscribe((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, observer), {}, {\n      start: function start(subscription) {\n        startFetch(subscription);\n        observer.start && observer.start(subscription);\n      },\n      complete: function complete() {\n        completeFetch();\n        observer.complete && observer.complete();\n        onComplete && onComplete(null);\n      },\n      error: function error(_error) {\n        completeFetch();\n        observer.error && observer.error(_error);\n        onComplete && onComplete(_error);\n      }\n    }));\n    return {\n      dispose: disposeFetch\n    };\n  },\n  // NOTE: We disable react-hooks-deps warning because all values\n  // inside paginationMetadata are static\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [environment, identifierValue, direction, cursor, startFetch, disposeFetch, completeFetch, isFetchingRef, isParentQueryActive, fragmentData, fragmentNode.name, fragmentRef, componentDisplayName]);\n  return [loadMore, hasMore, disposeFetch];\n}\nfunction getConnectionState(direction, fragmentNode, fragmentData, connectionPathInFragmentData) {\n  var _pageInfo$END_CURSOR, _pageInfo$START_CURSO;\n  var _ConnectionInterface$ = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$.EDGES,\n    PAGE_INFO = _ConnectionInterface$.PAGE_INFO,\n    HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE,\n    HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE,\n    END_CURSOR = _ConnectionInterface$.END_CURSOR,\n    START_CURSOR = _ConnectionInterface$.START_CURSOR;\n  var connection = getValueAtPath(fragmentData, connectionPathInFragmentData);\n  if (connection == null) {\n    return {\n      cursor: null,\n      hasMore: false\n    };\n  }\n  !(typeof connection === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have been `null`, or ' + 'a plain object with %s and %s properties. Instead got `%s`.', fragmentNode.name, EDGES, PAGE_INFO, connection) : invariant(false) : void 0;\n  var edges = connection[EDGES];\n  var pageInfo = connection[PAGE_INFO];\n  if (edges == null || pageInfo == null) {\n    return {\n      cursor: null,\n      hasMore: false\n    };\n  }\n  !Array.isArray(edges) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have a plural `%s` field. ' + 'Instead got `%s`.', fragmentNode.name, EDGES, edges) : invariant(false) : void 0;\n  !(typeof pageInfo === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected connection in fragment `%s` to have a `%s` field. ' + 'Instead got `%s`.', fragmentNode.name, PAGE_INFO, pageInfo) : invariant(false) : void 0;\n  var cursor = direction === 'forward' ? (_pageInfo$END_CURSOR = pageInfo[END_CURSOR]) !== null && _pageInfo$END_CURSOR !== void 0 ? _pageInfo$END_CURSOR : null : (_pageInfo$START_CURSO = pageInfo[START_CURSOR]) !== null && _pageInfo$START_CURSO !== void 0 ? _pageInfo$START_CURSO : null;\n  !(cursor === null || typeof cursor === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected page info for connection in fragment `%s` to have a ' + 'valid `%s`. Instead got `%s`.', fragmentNode.name, START_CURSOR, cursor) : invariant(false) : void 0;\n  var hasMore;\n  if (direction === 'forward') {\n    hasMore = cursor != null && pageInfo[HAS_NEXT_PAGE] === true;\n  } else {\n    hasMore = cursor != null && pageInfo[HAS_PREV_PAGE] === true;\n  }\n  return {\n    cursor: cursor,\n    hasMore: hasMore\n  };\n}\nmodule.exports = useLoadMoreFunction;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useMemoVariables = require('./useMemoVariables');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  createOperationDescriptor = _require.createOperationDescriptor,\n  getRequest = _require.getRequest;\nvar useMemo = React.useMemo;\nfunction useMemoOperationDescriptor(gqlQuery, variables, cacheConfig) {\n  var memoVariables = useMemoVariables(variables);\n  var memoCacheConfig = useMemoVariables(cacheConfig || {});\n  return useMemo(function () {\n    return createOperationDescriptor(getRequest(gqlQuery), memoVariables, memoCacheConfig);\n  }, [gqlQuery, memoVariables, memoCacheConfig]);\n}\nmodule.exports = useMemoOperationDescriptor;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar _require = require('react'),\n  useState = _require.useState;\n\n/**\n * Memoizes the passed in `variables` object based on `areEqual` equality.\n * This is useful when a `variables` object is used as a value in a depencency\n * array as it might often be constructed during render.\n */\nfunction useMemoVariables(variables) {\n  var _useState = useState(variables),\n    mirroredVariables = _useState[0],\n    setMirroredVariables = _useState[1];\n  if (areEqual(variables, mirroredVariables)) {\n    return mirroredVariables;\n  } else {\n    setMirroredVariables(variables);\n    return variables;\n  }\n}\nmodule.exports = useMemoVariables;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  defaultCommitMutation = _require.commitMutation;\nvar useState = React.useState,\n  useEffect = React.useEffect,\n  useRef = React.useRef,\n  useCallback = React.useCallback;\nfunction useMutation(mutation) {\n  var commitMutationFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultCommitMutation;\n  var environment = useRelayEnvironment();\n  var isMountedRef = useIsMountedRef();\n  var environmentRef = useRef(environment);\n  var mutationRef = useRef(mutation);\n  var inFlightMutationsRef = useRef(new Set());\n  var _useState = useState(false),\n    isMutationInFlight = _useState[0],\n    setMutationInFlight = _useState[1];\n  var cleanup = useCallback(function (disposable) {\n    if (environmentRef.current === environment && mutationRef.current === mutation) {\n      inFlightMutationsRef.current[\"delete\"](disposable);\n      if (isMountedRef.current) {\n        setMutationInFlight(inFlightMutationsRef.current.size > 0);\n      }\n    }\n  }, [environment, isMountedRef, mutation]);\n  useEffect(function () {\n    if (environmentRef.current !== environment || mutationRef.current !== mutation) {\n      inFlightMutationsRef.current = new Set();\n      if (isMountedRef.current) {\n        setMutationInFlight(false);\n      }\n      environmentRef.current = environment;\n      mutationRef.current = mutation;\n    }\n  }, [environment, isMountedRef, mutation]);\n  var commit = useCallback(function (config) {\n    if (isMountedRef.current) {\n      setMutationInFlight(true);\n    }\n    var disposable = commitMutationFn(environment, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, config), {}, {\n      mutation: mutation,\n      onCompleted: function onCompleted(response, errors) {\n        var _config$onCompleted;\n        cleanup(disposable);\n        (_config$onCompleted = config.onCompleted) === null || _config$onCompleted === void 0 ? void 0 : _config$onCompleted.call(config, response, errors);\n      },\n      onError: function onError(error) {\n        var _config$onError;\n        cleanup(disposable);\n        (_config$onError = config.onError) === null || _config$onError === void 0 ? void 0 : _config$onError.call(config, error);\n      },\n      onUnsubscribe: function onUnsubscribe() {\n        var _config$onUnsubscribe;\n        cleanup(disposable);\n        (_config$onUnsubscribe = config.onUnsubscribe) === null || _config$onUnsubscribe === void 0 ? void 0 : _config$onUnsubscribe.call(config);\n      },\n      onNext: function onNext() {\n        var _config$onNext;\n        (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n      }\n    }));\n    inFlightMutationsRef.current.add(disposable);\n    return disposable;\n  }, [cleanup, commitMutationFn, environment, isMountedRef, mutation]);\n  return [commit, isMutationInFlight];\n}\nmodule.exports = useMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar HooksImplementation = require('./HooksImplementation');\nvar useLoadMoreFunction = require('./useLoadMoreFunction');\nvar useRefetchableFragmentNode = require('./useRefetchableFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require = require('react'),\n  useCallback = _require.useCallback,\n  useDebugValue = _require.useDebugValue,\n  useState = _require.useState;\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment,\n  getFragmentIdentifier = _require2.getFragmentIdentifier,\n  getPaginationMetadata = _require2.getPaginationMetadata;\n\n// This separate type export is only needed as long as we are injecting\n// a separate hooks implementation in ./HooksImplementation -- it can\n// be removed after we stop doing that.\n\nfunction usePaginationFragment_LEGACY(fragmentInput, parentFragmentRef) {\n  var fragmentNode = getFragment(fragmentInput);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of usePaginationFragment()');\n  var componentDisplayName = 'usePaginationFragment()';\n  var _getPaginationMetadat = getPaginationMetadata(fragmentNode, componentDisplayName),\n    connectionPathInFragmentData = _getPaginationMetadat.connectionPathInFragmentData,\n    paginationRequest = _getPaginationMetadat.paginationRequest,\n    paginationMetadata = _getPaginationMetadat.paginationMetadata,\n    identifierField = _getPaginationMetadat.identifierField;\n  var _useRefetchableFragme = useRefetchableFragmentNode(fragmentNode, parentFragmentRef, componentDisplayName),\n    fragmentData = _useRefetchableFragme.fragmentData,\n    fragmentRef = _useRefetchableFragme.fragmentRef,\n    refetch = _useRefetchableFragme.refetch;\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, fragmentRef);\n\n  // Backward pagination\n  var _useLoadMore = useLoadMore({\n      componentDisplayName: componentDisplayName,\n      connectionPathInFragmentData: connectionPathInFragmentData,\n      direction: 'backward',\n      fragmentData: fragmentData,\n      fragmentIdentifier: fragmentIdentifier,\n      fragmentNode: fragmentNode,\n      fragmentRef: fragmentRef,\n      identifierField: identifierField,\n      paginationMetadata: paginationMetadata,\n      paginationRequest: paginationRequest\n    }),\n    loadPrevious = _useLoadMore[0],\n    hasPrevious = _useLoadMore[1],\n    isLoadingPrevious = _useLoadMore[2],\n    disposeFetchPrevious = _useLoadMore[3];\n\n  // Forward pagination\n  var _useLoadMore2 = useLoadMore({\n      componentDisplayName: componentDisplayName,\n      connectionPathInFragmentData: connectionPathInFragmentData,\n      direction: 'forward',\n      fragmentData: fragmentData,\n      fragmentIdentifier: fragmentIdentifier,\n      fragmentNode: fragmentNode,\n      fragmentRef: fragmentRef,\n      identifierField: identifierField,\n      paginationMetadata: paginationMetadata,\n      paginationRequest: paginationRequest\n    }),\n    loadNext = _useLoadMore2[0],\n    hasNext = _useLoadMore2[1],\n    isLoadingNext = _useLoadMore2[2],\n    disposeFetchNext = _useLoadMore2[3];\n  var refetchPagination = useCallback(function (variables, options) {\n    disposeFetchNext();\n    disposeFetchPrevious();\n    return refetch(variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options), {}, {\n      __environment: undefined\n    }));\n  }, [disposeFetchNext, disposeFetchPrevious, refetch]);\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: fragmentData,\n      hasNext: hasNext,\n      isLoadingNext: isLoadingNext,\n      hasPrevious: hasPrevious,\n      isLoadingPrevious: isLoadingPrevious\n    });\n  }\n  return {\n    data: fragmentData,\n    loadNext: loadNext,\n    loadPrevious: loadPrevious,\n    hasNext: hasNext,\n    hasPrevious: hasPrevious,\n    isLoadingNext: isLoadingNext,\n    isLoadingPrevious: isLoadingPrevious,\n    refetch: refetchPagination\n  };\n}\nfunction useLoadMore(args) {\n  var _useState = useState(false),\n    isLoadingMore = _useState[0],\n    setIsLoadingMore = _useState[1];\n  var observer = {\n    start: function start() {\n      return setIsLoadingMore(true);\n    },\n    complete: function complete() {\n      return setIsLoadingMore(false);\n    },\n    error: function error() {\n      return setIsLoadingMore(false);\n    }\n  };\n  var handleReset = function handleReset() {\n    return setIsLoadingMore(false);\n  };\n  var _useLoadMoreFunction = useLoadMoreFunction((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, args), {}, {\n      observer: observer,\n      onReset: handleReset\n    })),\n    loadMore = _useLoadMoreFunction[0],\n    hasMore = _useLoadMoreFunction[1],\n    disposeFetch = _useLoadMoreFunction[2];\n  return [loadMore, hasMore, isLoadingMore, disposeFetch];\n}\nfunction usePaginationFragment(fragmentInput, parentFragmentRef) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    return impl.usePaginationFragment(fragmentInput, parentFragmentRef);\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return usePaginationFragment_LEGACY(fragmentInput, parentFragmentRef);\n  }\n}\nmodule.exports = usePaginationFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./loadQuery'),\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useLazyLoadQueryNode = require('./useLazyLoadQueryNode');\nvar useMemoOperationDescriptor = require('./useMemoOperationDescriptor');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require2 = require('react'),\n  useDebugValue = _require2.useDebugValue;\nvar _require3 = require('relay-runtime'),\n  _require3$__internal = _require3.__internal,\n  fetchQueryDeduped = _require3$__internal.fetchQueryDeduped,\n  fetchQuery = _require3$__internal.fetchQuery;\nvar warning = require(\"fbjs/lib/warning\");\nfunction usePreloadedQuery(gqlQuery, preloadedQuery, options) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var environment = useRelayEnvironment();\n  var fetchKey = preloadedQuery.fetchKey,\n    fetchPolicy = preloadedQuery.fetchPolicy,\n    source = preloadedQuery.source,\n    variables = preloadedQuery.variables,\n    networkCacheConfig = preloadedQuery.networkCacheConfig;\n  var operation = useMemoOperationDescriptor(gqlQuery, variables, networkCacheConfig);\n  var useLazyLoadQueryNodeParams;\n  if (preloadedQuery.kind === 'PreloadedQuery_DEPRECATED') {\n    !(operation.request.node.params.name === preloadedQuery.name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'usePreloadedQuery(): Expected data to be prefetched for query `%s`, ' + 'got prefetch results for query `%s`.', operation.request.node.params.name, preloadedQuery.name) : invariant(false) : void 0;\n    useLazyLoadQueryNodeParams = {\n      componentDisplayName: 'usePreloadedQuery()',\n      fetchKey: fetchKey,\n      fetchObservable: fetchQueryDeduped(environment, operation.request.identifier, function () {\n        if (environment === preloadedQuery.environment && source != null) {\n          return environment.executeWithSource({\n            operation: operation,\n            source: source\n          });\n        } else {\n          return environment.execute({\n            operation: operation\n          });\n        }\n      }),\n      fetchPolicy: fetchPolicy,\n      query: operation,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    };\n  } else {\n    process.env.NODE_ENV !== \"production\" ? warning(preloadedQuery.isDisposed === false, 'usePreloadedQuery(): Expected preloadedQuery to not be disposed yet. ' + 'This is because disposing the query marks it for future garbage ' + 'collection, and as such query results may no longer be present in the Relay ' + 'store. In the future, this will become a hard error.') : void 0;\n    var fallbackFetchObservable = fetchQuery(environment, operation);\n    var fetchObservable;\n    if (source != null && environment === preloadedQuery.environment) {\n      // If the source observable exists and the environments match, reuse\n      // the source observable.\n      // If the source observable happens to be empty, we need to fall back\n      // and re-execute and de-dupe the query (at render time).\n      fetchObservable = source.ifEmpty(fallbackFetchObservable);\n    } else if (environment !== preloadedQuery.environment) {\n      // If a call to loadQuery is made with a particular environment, and that\n      // preloaded query is passed to usePreloadedQuery in a different environment\n      // context, we cannot re-use the existing preloaded query.\n      // Instead, we need to fall back and re-execute and de-dupe the query with\n      // the new environment (at render time).\n      // TODO T68036756 track occurences of this warning and turn it into a hard error\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usePreloadedQuery(): usePreloadedQuery was passed a preloaded query ' + 'that was created with a different environment than the one that is currently ' + 'in context. In the future, this will become a hard error.') : void 0;\n      fetchObservable = fallbackFetchObservable;\n    } else {\n      // if (source == null)\n      // If the source observable does not exist, we need to\n      // fall back and re-execute and de-dupe the query (at render time).\n      fetchObservable = fallbackFetchObservable;\n    }\n    useLazyLoadQueryNodeParams = {\n      componentDisplayName: 'usePreloadedQuery()',\n      fetchObservable: fetchObservable,\n      fetchKey: fetchKey,\n      fetchPolicy: fetchPolicy,\n      query: operation,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    };\n  }\n  var data = useLazyLoadQueryNode(useLazyLoadQueryNodeParams);\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      query: preloadedQuery.name,\n      variables: preloadedQuery.variables,\n      data: data,\n      fetchKey: fetchKey,\n      fetchPolicy: fetchPolicy,\n      renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n    });\n  }\n  return data;\n}\nmodule.exports = usePreloadedQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _require = require('./loadQuery'),\n  loadQuery = _require.loadQuery,\n  useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require2 = require('react'),\n  useCallback = _require2.useCallback,\n  useEffect = _require2.useEffect,\n  useRef = _require2.useRef,\n  useState = _require2.useState;\nvar _require3 = require('relay-runtime'),\n  getRequest = _require3.getRequest;\nvar initialNullQueryReferenceState = {\n  kind: 'NullQueryReference'\n};\nfunction requestIsLiveQuery(preloadableRequest) {\n  if (preloadableRequest.kind === 'PreloadableConcreteRequest') {\n    return preloadableRequest.params.metadata.live !== undefined;\n  }\n  var request = getRequest(preloadableRequest);\n  return request.params.metadata.live !== undefined;\n}\nfunction useQueryLoader(preloadableRequest, initialQueryReference) {\n  /**\n   * We want to always call `queryReference.dispose()` for every call to\n   * `setQueryReference(loadQuery(...))` so that no leaks of data in Relay stores\n   * will occur.\n   *\n   * However, a call to `setState(newState)` is not always followed by a commit where\n   * this value is reflected in the state. Thus, we cannot reliably clean up each\n   * ref with `useEffect(() => () => queryReference.dispose(), [queryReference])`.\n   *\n   * Instead, we keep track of each call to `loadQuery` in a ref.\n   * Relying on the fact that if a state change commits, no state changes that were\n   * initiated prior to the currently committing state change will ever subsequently\n   * commit, we can safely dispose of all preloaded query references\n   * associated with state changes initiated prior to the currently committing state\n   * change.\n   *\n   * Finally, when the hook unmounts, we also dispose of all remaining uncommitted\n   * query references.\n   */\n\n  var initialQueryReferenceInternal = initialQueryReference !== null && initialQueryReference !== void 0 ? initialQueryReference : initialNullQueryReferenceState;\n  var environment = useRelayEnvironment();\n  useTrackLoadQueryInRender();\n  var isMountedRef = useIsMountedRef();\n  var undisposedQueryReferencesRef = useRef(new Set([initialQueryReferenceInternal]));\n  var _useState = useState(function () {\n      return initialQueryReferenceInternal;\n    }),\n    queryReference = _useState[0],\n    setQueryReference = _useState[1];\n  var _useState2 = useState(function () {\n      return initialQueryReferenceInternal;\n    }),\n    previousInitialQueryReference = _useState2[0],\n    setPreviousInitialQueryReference = _useState2[1];\n  if (initialQueryReferenceInternal !== previousInitialQueryReference) {\n    // Rendering the query reference makes it \"managed\" by this hook, so\n    // we start keeping track of it so we can dispose it when it is no longer\n    // necessary here\n    // TODO(T78446637): Handle disposal of managed query references in\n    // components that were never mounted after rendering\n    undisposedQueryReferencesRef.current.add(initialQueryReferenceInternal);\n    setPreviousInitialQueryReference(initialQueryReferenceInternal);\n    setQueryReference(initialQueryReferenceInternal);\n  }\n  var disposeQuery = useCallback(function () {\n    if (isMountedRef.current) {\n      undisposedQueryReferencesRef.current.add(initialNullQueryReferenceState);\n      setQueryReference(initialNullQueryReferenceState);\n    }\n  }, [isMountedRef]);\n  var queryLoaderCallback = useCallback(function (variables, options) {\n    var mergedOptions = options != null && options.hasOwnProperty('__environment') ? {\n      fetchPolicy: options.fetchPolicy,\n      networkCacheConfig: options.networkCacheConfig,\n      __nameForWarning: options.__nameForWarning\n    } : options;\n    if (isMountedRef.current) {\n      var _options$__environmen;\n      var updatedQueryReference = loadQuery((_options$__environmen = options === null || options === void 0 ? void 0 : options.__environment) !== null && _options$__environmen !== void 0 ? _options$__environmen : environment, preloadableRequest, variables, mergedOptions);\n      undisposedQueryReferencesRef.current.add(updatedQueryReference);\n      setQueryReference(updatedQueryReference);\n    }\n  }, [environment, preloadableRequest, setQueryReference, isMountedRef]);\n  var maybeHiddenOrFastRefresh = useRef(false);\n  useEffect(function () {\n    return function () {\n      // Attempt to detect if the component was\n      // hidden (by Offscreen API), or fast refresh occured;\n      // Only in these situations would the effect cleanup\n      // for \"unmounting\" run multiple times, so if\n      // we are ever able to read this ref with a value\n      // of true, it means that one of these cases\n      // has happened.\n      maybeHiddenOrFastRefresh.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    if (maybeHiddenOrFastRefresh.current === true) {\n      // This block only runs if the component has previously \"unmounted\"\n      // due to it being hidden by the Offscreen API, or during fast refresh.\n      // At this point, the current queryReference will have been disposed\n      // by the previous cleanup, so instead of attempting to\n      // do our regular commit setup, which would incorrectly leave our\n      // current queryReference disposed, we need to load the query again\n      // and force a re-render by calling queryLoaderCallback again,\n      // so that the queryReference is correctly re-retained, and\n      // potentially refetched if necessary.\n      maybeHiddenOrFastRefresh.current = false;\n      if (queryReference.kind !== 'NullQueryReference') {\n        queryLoaderCallback(queryReference.variables, {\n          fetchPolicy: queryReference.fetchPolicy,\n          networkCacheConfig: queryReference.networkCacheConfig\n        });\n      }\n      return;\n    }\n\n    // When a new queryReference is committed, we iterate over all\n    // query references in undisposedQueryReferences and dispose all of\n    // the refs that aren't the currently committed one. This ensures\n    // that we don't leave any dangling query references for the\n    // case that loadQuery is called multiple times before commit; when\n    // this happens, multiple state updates will be scheduled, but only one\n    // will commit, meaning that we need to keep track of and dispose any\n    // query references that don't end up committing.\n    // - We are relying on the fact that sets iterate in insertion order, and we\n    // can remove items from a set as we iterate over it (i.e. no iterator\n    // invalidation issues.) Thus, it is safe to loop through\n    // undisposedQueryReferences until we find queryReference, and\n    // remove and dispose all previous references.\n    // - We are guaranteed to find queryReference in the set, because if a\n    // state update results in a commit, no state updates initiated prior to that\n    // one will be committed, and we are disposing and removing references\n    // associated with updates that were scheduled prior to the currently\n    // committing state change. (A useEffect callback is called during the commit\n    // phase.)\n    var undisposedQueryReferences = undisposedQueryReferencesRef.current;\n    if (isMountedRef.current) {\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(undisposedQueryReferences),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var undisposedQueryReference = _step.value;\n          if (undisposedQueryReference === queryReference) {\n            break;\n          }\n          undisposedQueryReferences[\"delete\"](undisposedQueryReference);\n          if (undisposedQueryReference.kind !== 'NullQueryReference') {\n            if (requestIsLiveQuery(preloadableRequest)) {\n              undisposedQueryReference.dispose && undisposedQueryReference.dispose();\n            } else {\n              undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, [queryReference, isMountedRef, queryLoaderCallback, preloadableRequest]);\n  useEffect(function () {\n    return function disposeAllRemainingQueryReferences() {\n      // undisposedQueryReferences.current is never reassigned\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(undisposedQueryReferencesRef.current),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var undisposedQueryReference = _step2.value;\n          if (undisposedQueryReference.kind !== 'NullQueryReference') {\n            if (requestIsLiveQuery(preloadableRequest)) {\n              undisposedQueryReference.dispose && undisposedQueryReference.dispose();\n            } else {\n              undisposedQueryReference.releaseQuery && undisposedQueryReference.releaseQuery();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n  }, [preloadableRequest]);\n  return [queryReference.kind === 'NullQueryReference' ? null : queryReference, queryLoaderCallback, disposeQuery];\n}\nmodule.exports = useQueryLoader;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar HooksImplementation = require('./HooksImplementation');\nvar useRefetchableFragmentNode = require('./useRefetchableFragmentNode');\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\nvar _require = require('react'),\n  useDebugValue = _require.useDebugValue;\nvar _require2 = require('relay-runtime'),\n  getFragment = _require2.getFragment;\nfunction useRefetchableFragment_LEGACY(fragmentInput, fragmentRef) {\n  var fragmentNode = getFragment(fragmentInput);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of useRefetchableFragment()');\n  var _useRefetchableFragme = useRefetchableFragmentNode(fragmentNode, fragmentRef, 'useRefetchableFragment()'),\n    fragmentData = _useRefetchableFragme.fragmentData,\n    refetch = _useRefetchableFragme.refetch;\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: fragmentData\n    });\n  }\n\n  // $FlowFixMe[incompatible-return]\n  // $FlowFixMe[prop-missing]\n  return [fragmentData, refetch];\n}\nfunction useRefetchableFragment(fragmentInput, parentFragmentRef) {\n  var impl = HooksImplementation.get();\n  if (impl) {\n    return impl.useRefetchableFragment(fragmentInput, parentFragmentRef);\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useRefetchableFragment_LEGACY(fragmentInput, parentFragmentRef);\n  }\n}\nmodule.exports = useRefetchableFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('./FragmentResource'),\n  getFragmentResourceForEnvironment = _require.getFragmentResourceForEnvironment;\nvar ProfilerContext = require('./ProfilerContext');\nvar _require2 = require('./QueryResource'),\n  getQueryResourceForEnvironment = _require2.getQueryResourceForEnvironment;\nvar useFragmentNode = require('./useFragmentNode');\nvar useIsMountedRef = require('./useIsMountedRef');\nvar useQueryLoader = require('./useQueryLoader');\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar invariant = require('invariant');\nvar _require3 = require('react'),\n  useCallback = _require3.useCallback,\n  useContext = _require3.useContext,\n  useReducer = _require3.useReducer;\nvar _require4 = require('relay-runtime'),\n  fetchQuery = _require4.__internal.fetchQuery,\n  createOperationDescriptor = _require4.createOperationDescriptor,\n  getFragmentIdentifier = _require4.getFragmentIdentifier,\n  getRefetchMetadata = _require4.getRefetchMetadata,\n  getSelector = _require4.getSelector,\n  getValueAtPath = _require4.getValueAtPath;\nvar warning = require(\"fbjs/lib/warning\");\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'refetch':\n      {\n        var _action$refetchEnviro;\n        return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, state), {}, {\n          fetchPolicy: action.fetchPolicy,\n          mirroredEnvironment: (_action$refetchEnviro = action.refetchEnvironment) !== null && _action$refetchEnviro !== void 0 ? _action$refetchEnviro : state.mirroredEnvironment,\n          onComplete: action.onComplete,\n          refetchEnvironment: action.refetchEnvironment,\n          refetchQuery: action.refetchQuery,\n          renderPolicy: action.renderPolicy\n        });\n      }\n    case 'reset':\n      {\n        return {\n          fetchPolicy: undefined,\n          mirroredEnvironment: action.environment,\n          mirroredFragmentIdentifier: action.fragmentIdentifier,\n          onComplete: undefined,\n          refetchQuery: null,\n          renderPolicy: undefined\n        };\n      }\n    default:\n      {\n        action.type;\n        throw new Error('useRefetchableFragmentNode: Unexpected action type');\n      }\n  }\n}\nfunction useRefetchableFragmentNode(fragmentNode, parentFragmentRef, componentDisplayName) {\n  var parentEnvironment = useRelayEnvironment();\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n    refetchableRequest = _getRefetchMetadata.refetchableRequest,\n    fragmentRefPathInResponse = _getRefetchMetadata.fragmentRefPathInResponse,\n    identifierField = _getRefetchMetadata.identifierField;\n  var fragmentIdentifier = getFragmentIdentifier(fragmentNode, parentFragmentRef);\n  var _useReducer = useReducer(reducer, {\n      fetchPolicy: undefined,\n      mirroredEnvironment: parentEnvironment,\n      mirroredFragmentIdentifier: fragmentIdentifier,\n      onComplete: undefined,\n      refetchEnvironment: null,\n      refetchQuery: null,\n      renderPolicy: undefined\n    }),\n    refetchState = _useReducer[0],\n    dispatch = _useReducer[1];\n  var fetchPolicy = refetchState.fetchPolicy,\n    mirroredEnvironment = refetchState.mirroredEnvironment,\n    mirroredFragmentIdentifier = refetchState.mirroredFragmentIdentifier,\n    onComplete = refetchState.onComplete,\n    refetchEnvironment = refetchState.refetchEnvironment,\n    refetchQuery = refetchState.refetchQuery,\n    renderPolicy = refetchState.renderPolicy;\n  var environment = refetchEnvironment !== null && refetchEnvironment !== void 0 ? refetchEnvironment : parentEnvironment;\n  var QueryResource = getQueryResourceForEnvironment(environment);\n  var FragmentResource = getFragmentResourceForEnvironment(environment);\n  var profilerContext = useContext(ProfilerContext);\n  var shouldReset = environment !== mirroredEnvironment || fragmentIdentifier !== mirroredFragmentIdentifier;\n  var _useQueryLoader = useQueryLoader(refetchableRequest),\n    queryRef = _useQueryLoader[0],\n    loadQuery = _useQueryLoader[1],\n    disposeQuery = _useQueryLoader[2];\n  var fragmentRef = parentFragmentRef;\n  if (shouldReset) {\n    dispatch({\n      type: 'reset',\n      environment: environment,\n      fragmentIdentifier: fragmentIdentifier\n    });\n    disposeQuery();\n  } else if (refetchQuery != null && queryRef != null) {\n    // If refetch was called, we expect to have a refetchQuery and queryRef\n    // in state, since both state updates to set the refetchQuery and the\n    // queryRef occur simultaneously.\n    // In this case, we need to read the refetched query data (potentially\n    // suspending if it's in flight), and extract the new fragment ref\n    // from the query in order read the current @refetchable fragment\n    // with the updated fragment owner as the new refetchQuery.\n\n    // Before observing the refetch, record the current ID and typename\n    // so that, if we are refetching existing data on\n    // a field that implements Node, after refetching we\n    // can validate that the received data is consistent\n    var debugPreviousIDAndTypename;\n    if (process.env.NODE_ENV !== \"production\") {\n      debugPreviousIDAndTypename = debugFunctions.getInitialIDAndType(refetchQuery.request.variables, fragmentRefPathInResponse, environment);\n    }\n    var handleQueryCompleted = function handleQueryCompleted(maybeError) {\n      onComplete && onComplete(maybeError !== null && maybeError !== void 0 ? maybeError : null);\n    };\n\n    // The queryRef.source obtained from useQueryLoader will be\n    // an observable we can consume /if/ a network request was\n    // started. Otherwise, given that QueryResource.prepare\n    // always expects an observable we fall back to a new network\n    // observable. Note however that if loadQuery did not make a network\n    // request, we don't expect to make one here, unless the state of\n    // the cache has changed between the call to refetch and this\n    // render.\n    var fetchObservable = queryRef.source != null ? queryRef.source : fetchQuery(environment, refetchQuery);\n\n    // Now wwe can we read the refetch query here using the\n    // queryRef provided from useQueryLoader. Note that the\n    // network request is started during the call to refetch,\n    // but if the refetch query is still in flight, we will suspend\n    // at this point:\n    var queryResult = profilerContext.wrapPrepareQueryResource(function () {\n      return QueryResource.prepare(refetchQuery, fetchObservable, fetchPolicy, renderPolicy, {\n        error: handleQueryCompleted,\n        complete: function complete() {\n          // Validate that the type of the object we got back matches the type\n          // of the object already in the store\n          if (process.env.NODE_ENV !== \"production\") {\n            debugFunctions.checkSameTypeAfterRefetch(debugPreviousIDAndTypename, environment, fragmentNode, componentDisplayName);\n          }\n          handleQueryCompleted();\n        }\n      }, queryRef.fetchKey, profilerContext);\n    });\n    var queryData = FragmentResource.read(queryResult.fragmentNode, queryResult.fragmentRef, componentDisplayName).data;\n    !(queryData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected to be able to read refetch query response. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n\n    // After reading/fetching the refetch query, we extract from the\n    // refetch query response the new fragment ref we need to use to read\n    // the fragment. The new fragment ref will point to the refetch query\n    // as its fragment owner.\n    var refetchedFragmentRef = getValueAtPath(queryData, fragmentRefPathInResponse);\n    fragmentRef = refetchedFragmentRef;\n    if (process.env.NODE_ENV !== \"production\") {\n      // Validate that the id of the object we got back matches the id\n      // we queried for in the variables.\n      // We do this during render instead of onComplete to make sure we are\n      // only validating the most recent refetch.\n      debugFunctions.checkSameIDAfterRefetch(debugPreviousIDAndTypename, fragmentRef, fragmentNode, componentDisplayName);\n    }\n  }\n\n  // We read and subscribe to the fragment using useFragmentNode.\n  // If refetch was called, we read the fragment using the new computed\n  // fragment ref from the refetch query response; otherwise, we use the\n  // fragment ref passed by the caller as normal.\n  var _useFragmentNode = useFragmentNode(fragmentNode, fragmentRef, componentDisplayName),\n    fragmentData = _useFragmentNode.data,\n    disableStoreUpdates = _useFragmentNode.disableStoreUpdates,\n    enableStoreUpdates = _useFragmentNode.enableStoreUpdates;\n  var refetch = useRefetchFunction(componentDisplayName, dispatch, disposeQuery, fragmentData, fragmentIdentifier, fragmentNode, fragmentRefPathInResponse, identifierField, loadQuery, parentFragmentRef, refetchableRequest);\n  return {\n    fragmentData: fragmentData,\n    fragmentRef: fragmentRef,\n    refetch: refetch,\n    disableStoreUpdates: disableStoreUpdates,\n    enableStoreUpdates: enableStoreUpdates\n  };\n}\nfunction useRefetchFunction(componentDisplayName, dispatch, disposeQuery, fragmentData, fragmentIdentifier, fragmentNode, fragmentRefPathInResponse, identifierField, loadQuery, parentFragmentRef, refetchableRequest) {\n  var isMountedRef = useIsMountedRef();\n  var identifierValue = identifierField != null && fragmentData != null && typeof fragmentData === 'object' ? fragmentData[identifierField] : null;\n  return useCallback(function (providedRefetchVariables, options) {\n    // Bail out and warn if we're trying to refetch after the component\n    // has unmounted\n    if (isMountedRef.current !== true) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected call to `refetch` on unmounted component for fragment ' + '`%s` in `%s`. It looks like some instances of your component are ' + 'still trying to fetch data but they already unmounted. ' + 'Please make sure you clear all timers, intervals, ' + 'async calls, etc that may trigger a fetch.', fragmentNode.name, componentDisplayName) : void 0;\n      return {\n        dispose: function dispose() {}\n      };\n    }\n    if (parentFragmentRef == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected call to `refetch` while using a null fragment ref ' + 'for fragment `%s` in `%s`. When calling `refetch`, we expect ' + \"initial fragment data to be non-null. Please make sure you're \" + 'passing a valid fragment ref to `%s` before calling ' + '`refetch`, or make sure you pass all required variables to `refetch`.', fragmentNode.name, componentDisplayName, componentDisplayName) : void 0;\n    }\n    var refetchEnvironment = options === null || options === void 0 ? void 0 : options.__environment;\n    var fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy;\n    var renderPolicy = options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy;\n    var onComplete = options === null || options === void 0 ? void 0 : options.onComplete;\n    var fragmentSelector = getSelector(fragmentNode, parentFragmentRef);\n    var parentVariables;\n    var fragmentVariables;\n    if (fragmentSelector == null) {\n      parentVariables = {};\n      fragmentVariables = {};\n    } else if (fragmentSelector.kind === 'PluralReaderSelector') {\n      var _fragmentSelector$sel, _fragmentSelector$sel2, _fragmentSelector$sel3, _fragmentSelector$sel4;\n      parentVariables = (_fragmentSelector$sel = (_fragmentSelector$sel2 = fragmentSelector.selectors[0]) === null || _fragmentSelector$sel2 === void 0 ? void 0 : _fragmentSelector$sel2.owner.variables) !== null && _fragmentSelector$sel !== void 0 ? _fragmentSelector$sel : {};\n      fragmentVariables = (_fragmentSelector$sel3 = (_fragmentSelector$sel4 = fragmentSelector.selectors[0]) === null || _fragmentSelector$sel4 === void 0 ? void 0 : _fragmentSelector$sel4.variables) !== null && _fragmentSelector$sel3 !== void 0 ? _fragmentSelector$sel3 : {};\n    } else {\n      parentVariables = fragmentSelector.owner.variables;\n      fragmentVariables = fragmentSelector.variables;\n    }\n\n    // A user of `useRefetchableFragment()` may pass a subset of\n    // all variables required by the fragment when calling `refetch()`.\n    // We fill in any variables not passed by the call to `refetch()` with the\n    // variables from the original parent fragment owner.\n    var refetchVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, parentVariables), fragmentVariables), providedRefetchVariables);\n\n    // If the query needs an identifier value ('id' or similar) and one\n    // was not explicitly provided, read it from the fragment data.\n    if (identifierField != null && !providedRefetchVariables.hasOwnProperty('id')) {\n      // @refetchable fragments are guaranteed to have an `id` selection\n      // if the type is Node, implements Node, or is @fetchable. Double-check\n      // that there actually is a value at runtime.\n      if (typeof identifierValue !== 'string') {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Expected result to have a string  ' + '`%s` in order to refetch, got `%s`.', identifierField, identifierValue) : void 0;\n      }\n      refetchVariables.id = identifierValue;\n    }\n    var refetchQuery = createOperationDescriptor(refetchableRequest, refetchVariables, {\n      force: true\n    });\n\n    // We call loadQuery which will start a network request if necessary\n    // and update the querRef from useQueryLoader.\n    // Note the following:\n    // - loadQuery will dispose of any previously refetched queries.\n    // - We use the variables extracted off the OperationDescriptor\n    // so that they have been filtered out to include only the\n    // variables actually declared in the query.\n    loadQuery(refetchQuery.request.variables, {\n      fetchPolicy: fetchPolicy,\n      __environment: refetchEnvironment,\n      __nameForWarning: 'refetch'\n    });\n    dispatch({\n      type: 'refetch',\n      fetchPolicy: fetchPolicy,\n      onComplete: onComplete,\n      refetchEnvironment: refetchEnvironment,\n      refetchQuery: refetchQuery,\n      renderPolicy: renderPolicy\n    });\n    return {\n      dispose: disposeQuery\n    };\n  },\n  // NOTE: We disable react-hooks-deps warning because:\n  //   - We know fragmentRefPathInResponse is static, so it can be omitted from\n  //     deps\n  //   - We know fragmentNode is static, so it can be omitted from deps.\n  //   - fragmentNode and parentFragmentRef are also captured by including\n  //     fragmentIdentifier\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [fragmentIdentifier, dispatch, disposeQuery, identifierValue, loadQuery]);\n}\nvar debugFunctions;\nif (process.env.NODE_ENV !== \"production\") {\n  debugFunctions = {\n    getInitialIDAndType: function getInitialIDAndType(memoRefetchVariables, fragmentRefPathInResponse, environment) {\n      var _require5 = require('relay-runtime'),\n        Record = _require5.Record;\n      var id = memoRefetchVariables === null || memoRefetchVariables === void 0 ? void 0 : memoRefetchVariables.id;\n      if (fragmentRefPathInResponse.length !== 1 || fragmentRefPathInResponse[0] !== 'node' || id == null) {\n        return null;\n      }\n      var recordSource = environment.getStore().getSource();\n      var record = recordSource.get(id);\n      var typename = record && Record.getType(record);\n      if (typename == null) {\n        return null;\n      }\n      return {\n        id: id,\n        typename: typename\n      };\n    },\n    checkSameTypeAfterRefetch: function checkSameTypeAfterRefetch(previousIDAndType, environment, fragmentNode, componentDisplayName) {\n      var _require6 = require('relay-runtime'),\n        Record = _require6.Record;\n      if (!previousIDAndType) {\n        return;\n      }\n      var recordSource = environment.getStore().getSource();\n      var record = recordSource.get(previousIDAndType.id);\n      var typename = record && Record.getType(record);\n      if (typename !== previousIDAndType.typename) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Call to `refetch` returned data with a different ' + '__typename: was `%s`, now `%s`, on `%s` in `%s`. ' + 'Please make sure the server correctly implements' + 'unique id requirement.', previousIDAndType.typename, typename, fragmentNode.name, componentDisplayName) : void 0;\n      }\n    },\n    checkSameIDAfterRefetch: function checkSameIDAfterRefetch(previousIDAndTypename, refetchedFragmentRef, fragmentNode, componentDisplayName) {\n      if (previousIDAndTypename == null) {\n        return;\n      }\n      var _require7 = require('relay-runtime'),\n        ID_KEY = _require7.ID_KEY;\n      // $FlowExpectedError[incompatible-use]\n      var resultID = refetchedFragmentRef[ID_KEY];\n      if (resultID != null && resultID !== previousIDAndTypename.id) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Call to `refetch` returned a different id, expected ' + '`%s`, got `%s`, on `%s` in `%s`. ' + 'Please make sure the server correctly implements ' + 'unique id requirement.', resultID, previousIDAndTypename.id, fragmentNode.name, componentDisplayName) : void 0;\n      }\n    }\n  };\n}\nmodule.exports = useRefetchableFragmentNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ReactRelayContext = require('./../ReactRelayContext');\nvar invariant = require('invariant');\nvar _require = require('react'),\n  useContext = _require.useContext;\nfunction useRelayEnvironment() {\n  var context = useContext(ReactRelayContext);\n  !(context != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'useRelayEnvironment: Expected to have found a Relay environment provided by ' + 'a `RelayEnvironmentProvider` component. ' + 'This usually means that useRelayEnvironment was used in a ' + 'component that is not a descendant of a `RelayEnvironmentProvider`. ' + 'Please make sure a `RelayEnvironmentProvider` has been rendered somewhere ' + 'as a parent or ancestor of your component.') : invariant(false) : void 0;\n  return context.environment;\n}\nmodule.exports = useRelayEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useUnsafeRef_DEPRECATED = require('./useUnsafeRef_DEPRECATED');\nvar warning = require(\"fbjs/lib/warning\");\nfunction useStaticFragmentNodeWarning(fragmentNode, warningContext) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // This is calling `useRef` conditionally, but based on the environment\n    // __DEV__ setting which shouldn't change. This allows us to only pay the\n    // cost of `useRef` in development mode to produce the warning.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var initialPropRef = useUnsafeRef_DEPRECATED(fragmentNode.name);\n    process.env.NODE_ENV !== \"production\" ? warning(initialPropRef.current === fragmentNode.name, 'Relay: The %s has to remain the same over the lifetime of a component. ' + 'Changing it is not supported and will result in unexpected behavior.', warningContext) : void 0;\n  }\n}\nmodule.exports = useStaticFragmentNodeWarning;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require = require('react'),\n  useEffect = _require.useEffect,\n  useRef = _require.useRef;\n\n/**\n * This hook subscribes a callback to the invalidation state of the given data\n * ids.\n * Any time the invalidation state of the given data ids changes, the provided\n * callback will be called.\n * If new ids or a new callback are provided, the subscription will be\n * re-established and the previous one will be disposed.\n * The subscription will automatically be disposed on unmount\n */\nfunction useSubscribeToInvalidationState(dataIDs, callback) {\n  var environment = useRelayEnvironment();\n  var disposableRef = useRef(null);\n  var stableDataIDs = Array.from(dataIDs).sort().join('');\n  useEffect(function () {\n    var store = environment.getStore();\n    var invalidationState = store.lookupInvalidationState(dataIDs);\n    var disposable = store.subscribeToInvalidationState(invalidationState, callback);\n    disposableRef.current = disposable;\n    return function () {\n      return disposable.dispose();\n    };\n\n    // Intentionally excluding dataIDs, since we're using stableDataIDs\n    // instead\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stableDataIDs, callback, environment]);\n  return {\n    dispose: function dispose() {\n      if (disposableRef.current != null) {\n        disposableRef.current.dispose();\n      }\n    }\n  };\n}\nmodule.exports = useSubscribeToInvalidationState;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\nvar _require = require('react'),\n  useEffect = _require.useEffect;\nvar _require2 = require('relay-runtime'),\n  requestSubscription = _require2.requestSubscription;\nfunction useSubscription(config, requestSubscriptionFn) {\n  // N.B. this will re-subscribe every render if config or requestSubscriptionFn\n  // are not memoized.\n  // Please do not pass an object defined in-line.\n  var actualRequestSubscription = requestSubscriptionFn !== null && requestSubscriptionFn !== void 0 ? requestSubscriptionFn : requestSubscription;\n  var environment = useRelayEnvironment();\n  useEffect(function () {\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    var _actualRequestSubscri = actualRequestSubscription(environment, config),\n      dispose = _actualRequestSubscri.dispose;\n    return dispose;\n  }, [environment, config, actualRequestSubscription]);\n}\nmodule.exports = useSubscription;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('react'),\n  useMemo = _require.useMemo;\n\n/**\n * Like `useRef`, but does not warn when accessed during render. It's a bad\n * pattern to read or write from a ref during render as it does not trigger\n * a rerender and might result in bugs.\n */\nfunction useUnsafeRef_DEPRECATED(init) {\n  return useMemo(function () {\n    return {\n      current: init\n    };\n  }, []);\n}\nmodule.exports = useUnsafeRef_DEPRECATED;","/**\n * Relay v15.0.0\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nmodule.exports = require('./lib/index.js');\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ConnectionHandler = require('./connection/ConnectionHandler');\nvar MutationHandlers = require('./connection/MutationHandlers');\nvar invariant = require('invariant');\nfunction RelayDefaultHandlerProvider(handle) {\n  switch (handle) {\n    case 'connection':\n      return ConnectionHandler;\n    case 'deleteRecord':\n      return MutationHandlers.DeleteRecordHandler;\n    case 'deleteEdge':\n      return MutationHandlers.DeleteEdgeHandler;\n    case 'appendEdge':\n      return MutationHandlers.AppendEdgeHandler;\n    case 'prependEdge':\n      return MutationHandlers.PrependEdgeHandler;\n    case 'appendNode':\n      return MutationHandlers.AppendNodeHandler;\n    case 'prependNode':\n      return MutationHandlers.PrependNodeHandler;\n  }\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayDefaultHandlerProvider: No handler provided for `%s`.', handle) : invariant(false) : void 0;\n}\nmodule.exports = RelayDefaultHandlerProvider;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../../store/ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('../../store/RelayStoreUtils'),\n  getStableStorageKey = _require2.getStableStorageKey;\nvar getRelayHandleKey = require('../../util/getRelayHandleKey');\nvar ConnectionInterface = require('./ConnectionInterface');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar CONNECTION = 'connection';\n\n// Per-instance incrementing index used to generate unique edge IDs\nvar NEXT_EDGE_INDEX = '__connection_next_edge_index';\n\n/**\n * @public\n *\n * A default runtime handler for connection fields that appends newly fetched\n * edges onto the end of a connection, regardless of the arguments used to fetch\n * those edges.\n */\nfunction update(store, payload) {\n  var record = store.get(payload.dataID);\n  if (!record) {\n    return;\n  }\n  var _ConnectionInterface$ = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$.EDGES,\n    END_CURSOR = _ConnectionInterface$.END_CURSOR,\n    HAS_NEXT_PAGE = _ConnectionInterface$.HAS_NEXT_PAGE,\n    HAS_PREV_PAGE = _ConnectionInterface$.HAS_PREV_PAGE,\n    PAGE_INFO = _ConnectionInterface$.PAGE_INFO,\n    PAGE_INFO_TYPE = _ConnectionInterface$.PAGE_INFO_TYPE,\n    START_CURSOR = _ConnectionInterface$.START_CURSOR;\n  var serverConnection = record.getLinkedRecord(payload.fieldKey);\n  var serverPageInfo = serverConnection && serverConnection.getLinkedRecord(PAGE_INFO);\n  if (!serverConnection) {\n    record.setValue(null, payload.handleKey);\n    return;\n  }\n  // In rare cases the handleKey field may be unset even though the client\n  // connection record exists, in this case new edges should still be merged\n  // into the existing client connection record (and the field reset to point\n  // to that record).\n  var clientConnectionID = generateClientID(record.getDataID(), payload.handleKey);\n  var clientConnectionField = record.getLinkedRecord(payload.handleKey);\n  var clientConnection = clientConnectionField !== null && clientConnectionField !== void 0 ? clientConnectionField : store.get(clientConnectionID);\n  var clientPageInfo = clientConnection && clientConnection.getLinkedRecord(PAGE_INFO);\n  if (!clientConnection) {\n    // Initial fetch with data: copy fields from the server record\n    var connection = store.create(clientConnectionID, serverConnection.getType());\n    connection.setValue(0, NEXT_EDGE_INDEX);\n    connection.copyFieldsFrom(serverConnection);\n    var serverEdges = serverConnection.getLinkedRecords(EDGES);\n    if (serverEdges) {\n      serverEdges = serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, connection, edge);\n      });\n      connection.setLinkedRecords(serverEdges, EDGES);\n    }\n    record.setLinkedRecord(connection, payload.handleKey);\n    clientPageInfo = store.create(generateClientID(connection.getDataID(), PAGE_INFO), PAGE_INFO_TYPE);\n    clientPageInfo.setValue(false, HAS_NEXT_PAGE);\n    clientPageInfo.setValue(false, HAS_PREV_PAGE);\n    clientPageInfo.setValue(null, END_CURSOR);\n    clientPageInfo.setValue(null, START_CURSOR);\n    if (serverPageInfo) {\n      clientPageInfo.copyFieldsFrom(serverPageInfo);\n    }\n    connection.setLinkedRecord(clientPageInfo, PAGE_INFO);\n  } else {\n    if (clientConnectionField == null) {\n      // If the handleKey field was unset but the client connection record\n      // existed, update the field to point to the record\n      record.setLinkedRecord(clientConnection, payload.handleKey);\n    }\n    var _connection = clientConnection;\n    // Subsequent fetches:\n    // - updated fields on the connection\n    // - merge prev/next edges, de-duplicating by node id\n    // - synthesize page info fields\n    var _serverEdges = serverConnection.getLinkedRecords(EDGES);\n    if (_serverEdges) {\n      _serverEdges = _serverEdges.map(function (edge) {\n        return buildConnectionEdge(store, _connection, edge);\n      });\n    }\n    var prevEdges = _connection.getLinkedRecords(EDGES);\n    var prevPageInfo = _connection.getLinkedRecord(PAGE_INFO);\n    _connection.copyFieldsFrom(serverConnection);\n    // Reset EDGES and PAGE_INFO fields\n    if (prevEdges) {\n      _connection.setLinkedRecords(prevEdges, EDGES);\n    }\n    if (prevPageInfo) {\n      _connection.setLinkedRecord(prevPageInfo, PAGE_INFO);\n    }\n    var nextEdges = [];\n    var args = payload.args;\n    if (prevEdges && _serverEdges) {\n      if (args.after != null) {\n        // Forward pagination from the end of the connection: append edges\n        if (clientPageInfo && args.after === clientPageInfo.getValue(END_CURSOR)) {\n          var nodeIDs = new Set();\n          mergeEdges(prevEdges, nextEdges, nodeIDs);\n          mergeEdges(_serverEdges, nextEdges, nodeIDs);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected after cursor `%s`, edges must ' + 'be fetched from the end of the list (`%s`).', args.after, clientPageInfo && clientPageInfo.getValue(END_CURSOR)) : void 0;\n          return;\n        }\n      } else if (args.before != null) {\n        // Backward pagination from the start of the connection: prepend edges\n        if (clientPageInfo && args.before === clientPageInfo.getValue(START_CURSOR)) {\n          var _nodeIDs = new Set();\n          mergeEdges(_serverEdges, nextEdges, _nodeIDs);\n          mergeEdges(prevEdges, nextEdges, _nodeIDs);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Unexpected before cursor `%s`, edges must ' + 'be fetched from the beginning of the list (`%s`).', args.before, clientPageInfo && clientPageInfo.getValue(START_CURSOR)) : void 0;\n          return;\n        }\n      } else {\n        // The connection was refetched from the beginning/end: replace edges\n        nextEdges = _serverEdges;\n      }\n    } else if (_serverEdges) {\n      nextEdges = _serverEdges;\n    } else {\n      // $FlowFixMe[incompatible-type]\n      nextEdges = prevEdges;\n    }\n    // Update edges only if they were updated, the null check is\n    // for Flow (prevEdges could be null).\n    if (nextEdges != null && nextEdges !== prevEdges) {\n      _connection.setLinkedRecords(nextEdges, EDGES);\n    }\n    // Page info should be updated even if no new edge were returned.\n    if (clientPageInfo && serverPageInfo) {\n      if (args.after == null && args.before == null) {\n        // The connection was refetched from the beginning/end: replace\n        // page_info\n        clientPageInfo.copyFieldsFrom(serverPageInfo);\n      } else if (args.before != null || args.after == null && args.last) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_PREV_PAGE), HAS_PREV_PAGE);\n        var startCursor = serverPageInfo.getValue(START_CURSOR);\n        if (typeof startCursor === 'string') {\n          clientPageInfo.setValue(startCursor, START_CURSOR);\n        }\n      } else if (args.after != null || args.before == null && args.first) {\n        clientPageInfo.setValue(!!serverPageInfo.getValue(HAS_NEXT_PAGE), HAS_NEXT_PAGE);\n        var endCursor = serverPageInfo.getValue(END_CURSOR);\n        if (typeof endCursor === 'string') {\n          clientPageInfo.setValue(endCursor, END_CURSOR);\n        }\n      }\n    }\n  }\n}\n\n/**\n * @public\n *\n * Given a record and the name of the schema field for which a connection was\n * fetched, returns the linked connection record.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * The `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   // Access fields on the connection:\n *   const edges = friends.getLinkedRecords('edges');\n * }\n * ```\n *\n * TODO: t15733312\n * Currently we haven't run into this case yet, but we need to add a `getConnections`\n * that returns an array of the connections under the same `key` regardless of the variables.\n */\nfunction getConnection(record, key, filters) {\n  var handleKey = getRelayHandleKey(CONNECTION, key, null);\n  return record.getLinkedRecord(handleKey, filters);\n}\n\n/**\n * @public\n *\n * Given a record ID, the key of a connection field, and optional filters used\n * to identify the connection, returns the connection ID.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<user-id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *     edges {\n *       node {\n *         id\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * The ID of the `friends` connection record can be accessed with:\n *\n * ```\n * store => {\n *   const connectionID = ConnectionHandler.getConnectionID('<user-id>', 'FriendsFragment_friends');\n * }\n * ```\n */\nfunction getConnectionID(recordID, key, filters) {\n  var handleKey = getRelayHandleKey(CONNECTION, key, null);\n  var storageKey = getStableStorageKey(handleKey, filters);\n  return generateClientID(recordID, storageKey);\n}\n\n/**\n * @public\n *\n * Inserts an edge after the given cursor, or at the end of the list if no\n * cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be appended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   ConnectionHandler.insertEdgeAfter(friends, edge);\n * }\n * ```\n */\nfunction insertEdgeAfter(record, newEdge, cursor) {\n  var _ConnectionInterface$2 = ConnectionInterface.get(),\n    CURSOR = _ConnectionInterface$2.CURSOR,\n    EDGES = _ConnectionInterface$2.EDGES;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n  var nextEdges;\n  if (cursor == null) {\n    nextEdges = edges.concat(newEdge);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      nextEdges.push(edge);\n      if (edge == null) {\n        continue;\n      }\n      var edgeCursor = edge.getValue(CURSOR);\n      if (cursor === edgeCursor) {\n        nextEdges.push(newEdge);\n        foundCursor = true;\n      }\n    }\n    if (!foundCursor) {\n      nextEdges.push(newEdge);\n    }\n  }\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n\n/**\n * @public\n *\n * Creates an edge for a connection record, given a node and edge type.\n */\nfunction createEdge(store, record, node, edgeType) {\n  var _ConnectionInterface$3 = ConnectionInterface.get(),\n    NODE = _ConnectionInterface$3.NODE;\n\n  // An index-based client ID could easily conflict (unless it was\n  // auto-incrementing, but there is nowhere to the store the id)\n  // Instead, construct a client ID based on the connection ID and node ID,\n  // which will only conflict if the same node is added to the same connection\n  // twice. This is acceptable since the `insertEdge*` functions ignore\n  // duplicates.\n  var edgeID = generateClientID(record.getDataID(), node.getDataID());\n  var edge = store.get(edgeID);\n  if (!edge) {\n    edge = store.create(edgeID, edgeType);\n  }\n  edge.setLinkedRecord(node, NODE);\n  if (edge.getValue('cursor') == null) {\n    // Always use null instead of undefined value for cursor\n    // to avoid considering it as missing data\n    edge.setValue(null, 'cursor');\n  }\n  return edge;\n}\n\n/**\n * @public\n *\n * Inserts an edge before the given cursor, or at the beginning of the list if\n * no cursor is provided.\n *\n * Example:\n *\n * Given that data has already been fetched on some user `<id>` on the `friends`\n * field:\n *\n * ```\n * fragment FriendsFragment on User {\n *   friends(first: 10) @connection(key: \"FriendsFragment_friends\") {\n *    edges {\n *      node {\n *        id\n *        }\n *      }\n *   }\n * }\n * ```\n *\n * An edge can be prepended with:\n *\n * ```\n * store => {\n *   const user = store.get('<id>');\n *   const friends = ConnectionHandler.getConnection(user, 'FriendsFragment_friends');\n *   const edge = store.create('<edge-id>', 'FriendsEdge');\n *   ConnectionHandler.insertEdgeBefore(friends, edge);\n * }\n * ```\n */\nfunction insertEdgeBefore(record, newEdge, cursor) {\n  var _ConnectionInterface$4 = ConnectionInterface.get(),\n    CURSOR = _ConnectionInterface$4.CURSOR,\n    EDGES = _ConnectionInterface$4.EDGES;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    record.setLinkedRecords([newEdge], EDGES);\n    return;\n  }\n  var nextEdges;\n  if (cursor == null) {\n    nextEdges = [newEdge].concat(edges);\n  } else {\n    nextEdges = [];\n    var foundCursor = false;\n    for (var ii = 0; ii < edges.length; ii++) {\n      var edge = edges[ii];\n      if (edge != null) {\n        var edgeCursor = edge.getValue(CURSOR);\n        if (cursor === edgeCursor) {\n          nextEdges.push(newEdge);\n          foundCursor = true;\n        }\n      }\n      nextEdges.push(edge);\n    }\n    if (!foundCursor) {\n      nextEdges.unshift(newEdge);\n    }\n  }\n  record.setLinkedRecords(nextEdges, EDGES);\n}\n\n/**\n * @public\n *\n * Remove any edges whose `node.id` matches the given id.\n */\nfunction deleteNode(record, nodeID) {\n  var _ConnectionInterface$5 = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$5.EDGES,\n    NODE = _ConnectionInterface$5.NODE;\n  var edges = record.getLinkedRecords(EDGES);\n  if (!edges) {\n    return;\n  }\n  var nextEdges;\n  for (var ii = 0; ii < edges.length; ii++) {\n    var edge = edges[ii];\n    var node = edge && edge.getLinkedRecord(NODE);\n    if (node != null && node.getDataID() === nodeID) {\n      if (nextEdges === undefined) {\n        nextEdges = edges.slice(0, ii);\n      }\n    } else if (nextEdges !== undefined) {\n      nextEdges.push(edge);\n    }\n  }\n  if (nextEdges !== undefined) {\n    record.setLinkedRecords(nextEdges, EDGES);\n  }\n}\n\n/**\n * @internal\n *\n * Creates a copy of an edge with a unique ID based on per-connection-instance\n * incrementing edge index. This is necessary to avoid collisions between edges,\n * which can occur because (edge) client IDs are assigned deterministically\n * based on the path from the nearest node with an id.\n *\n * Example: if the first N edges of the same connection are refetched, the edges\n * from the second fetch will be assigned the same IDs as the first fetch, even\n * though the nodes they point to may be different (or the same and in different\n * order).\n */\nfunction buildConnectionEdge(store, connection, edge) {\n  if (edge == null) {\n    return edge;\n  }\n  var _ConnectionInterface$6 = ConnectionInterface.get(),\n    EDGES = _ConnectionInterface$6.EDGES;\n  var edgeIndex = connection.getValue(NEXT_EDGE_INDEX);\n  !(typeof edgeIndex === 'number') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ConnectionHandler: Expected %s to be a number, got `%s`.', NEXT_EDGE_INDEX, edgeIndex) : invariant(false) : void 0;\n  var edgeID = generateClientID(connection.getDataID(), EDGES, edgeIndex);\n  var connectionEdge = store.create(edgeID, edge.getType());\n  connectionEdge.copyFieldsFrom(edge);\n  if (connectionEdge.getValue('cursor') == null) {\n    // Always use null instead of undefined value for cursor\n    // to avoid considering it as missing data\n    connectionEdge.setValue(null, 'cursor');\n  }\n  connection.setValue(edgeIndex + 1, NEXT_EDGE_INDEX);\n  return connectionEdge;\n}\n\n/**\n * @internal\n *\n * Adds the source edges to the target edges, skipping edges with\n * duplicate node ids.\n */\nfunction mergeEdges(sourceEdges, targetEdges, nodeIDs) {\n  var _ConnectionInterface$7 = ConnectionInterface.get(),\n    NODE = _ConnectionInterface$7.NODE;\n  for (var ii = 0; ii < sourceEdges.length; ii++) {\n    var edge = sourceEdges[ii];\n    if (!edge) {\n      continue;\n    }\n    var node = edge.getLinkedRecord(NODE);\n    var nodeID = node && node.getDataID();\n    if (nodeID) {\n      if (nodeIDs.has(nodeID)) {\n        continue;\n      }\n      nodeIDs.add(nodeID);\n    }\n    targetEdges.push(edge);\n  }\n}\nmodule.exports = {\n  buildConnectionEdge: buildConnectionEdge,\n  createEdge: createEdge,\n  deleteNode: deleteNode,\n  getConnection: getConnection,\n  getConnectionID: getConnectionID,\n  insertEdgeAfter: insertEdgeAfter,\n  insertEdgeBefore: insertEdgeBefore,\n  update: update\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar CONNECTION_CALLS = {\n  after: true,\n  before: true,\n  find: true,\n  first: true,\n  last: true,\n  surrounds: true\n};\nvar config = {\n  CURSOR: 'cursor',\n  EDGES: 'edges',\n  END_CURSOR: 'endCursor',\n  HAS_NEXT_PAGE: 'hasNextPage',\n  HAS_PREV_PAGE: 'hasPreviousPage',\n  NODE: 'node',\n  PAGE_INFO_TYPE: 'PageInfo',\n  PAGE_INFO: 'pageInfo',\n  START_CURSOR: 'startCursor'\n};\n\n/**\n * @internal\n *\n * Defines logic relevant to the informal \"Connection\" GraphQL interface.\n */\nvar ConnectionInterface = {\n  inject: function inject(newConfig) {\n    config = newConfig;\n  },\n  get: function get() {\n    return config;\n  },\n  /**\n   * Checks whether a call exists strictly to encode which parts of a connection\n   * to fetch. Fields that only differ by connection call values should have the\n   * same identity.\n   */\n  isConnectionCall: function isConnectionCall(call) {\n    return CONNECTION_CALLS.hasOwnProperty(call.name);\n  }\n};\nmodule.exports = ConnectionInterface;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar ConnectionHandler = require('./ConnectionHandler');\nvar ConnectionInterface = require('./ConnectionInterface');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar DeleteRecordHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n    if (record != null) {\n      var idOrIds = record.getValue(payload.fieldKey);\n      if (typeof idOrIds === 'string') {\n        store[\"delete\"](idOrIds);\n      } else if (Array.isArray(idOrIds)) {\n        idOrIds.forEach(function (id) {\n          if (typeof id === 'string') {\n            store[\"delete\"](id);\n          }\n        });\n      }\n    }\n  }\n};\nvar DeleteEdgeHandler = {\n  update: function update(store, payload) {\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var idOrIds = record.getValue(payload.fieldKey);\n    var idList = Array.isArray(idOrIds) ? idOrIds : [idOrIds];\n    idList.forEach(function (id) {\n      if (typeof id === 'string') {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var connectionID = _step.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            ConnectionHandler.deleteNode(connection, id);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    });\n  }\n};\nvar AppendEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependEdgeHandler = {\n  update: edgeUpdater(ConnectionHandler.insertEdgeBefore)\n};\nvar AppendNodeHandler = {\n  update: nodeUpdater(ConnectionHandler.insertEdgeAfter)\n};\nvar PrependNodeHandler = {\n  update: nodeUpdater(ConnectionHandler.insertEdgeBefore)\n};\nfunction edgeUpdater(insertFn) {\n  return function (store, payload) {\n    var _serverEdges;\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var connections = payload.handleArgs.connections;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    var singleServerEdge, serverEdges;\n    try {\n      singleServerEdge = record.getLinkedRecord(payload.fieldKey);\n    } catch (_unused) {}\n    if (!singleServerEdge) {\n      try {\n        serverEdges = record.getLinkedRecords(payload.fieldKey);\n      } catch (_unused2) {}\n    }\n    if (singleServerEdge == null && serverEdges == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'MutationHandlers: Expected the server edge to be non-null.') : void 0;\n      return;\n    }\n    var _ConnectionInterface$ = ConnectionInterface.get(),\n      NODE = _ConnectionInterface$.NODE,\n      EDGES = _ConnectionInterface$.EDGES;\n    var serverEdgeList = (_serverEdges = serverEdges) !== null && _serverEdges !== void 0 ? _serverEdges : [singleServerEdge];\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(serverEdgeList),\n      _step2;\n    try {\n      var _loop = function _loop() {\n        var serverEdge = _step2.value;\n        if (serverEdge == null) {\n          return \"continue\";\n        }\n        var serverNode = serverEdge.getLinkedRecord('node');\n        if (!serverNode) {\n          return \"continue\";\n        }\n        var serverNodeId = serverNode.getDataID();\n        var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var connectionID = _step3.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            var nodeAlreadyExistsInConnection = (_connection$getLinked = connection.getLinkedRecords(EDGES)) === null || _connection$getLinked === void 0 ? void 0 : _connection$getLinked.some(function (edge) {\n              var _edge$getLinkedRecord;\n              return (edge === null || edge === void 0 ? void 0 : (_edge$getLinkedRecord = edge.getLinkedRecord(NODE)) === null || _edge$getLinkedRecord === void 0 ? void 0 : _edge$getLinkedRecord.getDataID()) === serverNodeId;\n            });\n            if (nodeAlreadyExistsInConnection) {\n              continue;\n            }\n            var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n            !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n            insertFn(connection, clientEdge);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      };\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _connection$getLinked;\n        var _ret = _loop();\n        if (_ret === \"continue\") continue;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  };\n}\nfunction nodeUpdater(insertFn) {\n  return function (store, payload) {\n    var _serverNodes;\n    var record = store.get(payload.dataID);\n    if (record == null) {\n      return;\n    }\n    var _payload$handleArgs = payload.handleArgs,\n      connections = _payload$handleArgs.connections,\n      edgeTypeName = _payload$handleArgs.edgeTypeName;\n    !(connections != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected connection IDs to be specified.') : invariant(false) : void 0;\n    !(edgeTypeName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Expected edge typename to be specified.') : invariant(false) : void 0;\n    var singleServerNode;\n    var serverNodes;\n    try {\n      singleServerNode = record.getLinkedRecord(payload.fieldKey);\n    } catch (_unused3) {}\n    if (!singleServerNode) {\n      try {\n        serverNodes = record.getLinkedRecords(payload.fieldKey);\n      } catch (_unused4) {}\n    }\n    if (singleServerNode == null && serverNodes == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'MutationHandlers: Expected target node to exist.') : void 0;\n      return;\n    }\n    var _ConnectionInterface$2 = ConnectionInterface.get(),\n      NODE = _ConnectionInterface$2.NODE,\n      EDGES = _ConnectionInterface$2.EDGES;\n    var serverNodeList = (_serverNodes = serverNodes) !== null && _serverNodes !== void 0 ? _serverNodes : [singleServerNode];\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(serverNodeList),\n      _step4;\n    try {\n      var _loop2 = function _loop2() {\n        var serverNode = _step4.value;\n        if (serverNode == null) {\n          return \"continue\";\n        }\n        var serverNodeId = serverNode.getDataID();\n        var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(connections),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var connectionID = _step5.value;\n            var connection = store.get(connectionID);\n            if (connection == null) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"[Relay][Mutation] The connection with id '\".concat(connectionID, \"' doesn't exist.\")) : void 0;\n              continue;\n            }\n            var nodeAlreadyExistsInConnection = (_connection$getLinked2 = connection.getLinkedRecords(EDGES)) === null || _connection$getLinked2 === void 0 ? void 0 : _connection$getLinked2.some(function (edge) {\n              var _edge$getLinkedRecord2;\n              return (edge === null || edge === void 0 ? void 0 : (_edge$getLinkedRecord2 = edge.getLinkedRecord(NODE)) === null || _edge$getLinkedRecord2 === void 0 ? void 0 : _edge$getLinkedRecord2.getDataID()) === serverNodeId;\n            });\n            if (nodeAlreadyExistsInConnection) {\n              continue;\n            }\n            var clientEdge = ConnectionHandler.createEdge(store, connection, serverNode, edgeTypeName);\n            !(clientEdge != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'MutationHandlers: Failed to build the edge.') : invariant(false) : void 0;\n            insertFn(connection, clientEdge);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      };\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _connection$getLinked2;\n        var _ret2 = _loop2();\n        if (_ret2 === \"continue\") continue;\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n}\nmodule.exports = {\n  AppendEdgeHandler: AppendEdgeHandler,\n  DeleteRecordHandler: DeleteRecordHandler,\n  PrependEdgeHandler: PrependEdgeHandler,\n  AppendNodeHandler: AppendNodeHandler,\n  PrependNodeHandler: PrependNodeHandler,\n  DeleteEdgeHandler: DeleteEdgeHandler\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ConnectionHandler = require('./handlers/connection/ConnectionHandler');\nvar ConnectionInterface = require('./handlers/connection/ConnectionInterface');\nvar MutationHandlers = require('./handlers/connection/MutationHandlers');\nvar RelayDefaultHandlerProvider = require('./handlers/RelayDefaultHandlerProvider');\nvar applyOptimisticMutation = require('./mutations/applyOptimisticMutation');\nvar commitLocalUpdate = require('./mutations/commitLocalUpdate');\nvar commitMutation = require('./mutations/commitMutation');\nvar RelayDeclarativeMutationConfig = require('./mutations/RelayDeclarativeMutationConfig');\nvar RelayNetwork = require('./network/RelayNetwork');\nvar RelayObservable = require('./network/RelayObservable');\nvar RelayQueryResponseCache = require('./network/RelayQueryResponseCache');\nvar fetchQuery = require('./query/fetchQuery');\nvar fetchQuery_DEPRECATED = require('./query/fetchQuery_DEPRECATED');\nvar fetchQueryInternal = require('./query/fetchQueryInternal');\nvar GraphQLTag = require('./query/GraphQLTag');\nvar PreloadableQueryRegistry = require('./query/PreloadableQueryRegistry');\nvar _require = require('./store/ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID,\n  isClientID = _require.isClientID;\nvar createFragmentSpecResolver = require('./store/createFragmentSpecResolver');\nvar createRelayContext = require('./store/createRelayContext');\nvar isRelayModernEnvironment = require('./store/isRelayModernEnvironment');\nvar readInlineData = require('./store/readInlineData');\nvar RelayConcreteVariables = require('./store/RelayConcreteVariables');\nvar RelayModernEnvironment = require('./store/RelayModernEnvironment');\nvar RelayModernOperationDescriptor = require('./store/RelayModernOperationDescriptor');\nvar RelayModernRecord = require('./store/RelayModernRecord');\nvar RelayModernSelector = require('./store/RelayModernSelector');\nvar RelayModernStore = require('./store/RelayModernStore');\nvar RelayOperationTracker = require('./store/RelayOperationTracker');\nvar RelayRecordSource = require('./store/RelayRecordSource');\nvar RelayStoreUtils = require('./store/RelayStoreUtils');\nvar ResolverFragments = require('./store/ResolverFragments');\nvar ViewerPattern = require('./store/ViewerPattern');\nvar requestSubscription = require('./subscription/requestSubscription');\nvar createPayloadFor3DField = require('./util/createPayloadFor3DField');\nvar deepFreeze = require('./util/deepFreeze');\nvar getFragmentIdentifier = require('./util/getFragmentIdentifier');\nvar getPaginationMetadata = require('./util/getPaginationMetadata');\nvar getPaginationVariables = require('./util/getPaginationVariables');\nvar getPendingOperationsForFragment = require('./util/getPendingOperationsForFragment');\nvar getRefetchMetadata = require('./util/getRefetchMetadata');\nvar getRelayHandleKey = require('./util/getRelayHandleKey');\nvar getRequestIdentifier = require('./util/getRequestIdentifier');\nvar getValueAtPath = require('./util/getValueAtPath');\nvar handlePotentialSnapshotErrors = require('./util/handlePotentialSnapshotErrors');\nvar isPromise = require('./util/isPromise');\nvar isScalarAndEqual = require('./util/isScalarAndEqual');\nvar recycleNodesInto = require('./util/recycleNodesInto');\nvar RelayConcreteNode = require('./util/RelayConcreteNode');\nvar RelayDefaultHandleKey = require('./util/RelayDefaultHandleKey');\nvar RelayError = require('./util/RelayError');\nvar RelayFeatureFlags = require('./util/RelayFeatureFlags');\nvar RelayProfiler = require('./util/RelayProfiler');\nvar RelayReplaySubject = require('./util/RelayReplaySubject');\nvar stableCopy = require('./util/stableCopy');\nvar withProvidedVariables = require('./util/withProvidedVariables');\n// As early as possible, check for the existence of the JavaScript globals which\n// Relay Runtime relies upon, and produce a clear message if they do not exist.\nif (process.env.NODE_ENV !== \"production\") {\n  var mapStr = typeof Map !== 'function' ? 'Map' : null;\n  var setStr = typeof Set !== 'function' ? 'Set' : null;\n  var promiseStr = typeof Promise !== 'function' ? 'Promise' : null;\n  var objStr = typeof Object.assign !== 'function' ? 'Object.assign' : null;\n  if (mapStr || setStr || promiseStr || objStr) {\n    throw new Error(\"relay-runtime requires \".concat([mapStr, setStr, promiseStr, objStr].filter(Boolean).join(', and '), \" to exist. \") + 'Use a polyfill to provide these for older browsers.');\n  }\n}\n\n/**\n * The public interface to Relay Runtime.\n */\nmodule.exports = {\n  // Core API\n  Environment: RelayModernEnvironment,\n  Network: RelayNetwork,\n  Observable: RelayObservable,\n  QueryResponseCache: RelayQueryResponseCache,\n  RecordSource: RelayRecordSource,\n  Record: RelayModernRecord,\n  ReplaySubject: RelayReplaySubject,\n  Store: RelayModernStore,\n  areEqualSelectors: RelayModernSelector.areEqualSelectors,\n  createFragmentSpecResolver: createFragmentSpecResolver,\n  createNormalizationSelector: RelayModernSelector.createNormalizationSelector,\n  createOperationDescriptor: RelayModernOperationDescriptor.createOperationDescriptor,\n  createReaderSelector: RelayModernSelector.createReaderSelector,\n  createRequestDescriptor: RelayModernOperationDescriptor.createRequestDescriptor,\n  getArgumentValues: RelayStoreUtils.getArgumentValues,\n  getDataIDsFromFragment: RelayModernSelector.getDataIDsFromFragment,\n  getDataIDsFromObject: RelayModernSelector.getDataIDsFromObject,\n  getNode: GraphQLTag.getNode,\n  getFragment: GraphQLTag.getFragment,\n  getInlineDataFragment: GraphQLTag.getInlineDataFragment,\n  getModuleComponentKey: RelayStoreUtils.getModuleComponentKey,\n  getModuleOperationKey: RelayStoreUtils.getModuleOperationKey,\n  getPaginationFragment: GraphQLTag.getPaginationFragment,\n  getPluralSelector: RelayModernSelector.getPluralSelector,\n  getRefetchableFragment: GraphQLTag.getRefetchableFragment,\n  getRequest: GraphQLTag.getRequest,\n  getRequestIdentifier: getRequestIdentifier,\n  getSelector: RelayModernSelector.getSelector,\n  getSelectorsFromObject: RelayModernSelector.getSelectorsFromObject,\n  getSingularSelector: RelayModernSelector.getSingularSelector,\n  getStorageKey: RelayStoreUtils.getStorageKey,\n  getVariablesFromFragment: RelayModernSelector.getVariablesFromFragment,\n  getVariablesFromObject: RelayModernSelector.getVariablesFromObject,\n  getVariablesFromPluralFragment: RelayModernSelector.getVariablesFromPluralFragment,\n  getVariablesFromSingularFragment: RelayModernSelector.getVariablesFromSingularFragment,\n  handlePotentialSnapshotErrors: handlePotentialSnapshotErrors,\n  graphql: GraphQLTag.graphql,\n  isFragment: GraphQLTag.isFragment,\n  isInlineDataFragment: GraphQLTag.isInlineDataFragment,\n  isRequest: GraphQLTag.isRequest,\n  readInlineData: readInlineData,\n  // Declarative mutation API\n  MutationTypes: RelayDeclarativeMutationConfig.MutationTypes,\n  RangeOperations: RelayDeclarativeMutationConfig.RangeOperations,\n  // Extensions\n  DefaultHandlerProvider: RelayDefaultHandlerProvider,\n  ConnectionHandler: ConnectionHandler,\n  MutationHandlers: MutationHandlers,\n  VIEWER_ID: ViewerPattern.VIEWER_ID,\n  VIEWER_TYPE: ViewerPattern.VIEWER_TYPE,\n  // Helpers (can be implemented via the above API)\n  applyOptimisticMutation: applyOptimisticMutation,\n  commitLocalUpdate: commitLocalUpdate,\n  commitMutation: commitMutation,\n  fetchQuery: fetchQuery,\n  fetchQuery_DEPRECATED: fetchQuery_DEPRECATED,\n  isRelayModernEnvironment: isRelayModernEnvironment,\n  requestSubscription: requestSubscription,\n  // Configuration interface for legacy or special uses\n  ConnectionInterface: ConnectionInterface,\n  // Utilities\n  PreloadableQueryRegistry: PreloadableQueryRegistry,\n  RelayProfiler: RelayProfiler,\n  createPayloadFor3DField: createPayloadFor3DField,\n  // INTERNAL-ONLY: These exports might be removed at any point.\n  RelayConcreteNode: RelayConcreteNode,\n  RelayError: RelayError,\n  RelayFeatureFlags: RelayFeatureFlags,\n  DEFAULT_HANDLE_KEY: RelayDefaultHandleKey.DEFAULT_HANDLE_KEY,\n  FRAGMENTS_KEY: RelayStoreUtils.FRAGMENTS_KEY,\n  FRAGMENT_OWNER_KEY: RelayStoreUtils.FRAGMENT_OWNER_KEY,\n  ID_KEY: RelayStoreUtils.ID_KEY,\n  REF_KEY: RelayStoreUtils.REF_KEY,\n  REFS_KEY: RelayStoreUtils.REFS_KEY,\n  ROOT_ID: RelayStoreUtils.ROOT_ID,\n  ROOT_TYPE: RelayStoreUtils.ROOT_TYPE,\n  TYPENAME_KEY: RelayStoreUtils.TYPENAME_KEY,\n  deepFreeze: deepFreeze,\n  generateClientID: generateClientID,\n  generateUniqueClientID: generateUniqueClientID,\n  getRelayHandleKey: getRelayHandleKey,\n  isClientID: isClientID,\n  isPromise: isPromise,\n  isScalarAndEqual: isScalarAndEqual,\n  recycleNodesInto: recycleNodesInto,\n  stableCopy: stableCopy,\n  getFragmentIdentifier: getFragmentIdentifier,\n  getRefetchMetadata: getRefetchMetadata,\n  getPaginationMetadata: getPaginationMetadata,\n  getPaginationVariables: getPaginationVariables,\n  getPendingOperationsForFragment: getPendingOperationsForFragment,\n  getValueAtPath: getValueAtPath,\n  __internal: {\n    ResolverFragments: ResolverFragments,\n    OperationTracker: RelayOperationTracker,\n    createRelayContext: createRelayContext,\n    getOperationVariables: RelayConcreteVariables.getOperationVariables,\n    fetchQuery: fetchQueryInternal.fetchQuery,\n    fetchQueryDeduped: fetchQueryInternal.fetchQueryDeduped,\n    getPromiseForActiveRequest: fetchQueryInternal.getPromiseForActiveRequest,\n    getObservableForActiveRequest: fetchQueryInternal.getObservableForActiveRequest,\n    withProvidedVariables: withProvidedVariables\n  }\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * A unique identifier of the current actor.\n */\nvar invariant = require('invariant');\nvar INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = 'INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE';\nfunction assertInternalActorIdentifier(actorIdentifier) {\n  !(actorIdentifier === INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to use only internal version of the `actorIdentifier`. \"%s\" was provided.', actorIdentifier) : invariant(false) : void 0;\n}\nmodule.exports = {\n  assertInternalActorIdentifier: assertInternalActorIdentifier,\n  getActorIdentifier: function getActorIdentifier(actorID) {\n    return actorID;\n  },\n  getDefaultActorIdentifier: function getDefaultActorIdentifier() {\n    throw new Error('Not Implemented');\n  },\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ACTOR_IDENTIFIER_FIELD_NAME = 'actor_key';\nvar _require = require('./ActorIdentifier'),\n  getActorIdentifier = _require.getActorIdentifier;\nfunction getActorIdentifierFromPayload(payload) {\n  if (payload != null && typeof payload === 'object' && typeof payload[ACTOR_IDENTIFIER_FIELD_NAME] === 'string') {\n    return getActorIdentifier(payload[ACTOR_IDENTIFIER_FIELD_NAME]);\n  }\n}\nmodule.exports = {\n  ACTOR_IDENTIFIER_FIELD_NAME: ACTOR_IDENTIFIER_FIELD_NAME,\n  getActorIdentifierFromPayload: getActorIdentifierFromPayload\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\nvar warning = require(\"fbjs/lib/warning\");\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n        break;\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n        break;\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n  if (!rootField) {\n    return null;\n  }\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n    if (!payload) {\n      return;\n    }\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n    connectionInfo = config.connectionInfo,\n    edgeName = config.edgeName;\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n  var rootField = getRootField(request);\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n  return function (store, data) {\n    var parent = store.get(parentID);\n    if (!parent) {\n      return;\n    }\n    var payload = store.getRootField(rootField);\n    if (!payload) {\n      return;\n    }\n    var serverEdge = payload.getLinkedRecord(edgeName);\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connectionInfo),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var info = _step.value;\n        if (!serverEdge) {\n          continue;\n        }\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n        if (!connection) {\n          continue;\n        }\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n        if (!clientEdge) {\n          continue;\n        }\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n    connectionKeys = config.connectionKeys,\n    pathToConnection = config.pathToConnection,\n    deletedIDFieldName = config.deletedIDFieldName;\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n  var rootField = getRootField(request);\n  if (!rootField) {\n    return null;\n  }\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n    var deleteIDs = [];\n    // the type of data should come from a type parameter associated with ConcreteRequest,\n    // but ConcreteRequest does not contain a type parameter. Hence, we use a FlowFixMe.\n    // $FlowFixMe[incompatible-use] see above\n    var deletedIDField = data[rootField];\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(deletedIDFieldName),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eachField = _step2.value;\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n  if (!parent) {\n    return;\n  }\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n  var recordProxy = parent;\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  }\n  // Should never enter loop except edge cases\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connectionKeys),\n    _step3;\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n  return null;\n}\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('../store/RelayStoreUtils'),\n  getStableStorageKey = _require2.getStableStorageKey;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\nvar RelayRecordProxy = /*#__PURE__*/function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n  var _proto = RelayRecordProxy.prototype;\n  _proto.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n  _proto.getDataID = function getDataID() {\n    return this._dataID;\n  };\n  _proto.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n    !(type != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID) : invariant(false) : void 0;\n    return type;\n  };\n  _proto.getValue = function getValue(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n  _proto.setValue = function setValue(value, name, args) {\n    !isValidLeafValue(value) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value)) : invariant(false) : void 0;\n    return this.setValue__UNSAFE(value, name, args);\n  }\n\n  // This is used in the typesafe updaters.\n  // We already validated that the value has the correct type\n  // so it should be safe to store complex structures as scalar values (custom scalars)\n  ;\n  _proto.setValue__UNSAFE = function setValue__UNSAFE(value, name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    this._mutator.setValue(this._dataID, storageKey, value);\n    return this;\n  };\n  _proto.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n  _proto.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    !(record instanceof RelayRecordProxy) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = record.getDataID();\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n    return this;\n  };\n  _proto.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n    if (!linkedRecord) {\n      var _this$_source$get;\n      var storageKey = getStableStorageKey(name, args);\n      var clientID = generateClientID(this.getDataID(), storageKey);\n      // NOTE: it's possible that a client record for this field exists\n      // but the field itself was unset.\n      linkedRecord = (_this$_source$get = this._source.get(clientID)) !== null && _this$_source$get !== void 0 ? _this$_source$get : this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n    return linkedRecord;\n  };\n  _proto.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n  _proto.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    !Array.isArray(records) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n    return this;\n  };\n  _proto.invalidateRecord = function invalidateRecord() {\n    this._source.markIDForInvalidation(this._dataID);\n  };\n  return RelayRecordProxy;\n}();\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\nmodule.exports = RelayRecordProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\nvar _require = require('../store/RelayRecordState'),\n  EXISTENT = _require.EXISTENT;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * Wrapper API that is an amalgam of the `RelayModernRecord` API and\n * `MutableRecordSource` interface, implementing copy-on-write semantics for records\n * in a record source.\n *\n * Modifications are applied to fresh copies of records:\n * - Records in `base` are never modified.\n * - Modifications cause a fresh version of a record to be created in `sink`.\n *   These sink records contain only modified fields.\n */\nvar RelayRecordSourceMutator = /*#__PURE__*/function () {\n  function RelayRecordSourceMutator(base, sink) {\n    this.__sources = [sink, base];\n    this._base = base;\n    this._sink = sink;\n  }\n\n  /**\n   * **UNSTABLE**\n   * This method is likely to be removed in an upcoming release\n   * and should not be relied upon.\n   * TODO T41593196: Remove unstable_getRawRecordWithChanges\n   */\n  var _proto = RelayRecordSourceMutator.prototype;\n  _proto.unstable_getRawRecordWithChanges = function unstable_getRawRecordWithChanges(dataID) {\n    var baseRecord = this._base.get(dataID);\n    var sinkRecord = this._sink.get(dataID);\n    if (sinkRecord === undefined) {\n      if (baseRecord == null) {\n        return baseRecord;\n      }\n      var nextRecord = RelayModernRecord.clone(baseRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(nextRecord);\n      }\n      return nextRecord;\n    } else if (sinkRecord === null) {\n      return null;\n    } else if (baseRecord != null) {\n      var _nextRecord = RelayModernRecord.update(baseRecord, sinkRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        if (_nextRecord !== baseRecord) {\n          // Prevent mutation of a record from outside the store.\n          RelayModernRecord.freeze(_nextRecord);\n        }\n      }\n      return _nextRecord;\n    } else {\n      var _nextRecord2 = RelayModernRecord.clone(sinkRecord);\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(_nextRecord2);\n      }\n      return _nextRecord2;\n    }\n  };\n  _proto._getSinkRecord = function _getSinkRecord(dataID) {\n    var sinkRecord = this._sink.get(dataID);\n    if (!sinkRecord) {\n      var baseRecord = this._base.get(dataID);\n      !baseRecord ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator: Cannot modify non-existent record `%s`.', dataID) : invariant(false) : void 0;\n      sinkRecord = RelayModernRecord.create(dataID, RelayModernRecord.getType(baseRecord));\n      this._sink.set(dataID, sinkRecord);\n    }\n    return sinkRecord;\n  };\n  _proto.copyFields = function copyFields(sourceID, sinkID) {\n    var sinkSource = this._sink.get(sourceID);\n    var baseSource = this._base.get(sourceID);\n    !(sinkSource || baseSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#copyFields(): Cannot copy fields from ' + 'non-existent record `%s`.', sourceID) : invariant(false) : void 0;\n    var sink = this._getSinkRecord(sinkID);\n    if (baseSource) {\n      RelayModernRecord.copyFields(baseSource, sink);\n    }\n    if (sinkSource) {\n      RelayModernRecord.copyFields(sinkSource, sink);\n    }\n  };\n  _proto.copyFieldsFromRecord = function copyFieldsFromRecord(record, sinkID) {\n    var sink = this._getSinkRecord(sinkID);\n    RelayModernRecord.copyFields(record, sink);\n  };\n  _proto.create = function create(dataID, typeName) {\n    !(this._base.getStatus(dataID) !== EXISTENT && this._sink.getStatus(dataID) !== EXISTENT) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#create(): Cannot create a record with id ' + '`%s`, this record already exists.', dataID) : invariant(false) : void 0;\n    var record = RelayModernRecord.create(dataID, typeName);\n    this._sink.set(dataID, record);\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    return this._sink.has(dataID) ? this._sink.getStatus(dataID) : this._base.getStatus(dataID);\n  };\n  _proto.getType = function getType(dataID) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        return RelayModernRecord.getType(record);\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.getValue = function getValue(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var value = RelayModernRecord.getValue(record, storageKey);\n        if (value !== undefined) {\n          return value;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setValue = function setValue(dataID, storageKey, value) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setValue(sinkRecord, storageKey, value);\n  };\n  _proto.getLinkedRecordID = function getLinkedRecordID(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n        if (linkedID !== undefined) {\n          return linkedID;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setLinkedRecordID = function setLinkedRecordID(dataID, storageKey, linkedID) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setLinkedRecordID(sinkRecord, storageKey, linkedID);\n  };\n  _proto.getLinkedRecordIDs = function getLinkedRecordIDs(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n      if (record) {\n        var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n        if (linkedIDs !== undefined) {\n          return linkedIDs;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n  _proto.setLinkedRecordIDs = function setLinkedRecordIDs(dataID, storageKey, linkedIDs) {\n    var sinkRecord = this._getSinkRecord(dataID);\n    RelayModernRecord.setLinkedRecordIDs(sinkRecord, storageKey, linkedIDs);\n  };\n  return RelayRecordSourceMutator;\n}();\nmodule.exports = RelayRecordSourceMutator;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\nvar _require = require('../store/RelayRecordState'),\n  EXISTENT = _require.EXISTENT,\n  NONEXISTENT = _require.NONEXISTENT;\nvar _require2 = require('../store/RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID,\n  ROOT_TYPE = _require2.ROOT_TYPE;\nvar _require3 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require3.readUpdatableFragment;\nvar _require4 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require4.readUpdatableQuery;\nvar RelayRecordProxy = require('./RelayRecordProxy');\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A helper for manipulating a `RecordSource` via an imperative/OO-style API.\n */\nvar RelayRecordSourceProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceProxy(mutator, getDataID, handlerProvider, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this._handlerProvider = handlerProvider || null;\n    this._proxies = {};\n    this._getDataID = getDataID;\n    this._invalidatedStore = false;\n    this._idsMarkedForInvalidation = new Set();\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceProxy.prototype;\n  _proto.publishSource = function publishSource(source, fieldPayloads) {\n    var _this = this;\n    var dataIDs = source.getRecordIDs();\n    dataIDs.forEach(function (dataID) {\n      var status = source.getStatus(dataID);\n      if (status === EXISTENT) {\n        var sourceRecord = source.get(dataID);\n        if (sourceRecord) {\n          if (_this.__mutator.getStatus(dataID) !== EXISTENT) {\n            _this.create(dataID, RelayModernRecord.getType(sourceRecord));\n          }\n          _this.__mutator.copyFieldsFromRecord(sourceRecord, dataID);\n        }\n      } else if (status === NONEXISTENT) {\n        _this[\"delete\"](dataID);\n      }\n    });\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(_this, fieldPayload);\n      });\n    }\n  };\n  _proto.create = function create(dataID, typeName) {\n    this.__mutator.create(dataID, typeName);\n    delete this._proxies[dataID];\n    var record = this.get(dataID);\n    // For flow\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#create(): Expected the created record to exist.') : invariant(false) : void 0;\n    return record;\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    !(dataID !== ROOT_ID) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#delete(): Cannot delete the root record.') : invariant(false) : void 0;\n    delete this._proxies[dataID];\n    this.__mutator[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    if (!this._proxies.hasOwnProperty(dataID)) {\n      var status = this.__mutator.getStatus(dataID);\n      if (status === EXISTENT) {\n        this._proxies[dataID] = new RelayRecordProxy(this, this.__mutator, dataID);\n      } else {\n        this._proxies[dataID] = status === NONEXISTENT ? null : undefined;\n      }\n    }\n    return this._proxies[dataID];\n  };\n  _proto.getRoot = function getRoot() {\n    var root = this.get(ROOT_ID);\n    if (!root) {\n      root = this.create(ROOT_ID, ROOT_TYPE);\n    }\n    !(root && root.getType() === ROOT_TYPE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#getRoot(): Expected the source to contain a ' + 'root record, %s.', root == null ? 'no root record found' : \"found a root record of type `\".concat(root.getType(), \"`\")) : invariant(false) : void 0;\n    return root;\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this._invalidatedStore = true;\n  };\n  _proto.isStoreMarkedForInvalidation = function isStoreMarkedForInvalidation() {\n    return this._invalidatedStore;\n  };\n  _proto.markIDForInvalidation = function markIDForInvalidation(dataID) {\n    this._idsMarkedForInvalidation.add(dataID);\n  };\n  _proto.getIDsMarkedForInvalidation = function getIDsMarkedForInvalidation() {\n    return this._idsMarkedForInvalidation;\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceProxy;\n}();\nmodule.exports = RelayRecordSourceProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayStoreUtils'),\n  ROOT_TYPE = _require.ROOT_TYPE,\n  getStorageKey = _require.getStorageKey;\nvar _require2 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require2.readUpdatableFragment;\nvar _require3 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require3.readUpdatableQuery;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * A subclass of RecordSourceProxy that provides convenience methods for\n * accessing the root fields of a given query/mutation. These fields accept\n * complex arguments and it can be tedious to re-construct the correct sets of\n * arguments to pass to e.g. `getRoot().getLinkedRecord()`.\n */\nvar RelayRecordSourceSelectorProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceSelectorProxy(mutator, recordSource, readSelector, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this.__recordSource = recordSource;\n    this._readSelector = readSelector;\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceSelectorProxy.prototype;\n  _proto.create = function create(dataID, typeName) {\n    return this.__recordSource.create(dataID, typeName);\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this.__recordSource[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    return this.__recordSource.get(dataID);\n  };\n  _proto.getRoot = function getRoot() {\n    return this.__recordSource.getRoot();\n  };\n  _proto.getOperationRoot = function getOperationRoot() {\n    var root = this.__recordSource.get(this._readSelector.dataID);\n    if (!root) {\n      root = this.__recordSource.create(this._readSelector.dataID, ROOT_TYPE);\n    }\n    return root;\n  };\n  _proto._getRootField = function _getRootField(selector, fieldName, plural) {\n    var field = selector.node.selections.find(function (selection) {\n      return selection.kind === 'LinkedField' && selection.name === fieldName || selection.kind === 'RequiredField' && selection.field.name === fieldName;\n    });\n    if (field && field.kind === 'RequiredField') {\n      field = field.field;\n    }\n    !(field && field.kind === 'LinkedField') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Cannot find root ' + 'field `%s`, no such field is defined on GraphQL document `%s`.', fieldName, selector.node.name) : invariant(false) : void 0;\n    !(field.plural === plural) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Expected root field ' + '`%s` to be %s.', fieldName, plural ? 'plural' : 'singular') : invariant(false) : void 0;\n    return field;\n  };\n  _proto.getRootField = function getRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, false);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecord(storageKey);\n  };\n  _proto.getPluralRootField = function getPluralRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, true);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecords(storageKey);\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this.__recordSource.invalidateStore();\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceSelectorProxy;\n}();\nmodule.exports = RelayRecordSourceSelectorProxy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require2.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar invariant = require('invariant');\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction applyOptimisticMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  var optimisticUpdater = config.optimisticUpdater;\n  var configs = config.configs,\n    optimisticResponse = config.optimisticResponse,\n    variables = config.variables;\n  var operation = createOperationDescriptor(mutation, variables);\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n  }\n  return environment.applyMutation({\n    operation: operation,\n    response: optimisticResponse,\n    updater: optimisticUpdater\n  });\n}\nmodule.exports = applyOptimisticMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction commitLocalUpdate(environment, updater) {\n  environment.commitUpdate(updater);\n}\nmodule.exports = commitLocalUpdate;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar _require2 = require('../store/ClientID'),\n  generateUniqueClientID = _require2.generateUniqueClientID;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require3 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require3.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar validateMutation = require('./validateMutation');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Higher-level helper function to execute a mutation against a specific\n * environment.\n */\nfunction commitMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  if (mutation.kind !== 'Request') {\n    throw new Error('commitMutation: Expected mutation to be of type request');\n  }\n  var optimisticResponse = config.optimisticResponse,\n    optimisticUpdater = config.optimisticUpdater,\n    updater = config.updater;\n  var configs = config.configs,\n    cacheConfig = config.cacheConfig,\n    onError = config.onError,\n    onUnsubscribe = config.onUnsubscribe,\n    variables = config.variables,\n    uploadables = config.uploadables;\n  var operation = createOperationDescriptor(mutation, variables, cacheConfig, generateUniqueClientID());\n  // TODO: remove this check after we fix flow.\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'commitMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.') : void 0;\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optimisticResponse instanceof Object) {\n      validateMutation(optimisticResponse, mutation, variables);\n    }\n  }\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n    updater = _RelayDeclarativeMuta.updater;\n  }\n  var errors = [];\n  var subscription = environment.executeMutation({\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribe({\n    next: function next(payload) {\n      var _config$onNext;\n      if (Array.isArray(payload)) {\n        payload.forEach(function (item) {\n          if (item.errors) {\n            errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(item.errors));\n          }\n        });\n      } else {\n        if (payload.errors) {\n          errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(payload.errors));\n        }\n      }\n      (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n    },\n    complete: function complete() {\n      var onCompleted = config.onCompleted;\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, errors.length !== 0 ? errors : null);\n      }\n    },\n    error: onError,\n    unsubscribe: onUnsubscribe\n  });\n  return {\n    dispose: subscription.unsubscribe\n  };\n}\nmodule.exports = commitMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _require = require('../store/RelayStoreUtils'),\n  getArgumentValues = _require.getArgumentValues;\nvar _require2 = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require2.ACTOR_CHANGE,\n  ALIASED_FRAGMENT_SPREAD = _require2.ALIASED_FRAGMENT_SPREAD,\n  ALIASED_INLINE_FRAGMENT_SPREAD = _require2.ALIASED_INLINE_FRAGMENT_SPREAD,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require2.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EDGE_TO_SERVER_OBJECT = _require2.CLIENT_EDGE_TO_SERVER_OBJECT,\n  CLIENT_EXTENSION = _require2.CLIENT_EXTENSION,\n  CONDITION = _require2.CONDITION,\n  DEFER = _require2.DEFER,\n  FLIGHT_FIELD = _require2.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require2.FRAGMENT_SPREAD,\n  INLINE_DATA_FRAGMENT_SPREAD = _require2.INLINE_DATA_FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require2.INLINE_FRAGMENT,\n  LINKED_FIELD = _require2.LINKED_FIELD,\n  MODULE_IMPORT = _require2.MODULE_IMPORT,\n  RELAY_LIVE_RESOLVER = _require2.RELAY_LIVE_RESOLVER,\n  RELAY_RESOLVER = _require2.RELAY_RESOLVER,\n  REQUIRED_FIELD = _require2.REQUIRED_FIELD,\n  SCALAR_FIELD = _require2.SCALAR_FIELD,\n  STREAM = _require2.STREAM;\nvar nonUpdatableKeys = ['id', '__id', '__typename', 'js'];\nfunction createUpdatableProxy(updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers) {\n  var mutableUpdatableProxy = {};\n  updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers);\n  if (process.env.NODE_ENV !== \"production\") {\n    Object.freeze(mutableUpdatableProxy);\n  }\n  // unless ReaderSelection carries more type information, we will never be able\n  // to flowtype mutableUpdatableProxy without a type assertion.\n  // $FlowFixMe[unclear-type]\n  return mutableUpdatableProxy;\n}\nfunction updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selections, recordSourceProxy, missingFieldHandlers) {\n  var _selection$alias3;\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(selections),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var selection = _step.value;\n      switch (selection.kind) {\n        case LINKED_FIELD:\n          if (selection.plural) {\n            Object.defineProperty(mutableUpdatableProxy, (_selection$alias = selection.alias) !== null && _selection$alias !== void 0 ? _selection$alias : selection.name, {\n              get: createGetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers),\n              set: createSetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy)\n            });\n          } else {\n            Object.defineProperty(mutableUpdatableProxy, (_selection$alias2 = selection.alias) !== null && _selection$alias2 !== void 0 ? _selection$alias2 : selection.name, {\n              get: createGetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers),\n              set: createSetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy)\n            });\n          }\n          break;\n        case SCALAR_FIELD:\n          var scalarFieldName = (_selection$alias3 = selection.alias) !== null && _selection$alias3 !== void 0 ? _selection$alias3 : selection.name;\n          Object.defineProperty(mutableUpdatableProxy, scalarFieldName, {\n            get: function get() {\n              var _selection$args;\n              var newVariables = getArgumentValues((_selection$args = selection.args) !== null && _selection$args !== void 0 ? _selection$args : [], variables);\n              // Flow incorrect assumes that the return value for the get method must match\n              // the set parameter.\n              var value = updatableProxyRootRecord.getValue(selection.name, newVariables\n              // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n              );\n\n              if (value == null) {\n                value = getScalarUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n              }\n              return value;\n            },\n            set: nonUpdatableKeys.includes(selection.name) ? undefined :\n            // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n            function (newValue) {\n              var _selection$args2;\n              var newVariables = getArgumentValues((_selection$args2 = selection.args) !== null && _selection$args2 !== void 0 ? _selection$args2 : [], variables);\n              // $FlowFixMe[prop-missing] Typesafe updaters should prevent people from using untyped values\n              updatableProxyRootRecord.setValue__UNSAFE(newValue, selection.name, newVariables);\n            }\n          });\n          break;\n        case INLINE_FRAGMENT:\n          if (updatableProxyRootRecord.getType() === selection.type) {\n            updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          }\n          break;\n        case CLIENT_EXTENSION:\n          updateProxyFromSelections(mutableUpdatableProxy, updatableProxyRootRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          break;\n        case FRAGMENT_SPREAD:\n          // Explicitly ignore\n          break;\n        case CONDITION:\n        case ACTOR_CHANGE:\n        case ALIASED_FRAGMENT_SPREAD:\n        case INLINE_DATA_FRAGMENT_SPREAD:\n        case ALIASED_INLINE_FRAGMENT_SPREAD:\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n        case CLIENT_EDGE_TO_SERVER_OBJECT:\n        case DEFER:\n        case FLIGHT_FIELD:\n        case MODULE_IMPORT:\n        case RELAY_LIVE_RESOLVER:\n        case REQUIRED_FIELD:\n        case STREAM:\n        case RELAY_RESOLVER:\n          // These types of reader nodes are not currently handled.\n          throw new Error('Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.');\n        default:\n          selection.kind;\n          throw new Error('Encountered an unexpected ReaderSelection variant in RelayRecordSourceProxy. This indicates a bug in Relay.');\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _selection$alias;\n      var _selection$alias2;\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction createSetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy) {\n  return function set(newValue) {\n    var _selection$args3;\n    var newVariables = getArgumentValues((_selection$args3 = selection.args) !== null && _selection$args3 !== void 0 ? _selection$args3 : [], variables);\n    if (newValue == null) {\n      throw new Error('Do not assign null to plural linked fields; assign an empty array instead.');\n    } else {\n      var recordProxies = newValue.map(function (item) {\n        if (item == null) {\n          throw new Error('When assigning an array of items, none of the items should be null or undefined.');\n        }\n        var __id = item.__id;\n        if (__id == null) {\n          throw new Error('The __id field must be present on each item passed to the setter. This indicates a bug in Relay.');\n        }\n        var newValueRecord = recordSourceProxy.get(__id);\n        if (newValueRecord == null) {\n          throw new Error(\"Did not find item with data id \".concat(__id, \" in the store.\"));\n        }\n        return newValueRecord;\n      });\n      updatableProxyRootRecord.setLinkedRecords(recordProxies, selection.name, newVariables);\n    }\n  };\n}\nfunction createSetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy) {\n  return function set(newValue) {\n    var _selection$args4;\n    var newVariables = getArgumentValues((_selection$args4 = selection.args) !== null && _selection$args4 !== void 0 ? _selection$args4 : [], variables);\n    if (newValue == null) {\n      updatableProxyRootRecord.setValue(newValue, selection.name, newVariables);\n    } else {\n      var __id = newValue.__id;\n      if (__id == null) {\n        throw new Error('The __id field must be present on the argument. This indicates a bug in Relay.');\n      }\n      var newValueRecord = recordSourceProxy.get(__id);\n      if (newValueRecord == null) {\n        throw new Error(\"Did not find item with data id \".concat(__id, \" in the store.\"));\n      }\n      updatableProxyRootRecord.setLinkedRecord(newValueRecord, selection.name, newVariables);\n    }\n  };\n}\nfunction createGetterForPluralLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  return function () {\n    var _selection$args5;\n    var newVariables = getArgumentValues((_selection$args5 = selection.args) !== null && _selection$args5 !== void 0 ? _selection$args5 : [], variables);\n    var linkedRecords = updatableProxyRootRecord.getLinkedRecords(selection.name, newVariables);\n    if (linkedRecords === undefined) {\n      linkedRecords = getPluralLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n    }\n    if (linkedRecords != null) {\n      return linkedRecords.map(function (linkedRecord) {\n        if (linkedRecord != null) {\n          var updatableProxy = {};\n          updateProxyFromSelections(updatableProxy, linkedRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n          if (process.env.NODE_ENV !== \"production\") {\n            Object.freeze(updatableProxy);\n          }\n          // Flow incorrect assumes that the return value for the get method must match\n          // the set parameter.\n          // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n          return updatableProxy;\n        } else {\n          return linkedRecord;\n        }\n        // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n      });\n    } else {\n      return linkedRecords;\n    }\n  };\n}\nfunction createGetterForSingularLinkedField(selection, variables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  return function () {\n    var _selection$args6;\n    var newVariables = getArgumentValues((_selection$args6 = selection.args) !== null && _selection$args6 !== void 0 ? _selection$args6 : [], variables);\n    var linkedRecord = updatableProxyRootRecord.getLinkedRecord(selection.name, newVariables);\n    if (linkedRecord === undefined) {\n      linkedRecord = getLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers);\n    }\n    if (linkedRecord != null) {\n      var updatableProxy = {};\n      updateProxyFromSelections(updatableProxy, linkedRecord, variables, selection.selections, recordSourceProxy, missingFieldHandlers);\n      if (process.env.NODE_ENV !== \"production\") {\n        Object.freeze(updatableProxy);\n      }\n      // Flow incorrect assumes that the return value for the get method must match\n      // the set parameter.\n      // $FlowFixMe[unclear-type] Typed by the generated updatable query flow type\n      return updatableProxy;\n    } else {\n      return linkedRecord;\n    }\n  };\n}\nfunction getLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var handler = _step2.value;\n      if (handler.kind === 'linked') {\n        var newId = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (newId != null) {\n          return recordSourceProxy.get(newId);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nfunction getPluralLinkedRecordUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var handler = _step3.value;\n      if (handler.kind === 'pluralLinked') {\n        var newIds = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (newIds != null) {\n          return newIds.map(function (newId) {\n            if (newId != null) {\n              return recordSourceProxy.get(newId);\n            }\n          });\n        }\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nfunction getScalarUsingMissingFieldHandlers(selection, newVariables, updatableProxyRootRecord, recordSourceProxy, missingFieldHandlers) {\n  var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(missingFieldHandlers),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var handler = _step4.value;\n      if (handler.kind === 'scalar') {\n        var value = handler.handle(selection, updatableProxyRootRecord, newVariables, recordSourceProxy);\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n}\nmodule.exports = {\n  createUpdatableProxy: createUpdatableProxy\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getFragment = _require.getFragment;\nvar _require2 = require('../store/RelayModernSelector'),\n  getVariablesFromFragment = _require2.getVariablesFromFragment;\nvar _require3 = require('../store/RelayStoreUtils'),\n  ID_KEY = _require3.ID_KEY;\nvar _require4 = require('./createUpdatableProxy'),\n  createUpdatableProxy = _require4.createUpdatableProxy;\nvar invariant = require('invariant');\n\n// Note: plural fragment references are currently not supported\nfunction readUpdatableFragment(fragment, fragmentReference, proxy, missingFieldHandlers) {\n  var updatableFragment = getFragment(fragment);\n  var fragmentVariables = getVariablesFromFragment(updatableFragment, fragmentReference);\n  // $FlowFixMe[prop-missing] it's there, we just don't include it in the type\n  var id = fragmentReference[ID_KEY];\n  var fragmentRoot = proxy.get(id);\n  !(fragmentRoot != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No record with \".concat(id, \" was found. This likely indicates a problem with Relay.\")) : invariant(false) : void 0;\n  return {\n    // $FlowFixMe[incompatible-call]\n    updatableData: createUpdatableProxy(fragmentRoot, fragmentVariables, updatableFragment.selections, proxy, missingFieldHandlers)\n  };\n}\nmodule.exports = {\n  readUpdatableFragment: readUpdatableFragment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getUpdatableQuery = _require.getUpdatableQuery;\nvar _require2 = require('./createUpdatableProxy'),\n  createUpdatableProxy = _require2.createUpdatableProxy;\nfunction readUpdatableQuery(query, variables, proxy, missingFieldHandlers) {\n  var updatableQuery = getUpdatableQuery(query);\n  return {\n    // $FlowFixMe[incompatible-call]\n    updatableData: createUpdatableProxy(proxy.getRoot(), variables, updatableQuery.fragment.selections, proxy, missingFieldHandlers)\n  };\n}\nmodule.exports = {\n  readUpdatableQuery: readUpdatableQuery\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require.ACTOR_CHANGE,\n  CLIENT_COMPONENT = _require.CLIENT_COMPONENT,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n  CONDITION = _require.CONDITION,\n  DEFER = _require.DEFER,\n  FLIGHT_FIELD = _require.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n  LINKED_FIELD = _require.LINKED_FIELD,\n  LINKED_HANDLE = _require.LINKED_HANDLE,\n  MODULE_IMPORT = _require.MODULE_IMPORT,\n  RELAY_RESOLVER = _require.RELAY_RESOLVER,\n  SCALAR_FIELD = _require.SCALAR_FIELD,\n  SCALAR_HANDLE = _require.SCALAR_HANDLE,\n  STREAM = _require.STREAM,\n  TYPE_DISCRIMINATOR = _require.TYPE_DISCRIMINATOR;\nvar warning = require(\"fbjs/lib/warning\");\n// $FlowFixMe[method-unbinding] added when improving typing for this parameters\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar validateMutation = function validateMutation() {};\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n      deepLoc = deepLoc[key];\n    });\n  };\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {},\n      moduleImportPaths: new Set()\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case CONDITION:\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n      case CLIENT_COMPONENT:\n      case FRAGMENT_SPREAD:\n        validateSelections(optimisticResponse, selection.fragment.selections, context);\n        return;\n      case SCALAR_FIELD:\n      case LINKED_FIELD:\n      case FLIGHT_FIELD:\n        return validateField(optimisticResponse, selection, context);\n      case ACTOR_CHANGE:\n        return validateField(optimisticResponse, selection.linkedField, context);\n      case INLINE_FRAGMENT:\n        var type = selection.type;\n        var isConcreteType = selection.abstractKey == null;\n        validateAbstractKey(context, selection.abstractKey);\n        selection.selections.forEach(function (subselection) {\n          if (isConcreteType && optimisticResponse.__typename !== type) {\n            return;\n          }\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case CLIENT_EXTENSION:\n        selection.selections.forEach(function (subselection) {\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case MODULE_IMPORT:\n        return validateModuleImport(context);\n      case TYPE_DISCRIMINATOR:\n        return validateAbstractKey(context, selection.abstractKey);\n      case RELAY_RESOLVER:\n      case CLIENT_EDGE_TO_CLIENT_OBJECT:\n      case LINKED_HANDLE:\n      case SCALAR_HANDLE:\n      case DEFER:\n      case STREAM:\n        {\n          // TODO(T35864292) - Add missing validations for these types\n          return;\n        }\n      default:\n        selection;\n        return;\n    }\n  };\n  var validateModuleImport = function validateModuleImport(context) {\n    context.moduleImportPaths.add(context.path);\n  };\n  var validateAbstractKey = function validateAbstractKey(context, abstractKey) {\n    if (abstractKey != null) {\n      var path = \"\".concat(context.path, \".\").concat(abstractKey);\n      context.visitedPaths.add(path);\n    }\n  };\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n    switch (field.kind) {\n      case SCALAR_FIELD:\n        if (hasOwnProperty.call(optimisticResponse, fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n        return;\n      case LINKED_FIELD:\n        var selections = field.selections;\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n      case FLIGHT_FIELD:\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n        throw new Error('validateMutation: Flight fields are not compatible with ' + 'optimistic updates, as React does not have the component code ' + 'necessary to process new data on the client. Instead, you ' + 'should update your code to require a full refetch of the Flight ' + 'field so your UI can be updated.');\n    }\n  };\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n      // if it's a module import path we don't have an ast so we cannot validate it\n      if (context.moduleImportPaths.has(path)) {\n        return;\n      }\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n          path: path\n        }));\n      }\n    });\n  };\n}\nmodule.exports = validateMutation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayObservable = require('./RelayObservable');\n\n/**\n * Converts a FetchFunction into an ExecuteFunction for use by RelayNetwork.\n */\nfunction convertFetch(fn) {\n  return function fetch(request, variables, cacheConfig, uploadables, logRequestInfo) {\n    var result = fn(request, variables, cacheConfig, uploadables, logRequestInfo);\n    // Note: We allow FetchFunction to directly return Error to indicate\n    // a failure to fetch. To avoid handling this special case throughout the\n    // Relay codebase, it is explicitly handled here.\n    if (result instanceof Error) {\n      return RelayObservable.create(function (sink) {\n        return sink.error(result);\n      });\n    }\n    return RelayObservable.from(result);\n  };\n}\nmodule.exports = {\n  convertFetch: convertFetch\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar withProvidedVariables = require('../util/withProvidedVariables');\nvar _require = require('./ConvertToExecuteFunction'),\n  convertFetch = _require.convertFetch;\nvar invariant = require('invariant');\n\n/**\n * Creates an implementation of the `Network` interface defined in\n * `RelayNetworkTypes` given `fetch` and `subscribe` functions.\n */\nfunction create(fetchFn, subscribe) {\n  // Convert to functions that returns RelayObservable.\n  var observeFetch = convertFetch(fetchFn);\n  function execute(request, variables, cacheConfig, uploadables, logRequestInfo) {\n    var operationVariables = withProvidedVariables(variables, request.providedVariables);\n    if (request.operationKind === 'subscription') {\n      !subscribe ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: This network layer does not support Subscriptions. ' + 'To use Subscriptions, provide a custom network layer.') : invariant(false) : void 0;\n      !!uploadables ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: Cannot provide uploadables while subscribing.') : invariant(false) : void 0;\n      return subscribe(request, operationVariables, cacheConfig);\n    }\n    var pollInterval = cacheConfig.poll;\n    if (pollInterval != null) {\n      !!uploadables ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayNetwork: Cannot provide uploadables while polling.') : invariant(false) : void 0;\n      return observeFetch(request, operationVariables, {\n        force: true\n      }).poll(pollInterval);\n    }\n    return observeFetch(request, operationVariables, cacheConfig, uploadables, logRequestInfo);\n  }\n  return {\n    execute: execute\n  };\n}\nmodule.exports = {\n  create: create\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar isPromise = require('../util/isPromise');\n\n/**\n * A Subscription object is returned from .subscribe(), which can be\n * unsubscribed or checked to see if the resulting subscription has closed.\n */\n\nvar hostReportError = swallowError;\n\n/**\n * Limited implementation of ESObservable, providing the limited set of behavior\n * Relay networking requires.\n *\n * Observables retain the benefit of callbacks which can be called\n * synchronously, avoiding any UI jitter, while providing a compositional API,\n * which simplifies logic and prevents mishandling of errors compared to\n * the direct use of callback functions.\n *\n * ESObservable: https://github.com/tc39/proposal-observable\n */\nvar RelayObservable = /*#__PURE__*/function () {\n  RelayObservable.create = function create(source) {\n    return new RelayObservable(source);\n  }\n\n  // Use RelayObservable.create()\n  ;\n  function RelayObservable(source) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // Early runtime errors for ill-formed sources.\n      if (!source || typeof source !== 'function') {\n        throw new Error('Source must be a Function: ' + String(source));\n      }\n    }\n    this._source = source;\n  }\n\n  /**\n   * When an emitted error event is not handled by an Observer, it is reported\n   * to the host environment (what the ESObservable spec refers to as\n   * \"HostReportErrors()\").\n   *\n   * The default implementation in development rethrows thrown errors, and\n   * logs emitted error events to the console, while in production does nothing\n   * (swallowing unhandled errors).\n   *\n   * Called during application initialization, this method allows\n   * application-specific handling of unhandled errors. Allowing, for example,\n   * integration with error logging or developer tools.\n   *\n   * A second parameter `isUncaughtThrownError` is true when the unhandled error\n   * was thrown within an Observer handler, and false when the unhandled error\n   * was an unhandled emitted event.\n   *\n   *  - Uncaught thrown errors typically represent avoidable errors thrown from\n   *    application code, which should be handled with a try/catch block, and\n   *    usually have useful stack traces.\n   *\n   *  - Unhandled emitted event errors typically represent unavoidable events in\n   *    application flow such as network failure, and may not have useful\n   *    stack traces.\n   */\n  RelayObservable.onUnhandledError = function onUnhandledError(callback) {\n    hostReportError = callback;\n  }\n\n  /**\n   * Accepts various kinds of data sources, and always returns a RelayObservable\n   * useful for accepting the result of a user-provided FetchFunction.\n   */;\n  RelayObservable.from = function from(obj) {\n    return isObservable(obj) ? fromObservable(obj) : isPromise(obj) ? fromPromise(obj) : fromValue(obj);\n  }\n\n  /**\n   * Similar to promise.catch(), observable.catch() handles error events, and\n   * provides an alternative observable to use in it's place.\n   *\n   * If the catch handler throws a new error, it will appear as an error event\n   * on the resulting Observable.\n   */;\n  var _proto = RelayObservable.prototype;\n  _proto[\"catch\"] = function _catch(fn) {\n    var _this = this;\n    return RelayObservable.create(function (sink) {\n      var subscription;\n      _this.subscribe({\n        start: function start(sub) {\n          subscription = sub;\n        },\n        next: sink.next,\n        complete: sink.complete,\n        error: function error(_error2) {\n          try {\n            fn(_error2).subscribe({\n              start: function start(sub) {\n                subscription = sub;\n              },\n              next: sink.next,\n              complete: sink.complete,\n              error: sink.error\n            });\n          } catch (error2) {\n            sink.error(error2, true /* isUncaughtThrownError */);\n          }\n        }\n      });\n\n      return function () {\n        return subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which first yields values from this Observable,\n   * then yields values from the next Observable. This is useful for chaining\n   * together Observables of finite length.\n   */;\n  _proto.concat = function concat(next) {\n    var _this2 = this;\n    return RelayObservable.create(function (sink) {\n      var current;\n      _this2.subscribe({\n        start: function start(subscription) {\n          current = subscription;\n        },\n        next: sink.next,\n        error: sink.error,\n        complete: function complete() {\n          current = next.subscribe(sink);\n        }\n      });\n      return function () {\n        current && current.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the provided Observer is called to perform a side-effects\n   * for all events emitted by the source.\n   *\n   * Any errors that are thrown in the side-effect Observer are unhandled, and\n   * do not affect the source Observable or its Observer.\n   *\n   * This is useful for when debugging your Observables or performing other\n   * side-effects such as logging or performance monitoring.\n   */;\n  _proto[\"do\"] = function _do(observer) {\n    var _this3 = this;\n    return RelayObservable.create(function (sink) {\n      var both = function both(action) {\n        return function () {\n          try {\n            observer[action] && observer[action].apply(observer, arguments);\n          } catch (error) {\n            hostReportError(error, true /* isUncaughtThrownError */);\n          }\n\n          sink[action] && sink[action].apply(sink, arguments);\n        };\n      };\n      return _this3.subscribe({\n        start: both('start'),\n        next: both('next'),\n        error: both('error'),\n        complete: both('complete'),\n        unsubscribe: both('unsubscribe')\n      });\n    });\n  }\n\n  /**\n   * Returns a new Observable which returns the same values as this one, but\n   * modified so that the finally callback is performed after completion,\n   * whether normal or due to error or unsubscription.\n   *\n   * This is useful for cleanup such as resource finalization.\n   */;\n  _proto[\"finally\"] = function _finally(fn) {\n    var _this4 = this;\n    return RelayObservable.create(function (sink) {\n      var subscription = _this4.subscribe(sink);\n      return function () {\n        subscription.unsubscribe();\n        fn();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which is identical to this one, unless this\n   * Observable completes before yielding any values, in which case the new\n   * Observable will yield the values from the alternate Observable.\n   *\n   * If this Observable does yield values, the alternate is never subscribed to.\n   *\n   * This is useful for scenarios where values may come from multiple sources\n   * which should be tried in order, i.e. from a cache before a network.\n   */;\n  _proto.ifEmpty = function ifEmpty(alternate) {\n    var _this5 = this;\n    return RelayObservable.create(function (sink) {\n      var hasValue = false;\n      var current = _this5.subscribe({\n        next: function next(value) {\n          hasValue = true;\n          sink.next(value);\n        },\n        error: sink.error,\n        complete: function complete() {\n          if (hasValue) {\n            sink.complete();\n          } else {\n            current = alternate.subscribe(sink);\n          }\n        }\n      });\n      return function () {\n        current.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Observable's primary API: returns an unsubscribable Subscription to the\n   * source of this Observable.\n   *\n   * Note: A sink may be passed directly to .subscribe() as its observer,\n   * allowing for easily composing Observables.\n   */;\n  _proto.subscribe = function subscribe(observer) {\n    if (process.env.NODE_ENV !== \"production\") {\n      // Early runtime errors for ill-formed observers.\n      if (!observer || typeof observer !== 'object') {\n        throw new Error('Observer must be an Object with callbacks: ' + String(observer));\n      }\n    }\n    return _subscribe(this._source, observer);\n  }\n\n  /**\n   * Returns a new Observerable where each value has been transformed by\n   * the mapping function.\n   */;\n  _proto.map = function map(fn) {\n    var _this6 = this;\n    return RelayObservable.create(function (sink) {\n      var subscription = _this6.subscribe({\n        complete: sink.complete,\n        error: sink.error,\n        next: function next(value) {\n          try {\n            var mapValue = fn(value);\n            sink.next(mapValue);\n          } catch (error) {\n            sink.error(error, true /* isUncaughtThrownError */);\n          }\n        }\n      });\n\n      return function () {\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable where each value is replaced with a new Observable\n   * by the mapping function, the results of which returned as a single\n   * merged Observable.\n   */;\n  _proto.mergeMap = function mergeMap(fn) {\n    var _this7 = this;\n    return RelayObservable.create(function (sink) {\n      var subscriptions = [];\n      function start(subscription) {\n        this._sub = subscription;\n        subscriptions.push(subscription);\n      }\n      function complete() {\n        subscriptions.splice(subscriptions.indexOf(this._sub), 1);\n        if (subscriptions.length === 0) {\n          sink.complete();\n        }\n      }\n      _this7.subscribe({\n        start: start,\n        next: function next(value) {\n          try {\n            if (!sink.closed) {\n              RelayObservable.from(fn(value)).subscribe({\n                start: start,\n                next: sink.next,\n                error: sink.error,\n                complete: complete\n              });\n            }\n          } catch (error) {\n            sink.error(error, true /* isUncaughtThrownError */);\n          }\n        },\n\n        error: sink.error,\n        complete: complete\n      });\n      return function () {\n        subscriptions.forEach(function (sub) {\n          return sub.unsubscribe();\n        });\n        subscriptions.length = 0;\n      };\n    });\n  }\n\n  /**\n   * Returns a new Observable which first mirrors this Observable, then when it\n   * completes, waits for `pollInterval` milliseconds before re-subscribing to\n   * this Observable again, looping in this manner until unsubscribed.\n   *\n   * The returned Observable never completes.\n   */;\n  _proto.poll = function poll(pollInterval) {\n    var _this8 = this;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof pollInterval !== 'number' || pollInterval <= 0) {\n        throw new Error('RelayObservable: Expected pollInterval to be positive, got: ' + pollInterval);\n      }\n    }\n    return RelayObservable.create(function (sink) {\n      var subscription;\n      var timeout;\n      var poll = function poll() {\n        subscription = _this8.subscribe({\n          next: sink.next,\n          error: sink.error,\n          complete: function complete() {\n            timeout = setTimeout(poll, pollInterval);\n          }\n        });\n      };\n      poll();\n      return function () {\n        clearTimeout(timeout);\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  /**\n   * Returns a Promise which resolves when this Observable yields a first value\n   * or when it completes with no value.\n   *\n   * NOTE: The source Observable is *NOT* canceled when the returned Promise\n   * resolves. The Observable is always run to completion.\n   */;\n  _proto.toPromise = function toPromise() {\n    var _this9 = this;\n    return new Promise(function (resolve, reject) {\n      var resolved = false;\n      _this9.subscribe({\n        next: function next(val) {\n          if (!resolved) {\n            resolved = true;\n            resolve(val);\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n  return RelayObservable;\n}(); // Use declarations to teach Flow how to check isObservable.\nfunction isObservable(obj) {\n  return typeof obj === 'object' && obj !== null && typeof obj.subscribe === 'function';\n}\nfunction fromObservable(obj) {\n  return obj instanceof RelayObservable ? obj : RelayObservable.create(function (sink) {\n    return obj.subscribe(sink);\n  });\n}\nfunction fromPromise(promise) {\n  return RelayObservable.create(function (sink) {\n    // Since sink methods do not throw, the resulting Promise can be ignored.\n    promise.then(function (value) {\n      sink.next(value);\n      sink.complete();\n    }, sink.error);\n  });\n}\nfunction fromValue(value) {\n  return RelayObservable.create(function (sink) {\n    sink.next(value);\n    sink.complete();\n  });\n}\nfunction _subscribe(source, observer) {\n  var closed = false;\n  var cleanup;\n\n  // Ideally we would simply describe a `get closed()` method on the Sink and\n  // Subscription objects below, however not all flow environments we expect\n  // Relay to be used within will support property getters, and many minifier\n  // tools still do not support ES5 syntax. Instead, we can use defineProperty.\n  var withClosed = function withClosed(obj) {\n    return Object.defineProperty(obj, 'closed', {\n      get: function get() {\n        return closed;\n      }\n    });\n  };\n  function doCleanup() {\n    if (cleanup) {\n      if (cleanup.unsubscribe) {\n        cleanup.unsubscribe();\n      } else {\n        try {\n          cleanup();\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        }\n      }\n\n      cleanup = undefined;\n    }\n  }\n\n  // Create a Subscription.\n  var subscription = withClosed({\n    unsubscribe: function unsubscribe() {\n      if (!closed) {\n        closed = true;\n\n        // Tell Observer that unsubscribe was called.\n        try {\n          observer.unsubscribe && observer.unsubscribe(subscription);\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  });\n\n  // Tell Observer that observation is about to begin.\n  try {\n    observer.start && observer.start(subscription);\n  } catch (error) {\n    hostReportError(error, true /* isUncaughtThrownError */);\n  }\n\n  // If closed already, don't bother creating a Sink.\n  if (closed) {\n    return subscription;\n  }\n\n  // Create a Sink respecting subscription state and cleanup.\n  var sink = withClosed({\n    next: function next(value) {\n      if (!closed && observer.next) {\n        try {\n          observer.next(value);\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        }\n      }\n    },\n    error: function error(_error3, isUncaughtThrownError) {\n      if (closed || !observer.error) {\n        closed = true;\n        hostReportError(_error3, isUncaughtThrownError || false);\n        doCleanup();\n      } else {\n        closed = true;\n        try {\n          observer.error(_error3);\n        } catch (error2) {\n          hostReportError(error2, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    },\n    complete: function complete() {\n      if (!closed) {\n        closed = true;\n        try {\n          observer.complete && observer.complete();\n        } catch (error) {\n          hostReportError(error, true /* isUncaughtThrownError */);\n        } finally {\n          doCleanup();\n        }\n      }\n    }\n  });\n\n  // If anything goes wrong during observing the source, handle the error.\n  try {\n    cleanup = source(sink);\n  } catch (error) {\n    sink.error(error, true /* isUncaughtThrownError */);\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // Early runtime errors for ill-formed returned cleanup.\n    if (cleanup !== undefined && typeof cleanup !== 'function' && (!cleanup || typeof cleanup.unsubscribe !== 'function')) {\n      throw new Error('Returned cleanup function which cannot be called: ' + String(cleanup));\n    }\n  }\n\n  // If closed before the source function existed, cleanup now.\n  if (closed) {\n    doCleanup();\n  }\n  return subscription;\n}\nfunction swallowError(_error, _isUncaughtThrownError) {\n  // do nothing.\n}\nif (process.env.NODE_ENV !== \"production\") {\n  // Default implementation of HostReportErrors() in development builds.\n  // Can be replaced by the host application environment.\n  RelayObservable.onUnhandledError(function (error, isUncaughtThrownError) {\n    if (typeof fail === 'function') {\n      // In test environments (Jest), fail() immediately fails the current test.\n      fail(String(error));\n    } else if (isUncaughtThrownError) {\n      // Rethrow uncaught thrown errors on the next frame to avoid breaking\n      // current logic.\n      setTimeout(function () {\n        throw error;\n      });\n    } else if (typeof console !== 'undefined') {\n      // Otherwise, log the unhandled error for visibility.\n      // eslint-disable-next-line no-console\n      console.error('RelayObservable: Unhandled Error', error);\n    }\n  });\n}\nmodule.exports = RelayObservable;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar stableCopy = require('../util/stableCopy');\nvar invariant = require('invariant');\n/**\n * A cache for storing query responses, featuring:\n * - `get` with TTL\n * - cache size limiting, with least-recently *updated* entries purged first\n */\nvar RelayQueryResponseCache = /*#__PURE__*/function () {\n  function RelayQueryResponseCache(_ref) {\n    var size = _ref.size,\n      ttl = _ref.ttl;\n    !(size > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max cache size to be > 0, got ' + '`%s`.', size) : invariant(false) : void 0;\n    !(ttl > 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayQueryResponseCache: Expected the max ttl to be > 0, got `%s`.', ttl) : invariant(false) : void 0;\n    this._responses = new Map();\n    this._size = size;\n    this._ttl = ttl;\n  }\n  var _proto = RelayQueryResponseCache.prototype;\n  _proto.clear = function clear() {\n    this._responses.clear();\n  };\n  _proto.get = function get(queryID, variables) {\n    var _this = this;\n    var cacheKey = getCacheKey(queryID, variables);\n    this._responses.forEach(function (response, key) {\n      if (!isCurrent(response.fetchTime, _this._ttl)) {\n        _this._responses[\"delete\"](key);\n      }\n    });\n    var response = this._responses.get(cacheKey);\n    if (response == null) {\n      return null;\n    }\n    if (Array.isArray(response.payload)) {\n      return response.payload.map(function (payload) {\n        return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, payload), {}, {\n          extensions: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, payload.extensions), {}, {\n            cacheTimestamp: response.fetchTime\n          })\n        });\n      });\n    }\n    return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, response.payload), {}, {\n      extensions: (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, response.payload.extensions), {}, {\n        cacheTimestamp: response.fetchTime\n      })\n    });\n  };\n  _proto.set = function set(queryID, variables, payload) {\n    var fetchTime = Date.now();\n    var cacheKey = getCacheKey(queryID, variables);\n    this._responses[\"delete\"](cacheKey); // deletion resets key ordering\n    this._responses.set(cacheKey, {\n      fetchTime: fetchTime,\n      payload: payload\n    });\n    // Purge least-recently updated key when max size reached\n    if (this._responses.size > this._size) {\n      var firstKey = this._responses.keys().next();\n      if (!firstKey.done) {\n        this._responses[\"delete\"](firstKey.value);\n      }\n    }\n  };\n  return RelayQueryResponseCache;\n}();\nfunction getCacheKey(queryID, variables) {\n  return JSON.stringify(stableCopy({\n    queryID: queryID,\n    variables: variables\n  }));\n}\n\n/**\n * Determine whether a response fetched at `fetchTime` is still valid given\n * some `ttl`.\n */\nfunction isCurrent(fetchTime, ttl) {\n  return fetchTime + ttl >= Date.now();\n}\nmodule.exports = RelayQueryResponseCache;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar generateID = require('../util/generateID');\n\n/**\n * Wraps the network with logging to ensure that network requests are\n * always logged. Relying on each network callsite to be wrapped is\n * untenable and will eventually lead to holes in the logging.\n * NOTE: This function takes an environment instance, because Relay\n * devtools will mutate the `env.__log` method, and the devtools rely\n * on it to receive network events.\n */\nfunction wrapNetworkWithLogObserver(env, network) {\n  return {\n    execute: function execute(params, variables, cacheConfig, uploadables) {\n      var networkRequestId = generateID();\n      var logObserver = {\n        start: function start(subscription) {\n          env.__log({\n            name: 'network.start',\n            networkRequestId: networkRequestId,\n            params: params,\n            variables: variables,\n            cacheConfig: cacheConfig\n          });\n        },\n        next: function next(response) {\n          env.__log({\n            name: 'network.next',\n            networkRequestId: networkRequestId,\n            response: response\n          });\n        },\n        error: function error(_error) {\n          env.__log({\n            name: 'network.error',\n            networkRequestId: networkRequestId,\n            error: _error\n          });\n        },\n        complete: function complete() {\n          env.__log({\n            name: 'network.complete',\n            networkRequestId: networkRequestId\n          });\n        },\n        unsubscribe: function unsubscribe() {\n          env.__log({\n            name: 'network.unsubscribe',\n            networkRequestId: networkRequestId\n          });\n        }\n      };\n      var logRequestInfo = function logRequestInfo(info) {\n        env.__log({\n          name: 'network.info',\n          networkRequestId: networkRequestId,\n          info: info\n        });\n      };\n      return network.execute(params, variables, cacheConfig, uploadables, logRequestInfo)[\"do\"](logObserver);\n    }\n  };\n}\nmodule.exports = wrapNetworkWithLogObserver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n// The type of a graphql`...` tagged template expression.\n\n/**\n * Runtime function to correspond to the `graphql` tagged template function.\n * All calls to this function should be transformed by the plugin.\n */\nfunction graphql(strings) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'graphql: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `graphql`. Note also that there cannot be ' + 'a space between graphql and the backtick that follows.') : invariant(false) : void 0;\n}\nfunction getNode(taggedNode) {\n  var node = taggedNode;\n  if (typeof node === 'function') {\n    node = node();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayGraphQLTag: node `%s` unexpectedly wrapped in a function.', node.kind === 'Fragment' ? node.name : node.operation.name) : void 0;\n  } else if (node[\"default\"]) {\n    // Support for languages that work (best) with ES6 modules, such as TypeScript.\n    node = node[\"default\"];\n  }\n  return node;\n}\nfunction isFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.FRAGMENT;\n}\nfunction isRequest(node) {\n  var request = getNode(node);\n  return typeof request === 'object' && request !== null && request.kind === RelayConcreteNode.REQUEST;\n}\nfunction isUpdatableQuery(node) {\n  var updatableQuery = getNode(node);\n  return typeof updatableQuery === 'object' && updatableQuery !== null && updatableQuery.kind === RelayConcreteNode.UPDATABLE_QUERY;\n}\nfunction isInlineDataFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.INLINE_DATA_FRAGMENT;\n}\nfunction getFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\nfunction getPaginationFragment(taggedNode) {\n  var _fragment$metadata;\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.refetch;\n  var connection = refetch === null || refetch === void 0 ? void 0 : refetch.connection;\n  if (refetch === null || typeof refetch !== 'object' || connection === null || typeof connection !== 'object') {\n    return null;\n  }\n  return fragment;\n}\nfunction getRefetchableFragment(taggedNode) {\n  var _fragment$metadata2;\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata2 = fragment.metadata) === null || _fragment$metadata2 === void 0 ? void 0 : _fragment$metadata2.refetch;\n  if (refetch === null || typeof refetch !== 'object') {\n    return null;\n  }\n  return fragment;\n}\nfunction getRequest(taggedNode) {\n  var request = getNode(taggedNode);\n  !isRequest(request) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(request)) : invariant(false) : void 0;\n  return request;\n}\nfunction getUpdatableQuery(taggedNode) {\n  var updatableQuery = getNode(taggedNode);\n  !isUpdatableQuery(updatableQuery) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(updatableQuery)) : invariant(false) : void 0;\n  return updatableQuery;\n}\nfunction getInlineDataFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isInlineDataFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected an inline data fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\nmodule.exports = {\n  getFragment: getFragment,\n  getNode: getNode,\n  getPaginationFragment: getPaginationFragment,\n  getRefetchableFragment: getRefetchableFragment,\n  getRequest: getRequest,\n  getUpdatableQuery: getUpdatableQuery,\n  getInlineDataFragment: getInlineDataFragment,\n  graphql: graphql,\n  isFragment: isFragment,\n  isRequest: isRequest,\n  isUpdatableQuery: isUpdatableQuery,\n  isInlineDataFragment: isInlineDataFragment\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar PreloadableQueryRegistry = /*#__PURE__*/function () {\n  function PreloadableQueryRegistry() {\n    this._preloadableQueries = new Map();\n    this._callbacks = new Map();\n  }\n  var _proto = PreloadableQueryRegistry.prototype;\n  _proto.set = function set(key, value) {\n    this._preloadableQueries.set(key, value);\n    var callbacks = this._callbacks.get(key);\n    if (callbacks != null) {\n      callbacks.forEach(function (cb) {\n        try {\n          cb(value);\n        } catch (e) {\n          // We do *not* want to throw in this tick, as this callback is executed\n          // while a query is required for the very first time.\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      });\n    }\n  };\n  _proto.get = function get(key) {\n    return this._preloadableQueries.get(key);\n  };\n  _proto.onLoad = function onLoad(key, callback) {\n    var _this$_callbacks$get;\n    var callbacks = (_this$_callbacks$get = this._callbacks.get(key)) !== null && _this$_callbacks$get !== void 0 ? _this$_callbacks$get : new Set();\n    callbacks.add(callback);\n    var dispose = function dispose() {\n      callbacks[\"delete\"](callback);\n    };\n    this._callbacks.set(key, callbacks);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.clear = function clear() {\n    this._preloadableQueries.clear();\n  };\n  return PreloadableQueryRegistry;\n}();\nvar preloadableQueryRegistry = new PreloadableQueryRegistry();\nmodule.exports = preloadableQueryRegistry;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar _require = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require.createOperationDescriptor;\nvar handlePotentialSnapshotErrors = require('../util/handlePotentialSnapshotErrors');\nvar fetchQueryInternal = require('./fetchQueryInternal');\nvar _require2 = require('./GraphQLTag'),\n  getRequest = _require2.getRequest;\nvar invariant = require('invariant');\n\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. Subscribe optionally takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subsctiption) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * Request Promise:\n * ================\n * The obervable can be converted to a Promise with .toPromise(), which will\n * resolve to a snapshot of the query data when the first response is received\n * from the server.\n *\n * ```\n * fetchQuery(environment, query, variables).toPromise().then((data) => {\n *   // ...\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will NOT retain query data, meaning that it is not guaranteed\n * that the fetched data will remain in the Relay store after the request has\n * completed.\n * If you need to retain the query data outside of the network request,\n * you need to use `environment.retain()`.\n *\n *\n * Cancelling requests:\n * ====================\n * If the disposable returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const disposable = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * disposable.dispose();\n * ```\n * NOTE: When using .toPromise(), the request cannot be cancelled.\n */\nfunction fetchQuery(environment, query, variables, options) {\n  var _options$fetchPolicy;\n  var queryNode = getRequest(query);\n  !(queryNode.params.operationKind === 'query') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'fetchQuery: Expected query operation') : invariant(false) : void 0;\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])({\n    force: true\n  }, options === null || options === void 0 ? void 0 : options.networkCacheConfig);\n  var operation = createOperationDescriptor(queryNode, variables, networkCacheConfig);\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'network-only';\n  function readData(snapshot) {\n    handlePotentialSnapshotErrors(environment, snapshot.missingRequiredFields, snapshot.relayResolverErrors);\n    /* $FlowFixMe[incompatible-return] we assume readData returns the right\n     * data just having written it from network or checked availability. */\n    return snapshot.data;\n  }\n  switch (fetchPolicy) {\n    case 'network-only':\n      {\n        return getNetworkObservable(environment, operation).map(readData);\n      }\n    case 'store-or-network':\n      {\n        if (environment.check(operation).status === 'available') {\n          return RelayObservable.from(environment.lookup(operation.fragment)).map(readData);\n        }\n        return getNetworkObservable(environment, operation).map(readData);\n      }\n    default:\n      fetchPolicy;\n      throw new Error('fetchQuery: Invalid fetchPolicy ' + fetchPolicy);\n  }\n}\nfunction getNetworkObservable(environment, operation) {\n  return fetchQueryInternal.fetchQuery(environment, operation).map(function () {\n    return environment.lookup(operation.fragment);\n  });\n}\nmodule.exports = fetchQuery;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar Observable = require('../network/RelayObservable');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar RelayReplaySubject = require('../util/RelayReplaySubject');\nvar invariant = require('invariant');\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar requestCachesByEnvironment = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\n\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. subscribe() takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subscription) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will not retain any query data outside the scope of the\n * request, which means it is not guaranteed that it won't be garbage\n * collected after the request completes.\n * If you need to retain data, you can do so manually with environment.retain().\n *\n * Cancelling requests:\n * ====================\n * If the subscription returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const subscription = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * subscription.unsubscribe();\n * ```\n */\nfunction fetchQuery(environment, operation) {\n  return fetchQueryDeduped(environment, operation.request.identifier, function () {\n    return environment.execute({\n      operation: operation\n    });\n  });\n}\n\n/**\n * Low-level implementation details of `fetchQuery`.\n *\n * `fetchQueryDeduped` can also be used to share a single cache for\n * requests that aren't using `fetchQuery` directly (e.g. because they don't\n * have an `OperationDescriptor` when they are called).\n */\nfunction fetchQueryDeduped(environment, identifier, fetchFn) {\n  return Observable.create(function (sink) {\n    var requestCache = getRequestCache(environment);\n    var cachedRequest = requestCache.get(identifier);\n    if (!cachedRequest) {\n      fetchFn()[\"finally\"](function () {\n        return requestCache[\"delete\"](identifier);\n      }).subscribe({\n        start: function start(subscription) {\n          cachedRequest = {\n            identifier: identifier,\n            subject: new RelayReplaySubject(),\n            subjectForInFlightStatus: new RelayReplaySubject(),\n            subscription: subscription,\n            promise: null\n          };\n          requestCache.set(identifier, cachedRequest);\n        },\n        next: function next(response) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.next(response);\n          cachedReq.subjectForInFlightStatus.next(response);\n        },\n        error: function error(_error) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.error(_error);\n          cachedReq.subjectForInFlightStatus.error(_error);\n        },\n        complete: function complete() {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.complete();\n          cachedReq.subjectForInFlightStatus.complete();\n        },\n        unsubscribe: function unsubscribe(subscription) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.unsubscribe();\n          cachedReq.subjectForInFlightStatus.unsubscribe();\n        }\n      });\n    }\n    !(cachedRequest != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] fetchQueryDeduped: Expected `start` to be ' + 'called synchronously') : invariant(false) : void 0;\n    return getObservableForCachedRequest(requestCache, cachedRequest).subscribe(sink);\n  });\n}\n\n/**\n * @private\n */\nfunction getObservableForCachedRequest(requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subject.subscribe(sink);\n    return function () {\n      subscription.unsubscribe();\n      var cachedRequestInstance = requestCache.get(cachedRequest.identifier);\n      if (cachedRequestInstance) {\n        var requestSubscription = cachedRequestInstance.subscription;\n        if (requestSubscription != null && cachedRequestInstance.subject.getObserverCount() === 0) {\n          requestSubscription.unsubscribe();\n          requestCache[\"delete\"](cachedRequest.identifier);\n        }\n      }\n    };\n  });\n}\n\n/**\n * @private\n */\nfunction getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subjectForInFlightStatus.subscribe({\n      error: sink.error,\n      next: function next(response) {\n        if (!environment.isRequestActive(cachedRequest.identifier)) {\n          sink.complete();\n          return;\n        }\n        sink.next();\n      },\n      complete: sink.complete,\n      unsubscribe: sink.complete\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  });\n}\n\n/**\n * If a request is active for the given query, variables and environment,\n * this function will return a Promise that will resolve when that request\n * stops being active (receives a final payload), and the data has been saved\n * to the store.\n * If no request is active, null will be returned\n */\nfunction getPromiseForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  if (RelayFeatureFlags.USE_REACT_CACHE) {\n    var existing = cachedRequest.promise;\n    if (existing) {\n      return existing;\n    }\n  }\n  var promise = new Promise(function (resolve, reject) {\n    var resolveOnNext = false;\n    getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest).subscribe({\n      complete: resolve,\n      error: reject,\n      next: function next(response) {\n        /*\n         * The underlying `RelayReplaySubject` will synchronously replay events\n         * as soon as we subscribe, but since we want the *next* asynchronous\n         * one, we'll ignore them until the replay finishes.\n         */\n        if (resolveOnNext) {\n          resolve(response);\n        }\n      }\n    });\n    resolveOnNext = true;\n  });\n  if (RelayFeatureFlags.USE_REACT_CACHE) {\n    // React Suspense should get thrown the same promise each time, so we cache it.\n    // However, the promise gets resolved on each payload, so subsequently we need\n    // to provide a new fresh promise that isn't already resolved. (When the feature\n    // flag is off we do this in QueryResource.)\n    cachedRequest.promise = promise;\n    var cleanup = function cleanup() {\n      cachedRequest.promise = null;\n    };\n    promise.then(cleanup, cleanup);\n  }\n  return promise;\n}\n\n/**\n * If there is a pending request for the given query, returns an Observable of\n * *all* its responses. Existing responses are published synchronously and\n * subsequent responses are published asynchronously. Returns null if there is\n * no pending request. This is similar to fetchQuery() except that it will not\n * issue a fetch if there isn't already one pending.\n */\nfunction getObservableForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  return getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest);\n}\n\n/**\n * @private\n */\nfunction getRequestCache(environment) {\n  var cached = requestCachesByEnvironment.get(environment);\n  if (cached != null) {\n    return cached;\n  }\n  var requestCache = new Map();\n  requestCachesByEnvironment.set(environment, requestCache);\n  return requestCache;\n}\n\n/**\n * @private\n */\nfunction getCachedRequest(requestCache, identifier) {\n  var cached = requestCache.get(identifier);\n  !(cached != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] getCachedRequest: Expected request to be cached') : invariant(false) : void 0;\n  return cached;\n}\nmodule.exports = {\n  fetchQuery: fetchQuery,\n  fetchQueryDeduped: fetchQueryDeduped,\n  getPromiseForActiveRequest: getPromiseForActiveRequest,\n  getObservableForActiveRequest: getObservableForActiveRequest\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require.createOperationDescriptor;\nvar _require2 = require('./GraphQLTag'),\n  getRequest = _require2.getRequest;\n\n/**\n * A helper function to fetch the results of a query. Note that results for\n * fragment spreads are masked: fields must be explicitly listed in the query in\n * order to be accessible in the result object.\n */\n\nfunction fetchQuery_DEPRECATED(environment, taggedNode, variables, cacheConfig) {\n  var query = getRequest(taggedNode);\n  if (query.params.operationKind !== 'query') {\n    throw new Error('fetchQuery: Expected query operation');\n  }\n  var operation = createOperationDescriptor(query, variables, cacheConfig);\n  return environment.execute({\n    operation: operation\n  }).map(function () {\n    return environment.lookup(operation.fragment).data;\n  }).toPromise();\n}\nmodule.exports = fetchQuery_DEPRECATED;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('../util/StringInterner'),\n  intern = _require.intern;\nvar PREFIX = 'client:';\nfunction generateClientID(id, storageKey, index) {\n  var internedId = RelayFeatureFlags.STRING_INTERN_LEVEL <= 0 ? id : intern(id, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n  var key = internedId + ':' + storageKey;\n  if (index != null) {\n    key += ':' + index;\n  }\n  if (key.indexOf(PREFIX) !== 0) {\n    key = PREFIX + key;\n  }\n  return key;\n}\nfunction isClientID(id) {\n  return id.indexOf(PREFIX) === 0;\n}\nvar localID = 0;\nfunction generateUniqueClientID() {\n  return \"\".concat(PREFIX, \"local:\").concat(localID++);\n}\n\n// Client objects backed by Relay Resolvers may not be able to provide a\n// globally unique ID, so we provide a namespace.\nfunction generateClientObjectClientID(typename, localId, index) {\n  var key = \"\".concat(PREFIX).concat(typename, \":\").concat(localId);\n  if (index != null) {\n    key += ':' + index;\n  }\n  return key;\n}\nmodule.exports = {\n  generateClientID: generateClientID,\n  generateClientObjectClientID: generateClientObjectClientID,\n  generateUniqueClientID: generateUniqueClientID,\n  isClientID: isClientID\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\nvar getOperation = require('../util/getOperation');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('./ClientID'),\n  isClientID = _require.isClientID;\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\nvar cloneRelayScalarHandleSourceField = require('./cloneRelayScalarHandleSourceField');\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayRecordState'),\n  EXISTENT = _require3.EXISTENT,\n  UNKNOWN = _require3.UNKNOWN;\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require4 = require('./TypeID'),\n  TYPE_SCHEMA_TYPE = _require4.TYPE_SCHEMA_TYPE,\n  generateTypeID = _require4.generateTypeID;\nvar invariant = require('invariant');\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n  CONDITION = RelayConcreteNode.CONDITION,\n  CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n  CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = RelayConcreteNode.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  DEFER = RelayConcreteNode.DEFER,\n  FLIGHT_FIELD = RelayConcreteNode.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n  LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n  LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n  MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n  RELAY_RESOLVER = RelayConcreteNode.RELAY_RESOLVER,\n  SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n  SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n  STREAM = RelayConcreteNode.STREAM,\n  TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR;\nvar ROOT_ID = RelayStoreUtils.ROOT_ID,\n  getModuleOperationKey = RelayStoreUtils.getModuleOperationKey,\n  getStorageKey = RelayStoreUtils.getStorageKey,\n  getArgumentValues = RelayStoreUtils.getArgumentValues;\n\n/**\n * Synchronously check whether the records required to fulfill the given\n * `selector` are present in `source`.\n *\n * If a field is missing, it uses the provided handlers to attempt to substitute\n * data. The `target` will store all records that are modified because of a\n * successful substitution.\n *\n * If all records are present, returns `true`, otherwise `false`.\n */\nfunction check(getSourceForActor, getTargetForActor, defaultActorIdentifier, selector, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var checker = new DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents);\n  return checker.check(node, dataID);\n}\n\n/**\n * @private\n */\nvar DataChecker = /*#__PURE__*/function () {\n  function DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n    this._getSourceForActor = getSourceForActor;\n    this._getTargetForActor = getTargetForActor;\n    this._getDataID = getDataID;\n    this._source = getSourceForActor(defaultActorIdentifier);\n    this._mutatorRecordSourceProxyCache = new Map();\n    var _this$_getMutatorAndR = this._getMutatorAndRecordProxyForActor(defaultActorIdentifier),\n      mutator = _this$_getMutatorAndR[0],\n      recordSourceProxy = _this$_getMutatorAndR[1];\n    this._mostRecentlyInvalidatedAt = null;\n    this._handlers = handlers;\n    this._mutator = mutator;\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._recordSourceProxy = recordSourceProxy;\n    this._recordWasMissing = false;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n  var _proto = DataChecker.prototype;\n  _proto._getMutatorAndRecordProxyForActor = function _getMutatorAndRecordProxyForActor(actorIdentifier) {\n    var tuple = this._mutatorRecordSourceProxyCache.get(actorIdentifier);\n    if (tuple == null) {\n      var target = this._getTargetForActor(actorIdentifier);\n      var mutator = new RelayRecordSourceMutator(this._getSourceForActor(actorIdentifier), target);\n      var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, undefined, this._handlers);\n      tuple = [mutator, recordSourceProxy];\n      this._mutatorRecordSourceProxyCache.set(actorIdentifier, tuple);\n    }\n    return tuple;\n  };\n  _proto.check = function check(node, dataID) {\n    this._assignClientAbstractTypes(node);\n    this._traverse(node, dataID);\n    return this._recordWasMissing === true ? {\n      status: 'missing',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    } : {\n      status: 'available',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    };\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._handleMissing = function _handleMissing() {\n    this._recordWasMissing = true;\n  };\n  _proto._handleMissingScalarField = function _handleMissingScalarField(field, dataID) {\n    if (field.name === 'id' && field.alias == null && isClientID(dataID)) {\n      return undefined;\n    }\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var handler = _step.value;\n        if (handler.kind === 'scalar') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue !== undefined) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    this._handleMissing();\n  };\n  _proto._handleMissingLinkField = function _handleMissingLinkField(field, dataID) {\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var handler = _step2.value;\n        if (handler.kind === 'linked') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue !== undefined && (newValue === null || this._mutator.getStatus(newValue) === EXISTENT)) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    this._handleMissing();\n  };\n  _proto._handleMissingPluralLinkField = function _handleMissingPluralLinkField(field, dataID) {\n    var _this = this;\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var handler = _step3.value;\n        if (handler.kind === 'pluralLinked') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue != null) {\n            var allItemsKnown = newValue.every(function (linkedID) {\n              return linkedID != null && _this._mutator.getStatus(linkedID) === EXISTENT;\n            });\n            if (allItemsKnown) {\n              return newValue;\n            }\n          } else if (newValue === null) {\n            return null;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    this._handleMissing();\n  };\n  _proto._traverse = function _traverse(node, dataID) {\n    var status = this._mutator.getStatus(dataID);\n    if (status === UNKNOWN) {\n      this._handleMissing();\n    }\n    if (status === EXISTENT) {\n      var record = this._source.get(dataID);\n      var invalidatedAt = RelayModernRecord.getInvalidationEpoch(record);\n      if (invalidatedAt != null) {\n        this._mostRecentlyInvalidatedAt = this._mostRecentlyInvalidatedAt != null ? Math.max(this._mostRecentlyInvalidatedAt, invalidatedAt) : invalidatedAt;\n      }\n      this._traverseSelections(node.selections, dataID);\n    }\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, dataID) {\n    var _this2 = this;\n    selections.forEach(function (selection) {\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n          _this2._checkScalar(selection, dataID);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this2._checkPluralLink(selection, dataID);\n          } else {\n            _this2._checkLink(selection, dataID);\n          }\n          break;\n        case ACTOR_CHANGE:\n          _this2._checkActorChange(selection.linkedField, dataID);\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(_this2._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            _this2._traverseSelections(selection.selections, dataID);\n          }\n          break;\n        case INLINE_FRAGMENT:\n          {\n            var _abstractKey = selection.abstractKey;\n            if (_abstractKey == null) {\n              // concrete type refinement: only check data if the type exactly matches\n              var typeName = _this2._mutator.getType(dataID);\n              if (typeName === selection.type) {\n                _this2._traverseSelections(selection.selections, dataID);\n              }\n            } else {\n              // Abstract refinement: check data depending on whether the type\n              // conforms to the interface/union or not:\n              // - Type known to _not_ implement the interface: don't check the selections.\n              // - Type is known _to_ implement the interface: check selections.\n              // - Unknown whether the type implements the interface: don't check the selections\n              //   and treat the data as missing; we do this because the Relay Compiler\n              //   guarantees that the type discriminator will always be fetched.\n              var _recordType = _this2._mutator.getType(dataID);\n              !(_recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n              var _typeID = generateTypeID(_recordType);\n              var _implementsInterface = _this2._mutator.getValue(_typeID, _abstractKey);\n              if (_implementsInterface === true) {\n                _this2._traverseSelections(selection.selections, dataID);\n              } else if (_implementsInterface == null) {\n                // unsure if the type implements the interface: data is\n                // missing so don't bother reading the fragment\n                _this2._handleMissing();\n              } // else false: known to not implement the interface\n            }\n\n            break;\n          }\n        case LINKED_HANDLE:\n          {\n            // Handles have no selections themselves; traverse the original field\n            // where the handle was set-up instead.\n            var handleField = cloneRelayHandleSourceField(selection, selections, _this2._variables);\n            if (handleField.plural) {\n              _this2._checkPluralLink(handleField, dataID);\n            } else {\n              _this2._checkLink(handleField, dataID);\n            }\n            break;\n          }\n        case SCALAR_HANDLE:\n          {\n            var _handleField = cloneRelayScalarHandleSourceField(selection, selections, _this2._variables);\n            _this2._checkScalar(_handleField, dataID);\n            break;\n          }\n        case MODULE_IMPORT:\n          _this2._checkModuleImport(selection, dataID);\n          break;\n        case DEFER:\n        case STREAM:\n          _this2._traverseSelections(selection.selections, dataID);\n          break;\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this2._variables;\n          _this2._variables = getLocalVariables(_this2._variables, selection.fragment.argumentDefinitions, selection.args);\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n          _this2._variables = prevVariables;\n          break;\n        case CLIENT_EXTENSION:\n          var recordWasMissing = _this2._recordWasMissing;\n          _this2._traverseSelections(selection.selections, dataID);\n          _this2._recordWasMissing = recordWasMissing;\n          break;\n        case TYPE_DISCRIMINATOR:\n          var abstractKey = selection.abstractKey;\n          var recordType = _this2._mutator.getType(dataID);\n          !(recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n          var typeID = generateTypeID(recordType);\n          var implementsInterface = _this2._mutator.getValue(typeID, abstractKey);\n          if (implementsInterface == null) {\n            // unsure if the type implements the interface: data is\n            // missing\n            _this2._handleMissing();\n          } // else: if it does or doesn't implement, we don't need to check or skip anything else\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            _this2._checkFlightField(selection, dataID);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case CLIENT_COMPONENT:\n          if (_this2._shouldProcessClientComponents === false) {\n            break;\n          }\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n          break;\n        case RELAY_RESOLVER:\n          _this2._checkResolver(selection, dataID);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          _this2._checkResolver(selection.backingField, dataID);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    });\n  };\n  _proto._checkResolver = function _checkResolver(resolver, dataID) {\n    if (resolver.fragment) {\n      this._traverseSelections([resolver.fragment], dataID);\n    }\n  };\n  _proto._checkModuleImport = function _checkModuleImport(moduleImport, dataID) {\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using `@module`.') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = this._mutator.getValue(dataID, operationKey);\n    if (operationReference == null) {\n      if (operationReference === undefined) {\n        this._handleMissing();\n      }\n      return;\n    }\n    var normalizationRootNode = operationLoader.get(operationReference);\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n      this._traverse(operation, dataID);\n      this._variables = prevVariables;\n    } else {\n      // If the fragment is not available, we assume that the data cannot have been\n      // processed yet and must therefore be missing.\n      this._handleMissing();\n    }\n  };\n  _proto._checkScalar = function _checkScalar(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = this._mutator.getValue(dataID, storageKey);\n    if (fieldValue === undefined) {\n      fieldValue = this._handleMissingScalarField(field, dataID);\n      if (fieldValue !== undefined) {\n        this._mutator.setValue(dataID, storageKey, fieldValue);\n      }\n    }\n  };\n  _proto._checkLink = function _checkLink(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n    if (linkedID === undefined) {\n      linkedID = this._handleMissingLinkField(field, dataID);\n      if (linkedID != null) {\n        this._mutator.setLinkedRecordID(dataID, storageKey, linkedID);\n      } else if (linkedID === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n    if (linkedID != null) {\n      this._traverse(field, linkedID);\n    }\n  };\n  _proto._checkPluralLink = function _checkPluralLink(field, dataID) {\n    var _this3 = this;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = this._mutator.getLinkedRecordIDs(dataID, storageKey);\n    if (linkedIDs === undefined) {\n      linkedIDs = this._handleMissingPluralLinkField(field, dataID);\n      if (linkedIDs != null) {\n        this._mutator.setLinkedRecordIDs(dataID, storageKey, linkedIDs);\n      } else if (linkedIDs === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n    if (linkedIDs) {\n      linkedIDs.forEach(function (linkedID) {\n        if (linkedID != null) {\n          _this3._traverse(field, linkedID);\n        }\n      });\n    }\n  };\n  _proto._checkActorChange = function _checkActorChange(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var record = this._source.get(dataID);\n    var tuple = record != null ? RelayModernRecord.getActorLinkedRecordID(record, storageKey) : record;\n    if (tuple == null) {\n      if (tuple === undefined) {\n        this._handleMissing();\n      }\n    } else {\n      var actorIdentifier = tuple[0],\n        linkedID = tuple[1];\n      var prevSource = this._source;\n      var prevMutator = this._mutator;\n      var prevRecordSourceProxy = this._recordSourceProxy;\n      var _this$_getMutatorAndR2 = this._getMutatorAndRecordProxyForActor(actorIdentifier),\n        mutator = _this$_getMutatorAndR2[0],\n        recordSourceProxy = _this$_getMutatorAndR2[1];\n      this._source = this._getSourceForActor(actorIdentifier);\n      this._mutator = mutator;\n      this._recordSourceProxy = recordSourceProxy;\n      this._assignClientAbstractTypes(field);\n      this._traverse(field, linkedID);\n      this._source = prevSource;\n      this._mutator = prevMutator;\n      this._recordSourceProxy = prevRecordSourceProxy;\n    }\n  };\n  _proto._checkFlightField = function _checkFlightField(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n    if (linkedID == null) {\n      if (linkedID === undefined) {\n        this._handleMissing();\n        return;\n      }\n      return;\n    }\n    var tree = this._mutator.getValue(linkedID, RelayStoreReactFlightUtils.REACT_FLIGHT_TREE_STORAGE_KEY);\n    var reachableExecutableDefinitions = this._mutator.getValue(linkedID, RelayStoreReactFlightUtils.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY);\n    if (tree == null || !Array.isArray(reachableExecutableDefinitions)) {\n      this._handleMissing();\n      return;\n    }\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using ' + 'React Flight.') : invariant(false) : void 0;\n    // In Flight, the variables that are in scope for reachable executable\n    // definitions aren't the same as what's in scope for the outer query.\n    var prevVariables = this._variables;\n    // $FlowFixMe[incompatible-cast]\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(reachableExecutableDefinitions),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var definition = _step4.value;\n        this._variables = definition.variables;\n        var normalizationRootNode = operationLoader.get(definition.module);\n        if (normalizationRootNode != null) {\n          var operation = getOperation(normalizationRootNode);\n          this._traverseSelections(operation.selections, ROOT_ID);\n        } else {\n          // If the fragment is not available, we assume that the data cannot have\n          // been processed yet and must therefore be missing.\n          this._handleMissing();\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    this._variables = prevVariables;\n  }\n\n  // For abstract types defined in the client schema extension, we won't be\n  // getting `__is<AbstractType>` hints from the server. To handle this, the\n  // compiler attaches additional metadata on the normalization artifact,\n  // which we need to record into the store.\n  ;\n  _proto._assignClientAbstractTypes = function _assignClientAbstractTypes(node) {\n    var clientAbstractTypes = node.clientAbstractTypes;\n    if (clientAbstractTypes != null) {\n      for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {\n        var abstractType = _Object$keys[_i];\n        var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(clientAbstractTypes[abstractType]),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var concreteType = _step5.value;\n            var typeID = generateTypeID(concreteType);\n            if (this._source.get(typeID) == null) {\n              this._mutator.create(typeID, TYPE_SCHEMA_TYPE);\n            }\n            if (this._mutator.getValue(typeID, abstractType) == null) {\n              this._mutator.setValue(typeID, abstractType, true);\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  };\n  return DataChecker;\n}();\nmodule.exports = {\n  check: check\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar generateID = require('../util/generateID');\nvar getOperation = require('../util/getOperation');\nvar RelayError = require('../util/RelayError');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar stableCopy = require('../util/stableCopy');\nvar withDuration = require('../util/withDuration');\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID;\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require3.createNormalizationSelector,\n  createReaderSelector = _require3.createReaderSelector;\nvar RelayRecordSource = require('./RelayRecordSource');\nvar RelayResponseNormalizer = require('./RelayResponseNormalizer');\nvar _require4 = require('./RelayStoreUtils'),\n  ROOT_TYPE = _require4.ROOT_TYPE,\n  TYPENAME_KEY = _require4.TYPENAME_KEY,\n  getStorageKey = _require4.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction execute(config) {\n  return new Executor(config);\n}\n\n/**\n * Coordinates the execution of a query, handling network callbacks\n * including optimistic payloads, standard payloads, resolution of match\n * dependencies, etc.\n */\nvar Executor = /*#__PURE__*/function () {\n  function Executor(_ref2) {\n    var _this = this;\n    var actorIdentifier = _ref2.actorIdentifier,\n      getDataID = _ref2.getDataID,\n      getPublishQueue = _ref2.getPublishQueue,\n      getStore = _ref2.getStore,\n      isClientPayload = _ref2.isClientPayload,\n      operation = _ref2.operation,\n      operationExecutions = _ref2.operationExecutions,\n      operationLoader = _ref2.operationLoader,\n      operationTracker = _ref2.operationTracker,\n      optimisticConfig = _ref2.optimisticConfig,\n      _reactFlightPayloadDeserializer = _ref2.reactFlightPayloadDeserializer,\n      reactFlightServerErrorHandler = _ref2.reactFlightServerErrorHandler,\n      scheduler = _ref2.scheduler,\n      shouldProcessClientComponents = _ref2.shouldProcessClientComponents,\n      sink = _ref2.sink,\n      source = _ref2.source,\n      treatMissingFieldsAsNull = _ref2.treatMissingFieldsAsNull,\n      updater = _ref2.updater,\n      log = _ref2.log;\n    (0, _defineProperty2[\"default\"])(this, \"_deserializeReactFlightPayloadWithLogging\", function (tree) {\n      var reactFlightPayloadDeserializer = _this._reactFlightPayloadDeserializer;\n      !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected reactFlightPayloadDeserializer to be available when calling _deserializeReactFlightPayloadWithLogging.') : invariant(false) : void 0;\n      var _withDuration = withDuration(function () {\n          return reactFlightPayloadDeserializer(tree);\n        }),\n        duration = _withDuration[0],\n        result = _withDuration[1];\n      _this._log({\n        name: 'execute.flight.payload_deserialize',\n        executeId: _this._executeId,\n        operationName: _this._operation.request.node.params.name,\n        duration: duration\n      });\n      return result;\n    });\n    this._actorIdentifier = actorIdentifier;\n    this._getDataID = getDataID;\n    this._treatMissingFieldsAsNull = treatMissingFieldsAsNull;\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults = new Map();\n    this._log = log;\n    this._executeId = generateID();\n    this._nextSubscriptionId = 0;\n    this._operation = operation;\n    this._operationExecutions = operationExecutions;\n    this._operationLoader = operationLoader;\n    this._operationTracker = operationTracker;\n    this._operationUpdateEpochs = new Map();\n    this._optimisticUpdates = null;\n    this._pendingModulePayloadsCount = 0;\n    this._getPublishQueue = getPublishQueue;\n    this._scheduler = scheduler;\n    this._sink = sink;\n    this._source = new Map();\n    this._state = 'started';\n    this._getStore = getStore;\n    this._subscriptions = new Map();\n    this._updater = updater;\n    this._isClientPayload = isClientPayload === true;\n    this._reactFlightPayloadDeserializer = _reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._isSubscriptionOperation = this._operation.request.node.params.operationKind === 'subscription';\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n    this._retainDisposables = new Map();\n    this._seenActors = new Set();\n    this._completeFns = [];\n    var id = this._nextSubscriptionId++;\n    source.subscribe({\n      complete: function complete() {\n        return _this._complete(id);\n      },\n      error: function error(_error2) {\n        return _this._error(_error2);\n      },\n      next: function next(response) {\n        try {\n          _this._next(id, response);\n        } catch (error) {\n          sink.error(error);\n        }\n      },\n      start: function start(subscription) {\n        var _this$_operation$requ;\n        _this._start(id, subscription);\n        _this._log({\n          name: 'execute.start',\n          executeId: _this._executeId,\n          params: _this._operation.request.node.params,\n          variables: _this._operation.request.variables,\n          cacheConfig: (_this$_operation$requ = _this._operation.request.cacheConfig) !== null && _this$_operation$requ !== void 0 ? _this$_operation$requ : {}\n        });\n      }\n    });\n    if (optimisticConfig != null) {\n      this._processOptimisticResponse(optimisticConfig.response != null ? {\n        data: optimisticConfig.response\n      } : null, optimisticConfig.updater, false);\n    }\n  }\n\n  // Cancel any pending execution tasks and mark the executor as completed.\n  var _proto = Executor.prototype;\n  _proto.cancel = function cancel() {\n    var _this2 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    this._state = 'completed';\n    this._operationExecutions[\"delete\"](this._operation.request.identifier);\n    if (this._subscriptions.size !== 0) {\n      this._subscriptions.forEach(function (sub) {\n        return sub.unsubscribe();\n      });\n      this._subscriptions.clear();\n    }\n    var optimisticUpdates = this._optimisticUpdates;\n    if (optimisticUpdates !== null) {\n      this._optimisticUpdates = null;\n      optimisticUpdates.forEach(function (update) {\n        return _this2._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      // OK: run revert on cancel\n      this._runPublishQueue();\n    }\n    this._incrementalResults.clear();\n    if (this._asyncStoreUpdateDisposable != null) {\n      this._asyncStoreUpdateDisposable.dispose();\n      this._asyncStoreUpdateDisposable = null;\n    }\n    this._completeFns = [];\n    this._completeOperationTracker();\n    this._disposeRetainedData();\n  };\n  _proto._updateActiveState = function _updateActiveState() {\n    var activeState;\n    switch (this._state) {\n      case 'started':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'loading_incremental':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'completed':\n        {\n          activeState = 'inactive';\n          break;\n        }\n      case 'loading_final':\n        {\n          activeState = this._pendingModulePayloadsCount > 0 ? 'active' : 'inactive';\n          break;\n        }\n      default:\n        this._state;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid executor state.') : invariant(false) : void 0;\n    }\n    this._operationExecutions.set(this._operation.request.identifier, activeState);\n  };\n  _proto._schedule = function _schedule(task) {\n    var _this3 = this;\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      var id = this._nextSubscriptionId++;\n      RelayObservable.create(function (sink) {\n        var cancellationToken = scheduler.schedule(function () {\n          try {\n            task();\n            sink.complete();\n          } catch (error) {\n            sink.error(error);\n          }\n        });\n        return function () {\n          return scheduler.cancel(cancellationToken);\n        };\n      }).subscribe({\n        complete: function complete() {\n          return _this3._complete(id);\n        },\n        error: function error(_error3) {\n          return _this3._error(_error3);\n        },\n        start: function start(subscription) {\n          return _this3._start(id, subscription);\n        }\n      });\n    } else {\n      task();\n    }\n  };\n  _proto._complete = function _complete(id) {\n    this._subscriptions[\"delete\"](id);\n    if (this._subscriptions.size === 0) {\n      this.cancel();\n      this._sink.complete();\n      this._log({\n        name: 'execute.complete',\n        executeId: this._executeId\n      });\n    }\n  };\n  _proto._error = function _error(error) {\n    this.cancel();\n    this._sink.error(error);\n    this._log({\n      name: 'execute.error',\n      executeId: this._executeId,\n      error: error\n    });\n  };\n  _proto._start = function _start(id, subscription) {\n    this._subscriptions.set(id, subscription);\n    this._updateActiveState();\n  }\n\n  // Handle a raw GraphQL response.\n  ;\n  _proto._next = function _next(_id, response) {\n    var _this4 = this;\n    this._schedule(function () {\n      var _withDuration2 = withDuration(function () {\n          _this4._handleNext(response);\n          _this4._maybeCompleteSubscriptionOperationTracking();\n        }),\n        duration = _withDuration2[0];\n      _this4._log({\n        name: 'execute.next',\n        executeId: _this4._executeId,\n        response: response,\n        duration: duration\n      });\n    });\n  };\n  _proto._handleErrorResponse = function _handleErrorResponse(responses) {\n    var _this5 = this;\n    var results = [];\n    responses.forEach(function (response) {\n      if (response.data === null && response.extensions != null && !response.hasOwnProperty('errors')) {\n        // Skip extensions-only payloads\n        return;\n      } else if (response.data == null) {\n        // Error if any other payload in the batch is missing data, regardless of whether\n        // it had `errors` or not.\n        var errors = response.hasOwnProperty('errors') && response.errors != null ? response.errors : null;\n        var messages = errors ? errors.map(function (_ref3) {\n          var message = _ref3.message;\n          return message;\n        }).join('\\n') : '(No errors)';\n        var error = RelayError.create('RelayNetwork', 'No data returned for operation `' + _this5._operation.request.node.params.name + '`, got error(s):\\n' + messages + '\\n\\nSee the error `source` property for more information.');\n        error.source = {\n          errors: errors,\n          operation: _this5._operation.request.node,\n          variables: _this5._operation.request.variables\n        };\n        // In V8, Error objects keep the closure scope chain alive until the\n        // err.stack property is accessed.\n        error.stack;\n        throw error;\n      } else {\n        var responseWithData = response;\n        results.push(responseWithData);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * This method return boolean to indicate if the optimistic\n   * response has been handled\n   */;\n  _proto._handleOptimisticResponses = function _handleOptimisticResponses(responses) {\n    var _response$extensions;\n    if (responses.length > 1) {\n      if (responses.some(function (responsePart) {\n        var _responsePart$extensi;\n        return ((_responsePart$extensi = responsePart.extensions) === null || _responsePart$extensi === void 0 ? void 0 : _responsePart$extensi.isOptimistic) === true;\n      })) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Optimistic responses cannot be batched.') : invariant(false) : void 0;\n      }\n      return false;\n    }\n    var response = responses[0];\n    var isOptimistic = ((_response$extensions = response.extensions) === null || _response$extensions === void 0 ? void 0 : _response$extensions.isOptimistic) === true;\n    if (isOptimistic && this._state !== 'started') {\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic payload received after server payload.') : invariant(false) : void 0;\n    }\n    if (isOptimistic) {\n      this._processOptimisticResponse(response, null, this._treatMissingFieldsAsNull);\n      this._sink.next(response);\n      return true;\n    }\n    return false;\n  };\n  _proto._handleNext = function _handleNext(response) {\n    if (this._state === 'completed') {\n      return;\n    }\n    this._seenActors.clear();\n    var responses = Array.isArray(response) ? response : [response];\n    var responsesWithData = this._handleErrorResponse(responses);\n    if (responsesWithData.length === 0) {\n      // no results with data, nothing to process\n      // this can occur with extensions-only payloads\n      var isFinal = responses.some(function (x) {\n        var _x$extensions;\n        return ((_x$extensions = x.extensions) === null || _x$extensions === void 0 ? void 0 : _x$extensions.is_final) === true;\n      });\n      if (isFinal) {\n        this._state = 'loading_final';\n        this._updateActiveState();\n        this._incrementalPayloadsPending = false;\n      }\n      this._sink.next(response);\n      return;\n    }\n\n    // Next, handle optimistic responses\n    var isOptimistic = this._handleOptimisticResponses(responsesWithData);\n    if (isOptimistic) {\n      return;\n    }\n    var _partitionGraphQLResp = partitionGraphQLResponses(responsesWithData),\n      nonIncrementalResponses = _partitionGraphQLResp[0],\n      incrementalResponses = _partitionGraphQLResp[1];\n    var hasNonIncrementalResponses = nonIncrementalResponses.length > 0;\n\n    // In theory this doesn't preserve the ordering of the batch.\n    // The idea is that a batch is always:\n    //  * at most one non-incremental payload\n    //  * followed by zero or more incremental payloads\n    // The non-incremental payload can appear if the server sends a batch\n    // with the initial payload followed by some early-to-resolve incremental\n    // payloads (although, can that even happen?)\n    if (hasNonIncrementalResponses) {\n      // For subscriptions, to avoid every new payload from overwriting existing\n      // data from previous payloads, assign a unique rootID for every new\n      // non-incremental payload.\n      if (this._isSubscriptionOperation) {\n        var nextID = generateUniqueClientID();\n        this._operation = {\n          request: this._operation.request,\n          fragment: createReaderSelector(this._operation.fragment.node, nextID, this._operation.fragment.variables, this._operation.fragment.owner),\n          root: createNormalizationSelector(this._operation.root.node, nextID, this._operation.root.variables)\n        };\n      }\n      var payloadFollowups = this._processResponses(nonIncrementalResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n    if (incrementalResponses.length > 0) {\n      var _payloadFollowups = this._processIncrementalResponses(incrementalResponses);\n      this._processPayloadFollowups(_payloadFollowups);\n    }\n    if (this._isSubscriptionOperation) {\n      // We attach the id to allow the `requestSubscription` to read from the store using\n      // the current id in its `onNext` callback\n      if (responsesWithData[0].extensions == null) {\n        // $FlowFixMe[cannot-write]\n        responsesWithData[0].extensions = {\n          __relay_subscription_root_id: this._operation.fragment.dataID\n        };\n      } else {\n        responsesWithData[0].extensions.__relay_subscription_root_id = this._operation.fragment.dataID;\n      }\n    }\n\n    // OK: run once after each new payload\n    // If we have non-incremental responses, we passing `this._operation` to\n    // the publish queue here, which will later be passed to the store (via\n    // notify) to indicate that this operation caused the store to update\n    var updatedOwners = this._runPublishQueue(hasNonIncrementalResponses ? this._operation : undefined);\n    if (hasNonIncrementalResponses) {\n      if (this._incrementalPayloadsPending) {\n        this._retainData();\n      }\n    }\n    this._updateOperationTracker(updatedOwners);\n    this._sink.next(response);\n  };\n  _proto._processOptimisticResponse = function _processOptimisticResponse(response, updater, treatMissingFieldsAsNull) {\n    var _this6 = this;\n    !(this._optimisticUpdates === null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: environment.execute: only support one optimistic response per ' + 'execute.') : invariant(false) : void 0;\n    if (response == null && updater == null) {\n      return;\n    }\n    var optimisticUpdates = [];\n    if (response) {\n      var payload = normalizeResponse(response, this._operation.root, ROOT_TYPE, {\n        actorIdentifier: this._actorIdentifier,\n        getDataID: this._getDataID,\n        path: [],\n        reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n        reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n        shouldProcessClientComponents: this._shouldProcessClientComponents,\n        treatMissingFieldsAsNull: treatMissingFieldsAsNull\n      });\n      validateOptimisticResponsePayload(payload);\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: payload,\n        updater: updater\n      });\n      this._processOptimisticFollowups(payload, optimisticUpdates);\n    } else if (updater) {\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: {\n          errors: null,\n          fieldPayloads: null,\n          incrementalPlaceholders: null,\n          followupPayloads: null,\n          source: RelayRecordSource.create(),\n          isFinal: false\n        },\n        updater: updater\n      });\n    }\n    this._optimisticUpdates = optimisticUpdates;\n    optimisticUpdates.forEach(function (update) {\n      return _this6._getPublishQueueAndSaveActor().applyUpdate(update);\n    });\n    // OK: only called on construction and when receiving an optimistic payload from network,\n    // which doesn't fall-through to the regular next() handling\n    this._runPublishQueue();\n  };\n  _proto._processOptimisticFollowups = function _processOptimisticFollowups(payload, optimisticUpdates) {\n    if (payload.followupPayloads && payload.followupPayloads.length) {\n      var followupPayloads = payload.followupPayloads;\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(followupPayloads),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var followupPayload = _step.value;\n          switch (followupPayload.kind) {\n            case 'ModuleImportPayload':\n              var operationLoader = this._expectOperationLoader();\n              var operation = operationLoader.get(followupPayload.operationReference);\n              if (operation == null) {\n                this._processAsyncOptimisticModuleImport(followupPayload);\n              } else {\n                var moduleImportOptimisticUpdates = this._processOptimisticModuleImport(operation, followupPayload);\n                optimisticUpdates.push.apply(optimisticUpdates, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n              }\n              break;\n            case 'ActorPayload':\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected optimistic ActorPayload. These updates are not supported.') : void 0;\n              break;\n            default:\n              followupPayload;\n              !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`. when processing optimistic updates.', followupPayload.kind) : invariant(false) : void 0;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n\n  /**\n   * Normalize Data for @module payload, and actor-specific payload\n   */;\n  _proto._normalizeFollowupPayload = function _normalizeFollowupPayload(followupPayload, normalizationNode) {\n    var variables;\n    if (normalizationNode.kind === 'SplitOperation' && followupPayload.kind === 'ModuleImportPayload') {\n      variables = getLocalVariables(followupPayload.variables, normalizationNode.argumentDefinitions, followupPayload.args);\n    } else {\n      variables = followupPayload.variables;\n    }\n    var selector = createNormalizationSelector(normalizationNode, followupPayload.dataID, variables);\n    return normalizeResponse({\n      data: followupPayload.data\n    }, selector, followupPayload.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: followupPayload.path,\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n  };\n  _proto._processOptimisticModuleImport = function _processOptimisticModuleImport(normalizationRootNode, moduleImportPayload) {\n    var operation = getOperation(normalizationRootNode);\n    var optimisticUpdates = [];\n    var modulePayload = this._normalizeFollowupPayload(moduleImportPayload, operation);\n    validateOptimisticResponsePayload(modulePayload);\n    optimisticUpdates.push({\n      operation: this._operation,\n      payload: modulePayload,\n      updater: null\n    });\n    this._processOptimisticFollowups(modulePayload, optimisticUpdates);\n    return optimisticUpdates;\n  };\n  _proto._processAsyncOptimisticModuleImport = function _processAsyncOptimisticModuleImport(moduleImportPayload) {\n    var _this7 = this;\n    // $FlowFixMe[unused-promise]\n    this._expectOperationLoader().load(moduleImportPayload.operationReference).then(function (operation) {\n      if (operation == null || _this7._state !== 'started') {\n        return;\n      }\n      var moduleImportOptimisticUpdates = _this7._processOptimisticModuleImport(operation, moduleImportPayload);\n      moduleImportOptimisticUpdates.forEach(function (update) {\n        return _this7._getPublishQueueAndSaveActor().applyUpdate(update);\n      });\n      if (_this7._optimisticUpdates == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected ModuleImport optimistic ' + 'update in operation %s.' + _this7._operation.request.node.params.name) : void 0;\n      } else {\n        var _this$_optimisticUpda;\n        (_this$_optimisticUpda = _this7._optimisticUpdates).push.apply(_this$_optimisticUpda, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n        // OK: always have to run() after an module import resolves async\n        _this7._runPublishQueue();\n      }\n    });\n  };\n  _proto._processResponses = function _processResponses(responses) {\n    var _this8 = this;\n    if (this._optimisticUpdates !== null) {\n      this._optimisticUpdates.forEach(function (update) {\n        _this8._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._optimisticUpdates = null;\n    }\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults.clear();\n    this._source.clear();\n    return responses.map(function (payloadPart) {\n      var relayPayload = normalizeResponse(payloadPart, _this8._operation.root, ROOT_TYPE, {\n        actorIdentifier: _this8._actorIdentifier,\n        getDataID: _this8._getDataID,\n        path: [],\n        reactFlightPayloadDeserializer: _this8._reactFlightPayloadDeserializer != null ? _this8._deserializeReactFlightPayloadWithLogging : null,\n        reactFlightServerErrorHandler: _this8._reactFlightServerErrorHandler,\n        treatMissingFieldsAsNull: _this8._treatMissingFieldsAsNull,\n        shouldProcessClientComponents: _this8._shouldProcessClientComponents\n      });\n      _this8._getPublishQueueAndSaveActor().commitPayload(_this8._operation, relayPayload, _this8._updater);\n      return relayPayload;\n    });\n  }\n\n  /**\n   * Handles any follow-up actions for a Relay payload for @match, @defer,\n   * and @stream directives.\n   */;\n  _proto._processPayloadFollowups = function _processPayloadFollowups(payloads) {\n    var _this9 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    payloads.forEach(function (payload) {\n      var incrementalPlaceholders = payload.incrementalPlaceholders,\n        followupPayloads = payload.followupPayloads,\n        isFinal = payload.isFinal;\n      _this9._state = isFinal ? 'loading_final' : 'loading_incremental';\n      _this9._updateActiveState();\n      if (isFinal) {\n        _this9._incrementalPayloadsPending = false;\n      }\n      if (followupPayloads && followupPayloads.length !== 0) {\n        followupPayloads.forEach(function (followupPayload) {\n          var _followupPayload$acto;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_followupPayload$acto = followupPayload.actorIdentifier) !== null && _followupPayload$acto !== void 0 ? _followupPayload$acto : _this9._actorIdentifier;\n          _this9._processFollowupPayload(followupPayload);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n      }\n      if (incrementalPlaceholders && incrementalPlaceholders.length !== 0) {\n        _this9._incrementalPayloadsPending = _this9._state !== 'loading_final';\n        incrementalPlaceholders.forEach(function (incrementalPlaceholder) {\n          var _incrementalPlacehold;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_incrementalPlacehold = incrementalPlaceholder.actorIdentifier) !== null && _incrementalPlacehold !== void 0 ? _incrementalPlacehold : _this9._actorIdentifier;\n          _this9._processIncrementalPlaceholder(payload, incrementalPlaceholder);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n        if (_this9._isClientPayload || _this9._state === 'loading_final') {\n          // The query has defer/stream selections that are enabled, but either\n          // the server indicated that this is a \"final\" payload: no incremental\n          // payloads will be delivered, then warn that the query was (likely)\n          // executed on the server in non-streaming mode, with incremental\n          // delivery disabled; or this is a client payload, and there will be\n          // no incremental payload.\n          process.env.NODE_ENV !== \"production\" ? warning(_this9._isClientPayload, 'RelayModernEnvironment: Operation `%s` contains @defer/@stream ' + 'directives but was executed in non-streaming mode. See ' + 'https://fburl.com/relay-incremental-delivery-non-streaming-warning.', _this9._operation.request.node.params.name) : void 0;\n          // But eagerly process any deferred payloads\n          var relayPayloads = [];\n          incrementalPlaceholders.forEach(function (placeholder) {\n            if (placeholder.kind === 'defer') {\n              relayPayloads.push(_this9._processDeferResponse(placeholder.label, placeholder.path, placeholder, {\n                data: placeholder.data\n              }));\n            }\n          });\n          if (relayPayloads.length > 0) {\n            _this9._processPayloadFollowups(relayPayloads);\n          }\n        }\n      }\n    });\n  };\n  _proto._maybeCompleteSubscriptionOperationTracking = function _maybeCompleteSubscriptionOperationTracking() {\n    if (!this._isSubscriptionOperation) {\n      return;\n    }\n    if (this._pendingModulePayloadsCount === 0 && this._incrementalPayloadsPending === false) {\n      this._completeOperationTracker();\n    }\n  }\n\n  /**\n   * Processes a ModuleImportPayload, asynchronously resolving the normalization\n   * AST and using it to normalize the field data into a RelayResponsePayload.\n   * The resulting payload may contain other incremental payloads (match,\n   * defer, stream, etc); these are handled by calling\n   * `_processPayloadFollowups()`.\n   */;\n  _proto._processFollowupPayload = function _processFollowupPayload(followupPayload) {\n    var _this10 = this;\n    switch (followupPayload.kind) {\n      case 'ModuleImportPayload':\n        var operationLoader = this._expectOperationLoader();\n        var node = operationLoader.get(followupPayload.operationReference);\n        if (node != null) {\n          // If the operation module is available synchronously, normalize the\n          // data synchronously.\n          this._processFollowupPayloadWithNormalizationNode(followupPayload, getOperation(node));\n        } else {\n          // Otherwise load the operation module and schedule a task to normalize\n          // the data when the module is available.\n          var id = this._nextSubscriptionId++;\n          this._pendingModulePayloadsCount++;\n          var decrementPendingCount = function decrementPendingCount() {\n            _this10._pendingModulePayloadsCount--;\n            _this10._maybeCompleteSubscriptionOperationTracking();\n          };\n\n          // Observable.from(operationLoader.load()) wouldn't catch synchronous\n          // errors thrown by the load function, which is user-defined. Guard\n          // against that with Observable.from(new Promise(<work>)).\n          var networkObservable = RelayObservable.from(new Promise(function (resolve, reject) {\n            operationLoader.load(followupPayload.operationReference).then(resolve, reject);\n          }));\n          RelayObservable.create(function (sink) {\n            var cancellationToken;\n            var subscription = networkObservable.subscribe({\n              next: function next(loadedNode) {\n                if (loadedNode != null) {\n                  var publishModuleImportPayload = function publishModuleImportPayload() {\n                    try {\n                      var operation = getOperation(loadedNode);\n                      var batchAsyncModuleUpdatesFN = RelayFeatureFlags.BATCH_ASYNC_MODULE_UPDATES_FN;\n                      var shouldScheduleAsyncStoreUpdate = batchAsyncModuleUpdatesFN != null && _this10._pendingModulePayloadsCount > 1;\n                      var _withDuration3 = withDuration(function () {\n                          _this10._handleFollowupPayload(followupPayload, operation);\n                          // OK: always have to run after an async module import resolves\n                          if (shouldScheduleAsyncStoreUpdate) {\n                            _this10._scheduleAsyncStoreUpdate(\n                            // $FlowFixMe[incompatible-call] `shouldScheduleAsyncStoreUpdate` check should cover `null` case\n                            batchAsyncModuleUpdatesFN, sink.complete);\n                          } else {\n                            var updatedOwners = _this10._runPublishQueue();\n                            _this10._updateOperationTracker(updatedOwners);\n                          }\n                        }),\n                        duration = _withDuration3[0];\n                      _this10._log({\n                        name: 'execute.async.module',\n                        executeId: _this10._executeId,\n                        operationName: operation.name,\n                        duration: duration\n                      });\n                      if (!shouldScheduleAsyncStoreUpdate) {\n                        sink.complete();\n                      }\n                    } catch (error) {\n                      sink.error(error);\n                    }\n                  };\n                  var scheduler = _this10._scheduler;\n                  if (scheduler == null) {\n                    publishModuleImportPayload();\n                  } else {\n                    cancellationToken = scheduler.schedule(publishModuleImportPayload);\n                  }\n                } else {\n                  sink.complete();\n                }\n              },\n              error: sink.error\n            });\n            return function () {\n              subscription.unsubscribe();\n              if (_this10._scheduler != null && cancellationToken != null) {\n                _this10._scheduler.cancel(cancellationToken);\n              }\n            };\n          }).subscribe({\n            complete: function complete() {\n              _this10._complete(id);\n              decrementPendingCount();\n            },\n            error: function error(_error4) {\n              _this10._error(_error4);\n              decrementPendingCount();\n            },\n            start: function start(subscription) {\n              return _this10._start(id, subscription);\n            }\n          });\n        }\n        break;\n      case 'ActorPayload':\n        this._processFollowupPayloadWithNormalizationNode(followupPayload, followupPayload.node);\n        break;\n      default:\n        followupPayload;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`.', followupPayload.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._processFollowupPayloadWithNormalizationNode = function _processFollowupPayloadWithNormalizationNode(followupPayload, normalizationNode) {\n    this._handleFollowupPayload(followupPayload, normalizationNode);\n    this._maybeCompleteSubscriptionOperationTracking();\n  };\n  _proto._handleFollowupPayload = function _handleFollowupPayload(followupPayload, normalizationNode) {\n    var relayPayload = this._normalizeFollowupPayload(followupPayload, normalizationNode);\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    this._processPayloadFollowups([relayPayload]);\n  }\n\n  /**\n   * The executor now knows that GraphQL responses are expected for a given\n   * label/path:\n   * - Store the placeholder in order to process any future responses that may\n   *   arrive.\n   * - Then process any responses that had already arrived.\n   *\n   * The placeholder contains the normalization selector, path (for nested\n   * defer/stream), and other metadata used to normalize the incremental\n   * response(s).\n   */;\n  _proto._processIncrementalPlaceholder = function _processIncrementalPlaceholder(relayPayload, placeholder) {\n    var _relayPayload$fieldPa;\n    // Update the label => path => placeholder map\n    var label = placeholder.label,\n      path = placeholder.path;\n    var pathKey = path.map(String).join('.');\n    var resultForLabel = this._incrementalResults.get(label);\n    if (resultForLabel == null) {\n      resultForLabel = new Map();\n      this._incrementalResults.set(label, resultForLabel);\n    }\n    var resultForPath = resultForLabel.get(pathKey);\n    var pendingResponses = resultForPath != null && resultForPath.kind === 'response' ? resultForPath.responses : null;\n    resultForLabel.set(pathKey, {\n      kind: 'placeholder',\n      placeholder: placeholder\n    });\n\n    // Store references to the parent node to allow detecting concurrent\n    // modifications to the parent before items arrive and to replay\n    // handle field payloads to account for new information on source records.\n    var parentID;\n    if (placeholder.kind === 'stream') {\n      parentID = placeholder.parentID;\n    } else if (placeholder.kind === 'defer') {\n      parentID = placeholder.selector.dataID;\n    } else {\n      placeholder;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unsupported incremental placeholder kind `%s`.', placeholder.kind) : invariant(false) : void 0;\n    }\n    var parentRecord = relayPayload.source.get(parentID);\n    var parentPayloads = ((_relayPayload$fieldPa = relayPayload.fieldPayloads) !== null && _relayPayload$fieldPa !== void 0 ? _relayPayload$fieldPa : []).filter(function (fieldPayload) {\n      var fieldID = generateClientID(fieldPayload.dataID, fieldPayload.fieldKey);\n      return (\n        // handlers applied to the streamed field itself\n        fieldPayload.dataID === parentID ||\n        // handlers applied to a field on an ancestor object, where\n        // ancestor.field links to the parent record (example: connections)\n        fieldID === parentID\n      );\n    });\n    // If an incremental payload exists for some id that record should also\n    // exist.\n    !(parentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to exist.', parentID) : invariant(false) : void 0;\n    var nextParentRecord;\n    var nextParentPayloads;\n    var previousParentEntry = this._source.get(parentID);\n    if (previousParentEntry != null) {\n      // If a previous entry exists, merge the previous/next records and\n      // payloads together.\n      nextParentRecord = RelayModernRecord.update(previousParentEntry.record, parentRecord);\n      var handlePayloads = new Map();\n      var dedupePayload = function dedupePayload(payload) {\n        var key = stableStringify(payload);\n        handlePayloads.set(key, payload);\n      };\n      previousParentEntry.fieldPayloads.forEach(dedupePayload);\n      parentPayloads.forEach(dedupePayload);\n      nextParentPayloads = Array.from(handlePayloads.values());\n    } else {\n      nextParentRecord = parentRecord;\n      nextParentPayloads = parentPayloads;\n    }\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: nextParentPayloads\n    });\n\n    // If there were any queued responses, process them now that placeholders\n    // are in place\n    if (pendingResponses != null) {\n      var payloadFollowups = this._processIncrementalResponses(pendingResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n  }\n\n  /**\n   * Lookup the placeholder the describes how to process an incremental\n   * response, normalize/publish it, and process any nested defer/match/stream\n   * metadata.\n   */;\n  _proto._processIncrementalResponses = function _processIncrementalResponses(incrementalResponses) {\n    var _this11 = this;\n    var relayPayloads = [];\n    incrementalResponses.forEach(function (incrementalResponse) {\n      var label = incrementalResponse.label,\n        path = incrementalResponse.path,\n        response = incrementalResponse.response;\n      var resultForLabel = _this11._incrementalResults.get(label);\n      if (resultForLabel == null) {\n        resultForLabel = new Map();\n        _this11._incrementalResults.set(label, resultForLabel);\n      }\n      if (label.indexOf('$defer$') !== -1) {\n        var pathKey = path.map(String).join('.');\n        var resultForPath = resultForLabel.get(pathKey);\n        if (resultForPath == null) {\n          resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(pathKey, resultForPath);\n          return;\n        } else if (resultForPath.kind === 'response') {\n          resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var placeholder = resultForPath.placeholder;\n        !(placeholder.kind === 'defer') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @defer, was `@%s`.', pathKey, label, placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processDeferResponse(label, path, placeholder, response));\n      } else {\n        // @stream payload path values end in the field name and item index,\n        // but Relay records paths relative to the parent of the stream node:\n        // therefore we strip the last two elements just to lookup the path\n        // (the item index is used later to insert the element in the list)\n        var _pathKey = path.slice(0, -2).map(String).join('.');\n        var _resultForPath = resultForLabel.get(_pathKey);\n        if (_resultForPath == null) {\n          _resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(_pathKey, _resultForPath);\n          return;\n        } else if (_resultForPath.kind === 'response') {\n          _resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var _placeholder = _resultForPath.placeholder;\n        !(_placeholder.kind === 'stream') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @stream, was `@%s`.', _pathKey, label, _placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processStreamResponse(label, path, _placeholder, response));\n      }\n    });\n    return relayPayloads;\n  };\n  _proto._processDeferResponse = function _processDeferResponse(label, path, placeholder, response) {\n    var _placeholder$actorIde;\n    var parentID = placeholder.selector.dataID;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = (_placeholder$actorIde = placeholder.actorIdentifier) !== null && _placeholder$actorIde !== void 0 ? _placeholder$actorIde : this._actorIdentifier;\n    var relayPayload = normalizeResponse(response, placeholder.selector, placeholder.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: placeholder.path,\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n\n    // Load the version of the parent record from which this incremental data\n    // was derived\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @defer ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var fieldPayloads = parentEntry.fieldPayloads;\n    if (fieldPayloads.length !== 0) {\n      var _response$extensions2;\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: ((_response$extensions2 = response.extensions) === null || _response$extensions2 === void 0 ? void 0 : _response$extensions2.is_final) === true\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  }\n\n  /**\n   * Process the data for one item in a @stream field.\n   */;\n  _proto._processStreamResponse = function _processStreamResponse(label, path, placeholder, response) {\n    var parentID = placeholder.parentID,\n      node = placeholder.node,\n      variables = placeholder.variables,\n      actorIdentifier = placeholder.actorIdentifier;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = actorIdentifier !== null && actorIdentifier !== void 0 ? actorIdentifier : this._actorIdentifier;\n    // Find the LinkedField where @stream was applied\n    var field = node.selections[0];\n    !(field != null && field.kind === 'LinkedField' && field.plural === true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream to be used on a plural field.') : invariant(false) : void 0;\n    var _this$_normalizeStrea = this._normalizeStreamItem(response, parentID, field, variables, path, placeholder.path),\n      fieldPayloads = _this$_normalizeStrea.fieldPayloads,\n      itemID = _this$_normalizeStrea.itemID,\n      itemIndex = _this$_normalizeStrea.itemIndex,\n      prevIDs = _this$_normalizeStrea.prevIDs,\n      relayPayload = _this$_normalizeStrea.relayPayload,\n      storageKey = _this$_normalizeStrea.storageKey;\n    // Publish the new item and update the parent record to set\n    // field[index] = item *if* the parent record hasn't been concurrently\n    // modified.\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload, function (store) {\n      var currentParentRecord = store.get(parentID);\n      if (currentParentRecord == null) {\n        // parent has since been deleted, stream data is stale\n        return;\n      }\n      var currentItems = currentParentRecord.getLinkedRecords(storageKey);\n      if (currentItems == null) {\n        // field has since been deleted, stream data is stale\n        return;\n      }\n      if (currentItems.length !== prevIDs.length || currentItems.some(function (currentItem, index) {\n        return prevIDs[index] !== (currentItem && currentItem.getDataID());\n      })) {\n        // field has been modified by something other than this query,\n        // stream data is stale\n        return;\n      }\n      // parent.field has not been concurrently modified:\n      // update `parent.field[index] = item`\n      var nextItems = (0, _toConsumableArray2[\"default\"])(currentItems);\n      nextItems[itemIndex] = store.get(itemID);\n      currentParentRecord.setLinkedRecords(nextItems, storageKey);\n    });\n\n    // Now that the parent record has been updated to include the new item,\n    // also update any handle fields that are derived from the parent record.\n    if (fieldPayloads.length !== 0) {\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: false\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._normalizeStreamItem = function _normalizeStreamItem(response, parentID, field, variables, path, normalizationPath) {\n    var _field$alias, _field$concreteType, _ref, _this$_getDataID;\n    var data = response.data;\n    !(typeof data === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the GraphQL @stream payload `data` ' + 'value to be an object.') : invariant(false) : void 0;\n    var responseKey = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    var storageKey = getStorageKey(field, variables);\n\n    // Load the version of the parent record from which this incremental data\n    // was derived\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @stream ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var parentRecord = parentEntry.record,\n      fieldPayloads = parentEntry.fieldPayloads;\n\n    // Load the field value (items) that were created by *this* query executor\n    // in order to check if there has been any concurrent modifications by some\n    // other operation.\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(parentRecord, storageKey);\n    !(prevIDs != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to have fetched field ' + '`%s` with @stream.', parentID, field.name) : invariant(false) : void 0;\n\n    // Determine the index in the field of the new item\n    var finalPathEntry = path[path.length - 1];\n    var itemIndex = parseInt(finalPathEntry, 10);\n    !(itemIndex === finalPathEntry && itemIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected path for @stream to end in a ' + 'positive integer index, got `%s`', finalPathEntry) : invariant(false) : void 0;\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : data[TYPENAME_KEY];\n    !(typeof typeName === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream field `%s` to have a ' + '__typename.', field.name) : invariant(false) : void 0;\n\n    // Determine the __id of the new item: this must equal the value that would\n    // be assigned had the item not been streamed\n    var itemID = (_ref = (_this$_getDataID = this._getDataID(data, typeName)) !== null && _this$_getDataID !== void 0 ? _this$_getDataID : prevIDs === null || prevIDs === void 0 ? void 0 : prevIDs[itemIndex]) !== null && _ref !== void 0 ? _ref :\n    // Reuse previously generated client IDs\n    generateClientID(parentID, storageKey, itemIndex);\n    !(typeof itemID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n\n    // Build a selector to normalize the item data with\n    var selector = createNormalizationSelector(field, itemID, variables);\n\n    // Update the cached version of the parent record to reflect the new item:\n    // this is used when subsequent stream payloads arrive to see if there\n    // have been concurrent modifications to the list\n    var nextParentRecord = RelayModernRecord.clone(parentRecord);\n    var nextIDs = (0, _toConsumableArray2[\"default\"])(prevIDs);\n    nextIDs[itemIndex] = itemID;\n    RelayModernRecord.setLinkedRecordIDs(nextParentRecord, storageKey, nextIDs);\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: fieldPayloads\n    });\n    var relayPayload = normalizeResponse(response, selector, typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(normalizationPath), [responseKey, String(itemIndex)]),\n      reactFlightPayloadDeserializer: this._reactFlightPayloadDeserializer != null ? this._deserializeReactFlightPayloadWithLogging : null,\n      reactFlightServerErrorHandler: this._reactFlightServerErrorHandler,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    return {\n      fieldPayloads: fieldPayloads,\n      itemID: itemID,\n      itemIndex: itemIndex,\n      prevIDs: prevIDs,\n      relayPayload: relayPayload,\n      storageKey: storageKey\n    };\n  };\n  _proto._scheduleAsyncStoreUpdate = function _scheduleAsyncStoreUpdate(scheduleFn, completeFn) {\n    var _this12 = this;\n    this._completeFns.push(completeFn);\n    if (this._asyncStoreUpdateDisposable != null) {\n      return;\n    }\n    this._asyncStoreUpdateDisposable = scheduleFn(function () {\n      _this12._asyncStoreUpdateDisposable = null;\n      var updatedOwners = _this12._runPublishQueue();\n      _this12._updateOperationTracker(updatedOwners);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(_this12._completeFns),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var complete = _step2.value;\n          complete();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      _this12._completeFns = [];\n    });\n  };\n  _proto._updateOperationTracker = function _updateOperationTracker(updatedOwners) {\n    if (updatedOwners != null && updatedOwners.length > 0) {\n      this._operationTracker.update(this._operation.request, new Set(updatedOwners));\n    }\n  };\n  _proto._completeOperationTracker = function _completeOperationTracker() {\n    this._operationTracker.complete(this._operation.request);\n  };\n  _proto._getPublishQueueAndSaveActor = function _getPublishQueueAndSaveActor() {\n    this._seenActors.add(this._actorIdentifier);\n    return this._getPublishQueue(this._actorIdentifier);\n  };\n  _proto._getActorsToVisit = function _getActorsToVisit() {\n    if (this._seenActors.size === 0) {\n      return new Set([this._actorIdentifier]);\n    } else {\n      return this._seenActors;\n    }\n  };\n  _proto._runPublishQueue = function _runPublishQueue(operation) {\n    var updatedOwners = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var actorIdentifier = _step3.value;\n        var owners = this._getPublishQueue(actorIdentifier).run(operation);\n        owners.forEach(function (owner) {\n          return updatedOwners.add(owner);\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return Array.from(updatedOwners);\n  };\n  _proto._retainData = function _retainData() {\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var actorIdentifier = _step4.value;\n        if (!this._retainDisposables.has(actorIdentifier)) {\n          this._retainDisposables.set(actorIdentifier, this._getStore(actorIdentifier).retain(this._operation));\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n  _proto._disposeRetainedData = function _disposeRetainedData() {\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(this._retainDisposables.values()),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var disposable = _step5.value;\n        disposable.dispose();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._retainDisposables.clear();\n  };\n  _proto._expectOperationLoader = function _expectOperationLoader() {\n    var operationLoader = this._operationLoader;\n    !operationLoader ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected an operationLoader to be ' + 'configured when using `@match`.') : invariant(false) : void 0;\n    return operationLoader;\n  };\n  return Executor;\n}();\nfunction partitionGraphQLResponses(responses) {\n  var nonIncrementalResponses = [];\n  var incrementalResponses = [];\n  responses.forEach(function (response) {\n    if (response.path != null || response.label != null) {\n      var label = response.label,\n        path = response.path;\n      if (label == null || path == null) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid incremental payload, expected ' + '`path` and `label` to either both be null/undefined, or ' + '`path` to be an `Array<string | number>` and `label` to be a ' + '`string`.') : invariant(false) : void 0;\n      }\n      incrementalResponses.push({\n        label: label,\n        path: path,\n        response: response\n      });\n    } else {\n      nonIncrementalResponses.push(response);\n    }\n  });\n  return [nonIncrementalResponses, incrementalResponses];\n}\nfunction normalizeResponse(response, selector, typeName, options) {\n  var _response$extensions3;\n  var data = response.data,\n    errors = response.errors;\n  var source = RelayRecordSource.create();\n  var record = RelayModernRecord.create(selector.dataID, typeName);\n  source.set(selector.dataID, record);\n  var relayPayload = RelayResponseNormalizer.normalize(source, selector, data, options);\n  return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, relayPayload), {}, {\n    errors: errors,\n    isFinal: ((_response$extensions3 = response.extensions) === null || _response$extensions3 === void 0 ? void 0 : _response$extensions3.is_final) === true\n  });\n}\nfunction stableStringify(value) {\n  var _JSON$stringify;\n  return (_JSON$stringify = JSON.stringify(stableCopy(value))) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : ''; // null-check for flow\n}\n\nfunction validateOptimisticResponsePayload(payload) {\n  var incrementalPlaceholders = payload.incrementalPlaceholders;\n  if (incrementalPlaceholders != null && incrementalPlaceholders.length !== 0) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic responses cannot be returned ' + 'for operations that use incremental data delivery (@defer, ' + '@stream, and @stream_connection).') : invariant(false) : void 0;\n  }\n}\nmodule.exports = {\n  execute: execute\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('./RelayStoreUtils'),\n  getArgumentValues = _require.getArgumentValues;\nvar invariant = require('invariant');\n\n/**\n * Determines the variables that are in scope for a fragment given the variables\n * in scope at the root query as well as any arguments applied at the fragment\n * spread via `@arguments`.\n *\n * Note that this is analagous to determining function arguments given a function call.\n */\nfunction getFragmentVariables(fragment, rootVariables, argumentVariables) {\n  // TODO: Support for legacy ReaderInlineDataFragmentSpread nodes.\n  // Remove this once all we've updated the ReaderInlineDataFragmentSpread\n  // type to indicate that all compiled artifacts have been updated.\n  if (fragment.argumentDefinitions == null) {\n    return argumentVariables;\n  }\n  var variables;\n  fragment.argumentDefinitions.forEach(function (definition) {\n    if (argumentVariables.hasOwnProperty(definition.name)) {\n      return;\n    }\n    variables = variables || (0, _objectSpread2[\"default\"])({}, argumentVariables);\n    switch (definition.kind) {\n      case 'LocalArgument':\n        variables[definition.name] = definition.defaultValue;\n        break;\n      case 'RootArgument':\n        if (!rootVariables.hasOwnProperty(definition.name)) {\n          /*\n           * Global variables passed as values of @arguments are not required to\n           * be declared unless they are used by the callee fragment or a\n           * descendant. In this case, the root variable may not be defined when\n           * resolving the callee's variables. The value is explicitly set to\n           * undefined to conform to the check in\n           * RelayStoreUtils.getStableVariableValue() that variable keys are all\n           * present.\n           */\n          variables[definition.name] = undefined;\n          break;\n        }\n        variables[definition.name] = rootVariables[definition.name];\n        break;\n      default:\n        definition;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayConcreteVariables: Unexpected node kind `%s` in fragment `%s`.', definition.kind, fragment.name) : invariant(false) : void 0;\n    }\n  });\n  return variables || argumentVariables;\n}\n\n/**\n * Determines the variables that are in scope for a given operation given values\n * for some/all of its arguments.\n * - extraneous input variables are filtered from the output\n * - missing variables are set to default values (if given in the\n * operation's definition).\n * - variables with provider modules are added\n */\nfunction getOperationVariables(operation, providedVariables, variables) {\n  var operationVariables = {};\n  operation.argumentDefinitions.forEach(function (def) {\n    var value = def.defaultValue;\n    if (variables[def.name] != null) {\n      value = variables[def.name];\n    }\n    operationVariables[def.name] = value;\n  });\n  if (providedVariables != null) {\n    Object.keys(providedVariables).forEach(function (varName) {\n      operationVariables[varName] = providedVariables[varName].get();\n    });\n  }\n  return operationVariables;\n}\nfunction getLocalVariables(currentVariables, argumentDefinitions, args) {\n  if (argumentDefinitions == null) {\n    return currentVariables;\n  }\n  var nextVariables = (0, _objectSpread2[\"default\"])({}, currentVariables);\n  var nextArgs = args ? getArgumentValues(args, currentVariables) : {};\n  argumentDefinitions.forEach(function (def) {\n    var _nextArgs$def$name;\n    var value = (_nextArgs$def$name = nextArgs[def.name]) !== null && _nextArgs$def$name !== void 0 ? _nextArgs$def$name : def.defaultValue;\n    nextVariables[def.name] = value;\n  });\n  return nextVariables;\n}\nmodule.exports = {\n  getLocalVariables: getLocalVariables,\n  getFragmentVariables: getFragmentVariables,\n  getOperationVariables: getOperationVariables\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayDefaultHandlerProvider = require('../handlers/RelayDefaultHandlerProvider');\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n  assertInternalActorIdentifier = _require.assertInternalActorIdentifier;\nvar RelayObservable = require('../network/RelayObservable');\nvar wrapNetworkWithLogObserver = require('../network/wrapNetworkWithLogObserver');\nvar RelayOperationTracker = require('../store/RelayOperationTracker');\nvar registerEnvironmentWithDevTools = require('../util/registerEnvironmentWithDevTools');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar defaultGetDataID = require('./defaultGetDataID');\nvar defaultRequiredFieldLogger = require('./defaultRequiredFieldLogger');\nvar OperationExecutor = require('./OperationExecutor');\nvar RelayPublishQueue = require('./RelayPublishQueue');\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar RelayModernEnvironment = /*#__PURE__*/function () {\n  function RelayModernEnvironment(config) {\n    var _this = this;\n    var _config$log, _config$requiredField, _config$UNSTABLE_defa, _config$getDataID, _config$missingFieldH, _config$handlerProvid, _config$scheduler, _config$isServer, _config$operationTrac;\n    this.configName = config.configName;\n    this._treatMissingFieldsAsNull = config.treatMissingFieldsAsNull === true;\n    var operationLoader = config.operationLoader;\n    var reactFlightPayloadDeserializer = config.reactFlightPayloadDeserializer;\n    var reactFlightServerErrorHandler = config.reactFlightServerErrorHandler;\n    if (process.env.NODE_ENV !== \"production\") {\n      if (operationLoader != null) {\n        !(typeof operationLoader === 'object' && typeof operationLoader.get === 'function' && typeof operationLoader.load === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `operationLoader` to be an object ' + 'with get() and load() functions, got `%s`.', operationLoader) : invariant(false) : void 0;\n      }\n      if (reactFlightPayloadDeserializer != null) {\n        !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected `reactFlightPayloadDeserializer` ' + ' to be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n      }\n    }\n    this.__log = (_config$log = config.log) !== null && _config$log !== void 0 ? _config$log : emptyFunction;\n    this.requiredFieldLogger = (_config$requiredField = config.requiredFieldLogger) !== null && _config$requiredField !== void 0 ? _config$requiredField : defaultRequiredFieldLogger;\n    this._defaultRenderPolicy = ((_config$UNSTABLE_defa = config.UNSTABLE_defaultRenderPolicy) !== null && _config$UNSTABLE_defa !== void 0 ? _config$UNSTABLE_defa : RelayFeatureFlags.ENABLE_PARTIAL_RENDERING_DEFAULT === true) ? 'partial' : 'full';\n    this._operationLoader = operationLoader;\n    this._operationExecutions = new Map();\n    this._network = wrapNetworkWithLogObserver(this, config.network);\n    this._getDataID = (_config$getDataID = config.getDataID) !== null && _config$getDataID !== void 0 ? _config$getDataID : defaultGetDataID;\n    this._missingFieldHandlers = (_config$missingFieldH = config.missingFieldHandlers) !== null && _config$missingFieldH !== void 0 ? _config$missingFieldH : [];\n    this._publishQueue = new RelayPublishQueue(config.store, (_config$handlerProvid = config.handlerProvider) !== null && _config$handlerProvid !== void 0 ? _config$handlerProvid : RelayDefaultHandlerProvider, this._getDataID, this._missingFieldHandlers);\n    this._scheduler = (_config$scheduler = config.scheduler) !== null && _config$scheduler !== void 0 ? _config$scheduler : null;\n    this._store = config.store;\n    this.options = config.options;\n    this._isServer = (_config$isServer = config.isServer) !== null && _config$isServer !== void 0 ? _config$isServer : false;\n    this.__setNet = function (newNet) {\n      return _this._network = wrapNetworkWithLogObserver(_this, newNet);\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      var _require2 = require('./StoreInspector'),\n        inspect = _require2.inspect;\n      this.DEBUG_inspect = function (dataID) {\n        return inspect(_this, dataID);\n      };\n    }\n    this._operationTracker = (_config$operationTrac = config.operationTracker) !== null && _config$operationTrac !== void 0 ? _config$operationTrac : new RelayOperationTracker();\n    this._reactFlightPayloadDeserializer = reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = config.shouldProcessClientComponents;\n\n    // Register this Relay Environment with Relay DevTools if it exists.\n    // Note: this must always be the last step in the constructor.\n    registerEnvironmentWithDevTools(this);\n  }\n  var _proto = RelayModernEnvironment.prototype;\n  _proto.getStore = function getStore() {\n    return this._store;\n  };\n  _proto.getNetwork = function getNetwork() {\n    return this._network;\n  };\n  _proto.getOperationTracker = function getOperationTracker() {\n    return this._operationTracker;\n  };\n  _proto.getScheduler = function getScheduler() {\n    return this._scheduler;\n  };\n  _proto.isRequestActive = function isRequestActive(requestIdentifier) {\n    var activeState = this._operationExecutions.get(requestIdentifier);\n    return activeState === 'active';\n  };\n  _proto.UNSTABLE_getDefaultRenderPolicy = function UNSTABLE_getDefaultRenderPolicy() {\n    return this._defaultRenderPolicy;\n  };\n  _proto.applyUpdate = function applyUpdate(optimisticUpdate) {\n    var _this2 = this;\n    var dispose = function dispose() {\n      _this2._scheduleUpdates(function () {\n        _this2._publishQueue.revertUpdate(optimisticUpdate);\n        _this2._publishQueue.run();\n      });\n    };\n    this._scheduleUpdates(function () {\n      _this2._publishQueue.applyUpdate(optimisticUpdate);\n      _this2._publishQueue.run();\n    });\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.revertUpdate = function revertUpdate(update) {\n    var _this3 = this;\n    this._scheduleUpdates(function () {\n      _this3._publishQueue.revertUpdate(update);\n      _this3._publishQueue.run();\n    });\n  };\n  _proto.replaceUpdate = function replaceUpdate(update, newUpdate) {\n    var _this4 = this;\n    this._scheduleUpdates(function () {\n      _this4._publishQueue.revertUpdate(update);\n      _this4._publishQueue.applyUpdate(newUpdate);\n      _this4._publishQueue.run();\n    });\n  };\n  _proto.applyMutation = function applyMutation(optimisticConfig) {\n    var subscription = this._execute({\n      createSource: function createSource() {\n        return RelayObservable.create(function (_sink) {});\n      },\n      isClientPayload: false,\n      operation: optimisticConfig.operation,\n      optimisticConfig: optimisticConfig,\n      updater: null\n    }).subscribe({});\n    return {\n      dispose: function dispose() {\n        return subscription.unsubscribe();\n      }\n    };\n  };\n  _proto.check = function check(operation) {\n    if (this._missingFieldHandlers.length === 0 && !operationHasClientAbstractTypes(operation)) {\n      return this._store.check(operation);\n    }\n    return this._checkSelectorAndHandleMissingFields(operation, this._missingFieldHandlers);\n  };\n  _proto.commitPayload = function commitPayload(operation, payload) {\n    this._execute({\n      createSource: function createSource() {\n        return RelayObservable.from({\n          data: payload\n        });\n      },\n      isClientPayload: true,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    }).subscribe({});\n  };\n  _proto.commitUpdate = function commitUpdate(updater) {\n    var _this5 = this;\n    this._scheduleUpdates(function () {\n      _this5._publishQueue.commitUpdate(updater);\n      _this5._publishQueue.run();\n    });\n  };\n  _proto.lookup = function lookup(readSelector) {\n    return this._store.lookup(readSelector);\n  };\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._store.subscribe(snapshot, callback);\n  };\n  _proto.retain = function retain(operation) {\n    return this._store.retain(operation);\n  };\n  _proto.isServer = function isServer() {\n    return this._isServer;\n  };\n  _proto._checkSelectorAndHandleMissingFields = function _checkSelectorAndHandleMissingFields(operation, handlers) {\n    var _this6 = this;\n    var target = RelayRecordSource.create();\n    var source = this._store.getSource();\n    var result = this._store.check(operation, {\n      handlers: handlers,\n      defaultActorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n      getSourceForActor: function getSourceForActor(actorIdentifier) {\n        assertInternalActorIdentifier(actorIdentifier);\n        return source;\n      },\n      getTargetForActor: function getTargetForActor(actorIdentifier) {\n        assertInternalActorIdentifier(actorIdentifier);\n        return target;\n      }\n    });\n    if (target.size() > 0) {\n      this._scheduleUpdates(function () {\n        _this6._publishQueue.commitSource(target);\n        _this6._publishQueue.run();\n      });\n    }\n    return result;\n  };\n  _proto._scheduleUpdates = function _scheduleUpdates(task) {\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      scheduler.schedule(task);\n    } else {\n      task();\n    }\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */;\n  _proto.execute = function execute(_ref) {\n    var _this7 = this;\n    var operation = _ref.operation;\n    return this._execute({\n      createSource: function createSource() {\n        return _this7.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Subscription operation, each result of which is then\n   * normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to: environment.execute({...}).subscribe({...}).\n   */;\n  _proto.executeSubscription = function executeSubscription(_ref2) {\n    var _this8 = this;\n    var operation = _ref2.operation,\n      updater = _ref2.updater;\n    return this._execute({\n      createSource: function createSource() {\n        return _this8.getNetwork().execute(operation.request.node.params, operation.request.variables, operation.request.cacheConfig || {}, null);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: updater\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Mutation operation, the result of which is then normalized and\n   * committed to the publish queue along with an optional optimistic response\n   * or updater.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeMutation({...}).subscribe({...}).\n   */;\n  _proto.executeMutation = function executeMutation(_ref3) {\n    var _this9 = this;\n    var operation = _ref3.operation,\n      optimisticResponse = _ref3.optimisticResponse,\n      optimisticUpdater = _ref3.optimisticUpdater,\n      updater = _ref3.updater,\n      uploadables = _ref3.uploadables;\n    var optimisticConfig;\n    if (optimisticResponse || optimisticUpdater) {\n      optimisticConfig = {\n        operation: operation,\n        response: optimisticResponse,\n        updater: optimisticUpdater\n      };\n    }\n    return this._execute({\n      createSource: function createSource() {\n        return _this9.getNetwork().execute(operation.request.node.params, operation.request.variables, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, operation.request.cacheConfig), {}, {\n          force: true\n        }), uploadables);\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: optimisticConfig,\n      updater: updater\n    });\n  }\n\n  /**\n   * Returns an Observable of GraphQLResponse resulting from executing the\n   * provided Query or Subscription operation responses, the result of which is\n   * then normalized and committed to the publish queue.\n   *\n   * Note: Observables are lazy, so calling this method will do nothing until\n   * the result is subscribed to:\n   * environment.executeWithSource({...}).subscribe({...}).\n   */;\n  _proto.executeWithSource = function executeWithSource(_ref4) {\n    var operation = _ref4.operation,\n      source = _ref4.source;\n    return this._execute({\n      createSource: function createSource() {\n        return source;\n      },\n      isClientPayload: false,\n      operation: operation,\n      optimisticConfig: null,\n      updater: null\n    });\n  };\n  _proto.toJSON = function toJSON() {\n    var _this$configName;\n    return \"RelayModernEnvironment(\".concat((_this$configName = this.configName) !== null && _this$configName !== void 0 ? _this$configName : '', \")\");\n  };\n  _proto._execute = function _execute(_ref5) {\n    var _this10 = this;\n    var createSource = _ref5.createSource,\n      isClientPayload = _ref5.isClientPayload,\n      operation = _ref5.operation,\n      optimisticConfig = _ref5.optimisticConfig,\n      updater = _ref5.updater;\n    var publishQueue = this._publishQueue;\n    var store = this._store;\n    return RelayObservable.create(function (sink) {\n      var executor = OperationExecutor.execute({\n        actorIdentifier: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n        getDataID: _this10._getDataID,\n        isClientPayload: isClientPayload,\n        log: _this10.__log,\n        operation: operation,\n        operationExecutions: _this10._operationExecutions,\n        operationLoader: _this10._operationLoader,\n        operationTracker: _this10._operationTracker,\n        optimisticConfig: optimisticConfig,\n        getPublishQueue: function getPublishQueue(actorIdentifier) {\n          assertInternalActorIdentifier(actorIdentifier);\n          return publishQueue;\n        },\n        reactFlightPayloadDeserializer: _this10._reactFlightPayloadDeserializer,\n        reactFlightServerErrorHandler: _this10._reactFlightServerErrorHandler,\n        scheduler: _this10._scheduler,\n        shouldProcessClientComponents: _this10._shouldProcessClientComponents,\n        sink: sink,\n        // NOTE: Some product tests expect `Network.execute` to be called only\n        //       when the Observable is executed.\n        source: createSource(),\n        getStore: function getStore(actorIdentifier) {\n          assertInternalActorIdentifier(actorIdentifier);\n          return store;\n        },\n        treatMissingFieldsAsNull: _this10._treatMissingFieldsAsNull,\n        updater: updater\n      });\n      return function () {\n        return executor.cancel();\n      };\n    });\n  };\n  return RelayModernEnvironment;\n}();\nfunction operationHasClientAbstractTypes(operation) {\n  return operation.root.node.kind === 'Operation' && operation.root.node.clientAbstractTypes != null;\n}\n\n// Add a sigil for detection by `isRelayModernEnvironment()` to avoid a\n// realm-specific instanceof check, and to aid in module tree-shaking to\n// avoid requiring all of RelayRuntime just to detect its environment.\nRelayModernEnvironment.prototype['@@RelayModernEnvironment'] = true;\nfunction emptyFunction() {}\nmodule.exports = RelayModernEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar getPendingOperationsForFragment = require('../util/getPendingOperationsForFragment');\nvar handlePotentialSnapshotErrors = require('../util/handlePotentialSnapshotErrors');\nvar isScalarAndEqual = require('../util/isScalarAndEqual');\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require = require('./RelayModernOperationDescriptor'),\n  createRequestDescriptor = _require.createRequestDescriptor;\nvar _require2 = require('./RelayModernSelector'),\n  areEqualSelectors = _require2.areEqualSelectors,\n  createReaderSelector = _require2.createReaderSelector,\n  getSelectorsFromObject = _require2.getSelectorsFromObject;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * A utility for resolving and subscribing to the results of a fragment spec\n * (key -> fragment mapping) given some \"props\" that determine the root ID\n * and variables to use when reading each fragment. When props are changed via\n * `setProps()`, the resolver will update its results and subscriptions\n * accordingly. Internally, the resolver:\n * - Converts the fragment map & props map into a map of `Selector`s.\n * - Removes any resolvers for any props that became null.\n * - Creates resolvers for any props that became non-null.\n * - Updates resolvers with the latest props.\n *\n * This utility is implemented as an imperative, stateful API for performance\n * reasons: reusing previous resolvers, callback functions, and subscriptions\n * all helps to reduce object allocation and thereby decrease GC time.\n *\n * The `resolve()` function is also lazy and memoized: changes in the store mark\n * the resolver as stale and notify the caller, and the actual results are\n * recomputed the first time `resolve()` is called.\n */\nvar RelayModernFragmentSpecResolver = /*#__PURE__*/function () {\n  function RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer) {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function () {\n      _this._stale = true;\n      if (typeof _this._callback === 'function') {\n        _this._callback();\n      }\n    });\n    this._callback = callback;\n    this._context = context;\n    this._data = {};\n    this._fragments = fragments;\n    this._props = {};\n    this._resolvers = {};\n    this._stale = false;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this.setProps(props);\n  }\n  var _proto = RelayModernFragmentSpecResolver.prototype;\n  _proto.dispose = function dispose() {\n    for (var key in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(key)) {\n        disposeCallback(this._resolvers[key]);\n      }\n    }\n  };\n  _proto.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the object multiple times, which could occur if data for\n      // multiple keys changes in the same event loop.\n      var prevData = this._data;\n      var nextData;\n      for (var key in this._resolvers) {\n        if (this._resolvers.hasOwnProperty(key)) {\n          var resolver = this._resolvers[key];\n          var prevItem = prevData[key];\n          if (resolver) {\n            var nextItem = resolver.resolve();\n            if (nextData || nextItem !== prevItem) {\n              nextData = nextData || (0, _objectSpread2[\"default\"])({}, prevData);\n              nextData[key] = nextItem;\n            }\n          } else {\n            var prop = this._props[key];\n            var _nextItem = prop !== undefined ? prop : null;\n            if (nextData || !isScalarAndEqual(_nextItem, prevItem)) {\n              nextData = nextData || (0, _objectSpread2[\"default\"])({}, prevData);\n              nextData[key] = _nextItem;\n            }\n          }\n        }\n      }\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n    return this._data;\n  };\n  _proto.setCallback = function setCallback(props, callback) {\n    this._callback = callback;\n    if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n      this.setProps(props);\n    }\n  };\n  _proto.setProps = function setProps(props) {\n    this._props = {};\n    var ownedSelectors = getSelectorsFromObject(this._fragments, props);\n    for (var key in ownedSelectors) {\n      if (ownedSelectors.hasOwnProperty(key)) {\n        var ownedSelector = ownedSelectors[key];\n        var resolver = this._resolvers[key];\n        if (ownedSelector == null) {\n          if (resolver != null) {\n            resolver.dispose();\n          }\n          resolver = null;\n        } else if (ownedSelector.kind === 'PluralReaderSelector') {\n          if (resolver == null) {\n            resolver = new SelectorListResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, this._callback != null, this._onChange);\n          } else {\n            !(resolver instanceof SelectorListResolver) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an array.', key) : invariant(false) : void 0;\n            resolver.setSelector(ownedSelector);\n          }\n        } else {\n          if (resolver == null) {\n            resolver = new SelectorResolver(this._context.environment, this._rootIsQueryRenderer, ownedSelector, this._callback != null, this._onChange);\n          } else {\n            !(resolver instanceof SelectorResolver) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected prop `%s` to always be an object.', key) : invariant(false) : void 0;\n            resolver.setSelector(ownedSelector);\n          }\n        }\n        this._props[key] = props[key];\n        this._resolvers[key] = resolver;\n      }\n    }\n    this._stale = true;\n  };\n  _proto.setVariables = function setVariables(variables, request) {\n    for (var key in this._resolvers) {\n      if (this._resolvers.hasOwnProperty(key)) {\n        var resolver = this._resolvers[key];\n        if (resolver) {\n          resolver.setVariables(variables, request);\n        }\n      }\n    }\n    this._stale = true;\n  };\n  return RelayModernFragmentSpecResolver;\n}();\n/**\n * A resolver for a single Selector.\n */\nvar SelectorResolver = /*#__PURE__*/function () {\n  function SelectorResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {\n    var _this2 = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function (snapshot) {\n      _this2._data = snapshot.data;\n      _this2._isMissingData = snapshot.isMissingData;\n      _this2._missingRequiredFields = snapshot.missingRequiredFields;\n      _this2._relayResolverErrors = snapshot.relayResolverErrors;\n      _this2._callback();\n    });\n    var _snapshot = environment.lookup(selector);\n    this._callback = callback;\n    this._data = _snapshot.data;\n    this._isMissingData = _snapshot.isMissingData;\n    this._missingRequiredFields = _snapshot.missingRequiredFields;\n    this._relayResolverErrors = _snapshot.relayResolverErrors;\n    this._environment = environment;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this._selector = selector;\n    if (RelayFeatureFlags.ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT === true) {\n      if (subscribeOnConstruction) {\n        this._subscription = environment.subscribe(_snapshot, this._onChange);\n      }\n    } else {\n      this._subscription = environment.subscribe(_snapshot, this._onChange);\n    }\n  }\n  var _proto2 = SelectorResolver.prototype;\n  _proto2.dispose = function dispose() {\n    if (this._subscription) {\n      this._subscription.dispose();\n      this._subscription = null;\n    }\n  };\n  _proto2.resolve = function resolve() {\n    if (this._isMissingData === true) {\n      // NOTE: This branch exists to handle the case in which:\n      // - A RelayModern container is rendered as a descendant of a Relay Hook\n      //   root using a \"partial\" renderPolicy (this means that eargerly\n      //   reading any cached data that is available instead of blocking\n      //   at the root until the whole query is fetched).\n      // - A parent Relay Hook didnt' suspend earlier on data being fetched,\n      //   either because the fragment data for the parent was available, or\n      //   the parent fragment didn't have any data dependencies.\n      // Even though our Flow types reflect the possiblity of null data, there\n      // might still be cases where it's not handled at runtime becuase the\n      // Flow types are being ignored, or simply not being used (for example,\n      // the case reported here: https://fburl.com/srnbucf8, was due to\n      // misuse of Flow types here: https://fburl.com/g3m0mqqh).\n      // Additionally, even though the null data might be handled without a\n      // runtime error, we might not suspend when we intended to if a parent\n      // Relay Hook (e.g. that is using @defer) decided not to suspend becuase\n      // it's immediate data was already available (even if it was deferred),\n      // or it didn't actually need any data (was just spreading other fragments).\n      // This should eventually go away with something like @optional, where we only\n      // suspend at specific boundaries depending on whether the boundary\n      // can be fulfilled or not.\n      var pendingOperationsResult = getPendingOperationsForFragment(this._environment, this._selector.node, this._selector.owner);\n      var promise = pendingOperationsResult === null || pendingOperationsResult === void 0 ? void 0 : pendingOperationsResult.promise;\n      if (promise != null) {\n        if (this._rootIsQueryRenderer) {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Relay Container for fragment `%s` has missing data and ' + 'would suspend. When using features such as @defer or @module, ' + 'use `useFragment` instead of a Relay Container.', this._selector.node.name) : void 0;\n        } else {\n          var _pendingOperationsRes;\n          var pendingOperations = (_pendingOperationsRes = pendingOperationsResult === null || pendingOperationsResult === void 0 ? void 0 : pendingOperationsResult.pendingOperations) !== null && _pendingOperationsRes !== void 0 ? _pendingOperationsRes : [];\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'Relay: Relay Container for fragment `%s` suspended. When using ' + 'features such as @defer or @module, use `useFragment` instead ' + 'of a Relay Container.', this._selector.node.name) : void 0;\n          this._environment.__log({\n            name: 'suspense.fragment',\n            data: this._data,\n            fragment: this._selector.node,\n            isRelayHooks: false,\n            isMissingData: this._isMissingData,\n            isPromiseCached: false,\n            pendingOperations: pendingOperations\n          });\n          throw promise;\n        }\n      }\n    }\n    handlePotentialSnapshotErrors(this._environment, this._missingRequiredFields, this._relayResolverErrors);\n    return this._data;\n  };\n  _proto2.setSelector = function setSelector(selector) {\n    if (this._subscription != null && areEqualSelectors(selector, this._selector)) {\n      return;\n    }\n    this.dispose();\n    var snapshot = this._environment.lookup(selector);\n    this._data = recycleNodesInto(this._data, snapshot.data);\n    this._isMissingData = snapshot.isMissingData;\n    this._missingRequiredFields = snapshot.missingRequiredFields;\n    this._relayResolverErrors = snapshot.relayResolverErrors;\n    this._selector = selector;\n    this._subscription = this._environment.subscribe(snapshot, this._onChange);\n  };\n  _proto2.setVariables = function setVariables(variables, request) {\n    if (areEqual(variables, this._selector.variables)) {\n      // If we're not actually setting new variables, we don't actually want\n      // to create a new fragment owner, since areEqualSelectors relies on\n      // owner identity.\n      // In fact, we don't even need to try to attempt to set a new selector.\n      // When fragment ownership is not enabled, setSelector will also bail\n      // out since the selector doesn't really change, so we're doing it here\n      // earlier.\n      return;\n    }\n    // NOTE: We manually create the request descriptor here instead of\n    // calling createOperationDescriptor() because we want to set a\n    // descriptor with *unaltered* variables as the fragment owner.\n    // This is a hack that allows us to preserve existing (broken)\n    // behavior of RelayModern containers while using fragment ownership\n    // to propagate variables instead of Context.\n    // For more details, see the summary of D13999308\n    var requestDescriptor = createRequestDescriptor(request, variables);\n    var selector = createReaderSelector(this._selector.node, this._selector.dataID, variables, requestDescriptor);\n    this.setSelector(selector);\n  };\n  return SelectorResolver;\n}();\n/**\n * A resolver for an array of Selectors.\n */\nvar SelectorListResolver = /*#__PURE__*/function () {\n  function SelectorListResolver(environment, rootIsQueryRenderer, selector, subscribeOnConstruction, callback) {\n    var _this3 = this;\n    (0, _defineProperty2[\"default\"])(this, \"_onChange\", function (data) {\n      _this3._stale = true;\n      _this3._callback();\n    });\n    this._callback = callback;\n    this._data = [];\n    this._environment = environment;\n    this._resolvers = [];\n    this._stale = true;\n    this._rootIsQueryRenderer = rootIsQueryRenderer;\n    this._subscribeOnConstruction = subscribeOnConstruction;\n    this.setSelector(selector);\n  }\n  var _proto3 = SelectorListResolver.prototype;\n  _proto3.dispose = function dispose() {\n    this._resolvers.forEach(disposeCallback);\n  };\n  _proto3.resolve = function resolve() {\n    if (this._stale) {\n      // Avoid mapping the array multiple times, which could occur if data for\n      // multiple indices changes in the same event loop.\n      var prevData = this._data;\n      var nextData;\n      for (var ii = 0; ii < this._resolvers.length; ii++) {\n        var prevItem = prevData[ii];\n        var nextItem = this._resolvers[ii].resolve();\n        if (nextData || nextItem !== prevItem) {\n          nextData = nextData || prevData.slice(0, ii);\n          nextData.push(nextItem);\n        }\n      }\n      if (!nextData && this._resolvers.length !== prevData.length) {\n        nextData = prevData.slice(0, this._resolvers.length);\n      }\n      this._data = nextData || prevData;\n      this._stale = false;\n    }\n    return this._data;\n  };\n  _proto3.setSelector = function setSelector(selector) {\n    var selectors = selector.selectors;\n    while (this._resolvers.length > selectors.length) {\n      var resolver = this._resolvers.pop();\n      resolver.dispose();\n    }\n    for (var ii = 0; ii < selectors.length; ii++) {\n      if (ii < this._resolvers.length) {\n        this._resolvers[ii].setSelector(selectors[ii]);\n      } else {\n        this._resolvers[ii] = new SelectorResolver(this._environment, this._rootIsQueryRenderer, selectors[ii], this._subscribeOnConstruction, this._onChange);\n      }\n    }\n    this._stale = true;\n  };\n  _proto3.setVariables = function setVariables(variables, request) {\n    this._resolvers.forEach(function (resolver) {\n      return resolver.setVariables(variables, request);\n    });\n    this._stale = true;\n  };\n  return SelectorListResolver;\n}();\nfunction disposeCallback(disposable) {\n  disposable && disposable.dispose();\n}\nmodule.exports = RelayModernFragmentSpecResolver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar deepFreeze = require('../util/deepFreeze');\nvar getRequestIdentifier = require('../util/getRequestIdentifier');\nvar _require = require('./RelayConcreteVariables'),\n  getOperationVariables = _require.getOperationVariables;\nvar _require2 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require2.createNormalizationSelector,\n  createReaderSelector = _require2.createReaderSelector;\nvar _require3 = require('./RelayStoreUtils'),\n  ROOT_ID = _require3.ROOT_ID;\n\n/**\n * Creates an instance of the `OperationDescriptor` type defined in\n * `RelayStoreTypes` given an operation and some variables. The input variables\n * are filtered to exclude variables that do not match defined arguments on the\n * operation, and default values are populated for null values.\n */\nfunction createOperationDescriptor(request, variables, cacheConfig) {\n  var dataID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ROOT_ID;\n  var operation = request.operation;\n  var operationVariables = getOperationVariables(operation, request.params.providedVariables, variables);\n  var requestDescriptor = createRequestDescriptor(request, operationVariables, cacheConfig);\n  var operationDescriptor = {\n    fragment: createReaderSelector(request.fragment, dataID, operationVariables, requestDescriptor),\n    request: requestDescriptor,\n    root: createNormalizationSelector(operation, dataID, operationVariables)\n  };\n  if (process.env.NODE_ENV !== \"production\") {\n    // Freezing properties short-circuits a deepFreeze of snapshots that contain\n    // an OperationDescriptor via their selector's owner, avoiding stack\n    // overflow on larger queries.\n    Object.freeze(operationDescriptor.fragment);\n    Object.freeze(operationDescriptor.root);\n    Object.freeze(operationDescriptor);\n  }\n  return operationDescriptor;\n}\nfunction createRequestDescriptor(request, variables, cacheConfig) {\n  var requestDescriptor = {\n    identifier: getRequestIdentifier(request.params, variables),\n    node: request,\n    variables: variables,\n    cacheConfig: cacheConfig\n  };\n  if (process.env.NODE_ENV !== \"production\") {\n    deepFreeze(variables);\n    Object.freeze(request);\n    Object.freeze(requestDescriptor);\n  }\n  return requestDescriptor;\n}\nmodule.exports = {\n  createOperationDescriptor: createOperationDescriptor,\n  createRequestDescriptor: createRequestDescriptor\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar deepFreeze = require('../util/deepFreeze');\nvar _require = require('./ClientID'),\n  generateClientObjectClientID = _require.generateClientObjectClientID,\n  isClientID = _require.isClientID;\nvar _require2 = require('./experimental-live-resolvers/LiveResolverSuspenseSentinel'),\n  isSuspenseSentinel = _require2.isSuspenseSentinel;\nvar _require3 = require('./RelayStoreUtils'),\n  ACTOR_IDENTIFIER_KEY = _require3.ACTOR_IDENTIFIER_KEY,\n  ID_KEY = _require3.ID_KEY,\n  INVALIDATED_AT_KEY = _require3.INVALIDATED_AT_KEY,\n  REF_KEY = _require3.REF_KEY,\n  REFS_KEY = _require3.REFS_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  ROOT_ID = _require3.ROOT_ID,\n  TYPENAME_KEY = _require3.TYPENAME_KEY;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * @public\n *\n * Low-level record manipulation methods.\n *\n * A note about perf: we use long-hand property access rather than computed\n * properties in this file for speed ie.\n *\n *    const object = {};\n *    object[KEY] = value;\n *    record[storageKey] = object;\n *\n * instead of:\n *\n *    record[storageKey] = {\n *      [KEY]: value,\n *    };\n *\n * The latter gets transformed by Babel into something like:\n *\n *    function _defineProperty(obj, key, value) {\n *      if (key in obj) {\n *        Object.defineProperty(obj, key, {\n *          value: value,\n *          enumerable: true,\n *          configurable: true,\n *          writable: true,\n *        });\n *      } else {\n *        obj[key] = value;\n *      }\n *      return obj;\n *    }\n *\n *    record[storageKey] = _defineProperty({}, KEY, value);\n *\n * A quick benchmark shows that computed property access is an order of\n * magnitude slower (times in seconds for 100,000 iterations):\n *\n *               best     avg     sd\n *    computed 0.02175 0.02292 0.00113\n *      manual 0.00110 0.00123 0.00008\n */\n\n/**\n * @public\n *\n * Clone a record.\n */\nfunction clone(record) {\n  return (0, _objectSpread2[\"default\"])({}, record);\n}\n\n/**\n * @public\n *\n * Copies all fields from `source` to `sink`, excluding `__id` and `__typename`.\n *\n * NOTE: This function does not treat `id` specially. To preserve the id,\n * manually reset it after calling this function. Also note that values are\n * copied by reference and not value; callers should ensure that values are\n * copied on write.\n */\nfunction copyFields(source, sink) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      if (key !== ID_KEY && key !== TYPENAME_KEY) {\n        sink[key] = source[key];\n      }\n    }\n  }\n}\n\n/**\n * @public\n *\n * Create a new record.\n */\nfunction create(dataID, typeName) {\n  // See perf note above for why we aren't using computed property access.\n  var record = {};\n  record[ID_KEY] = dataID;\n  record[TYPENAME_KEY] = typeName;\n  return record;\n}\n\n/**\n * @public\n *\n * Get the record's `id` if available or the client-generated identifier.\n */\nfunction getDataID(record) {\n  return record[ID_KEY];\n}\n\n/**\n * @public\n *\n * Get the concrete type of the record.\n */\nfunction getType(record) {\n  return record[TYPENAME_KEY];\n}\n\n/**\n * @public\n *\n * Get a scalar (non-link) field value.\n */\nfunction getValue(record, storageKey) {\n  var value = record[storageKey];\n  if (value && typeof value === 'object') {\n    !(!value.hasOwnProperty(REF_KEY) && !value.hasOwnProperty(REFS_KEY)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getValue(): Expected a scalar (non-link) value for `%s.%s` ' + 'but found %s.', record[ID_KEY], storageKey, value.hasOwnProperty(REF_KEY) ? 'a linked record' : 'plural linked records') : invariant(false) : void 0;\n  }\n  return value;\n}\n\n/**\n * @public\n *\n * Get the value of a field as a reference to another record. Throws if the\n * field has a different type.\n */\nfunction getLinkedRecordID(record, storageKey) {\n  var maybeLink = record[storageKey];\n  if (maybeLink == null) {\n    return maybeLink;\n  }\n  // We reassign here so that the JSON.stringify call in invariant does not invalidate the\n  // non-maybe refinement from above.\n  var link = maybeLink;\n  !(typeof link === 'object' && link && typeof link[REF_KEY] === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordID(): Expected `%s.%s` to be a linked ID, ' + 'was `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(link), typeof link === 'object' && link[REFS_KEY] !== undefined ? ' It appears to be a plural linked record: did you mean to call ' + 'getLinkedRecords() instead of getLinkedRecord()?' : '') : invariant(false) : void 0;\n  // $FlowFixMe[incompatible-return]\n  return link[REF_KEY];\n}\n\n/**\n * @public\n *\n * Get the value of a field as a list of references to other records. Throws if\n * the field has a different type.\n */\nfunction getLinkedRecordIDs(record, storageKey) {\n  var links = record[storageKey];\n  if (links == null) {\n    return links;\n  }\n  !(typeof links === 'object' && Array.isArray(links[REFS_KEY])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordIDs(): Expected `%s.%s` to contain an array ' + 'of linked IDs, got `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(links), typeof links === 'object' && links[REF_KEY] !== undefined ? ' It appears to be a singular linked record: did you mean to call ' + 'getLinkedRecord() instead of getLinkedRecords()?' : '') : invariant(false) : void 0;\n  // assume items of the array are ids\n  return links[REFS_KEY];\n}\n\n/**\n * @public\n *\n * Returns the epoch at which the record was invalidated, if it\n * ever was; otherwise returns null;\n */\nfunction getInvalidationEpoch(record) {\n  if (record == null) {\n    return null;\n  }\n  var invalidatedAt = record[INVALIDATED_AT_KEY];\n  if (typeof invalidatedAt !== 'number') {\n    // If the record has never been invalidated, it isn't stale.\n    return null;\n  }\n  return invalidatedAt;\n}\n\n/**\n * @public\n *\n * Compares the fields of a previous and new record, returning either the\n * previous record if all fields are equal or a new record (with merged fields)\n * if any fields have changed.\n */\nfunction update(prevRecord, nextRecord) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType, _getType2;\n    var prevID = getDataID(prevRecord);\n    var nextID = getDataID(nextRecord);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    // note: coalesce null/undefined to null\n    var prevType = (_getType = getType(prevRecord)) !== null && _getType !== void 0 ? _getType : null;\n    var nextType = (_getType2 = getType(nextRecord)) !== null && _getType2 !== void 0 ? _getType2 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  var updated = null;\n  var keys = Object.keys(nextRecord);\n  for (var ii = 0; ii < keys.length; ii++) {\n    var key = keys[ii];\n    if (updated || !areEqual(prevRecord[key], nextRecord[key])) {\n      updated = updated !== null ? updated : (0, _objectSpread2[\"default\"])({}, prevRecord);\n      updated[key] = nextRecord[key];\n    }\n  }\n  return updated !== null ? updated : prevRecord;\n}\n\n/**\n * @public\n *\n * Returns a new record with the contents of the given records. Fields in the\n * second record will overwrite identical fields in the first record.\n */\nfunction merge(record1, record2) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType3, _getType4;\n    var prevID = getDataID(record1);\n    var nextID = getDataID(record2);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    // note: coalesce null/undefined to null\n    var prevType = (_getType3 = getType(record1)) !== null && _getType3 !== void 0 ? _getType3 : null;\n    var nextType = (_getType4 = getType(record2)) !== null && _getType4 !== void 0 ? _getType4 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, record1), record2);\n}\n\n/**\n * @public\n *\n * Prevent modifications to the record. Attempts to call `set*` functions on a\n * frozen record will fatal at runtime.\n */\nfunction freeze(record) {\n  deepFreeze(record);\n}\n\n/**\n * @public\n *\n * Set the value of a storageKey to a scalar.\n */\nfunction setValue(record, storageKey, value) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var prevID = getDataID(record);\n    if (storageKey === ID_KEY) {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === value, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, value) : void 0;\n    } else if (storageKey === TYPENAME_KEY) {\n      var _getType5;\n      // note: coalesce null/undefined to null\n      var prevType = (_getType5 = getType(record)) !== null && _getType5 !== void 0 ? _getType5 : null;\n      var nextType = value !== null && value !== void 0 ? value : null;\n      process.env.NODE_ENV !== \"production\" ? warning(isClientID(getDataID(record)) && getDataID(record) !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n    }\n  }\n  record[storageKey] = value;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a reference to another record.\n */\nfunction setLinkedRecordID(record, storageKey, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  record[storageKey] = link;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a list of references other records.\n */\nfunction setLinkedRecordIDs(record, storageKey, linkedIDs) {\n  // See perf note above for why we aren't using computed property access.\n  var links = {};\n  links[REFS_KEY] = linkedIDs;\n  record[storageKey] = links;\n}\n\n/**\n * @public\n *\n * Set the value of a field to a reference to another record in the actor specific store.\n */\nfunction setActorLinkedRecordID(record, storageKey, actorIdentifier, linkedID) {\n  // See perf note above for why we aren't using computed property access.\n  var link = {};\n  link[REF_KEY] = linkedID;\n  link[ACTOR_IDENTIFIER_KEY] = actorIdentifier;\n  record[storageKey] = link;\n}\n\n/**\n * @public\n *\n * Get link to a record and the actor identifier for the store.\n */\nfunction getActorLinkedRecordID(record, storageKey) {\n  var link = record[storageKey];\n  if (link == null) {\n    return link;\n  }\n  !(typeof link === 'object' && typeof link[REF_KEY] === 'string' && link[ACTOR_IDENTIFIER_KEY] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getActorLinkedRecordID(): Expected `%s.%s` to be an actor specific linked ID, ' + 'was `%s`.', record[ID_KEY], storageKey, JSON.stringify(link)) : invariant(false) : void 0;\n  return [link[ACTOR_IDENTIFIER_KEY], link[REF_KEY]];\n}\nfunction getResolverLinkedRecordID(record, typeName) {\n  var id = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (id == null || isSuspenseSentinel(id)) {\n    return null;\n  }\n  // TODD: Deprecate client edges that return just id.\n  if (typeof id === 'object') {\n    id = id.id;\n  }\n  !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordID(): Expected value to be a linked ID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n  return generateClientObjectClientID(typeName, id);\n}\nfunction getResolverLinkedRecordIDs(record, typeName) {\n  var resolverValue = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (resolverValue == null || isSuspenseSentinel(resolverValue)) {\n    return null;\n  }\n  !Array.isArray(resolverValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected value to be an array of linked IDs, ' + 'was `%s`.', JSON.stringify(resolverValue)) : invariant(false) : void 0;\n  return resolverValue.map(function (id) {\n    if (id == null) {\n      return null;\n    }\n    // TODD: Deprecate client edges that return just id.\n    if (typeof id === 'object') {\n      id = id.id;\n    }\n    !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected item within resolver linked field to be a DataID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n    return generateClientObjectClientID(typeName, id);\n  });\n}\nmodule.exports = {\n  clone: clone,\n  copyFields: copyFields,\n  create: create,\n  freeze: freeze,\n  getDataID: getDataID,\n  getInvalidationEpoch: getInvalidationEpoch,\n  getLinkedRecordID: getLinkedRecordID,\n  getLinkedRecordIDs: getLinkedRecordIDs,\n  getType: getType,\n  getValue: getValue,\n  merge: merge,\n  setValue: setValue,\n  setLinkedRecordID: setLinkedRecordID,\n  setLinkedRecordIDs: setLinkedRecordIDs,\n  update: update,\n  getActorLinkedRecordID: getActorLinkedRecordID,\n  setActorLinkedRecordID: setActorLinkedRecordID,\n  getResolverLinkedRecordID: getResolverLinkedRecordID,\n  getResolverLinkedRecordIDs: getResolverLinkedRecordIDs\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayConcreteVariables'),\n  getFragmentVariables = _require.getFragmentVariables;\nvar _require2 = require('./RelayStoreUtils'),\n  CLIENT_EDGE_TRAVERSAL_PATH = _require2.CLIENT_EDGE_TRAVERSAL_PATH,\n  FRAGMENT_OWNER_KEY = _require2.FRAGMENT_OWNER_KEY,\n  FRAGMENTS_KEY = _require2.FRAGMENTS_KEY,\n  ID_KEY = _require2.ID_KEY,\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require2.IS_WITHIN_UNMATCHED_TYPE_REFINEMENT;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n\n/**\n * @public\n *\n * Given the result `item` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment for that item.\n *\n * Example:\n *\n * Given two fragments as follows:\n *\n * ```\n * fragment Parent on User {\n *   id\n *   ...Child\n * }\n * fragment Child on User {\n *   name\n * }\n * ```\n *\n * And given some object `parent` that is the results of `Parent` for id \"4\",\n * the results of `Child` can be accessed by first getting a selector and then\n * using that selector to `lookup()` the results against the environment:\n *\n * ```\n * const childSelector = getSingularSelector(queryVariables, Child, parent);\n * const childData = environment.lookup(childSelector).data;\n * ```\n */\nfunction getSingularSelector(fragment, item) {\n  !(typeof item === 'object' && item !== null && !Array.isArray(item)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item)) : invariant(false) : void 0;\n  var dataID = item[ID_KEY];\n  var fragments = item[FRAGMENTS_KEY];\n  var mixedOwner = item[FRAGMENT_OWNER_KEY];\n  var isWithinUnmatchedTypeRefinement = item[IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] === true;\n  var mixedClientEdgeTraversalPath = item[CLIENT_EDGE_TRAVERSAL_PATH];\n  if (typeof dataID === 'string' && typeof fragments === 'object' && fragments !== null && typeof fragments[fragment.name] === 'object' && fragments[fragment.name] !== null && typeof mixedOwner === 'object' && mixedOwner !== null && (mixedClientEdgeTraversalPath == null || Array.isArray(mixedClientEdgeTraversalPath))) {\n    var owner = mixedOwner;\n    var clientEdgeTraversalPath = mixedClientEdgeTraversalPath;\n    var argumentVariables = fragments[fragment.name];\n    var fragmentVariables = getFragmentVariables(fragment, owner.variables, argumentVariables);\n    return createReaderSelector(fragment, dataID, fragmentVariables, owner, isWithinUnmatchedTypeRefinement, clientEdgeTraversalPath);\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    var stringifiedItem = JSON.stringify(item);\n    if (stringifiedItem.length > 499) {\n      stringifiedItem = stringifiedItem.substr(0, 498) + \"\\u2026\";\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`.', fragment.name, stringifiedItem, fragment.name) : void 0;\n  }\n  return null;\n}\n\n/**\n * @public\n *\n * Given the result `items` from a parent that fetched `fragment`, creates a\n * selector that can be used to read the results of that fragment on those\n * items. This is similar to `getSingularSelector` but for \"plural\" fragments that\n * expect an array of results and therefore return an array of selectors.\n */\nfunction getPluralSelector(fragment, items) {\n  var selectors = null;\n  items.forEach(function (item, ii) {\n    var selector = item != null ? getSingularSelector(fragment, item) : null;\n    if (selector != null) {\n      selectors = selectors || [];\n      selectors.push(selector);\n    }\n  });\n  if (selectors == null) {\n    return null;\n  } else {\n    return {\n      kind: 'PluralReaderSelector',\n      selectors: selectors\n    };\n  }\n}\nfunction getSelector(fragment, item) {\n  if (item == null) {\n    return item;\n  } else if (fragment.metadata && fragment.metadata.plural === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getPluralSelector(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getSingularSelector(fragment, item);\n  }\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the selectors for those fragments from the results.\n *\n * The canonical use-case for this function is ReactRelayFragmentContainer, which\n * uses this function to convert (props, fragments) into selectors so that it\n * can read the results to pass to the inner component.\n */\nfunction getSelectorsFromObject(fragments, object) {\n  var selectors = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      selectors[key] = getSelector(fragment, item);\n    }\n  }\n  return selectors;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts a mapping of keys -> id(s) of the results.\n *\n * Similar to `getSelectorsFromObject()`, this function can be useful in\n * determining the \"identity\" of the props passed to a component.\n */\nfunction getDataIDsFromObject(fragments, object) {\n  var ids = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      ids[key] = getDataIDsFromFragment(fragment, item);\n    }\n  }\n  return ids;\n}\nfunction getDataIDsFromFragment(fragment, item) {\n  if (item == null) {\n    return item;\n  } else if (fragment.metadata && fragment.metadata.plural === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getDataIDs(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getDataID(fragment, item);\n  }\n}\n\n/**\n * @internal\n */\nfunction getDataIDs(fragment, items) {\n  var ids = null;\n  items.forEach(function (item) {\n    var id = item != null ? getDataID(fragment, item) : null;\n    if (id != null) {\n      ids = ids || [];\n      ids.push(id);\n    }\n  });\n  return ids;\n}\n\n/**\n * @internal\n */\nfunction getDataID(fragment, item) {\n  !(typeof item === 'object' && item !== null && !Array.isArray(item)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an object, got ' + '`%s`.', fragment.name, JSON.stringify(item)) : invariant(false) : void 0;\n  var dataID = item[ID_KEY];\n  if (typeof dataID === 'string') {\n    return dataID;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayModernSelector: Expected object to contain data for fragment `%s`, got ' + '`%s`. Make sure that the parent operation/fragment included fragment ' + '`...%s` without `@relay(mask: false)`, or `null` is passed as the fragment ' + \"reference for `%s` if it's conditonally included and the condition isn't met.\", fragment.name, JSON.stringify(item), fragment.name, fragment.name) : void 0;\n  return null;\n}\n\n/**\n * @public\n *\n * Given a mapping of keys -> results and a mapping of keys -> fragments,\n * extracts the merged variables that would be in scope for those\n * fragments/results.\n *\n * This can be useful in determing what varaibles were used to fetch the data\n * for a Relay container, for example.\n */\nfunction getVariablesFromObject(fragments, object) {\n  var variables = {};\n  for (var key in fragments) {\n    if (fragments.hasOwnProperty(key)) {\n      var fragment = fragments[key];\n      var item = object[key];\n      var itemVariables = getVariablesFromFragment(fragment, item);\n      Object.assign(variables, itemVariables);\n    }\n  }\n  return variables;\n}\nfunction getVariablesFromFragment(fragment, item) {\n  var _fragment$metadata;\n  if (item == null) {\n    return {};\n  } else if (((_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.plural) === true) {\n    !Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernSelector: Expected value for fragment `%s` to be an array, got `%s`. ' + 'Remove `@relay(plural: true)` from fragment `%s` to allow the prop to be an object.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getVariablesFromPluralFragment(fragment, item);\n  } else {\n    !!Array.isArray(item) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernFragmentSpecResolver: Expected value for fragment `%s` to be an object, got `%s`. ' + 'Add `@relay(plural: true)` to fragment `%s` to allow the prop to be an array of items.', fragment.name, JSON.stringify(item), fragment.name) : invariant(false) : void 0;\n    return getVariablesFromSingularFragment(fragment, item) || {};\n  }\n}\nfunction getVariablesFromSingularFragment(fragment, item) {\n  var selector = getSingularSelector(fragment, item);\n  if (!selector) {\n    return null;\n  }\n  return selector.variables;\n}\nfunction getVariablesFromPluralFragment(fragment, items) {\n  var variables = {};\n  items.forEach(function (value, ii) {\n    if (value != null) {\n      var itemVariables = getVariablesFromSingularFragment(fragment, value);\n      if (itemVariables != null) {\n        Object.assign(variables, itemVariables);\n      }\n    }\n  });\n  return variables;\n}\nfunction areEqualSingularSelectors(thisSelector, thatSelector) {\n  return thisSelector.owner === thatSelector.owner && thisSelector.dataID === thatSelector.dataID && thisSelector.node === thatSelector.node && areEqual(thisSelector.variables, thatSelector.variables);\n}\n\n/**\n * @public\n *\n * Determine if two selectors are equal (represent the same selection). Note\n * that this function returns `false` when the two queries/fragments are\n * different objects, even if they select the same fields.\n */\nfunction areEqualSelectors(a, b) {\n  if (a === b) {\n    return true;\n  } else if (a == null) {\n    return b == null;\n  } else if (b == null) {\n    return a == null;\n  } else if (a.kind === 'SingularReaderSelector' && b.kind === 'SingularReaderSelector') {\n    return areEqualSingularSelectors(a, b);\n  } else if (a.kind === 'PluralReaderSelector' && b.kind === 'PluralReaderSelector') {\n    return a.selectors.length === b.selectors.length && a.selectors.every(function (s, i) {\n      return areEqualSingularSelectors(s, b.selectors[i]);\n    });\n  } else {\n    return false;\n  }\n}\nfunction createReaderSelector(fragment, dataID, variables, request) {\n  var isWithinUnmatchedTypeRefinement = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var clientEdgeTraversalPath = arguments.length > 5 ? arguments[5] : undefined;\n  return {\n    kind: 'SingularReaderSelector',\n    dataID: dataID,\n    isWithinUnmatchedTypeRefinement: isWithinUnmatchedTypeRefinement,\n    clientEdgeTraversalPath: clientEdgeTraversalPath !== null && clientEdgeTraversalPath !== void 0 ? clientEdgeTraversalPath : null,\n    node: fragment,\n    variables: variables,\n    owner: request\n  };\n}\nfunction createNormalizationSelector(node, dataID, variables) {\n  return {\n    dataID: dataID,\n    node: node,\n    variables: variables\n  };\n}\nmodule.exports = {\n  areEqualSelectors: areEqualSelectors,\n  createReaderSelector: createReaderSelector,\n  createNormalizationSelector: createNormalizationSelector,\n  getDataIDsFromFragment: getDataIDsFromFragment,\n  getDataIDsFromObject: getDataIDsFromObject,\n  getSingularSelector: getSingularSelector,\n  getPluralSelector: getPluralSelector,\n  getSelector: getSelector,\n  getSelectorsFromObject: getSelectorsFromObject,\n  getVariablesFromSingularFragment: getVariablesFromSingularFragment,\n  getVariablesFromPluralFragment: getVariablesFromPluralFragment,\n  getVariablesFromFragment: getVariablesFromFragment,\n  getVariablesFromObject: getVariablesFromObject\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _require = require('../multi-actor-environment/ActorIdentifier'),\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = _require.INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE,\n  assertInternalActorIdentifier = _require.assertInternalActorIdentifier;\nvar deepFreeze = require('../util/deepFreeze');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar resolveImmediate = require('../util/resolveImmediate');\nvar DataChecker = require('./DataChecker');\nvar defaultGetDataID = require('./defaultGetDataID');\nvar RelayModernRecord = require('./RelayModernRecord');\nvar RelayOptimisticRecordSource = require('./RelayOptimisticRecordSource');\nvar RelayReader = require('./RelayReader');\nvar RelayReferenceMarker = require('./RelayReferenceMarker');\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreSubscriptions = require('./RelayStoreSubscriptions');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require2 = require('./RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID,\n  ROOT_TYPE = _require2.ROOT_TYPE;\nvar _require3 = require('./ResolverCache'),\n  RecordResolverCache = _require3.RecordResolverCache;\nvar invariant = require('invariant');\nvar DEFAULT_RELEASE_BUFFER_SIZE = 10;\n\n/**\n * @public\n *\n * An implementation of the `Store` interface defined in `RelayStoreTypes`.\n *\n * Note that a Store takes ownership of all records provided to it: other\n * objects may continue to hold a reference to such records but may not mutate\n * them. The static Relay core is architected to avoid mutating records that may have been\n * passed to a store: operations that mutate records will either create fresh\n * records or clone existing records and modify the clones. Record immutability\n * is also enforced in development mode by freezing all records passed to a store.\n */\nvar RelayModernStore = /*#__PURE__*/function () {\n  function RelayModernStore(source, options) {\n    var _this = this;\n    var _options$gcReleaseBuf, _options$gcScheduler, _options$getDataID, _options$log, _options$operationLoa;\n    (0, _defineProperty2[\"default\"])(this, \"_gcStep\", function () {\n      if (_this._gcRun) {\n        if (_this._gcRun.next().done) {\n          _this._gcRun = null;\n        } else {\n          _this._gcScheduler(_this._gcStep);\n        }\n      }\n    });\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== \"production\") {\n      var storeIDs = source.getRecordIDs();\n      for (var ii = 0; ii < storeIDs.length; ii++) {\n        var record = source.get(storeIDs[ii]);\n        if (record) {\n          RelayModernRecord.freeze(record);\n        }\n      }\n    }\n    this._currentWriteEpoch = 0;\n    this._gcHoldCounter = 0;\n    this._gcReleaseBufferSize = (_options$gcReleaseBuf = options === null || options === void 0 ? void 0 : options.gcReleaseBufferSize) !== null && _options$gcReleaseBuf !== void 0 ? _options$gcReleaseBuf : DEFAULT_RELEASE_BUFFER_SIZE;\n    this._gcRun = null;\n    this._gcScheduler = (_options$gcScheduler = options === null || options === void 0 ? void 0 : options.gcScheduler) !== null && _options$gcScheduler !== void 0 ? _options$gcScheduler : resolveImmediate;\n    this._getDataID = (_options$getDataID = options === null || options === void 0 ? void 0 : options.getDataID) !== null && _options$getDataID !== void 0 ? _options$getDataID : defaultGetDataID;\n    this._globalInvalidationEpoch = null;\n    this._invalidationSubscriptions = new Set();\n    this._invalidatedRecordIDs = new Set();\n    this.__log = (_options$log = options === null || options === void 0 ? void 0 : options.log) !== null && _options$log !== void 0 ? _options$log : null;\n    this._queryCacheExpirationTime = options === null || options === void 0 ? void 0 : options.queryCacheExpirationTime;\n    this._operationLoader = (_options$operationLoa = options === null || options === void 0 ? void 0 : options.operationLoader) !== null && _options$operationLoa !== void 0 ? _options$operationLoa : null;\n    this._optimisticSource = null;\n    this._recordSource = source;\n    this._releaseBuffer = [];\n    this._roots = new Map();\n    this._shouldScheduleGC = false;\n    this._resolverCache = new RecordResolverCache(function () {\n      return _this._getMutableRecordSource();\n    });\n    this._storeSubscriptions = new RelayStoreSubscriptions(options === null || options === void 0 ? void 0 : options.log, this._resolverCache);\n    this._updatedRecordIDs = new Set();\n    this._shouldProcessClientComponents = options === null || options === void 0 ? void 0 : options.shouldProcessClientComponents;\n    initializeRecordSource(this._recordSource);\n  }\n  var _proto = RelayModernStore.prototype;\n  _proto.getSource = function getSource() {\n    var _this$_optimisticSour;\n    return (_this$_optimisticSour = this._optimisticSource) !== null && _this$_optimisticSour !== void 0 ? _this$_optimisticSour : this._recordSource;\n  };\n  _proto._getMutableRecordSource = function _getMutableRecordSource() {\n    var _this$_optimisticSour2;\n    return (_this$_optimisticSour2 = this._optimisticSource) !== null && _this$_optimisticSour2 !== void 0 ? _this$_optimisticSour2 : this._recordSource;\n  };\n  _proto.check = function check(operation, options) {\n    var _options$handlers, _options$getSourceFor, _options$getTargetFor, _options$defaultActor;\n    var selector = operation.root;\n    var source = this._getMutableRecordSource();\n    var globalInvalidationEpoch = this._globalInvalidationEpoch;\n    var rootEntry = this._roots.get(operation.request.identifier);\n    var operationLastWrittenAt = rootEntry != null ? rootEntry.epoch : null;\n\n    // Check if store has been globally invalidated\n    if (globalInvalidationEpoch != null) {\n      // If so, check if the operation we're checking was last written\n      // before or after invalidation occurred.\n      if (operationLastWrittenAt == null || operationLastWrittenAt <= globalInvalidationEpoch) {\n        // If the operation was written /before/ global invalidation occurred,\n        // or if this operation has never been written to the store before,\n        // we will consider the data for this operation to be stale\n        // (i.e. not resolvable from the store).\n        return {\n          status: 'stale'\n        };\n      }\n    }\n    var handlers = (_options$handlers = options === null || options === void 0 ? void 0 : options.handlers) !== null && _options$handlers !== void 0 ? _options$handlers : [];\n    var getSourceForActor = (_options$getSourceFor = options === null || options === void 0 ? void 0 : options.getSourceForActor) !== null && _options$getSourceFor !== void 0 ? _options$getSourceFor : function (actorIdentifier) {\n      assertInternalActorIdentifier(actorIdentifier);\n      return source;\n    };\n    var getTargetForActor = (_options$getTargetFor = options === null || options === void 0 ? void 0 : options.getTargetForActor) !== null && _options$getTargetFor !== void 0 ? _options$getTargetFor : function (actorIdentifier) {\n      assertInternalActorIdentifier(actorIdentifier);\n      return source;\n    };\n    var operationAvailability = DataChecker.check(getSourceForActor, getTargetForActor, (_options$defaultActor = options === null || options === void 0 ? void 0 : options.defaultActorIdentifier) !== null && _options$defaultActor !== void 0 ? _options$defaultActor : INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE, selector, handlers, this._operationLoader, this._getDataID, this._shouldProcessClientComponents);\n    return getAvailabilityStatus(operationAvailability, operationLastWrittenAt, rootEntry === null || rootEntry === void 0 ? void 0 : rootEntry.fetchTime, this._queryCacheExpirationTime);\n  };\n  _proto.retain = function retain(operation) {\n    var _this2 = this;\n    var id = operation.request.identifier;\n    var disposed = false;\n    var dispose = function dispose() {\n      // Ensure each retain can only dispose once\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      // For Flow: guard against the entry somehow not existing\n      var rootEntry = _this2._roots.get(id);\n      if (rootEntry == null) {\n        return;\n      }\n      // Decrement the ref count: if it becomes zero it is eligible\n      // for release.\n      rootEntry.refCount--;\n      if (rootEntry.refCount === 0) {\n        var _queryCacheExpirationTime = _this2._queryCacheExpirationTime;\n        var rootEntryIsStale = rootEntry.fetchTime != null && _queryCacheExpirationTime != null && rootEntry.fetchTime <= Date.now() - _queryCacheExpirationTime;\n        if (rootEntryIsStale) {\n          _this2._roots[\"delete\"](id);\n          _this2.scheduleGC();\n        } else {\n          _this2._releaseBuffer.push(id);\n\n          // If the release buffer is now over-full, remove the least-recently\n          // added entry and schedule a GC. Note that all items in the release\n          // buffer have a refCount of 0.\n          if (_this2._releaseBuffer.length > _this2._gcReleaseBufferSize) {\n            var _id = _this2._releaseBuffer.shift();\n            _this2._roots[\"delete\"](_id);\n            _this2.scheduleGC();\n          }\n        }\n      }\n    };\n    var rootEntry = this._roots.get(id);\n    if (rootEntry != null) {\n      if (rootEntry.refCount === 0) {\n        // This entry should be in the release buffer, but it no longer belongs\n        // there since it's retained. Remove it to maintain the invariant that\n        // all release buffer entries have a refCount of 0.\n        this._releaseBuffer = this._releaseBuffer.filter(function (_id) {\n          return _id !== id;\n        });\n      }\n      // If we've previously retained this operation, increment the refCount\n      rootEntry.refCount += 1;\n    } else {\n      // Otherwise create a new entry for the operation\n      this._roots.set(id, {\n        operation: operation,\n        refCount: 1,\n        epoch: null,\n        fetchTime: null\n      });\n    }\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.lookup = function lookup(selector) {\n    var source = this.getSource();\n    var snapshot = RelayReader.read(source, selector, this._resolverCache);\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(snapshot);\n    }\n    return snapshot;\n  }\n\n  // This method will return a list of updated owners from the subscriptions\n  ;\n  _proto.notify = function notify(sourceOperation, invalidateStore) {\n    var _this3 = this;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.notify.start',\n        sourceOperation: sourceOperation\n      });\n    }\n\n    // Increment the current write when notifying after executing\n    // a set of changes to the store.\n    this._currentWriteEpoch++;\n    if (invalidateStore === true) {\n      this._globalInvalidationEpoch = this._currentWriteEpoch;\n    }\n    if (RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n      // When a record is updated, we need to also handle records that depend on it,\n      // specifically Relay Resolver result records containing results based on the\n      // updated records. This both adds to updatedRecordIDs and invalidates any\n      // cached data as needed.\n      this._resolverCache.invalidateDataIDs(this._updatedRecordIDs);\n    }\n    var source = this.getSource();\n    var updatedOwners = [];\n    this._storeSubscriptions.updateSubscriptions(source, this._updatedRecordIDs, updatedOwners, sourceOperation);\n    this._invalidationSubscriptions.forEach(function (subscription) {\n      _this3._updateInvalidationSubscription(subscription, invalidateStore === true);\n    });\n    if (log != null) {\n      log({\n        name: 'store.notify.complete',\n        sourceOperation: sourceOperation,\n        updatedRecordIDs: this._updatedRecordIDs,\n        invalidatedRecordIDs: this._invalidatedRecordIDs\n      });\n    }\n    this._updatedRecordIDs.clear();\n    this._invalidatedRecordIDs.clear();\n\n    // If a source operation was provided (indicating the operation\n    // that produced this update to the store), record the current epoch\n    // at which this operation was written.\n    if (sourceOperation != null) {\n      // We only track the epoch at which the operation was written if\n      // it was previously retained, to keep the size of our operation\n      // epoch map bounded. If a query wasn't retained, we assume it can\n      // may be deleted at any moment and thus is not relevant for us to track\n      // for the purposes of invalidation.\n      var id = sourceOperation.request.identifier;\n      var rootEntry = this._roots.get(id);\n      if (rootEntry != null) {\n        rootEntry.epoch = this._currentWriteEpoch;\n        rootEntry.fetchTime = Date.now();\n      } else if (sourceOperation.request.node.params.operationKind === 'query' && this._gcReleaseBufferSize > 0 && this._releaseBuffer.length < this._gcReleaseBufferSize) {\n        // The operation isn't retained but there is space in the release buffer:\n        // temporarily track this operation in case the data can be reused soon.\n        var temporaryRootEntry = {\n          operation: sourceOperation,\n          refCount: 0,\n          epoch: this._currentWriteEpoch,\n          fetchTime: Date.now()\n        };\n        this._releaseBuffer.push(id);\n        this._roots.set(id, temporaryRootEntry);\n      }\n    }\n    return updatedOwners;\n  };\n  _proto.publish = function publish(source, idsMarkedForInvalidation) {\n    var target = this._getMutableRecordSource();\n    updateTargetFromSource(target, source,\n    // We increment the current epoch at the end of the set of updates,\n    // in notify(). Here, we pass what will be the incremented value of\n    // the epoch to use to write to invalidated records.\n    this._currentWriteEpoch + 1, idsMarkedForInvalidation, this._updatedRecordIDs, this._invalidatedRecordIDs);\n    // NOTE: log *after* processing the source so that even if a bad log function\n    // mutates the source, it doesn't affect Relay processing of it.\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.publish',\n        source: source,\n        optimistic: target === this._optimisticSource\n      });\n    }\n  };\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    return this._storeSubscriptions.subscribe(snapshot, callback);\n  };\n  _proto.holdGC = function holdGC() {\n    var _this4 = this;\n    if (this._gcRun) {\n      this._gcRun = null;\n      this._shouldScheduleGC = true;\n    }\n    this._gcHoldCounter++;\n    var dispose = function dispose() {\n      if (_this4._gcHoldCounter > 0) {\n        _this4._gcHoldCounter--;\n        if (_this4._gcHoldCounter === 0 && _this4._shouldScheduleGC) {\n          _this4.scheduleGC();\n          _this4._shouldScheduleGC = false;\n        }\n      }\n    };\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.toJSON = function toJSON() {\n    return 'RelayModernStore()';\n  };\n  _proto.getEpoch = function getEpoch() {\n    return this._currentWriteEpoch;\n  }\n\n  // Internal API\n  ;\n  _proto.__getUpdatedRecordIDs = function __getUpdatedRecordIDs() {\n    return this._updatedRecordIDs;\n  };\n  _proto.lookupInvalidationState = function lookupInvalidationState(dataIDs) {\n    var _this5 = this;\n    var invalidations = new Map();\n    dataIDs.forEach(function (dataID) {\n      var _RelayModernRecord$ge;\n      var record = _this5.getSource().get(dataID);\n      invalidations.set(dataID, (_RelayModernRecord$ge = RelayModernRecord.getInvalidationEpoch(record)) !== null && _RelayModernRecord$ge !== void 0 ? _RelayModernRecord$ge : null);\n    });\n    invalidations.set('global', this._globalInvalidationEpoch);\n    return {\n      dataIDs: dataIDs,\n      invalidations: invalidations\n    };\n  };\n  _proto.checkInvalidationState = function checkInvalidationState(prevInvalidationState) {\n    var latestInvalidationState = this.lookupInvalidationState(prevInvalidationState.dataIDs);\n    var currentInvalidations = latestInvalidationState.invalidations;\n    var prevInvalidations = prevInvalidationState.invalidations;\n\n    // Check if global invalidation has changed\n    if (currentInvalidations.get('global') !== prevInvalidations.get('global')) {\n      return true;\n    }\n\n    // Check if the invalidation state for any of the ids has changed.\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(prevInvalidationState.dataIDs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var dataID = _step.value;\n        if (currentInvalidations.get(dataID) !== prevInvalidations.get(dataID)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return false;\n  };\n  _proto.subscribeToInvalidationState = function subscribeToInvalidationState(invalidationState, callback) {\n    var _this6 = this;\n    var subscription = {\n      callback: callback,\n      invalidationState: invalidationState\n    };\n    var dispose = function dispose() {\n      _this6._invalidationSubscriptions[\"delete\"](subscription);\n    };\n    this._invalidationSubscriptions.add(subscription);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto._updateInvalidationSubscription = function _updateInvalidationSubscription(subscription, invalidatedStore) {\n    var _this7 = this;\n    var callback = subscription.callback,\n      invalidationState = subscription.invalidationState;\n    var dataIDs = invalidationState.dataIDs;\n    var isSubscribedToInvalidatedIDs = invalidatedStore || dataIDs.some(function (dataID) {\n      return _this7._invalidatedRecordIDs.has(dataID);\n    });\n    if (!isSubscribedToInvalidatedIDs) {\n      return;\n    }\n    callback();\n  };\n  _proto.snapshot = function snapshot() {\n    !(this._optimisticSource == null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernStore: Unexpected call to snapshot() while a previous ' + 'snapshot exists.') : invariant(false) : void 0;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.snapshot'\n      });\n    }\n    this._storeSubscriptions.snapshotSubscriptions(this.getSource());\n    if (this._gcRun) {\n      this._gcRun = null;\n      this._shouldScheduleGC = true;\n    }\n    this._optimisticSource = RelayOptimisticRecordSource.create(this.getSource());\n  };\n  _proto.restore = function restore() {\n    !(this._optimisticSource != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernStore: Unexpected call to restore(), expected a snapshot ' + 'to exist (make sure to call snapshot()).') : invariant(false) : void 0;\n    var log = this.__log;\n    if (log != null) {\n      log({\n        name: 'store.restore'\n      });\n    }\n    this._optimisticSource = null;\n    if (this._shouldScheduleGC) {\n      this.scheduleGC();\n    }\n    this._storeSubscriptions.restoreSubscriptions();\n  };\n  _proto.scheduleGC = function scheduleGC() {\n    if (this._gcHoldCounter > 0) {\n      this._shouldScheduleGC = true;\n      return;\n    }\n    if (this._gcRun) {\n      return;\n    }\n    this._gcRun = this._collect();\n    this._gcScheduler(this._gcStep);\n  }\n\n  /**\n   * Run a full GC synchronously.\n   */;\n  _proto.__gc = function __gc() {\n    // Don't run GC while there are optimistic updates applied\n    if (this._optimisticSource != null) {\n      return;\n    }\n    var gcRun = this._collect();\n    while (!gcRun.next().done) {}\n  };\n  _proto._collect = function* _collect() {\n    /* eslint-disable no-labels */\n    top: while (true) {\n      var startEpoch = this._currentWriteEpoch;\n      var references = new Set();\n\n      // Mark all records that are traversable from a root\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._roots.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var operation = _step2.value.operation;\n          var selector = operation.root;\n          RelayReferenceMarker.mark(this._recordSource, selector, references, this._operationLoader, this._shouldProcessClientComponents);\n          // Yield for other work after each operation\n          yield;\n\n          // If the store was updated, restart\n          if (startEpoch !== this._currentWriteEpoch) {\n            continue top;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var log = this.__log;\n      if (log != null) {\n        log({\n          name: 'store.gc',\n          references: references\n        });\n      }\n\n      // Sweep records without references\n      if (references.size === 0) {\n        // Short-circuit if *nothing* is referenced\n        this._recordSource.clear();\n      } else {\n        // Evict any unreferenced nodes\n        var storeIDs = this._recordSource.getRecordIDs();\n        for (var ii = 0; ii < storeIDs.length; ii++) {\n          var dataID = storeIDs[ii];\n          if (!references.has(dataID)) {\n            this._recordSource.remove(dataID);\n          }\n        }\n      }\n      return;\n    }\n  };\n  return RelayModernStore;\n}();\nfunction initializeRecordSource(target) {\n  if (!target.has(ROOT_ID)) {\n    var rootRecord = RelayModernRecord.create(ROOT_ID, ROOT_TYPE);\n    target.set(ROOT_ID, rootRecord);\n  }\n}\n\n/**\n * Updates the target with information from source, also updating a mapping of\n * which records in the target were changed as a result.\n * Additionally, will mark records as invalidated at the current write epoch\n * given the set of record ids marked as stale in this update.\n */\nfunction updateTargetFromSource(target, source, currentWriteEpoch, idsMarkedForInvalidation, updatedRecordIDs, invalidatedRecordIDs) {\n  // First, update any records that were marked for invalidation.\n  // For each provided dataID that was invalidated, we write the\n  // INVALIDATED_AT_KEY on the record, indicating\n  // the epoch at which the record was invalidated.\n  if (idsMarkedForInvalidation) {\n    idsMarkedForInvalidation.forEach(function (dataID) {\n      var targetRecord = target.get(dataID);\n      var sourceRecord = source.get(dataID);\n\n      // If record was deleted during the update (and also invalidated),\n      // we don't need to count it as an invalidated id\n      if (sourceRecord === null) {\n        return;\n      }\n      var nextRecord;\n      if (targetRecord != null) {\n        // If the target record exists, use it to set the epoch\n        // at which it was invalidated. This record will be updated with\n        // any changes from source in the section below\n        // where we update the target records based on the source.\n        nextRecord = RelayModernRecord.clone(targetRecord);\n      } else {\n        // If the target record doesn't exist, it means that a new record\n        // in the source was created (and also invalidated), so we use that\n        // record to set the epoch at which it was invalidated. This record\n        // will be updated with any changes from source in the section below\n        // where we update the target records based on the source.\n        nextRecord = sourceRecord != null ? RelayModernRecord.clone(sourceRecord) : null;\n      }\n      if (!nextRecord) {\n        return;\n      }\n      RelayModernRecord.setValue(nextRecord, RelayStoreUtils.INVALIDATED_AT_KEY, currentWriteEpoch);\n      invalidatedRecordIDs.add(dataID);\n      target.set(dataID, nextRecord);\n    });\n  }\n\n  // Update the target based on the changes present in source\n  var dataIDs = source.getRecordIDs();\n  for (var ii = 0; ii < dataIDs.length; ii++) {\n    var dataID = dataIDs[ii];\n    var sourceRecord = source.get(dataID);\n    var targetRecord = target.get(dataID);\n\n    // Prevent mutation of a record from outside the store.\n    if (process.env.NODE_ENV !== \"production\") {\n      if (sourceRecord) {\n        RelayModernRecord.freeze(sourceRecord);\n      }\n    }\n    if (sourceRecord && targetRecord) {\n      // ReactFlightClientResponses are lazy and only materialize when readRoot\n      // is called when we read the field, so if the record is a Flight field\n      // we always use the new record's data regardless of whether\n      // it actually changed. Let React take care of reconciliation instead.\n      var nextRecord = RelayModernRecord.getType(targetRecord) === RelayStoreReactFlightUtils.REACT_FLIGHT_TYPE_NAME ? sourceRecord : RelayModernRecord.update(targetRecord, sourceRecord);\n      if (nextRecord !== targetRecord) {\n        // Prevent mutation of a record from outside the store.\n        if (process.env.NODE_ENV !== \"production\") {\n          RelayModernRecord.freeze(nextRecord);\n        }\n        updatedRecordIDs.add(dataID);\n        target.set(dataID, nextRecord);\n      }\n    } else if (sourceRecord === null) {\n      target[\"delete\"](dataID);\n      if (targetRecord !== null) {\n        updatedRecordIDs.add(dataID);\n      }\n    } else if (sourceRecord) {\n      target.set(dataID, sourceRecord);\n      updatedRecordIDs.add(dataID);\n    } // don't add explicit undefined\n  }\n}\n\n/**\n * Returns an OperationAvailability given the Availability returned\n * by checking an operation, and when that operation was last written to the store.\n * Specifically, the provided Availability of an operation will contain the\n * value of when a record referenced by the operation was most recently\n * invalidated; given that value, and given when this operation was last\n * written to the store, this function will return the overall\n * OperationAvailability for the operation.\n */\nfunction getAvailabilityStatus(operationAvailability, operationLastWrittenAt, operationFetchTime, queryCacheExpirationTime) {\n  var mostRecentlyInvalidatedAt = operationAvailability.mostRecentlyInvalidatedAt,\n    status = operationAvailability.status;\n  if (typeof mostRecentlyInvalidatedAt === 'number') {\n    // If some record referenced by this operation is stale, then the operation itself is stale\n    // if either the operation itself was never written *or* the operation was last written\n    // before the most recent invalidation of its reachable records.\n    if (operationLastWrittenAt == null || mostRecentlyInvalidatedAt > operationLastWrittenAt) {\n      return {\n        status: 'stale'\n      };\n    }\n  }\n  if (status === 'missing') {\n    return {\n      status: 'missing'\n    };\n  }\n  if (operationFetchTime != null && queryCacheExpirationTime != null) {\n    var isStale = operationFetchTime <= Date.now() - queryCacheExpirationTime;\n    if (isStale) {\n      return {\n        status: 'stale'\n      };\n    }\n  }\n\n  // There were no invalidations of any reachable records *or* the operation is known to have\n  // been fetched after the most recent record invalidation.\n  return {\n    status: 'available',\n    fetchTime: operationFetchTime !== null && operationFetchTime !== void 0 ? operationFetchTime : null\n  };\n}\nmodule.exports = RelayModernStore;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar invariant = require('invariant');\nvar RelayOperationTracker = /*#__PURE__*/function () {\n  function RelayOperationTracker() {\n    this._ownersToPendingOperations = new Map();\n    this._pendingOperationsToOwners = new Map();\n    this._ownersToPendingPromise = new Map();\n  }\n\n  /**\n   * Update the map of current processing operations with the set of\n   * affected owners and notify subscribers\n   */\n  var _proto = RelayOperationTracker.prototype;\n  _proto.update = function update(pendingOperation, affectedOwners) {\n    if (affectedOwners.size === 0) {\n      return;\n    }\n    var pendingOperationIdentifier = pendingOperation.identifier;\n    var newlyAffectedOwnersIdentifier = new Set();\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(affectedOwners),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var owner = _step.value;\n        var ownerIdentifier = owner.identifier;\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n        if (pendingOperationsAffectingOwner != null) {\n          // In this case the `ownerIdentifier` already affected by some operations\n          // We just need to detect, is it the same operation that we already\n          // have in the list, or it's a new operation\n          if (!pendingOperationsAffectingOwner.has(pendingOperationIdentifier)) {\n            pendingOperationsAffectingOwner.set(pendingOperationIdentifier, pendingOperation);\n            newlyAffectedOwnersIdentifier.add(ownerIdentifier);\n          }\n        } else {\n          // This is a new `ownerIdentifier` that is affected by the operation\n          this._ownersToPendingOperations.set(ownerIdentifier, new Map([[pendingOperationIdentifier, pendingOperation]]));\n          newlyAffectedOwnersIdentifier.add(ownerIdentifier);\n        }\n      }\n\n      // No new owners were affected by this operation, we may stop here\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (newlyAffectedOwnersIdentifier.size === 0) {\n      return;\n    }\n\n    // But, if some owners were affected we need to add them to\n    // the `_pendingOperationsToOwners` set\n    var ownersAffectedByPendingOperation = this._pendingOperationsToOwners.get(pendingOperationIdentifier) || new Set();\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(newlyAffectedOwnersIdentifier),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _ownerIdentifier = _step2.value;\n        this._resolveOwnerResolvers(_ownerIdentifier);\n        ownersAffectedByPendingOperation.add(_ownerIdentifier);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    this._pendingOperationsToOwners.set(pendingOperationIdentifier, ownersAffectedByPendingOperation);\n  }\n\n  /**\n   * Once pending operation is completed we need to remove it\n   * from all tracking maps\n   */;\n  _proto.complete = function complete(pendingOperation) {\n    var pendingOperationIdentifier = pendingOperation.identifier;\n    var affectedOwnersIdentifier = this._pendingOperationsToOwners.get(pendingOperationIdentifier);\n    if (affectedOwnersIdentifier == null) {\n      return;\n    }\n    // These were the owners affected only by `pendingOperationIdentifier`\n    var completedOwnersIdentifier = new Set();\n\n    // These were the owners affected by `pendingOperationIdentifier`\n    // and some other operations\n    var updatedOwnersIdentifier = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(affectedOwnersIdentifier),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var ownerIdentifier = _step3.value;\n        var pendingOperationsAffectingOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n        if (!pendingOperationsAffectingOwner) {\n          continue;\n        }\n        pendingOperationsAffectingOwner[\"delete\"](pendingOperationIdentifier);\n        if (pendingOperationsAffectingOwner.size > 0) {\n          updatedOwnersIdentifier.add(ownerIdentifier);\n        } else {\n          completedOwnersIdentifier.add(ownerIdentifier);\n        }\n      }\n\n      // Complete subscriptions for all owners, affected by `pendingOperationIdentifier`\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(completedOwnersIdentifier),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _ownerIdentifier2 = _step4.value;\n        this._resolveOwnerResolvers(_ownerIdentifier2);\n        this._ownersToPendingOperations[\"delete\"](_ownerIdentifier2);\n      }\n\n      // Update all ownerIdentifier that were updated by `pendingOperationIdentifier` but still\n      // are affected by other operations\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(updatedOwnersIdentifier),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _ownerIdentifier3 = _step5.value;\n        this._resolveOwnerResolvers(_ownerIdentifier3);\n      }\n\n      // Finally, remove pending operation identifier\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._pendingOperationsToOwners[\"delete\"](pendingOperationIdentifier);\n  };\n  _proto._resolveOwnerResolvers = function _resolveOwnerResolvers(ownerIdentifier) {\n    var promiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);\n    if (promiseEntry != null) {\n      promiseEntry.resolve();\n    }\n    this._ownersToPendingPromise[\"delete\"](ownerIdentifier);\n  };\n  _proto.getPendingOperationsAffectingOwner = function getPendingOperationsAffectingOwner(owner) {\n    var ownerIdentifier = owner.identifier;\n    var pendingOperationsForOwner = this._ownersToPendingOperations.get(ownerIdentifier);\n    if (pendingOperationsForOwner == null || pendingOperationsForOwner.size === 0) {\n      return null;\n    }\n    var cachedPromiseEntry = this._ownersToPendingPromise.get(ownerIdentifier);\n    if (cachedPromiseEntry != null) {\n      return {\n        promise: cachedPromiseEntry.promise,\n        pendingOperations: cachedPromiseEntry.pendingOperations\n      };\n    }\n    var resolve;\n    var promise = new Promise(function (r) {\n      resolve = r;\n    });\n    !(resolve != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayOperationTracker: Expected resolver to be defined. If you' + 'are seeing this, it is likely a bug in Relay.') : invariant(false) : void 0;\n    var pendingOperations = Array.from(pendingOperationsForOwner.values());\n    this._ownersToPendingPromise.set(ownerIdentifier, {\n      promise: promise,\n      resolve: resolve,\n      pendingOperations: pendingOperations\n    });\n    return {\n      promise: promise,\n      pendingOperations: pendingOperations\n    };\n  };\n  return RelayOperationTracker;\n}();\nmodule.exports = RelayOperationTracker;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n  var _proto = RelayOptimisticRecordSource.prototype;\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n    this._sink.clear();\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n    var merged = (0, _objectSpread2[\"default\"])({}, this._base.toJSON());\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n    return merged;\n  };\n  _proto.getOptimisticRecordIDs = function getOptimisticRecordIDs() {\n    return new Set(this._sink.getRecordIDs());\n  };\n  return RelayOptimisticRecordSource;\n}();\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\nfunction getOptimisticRecordIDs(source) {\n  !(source instanceof RelayOptimisticRecordSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getOptimisticRecordIDs: Instance of RelayOptimisticRecordSource is expected') : invariant(false) : void 0;\n  return source.getOptimisticRecordIDs();\n}\nmodule.exports = {\n  create: create,\n  getOptimisticRecordIDs: getOptimisticRecordIDs\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _global$ErrorUtils$ap, _global$ErrorUtils;\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\nvar RelayRecordSourceSelectorProxy = require('../mutations/RelayRecordSourceSelectorProxy');\nvar RelayReader = require('./RelayReader');\nvar RelayRecordSource = require('./RelayRecordSource');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\nvar applyWithGuard = (_global$ErrorUtils$ap = _global === null || _global === void 0 ? void 0 : (_global$ErrorUtils = _global.ErrorUtils) === null || _global$ErrorUtils === void 0 ? void 0 : _global$ErrorUtils.applyWithGuard) !== null && _global$ErrorUtils$ap !== void 0 ? _global$ErrorUtils$ap : function (callback, context, args, onError, name) {\n  return callback.apply(context, args);\n};\n\n/**\n * Coordinates the concurrent modification of a `Store` due to optimistic and\n * non-revertable client updates and server payloads:\n * - Applies optimistic updates.\n * - Reverts optimistic updates, rebasing any subsequent updates.\n * - Commits client updates (typically for client schema extensions).\n * - Commits server updates:\n *   - Normalizes query/mutation/subscription responses.\n *   - Executes handlers for \"handle\" fields.\n *   - Reverts and reapplies pending optimistic updates.\n */\nvar RelayPublishQueue = /*#__PURE__*/function () {\n  // True if the next `run()` should apply the backup and rerun all optimistic\n  // updates performing a rebase.\n\n  // Payloads to apply or Sources to publish to the store with the next `run()`.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // Optimistic updaters to add with the next `run()`.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // Optimistic updaters that are already added and might be rerun in order to\n  // rebase them.\n  // $FlowFixMe[unclear-type] See explanation below.\n\n  // For _pendingOptimisticUpdates, _appliedOptimisticUpdates, and _pendingData,\n  // we want to parametrize by \"any\" since the type is effectively\n  // \"the union of all T's that PublishQueue's methods were called with\".\n\n  // Garbage collection hold, should rerun gc on dispose\n\n  function RelayPublishQueue(store, handlerProvider, getDataID, missingFieldHandlers) {\n    this._hasStoreSnapshot = false;\n    this._handlerProvider = handlerProvider || null;\n    this._pendingBackupRebase = false;\n    this._pendingData = new Set();\n    this._pendingOptimisticUpdates = new Set();\n    this._store = store;\n    this._appliedOptimisticUpdates = new Set();\n    this._gcHold = null;\n    this._getDataID = getDataID;\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n\n  /**\n   * Schedule applying an optimistic updates on the next `run()`.\n   */\n  var _proto = RelayPublishQueue.prototype;\n  _proto.applyUpdate = function applyUpdate(updater) {\n    !(!this._appliedOptimisticUpdates.has(updater) && !this._pendingOptimisticUpdates.has(updater)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayPublishQueue: Cannot apply the same update function more than ' + 'once concurrently.') : invariant(false) : void 0;\n    this._pendingOptimisticUpdates.add(updater);\n  }\n\n  /**\n   * Schedule reverting an optimistic updates on the next `run()`.\n   */;\n  _proto.revertUpdate = function revertUpdate(updater) {\n    if (this._pendingOptimisticUpdates.has(updater)) {\n      // Reverted before it was applied\n      this._pendingOptimisticUpdates[\"delete\"](updater);\n    } else if (this._appliedOptimisticUpdates.has(updater)) {\n      this._pendingBackupRebase = true;\n      this._appliedOptimisticUpdates[\"delete\"](updater);\n    }\n  }\n\n  /**\n   * Schedule a revert of all optimistic updates on the next `run()`.\n   */;\n  _proto.revertAll = function revertAll() {\n    this._pendingBackupRebase = true;\n    this._pendingOptimisticUpdates.clear();\n    this._appliedOptimisticUpdates.clear();\n  }\n\n  /**\n   * Schedule applying a payload to the store on the next `run()`.\n   */;\n  _proto.commitPayload = function commitPayload(operation, payload, updater) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'payload',\n      operation: operation,\n      payload: payload,\n      updater: updater\n    });\n  }\n\n  /**\n   * Schedule an updater to mutate the store on the next `run()` typically to\n   * update client schema fields.\n   */;\n  _proto.commitUpdate = function commitUpdate(updater) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'updater',\n      updater: updater\n    });\n  }\n\n  /**\n   * Schedule a publish to the store from the provided source on the next\n   * `run()`. As an example, to update the store with substituted fields that\n   * are missing in the store.\n   */;\n  _proto.commitSource = function commitSource(source) {\n    this._pendingBackupRebase = true;\n    this._pendingData.add({\n      kind: 'source',\n      source: source\n    });\n  }\n\n  /**\n   * Execute all queued up operations from the other public methods.\n   */;\n  _proto.run = function run(sourceOperation) {\n    var runWillClearGcHold = this._appliedOptimisticUpdates === 0 && !!this._gcHold;\n    var runIsANoop =\n    // this._pendingBackupRebase is true if an applied optimistic\n    // update has potentially been reverted or if this._pendingData is not empty.\n    !this._pendingBackupRebase && this._pendingOptimisticUpdates.size === 0 && !runWillClearGcHold;\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(!runIsANoop, 'RelayPublishQueue.run was called, but the call would have been a noop.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(this._isRunning !== true, 'A store update was detected within another store update. Please ' + \"make sure new store updates aren't being executed within an \" + 'updater function for a different update.') : void 0;\n      this._isRunning = true;\n    }\n    if (runIsANoop) {\n      if (process.env.NODE_ENV !== \"production\") {\n        this._isRunning = false;\n      }\n      return [];\n    }\n    if (this._pendingBackupRebase) {\n      if (this._hasStoreSnapshot) {\n        this._store.restore();\n        this._hasStoreSnapshot = false;\n      }\n    }\n    var invalidatedStore = this._commitData();\n    if (this._pendingOptimisticUpdates.size || this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      if (!this._hasStoreSnapshot) {\n        this._store.snapshot();\n        this._hasStoreSnapshot = true;\n      }\n      this._applyUpdates();\n    }\n    this._pendingBackupRebase = false;\n    if (this._appliedOptimisticUpdates.size > 0) {\n      if (!this._gcHold) {\n        this._gcHold = this._store.holdGC();\n      }\n    } else {\n      if (this._gcHold) {\n        this._gcHold.dispose();\n        this._gcHold = null;\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      this._isRunning = false;\n    }\n    return this._store.notify(sourceOperation, invalidatedStore);\n  }\n\n  /**\n   * _publishSourceFromPayload will return a boolean indicating if the\n   * publish caused the store to be globally invalidated.\n   */;\n  _proto._publishSourceFromPayload = function _publishSourceFromPayload(pendingPayload) {\n    var _this = this;\n    var payload = pendingPayload.payload,\n      operation = pendingPayload.operation,\n      updater = pendingPayload.updater;\n    var source = payload.source,\n      fieldPayloads = payload.fieldPayloads;\n    var mutator = new RelayRecordSourceMutator(this._store.getSource(), source);\n    var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider, this._missingFieldHandlers);\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for ' + 'handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(recordSourceProxy, fieldPayload);\n      });\n    }\n    if (updater) {\n      var selector = operation.fragment;\n      !(selector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a selector to be provided with updater function.') : invariant(false) : void 0;\n      var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, selector, this._missingFieldHandlers);\n      var selectorData = lookupSelector(source, selector);\n      updater(recordSourceSelectorProxy, selectorData);\n    }\n    var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();\n    this._store.publish(source, idsMarkedForInvalidation);\n    return recordSourceProxy.isStoreMarkedForInvalidation();\n  }\n\n  /**\n   * _commitData will return a boolean indicating if any of\n   * the pending commits caused the store to be globally invalidated.\n   */;\n  _proto._commitData = function _commitData() {\n    var _this2 = this;\n    if (!this._pendingData.size) {\n      return false;\n    }\n    var invalidatedStore = false;\n    this._pendingData.forEach(function (data) {\n      if (data.kind === 'payload') {\n        var payloadInvalidatedStore = _this2._publishSourceFromPayload(data);\n        invalidatedStore = invalidatedStore || payloadInvalidatedStore;\n      } else if (data.kind === 'source') {\n        var source = data.source;\n        _this2._store.publish(source);\n      } else {\n        var updater = data.updater;\n        var sink = RelayRecordSource.create();\n        var mutator = new RelayRecordSourceMutator(_this2._store.getSource(), sink);\n        var recordSourceProxy = new RelayRecordSourceProxy(mutator, _this2._getDataID, _this2._handlerProvider, _this2._missingFieldHandlers);\n        applyWithGuard(updater, null, [recordSourceProxy], null, 'RelayPublishQueue:commitData');\n        invalidatedStore = invalidatedStore || recordSourceProxy.isStoreMarkedForInvalidation();\n        var idsMarkedForInvalidation = recordSourceProxy.getIDsMarkedForInvalidation();\n        _this2._store.publish(sink, idsMarkedForInvalidation);\n      }\n    });\n    this._pendingData.clear();\n    return invalidatedStore;\n  }\n\n  /**\n   * Note that unlike _commitData, _applyUpdates will NOT return a boolean\n   * indicating if the store was globally invalidated, since invalidating the\n   * store during an optimistic update is a no-op.\n   */;\n  _proto._applyUpdates = function _applyUpdates() {\n    var _this3 = this;\n    var sink = RelayRecordSource.create();\n    var mutator = new RelayRecordSourceMutator(this._store.getSource(), sink);\n    var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, this._handlerProvider, this._missingFieldHandlers);\n\n    // $FlowFixMe[unclear-type] see explanation above.\n    var processUpdate = function processUpdate(optimisticUpdate) {\n      if (optimisticUpdate.storeUpdater) {\n        var storeUpdater = optimisticUpdate.storeUpdater;\n        applyWithGuard(storeUpdater, null, [recordSourceProxy], null, 'RelayPublishQueue:applyUpdates');\n      } else {\n        var operation = optimisticUpdate.operation,\n          payload = optimisticUpdate.payload,\n          updater = optimisticUpdate.updater;\n        var source = payload.source,\n          fieldPayloads = payload.fieldPayloads;\n        if (source) {\n          recordSourceProxy.publishSource(source, fieldPayloads);\n        }\n        if (updater) {\n          var selectorData;\n          if (source) {\n            selectorData = lookupSelector(source, operation.fragment);\n          }\n          var recordSourceSelectorProxy = new RelayRecordSourceSelectorProxy(mutator, recordSourceProxy, operation.fragment, _this3._missingFieldHandlers);\n          applyWithGuard(updater, null, [recordSourceSelectorProxy, selectorData], null, 'RelayPublishQueue:applyUpdates');\n        }\n      }\n    };\n\n    // rerun all updaters in case we are running a rebase\n    if (this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {\n      this._appliedOptimisticUpdates.forEach(processUpdate);\n    }\n\n    // apply any new updaters\n    if (this._pendingOptimisticUpdates.size) {\n      this._pendingOptimisticUpdates.forEach(function (optimisticUpdate) {\n        processUpdate(optimisticUpdate);\n        _this3._appliedOptimisticUpdates.add(optimisticUpdate);\n      });\n      this._pendingOptimisticUpdates.clear();\n    }\n    this._store.publish(sink);\n  };\n  return RelayPublishQueue;\n}();\nfunction lookupSelector(source, selector) {\n  var selectorData = RelayReader.read(source, selector).data;\n  if (process.env.NODE_ENV !== \"production\") {\n    var deepFreeze = require('../util/deepFreeze');\n    if (selectorData) {\n      deepFreeze(selectorData);\n    }\n  }\n  return selectorData;\n}\nmodule.exports = RelayPublishQueue;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require.ACTOR_CHANGE,\n  ALIASED_FRAGMENT_SPREAD = _require.ALIASED_FRAGMENT_SPREAD,\n  ALIASED_INLINE_FRAGMENT_SPREAD = _require.ALIASED_INLINE_FRAGMENT_SPREAD,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EDGE_TO_SERVER_OBJECT = _require.CLIENT_EDGE_TO_SERVER_OBJECT,\n  CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n  CONDITION = _require.CONDITION,\n  DEFER = _require.DEFER,\n  FLIGHT_FIELD = _require.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n  INLINE_DATA_FRAGMENT_SPREAD = _require.INLINE_DATA_FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n  LINKED_FIELD = _require.LINKED_FIELD,\n  MODULE_IMPORT = _require.MODULE_IMPORT,\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER,\n  RELAY_RESOLVER = _require.RELAY_RESOLVER,\n  REQUIRED_FIELD = _require.REQUIRED_FIELD,\n  SCALAR_FIELD = _require.SCALAR_FIELD,\n  STREAM = _require.STREAM;\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require2 = require('./experimental-live-resolvers/LiveResolverSuspenseSentinel'),\n  isSuspenseSentinel = _require2.isSuspenseSentinel;\nvar RelayConcreteVariables = require('./RelayConcreteVariables');\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayStoreReactFlightUtils'),\n  getReactFlightClientResponse = _require3.getReactFlightClientResponse;\nvar _require4 = require('./RelayStoreUtils'),\n  CLIENT_EDGE_TRAVERSAL_PATH = _require4.CLIENT_EDGE_TRAVERSAL_PATH,\n  FRAGMENT_OWNER_KEY = _require4.FRAGMENT_OWNER_KEY,\n  FRAGMENT_PROP_NAME_KEY = _require4.FRAGMENT_PROP_NAME_KEY,\n  FRAGMENTS_KEY = _require4.FRAGMENTS_KEY,\n  ID_KEY = _require4.ID_KEY,\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT = _require4.IS_WITHIN_UNMATCHED_TYPE_REFINEMENT,\n  MODULE_COMPONENT_KEY = _require4.MODULE_COMPONENT_KEY,\n  ROOT_ID = _require4.ROOT_ID,\n  getArgumentValues = _require4.getArgumentValues,\n  getModuleComponentKey = _require4.getModuleComponentKey,\n  getStorageKey = _require4.getStorageKey;\nvar _require5 = require('./ResolverCache'),\n  NoopResolverCache = _require5.NoopResolverCache;\nvar _require6 = require('./ResolverFragments'),\n  RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL = _require6.RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL,\n  withResolverContext = _require6.withResolverContext;\nvar _require7 = require('./TypeID'),\n  generateTypeID = _require7.generateTypeID;\nvar invariant = require('invariant');\nfunction read(recordSource, selector, resolverCache) {\n  var reader = new RelayReader(recordSource, selector, resolverCache !== null && resolverCache !== void 0 ? resolverCache : new NoopResolverCache());\n  return reader.read();\n}\n\n/**\n * @private\n */\nvar RelayReader = /*#__PURE__*/function () {\n  function RelayReader(recordSource, selector, resolverCache) {\n    var _selector$clientEdgeT;\n    this._clientEdgeTraversalPath = RelayFeatureFlags.ENABLE_CLIENT_EDGES && (_selector$clientEdgeT = selector.clientEdgeTraversalPath) !== null && _selector$clientEdgeT !== void 0 && _selector$clientEdgeT.length ? (0, _toConsumableArray2[\"default\"])(selector.clientEdgeTraversalPath) : [];\n    this._missingClientEdges = [];\n    this._missingLiveResolverFields = [];\n    this._isMissingData = false;\n    this._isWithinUnmatchedTypeRefinement = false;\n    this._missingRequiredFields = null;\n    this._owner = selector.owner;\n    this._recordSource = recordSource;\n    this._seenRecords = new Set();\n    this._selector = selector;\n    this._variables = selector.variables;\n    this._resolverCache = resolverCache;\n    this._resolverErrors = [];\n    this._fragmentName = selector.node.name;\n    this._updatedDataIDs = new Set();\n  }\n  var _proto = RelayReader.prototype;\n  _proto.read = function read() {\n    var _this$_selector = this._selector,\n      node = _this$_selector.node,\n      dataID = _this$_selector.dataID,\n      isWithinUnmatchedTypeRefinement = _this$_selector.isWithinUnmatchedTypeRefinement;\n    var abstractKey = node.abstractKey;\n    var record = this._recordSource.get(dataID);\n\n    // Relay historically allowed child fragments to be read even if the root object\n    // did not match the type of the fragment: either the root object has a different\n    // concrete type than the fragment (for concrete fragments) or the root object does\n    // not conform to the interface/union for abstract fragments.\n    // For suspense purposes, however, we want to accurately compute whether any data\n    // is missing: but if the fragment type doesn't match (or a parent type didn't\n    // match), then no data is expected to be present.\n\n    // By default data is expected to be present unless this selector was read out\n    // from within a non-matching type refinement in a parent fragment:\n    var isDataExpectedToBePresent = !isWithinUnmatchedTypeRefinement;\n\n    // If this is a concrete fragment and the concrete type of the record does not\n    // match, then no data is expected to be present.\n    if (isDataExpectedToBePresent && abstractKey == null && record != null) {\n      var recordType = RelayModernRecord.getType(record);\n      if (recordType !== node.type &&\n      // The root record type is a special `__Root` type and may not match the\n      // type on the ast, so ignore type mismatches at the root.\n      // We currently detect whether we're at the root by checking against ROOT_ID,\n      // but this does not work for mutations/subscriptions which generate unique\n      // root ids. This is acceptable in practice as we don't read data for mutations/\n      // subscriptions in a situation where we would use isMissingData to decide whether\n      // to suspend or not.\n      // TODO T96653810: Correctly detect reading from root of mutation/subscription\n      dataID !== ROOT_ID) {\n        isDataExpectedToBePresent = false;\n      }\n    }\n\n    // If this is an abstract fragment (and the precise refinement GK is enabled)\n    // then data is only expected to be present if the record type is known to\n    // implement the interface. If we aren't sure whether the record implements\n    // the interface, that itself constitutes \"expected\" data being missing.\n    if (isDataExpectedToBePresent && abstractKey != null && record != null) {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n      if (implementsInterface === false) {\n        // Type known to not implement the interface\n        isDataExpectedToBePresent = false;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._isMissingData = true;\n      }\n    }\n    this._isWithinUnmatchedTypeRefinement = !isDataExpectedToBePresent;\n    var data = this._traverse(node, dataID, null);\n    if (this._updatedDataIDs.size > 0) {\n      this._resolverCache.notifyUpdatedSubscribers(this._updatedDataIDs);\n      this._updatedDataIDs.clear();\n    }\n    return {\n      data: data,\n      isMissingData: this._isMissingData && isDataExpectedToBePresent,\n      missingClientEdges: RelayFeatureFlags.ENABLE_CLIENT_EDGES && this._missingClientEdges.length ? this._missingClientEdges : null,\n      missingLiveResolverFields: this._missingLiveResolverFields,\n      seenRecords: this._seenRecords,\n      selector: this._selector,\n      missingRequiredFields: this._missingRequiredFields,\n      relayResolverErrors: this._resolverErrors\n    };\n  };\n  _proto._markDataAsMissing = function _markDataAsMissing() {\n    this._isMissingData = true;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES && this._clientEdgeTraversalPath.length) {\n      var top = this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1];\n      // Top can be null if we've traversed past a client edge into an ordinary\n      // client extension field; we never want to fetch in response to missing\n      // data off of a client extension field.\n      if (top !== null) {\n        this._missingClientEdges.push({\n          request: top.readerClientEdge.operation,\n          clientEdgeDestinationID: top.clientEdgeDestinationID\n        });\n      }\n    }\n  };\n  _proto._traverse = function _traverse(node, dataID, prevData) {\n    var record = this._recordSource.get(dataID);\n    this._seenRecords.add(dataID);\n    if (record == null) {\n      if (record === undefined) {\n        this._markDataAsMissing();\n      }\n      return record;\n    }\n    var data = prevData || {};\n    var hadRequiredData = this._traverseSelections(node.selections, record, data);\n    return hadRequiredData ? data : null;\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._maybeReportUnexpectedNull = function _maybeReportUnexpectedNull(fieldPath, action, _record) {\n    var _this$_missingRequire;\n    if (((_this$_missingRequire = this._missingRequiredFields) === null || _this$_missingRequire === void 0 ? void 0 : _this$_missingRequire.action) === 'THROW') {\n      // Chained @required directives may cause a parent `@required(action:\n      // THROW)` field to become null, so the first missing field we\n      // encounter is likely to be the root cause of the error.\n      return;\n    }\n    var owner = this._fragmentName;\n    switch (action) {\n      case 'THROW':\n        this._missingRequiredFields = {\n          action: action,\n          field: {\n            path: fieldPath,\n            owner: owner\n          }\n        };\n        return;\n      case 'LOG':\n        if (this._missingRequiredFields == null) {\n          this._missingRequiredFields = {\n            action: action,\n            fields: [{\n              path: fieldPath,\n              owner: owner\n            }]\n          };\n        } else {\n          this._missingRequiredFields = {\n            action: action,\n            fields: [].concat((0, _toConsumableArray2[\"default\"])(this._missingRequiredFields.fields), [{\n              path: fieldPath,\n              owner: owner\n            }])\n          };\n        }\n        return;\n      default:\n        action;\n    }\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, record, data) /* had all expected data */{\n    for (var i = 0; i < selections.length; i++) {\n      var selection = selections[i];\n      switch (selection.kind) {\n        case REQUIRED_FIELD:\n          {\n            var fieldValue = this._readRequiredField(selection, record, data);\n            if (fieldValue == null) {\n              var action = selection.action;\n              if (action !== 'NONE') {\n                this._maybeReportUnexpectedNull(selection.path, action, record);\n              }\n              // We are going to throw, or our parent is going to get nulled out.\n              // Either way, sibling values are going to be ignored, so we can\n              // bail early here as an optimization.\n              return false;\n            }\n            break;\n          }\n        case SCALAR_FIELD:\n          this._readScalar(selection, record, data);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            this._readPluralLink(selection, record, data);\n          } else {\n            this._readLink(selection, record, data);\n          }\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            var hasExpectedData = this._traverseSelections(selection.selections, record, data);\n            if (!hasExpectedData) {\n              return false;\n            }\n          }\n          break;\n        case INLINE_FRAGMENT:\n          {\n            if (this._readInlineFragment(selection, record, data) === false) {\n              return false;\n            }\n            break;\n          }\n        case RELAY_LIVE_RESOLVER:\n        case RELAY_RESOLVER:\n          {\n            if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n              throw new Error('Relay Resolver fields are not yet supported.');\n            }\n            this._readResolverField(selection, record, data);\n            break;\n          }\n        case FRAGMENT_SPREAD:\n          this._createFragmentPointer(selection, record, data);\n          break;\n        case ALIASED_FRAGMENT_SPREAD:\n          data[selection.name] = this._createAliasedFragmentSpread(selection, record);\n          break;\n        case ALIASED_INLINE_FRAGMENT_SPREAD:\n          {\n            var _fieldValue = this._readInlineFragment(selection.fragment, record, {});\n            if (_fieldValue === false) {\n              _fieldValue = null;\n            }\n            data[selection.name] = _fieldValue;\n            break;\n          }\n        case MODULE_IMPORT:\n          this._readModuleImport(selection, record, data);\n          break;\n        case INLINE_DATA_FRAGMENT_SPREAD:\n          this._createInlineDataOrResolverFragmentPointer(selection, record, data);\n          break;\n        case DEFER:\n        case CLIENT_EXTENSION:\n          {\n            var isMissingData = this._isMissingData;\n            var alreadyMissingClientEdges = this._missingClientEdges.length;\n            if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n              this._clientEdgeTraversalPath.push(null);\n            }\n            var _hasExpectedData = this._traverseSelections(selection.selections, record, data);\n            // The only case where we want to suspend due to missing data off of\n            // a client extension is if we reached a client edge that we might be\n            // able to fetch, or there is a missing data in one of the live resolvers.\n            this._isMissingData = isMissingData || this._missingClientEdges.length > alreadyMissingClientEdges || this._missingLiveResolverFields.length > 0;\n            if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n              this._clientEdgeTraversalPath.pop();\n            }\n            if (!_hasExpectedData) {\n              return false;\n            }\n            break;\n          }\n        case STREAM:\n          {\n            var _hasExpectedData2 = this._traverseSelections(selection.selections, record, data);\n            if (!_hasExpectedData2) {\n              return false;\n            }\n            break;\n          }\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            this._readFlightField(selection, record, data);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case ACTOR_CHANGE:\n          this._readActorChange(selection, record, data);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n        case CLIENT_EDGE_TO_SERVER_OBJECT:\n          if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n            this._readClientEdge(selection, record, data);\n          } else {\n            throw new Error('Client edges are not yet supported.');\n          }\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    }\n    return true;\n  };\n  _proto._readRequiredField = function _readRequiredField(selection, record, data) {\n    switch (selection.field.kind) {\n      case SCALAR_FIELD:\n        return this._readScalar(selection.field, record, data);\n      case LINKED_FIELD:\n        if (selection.field.plural) {\n          return this._readPluralLink(selection.field, record, data);\n        } else {\n          return this._readLink(selection.field, record, data);\n        }\n      case RELAY_RESOLVER:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readResolverField(selection.field, record, data);\n      case RELAY_LIVE_RESOLVER:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readResolverField(selection.field, record, data);\n      case CLIENT_EDGE_TO_CLIENT_OBJECT:\n      case CLIENT_EDGE_TO_SERVER_OBJECT:\n        if (!RelayFeatureFlags.ENABLE_RELAY_RESOLVERS) {\n          throw new Error('Relay Resolver fields are not yet supported.');\n        }\n        return this._readClientEdge(selection.field, record, data);\n      default:\n        selection.field.kind;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._readResolverField = function _readResolverField(field, record, data) {\n    var _this = this;\n    var _field$alias;\n    var fragment = field.fragment;\n    var parentRecordID = RelayModernRecord.getDataID(record);\n\n    // Found when reading the resolver fragment, which can happen either when\n    // evaluating the resolver and it calls readFragment, or when checking if the\n    // inputs have changed since a previous evaluation:\n    var snapshot;\n\n    // The function `getDataForResolverFragment` serves two purposes:\n    // 1. To memoize reads of the resolver's root fragment. This is important\n    //    because we may read it twice. Once to check if the results have changed\n    //    since last read, and once when we actually evaluate.\n    // 2. To intercept the snapshot so that it can be cached by the resolver\n    //    cache. This is what enables the change detection described in #1.\n    //\n    // Note: In the future this can be moved into the ResolverCache.\n    var getDataForResolverFragment = function getDataForResolverFragment(singularReaderSelector) {\n      if (snapshot != null) {\n        // It was already read when checking for input staleness; no need to read it again.\n        // Note that the variables like fragmentSeenRecordIDs in the outer closure will have\n        // already been set and will still be used in this case.\n        return {\n          data: snapshot.data,\n          isMissingData: snapshot.isMissingData\n        };\n      }\n      snapshot = read(_this._recordSource, singularReaderSelector, _this._resolverCache);\n      return {\n        data: snapshot.data,\n        isMissingData: snapshot.isMissingData\n      };\n    };\n\n    // This function `evaluate` tells the resolver cache how to read this\n    // resolver. It returns an `EvaluationResult` which gives the resolver cache:\n    // * `resolverResult` The value returned by the resolver function\n    // * `snapshot` The snapshot returned when reading the resolver's root fragment (if it has one)\n    // * `error` If the resolver throws, its error is caught (inside\n    //   `getResolverValue`) and converted into an error object.\n    var evaluate = function evaluate() {\n      if (fragment != null) {\n        var key = {\n          __id: parentRecordID,\n          __fragmentOwner: _this._owner,\n          __fragments: (0, _defineProperty2[\"default\"])({}, fragment.name, fragment.args ? getArgumentValues(fragment.args, _this._variables) : {})\n        };\n        var resolverContext = {\n          getDataForResolverFragment: getDataForResolverFragment\n        };\n        return withResolverContext(resolverContext, function () {\n          var _getResolverValue = getResolverValue(field, _this._variables, key, _this._fragmentName),\n            resolverResult = _getResolverValue[0],\n            resolverError = _getResolverValue[1];\n          return {\n            resolverResult: resolverResult,\n            snapshot: snapshot,\n            error: resolverError\n          };\n        });\n      } else {\n        var _getResolverValue2 = getResolverValue(field, _this._variables, null, _this._fragmentName),\n          resolverResult = _getResolverValue2[0],\n          _resolverError = _getResolverValue2[1];\n        return {\n          resolverResult: resolverResult,\n          snapshot: undefined,\n          error: _resolverError\n        };\n      }\n    };\n    var _this$_resolverCache$ = this._resolverCache.readFromCacheOrEvaluate(parentRecordID, field, this._variables, evaluate, getDataForResolverFragment),\n      result = _this$_resolverCache$[0],\n      seenRecord = _this$_resolverCache$[1],\n      resolverError = _this$_resolverCache$[2],\n      cachedSnapshot = _this$_resolverCache$[3],\n      suspenseID = _this$_resolverCache$[4],\n      updatedDataIDs = _this$_resolverCache$[5];\n\n    // The resolver's root fragment (if there is one) may be missing data, have\n    // errors, or be in a suspended state. Here we propagate those cases\n    // upwards to mimic the behavior of having traversed into that fragment directly.\n    if (cachedSnapshot != null) {\n      if (cachedSnapshot.missingRequiredFields != null) {\n        this._addMissingRequiredFields(cachedSnapshot.missingRequiredFields);\n      }\n      if (cachedSnapshot.missingClientEdges != null) {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.missingClientEdges),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var missing = _step.value;\n            this._missingClientEdges.push(missing);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      if (cachedSnapshot.missingLiveResolverFields != null) {\n        this._isMissingData = this._isMissingData || cachedSnapshot.missingLiveResolverFields.length > 0;\n        var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.missingLiveResolverFields),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var missingResolverField = _step2.value;\n            this._missingLiveResolverFields.push(missingResolverField);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(cachedSnapshot.relayResolverErrors),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var error = _step3.value;\n          this._resolverErrors.push(error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._isMissingData = this._isMissingData || cachedSnapshot.isMissingData;\n    }\n\n    // If the resolver errored, we track that as part of our traversal so that\n    // the errors can be attached to this read's snapshot. This allows the error\n    // to be logged.\n    if (resolverError) {\n      this._resolverErrors.push(resolverError);\n    }\n\n    // The resolver itself creates a record in the store. We record that we've\n    // read this record so that subscribers to this snapshot also subscribe to\n    // this resolver.\n    if (seenRecord != null) {\n      this._seenRecords.add(seenRecord);\n    }\n\n    // If this resolver, or a dependency of this resolver, has suspended, we\n    // need to report that in our snapshot. The `suspenseID` is the key in to\n    // store where the suspended LiveState value lives. This ID allows readers\n    // of the snapshot to subscribe to updates on that live resolver so that\n    // they know when to unsuspend.\n    if (suspenseID != null) {\n      this._isMissingData = true;\n      this._missingLiveResolverFields.push({\n        path: \"\".concat(this._fragmentName, \".\").concat(field.path),\n        liveStateID: suspenseID\n      });\n    }\n    if (updatedDataIDs != null) {\n      var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(updatedDataIDs),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var recordID = _step4.value;\n          this._updatedDataIDs.add(recordID);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n    var applicationName = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    data[applicationName] = result;\n    return result;\n  };\n  _proto._readClientEdge = function _readClientEdge(field, record, data) {\n    var _backingField$alias;\n    var backingField = field.backingField;\n\n    // Because ReaderClientExtension doesn't have `alias` or `name` and so I don't know\n    // how to get its applicationName or storageKey yet:\n    !(backingField.kind !== 'ClientExtension') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client extension client edges are not yet implemented.') : invariant(false) : void 0;\n    var applicationName = (_backingField$alias = backingField.alias) !== null && _backingField$alias !== void 0 ? _backingField$alias : backingField.name;\n    var backingFieldData = {};\n    this._traverseSelections([backingField], record, backingFieldData);\n    // At this point, backingFieldData is an object with a single key (applicationName)\n    // whose value is the value returned from the resolver, or a suspense sentinel.\n\n    var clientEdgeResolverResponse = backingFieldData[applicationName];\n    if (clientEdgeResolverResponse == null || isSuspenseSentinel(clientEdgeResolverResponse)) {\n      data[applicationName] = clientEdgeResolverResponse;\n      return;\n    }\n    var validClientEdgeResolverResponse = assertValidClientEdgeResolverResponse(field, clientEdgeResolverResponse);\n    switch (validClientEdgeResolverResponse.kind) {\n      case 'PluralConcrete':\n        var storeIDs = getStoreIDsForPluralClientEdgeResolver(field, validClientEdgeResolverResponse.ids, this._resolverCache);\n        this._clientEdgeTraversalPath.push(null);\n        data[applicationName] = this._readLinkedIds(field.linkedField, storeIDs, record, data);\n        this._clientEdgeTraversalPath.pop();\n        break;\n      case 'SingularConcrete':\n        var _getStoreIDAndTravers = getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver(field, validClientEdgeResolverResponse.id, this._resolverCache),\n          storeID = _getStoreIDAndTravers[0],\n          traversalPathSegment = _getStoreIDAndTravers[1];\n        this._clientEdgeTraversalPath.push(traversalPathSegment);\n        var prevData = data[applicationName];\n        !(prevData == null || typeof prevData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n        data[applicationName] = this._traverse(field.linkedField, storeID,\n        // $FlowFixMe[incompatible-variance]\n        prevData);\n        this._clientEdgeTraversalPath.pop();\n        break;\n      default:\n        validClientEdgeResolverResponse.kind;\n    }\n  };\n  _proto._readFlightField = function _readFlightField(field, record, data) {\n    var _field$alias2;\n    var applicationName = (_field$alias2 = field.alias) !== null && _field$alias2 !== void 0 ? _field$alias2 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var reactFlightClientResponseRecordID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (reactFlightClientResponseRecordID == null) {\n      data[applicationName] = reactFlightClientResponseRecordID;\n      if (reactFlightClientResponseRecordID === undefined) {\n        this._markDataAsMissing();\n      }\n      return reactFlightClientResponseRecordID;\n    }\n    var reactFlightClientResponseRecord = this._recordSource.get(reactFlightClientResponseRecordID);\n    this._seenRecords.add(reactFlightClientResponseRecordID);\n    if (reactFlightClientResponseRecord == null) {\n      data[applicationName] = reactFlightClientResponseRecord;\n      if (reactFlightClientResponseRecord === undefined) {\n        this._markDataAsMissing();\n      }\n      return reactFlightClientResponseRecord;\n    }\n    var clientResponse = getReactFlightClientResponse(reactFlightClientResponseRecord);\n    data[applicationName] = clientResponse;\n    return clientResponse;\n  };\n  _proto._readScalar = function _readScalar(field, record, data) {\n    var _field$alias3;\n    var applicationName = (_field$alias3 = field.alias) !== null && _field$alias3 !== void 0 ? _field$alias3 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var value = RelayModernRecord.getValue(record, storageKey);\n    if (value === undefined) {\n      this._markDataAsMissing();\n    }\n    data[applicationName] = value;\n    return value;\n  };\n  _proto._readLink = function _readLink(field, record, data) {\n    var _field$alias4;\n    var applicationName = (_field$alias4 = field.alias) !== null && _field$alias4 !== void 0 ? _field$alias4 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      data[applicationName] = linkedID;\n      if (linkedID === undefined) {\n        this._markDataAsMissing();\n      }\n      return linkedID;\n    }\n    var prevData = data[applicationName];\n    !(prevData == null || typeof prevData === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n    // $FlowFixMe[incompatible-variance]\n    var value = this._traverse(field, linkedID, prevData);\n    data[applicationName] = value;\n    return value;\n  };\n  _proto._readActorChange = function _readActorChange(field, record, data) {\n    var _field$alias5;\n    var applicationName = (_field$alias5 = field.alias) !== null && _field$alias5 !== void 0 ? _field$alias5 : field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var externalRef = RelayModernRecord.getActorLinkedRecordID(record, storageKey);\n    if (externalRef == null) {\n      data[applicationName] = externalRef;\n      if (externalRef === undefined) {\n        this._markDataAsMissing();\n      }\n      return data[applicationName];\n    }\n    var actorIdentifier = externalRef[0],\n      dataID = externalRef[1];\n    var fragmentRef = {};\n    this._createFragmentPointer(field.fragmentSpread, {\n      __id: dataID\n    }, fragmentRef);\n    data[applicationName] = {\n      __fragmentRef: fragmentRef,\n      __viewer: actorIdentifier\n    };\n    return data[applicationName];\n  };\n  _proto._readPluralLink = function _readPluralLink(field, record, data) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    return this._readLinkedIds(field, linkedIDs, record, data);\n  };\n  _proto._readLinkedIds = function _readLinkedIds(field, linkedIDs, record, data) {\n    var _this2 = this;\n    var _field$alias6;\n    var applicationName = (_field$alias6 = field.alias) !== null && _field$alias6 !== void 0 ? _field$alias6 : field.name;\n    if (linkedIDs == null) {\n      data[applicationName] = linkedIDs;\n      if (linkedIDs === undefined) {\n        this._markDataAsMissing();\n      }\n      return linkedIDs;\n    }\n    var prevData = data[applicationName];\n    !(prevData == null || Array.isArray(prevData)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an array, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevData) : invariant(false) : void 0;\n    var linkedArray = prevData || [];\n    linkedIDs.forEach(function (linkedID, nextIndex) {\n      if (linkedID == null) {\n        if (linkedID === undefined) {\n          _this2._markDataAsMissing();\n        }\n        // $FlowFixMe[cannot-write]\n        linkedArray[nextIndex] = linkedID;\n        return;\n      }\n      var prevItem = linkedArray[nextIndex];\n      !(prevItem == null || typeof prevItem === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader(): Expected data for field `%s` on record `%s` ' + 'to be an object, got `%s`.', applicationName, RelayModernRecord.getDataID(record), prevItem) : invariant(false) : void 0;\n      // $FlowFixMe[cannot-write]\n      // $FlowFixMe[incompatible-variance]\n      linkedArray[nextIndex] = _this2._traverse(field, linkedID, prevItem);\n    });\n    data[applicationName] = linkedArray;\n    return linkedArray;\n  }\n\n  /**\n   * Reads a ReaderModuleImport, which was generated from using the @module\n   * directive.\n   */;\n  _proto._readModuleImport = function _readModuleImport(moduleImport, record, data) {\n    // Determine the component module from the store: if the field is missing\n    // it means we don't know what component to render the match with.\n    var componentKey = getModuleComponentKey(moduleImport.documentName);\n    var component = RelayModernRecord.getValue(record, componentKey);\n    if (component == null) {\n      if (component === undefined) {\n        this._markDataAsMissing();\n      }\n      return;\n    }\n\n    // Otherwise, read the fragment and module associated to the concrete\n    // type, and put that data with the result:\n    // - For the matched fragment, create the relevant fragment pointer and add\n    //   the expected fragmentPropName\n    // - For the matched module, create a reference to the module\n    this._createFragmentPointer({\n      kind: 'FragmentSpread',\n      name: moduleImport.fragmentName,\n      args: moduleImport.args\n    }, record, data);\n    data[FRAGMENT_PROP_NAME_KEY] = moduleImport.fragmentPropName;\n    data[MODULE_COMPONENT_KEY] = component;\n  };\n  _proto._createAliasedFragmentSpread = function _createAliasedFragmentSpread(namedFragmentSpread, record) {\n    var abstractKey = namedFragmentSpread.abstractKey;\n    if (abstractKey == null) {\n      // concrete type refinement: only read data if the type exactly matches\n      var typeName = RelayModernRecord.getType(record);\n      if (typeName == null || typeName !== namedFragmentSpread.type) {\n        // This selection does not match the fragment spread. Do nothing.\n        return null;\n      }\n    } else {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n      if (implementsInterface === false) {\n        // Type known to not implement the interface, no data expected\n        return null;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._markDataAsMissing();\n        // Judgement call here. In some cases this will cause us to hide data that is actually valid.\n        return undefined;\n      }\n    }\n    var fieldData = {};\n    this._createFragmentPointer(namedFragmentSpread.fragment, record, fieldData);\n    return fieldData;\n  }\n\n  // Has three possible return values:\n  // * null: The type condition did not match\n  // * undefined: We are missing data\n  // * false: The selection contained missing @required fields\n  // * data: The successfully populated SelectorData object\n  ;\n  _proto._readInlineFragment = function _readInlineFragment(inlineFragment, record, data) {\n    var abstractKey = inlineFragment.abstractKey;\n    if (abstractKey == null) {\n      // concrete type refinement: only read data if the type exactly matches\n      var typeName = RelayModernRecord.getType(record);\n      if (typeName == null || typeName !== inlineFragment.type) {\n        // This selection does not match the fragment spread. Do nothing.\n        return null;\n      } else {\n        var hasExpectedData = this._traverseSelections(inlineFragment.selections, record, data);\n        if (!hasExpectedData) {\n          // Bubble up null due to a missing @required field\n          return false;\n        }\n      }\n    } else {\n      var implementsInterface = this._implementsInterface(record, abstractKey);\n\n      // store flags to reset after reading\n      var parentIsMissingData = this._isMissingData;\n      var parentIsWithinUnmatchedTypeRefinement = this._isWithinUnmatchedTypeRefinement;\n      this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement || implementsInterface === false;\n\n      // @required is not allowed within inline fragments on abstract types, so\n      // we can ignore the `hasMissingData` result of `_traverseSelections`.\n      this._traverseSelections(inlineFragment.selections, record, data);\n\n      // Reset\n      this._isWithinUnmatchedTypeRefinement = parentIsWithinUnmatchedTypeRefinement;\n      if (implementsInterface === false) {\n        // Type known to not implement the interface, no data expected\n        this._isMissingData = parentIsMissingData;\n        return undefined;\n      } else if (implementsInterface == null) {\n        // Don't know if the type implements the interface or not\n        this._markDataAsMissing();\n        return null;\n      }\n    }\n    return data;\n  };\n  _proto._createFragmentPointer = function _createFragmentPointer(fragmentSpread, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n    if (fragmentPointers == null) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n    !(typeof fragmentPointers === 'object' && fragmentPointers != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers) : invariant(false) : void 0;\n    if (data[ID_KEY] == null) {\n      data[ID_KEY] = RelayModernRecord.getDataID(record);\n    }\n    // $FlowFixMe[cannot-write] - writing into read-only field\n    fragmentPointers[fragmentSpread.name] = fragmentSpread.args ? getArgumentValues(fragmentSpread.args, this._variables) : {};\n    data[FRAGMENT_OWNER_KEY] = this._owner;\n    data[IS_WITHIN_UNMATCHED_TYPE_REFINEMENT] = this._isWithinUnmatchedTypeRefinement;\n    if (RelayFeatureFlags.ENABLE_CLIENT_EDGES) {\n      if (this._clientEdgeTraversalPath.length > 0 && this._clientEdgeTraversalPath[this._clientEdgeTraversalPath.length - 1] !== null) {\n        data[CLIENT_EDGE_TRAVERSAL_PATH] = (0, _toConsumableArray2[\"default\"])(this._clientEdgeTraversalPath);\n      }\n    }\n  };\n  _proto._createInlineDataOrResolverFragmentPointer = function _createInlineDataOrResolverFragmentPointer(fragmentSpreadOrFragment, record, data) {\n    var fragmentPointers = data[FRAGMENTS_KEY];\n    if (fragmentPointers == null) {\n      fragmentPointers = data[FRAGMENTS_KEY] = {};\n    }\n    !(typeof fragmentPointers === 'object' && fragmentPointers != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReader: Expected fragment spread data to be an object, got `%s`.', fragmentPointers) : invariant(false) : void 0;\n    if (data[ID_KEY] == null) {\n      data[ID_KEY] = RelayModernRecord.getDataID(record);\n    }\n    var inlineData = {};\n    var parentFragmentName = this._fragmentName;\n    this._fragmentName = fragmentSpreadOrFragment.name;\n    var parentVariables = this._variables;\n\n    // If the inline fragment spread has arguments, we need to temporarily\n    // switch this._variables to include the fragment spread's arguments\n    // for the duration of its traversal.\n    var argumentVariables = fragmentSpreadOrFragment.args ? getArgumentValues(fragmentSpreadOrFragment.args, this._variables) : {};\n    this._variables = RelayConcreteVariables.getFragmentVariables(fragmentSpreadOrFragment, this._owner.variables, argumentVariables);\n    this._traverseSelections(fragmentSpreadOrFragment.selections, record, inlineData);\n\n    // Put the parent variables back\n    this._variables = parentVariables;\n    this._fragmentName = parentFragmentName;\n    // $FlowFixMe[cannot-write] - writing into read-only field\n    fragmentPointers[fragmentSpreadOrFragment.name] = inlineData;\n  };\n  _proto._addMissingRequiredFields = function _addMissingRequiredFields(additional) {\n    if (this._missingRequiredFields == null) {\n      this._missingRequiredFields = additional;\n      return;\n    }\n    if (this._missingRequiredFields.action === 'THROW') {\n      return;\n    }\n    if (additional.action === 'THROW') {\n      this._missingRequiredFields = additional;\n      return;\n    }\n    this._missingRequiredFields = {\n      action: 'LOG',\n      fields: [].concat((0, _toConsumableArray2[\"default\"])(this._missingRequiredFields.fields), (0, _toConsumableArray2[\"default\"])(additional.fields))\n    };\n  };\n  _proto._implementsInterface = function _implementsInterface(record, abstractKey) {\n    var typeName = RelayModernRecord.getType(record);\n    var typeRecord = this._recordSource.get(generateTypeID(typeName));\n    var implementsInterface = typeRecord != null ? RelayModernRecord.getValue(typeRecord, abstractKey) : null;\n    // $FlowFixMe Casting record value\n    return implementsInterface;\n  };\n  return RelayReader;\n}(); // Constructs the arguments for a resolver function and then evaluates it.\n//\n// If the resolver's fragment is missing data (query is in-flight, a dependency\n// field is suspending, or is missing required fields) then `readFragment` will\n// throw `RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL`. This function ensures that\n// we catch that error and instead create an error object which can be\n// propagated to the reader snapshot.\nfunction getResolverValue(field, variables, fragmentKey, ownerName) {\n  // Support for languages that work (best) with ES6 modules, such as TypeScript.\n  var resolverFunction = typeof field.resolverModule === 'function' ? field.resolverModule : field.resolverModule[\"default\"];\n  var resolverResult = null;\n  var resolverError = null;\n  try {\n    var resolverFunctionArgs = [];\n    if (field.fragment != null) {\n      resolverFunctionArgs.push(fragmentKey);\n    }\n    var args = field.args ? getArgumentValues(field.args, variables) : undefined;\n    resolverFunctionArgs.push(args);\n    resolverResult = resolverFunction.apply(null, resolverFunctionArgs);\n  } catch (e) {\n    if (e === RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL) {\n      resolverResult = undefined;\n    } else {\n      var _field$path;\n      // `field.path` is typed as nullable while we rollout compiler changes.\n      var path = (_field$path = field.path) !== null && _field$path !== void 0 ? _field$path : '[UNKNOWN]';\n      resolverError = {\n        field: {\n          path: path,\n          owner: ownerName\n        },\n        error: e\n      };\n    }\n  }\n  return [resolverResult, resolverError];\n}\nfunction assertValidClientEdgeResolverResponse(field, clientEdgeResolverResponse) {\n  if (field.linkedField.plural) {\n    !Array.isArray(clientEdgeResolverResponse) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected plural Client Edge Relay Resolver to return an array containing IDs or objects with shape {id}.') : invariant(false) : void 0;\n    return {\n      kind: 'PluralConcrete',\n      ids: clientEdgeResolverResponse.map(function (response) {\n        return extractIdFromResponse(response, 'Expected this plural Client Edge Relay Resolver to return an array containing IDs or objects with shape {id}.');\n      })\n    };\n  } else {\n    return {\n      kind: 'SingularConcrete',\n      id: extractIdFromResponse(clientEdgeResolverResponse, 'Expected this Client Edge Relay Resolver to return an ID of type `string` or an object with shape {id}.')\n    };\n  }\n}\n\n// For weak objects:\n// The return value of a client edge resolver is the entire object (though,\n// strong objects become DataIDs or arrays thereof). However, when being read\n// out, these raw objects are turned into DataIDs or arrays thereof.\n//\n// For strong objects:\n// For a singular field, the return value of a client edge resolver is a DataID\n// (i.e. a string). If the edge points to a client type, we namespace the\n// ID with the typename by calling resolverCache.ensureClientRecord.\nfunction getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver(field, clientEdgeResolverResponse, resolverCache) {\n  if (field.kind === CLIENT_EDGE_TO_CLIENT_OBJECT) {\n    if (field.backingField.normalizationInfo == null) {\n      var concreteType = field.concreteType;\n      !(concreteType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected at least one of backingField.normalizationInfo or field.concreteType to be non-null. ' + 'This indicates a bug in Relay.') : invariant(false) : void 0;\n      // @edgeTo case where we need to ensure that the record has `id` field\n      return [resolverCache.ensureClientRecord(clientEdgeResolverResponse, concreteType), null];\n    } else {\n      // The normalization process in LiveResolverCache should take care of generating the correct ID.\n      return [clientEdgeResolverResponse, null];\n    }\n  } else {\n    return [clientEdgeResolverResponse, {\n      readerClientEdge: field,\n      clientEdgeDestinationID: clientEdgeResolverResponse\n    }];\n  }\n}\n\n// For weak objects:\n// The return value of a client edge resolver is the entire object (though,\n// strong objects become DataIDs or arrays thereof). However, when being read\n// out, these raw objects are turned into DataIDs or arrays thereof.\n//\n// For strong objects:\n// For a plural field, the return value of a client edge resolver is an\n// array of DataID's. If the edge points to a client type, we namespace the\n// IDs with the typename by calling resolverCache.ensureClientRecord.\nfunction getStoreIDsForPluralClientEdgeResolver(field, clientEdgeResolverResponse, resolverCache) {\n  if (field.kind === CLIENT_EDGE_TO_CLIENT_OBJECT) {\n    if (field.backingField.normalizationInfo == null) {\n      var concreteType = field.concreteType;\n      !(concreteType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected at least one of backingField.normalizationInfo or field.concreteType to be non-null. ' + 'This indicates a bug in Relay.') : invariant(false) : void 0;\n      // @edgeTo case where we need to ensure that the record has `id` field\n      return clientEdgeResolverResponse.map(function (id) {\n        return resolverCache.ensureClientRecord(id, concreteType);\n      });\n    } else {\n      // The normalization process in LiveResolverCache should take care of generating the correct ID.\n      return clientEdgeResolverResponse;\n    }\n  } else {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Unexpected Client Edge to plural server type. This should be prevented by the compiler.') : invariant(false) : void 0;\n  }\n}\nfunction extractIdFromResponse(individualResponse, errorMessage) {\n  if (typeof individualResponse === 'string') {\n    return individualResponse;\n  } else if (typeof individualResponse === 'object' && individualResponse != null && typeof individualResponse.id === 'string') {\n    return individualResponse.id;\n  }\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, errorMessage) : invariant(false) : void 0;\n}\nmodule.exports = {\n  read: read\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar RelayRecordState = require('./RelayRecordState');\nvar EXISTENT = RelayRecordState.EXISTENT,\n  NONEXISTENT = RelayRecordState.NONEXISTENT,\n  UNKNOWN = RelayRecordState.UNKNOWN;\n\n/**\n * An implementation of the `MutableRecordSource` interface (defined in\n * `RelayStoreTypes`) that holds all records in memory (JS Map).\n */\nvar RelayRecordSource = /*#__PURE__*/function () {\n  function RelayRecordSource(records) {\n    var _this = this;\n    this._records = new Map();\n    if (records != null) {\n      Object.keys(records).forEach(function (key) {\n        _this._records.set(key, records[key]);\n      });\n    }\n  }\n  RelayRecordSource.create = function create(records) {\n    return new RelayRecordSource(records);\n  };\n  var _proto = RelayRecordSource.prototype;\n  _proto.clear = function clear() {\n    this._records = new Map();\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._records.set(dataID, null);\n  };\n  _proto.get = function get(dataID) {\n    return this._records.get(dataID);\n  };\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Array.from(this._records.keys());\n  };\n  _proto.getStatus = function getStatus(dataID) {\n    if (!this._records.has(dataID)) {\n      return UNKNOWN;\n    }\n    return this._records.get(dataID) == null ? NONEXISTENT : EXISTENT;\n  };\n  _proto.has = function has(dataID) {\n    return this._records.has(dataID);\n  };\n  _proto.remove = function remove(dataID) {\n    this._records[\"delete\"](dataID);\n  };\n  _proto.set = function set(dataID, record) {\n    this._records.set(dataID, record);\n  };\n  _proto.size = function size() {\n    return this._records.size;\n  };\n  _proto.toJSON = function toJSON() {\n    var obj = {};\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._records),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _step.value,\n          key = _step$value[0],\n          value = _step$value[1];\n        obj[key] = value;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return obj;\n  };\n  return RelayRecordSource;\n}();\nmodule.exports = RelayRecordSource;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayRecordState = {\n  /**\n   * Record exists (either fetched from the server or produced by a local,\n   * optimistic update).\n   */\n  EXISTENT: 'EXISTENT',\n  /**\n   * Record is known not to exist (either as the result of a mutation, or\n   * because the server returned `null` when queried for the record).\n   */\n  NONEXISTENT: 'NONEXISTENT',\n  /**\n   * Record State is unknown because it has not yet been fetched from the\n   * server.\n   */\n  UNKNOWN: 'UNKNOWN'\n};\nmodule.exports = RelayRecordState;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar getOperation = require('../util/getOperation');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\nvar getOutputTypeRecordIDs = require('./experimental-live-resolvers/getOutputTypeRecordIDs');\nvar _require = require('./RelayConcreteVariables'),\n  getLocalVariables = _require.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar RelayStoreReactFlightUtils = require('./RelayStoreReactFlightUtils');\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require2 = require('./TypeID'),\n  generateTypeID = _require2.generateTypeID;\nvar invariant = require('invariant');\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n  CONDITION = RelayConcreteNode.CONDITION,\n  CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n  CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n  DEFER = RelayConcreteNode.DEFER,\n  FLIGHT_FIELD = RelayConcreteNode.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n  LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n  MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n  LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n  SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n  SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n  STREAM = RelayConcreteNode.STREAM,\n  TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR,\n  RELAY_RESOLVER = RelayConcreteNode.RELAY_RESOLVER,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = RelayConcreteNode.CLIENT_EDGE_TO_CLIENT_OBJECT;\nvar ROOT_ID = RelayStoreUtils.ROOT_ID,\n  getStorageKey = RelayStoreUtils.getStorageKey,\n  getModuleOperationKey = RelayStoreUtils.getModuleOperationKey;\nfunction mark(recordSource, selector, references, operationLoader, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var marker = new RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents);\n  marker.mark(node, dataID);\n}\n\n/**\n * @private\n */\nvar RelayReferenceMarker = /*#__PURE__*/function () {\n  function RelayReferenceMarker(recordSource, variables, references, operationLoader, shouldProcessClientComponents) {\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._operationName = null;\n    this._recordSource = recordSource;\n    this._references = references;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n  var _proto = RelayReferenceMarker.prototype;\n  _proto.mark = function mark(node, dataID) {\n    if (node.kind === 'Operation' || node.kind === 'SplitOperation') {\n      this._operationName = node.name;\n    }\n    this._traverse(node, dataID);\n  };\n  _proto._traverse = function _traverse(node, dataID) {\n    this._references.add(dataID);\n    var record = this._recordSource.get(dataID);\n    if (record == null) {\n      return;\n    }\n    this._traverseSelections(node.selections, record);\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, record) {\n    var _this = this;\n    selections.forEach(function (selection) {\n      /* eslint-disable no-fallthrough */\n      switch (selection.kind) {\n        case ACTOR_CHANGE:\n          // TODO: T89695151 Support multi-actor record sources in RelayReferenceMarker.js\n          _this._traverseLink(selection.linkedField, record);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this._traversePluralLink(selection, record);\n          } else {\n            _this._traverseLink(selection, record);\n          }\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(_this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            _this._traverseSelections(selection.selections, record);\n          }\n          break;\n        case INLINE_FRAGMENT:\n          if (selection.abstractKey == null) {\n            var typeName = RelayModernRecord.getType(record);\n            if (typeName != null && typeName === selection.type ||\n            // Our root record has a special type of `__Root` which may not\n            // match the schema type of Query/Mutation or whatever the schema\n            // specifies.\n            //\n            // If we have an inline fragment on a concrete type within an\n            // operation root, and our query has been validated, we know that\n            // concrete type must match, since the operation selection must be\n            // on a concrete type.\n            typeName === RelayStoreUtils.ROOT_TYPE) {\n              _this._traverseSelections(selection.selections, record);\n            }\n          } else {\n            var _typeName = RelayModernRecord.getType(record);\n            var typeID = generateTypeID(_typeName);\n            _this._references.add(typeID);\n            _this._traverseSelections(selection.selections, record);\n          }\n          break;\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this._variables;\n          _this._variables = getLocalVariables(_this._variables, selection.fragment.argumentDefinitions, selection.args);\n          _this._traverseSelections(selection.fragment.selections, record);\n          _this._variables = prevVariables;\n          break;\n        case LINKED_HANDLE:\n          // The selections for a \"handle\" field are the same as those of the\n          // original linked field where the handle was applied. Reference marking\n          // therefore requires traversing the original field selections against\n          // the synthesized client field.\n          //\n          // TODO: Instead of finding the source field in `selections`, change\n          // the concrete structure to allow shared subtrees, and have the linked\n          // handle directly refer to the same selections as the LinkedField that\n          // it was split from.\n          var handleField = cloneRelayHandleSourceField(selection, selections, _this._variables);\n          if (handleField.plural) {\n            _this._traversePluralLink(handleField, record);\n          } else {\n            _this._traverseLink(handleField, record);\n          }\n          break;\n        case DEFER:\n        case STREAM:\n          _this._traverseSelections(selection.selections, record);\n          break;\n        case SCALAR_FIELD:\n        case SCALAR_HANDLE:\n          break;\n        case TYPE_DISCRIMINATOR:\n          {\n            var _typeName2 = RelayModernRecord.getType(record);\n            var _typeID = generateTypeID(_typeName2);\n            _this._references.add(_typeID);\n            break;\n          }\n        case MODULE_IMPORT:\n          _this._traverseModuleImport(selection, record);\n          break;\n        case CLIENT_EXTENSION:\n          _this._traverseSelections(selection.selections, record);\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            _this._traverseFlightField(selection, record);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case CLIENT_COMPONENT:\n          if (_this._shouldProcessClientComponents === false) {\n            break;\n          }\n          _this._traverseSelections(selection.fragment.selections, record);\n          break;\n        case RELAY_RESOLVER:\n          _this._traverseResolverField(selection, record);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          _this._traverseClientEdgeToClientObject(selection, record);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker: Unknown AST node `%s`.', selection) : invariant(false) : void 0;\n      }\n    });\n  };\n  _proto._traverseClientEdgeToClientObject = function _traverseClientEdgeToClientObject(field, record) {\n    var dataID = this._traverseResolverField(field.backingField, record);\n    if (dataID == null) {\n      return;\n    }\n    var resolverRecord = this._recordSource.get(dataID);\n    if (resolverRecord == null) {\n      return;\n    }\n    if (field.backingField.isOutputType) {\n      // Mark all @outputType record IDs\n      var outputTypeRecordIDs = getOutputTypeRecordIDs(resolverRecord);\n      if (outputTypeRecordIDs != null) {\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(outputTypeRecordIDs),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _dataID = _step.value;\n            this._references.add(_dataID);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    } else {\n      var linkedField = field.linkedField;\n      var concreteType = linkedField.concreteType;\n      if (concreteType == null) {\n        // TODO: Handle retaining abstract client edges to client types.\n        return;\n      }\n      if (linkedField.plural) {\n        var dataIDs = RelayModernRecord.getResolverLinkedRecordIDs(resolverRecord, concreteType);\n        if (dataIDs != null) {\n          var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(dataIDs),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _dataID2 = _step2.value;\n              if (_dataID2 != null) {\n                this._traverse(linkedField, _dataID2);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } else {\n        var _dataID3 = RelayModernRecord.getResolverLinkedRecordID(resolverRecord, concreteType);\n        if (_dataID3 != null) {\n          this._traverse(linkedField, _dataID3);\n        }\n      }\n    }\n  };\n  _proto._traverseResolverField = function _traverseResolverField(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var dataID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n    // If the resolver value has been created, we should retain it.\n    // This record contains our cached resolver value, and potential Live\n    // Resolver subscription.\n    if (dataID != null) {\n      this._references.add(dataID);\n    }\n    var fragment = field.fragment;\n    if (fragment != null) {\n      // Mark the contents of the resolver's data dependencies.\n      this._traverseSelections([fragment], record);\n    }\n    return dataID;\n  };\n  _proto._traverseModuleImport = function _traverseModuleImport(moduleImport, record) {\n    var _this$_operationName;\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReferenceMarker: Expected an operationLoader to be configured when using `@module`. ' + 'Could not load fragment `%s` in operation `%s`.', moduleImport.fragmentName, (_this$_operationName = this._operationName) !== null && _this$_operationName !== void 0 ? _this$_operationName : '(unknown)') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = RelayModernRecord.getValue(record, operationKey);\n    if (operationReference == null) {\n      return;\n    }\n    var normalizationRootNode = operationLoader.get(operationReference);\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n      this._traverseSelections(operation.selections, record);\n      this._variables = prevVariables;\n    }\n    // Otherwise, if the operation is not available, we assume that the data\n    // cannot have been processed yet and therefore isn't in the store to\n    // begin with.\n  };\n  _proto._traverseLink = function _traverseLink(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      return;\n    }\n    this._traverse(field, linkedID);\n  };\n  _proto._traversePluralLink = function _traversePluralLink(field, record) {\n    var _this2 = this;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    if (linkedIDs == null) {\n      return;\n    }\n    linkedIDs.forEach(function (linkedID) {\n      if (linkedID != null) {\n        _this2._traverse(field, linkedID);\n      }\n    });\n  };\n  _proto._traverseFlightField = function _traverseFlightField(field, record) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    if (linkedID == null) {\n      return;\n    }\n    this._references.add(linkedID);\n    var reactFlightClientResponseRecord = this._recordSource.get(linkedID);\n    if (reactFlightClientResponseRecord == null) {\n      return;\n    }\n    var reachableExecutableDefinitions = RelayModernRecord.getValue(reactFlightClientResponseRecord, RelayStoreReactFlightUtils.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY);\n    if (!Array.isArray(reachableExecutableDefinitions)) {\n      return;\n    }\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using ' + 'React Flight') : invariant(false) : void 0;\n    // In Flight, the variables that are in scope for reachable executable\n    // definitions aren't the same as what's in scope for the outer query.\n    var prevVariables = this._variables;\n    // $FlowFixMe[incompatible-cast]\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(reachableExecutableDefinitions),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var definition = _step3.value;\n        this._variables = definition.variables;\n        var operationReference = definition.module;\n        var normalizationRootNode = operationLoader.get(operationReference);\n        if (normalizationRootNode != null) {\n          var operation = getOperation(normalizationRootNode);\n          this._traverse(operation, ROOT_ID);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    this._variables = prevVariables;\n  };\n  return RelayReferenceMarker;\n}();\nmodule.exports = {\n  mark: mark\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../multi-actor-environment/ActorUtils'),\n  ACTOR_IDENTIFIER_FIELD_NAME = _require.ACTOR_IDENTIFIER_FIELD_NAME,\n  getActorIdentifierFromPayload = _require.getActorIdentifierFromPayload;\nvar _require2 = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require2.ACTOR_CHANGE,\n  CLIENT_COMPONENT = _require2.CLIENT_COMPONENT,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require2.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EXTENSION = _require2.CLIENT_EXTENSION,\n  CONDITION = _require2.CONDITION,\n  DEFER = _require2.DEFER,\n  FLIGHT_FIELD = _require2.FLIGHT_FIELD,\n  FRAGMENT_SPREAD = _require2.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require2.INLINE_FRAGMENT,\n  LINKED_FIELD = _require2.LINKED_FIELD,\n  LINKED_HANDLE = _require2.LINKED_HANDLE,\n  MODULE_IMPORT = _require2.MODULE_IMPORT,\n  RELAY_RESOLVER = _require2.RELAY_RESOLVER,\n  SCALAR_FIELD = _require2.SCALAR_FIELD,\n  SCALAR_HANDLE = _require2.SCALAR_HANDLE,\n  STREAM = _require2.STREAM,\n  TYPE_DISCRIMINATOR = _require2.TYPE_DISCRIMINATOR;\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar _require3 = require('./ClientID'),\n  generateClientID = _require3.generateClientID,\n  isClientID = _require3.isClientID;\nvar _require4 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require4.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require5 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require5.createNormalizationSelector;\nvar _require6 = require('./RelayStoreReactFlightUtils'),\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = _require6.REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY = _require6.REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME = _require6.REACT_FLIGHT_TYPE_NAME,\n  refineToReactFlightPayloadData = _require6.refineToReactFlightPayloadData;\nvar _require7 = require('./RelayStoreUtils'),\n  ROOT_ID = _require7.ROOT_ID,\n  ROOT_TYPE = _require7.ROOT_TYPE,\n  TYPENAME_KEY = _require7.TYPENAME_KEY,\n  getArgumentValues = _require7.getArgumentValues,\n  getHandleStorageKey = _require7.getHandleStorageKey,\n  getModuleComponentKey = _require7.getModuleComponentKey,\n  getModuleOperationKey = _require7.getModuleOperationKey,\n  getStorageKey = _require7.getStorageKey;\nvar _require8 = require('./TypeID'),\n  TYPE_SCHEMA_TYPE = _require8.TYPE_SCHEMA_TYPE,\n  generateTypeID = _require8.generateTypeID;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n/**\n * Normalizes the results of a query and standard GraphQL response, writing the\n * normalized records/fields into the given MutableRecordSource.\n */\nfunction normalize(recordSource, selector, response, options) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var normalizer = new RelayResponseNormalizer(recordSource, variables, options);\n  return normalizer.normalizeResponse(node, dataID, response);\n}\n\n/**\n * @private\n *\n * Helper for handling payloads.\n */\nvar RelayResponseNormalizer = /*#__PURE__*/function () {\n  function RelayResponseNormalizer(recordSource, variables, options) {\n    this._actorIdentifier = options.actorIdentifier;\n    this._getDataId = options.getDataID;\n    this._handleFieldPayloads = [];\n    this._treatMissingFieldsAsNull = options.treatMissingFieldsAsNull;\n    this._incrementalPlaceholders = [];\n    this._isClientExtension = false;\n    this._isUnmatchedAbstractType = false;\n    this._followupPayloads = [];\n    this._path = options.path ? (0, _toConsumableArray2[\"default\"])(options.path) : [];\n    this._recordSource = recordSource;\n    this._variables = variables;\n    this._reactFlightPayloadDeserializer = options.reactFlightPayloadDeserializer;\n    this._reactFlightServerErrorHandler = options.reactFlightServerErrorHandler;\n    this._shouldProcessClientComponents = options.shouldProcessClientComponents;\n  }\n  var _proto = RelayResponseNormalizer.prototype;\n  _proto.normalizeResponse = function normalizeResponse(node, dataID, data) {\n    var record = this._recordSource.get(dataID);\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Expected root record `%s` to exist.', dataID) : invariant(false) : void 0;\n    this._assignClientAbstractTypes(node);\n    this._traverseSelections(node, record, data);\n    return {\n      errors: null,\n      fieldPayloads: this._handleFieldPayloads,\n      incrementalPlaceholders: this._incrementalPlaceholders,\n      followupPayloads: this._followupPayloads,\n      source: this._recordSource,\n      isFinal: false\n    };\n  }\n\n  // For abstract types defined in the client schema extension, we won't be\n  // getting `__is<AbstractType>` hints from the server. To handle this, the\n  // compiler attaches additional metadata on the normalization artifact,\n  // which we need to record into the store.\n  ;\n  _proto._assignClientAbstractTypes = function _assignClientAbstractTypes(node) {\n    var clientAbstractTypes = node.clientAbstractTypes;\n    if (clientAbstractTypes != null) {\n      for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {\n        var abstractType = _Object$keys[_i];\n        var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(clientAbstractTypes[abstractType]),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var concreteType = _step.value;\n            var typeID = generateTypeID(concreteType);\n            var typeRecord = this._recordSource.get(typeID);\n            if (typeRecord == null) {\n              typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE);\n              this._recordSource.set(typeID, typeRecord);\n            }\n            RelayModernRecord.setValue(typeRecord, abstractType, true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._getRecordType = function _getRecordType(data) {\n    var typeName = data[TYPENAME_KEY];\n    !(typeName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Expected a typename for record `%s`.', JSON.stringify(data, null, 2)) : invariant(false) : void 0;\n    return typeName;\n  };\n  _proto._traverseSelections = function _traverseSelections(node, record, data) {\n    for (var i = 0; i < node.selections.length; i++) {\n      var selection = node.selections[i];\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n        case LINKED_FIELD:\n          this._normalizeField(node, selection, record, data);\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(this._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            this._traverseSelections(selection, record, data);\n          }\n          break;\n        case FRAGMENT_SPREAD:\n          {\n            var prevVariables = this._variables;\n            this._variables = getLocalVariables(this._variables, selection.fragment.argumentDefinitions, selection.args);\n            this._traverseSelections(selection.fragment, record, data);\n            this._variables = prevVariables;\n            break;\n          }\n        case INLINE_FRAGMENT:\n          {\n            var abstractKey = selection.abstractKey;\n            if (abstractKey == null) {\n              var typeName = RelayModernRecord.getType(record);\n              if (typeName === selection.type) {\n                this._traverseSelections(selection, record, data);\n              }\n            } else {\n              var implementsInterface = data.hasOwnProperty(abstractKey);\n              var _typeName = RelayModernRecord.getType(record);\n              var typeID = generateTypeID(_typeName);\n              var typeRecord = this._recordSource.get(typeID);\n              if (typeRecord == null) {\n                typeRecord = RelayModernRecord.create(typeID, TYPE_SCHEMA_TYPE);\n                this._recordSource.set(typeID, typeRecord);\n              }\n              RelayModernRecord.setValue(typeRecord, abstractKey, implementsInterface);\n              if (implementsInterface) {\n                this._traverseSelections(selection, record, data);\n              }\n            }\n            break;\n          }\n        case TYPE_DISCRIMINATOR:\n          {\n            var _abstractKey = selection.abstractKey;\n            var _implementsInterface = data.hasOwnProperty(_abstractKey);\n            var _typeName2 = RelayModernRecord.getType(record);\n            var _typeID = generateTypeID(_typeName2);\n            var _typeRecord = this._recordSource.get(_typeID);\n            if (_typeRecord == null) {\n              _typeRecord = RelayModernRecord.create(_typeID, TYPE_SCHEMA_TYPE);\n              this._recordSource.set(_typeID, _typeRecord);\n            }\n            RelayModernRecord.setValue(_typeRecord, _abstractKey, _implementsInterface);\n            break;\n          }\n        case LINKED_HANDLE:\n        case SCALAR_HANDLE:\n          var args = selection.args ? getArgumentValues(selection.args, this._variables) : {};\n          var fieldKey = getStorageKey(selection, this._variables);\n          var handleKey = getHandleStorageKey(selection, this._variables);\n          this._handleFieldPayloads.push({\n            args: args,\n            dataID: RelayModernRecord.getDataID(record),\n            fieldKey: fieldKey,\n            handle: selection.handle,\n            handleKey: handleKey,\n            handleArgs: selection.handleArgs ? getArgumentValues(selection.handleArgs, this._variables) : {}\n          });\n          break;\n        case MODULE_IMPORT:\n          this._normalizeModuleImport(node, selection, record, data);\n          break;\n        case DEFER:\n          this._normalizeDefer(selection, record, data);\n          break;\n        case STREAM:\n          this._normalizeStream(selection, record, data);\n          break;\n        case CLIENT_EXTENSION:\n          var isClientExtension = this._isClientExtension;\n          this._isClientExtension = true;\n          this._traverseSelections(selection, record, data);\n          this._isClientExtension = isClientExtension;\n          break;\n        case CLIENT_COMPONENT:\n          if (this._shouldProcessClientComponents === false) {\n            break;\n          }\n          this._traverseSelections(selection.fragment, record, data);\n          break;\n        case FLIGHT_FIELD:\n          if (RelayFeatureFlags.ENABLE_REACT_FLIGHT_COMPONENT_FIELD) {\n            this._normalizeFlightField(node, selection, record, data);\n          } else {\n            throw new Error('Flight fields are not yet supported.');\n          }\n          break;\n        case ACTOR_CHANGE:\n          this._normalizeActorChange(node, selection, record, data);\n          break;\n        case RELAY_RESOLVER:\n          this._normalizeResolver(selection, record, data);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          this._normalizeResolver(selection.backingField, record, data);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    }\n  };\n  _proto._normalizeResolver = function _normalizeResolver(resolver, record, data) {\n    if (resolver.fragment != null) {\n      this._traverseSelections(resolver.fragment, record, data);\n    }\n  };\n  _proto._normalizeDefer = function _normalizeDefer(defer, record, data) {\n    var isDeferred = defer[\"if\"] === null || this._getVariableValue(defer[\"if\"]);\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(typeof isDeferred === 'boolean', 'RelayResponseNormalizer: Expected value for @defer `if` argument to ' + 'be a boolean, got `%s`.', isDeferred) : void 0;\n    }\n    if (isDeferred === false) {\n      // If defer is disabled there will be no additional response chunk:\n      // normalize the data already present.\n      this._traverseSelections(defer, record, data);\n    } else {\n      // Otherwise data *for this selection* should not be present: enqueue\n      // metadata to process the subsequent response chunk.\n      this._incrementalPlaceholders.push({\n        kind: 'defer',\n        data: data,\n        label: defer.label,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        selector: createNormalizationSelector(defer, RelayModernRecord.getDataID(record), this._variables),\n        typeName: RelayModernRecord.getType(record),\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeStream = function _normalizeStream(stream, record, data) {\n    // Always normalize regardless of whether streaming is enabled or not,\n    // this populates the initial array value (including any items when\n    // initial_count > 0).\n    this._traverseSelections(stream, record, data);\n    var isStreamed = stream[\"if\"] === null || this._getVariableValue(stream[\"if\"]);\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(typeof isStreamed === 'boolean', 'RelayResponseNormalizer: Expected value for @stream `if` argument ' + 'to be a boolean, got `%s`.', isStreamed) : void 0;\n    }\n    if (isStreamed === true) {\n      // If streaming is enabled, *also* emit metadata to process any\n      // response chunks that may be delivered.\n      this._incrementalPlaceholders.push({\n        kind: 'stream',\n        label: stream.label,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        parentID: RelayModernRecord.getDataID(record),\n        node: stream,\n        variables: this._variables,\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeModuleImport = function _normalizeModuleImport(parent, moduleImport, record, data) {\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for @module to be an object.') : invariant(false) : void 0;\n    var typeName = RelayModernRecord.getType(record);\n    var componentKey = getModuleComponentKey(moduleImport.documentName);\n    var componentReference = moduleImport.componentModuleProvider || data[componentKey];\n    RelayModernRecord.setValue(record, componentKey, componentReference !== null && componentReference !== void 0 ? componentReference : null);\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = moduleImport.operationModuleProvider || data[operationKey];\n    RelayModernRecord.setValue(record, operationKey, operationReference !== null && operationReference !== void 0 ? operationReference : null);\n    if (operationReference != null) {\n      this._followupPayloads.push({\n        kind: 'ModuleImportPayload',\n        args: moduleImport.args,\n        data: data,\n        dataID: RelayModernRecord.getDataID(record),\n        operationReference: operationReference,\n        path: (0, _toConsumableArray2[\"default\"])(this._path),\n        typeName: typeName,\n        variables: this._variables,\n        actorIdentifier: this._actorIdentifier\n      });\n    }\n  };\n  _proto._normalizeField = function _normalizeField(parent, selection, record, data) {\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'writeField(): Expected data for field `%s` to be an object.', selection.name) : invariant(false) : void 0;\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        // Fields may be missing in the response in two main cases:\n        // - Inside a client extension: the server will not generally return\n        //   values for these fields, but a local update may provide them.\n        // - Inside an abstract type refinement where the concrete type does\n        //   not conform to the interface/union.\n        // However an otherwise-required field may also be missing if the server\n        // is configured to skip fields with `null` values, in which case the\n        // client is assumed to be correctly configured with\n        // treatMissingFieldsAsNull=true.\n        var isOptionalField = this._isClientExtension || this._isUnmatchedAbstractType;\n        if (isOptionalField) {\n          // Field not expected to exist regardless of whether the server is pruning null\n          // fields or not.\n          return;\n        } else if (!this._treatMissingFieldsAsNull) {\n          // Not optional and the server is not pruning null fields: field is expected\n          // to be present\n          if (process.env.NODE_ENV !== \"production\") {\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : void 0;\n          }\n          return;\n        }\n      }\n      if (process.env.NODE_ENV !== \"production\") {\n        if (selection.kind === SCALAR_FIELD) {\n          this._validateConflictingFieldsWithIdenticalId(record, storageKey,\n          // When using `treatMissingFieldsAsNull` the conflicting validation raises a false positive\n          // because the value is set using `null` but validated using `fieldValue` which at this point\n          // will be `undefined`.\n          // Setting this to `null` matches the value that we actually set to the `fieldValue`.\n          null);\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    if (selection.kind === SCALAR_FIELD) {\n      if (process.env.NODE_ENV !== \"production\") {\n        this._validateConflictingFieldsWithIdenticalId(record, storageKey, fieldValue);\n      }\n      RelayModernRecord.setValue(record, storageKey, fieldValue);\n    } else if (selection.kind === LINKED_FIELD) {\n      this._path.push(responseKey);\n      if (selection.plural) {\n        this._normalizePluralLink(selection, record, storageKey, fieldValue);\n      } else {\n        this._normalizeLink(selection, record, storageKey, fieldValue);\n      }\n      this._path.pop();\n    } else {\n      selection;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer(): Unexpected ast kind `%s` during normalization.', selection.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._normalizeActorChange = function _normalizeActorChange(parent, selection, record, data) {\n    var _field$concreteType;\n    var field = selection.linkedField;\n    !(typeof data === 'object' && data) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '_normalizeActorChange(): Expected data for field `%s` to be an object.', field.name) : invariant(false) : void 0;\n    var responseKey = field.alias || field.name;\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        var isOptionalField = this._isClientExtension || this._isUnmatchedAbstractType;\n        if (isOptionalField) {\n          return;\n        } else if (!this._treatMissingFieldsAsNull) {\n          if (process.env.NODE_ENV !== \"production\") {\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : void 0;\n          }\n          return;\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    var actorIdentifier = getActorIdentifierFromPayload(fieldValue);\n    if (actorIdentifier == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Payload did not contain a value ' + 'for field `%s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload. Payload is `%s`.', ACTOR_IDENTIFIER_FIELD_NAME, JSON.stringify(fieldValue, null, 2)) : void 0;\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n\n    // $FlowFixMe[incompatible-call]\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : this._getRecordType(fieldValue);\n    var nextID = this._getDataId(\n    // $FlowFixMe[incompatible-call]\n    fieldValue, typeName) || RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);\n    !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey) : invariant(false) : void 0;\n    RelayModernRecord.setActorLinkedRecordID(record, storageKey, actorIdentifier, nextID);\n    this._followupPayloads.push({\n      kind: 'ActorPayload',\n      data: fieldValue,\n      dataID: nextID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(this._path), [responseKey]),\n      typeName: typeName,\n      variables: this._variables,\n      node: field,\n      actorIdentifier: actorIdentifier\n    });\n  };\n  _proto._normalizeFlightField = function _normalizeFlightField(parent, selection, record, data) {\n    var responseKey = selection.alias || selection.name;\n    var storageKey = getStorageKey(selection, this._variables);\n    var fieldValue = data[responseKey];\n    if (fieldValue == null) {\n      if (fieldValue === undefined) {\n        // Flight field may be missing in the response if:\n        // - It is inside an abstract type refinement where the concrete type does\n        //   not conform to the interface/union.\n        // However an otherwise-required field may also be missing if the server\n        // is configured to skip fields with `null` values, in which case the\n        // client is assumed to be correctly configured with\n        // treatMissingFieldsAsNull=true.\n        if (this._isUnmatchedAbstractType) {\n          // Field not expected to exist regardless of whether the server is pruning null\n          // fields or not.\n          return;\n        } else {\n          // Not optional and the server is not pruning null fields: field is expected\n          // to be present\n          !this._treatMissingFieldsAsNull ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Payload did not contain a value for ' + 'field `%s: %s`. Check that you are parsing with the same ' + 'query that was used to fetch the payload.', responseKey, storageKey) : invariant(false) : void 0;\n        }\n      }\n      RelayModernRecord.setValue(record, storageKey, null);\n      return;\n    }\n    var reactFlightPayload = refineToReactFlightPayloadData(fieldValue);\n    var reactFlightPayloadDeserializer = this._reactFlightPayloadDeserializer;\n    !(reactFlightPayload != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected React Flight payload data to be an ' + 'object with `status`, tree`, `queries` and `errors` properties, got ' + '`%s`.', fieldValue) : invariant(false) : void 0;\n    !(typeof reactFlightPayloadDeserializer === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected reactFlightPayloadDeserializer to ' + 'be a function, got `%s`.', reactFlightPayloadDeserializer) : invariant(false) : void 0;\n    if (reactFlightPayload.errors.length > 0) {\n      if (typeof this._reactFlightServerErrorHandler === 'function') {\n        this._reactFlightServerErrorHandler(reactFlightPayload.status, reactFlightPayload.errors);\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Received server errors for field `%s`.\\n\\n' + '%s\\n%s', responseKey, reactFlightPayload.errors[0].message, reactFlightPayload.errors[0].stack) : void 0;\n      }\n    }\n    var reactFlightID = generateClientID(RelayModernRecord.getDataID(record), getStorageKey(selection, this._variables));\n    var reactFlightClientResponseRecord = this._recordSource.get(reactFlightID);\n    if (reactFlightClientResponseRecord == null) {\n      reactFlightClientResponseRecord = RelayModernRecord.create(reactFlightID, REACT_FLIGHT_TYPE_NAME);\n      this._recordSource.set(reactFlightID, reactFlightClientResponseRecord);\n    }\n    if (reactFlightPayload.tree == null) {\n      // This typically indicates that a fatal server error prevented rows from\n      // being written. When this occurs, we should not continue normalization of\n      // the Flight field because the row response is malformed.\n      //\n      // Receiving empty rows is OK because it can indicate the start of a stream.\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayResponseNormalizer: Expected `tree` not to be null. This ' + 'typically indicates that a fatal server error prevented any Server ' + 'Component rows from being written.') : void 0;\n      // We create the flight record with a null value for the tree\n      // and empty reachable definitions\n      RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_TREE_STORAGE_KEY, null);\n      RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY, []);\n      RelayModernRecord.setLinkedRecordID(record, storageKey, reactFlightID);\n      return;\n    }\n\n    // We store the deserialized reactFlightClientResponse in a separate\n    // record and link it to the parent record. This is so we can GC the Flight\n    // tree later even if the parent record is still reachable.\n    var reactFlightClientResponse = reactFlightPayloadDeserializer(reactFlightPayload.tree);\n    RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_TREE_STORAGE_KEY, reactFlightClientResponse);\n    var reachableExecutableDefinitions = [];\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(reactFlightPayload.queries),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var query = _step2.value;\n        if (query.response.data != null) {\n          this._followupPayloads.push({\n            kind: 'ModuleImportPayload',\n            args: null,\n            data: query.response.data,\n            dataID: ROOT_ID,\n            operationReference: query.module,\n            path: [],\n            typeName: ROOT_TYPE,\n            variables: query.variables,\n            actorIdentifier: this._actorIdentifier\n          });\n        }\n        reachableExecutableDefinitions.push({\n          module: query.module,\n          variables: query.variables\n        });\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(reactFlightPayload.fragments),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var fragment = _step3.value;\n        if (fragment.response.data != null) {\n          this._followupPayloads.push({\n            kind: 'ModuleImportPayload',\n            args: null,\n            data: fragment.response.data,\n            dataID: fragment.__id,\n            operationReference: fragment.module,\n            path: [],\n            typeName: fragment.__typename,\n            variables: fragment.variables,\n            actorIdentifier: this._actorIdentifier\n          });\n        }\n        reachableExecutableDefinitions.push({\n          module: fragment.module,\n          variables: fragment.variables\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    RelayModernRecord.setValue(reactFlightClientResponseRecord, REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY, reachableExecutableDefinitions);\n    RelayModernRecord.setLinkedRecordID(record, storageKey, reactFlightID);\n  };\n  _proto._normalizeLink = function _normalizeLink(field, record, storageKey, fieldValue) {\n    var _field$concreteType2;\n    !(typeof fieldValue === 'object' && fieldValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for field `%s` to be an object.', storageKey) : invariant(false) : void 0;\n    var nextID = this._getDataId(\n    // $FlowFixMe[incompatible-variance]\n    fieldValue, // $FlowFixMe[incompatible-variance]\n    (_field$concreteType2 = field.concreteType) !== null && _field$concreteType2 !== void 0 ? _field$concreteType2 : this._getRecordType(fieldValue)) ||\n    // Reuse previously generated client IDs\n    RelayModernRecord.getLinkedRecordID(record, storageKey) || generateClientID(RelayModernRecord.getDataID(record), storageKey);\n    !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id on field `%s` to be a string.', storageKey) : invariant(false) : void 0;\n    if (process.env.NODE_ENV !== \"production\") {\n      this._validateConflictingLinkedFieldsWithIdenticalId(record, RelayModernRecord.getLinkedRecordID(record, storageKey), nextID, storageKey);\n    }\n    RelayModernRecord.setLinkedRecordID(record, storageKey, nextID);\n    var nextRecord = this._recordSource.get(nextID);\n    if (!nextRecord) {\n      // $FlowFixMe[incompatible-variance]\n      var typeName = field.concreteType || this._getRecordType(fieldValue);\n      nextRecord = RelayModernRecord.create(nextID, typeName);\n      this._recordSource.set(nextID, nextRecord);\n    } else if (process.env.NODE_ENV !== \"production\") {\n      this._validateRecordType(nextRecord, field, fieldValue);\n    }\n    // $FlowFixMe[incompatible-variance]\n    this._traverseSelections(field, nextRecord, fieldValue);\n  };\n  _proto._normalizePluralLink = function _normalizePluralLink(field, record, storageKey, fieldValue) {\n    var _this = this;\n    !Array.isArray(fieldValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected data for field `%s` to be an array ' + 'of objects.', storageKey) : invariant(false) : void 0;\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n    var nextIDs = [];\n    fieldValue.forEach(function (item, nextIndex) {\n      var _field$concreteType3;\n      // validate response data\n      if (item == null) {\n        nextIDs.push(item);\n        return;\n      }\n      _this._path.push(String(nextIndex));\n      !(typeof item === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected elements for field `%s` to be ' + 'objects.', storageKey) : invariant(false) : void 0;\n      var nextID = _this._getDataId(\n      // $FlowFixMe[incompatible-variance]\n      item, // $FlowFixMe[incompatible-variance]\n      (_field$concreteType3 = field.concreteType) !== null && _field$concreteType3 !== void 0 ? _field$concreteType3 : _this._getRecordType(item)) || prevIDs && prevIDs[nextIndex] ||\n      // Reuse previously generated client IDs:\n      generateClientID(RelayModernRecord.getDataID(record), storageKey, nextIndex);\n      !(typeof nextID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayResponseNormalizer: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n      nextIDs.push(nextID);\n      var nextRecord = _this._recordSource.get(nextID);\n      if (!nextRecord) {\n        // $FlowFixMe[incompatible-variance]\n        var typeName = field.concreteType || _this._getRecordType(item);\n        nextRecord = RelayModernRecord.create(nextID, typeName);\n        _this._recordSource.set(nextID, nextRecord);\n      } else if (process.env.NODE_ENV !== \"production\") {\n        _this._validateRecordType(nextRecord, field, item);\n      }\n      // NOTE: the check to strip __DEV__ code only works for simple\n      // `if (__DEV__)`\n      if (process.env.NODE_ENV !== \"production\") {\n        if (prevIDs) {\n          _this._validateConflictingLinkedFieldsWithIdenticalId(record, prevIDs[nextIndex], nextID, storageKey);\n        }\n      }\n      // $FlowFixMe[incompatible-variance]\n      _this._traverseSelections(field, nextRecord, item);\n      _this._path.pop();\n    });\n    RelayModernRecord.setLinkedRecordIDs(record, storageKey, nextIDs);\n  }\n\n  /**\n   * Warns if the type of the record does not match the type of the field/payload.\n   */;\n  _proto._validateRecordType = function _validateRecordType(record, field, payload) {\n    var _field$concreteType4;\n    var typeName = (_field$concreteType4 = field.concreteType) !== null && _field$concreteType4 !== void 0 ? _field$concreteType4 : this._getRecordType(payload);\n    var dataID = RelayModernRecord.getDataID(record);\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(dataID) && dataID !== ROOT_ID || RelayModernRecord.getType(record) === typeName, 'RelayResponseNormalizer: Invalid record `%s`. Expected %s to be ' + 'consistent, but the record was assigned conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', dataID, TYPENAME_KEY, RelayModernRecord.getType(record), typeName) : void 0;\n  }\n\n  /**\n   * Warns if a single response contains conflicting fields with the same id\n   */;\n  _proto._validateConflictingFieldsWithIdenticalId = function _validateConflictingFieldsWithIdenticalId(record, storageKey, fieldValue) {\n    // NOTE: Only call this function in DEV\n    if (process.env.NODE_ENV !== \"production\") {\n      var dataID = RelayModernRecord.getDataID(record);\n      var previousValue = RelayModernRecord.getValue(record, storageKey);\n      process.env.NODE_ENV !== \"production\" ? warning(storageKey === TYPENAME_KEY || previousValue === undefined || areEqual(previousValue, fieldValue), 'RelayResponseNormalizer: Invalid record. The record contains two ' + 'instances of the same id: `%s` with conflicting field, %s and its values: %s and %s. ' + 'If two fields are different but share ' + 'the same id, one field will overwrite the other.', dataID, storageKey, previousValue, fieldValue) : void 0;\n    }\n  }\n\n  /**\n   * Warns if a single response contains conflicting fields with the same id\n   */;\n  _proto._validateConflictingLinkedFieldsWithIdenticalId = function _validateConflictingLinkedFieldsWithIdenticalId(record, prevID, nextID, storageKey) {\n    // NOTE: Only call this function in DEV\n    if (process.env.NODE_ENV !== \"production\") {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === undefined || prevID === nextID, 'RelayResponseNormalizer: Invalid record. The record contains ' + 'references to the conflicting field, %s and its id values: %s and %s. ' + 'We need to make sure that the record the field points ' + 'to remains consistent or one field will overwrite the other.', storageKey, prevID, nextID) : void 0;\n    }\n  };\n  return RelayResponseNormalizer;\n}();\nmodule.exports = {\n  normalize: normalize\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayModernRecord'),\n  getType = _require.getType;\nvar invariant = require('invariant');\n\n// Reachable (client) executable definitions encountered while server component\n// rendering\nvar REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = 'executableDefinitions';\nvar REACT_FLIGHT_TREE_STORAGE_KEY = 'tree';\nvar REACT_FLIGHT_TYPE_NAME = 'ReactFlightComponent';\nfunction refineToReactFlightPayloadData(payload) {\n  if (payload == null || typeof payload !== 'object' || typeof payload.status !== 'string' || !Array.isArray(payload.tree) && payload.tree !== null || !Array.isArray(payload.queries) || !Array.isArray(payload.fragments) || !Array.isArray(payload.errors)) {\n    return null;\n  }\n  return payload;\n}\nfunction getReactFlightClientResponse(record) {\n  !(getType(record) === REACT_FLIGHT_TYPE_NAME) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getReactFlightClientResponse(): Expected a ReactFlightComponentRecord, ' + 'got %s.', record) : invariant(false) : void 0;\n  return record[REACT_FLIGHT_TREE_STORAGE_KEY];\n}\nmodule.exports = {\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY: REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY: REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME: REACT_FLIGHT_TYPE_NAME,\n  getReactFlightClientResponse: getReactFlightClientResponse,\n  refineToReactFlightPayloadData: refineToReactFlightPayloadData\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar deepFreeze = require('../util/deepFreeze');\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar hasOverlappingIDs = require('./hasOverlappingIDs');\nvar RelayReader = require('./RelayReader');\nvar RelayStoreSubscriptions = /*#__PURE__*/function () {\n  function RelayStoreSubscriptions(log, resolverCache) {\n    this._subscriptions = new Set();\n    this.__log = log;\n    this._resolverCache = resolverCache;\n  }\n  var _proto = RelayStoreSubscriptions.prototype;\n  _proto.subscribe = function subscribe(snapshot, callback) {\n    var _this = this;\n    var subscription = {\n      backup: null,\n      callback: callback,\n      snapshot: snapshot,\n      stale: false\n    };\n    var dispose = function dispose() {\n      _this._subscriptions[\"delete\"](subscription);\n    };\n    this._subscriptions.add(subscription);\n    return {\n      dispose: dispose\n    };\n  };\n  _proto.snapshotSubscriptions = function snapshotSubscriptions(source) {\n    var _this2 = this;\n    this._subscriptions.forEach(function (subscription) {\n      // Backup occurs after writing a new \"final\" payload(s) and before (re)applying\n      // optimistic changes. Each subscription's `snapshot` represents what was *last\n      // published to the subscriber*, which notably may include previous optimistic\n      // updates. Therefore a subscription can be in any of the following states:\n      // - stale=true: This subscription was restored to a different value than\n      //   `snapshot`. That means this subscription has changes relative to its base,\n      //   but its base has changed (we just applied a final payload): recompute\n      //   a backup so that we can later restore to the state the subscription\n      //   should be in.\n      // - stale=false: This subscription was restored to the same value as\n      //   `snapshot`. That means this subscription does *not* have changes relative\n      //   to its base, so the current `snapshot` is valid to use as a backup.\n      if (!subscription.stale) {\n        subscription.backup = subscription.snapshot;\n        return;\n      }\n      var snapshot = subscription.snapshot;\n      var backup = RelayReader.read(source, snapshot.selector, _this2._resolverCache);\n      var nextData = recycleNodesInto(snapshot.data, backup.data);\n      backup.data = nextData; // backup owns the snapshot and can safely mutate\n      subscription.backup = backup;\n    });\n  };\n  _proto.restoreSubscriptions = function restoreSubscriptions() {\n    this._subscriptions.forEach(function (subscription) {\n      var backup = subscription.backup;\n      subscription.backup = null;\n      if (backup) {\n        if (backup.data !== subscription.snapshot.data) {\n          subscription.stale = true;\n        }\n        subscription.snapshot = {\n          data: subscription.snapshot.data,\n          isMissingData: backup.isMissingData,\n          missingClientEdges: backup.missingClientEdges,\n          missingLiveResolverFields: backup.missingLiveResolverFields,\n          seenRecords: backup.seenRecords,\n          selector: backup.selector,\n          missingRequiredFields: backup.missingRequiredFields,\n          relayResolverErrors: backup.relayResolverErrors\n        };\n      } else {\n        subscription.stale = true;\n      }\n    });\n  };\n  _proto.updateSubscriptions = function updateSubscriptions(source, updatedRecordIDs, updatedOwners, sourceOperation) {\n    var _this3 = this;\n    var hasUpdatedRecords = updatedRecordIDs.size !== 0;\n    this._subscriptions.forEach(function (subscription) {\n      var owner = _this3._updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation);\n      if (owner != null) {\n        updatedOwners.push(owner);\n      }\n    });\n  }\n\n  /**\n   * Notifies the callback for the subscription if the data for the associated\n   * snapshot has changed.\n   * Additionally, updates the subscription snapshot with the latest snapshot,\n   * and marks it as not stale.\n   * Returns the owner (RequestDescriptor) if the subscription was affected by the\n   * latest update, or null if it was not affected.\n   */;\n  _proto._updateSubscription = function _updateSubscription(source, subscription, updatedRecordIDs, hasUpdatedRecords, sourceOperation) {\n    var backup = subscription.backup,\n      callback = subscription.callback,\n      snapshot = subscription.snapshot,\n      stale = subscription.stale;\n    var hasOverlappingUpdates = hasUpdatedRecords && hasOverlappingIDs(snapshot.seenRecords, updatedRecordIDs);\n    if (!stale && !hasOverlappingUpdates) {\n      return;\n    }\n    var nextSnapshot = hasOverlappingUpdates || !backup ? RelayReader.read(source, snapshot.selector, this._resolverCache) : backup;\n    var nextData = recycleNodesInto(snapshot.data, nextSnapshot.data);\n    nextSnapshot = {\n      data: nextData,\n      isMissingData: nextSnapshot.isMissingData,\n      missingClientEdges: nextSnapshot.missingClientEdges,\n      missingLiveResolverFields: nextSnapshot.missingLiveResolverFields,\n      seenRecords: nextSnapshot.seenRecords,\n      selector: nextSnapshot.selector,\n      missingRequiredFields: nextSnapshot.missingRequiredFields,\n      relayResolverErrors: nextSnapshot.relayResolverErrors\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      deepFreeze(nextSnapshot);\n    }\n    subscription.snapshot = nextSnapshot;\n    subscription.stale = false;\n    if (nextSnapshot.data !== snapshot.data) {\n      if (this.__log && RelayFeatureFlags.ENABLE_NOTIFY_SUBSCRIPTION) {\n        this.__log({\n          name: 'store.notify.subscription',\n          sourceOperation: sourceOperation,\n          snapshot: snapshot,\n          nextSnapshot: nextSnapshot\n        });\n      }\n      callback(nextSnapshot);\n      return snapshot.selector.owner;\n    }\n  };\n  return RelayStoreSubscriptions;\n}();\nmodule.exports = RelayStoreSubscriptions;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar getRelayHandleKey = require('../util/getRelayHandleKey');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar stableCopy = require('../util/stableCopy');\nvar invariant = require('invariant');\nvar VARIABLE = RelayConcreteNode.VARIABLE,\n  LITERAL = RelayConcreteNode.LITERAL,\n  OBJECT_VALUE = RelayConcreteNode.OBJECT_VALUE,\n  LIST_VALUE = RelayConcreteNode.LIST_VALUE;\nvar MODULE_COMPONENT_KEY_PREFIX = '__module_component_';\nvar MODULE_OPERATION_KEY_PREFIX = '__module_operation_';\nfunction getArgumentValue(arg, variables) {\n  if (arg.kind === VARIABLE) {\n    // Variables are provided at runtime and are not guaranteed to be stable.\n    return getStableVariableValue(arg.variableName, variables);\n  } else if (arg.kind === LITERAL) {\n    // The Relay compiler generates stable ConcreteArgument values.\n    return arg.value;\n  } else if (arg.kind === OBJECT_VALUE) {\n    var value = {};\n    arg.fields.forEach(function (field) {\n      value[field.name] = getArgumentValue(field, variables);\n    });\n    return value;\n  } else if (arg.kind === LIST_VALUE) {\n    var _value = [];\n    arg.items.forEach(function (item) {\n      item != null ? _value.push(getArgumentValue(item, variables)) : null;\n    });\n    return _value;\n  }\n}\n\n/**\n * Returns the values of field/fragment arguments as an object keyed by argument\n * names. Guaranteed to return a result with stable ordered nested values.\n */\nfunction getArgumentValues(args, variables) {\n  var values = {};\n  args.forEach(function (arg) {\n    values[arg.name] = getArgumentValue(arg, variables);\n  });\n  return values;\n}\n\n/**\n * Given a handle field and variable values, returns a key that can be used to\n * uniquely identify the combination of the handle name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\nfunction getHandleStorageKey(handleField, variables) {\n  var dynamicKey = handleField.dynamicKey,\n    handle = handleField.handle,\n    key = handleField.key,\n    name = handleField.name,\n    args = handleField.args,\n    filters = handleField.filters;\n  var handleName = getRelayHandleKey(handle, key, name);\n  var filterArgs = null;\n  if (args && filters && args.length !== 0 && filters.length !== 0) {\n    filterArgs = args.filter(function (arg) {\n      return filters.indexOf(arg.name) > -1;\n    });\n  }\n  if (dynamicKey) {\n    // \"Sort\" the arguments by argument name: this is done by the compiler for\n    // user-supplied arguments but the dynamic argument must also be in sorted\n    // order.  Note that dynamic key argument name is double-underscore-\n    // -prefixed, and a double-underscore prefix is disallowed for user-supplied\n    // argument names, so there's no need to actually sort.\n    filterArgs = filterArgs != null ? [dynamicKey].concat((0, _toConsumableArray2[\"default\"])(filterArgs)) : [dynamicKey];\n  }\n  if (filterArgs === null) {\n    return handleName;\n  } else {\n    return formatStorageKey(handleName, getArgumentValues(filterArgs, variables));\n  }\n}\n\n/**\n * Given a field and variable values, returns a key that can be used to\n * uniquely identify the combination of the field name and argument values.\n *\n * Note: the word \"storage\" here refers to the fact this key is primarily used\n * when writing the results of a key in a normalized graph or \"store\". This\n * name was used in previous implementations of Relay internals and is also\n * used here for consistency.\n */\nfunction getStorageKey(field, variables) {\n  if (field.storageKey) {\n    // TODO T23663664: Handle nodes do not yet define a static storageKey.\n    return field.storageKey;\n  }\n  var args = getArguments(field);\n  var name = field.name;\n  return args && args.length !== 0 ? formatStorageKey(name, getArgumentValues(args, variables)) : name;\n}\n\n/**\n * Given a field the method returns an array of arguments.\n * For Relay resolver fields, we store arguments on the field and fragment\n * and this method return combined list of arguments.\n */\nfunction getArguments(field) {\n  if (field.kind === 'RelayResolver' || field.kind === 'RelayLiveResolver') {\n    var _field$fragment2;\n    if (field.args == null) {\n      var _field$fragment;\n      return (_field$fragment = field.fragment) === null || _field$fragment === void 0 ? void 0 : _field$fragment.args;\n    }\n    if (((_field$fragment2 = field.fragment) === null || _field$fragment2 === void 0 ? void 0 : _field$fragment2.args) == null) {\n      return field.args;\n    }\n    return field.args.concat(field.fragment.args);\n  }\n  var args = typeof field.args === 'undefined' ? undefined : field.args;\n  return args;\n}\n\n/**\n * Given a `name` (eg. \"foo\") and an object representing argument values\n * (eg. `{orberBy: \"name\", first: 10}`) returns a unique storage key\n * (ie. `foo{\"first\":10,\"orderBy\":\"name\"}`).\n *\n * This differs from getStorageKey which requires a ConcreteNode where arguments\n * are assumed to already be sorted into a stable order.\n */\nfunction getStableStorageKey(name, args) {\n  return formatStorageKey(name, stableCopy(args));\n}\n\n/**\n * Given a name and argument values, format a storage key.\n *\n * Arguments and the values within them are expected to be ordered in a stable\n * alphabetical ordering.\n */\nfunction formatStorageKey(name, argValues) {\n  if (!argValues) {\n    return name;\n  }\n  var values = [];\n  for (var argName in argValues) {\n    if (argValues.hasOwnProperty(argName)) {\n      var value = argValues[argName];\n      if (value != null) {\n        var _JSON$stringify;\n        values.push(argName + ':' + ((_JSON$stringify = JSON.stringify(value)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'undefined'));\n      }\n    }\n  }\n  return values.length === 0 ? name : name + \"(\".concat(values.join(','), \")\");\n}\n\n/**\n * Given Variables and a variable name, return a variable value with\n * all values in a stable order.\n */\nfunction getStableVariableValue(name, variables) {\n  !variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getVariableValue(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n  return stableCopy(variables[name]);\n}\nfunction getModuleComponentKey(documentName) {\n  return \"\".concat(MODULE_COMPONENT_KEY_PREFIX).concat(documentName);\n}\nfunction getModuleOperationKey(documentName) {\n  return \"\".concat(MODULE_OPERATION_KEY_PREFIX).concat(documentName);\n}\n\n/**\n * Constants shared by all implementations of RecordSource/MutableRecordSource/etc.\n */\nvar RelayStoreUtils = {\n  ACTOR_IDENTIFIER_KEY: '__actorIdentifier',\n  CLIENT_EDGE_TRAVERSAL_PATH: '__clientEdgeTraversalPath',\n  FRAGMENTS_KEY: '__fragments',\n  FRAGMENT_OWNER_KEY: '__fragmentOwner',\n  FRAGMENT_PROP_NAME_KEY: '__fragmentPropName',\n  MODULE_COMPONENT_KEY: '__module_component',\n  // alias returned by Reader\n  ID_KEY: '__id',\n  REF_KEY: '__ref',\n  REFS_KEY: '__refs',\n  ROOT_ID: 'client:root',\n  ROOT_TYPE: '__Root',\n  TYPENAME_KEY: '__typename',\n  INVALIDATED_AT_KEY: '__invalidated_at',\n  IS_WITHIN_UNMATCHED_TYPE_REFINEMENT: '__isWithinUnmatchedTypeRefinement',\n  RELAY_RESOLVER_VALUE_KEY: '__resolverValue',\n  RELAY_RESOLVER_INVALIDATION_KEY: '__resolverValueMayBeInvalid',\n  RELAY_RESOLVER_SNAPSHOT_KEY: '__resolverSnapshot',\n  RELAY_RESOLVER_ERROR_KEY: '__resolverError',\n  RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS: '__resolverOutputTypeRecordIDs',\n  formatStorageKey: formatStorageKey,\n  getArgumentValue: getArgumentValue,\n  getArgumentValues: getArgumentValues,\n  getHandleStorageKey: getHandleStorageKey,\n  getStorageKey: getStorageKey,\n  getStableStorageKey: getStableStorageKey,\n  getModuleComponentKey: getModuleComponentKey,\n  getModuleOperationKey: getModuleOperationKey\n};\nmodule.exports = RelayStoreUtils;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar _require = require('../util/RelayConcreteNode'),\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER;\nvar _require2 = require('./ClientID'),\n  generateClientID = _require2.generateClientID;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayStoreUtils'),\n  RELAY_RESOLVER_ERROR_KEY = _require3.RELAY_RESOLVER_ERROR_KEY,\n  RELAY_RESOLVER_INVALIDATION_KEY = _require3.RELAY_RESOLVER_INVALIDATION_KEY,\n  RELAY_RESOLVER_SNAPSHOT_KEY = _require3.RELAY_RESOLVER_SNAPSHOT_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  getStorageKey = _require3.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\n// $FlowFixMe[unclear-type] - will always be empty\nvar emptySet = new Set();\nvar NoopResolverCache = /*#__PURE__*/function () {\n  function NoopResolverCache() {}\n  var _proto = NoopResolverCache.prototype;\n  _proto.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    !(field.kind !== RELAY_LIVE_RESOLVER) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'This store does not support Live Resolvers') : invariant(false) : void 0;\n    var _evaluate = evaluate(),\n      resolverResult = _evaluate.resolverResult,\n      snapshot = _evaluate.snapshot,\n      error = _evaluate.error;\n    return [resolverResult, undefined, error, snapshot, undefined, undefined];\n  };\n  _proto.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {};\n  _proto.ensureClientRecord = function ensureClientRecord(id, typeName) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {};\n  return NoopResolverCache;\n}();\nfunction addDependencyEdge(edges, from, to) {\n  var set = edges.get(from);\n  if (!set) {\n    set = new Set();\n    edges.set(from, set);\n  }\n  set.add(to);\n}\nvar RecordResolverCache = /*#__PURE__*/function () {\n  function RecordResolverCache(getRecordSource) {\n    this._resolverIDToRecordIDs = new Map();\n    this._recordIDToResolverIDs = new Map();\n    this._getRecordSource = getRecordSource;\n  }\n  var _proto2 = RecordResolverCache.prototype;\n  _proto2.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    var recordSource = this._getRecordSource();\n\n    // NOTE: Be very careful with `record` in this scope. After `evaluate` has\n    // been called, the `record` we have here may have been replaced in the\n    // Relay store with a new record containing new information about nested\n    // resolvers on this parent record.\n    var record = recordSource.get(recordID);\n    !(record != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'We expect record to exist in the store.') : invariant(false) : void 0;\n    var storageKey = getStorageKey(field, variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    var linkedRecord = linkedID == null ? null : recordSource.get(linkedID);\n    if (linkedRecord == null || this._isInvalid(linkedRecord, getDataForResolverFragment)) {\n      var _linkedID;\n      // Cache miss; evaluate the selector and store the result in a new record:\n      linkedID = (_linkedID = linkedID) !== null && _linkedID !== void 0 ? _linkedID : generateClientID(recordID, storageKey);\n      linkedRecord = RelayModernRecord.create(linkedID, '__RELAY_RESOLVER__');\n      var evaluationResult = evaluate();\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY, evaluationResult.resolverResult);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY, evaluationResult.snapshot);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY, evaluationResult.error);\n      recordSource.set(linkedID, linkedRecord);\n\n      // Link the resolver value record to the resolver field of the record being read:\n\n      // Note: We get a fresh instance of the parent record from the record\n      // source, because it may have been updated when we traversed into child\n      // resolvers.\n      var currentRecord = recordSource.get(recordID);\n      !(currentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected the parent record to still be in the record source.') : invariant(false) : void 0;\n      var nextRecord = RelayModernRecord.clone(currentRecord);\n      RelayModernRecord.setLinkedRecordID(nextRecord, storageKey, linkedID);\n      recordSource.set(recordID, nextRecord);\n      if (field.fragment != null) {\n        var _evaluationResult$sna;\n        // Put records observed by the resolver into the dependency graph:\n        var fragmentStorageKey = getStorageKey(field.fragment, variables);\n        var resolverID = generateClientID(recordID, fragmentStorageKey);\n        addDependencyEdge(this._resolverIDToRecordIDs, resolverID, linkedID);\n        addDependencyEdge(this._recordIDToResolverIDs, recordID, resolverID);\n        var seenRecordIds = (_evaluationResult$sna = evaluationResult.snapshot) === null || _evaluationResult$sna === void 0 ? void 0 : _evaluationResult$sna.seenRecords;\n        if (seenRecordIds != null) {\n          var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(seenRecordIds),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var seenRecordID = _step.value;\n              addDependencyEdge(this._recordIDToResolverIDs, seenRecordID, resolverID);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n    }\n\n    // $FlowFixMe[incompatible-type] - will always be empty\n    var answer = linkedRecord[RELAY_RESOLVER_VALUE_KEY];\n    // $FlowFixMe[incompatible-type] - casting mixed\n    var snapshot = linkedRecord[RELAY_RESOLVER_SNAPSHOT_KEY];\n    // $FlowFixMe[incompatible-type] - casting mixed\n    var error = linkedRecord[RELAY_RESOLVER_ERROR_KEY];\n    return [answer, linkedID, error, snapshot, undefined, undefined];\n  };\n  _proto2.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs // Mutated in place\n  ) {\n    var recordSource = this._getRecordSource();\n    var visited = new Set();\n    var recordsToVisit = Array.from(updatedDataIDs);\n    while (recordsToVisit.length) {\n      var recordID = recordsToVisit.pop();\n      updatedDataIDs.add(recordID);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_recordIDToReso = this._recordIDToResolverIDs.get(recordID)) !== null && _this$_recordIDToReso !== void 0 ? _this$_recordIDToReso : emptySet),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _this$_recordIDToReso;\n          var fragment = _step2.value;\n          if (!visited.has(fragment)) {\n            var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_resolverIDToRe = this._resolverIDToRecordIDs.get(fragment)) !== null && _this$_resolverIDToRe !== void 0 ? _this$_resolverIDToRe : emptySet),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _this$_resolverIDToRe;\n                var anotherRecordID = _step3.value;\n                this._markInvalidatedResolverRecord(anotherRecordID, recordSource, updatedDataIDs);\n                if (!visited.has(anotherRecordID)) {\n                  recordsToVisit.push(anotherRecordID);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  };\n  _proto2._markInvalidatedResolverRecord = function _markInvalidatedResolverRecord(dataID, recordSource,\n  // Written to\n  updatedDataIDs // Mutated in place\n  ) {\n    var record = recordSource.get(dataID);\n    if (!record) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected a resolver record with ID %s, but it was missing.', dataID) : void 0;\n      return;\n    }\n    var nextRecord = RelayModernRecord.clone(record);\n    RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, true);\n    recordSource.set(dataID, nextRecord);\n  };\n  _proto2._isInvalid = function _isInvalid(record, getDataForResolverFragment) {\n    if (!RelayModernRecord.getValue(record, RELAY_RESOLVER_INVALIDATION_KEY)) {\n      return false;\n    }\n    // $FlowFixMe[incompatible-type] - storing values in records is not typed\n    var snapshot = RelayModernRecord.getValue(record, RELAY_RESOLVER_SNAPSHOT_KEY);\n    var originalInputs = snapshot === null || snapshot === void 0 ? void 0 : snapshot.data;\n    var readerSelector = snapshot === null || snapshot === void 0 ? void 0 : snapshot.selector;\n    if (originalInputs == null || readerSelector == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected previous inputs and reader selector on resolver record with ID %s, but they were missing.', RelayModernRecord.getDataID(record)) : void 0;\n      return true;\n    }\n    var _getDataForResolverFr = getDataForResolverFragment(readerSelector),\n      latestValues = _getDataForResolverFr.data;\n    var recycled = recycleNodesInto(originalInputs, latestValues);\n    if (recycled !== originalInputs) {\n      return true;\n    }\n    return false;\n  };\n  _proto2.ensureClientRecord = function ensureClientRecord(id, typename) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto2.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Processing @outputType records is not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  return RecordResolverCache;\n}();\nmodule.exports = {\n  NoopResolverCache: NoopResolverCache,\n  RecordResolverCache: RecordResolverCache\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getFragment = _require.getFragment;\nvar _require2 = require('./RelayModernSelector'),\n  getSelector = _require2.getSelector;\nvar invariant = require('invariant');\n\n// When we call the user-supplied resolver function, it will in turn call\n// `readFragment`, but that's a global function -- it needs information\n// about what resolver is being executed, which is supplied by putting the\n// info on this stack before we call the resolver function.\n\nvar contextStack = [];\nfunction withResolverContext(context, cb) {\n  contextStack.push(context);\n  try {\n    return cb();\n  } finally {\n    contextStack.pop();\n  }\n}\n\n// NOTE: these declarations are copied from 'useFragment'; it would be good\n// to figure out how to share the same type signature between the two functions.\n// The declarations ensure that the type of the returned data is:\n//   - non-nullable if the provided ref type is non-nullable\n//   - nullable if the provided ref type is nullable\n//   - array of non-nullable if the provided ref type is an array of\n//     non-nullable refs\n//   - array of nullable if the provided ref type is an array of nullable refs\n\nfunction readFragment(fragmentInput, fragmentKey) {\n  if (!contextStack.length) {\n    throw new Error('readFragment should be called only from within a Relay Resolver function.');\n  }\n  var context = contextStack[contextStack.length - 1];\n  var fragmentNode = getFragment(fragmentInput);\n  var fragmentSelector = getSelector(fragmentNode, fragmentKey);\n  !(fragmentSelector != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected a selector for the fragment of the resolver \".concat(fragmentNode.name, \", but got null.\")) : invariant(false) : void 0;\n  !(fragmentSelector.kind === 'SingularReaderSelector') ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected a singular reader selector for the fragment of the resolver \".concat(fragmentNode.name, \", but it was plural.\")) : invariant(false) : void 0;\n  var _context$getDataForRe = context.getDataForResolverFragment(fragmentSelector, fragmentKey),\n    data = _context$getDataForRe.data,\n    isMissingData = _context$getDataForRe.isMissingData;\n  if (isMissingData) {\n    throw RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL;\n  }\n  return data;\n}\nvar RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL = {};\nmodule.exports = {\n  readFragment: readFragment,\n  withResolverContext: withResolverContext,\n  RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL: RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar PREFIX = 'client:__type:';\nvar TYPE_SCHEMA_TYPE = '__TypeSchema';\nfunction generateTypeID(typeName) {\n  return PREFIX + typeName;\n}\nfunction isTypeID(id) {\n  return id.indexOf(PREFIX) === 0;\n}\nmodule.exports = {\n  generateTypeID: generateTypeID,\n  isTypeID: isTypeID,\n  TYPE_SCHEMA_TYPE: TYPE_SCHEMA_TYPE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID;\nvar _require2 = require('./RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID;\nvar VIEWER_ID = generateClientID(ROOT_ID, 'viewer');\nvar VIEWER_TYPE = 'Viewer';\nmodule.exports = {\n  VIEWER_ID: VIEWER_ID,\n  VIEWER_TYPE: VIEWER_TYPE\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../util/RelayConcreteNode'),\n  LINKED_FIELD = _require.LINKED_FIELD;\nvar _require2 = require('./RelayStoreUtils'),\n  getHandleStorageKey = _require2.getHandleStorageKey;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\n\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original linked\n * field (on which the handle was declared) among the sibling `selections`, and\n * copying its selections into the clone.\n */\nfunction cloneRelayHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === LINKED_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);\n  });\n  !(sourceField && sourceField.kind === LINKED_FIELD) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'cloneRelayHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle) : invariant(false) : void 0;\n  var handleKey = getHandleStorageKey(handleField, variables);\n  return {\n    kind: 'LinkedField',\n    alias: sourceField.alias,\n    name: handleKey,\n    storageKey: handleKey,\n    args: null,\n    concreteType: sourceField.concreteType,\n    plural: sourceField.plural,\n    selections: sourceField.selections\n  };\n}\nmodule.exports = cloneRelayHandleSourceField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../util/RelayConcreteNode'),\n  SCALAR_FIELD = _require.SCALAR_FIELD;\nvar _require2 = require('./RelayStoreUtils'),\n  getHandleStorageKey = _require2.getHandleStorageKey;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\n\n/**\n * @private\n *\n * Creates a clone of the supplied `handleField` by finding the original scalar\n * field (on which the handle was declared) among the sibling `selections`.\n */\nfunction cloneRelayScalarHandleSourceField(handleField, selections, variables) {\n  var sourceField = selections.find(function (source) {\n    return source.kind === SCALAR_FIELD && source.name === handleField.name && source.alias === handleField.alias && areEqual(source.args, handleField.args);\n  });\n  !(sourceField && sourceField.kind === SCALAR_FIELD) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'cloneRelayScalarHandleSourceField: Expected a corresponding source field for ' + 'handle `%s`.', handleField.handle) : invariant(false) : void 0;\n  var handleKey = getHandleStorageKey(handleField, variables);\n  return {\n    kind: 'ScalarField',\n    alias: sourceField.alias,\n    name: handleKey,\n    storageKey: handleKey,\n    args: null\n  };\n}\nmodule.exports = cloneRelayScalarHandleSourceField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernFragmentSpecResolver = require('./RelayModernFragmentSpecResolver');\nvar warning = require(\"fbjs/lib/warning\");\nfunction createFragmentSpecResolver(context, containerName, fragments, props, rootIsQueryRenderer, callback) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var fragmentNames = Object.keys(fragments);\n    fragmentNames.forEach(function (fragmentName) {\n      var propValue = props[fragmentName];\n      process.env.NODE_ENV !== \"production\" ? warning(propValue !== undefined, 'createFragmentSpecResolver: Expected prop `%s` to be supplied to `%s`, but ' + 'got `undefined`. Pass an explicit `null` if this is intentional.', fragmentName, containerName) : void 0;\n    });\n  }\n  return new RelayModernFragmentSpecResolver(context, fragments, props, callback, rootIsQueryRenderer);\n}\nmodule.exports = createFragmentSpecResolver;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\n\n// Ideally, we'd just import the type of the react module, but this causes Flow\n// problems.\n\nvar relayContext;\nvar firstReact;\nfunction createRelayContext(react) {\n  if (!relayContext) {\n    relayContext = react.createContext(null);\n    if (process.env.NODE_ENV !== \"production\") {\n      relayContext.displayName = 'RelayContext';\n    }\n    firstReact = react;\n  }\n  !(react === firstReact) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[createRelayContext]: You are passing a different instance of React', react.version) : invariant(false) : void 0;\n  return relayContext;\n}\nmodule.exports = createRelayContext;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./ViewerPattern'),\n  VIEWER_ID = _require.VIEWER_ID,\n  VIEWER_TYPE = _require.VIEWER_TYPE;\nfunction defaultGetDataID(fieldValue, typeName) {\n  if (typeName === VIEWER_TYPE) {\n    return fieldValue.id == null ? VIEWER_ID : fieldValue.id;\n  }\n  return fieldValue.id;\n}\nmodule.exports = defaultGetDataID;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar defaultRequiredFieldLogger = function defaultRequiredFieldLogger(event) {\n  if (process.env.NODE_ENV !== \"production\" && event.kind === 'missing_field.log') {\n    throw new Error('Relay Environment Configuration Error (dev only): `@required(action: LOG)` requires that the Relay Environment be configured with a `requiredFieldLogger`.');\n  }\n};\nmodule.exports = defaultRequiredFieldLogger;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar LIVE_RESOLVER_SUSPENSE_SENTINEL = Object.freeze({\n  __LIVE_RESOLVER_SUSPENSE_SENTINEL: true\n});\nfunction suspenseSentinel() {\n  // $FlowFixMe[incompatible-return]\n  return LIVE_RESOLVER_SUSPENSE_SENTINEL;\n}\nfunction isSuspenseSentinel(value) {\n  return value === LIVE_RESOLVER_SUSPENSE_SENTINEL;\n}\nmodule.exports = {\n  isSuspenseSentinel: isSuspenseSentinel,\n  suspenseSentinel: suspenseSentinel\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayModernRecord = require('../RelayModernRecord');\nvar _require = require('../RelayStoreUtils'),\n  RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS = _require.RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS;\nvar invariant = require('invariant');\nfunction getOutputTypeRecordIDs(record) {\n  var maybeOutputTypeRecordIDs = RelayModernRecord.getValue(record, RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS);\n  if (maybeOutputTypeRecordIDs == null) {\n    return null;\n  }\n  !(maybeOutputTypeRecordIDs instanceof Set) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getOutputTypeRecordIDs: Expected the `%s` field on record `%s` to be of type Set. Instead, it is a %s.', RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS, typeof maybeOutputTypeRecordIDs) : invariant(false) : void 0;\n  return maybeOutputTypeRecordIDs;\n}\nmodule.exports = getOutputTypeRecordIDs;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar ITERATOR_KEY = Symbol.iterator;\nfunction hasOverlappingIDs(seenRecords, updatedRecordIDs) {\n  // $FlowFixMe[incompatible-use]: Set is an iterable type, accessing its iterator is allowed.\n  var iterator = seenRecords[ITERATOR_KEY]();\n  var next = iterator.next();\n  while (!next.done) {\n    var key = next.value;\n    if (updatedRecordIDs.has(key)) {\n      return true;\n    }\n    next = iterator.next();\n  }\n  return false;\n}\nmodule.exports = hasOverlappingIDs;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Determine if a given value is an object that implements the `Environment`\n * interface defined in `RelayStoreTypes`.\n *\n * Use a sigil for detection to avoid a realm-specific instanceof check, and to\n * aid in module tree-shaking to avoid requiring all of RelayRuntime just to\n * detect its environment.\n */\nfunction isRelayModernEnvironment(environment) {\n  return Boolean(environment && environment['@@RelayModernEnvironment']);\n}\nmodule.exports = isRelayModernEnvironment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getInlineDataFragment = _require.getInlineDataFragment;\nvar _require2 = require('./RelayStoreUtils'),\n  FRAGMENTS_KEY = _require2.FRAGMENTS_KEY;\nvar invariant = require('invariant');\nfunction readInlineData(fragment, fragmentRef) {\n  var _fragmentRef$FRAGMENT;\n  var inlineDataFragment = getInlineDataFragment(fragment);\n  if (fragmentRef == null) {\n    return fragmentRef;\n  }\n  !(typeof fragmentRef === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected an object, got `%s`.', typeof fragmentRef) : invariant(false) : void 0;\n  // $FlowFixMe[incompatible-use]\n  var inlineData = (_fragmentRef$FRAGMENT = fragmentRef[FRAGMENTS_KEY]) === null || _fragmentRef$FRAGMENT === void 0 ? void 0 : _fragmentRef$FRAGMENT[inlineDataFragment.name];\n  !(inlineData != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'readInlineData(): Expected fragment `%s` to be spread in the parent ' + 'fragment.', inlineDataFragment.name) : invariant(false) : void 0;\n  return inlineData;\n}\nmodule.exports = readInlineData;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayDeclarativeMutationConfig = require('../mutations/RelayDeclarativeMutationConfig');\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require2.createOperationDescriptor;\nvar _require3 = require('../store/RelayModernSelector'),\n  createReaderSelector = _require3.createReaderSelector;\nvar warning = require(\"fbjs/lib/warning\");\nfunction requestSubscription(environment, config) {\n  var subscription = getRequest(config.subscription);\n  if (subscription.params.operationKind !== 'subscription') {\n    throw new Error('requestSubscription: Must use Subscription operation');\n  }\n  var configs = config.configs,\n    onCompleted = config.onCompleted,\n    onError = config.onError,\n    onNext = config.onNext,\n    variables = config.variables,\n    cacheConfig = config.cacheConfig;\n  var operation = createOperationDescriptor(subscription, variables, cacheConfig);\n  process.env.NODE_ENV !== \"production\" ? warning(!(config.updater && configs), 'requestSubscription: Expected only one of `updater` and `configs` to be provided') : void 0;\n  var _ref = configs ? RelayDeclarativeMutationConfig.convert(configs, subscription, null /* optimisticUpdater */, config.updater) : config,\n    updater = _ref.updater;\n  var sub = environment.executeSubscription({\n    operation: operation,\n    updater: updater\n  }).subscribe({\n    next: function next(responses) {\n      if (onNext != null) {\n        var selector = operation.fragment;\n        var nextID;\n        if (Array.isArray(responses)) {\n          var _responses$, _responses$$extension;\n          nextID = (_responses$ = responses[0]) === null || _responses$ === void 0 ? void 0 : (_responses$$extension = _responses$.extensions) === null || _responses$$extension === void 0 ? void 0 : _responses$$extension.__relay_subscription_root_id;\n        } else {\n          var _responses$extensions;\n          nextID = (_responses$extensions = responses.extensions) === null || _responses$extensions === void 0 ? void 0 : _responses$extensions.__relay_subscription_root_id;\n        }\n        if (typeof nextID === 'string') {\n          selector = createReaderSelector(selector.node, nextID, selector.variables, selector.owner);\n        }\n        var data = environment.lookup(selector).data;\n        // $FlowFixMe[incompatible-cast]\n        onNext(data);\n      }\n    },\n    error: onError,\n    complete: onCompleted\n  });\n  return {\n    dispose: sub.unsubscribe\n  };\n}\nmodule.exports = requestSubscription;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Represents a common GraphQL request that can be executed, an `operation`\n * containing information to normalize the results, and a `fragment` derived\n * from that operation to read the response data (masking data from child\n * fragments).\n */\n\n/**\n * Contains the parameters required for executing a GraphQL request.\n * The operation can either be provided as a persisted `id` or `text`. If given\n * in `text` format, a `cacheID` as a hash of the text should be set to be used\n * for local caching.\n */\n\nvar RelayConcreteNode = {\n  ACTOR_CHANGE: 'ActorChange',\n  CONDITION: 'Condition',\n  CLIENT_COMPONENT: 'ClientComponent',\n  CLIENT_EDGE_TO_SERVER_OBJECT: 'ClientEdgeToServerObject',\n  CLIENT_EDGE_TO_CLIENT_OBJECT: 'ClientEdgeToClientObject',\n  CLIENT_EXTENSION: 'ClientExtension',\n  DEFER: 'Defer',\n  CONNECTION: 'Connection',\n  FLIGHT_FIELD: 'FlightField',\n  FRAGMENT: 'Fragment',\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_DATA_FRAGMENT_SPREAD: 'InlineDataFragmentSpread',\n  INLINE_DATA_FRAGMENT: 'InlineDataFragment',\n  INLINE_FRAGMENT: 'InlineFragment',\n  LINKED_FIELD: 'LinkedField',\n  LINKED_HANDLE: 'LinkedHandle',\n  LITERAL: 'Literal',\n  LIST_VALUE: 'ListValue',\n  LOCAL_ARGUMENT: 'LocalArgument',\n  MODULE_IMPORT: 'ModuleImport',\n  ALIASED_FRAGMENT_SPREAD: 'AliasedFragmentSpread',\n  ALIASED_INLINE_FRAGMENT_SPREAD: 'AliasedInlineFragmentSpread',\n  RELAY_RESOLVER: 'RelayResolver',\n  RELAY_LIVE_RESOLVER: 'RelayLiveResolver',\n  REQUIRED_FIELD: 'RequiredField',\n  OBJECT_VALUE: 'ObjectValue',\n  OPERATION: 'Operation',\n  REQUEST: 'Request',\n  ROOT_ARGUMENT: 'RootArgument',\n  SCALAR_FIELD: 'ScalarField',\n  SCALAR_HANDLE: 'ScalarHandle',\n  SPLIT_OPERATION: 'SplitOperation',\n  STREAM: 'Stream',\n  TYPE_DISCRIMINATOR: 'TypeDiscriminator',\n  UPDATABLE_QUERY: 'UpdatableQuery',\n  VARIABLE: 'Variable'\n};\nmodule.exports = RelayConcreteNode;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nmodule.exports = {\n  DEFAULT_HANDLE_KEY: ''\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * @private\n */\nfunction createError(type, name, messageFormat) {\n  for (var _len = arguments.length, messageParams = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    messageParams[_key - 3] = arguments[_key];\n  }\n  var index = 0;\n  var message = messageFormat.replace(/%s/g, function () {\n    return String(messageParams[index++]);\n  });\n  var err = new Error(message);\n  var error = Object.assign(err, {\n    name: name,\n    messageFormat: messageFormat,\n    messageParams: messageParams,\n    type: type,\n    taalOpcodes: [2, 2] // skip frame (code=2) twice\n  });\n  // In V8, Error objects keep the closure scope chain alive until the\n  // err.stack property is accessed.\n  if (error.stack === undefined) {\n    // IE sets the stack only if error is thrown\n    try {\n      throw error;\n    } catch (_unused) {}\n  }\n  return error;\n}\nmodule.exports = {\n  create: function create(name, messageFormat) {\n    for (var _len2 = arguments.length, messageParams = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      messageParams[_key2 - 2] = arguments[_key2];\n    }\n    return createError.apply(void 0, ['error', name, messageFormat].concat(messageParams));\n  },\n  createWarning: function createWarning(name, messageFormat) {\n    for (var _len3 = arguments.length, messageParams = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      messageParams[_key3 - 2] = arguments[_key3];\n    }\n    return createError.apply(void 0, ['warn', name, messageFormat].concat(messageParams));\n  }\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar RelayFeatureFlags = {\n  ENABLE_CLIENT_EDGES: false,\n  ENABLE_VARIABLE_CONNECTION_KEY: false,\n  ENABLE_PARTIAL_RENDERING_DEFAULT: true,\n  ENABLE_REACT_FLIGHT_COMPONENT_FIELD: false,\n  ENABLE_RELAY_RESOLVERS: false,\n  ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION: false,\n  ENABLE_FRIENDLY_QUERY_NAME_GQL_URL: false,\n  ENABLE_LOAD_QUERY_REQUEST_DEDUPING: true,\n  ENABLE_DO_NOT_WRAP_LIVE_QUERY: false,\n  ENABLE_NOTIFY_SUBSCRIPTION: false,\n  BATCH_ASYNC_MODULE_UPDATES_FN: null,\n  ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT: false,\n  MAX_DATA_ID_LENGTH: null,\n  STRING_INTERN_LEVEL: 0,\n  USE_REACT_CACHE: false,\n  USE_REACT_CACHE_LEGACY_TIMEOUTS: true,\n  ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION: false\n};\nmodule.exports = RelayFeatureFlags;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar profileHandlersByName = {};\nvar defaultProfiler = {\n  stop: function stop() {}\n};\n\n/**\n * @public\n *\n * Instruments methods to allow profiling various parts of Relay. Profiling code\n * in Relay consists of three steps:\n *\n *  - Instrument the function to be profiled.\n *  - Attach handlers to the instrumented function.\n *  - Run the code which triggers the handlers.\n *\n * Handlers attached to instrumented methods are called with an instrumentation\n * name and a callback that must be synchronously executed:\n *\n *   instrumentedMethod.attachHandler(function(name, callback) {\n *     const start = performance.now();\n *     callback();\n *     console.log('Duration', performance.now() - start);\n *   });\n *\n * Handlers for profiles are callbacks that return a stop method:\n *\n *   RelayProfiler.attachProfileHandler('profileName', (name, state) => {\n *     const start = performance.now();\n *     return function stop(name, state) {\n *       console.log(`Duration (${name})`, performance.now() - start);\n *     }\n *   });\n */\nvar RelayProfiler = {\n  /**\n   * Instruments profiling for arbitrarily asynchronous code by a name.\n   *\n   *   const timerProfiler = RelayProfiler.profile('timeout');\n   *   setTimeout(function() {\n   *     timerProfiler.stop();\n   *   }, 1000);\n   *\n   *   RelayProfiler.attachProfileHandler('timeout', ...);\n   *\n   * Arbitrary state can also be passed into `profile` as a second argument. The\n   * attached profile handlers will receive this as the second argument.\n   */\n  profile: function profile(name, state) {\n    var handlers = profileHandlersByName[name];\n    if (handlers && handlers.length > 0) {\n      var stopHandlers = [];\n      for (var ii = handlers.length - 1; ii >= 0; ii--) {\n        var stopHandler = handlers[ii](name, state);\n        stopHandlers.unshift(stopHandler);\n      }\n      return {\n        stop: function stop(error) {\n          stopHandlers.forEach(function (stopHandler) {\n            return stopHandler(error);\n          });\n        }\n      };\n    }\n    return defaultProfiler;\n  },\n  /**\n   * Attaches a handler to profiles with the supplied name.\n   */\n  attachProfileHandler: function attachProfileHandler(name, handler) {\n    if (!profileHandlersByName.hasOwnProperty(name)) {\n      profileHandlersByName[name] = [];\n    }\n    profileHandlersByName[name].push(handler);\n  },\n  /**\n   * Detaches a handler attached via `attachProfileHandler`.\n   */\n  detachProfileHandler: function detachProfileHandler(name, handler) {\n    if (profileHandlersByName.hasOwnProperty(name)) {\n      removeFromArray(profileHandlersByName[name], handler);\n    }\n  }\n};\nfunction removeFromArray(array, element) {\n  var index = array.indexOf(element);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nmodule.exports = RelayProfiler;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar invariant = require('invariant');\n/**\n * An implementation of a `ReplaySubject` for Relay Observables.\n *\n * Records events provided and synchronously plays them back to new subscribers,\n * as well as forwarding new asynchronous events.\n */\nvar RelayReplaySubject = /*#__PURE__*/function () {\n  function RelayReplaySubject() {\n    var _this = this;\n    (0, _defineProperty2[\"default\"])(this, \"_complete\", false);\n    (0, _defineProperty2[\"default\"])(this, \"_events\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_sinks\", new Set());\n    (0, _defineProperty2[\"default\"])(this, \"_subscription\", []);\n    this._observable = RelayObservable.create(function (sink) {\n      _this._sinks.add(sink);\n      var events = _this._events;\n      for (var i = 0; i < events.length; i++) {\n        if (sink.closed) {\n          // Bail if an event made the observer unsubscribe.\n          break;\n        }\n        var event = events[i];\n        switch (event.kind) {\n          case 'complete':\n            sink.complete();\n            break;\n          case 'error':\n            sink.error(event.error);\n            break;\n          case 'next':\n            sink.next(event.data);\n            break;\n          default:\n            event.kind;\n            !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReplaySubject: Unknown event kind `%s`.', event.kind) : invariant(false) : void 0;\n        }\n      }\n      return function () {\n        _this._sinks[\"delete\"](sink);\n      };\n    });\n  }\n  var _proto = RelayReplaySubject.prototype;\n  _proto.complete = function complete() {\n    if (this._complete === true) {\n      return;\n    }\n    this._complete = true;\n    this._events.push({\n      kind: 'complete'\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.complete();\n    });\n  };\n  _proto.error = function error(_error) {\n    if (this._complete === true) {\n      return;\n    }\n    this._complete = true;\n    this._events.push({\n      kind: 'error',\n      error: _error\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.error(_error);\n    });\n  };\n  _proto.next = function next(data) {\n    if (this._complete === true) {\n      return;\n    }\n    this._events.push({\n      kind: 'next',\n      data: data\n    });\n    this._sinks.forEach(function (sink) {\n      return sink.next(data);\n    });\n  };\n  _proto.subscribe = function subscribe(observer) {\n    var subscription = this._observable.subscribe(observer);\n    this._subscription.push(subscription);\n    return subscription;\n  };\n  _proto.unsubscribe = function unsubscribe() {\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._subscription),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var subscription = _step.value;\n        subscription.unsubscribe();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    this._subscription = [];\n  };\n  _proto.getObserverCount = function getObserverCount() {\n    return this._sinks.size;\n  };\n  return RelayReplaySubject;\n}();\nmodule.exports = RelayReplaySubject;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar internTable = new Map();\nvar nextIndex = 1;\nvar digits = initDigitTable();\n\n// Character used as the prefix for interned strings. The specific character is\n// chosen to reduce the likelihood that non-interned input strings need to be\n// escaped (choosing eg a-Z would increase the likelihood we need to escape)\nvar INTERN_PREFIX = '\\t';\n// Character used as the prefix of escaped strings. As above, this is also\n// chosen to be unlikely in normal input strings.\nvar ESCAPE_PREFIX = '\\v';\nfunction initDigitTable() {\n  // disable lint because digits isn't defined when this function is called\n  // eslint-disable-next-line no-shadow\n  var digits = new Set();\n  for (var i = 0; i < 10; ++i) {\n    digits.add(i.toString());\n  }\n  return digits;\n}\n\n// Escape a string so that it cannot conflict with an interned string\nfunction escape(str) {\n  if (\n  // \"\\t<digit>...\" -> \"\\v\\t<digit>...\"\n  str[0] === INTERN_PREFIX && digits.has(str[1]) ||\n  // \"\\v...\" -> \"\\v\\v...\"\n  str[0] === ESCAPE_PREFIX) {\n    return ESCAPE_PREFIX + str;\n  }\n  return str;\n}\n\n// Interns the input string if its length equals or exceeds the given `limit`,\n// returning a shorter replacement string that is uniquely associated with the\n// input: multiple calls to intern() for the equivalent input strings (and limit)\n// will always return the exact same string.\n// Strings shorter than the limit are not interned but are escaped if they\n// could conflict with interned strings.\nfunction intern(str, limit) {\n  if (limit == null || str.length < limit) {\n    return escape(str);\n  }\n  var internedString = internTable.get(str);\n  if (internedString != null) {\n    return internedString;\n  }\n  internedString = INTERN_PREFIX + nextIndex++;\n  internTable.set(str, internedString);\n  return internedString;\n}\nmodule.exports = {\n  intern: intern\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('../store/RelayStoreUtils'),\n  getModuleComponentKey = _require.getModuleComponentKey,\n  getModuleOperationKey = _require.getModuleOperationKey;\nfunction createPayloadFor3DField(name, operation, component, response) {\n  var data = (0, _objectSpread2[\"default\"])({}, response);\n  // $FlowFixMe[prop-missing]\n  data[getModuleComponentKey(name)] = component;\n  // $FlowFixMe[prop-missing]\n  data[getModuleOperationKey(name)] = operation;\n  return data;\n}\nmodule.exports = createPayloadFor3DField;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Recursively \"deep\" freezes the supplied object.\n *\n * For convenience, and for consistency with the behavior of `Object.freeze`,\n * returns the now-frozen original object.\n */\nfunction deepFreeze(object) {\n  Object.freeze(object);\n  Object.getOwnPropertyNames(object).forEach(function (name) {\n    var property = object[name];\n    if (property && typeof property === 'object' && !Object.isFrozen(property)) {\n      deepFreeze(property);\n    }\n  });\n  return object;\n}\nmodule.exports = deepFreeze;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar id = 100000;\nfunction generateID() {\n  return id++;\n}\nmodule.exports = generateID;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../store/RelayModernSelector'),\n  getDataIDsFromFragment = _require.getDataIDsFromFragment,\n  getSelector = _require.getSelector,\n  getVariablesFromFragment = _require.getVariablesFromFragment;\nvar isEmptyObject = require('./isEmptyObject');\nvar RelayFeatureFlags = require('./RelayFeatureFlags');\nvar stableCopy = require('./stableCopy');\nvar _require2 = require('./StringInterner'),\n  intern = _require2.intern;\nfunction getFragmentIdentifier(fragmentNode, fragmentRef) {\n  var selector = getSelector(fragmentNode, fragmentRef);\n  var fragmentOwnerIdentifier = selector == null ? 'null' : selector.kind === 'SingularReaderSelector' ? selector.owner.identifier : '[' + selector.selectors.map(function (sel) {\n    return sel.owner.identifier;\n  }).join(',') + ']';\n  var fragmentVariables = getVariablesFromFragment(fragmentNode, fragmentRef);\n  var dataIDs = getDataIDsFromFragment(fragmentNode, fragmentRef);\n  if (RelayFeatureFlags.ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION) {\n    var ids = typeof dataIDs === 'undefined' ? 'missing' : dataIDs == null ? 'null' : Array.isArray(dataIDs) ? '[' + dataIDs.join(',') + ']' : dataIDs;\n    ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? ids : intern(ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + (fragmentVariables == null || isEmptyObject(fragmentVariables) ? '{}' : JSON.stringify(stableCopy(fragmentVariables))) + '/' + ids;\n  } else {\n    var _JSON$stringify;\n    var _ids = (_JSON$stringify = JSON.stringify(dataIDs)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'missing';\n    _ids = RelayFeatureFlags.STRING_INTERN_LEVEL <= 1 ? _ids : intern(_ids, RelayFeatureFlags.MAX_DATA_ID_LENGTH);\n    return fragmentOwnerIdentifier + '/' + fragmentNode.name + '/' + JSON.stringify(stableCopy(fragmentVariables)) + '/' + _ids;\n  }\n}\nmodule.exports = getFragmentIdentifier;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayConcreteNode'),\n  REQUEST = _require.REQUEST,\n  SPLIT_OPERATION = _require.SPLIT_OPERATION;\n\n/**\n * OperationLoaders can return either a NormalizationSplitOperation or\n * ConcreteRequest.\n */\nfunction getOperation(node) {\n  switch (node.kind) {\n    case REQUEST:\n      return node.operation;\n    case SPLIT_OPERATION:\n    default:\n      return node;\n  }\n}\nmodule.exports = getOperation;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar getRefetchMetadata = require('./getRefetchMetadata');\nvar invariant = require('invariant');\nfunction getPaginationMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n    paginationRequest = _getRefetchMetadata.refetchableRequest,\n    refetchMetadata = _getRefetchMetadata.refetchMetadata;\n  var paginationMetadata = refetchMetadata.connection;\n  !(paginationMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var connectionPathInFragmentData = paginationMetadata.path;\n  var connectionMetadata = ((_fragmentNode$metadat = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.connection) !== null && _fragmentNode$metadat !== void 0 ? _fragmentNode$metadat : [])[0];\n  !(connectionMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    connectionPathInFragmentData: connectionPathInFragmentData,\n    identifierField: identifierField,\n    paginationRequest: paginationRequest,\n    paginationMetadata: paginationMetadata,\n    stream: connectionMetadata.stream === true\n  };\n}\nmodule.exports = getPaginationMetadata;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectSpread4 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction getPaginationVariables(direction, count, cursor, baseVariables, extraVariables, paginationMetadata) {\n  var _objectSpread3;\n  var backwardMetadata = paginationMetadata.backward,\n    forwardMetadata = paginationMetadata.forward;\n  if (direction === 'backward') {\n    var _objectSpread2;\n    !(backwardMetadata != null && backwardMetadata.count != null && backwardMetadata.cursor != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected backward pagination metadata to be available. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(backwardMetadata.cursor), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain cursor variable `%s`. This variable is automatically ' + 'determined by Relay.', backwardMetadata.cursor) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(backwardMetadata.count), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain count variable `%s`. This variable is automatically ' + 'determined by Relay.', backwardMetadata.count) : void 0;\n    var _paginationVariables = (0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])({}, baseVariables), extraVariables), {}, (_objectSpread2 = {}, (0, _defineProperty2[\"default\"])(_objectSpread2, backwardMetadata.cursor, cursor), (0, _defineProperty2[\"default\"])(_objectSpread2, backwardMetadata.count, count), _objectSpread2));\n    if (forwardMetadata && forwardMetadata.cursor) {\n      _paginationVariables[forwardMetadata.cursor] = null;\n    }\n    if (forwardMetadata && forwardMetadata.count) {\n      _paginationVariables[forwardMetadata.count] = null;\n    }\n    return _paginationVariables;\n  }\n  !(forwardMetadata != null && forwardMetadata.count != null && forwardMetadata.cursor != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected forward pagination metadata to be available. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(forwardMetadata.cursor), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain cursor variable `%s`. This variable is automatically ' + 'determined by Relay.', forwardMetadata.cursor) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!extraVariables.hasOwnProperty(forwardMetadata.count), 'Relay: `UNSTABLE_extraVariables` provided by caller should not ' + 'contain count variable `%s`. This variable is automatically ' + 'determined by Relay.', forwardMetadata.count) : void 0;\n  var paginationVariables = (0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])((0, _objectSpread4[\"default\"])({}, baseVariables), extraVariables), {}, (_objectSpread3 = {}, (0, _defineProperty2[\"default\"])(_objectSpread3, forwardMetadata.cursor, cursor), (0, _defineProperty2[\"default\"])(_objectSpread3, forwardMetadata.count, count), _objectSpread3));\n  if (backwardMetadata && backwardMetadata.cursor) {\n    paginationVariables[backwardMetadata.cursor] = null;\n  }\n  if (backwardMetadata && backwardMetadata.count) {\n    paginationVariables[backwardMetadata.count] = null;\n  }\n  return paginationVariables;\n}\nmodule.exports = getPaginationVariables;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('../query/fetchQueryInternal'),\n  getPromiseForActiveRequest = _require.getPromiseForActiveRequest;\nfunction getPendingOperationsForFragment(environment, fragmentNode, fragmentOwner) {\n  var _pendingOperations$ma, _pendingOperations;\n  var pendingOperations = [];\n  var promise = getPromiseForActiveRequest(environment, fragmentOwner);\n  if (promise != null) {\n    pendingOperations = [fragmentOwner];\n  } else {\n    var _result$pendingOperat, _result$promise;\n    var result = environment.getOperationTracker().getPendingOperationsAffectingOwner(fragmentOwner);\n    pendingOperations = (_result$pendingOperat = result === null || result === void 0 ? void 0 : result.pendingOperations) !== null && _result$pendingOperat !== void 0 ? _result$pendingOperat : [];\n    promise = (_result$promise = result === null || result === void 0 ? void 0 : result.promise) !== null && _result$promise !== void 0 ? _result$promise : null;\n  }\n  if (!promise) {\n    return null;\n  }\n  var pendingOperationName = (_pendingOperations$ma = (_pendingOperations = pendingOperations) === null || _pendingOperations === void 0 ? void 0 : _pendingOperations.map(function (op) {\n    return op.node.params.name;\n  }).join(',')) !== null && _pendingOperations$ma !== void 0 ? _pendingOperations$ma : null;\n  if (pendingOperationName == null || pendingOperationName.length === 0) {\n    pendingOperationName = 'Unknown pending operation';\n  }\n  var fragmentName = fragmentNode.name;\n  var promiseDisplayName = pendingOperationName === fragmentName ? \"Relay(\".concat(pendingOperationName, \")\") : \"Relay(\".concat(pendingOperationName, \":\").concat(fragmentName, \")\");\n  // $FlowExpectedError[prop-missing] Expando to annotate Promises.\n  promise.displayName = promiseDisplayName;\n\n  // In order to monitor the efficacy of RelayOperationTracker, we log\n  // enough information to track whether we are suspending on the fragment\n  // owner's operation, or some other operation.\n  environment.__log({\n    name: 'pendingoperation.found',\n    fragment: fragmentNode,\n    fragmentOwner: fragmentOwner,\n    pendingOperations: pendingOperations\n  });\n  return {\n    promise: promise,\n    pendingOperations: pendingOperations\n  };\n}\nmodule.exports = getPendingOperationsForFragment;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar invariant = require('invariant');\nfunction getRefetchMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n  !(((_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` not to be plural when using ' + '`%s`. Remove `@relay(plural: true)` from fragment `%s` ' + 'in order to use it with `%s`.', fragmentNode.name, componentDisplayName, fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n  var refetchMetadata = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.refetch;\n  !(refetchMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` to be refetchable when using `%s`. ' + 'Did you forget to add a @refetchable directive to the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n\n  // handle both commonjs and es modules\n  var refetchableRequest = refetchMetadata.operation[\"default\"] ? refetchMetadata.operation[\"default\"] : refetchMetadata.operation;\n  var fragmentRefPathInResponse = refetchMetadata.fragmentPathInResult;\n  !(typeof refetchableRequest !== 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected refetch query to be an ' + \"operation and not a string when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', componentDisplayName) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    fragmentRefPathInResponse: fragmentRefPathInResponse,\n    identifierField: identifierField,\n    refetchableRequest: refetchableRequest,\n    refetchMetadata: refetchMetadata\n  };\n}\nmodule.exports = getRefetchMetadata;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _require = require('./RelayDefaultHandleKey'),\n  DEFAULT_HANDLE_KEY = _require.DEFAULT_HANDLE_KEY;\nvar invariant = require('invariant');\n\n/**\n * @internal\n *\n * Helper to create a unique name for a handle field based on the handle name, handle key and\n * source field.\n */\nfunction getRelayHandleKey(handleName, key, fieldName) {\n  if (key && key !== DEFAULT_HANDLE_KEY) {\n    return \"__\".concat(key, \"_\").concat(handleName);\n  }\n  !(fieldName != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getRelayHandleKey: Expected either `fieldName` or `key` in `handle` to be provided') : invariant(false) : void 0;\n  return \"__\".concat(fieldName, \"_\").concat(handleName);\n}\nmodule.exports = getRelayHandleKey;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar stableCopy = require('./stableCopy');\nvar invariant = require('invariant');\n/**\n * Returns a stable identifier for the given pair of `RequestParameters` +\n * variables.\n */\nfunction getRequestIdentifier(parameters, variables) {\n  var requestID = parameters.cacheID != null ? parameters.cacheID : parameters.id;\n  !(requestID != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getRequestIdentifier: Expected request `%s` to have either a ' + 'valid `id` or `cacheID` property', parameters.name) : invariant(false) : void 0;\n  return requestID + JSON.stringify(stableCopy(variables));\n}\nmodule.exports = getRequestIdentifier;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar invariant = require('invariant');\nfunction getValueAtPath(data, path) {\n  var result = data;\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(path),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      if (result == null) {\n        return null;\n      }\n      if (typeof key === 'number') {\n        !Array.isArray(result) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected an array when extracting value at path. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n        result = result[key];\n      } else {\n        !(typeof result === 'object' && !Array.isArray(result)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: Expected an object when extracting value at path. ' + \"If you're seeing this, this is likely a bug in Relay.\") : invariant(false) : void 0;\n        result = result[key];\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n}\nmodule.exports = getValueAtPath;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nfunction handlePotentialSnapshotErrors(environment, missingRequiredFields, relayResolverErrors) {\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(relayResolverErrors),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var resolverError = _step.value;\n      environment.requiredFieldLogger({\n        kind: 'relay_resolver.error',\n        owner: resolverError.field.owner,\n        fieldPath: resolverError.field.path,\n        error: resolverError.error\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (missingRequiredFields != null) {\n    switch (missingRequiredFields.action) {\n      case 'THROW':\n        {\n          var _missingRequiredField = missingRequiredFields.field,\n            path = _missingRequiredField.path,\n            owner = _missingRequiredField.owner;\n          // This gives the consumer the chance to throw their own error if they so wish.\n          environment.requiredFieldLogger({\n            kind: 'missing_field.throw',\n            owner: owner,\n            fieldPath: path\n          });\n          throw new Error(\"Relay: Missing @required value at path '\".concat(path, \"' in '\").concat(owner, \"'.\"));\n        }\n      case 'LOG':\n        missingRequiredFields.fields.forEach(function (_ref) {\n          var path = _ref.path,\n            owner = _ref.owner;\n          environment.requiredFieldLogger({\n            kind: 'missing_field.log',\n            owner: owner,\n            fieldPath: path\n          });\n        });\n        break;\n      default:\n        {\n          missingRequiredFields.action;\n        }\n    }\n  }\n}\nmodule.exports = handlePotentialSnapshotErrors;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n// $FlowFixMe[method-unbinding] added when improving typing for this parameters\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmptyObject(obj) {\n  for (var _key in obj) {\n    if (hasOwnProperty.call(obj, _key)) {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = isEmptyObject;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\nmodule.exports = isPromise;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * A fast test to determine if two values are equal scalars:\n * - compares scalars such as booleans, strings, numbers by value\n * - compares functions by identity\n * - returns false for complex values, since these cannot be cheaply tested for\n *   equality (use `areEquals` instead)\n */\nfunction isScalarAndEqual(valueA, valueB) {\n  return valueA === valueB && (valueA === null || typeof valueA !== 'object');\n}\nmodule.exports = isScalarAndEqual;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar hasWeakSetDefined = typeof WeakSet !== 'undefined';\nvar hasWeakMapDefined = typeof WeakMap !== 'undefined';\n\n/**\n * Recycles subtrees from `prevData` by replacing equal subtrees in `nextData`.\n */\nfunction recycleNodesInto(prevData, nextData) {\n  if (prevData === nextData || typeof prevData !== 'object' || prevData instanceof Set || prevData instanceof Map || hasWeakSetDefined && prevData instanceof WeakSet || hasWeakMapDefined && prevData instanceof WeakMap || !prevData || typeof nextData !== 'object' || nextData instanceof Set || nextData instanceof Map || hasWeakSetDefined && nextData instanceof WeakSet || hasWeakMapDefined && nextData instanceof WeakMap || !nextData) {\n    return nextData;\n  }\n  var canRecycle = false;\n\n  // Assign local variables to preserve Flow type refinement.\n  var prevArray = Array.isArray(prevData) ? prevData : null;\n  var nextArray = Array.isArray(nextData) ? nextData : null;\n  if (prevArray && nextArray) {\n    canRecycle = nextArray.reduce(function (wasEqual, nextItem, ii) {\n      var prevValue = prevArray[ii];\n      var nextValue = recycleNodesInto(prevValue, nextItem);\n      if (nextValue !== nextArray[ii]) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!Object.isFrozen(nextArray)) {\n            nextArray[ii] = nextValue;\n          }\n        } else {\n          nextArray[ii] = nextValue;\n        }\n      }\n      return wasEqual && nextValue === prevArray[ii];\n    }, true) && prevArray.length === nextArray.length;\n  } else if (!prevArray && !nextArray) {\n    // Assign local variables to preserve Flow type refinement.\n    var prevObject = prevData;\n    var nextObject = nextData;\n    var prevKeys = Object.keys(prevObject);\n    var nextKeys = Object.keys(nextObject);\n    canRecycle = nextKeys.reduce(function (wasEqual, key) {\n      var prevValue = prevObject[key];\n      var nextValue = recycleNodesInto(prevValue, nextObject[key]);\n      if (nextValue !== nextObject[key]) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!Object.isFrozen(nextObject)) {\n            // $FlowFixMe[cannot-write]\n            nextObject[key] = nextValue;\n          }\n        } else {\n          // $FlowFixMe[cannot-write]\n          nextObject[key] = nextValue;\n        }\n      }\n      return wasEqual && nextValue === prevObject[key];\n    }, true) && prevKeys.length === nextKeys.length;\n  }\n  return canRecycle ? prevData : nextData;\n}\nmodule.exports = recycleNodesInto;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nfunction registerEnvironmentWithDevTools(environment) {\n  // Register this Relay Environment with Relay DevTools if it exists.\n  // Note: this must always be the last step in the constructor.\n  var _global = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined;\n  var devToolsHook = _global && _global.__RELAY_DEVTOOLS_HOOK__;\n  if (devToolsHook) {\n    devToolsHook.registerEnvironment(environment);\n  }\n}\nmodule.exports = registerEnvironmentWithDevTools;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar resolvedPromise = Promise.resolve();\n\n/**\n * An alternative to setImmediate based on Promise.\n */\nfunction resolveImmediate(callback) {\n  resolvedPromise.then(callback)[\"catch\"](throwNext);\n}\nfunction throwNext(error) {\n  setTimeout(function () {\n    throw error;\n  }, 0);\n}\nmodule.exports = resolveImmediate;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\n/**\n * Creates a copy of the provided value, ensuring any nested objects have their\n * keys sorted such that equivalent values would have identical JSON.stringify\n * results.\n */\nfunction stableCopy(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map(stableCopy);\n  }\n  var keys = Object.keys(value).sort();\n  var stable = {};\n  for (var i = 0; i < keys.length; i++) {\n    stable[keys[i]] = stableCopy(value[keys[i]]);\n  }\n  return stable;\n}\nmodule.exports = stableCopy;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar _window, _window$performance;\nvar isPerformanceNowAvailable = typeof window !== 'undefined' && typeof ((_window = window) === null || _window === void 0 ? void 0 : (_window$performance = _window.performance) === null || _window$performance === void 0 ? void 0 : _window$performance.now) === 'function';\nfunction currentTimestamp() {\n  if (isPerformanceNowAvailable) {\n    return window.performance.now();\n  }\n  return Date.now();\n}\nfunction withDuration(cb) {\n  var startTime = currentTimestamp();\n  var result = cb();\n  return [currentTimestamp() - startTime, result];\n}\nmodule.exports = withDuration;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n * @oncall relay\n */\n\n'use strict';\n\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar warning = require(\"fbjs/lib/warning\");\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar debugCache = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction withProvidedVariables(userSuppliedVariables, providedVariables) {\n  if (providedVariables != null) {\n    var operationVariables = {};\n    Object.assign(operationVariables, userSuppliedVariables);\n    Object.keys(providedVariables).forEach(function (varName) {\n      var providerFunction = providedVariables[varName].get;\n      var providerResult = providerFunction();\n\n      // people like to ignore these warnings, so use the cache to\n      // enforce that we only compute the value the first time\n      if (!debugCache.has(providerFunction)) {\n        debugCache.set(providerFunction, providerResult);\n        operationVariables[varName] = providerResult;\n      } else {\n        var cachedResult = debugCache.get(providerFunction);\n        if (process.env.NODE_ENV !== \"production\") {\n          process.env.NODE_ENV !== \"production\" ? warning(areEqual(providerResult, cachedResult), 'Relay: Expected function `%s` for provider `%s` to be a pure function, ' + 'but got conflicting return values `%s` and `%s`', providerFunction.name, varName, providerResult, cachedResult) : void 0;\n        }\n        operationVariables[varName] = cachedResult;\n      }\n    });\n    return operationVariables;\n  } else {\n    return userSuppliedVariables;\n  }\n}\nwithProvidedVariables.tests_only_resetDebugCache = process.env.NODE_ENV !== \"production\" ? function () {\n  debugCache = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\n} : undefined;\nmodule.exports = withProvidedVariables;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["props","_props$locale","locale","children","_ANT_MARK__","React","changeConfirmLocale","Modal","getMemoizedContextValue","Object","assign","exist","LocaleContext","value","dynamicStyleMark","concat","Date","now","Math","random","registerTheme","globalPrefixCls","theme","style","variables","formatColor","color","updater","clone","toRgbString","fillColor","colorVal","type","baseColor","TinyColor","colorPalettes","generate","setAlpha","primaryColor","primaryColors","forEach","index","c","lighten","tint","getAlpha","primaryActiveColor","darken","successColor","warningColor","errorColor","infoColor","cssList","keys","map","key","join","trim","getStyle","canUseDom","updateCSS","componentDisabled","useContext","DisabledContext","componentSize","SizeContext","MotionWrapper","_useToken","useToken","motion","_slicedToArray","needWrapMotionProviderRef","current","MotionProvider","globalIconPrefixCls","globalTheme","iconPrefixCls","csp","_useToken2","token","useStyleRegister","hashId","path","nonce","_defineProperty","resetIcon","display","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","PASSED_PROPS","getGlobalPrefixCls","getGlobalIconPrefixCls","defaultIconPrefixCls","globalConfig","getPrefixCls","suffixCls","customizePrefixCls","getIconPrefixCls","getRootPrefixCls","getTheme","ProviderChildren","customCsp","autoInsertSpaceInButton","alert","anchor","form","direction","space","virtual","dropdownMatchSelectWidth","popupMatchSelectWidth","popupOverflow","legacyLocale","parentContext","customIconPrefixCls","segmented","statistic","spin","calendar","carousel","cascader","collapse","typography","checkbox","descriptions","divider","drawer","skeleton","steps","image","layout","list","mentions","modal","progress","result","slider","breadcrumb","menu","pagination","input","empty","badge","radio","rate","SWITCH","switch","transfer","avatar","message","tag","table","card","tabs","timeline","timePicker","upload","notification","tree","colorPicker","datePicker","wave","prefixCls","mergedPrefixCls","shouldWrapSSR","wrapSSR","useStyle","mergedTheme","parentTheme","themeConfig","parentThemeConfig","inherit","defaultConfig","useMemo","mergedComponents","components","componentName","prev","next","some","prevTheme","nextTheme","isEqual","useTheme","baseConfig","config","undefined","propName","propValue","memoedConfig","prevConfig","currentConfig","prevKeys","currentKeys","memoIconContextValue","childNode","validateMessages","_a","_b","_c","_d","merge","defaultLocale","defaultValidateMessages","Form","ValidateMessagesContext","LocaleProvider","IconContext","SizeContextProvider","size","memoTheme","algorithm","rest","themeObj","Array","isArray","createTheme","defaultTheme","parsedComponents","entries","_ref2","_ref3","componentToken","parsedToken","defaultSeedToken","DesignTokenContext","DisabledContextProvider","disabled","ConfigContext","ConfigProvider","context","antLocale","_ref","endsWith","isLegacyTheme","useConfig","defineProperty","get","createContext","runtimeLocale","localeList","generateLocale","reduce","merged","newLocale","cloneLocale","push","filter","getConfirmLocale","aStackPool","bStackPool","eq","a","b","aStack","bStack","objToStr","toString","className","String","isNaN","Number","source","global","multiline","ignoreCase","constructor","valueOf","pop","module","exports","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","warning","require","condition","format","d","f","error","Error","args","argIndex","replace","name","framesToPop","getComponentName","component","displayName","getContainerName","Component","createRelayContext","__internal","_interopRequireDefault","_objectSpread2","_objectWithoutPropertiesLoose2","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_excluded","buildReactRelayContainer","assertRelayContext","areEqual","_require3","createFragmentSpecResolver","getDataIDsFromObject","isScalarAndEqual","createContainerWithFragments","fragments","_class","containerName","_React$Component","_props$__rootIsQueryR","_this","resolverFromThisUpdate","state","resolver","setState","updatedState","data","resolve","relayProp","getRelayProp","environment","relayContext","__relayContext","rootIsQueryRenderer","__rootIsQueryRenderer","prevProps","prevPropsContext","getDerivedStateFromProps","nextProps","prevState","_nextProps$__rootIsQu","prevIDs","nextIDs","setProps","_proto","componentDidMount","_subscribeToNewResolverAndRerenderIfStoreHasChanged","componentDidUpdate","dispose","_rerenderIfStoreHasChanged","componentWillUnmount","shouldComponentUpdate","nextState","ii","_this$state","maybeNewData","_this$state2","setCallback","_handleFragmentDataUpdate","render","_this$props","componentRef","createElement","ref","relay","createContainer","fragmentSpec","ReactRelayContext","ReactRelayQueryRendererContext","_require","createOperationDescriptor","getRequest","deepFreeze","useLayoutEffect","useState","useRef","queryRendererContext","query","latestVariables","latestValue","useDeepCompare","operation","request","dataRef","forceUpdate","cleanupFnRef","snapshot","check","res","lookup","fragment","retainDisposable","retain","subscribeDisposable","subscribe","newSnapshot","disposed","cleanupFn","Provider","_extends2","_objectSpread3","_excluded2","_excluded3","getRootVariablesForFragments","ReactRelayQueryFetcher","invariant","ConnectionInterface","Observable","RelayFeatureFlags","getVariablesFromObject","FORWARD","toObserver","observerOrCallback","complete","unsubscribe","subscription","connectionConfig","metadata","foundConnectionMetadata","isRelayModern","fragmentName","connectionMetadata","connection","findConnectionMetadata","getConnectionFromProps","createGetConnectionFromProps","getFragmentVariables","countVariable","count","prevVars","totalCount","createGetFragmentVariables","_resolver","connectionData","_getConnectionData","hasMore","cursor","_refetchSubscription","refetchVariables","_canFetchPage","_refetchVariables","paginatingVariables","_fetchPage","force","pageSize","options","observer","create","sink","edgeCount","_refetchConnection","_ConnectionInterface$","END_CURSOR","START_CURSOR","_isARequestInFlight","ENABLE_CONTAINERS_SUBSCRIBE_ON_COMMIT","prevContext","contextForChildren","_buildRelayProp","resolverGeneration","_isUnmounted","_hasFetched","UNSAFE_componentWillReceiveProps","_this2","prevRootVariables","nextRootVariables","_cleanup","_hasMore","isLoading","_isLoading","loadMore","_loadMore","refetchConnection","restProps","_ConnectionInterface$2","EDGES","PAGE_INFO","HAS_NEXT_PAGE","HAS_PREV_PAGE","edges","pageInfo","_getQueryFetcher","_queryFetcher","method","fragmentVariables","_this3","_this$props2","rootVariables","fetchVariables","getVariables","cacheConfig","refetchSubscription","cleanup","execute","preservePreviousReferences","mergeMap","payload","prevData","setVariables","node","nextData","onNext","_this$props3","ComponentClass","fetchQuery","isRelayModernEnvironment","_cacheSelectionReference","cacheSelectionReference","_selectionReferences","selectionReferences","getSelectionReferences","lookupInStore","fetchPolicy","status","_retainCachedOperation","getFetchResult","_didFetchFinish","_error","_snapshot","_ref$preservePrevious","reference","disposeSelectionReferences","setOnDataChange","onDataChange","_fetchOptions","onDataChangeCallbacks","fetch","fetchOptions","cacheConfigOverride","fetchHasReturned","disposeRequest","oldOnDataChangeCallbacks","operationOverride","_pendingRequest","_onQueryDataAvailable","notifyFirstResult","err","retry","_rootSubscription","_disposeCacheSelectionReference","r","_this$_fetchOptions","maybeNewOnDataChangeCallbacks","_require2","requestCache","ReactRelayQueryRenderer","params","prevRequestCacheKey","requestCacheKey","renderProps","getRenderProps","queryFetcher","retryCallbacks","handleDataChange","handleRetryAfterError","getRequestCacheKey","_maybeHiddenOrFastRefresh","prevPropsEnvironment","prevPropsVariables","prevQuery","fetchQueryAndComputeStateFromProps","resetQueryStateForUpdate","newState","ENABLE_QUERY_RENDERER_SET_STATE_PREVENTION","fetchResult","_fetchResult$snapshot","_fetchResult$error","_handleDataChange","_prevProps","_this$state3","syncSnapshot","JSON","stringify","id","cacheID","prevSelectionReferences","genericEnvironment","storeSnapshot","refetch","taggedNode","renderVariables","_getFragmentVariables","localVariables","latestState","response","start","_refetch","isRelayEnvironment","isRelayContext","assertFragmentMap","getFragment","Container","forwardRef","_queryRendererContext","getSelector","_selector$selectors$","_selector$selectors$2","_selector$owner$varia","fragmentNode","fragmentRef","selector","fragmentOwnerVariables","kind","selectors","owner","ReactRelayFragmentContainer","ReactRelayLocalQueryRenderer","ReactRelayPaginationContainer","ReactRelayRefetchContainer","EntryPointContainer","loadEntryPoint","loadQuery","ProfilerContext","RelayEnvironmentProvider","useClientQuery","useEntryPointLoader","useFragment","useLazyLoadQuery","useMutation","usePaginationFragment","usePreloadedQuery","useQueryLoader","useRefetchableFragment","useRelayEnvironment","useSubscribeToInvalidationState","useSubscription","RelayRuntime","ConnectionHandler","QueryRenderer","LocalQueryRenderer","MutationTypes","RangeOperations","applyOptimisticMutation","commitLocalUpdate","commitMutation","createFragmentContainer","createPaginationContainer","createRefetchContainer","fetchQuery_DEPRECATED","graphql","readInlineData","requestSubscription","useEffect","entryPointReference","getComponent","queries","entryPoints","extraProps","rootModuleID","profilerContext","__log","_toConsumableArray2","LRUCache","getQueryResourceForEnvironment","SuspenseResource","_require2$__internal","getPromiseForActiveRequest","getFragmentIdentifier","getPendingOperationsForFragment","getVariablesFromFragment","handlePotentialSnapshotErrors","isPromise","recycleNodesInto","WEAKMAP_SUPPORTED","WeakMap","CONSTANT_READONLY_EMPTY_ARRAY","freeze","isMissingData","missingLiveResolverFields","Boolean","flat","getFragmentResult","cacheKey","storeEpoch","ClientEdgeQueryResultsCache","Map","_environment","fragmentIdentifier","_this$_cache$get$","_this$_cache$get","_cache","recordQueryResults","existing","existingResults","_suspenseResource","queryResult","temporaryRetain","suspenseResource","_retain","set","_this$_retainCounts$g","retainCount","_retainCounts","_this$_retainCounts$g2","newRetainCount","FragmentResourceImpl","ENABLE_CLIENT_EDGES","_clientEdgeQueryResultsCache","_proto2","read","componentDisplayName","fragmentKey","readWithIdentifier","_fragmentNode$metadat","_fragmentNode$metadat2","_missingLiveResolverF2","_missingLiveResolverF3","getStore","getEpoch","plural","cachedValue","_missingLiveResolverF","promise","isRelayHooks","isPromiseCached","pendingOperations","_throwOrLogErrorsInSnapshot","cached","fragmentSelector","fragmentResult","clientEdgeRequests","hasClientEdges","_snapshot$missingClie","_snapshot$missingClie2","_s$missingClientEdges","_s$missingClientEdges2","missingClientEdges","hasMissingClientEdges","queryResource","queryResults","singularOrPluralForEach","snap","_snap$missingClientEd","_clientEdgeRequests","clientEdgeDestinationID","_this3$_performClient","_performClientEdgeQuery","requestDescriptor","clientEdgePromises","fragmentOwner","parentQueryPromiseResult","_getAndSavePromiseForFragmentRequestInFlight","parentQueryPromiseResultPromise","missingResolverFieldPromises","liveStateID","getLiveResolverPromise","_parentQueryPromiseRe","_clientEdgeRequests2","promises","Promise","all","originalVariables","fetchObservable","prepare","_this4","missingRequiredFields","relayResolverErrors","readSpec","fragmentNodes","fragmentRefs","callback","_this5","renderedSnapshot","_this$checkMissedUpda","checkMissedUpdates","didMissUpdates","currentSnapshot","disposables","idx","latestSnapshot","_updatePluralSnapshot","_this$_clientEdgeQuer","_this$_clientEdgeQuer2","clientEdgeQueryResults","subscribeSpec","fragmentResults","_this6","disposable","currentSnapshots","renderData","currentData","updatedData","updatedCurrentSnapshot","seenRecords","checkMissedUpdatesSpec","_this7","_this8","pendingOperationsResult","networkPromise","then","baseSnapshots","_currentFragmentResul","currentFragmentResult","reportInvalidCachedData","nextSnapshots","nodeName","createFragmentResource","dataResources","getFragmentResourceForEnvironment","newDataResource","implementation","inject","impl","capacity","_capacity","_map","firstKey","done","has","clear","wrapPrepareQueryResource","cb","DEFAULT_FETCH_POLICY","DEFAULT_LIVE_FETCH_POLICY","operationIsLiveQuery","live","getQueryCacheIdentifier","maybeFetchPolicy","maybeRenderPolicy","cacheBreaker","renderPolicy","UNSTABLE_getDefaultRenderPolicy","cacheIdentifier","identifier","getQueryResult","rootFragmentRef","__id","dataID","__fragments","__fragmentOwner","nextID","createCacheEntry","operationAvailability","networkSubscription","onDispose","isLiveQuery","currentValue","currentNetworkSubscription","retention","cacheEntry","processedPayloadsCount","getValue","setValue","val","setNetworkSubscription","permanentRetain","releaseTemporaryRetain","QueryResourceImpl","prepareWithIdentifier","temporaryRetainDisposable","entryWasCached","_fetchAndSaveQuery","observerUnsubscribe","queryAvailability","_getOrCreateCacheEntry","resourceID","TESTS_ONLY__getCacheEntry","_clearCacheEntry","shouldFetch","shouldAllowRender","queryStatus","hasFullQuery","canPartialRender","resolveNetworkPromise","_cacheEntry","_queryResult","observerStart","observerNext","observerError","observerComplete","_cacheEntry2","createQueryResource","getEnvironmentForActor","_retainCount","_retainDisposable","max","_this$_releaseTempora","isServer","releaseQueryTimeout","clearTimeout","_releaseTemporaryRetain","setTimeout","_this$_releaseTempora2","_this$_releaseTempora3","getRetainCount","environmentProvider","entryPoint","entryPointParams","loadingPromise","root","getModuleIfRequired","load","preloadProps","getPreloadProps","preloadedQueries","preloadedEntryPoints","queryPropName","_queries$queryPropNam","environmentProviderOptions","parameters","getEnvironment","networkCacheConfig","__nameForWarning","entryPointPropName","entryPointDescription","nestedEntryPoint","nestedParams","isDisposed","values","innerDispose","_loadingPromise","componentModule","getModuleId","fetchQueryDeduped","PreloadableQueryRegistry","ReplaySubject","getRequestIdentifier","RenderDispatcher","fetchKey","preloadableRequest","_React$__SECRET_INTER3","_React$__SECRET_INTER4","_options$fetchPolicy","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","retainReference","unsubscribeFromNetworkRequest","unsubscribeFromExecution","cancelOnLoadCallback","queryId","didExecuteNetworkSource","executeWithNetworkSource","networkObservable","executeWithSource","executionSubject","returnedObservable","networkError","didMakeNetworkRequest","makeNetworkRequest","observable","subject","ENABLE_LOAD_QUERY_REQUEST_DEDUPING","getNetwork","subjectSubscription","executeDeduped","fetchFn","_fetchQueryDeduped$su","checkAvailabilityAndExecute","concreteRequest","_module","_PreloadableQueryRegi","onLoad","preloadedModule","isReleased","isNetworkRequestCancelled","releaseQuery","cancelNetworkRequest","useTrackLoadQueryInRender","_React$__SECRET_INTER","_React$__SECRET_INTER2","gqlQuery","_createForOfIteratorHelper2","useIsMountedRef","useCallback","initialNullEntryPointReferenceState","_options$TEST_ONLY__i","_options$TEST_ONLY__i2","_options$TEST_ONLY__i3","_options$TEST_ONLY__i4","initialEntryPointReferenceInternal","TEST_ONLY__initialEntryPointData","initialEntryPointParamsInternal","isMountedRef","undisposedEntryPointReferencesRef","Set","_useState","setEntryPointReference","_useState2","setEntryPointParams","disposeEntryPoint","nullEntryPointReference","add","entryPointLoaderCallback","updatedEntryPointReference","maybeHiddenOrFastRefresh","undisposedEntryPointReferences","_step","_iterator","n","undisposedEntryPointReference","_step2","_iterator2","unhandledStateChange","useUnsafeRef_DEPRECATED","subscriptionRef","isFetchingRef","disposeFetch","startFetch","completeFetch","HooksImplementation","useFragmentNode","useStaticFragmentNodeWarning","useDebugValue","useFragment_LEGACY","FragmentResource","isListeningForUpdatesRef","handleDataUpdate","disableStoreUpdates","enableStoreUpdates","getObservableForActiveRequest","isActive","setIsActive","onCompleteOrError","useLazyLoadQueryNode","useMemoOperationDescriptor","UNSTABLE_renderPolicy","useFetchTrackingRef","QueryResource","forceUpdateKey","_useFetchTrackingRef","preparedQueryResult","useIsOperationNodeActive","getPaginationVariables","getValueAtPath","fragmentData","connectionPathInFragmentData","paginationRequest","paginationMetadata","onReset","identifierField","identifierValue","mirroredEnvironment","setMirroredEnvironment","mirroredFragmentIdentifier","setMirroredFragmentIdentifier","isParentQueryActive","_getConnectionState","_pageInfo$END_CURSOR","_pageInfo$START_CURSO","getConnectionState","onComplete","parentVariables","extraVariables","UNSTABLE_extraVariables","baseVariables","paginationVariables","paginationQuery","useMemoVariables","memoVariables","memoCacheConfig","mirroredVariables","setMirroredVariables","defaultCommitMutation","mutation","commitMutationFn","arguments","environmentRef","mutationRef","inFlightMutationsRef","isMutationInFlight","setMutationInFlight","onCompleted","errors","_config$onCompleted","onError","_config$onError","onUnsubscribe","_config$onUnsubscribe","_config$onNext","useLoadMoreFunction","useRefetchableFragmentNode","getPaginationMetadata","useLoadMore","isLoadingMore","setIsLoadingMore","_useLoadMoreFunction","fragmentInput","parentFragmentRef","_getPaginationMetadat","_useRefetchableFragme","_useLoadMore","loadPrevious","hasPrevious","isLoadingPrevious","disposeFetchPrevious","_useLoadMore2","loadNext","hasNext","isLoadingNext","disposeFetchNext","__environment","usePaginationFragment_LEGACY","_require3$__internal","preloadedQuery","useLazyLoadQueryNodeParams","fallbackFetchObservable","ifEmpty","initialNullQueryReferenceState","requestIsLiveQuery","initialQueryReference","initialQueryReferenceInternal","undisposedQueryReferencesRef","queryReference","setQueryReference","previousInitialQueryReference","setPreviousInitialQueryReference","disposeQuery","queryLoaderCallback","mergedOptions","_options$__environmen","updatedQueryReference","undisposedQueryReferences","undisposedQueryReference","useRefetchableFragment_LEGACY","useReducer","_require4","getRefetchMetadata","reducer","action","_action$refetchEnviro","refetchEnvironment","refetchQuery","parentEnvironment","_getRefetchMetadata","refetchableRequest","fragmentRefPathInResponse","_useReducer","refetchState","dispatch","shouldReset","_useQueryLoader","queryRef","process","handleQueryCompleted","maybeError","queryData","_useFragmentNode","providedRefetchVariables","_fragmentSelector$sel","_fragmentSelector$sel2","_fragmentSelector$sel3","_fragmentSelector$sel4","useRefetchFunction","warningContext","dataIDs","disposableRef","stableDataIDs","from","sort","store","invalidationState","lookupInvalidationState","subscribeToInvalidationState","requestSubscriptionFn","actualRequestSubscription","init","MutationHandlers","handle","DeleteRecordHandler","DeleteEdgeHandler","AppendEdgeHandler","PrependEdgeHandler","AppendNodeHandler","PrependNodeHandler","generateClientID","getStableStorageKey","getRelayHandleKey","CONNECTION","NEXT_EDGE_INDEX","buildConnectionEdge","edge","edgeIndex","edgeID","getDataID","connectionEdge","getType","copyFieldsFrom","mergeEdges","sourceEdges","targetEdges","nodeIDs","NODE","getLinkedRecord","nodeID","createEdge","record","edgeType","setLinkedRecord","deleteNode","_ConnectionInterface$5","getLinkedRecords","nextEdges","slice","setLinkedRecords","getConnection","filters","handleKey","getConnectionID","recordID","storageKey","insertEdgeAfter","newEdge","CURSOR","foundCursor","insertEdgeBefore","_ConnectionInterface$4","unshift","update","PAGE_INFO_TYPE","serverConnection","fieldKey","serverPageInfo","clientConnectionID","clientConnectionField","clientConnection","clientPageInfo","_connection","_serverEdges","prevEdges","prevPageInfo","after","before","_nodeIDs","last","startCursor","first","endCursor","serverEdges","CONNECTION_CALLS","find","surrounds","newConfig","isConnectionCall","idOrIds","connections","handleArgs","connectionID","edgeUpdater","nodeUpdater","insertFn","singleServerEdge","_unused","_unused2","serverEdgeList","_loop","serverEdge","serverNode","_step3","serverNodeId","_iterator3","_connection$getLinked","_edge$getLinkedRecord","clientEdge","_serverNodes","singleServerNode","serverNodes","_payload$handleArgs","edgeTypeName","_unused3","_unused4","_step4","serverNodeList","_iterator4","_loop2","_step5","_iterator5","_connection$getLinked2","_edge$getLinkedRecord2","RelayDefaultHandlerProvider","RelayDeclarativeMutationConfig","RelayNetwork","RelayObservable","RelayQueryResponseCache","fetchQueryInternal","GraphQLTag","generateUniqueClientID","isClientID","RelayConcreteVariables","RelayModernEnvironment","RelayModernOperationDescriptor","RelayModernRecord","RelayModernSelector","RelayModernStore","RelayOperationTracker","RelayRecordSource","RelayStoreUtils","ResolverFragments","ViewerPattern","createPayloadFor3DField","RelayConcreteNode","RelayDefaultHandleKey","RelayError","RelayProfiler","RelayReplaySubject","stableCopy","withProvidedVariables","Environment","Network","QueryResponseCache","RecordSource","Record","Store","areEqualSelectors","createNormalizationSelector","createReaderSelector","createRequestDescriptor","getArgumentValues","getDataIDsFromFragment","getNode","getInlineDataFragment","getModuleComponentKey","getModuleOperationKey","getPaginationFragment","getPluralSelector","getRefetchableFragment","getSelectorsFromObject","getSingularSelector","getStorageKey","getVariablesFromPluralFragment","getVariablesFromSingularFragment","isFragment","isInlineDataFragment","isRequest","DefaultHandlerProvider","VIEWER_ID","VIEWER_TYPE","DEFAULT_HANDLE_KEY","FRAGMENTS_KEY","FRAGMENT_OWNER_KEY","ID_KEY","REF_KEY","REFS_KEY","ROOT_ID","ROOT_TYPE","TYPENAME_KEY","OperationTracker","getOperationVariables","INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE","assertInternalActorIdentifier","actorIdentifier","getActorIdentifier","actorID","getDefaultActorIdentifier","ACTOR_IDENTIFIER_FIELD_NAME","getActorIdentifierFromPayload","RANGE_ADD","RANGE_DELETE","NODE_DELETE","APPEND","PREPEND","getRootField","selections","convert","configs","optimisticUpdater","configOptimisticUpdates","configUpdates","nodeDeleteResult","deletedIDFieldName","rootField","deleteID","nodeDelete","rangeAddResult","parentID","connectionInfo","edgeName","parent","info","rangeBehavior","rangeAdd","rangeDeleteResult","connectionKeys","pathToConnection","deleteIDs","deletedIDField","eachField","idObject","recordProxy","rangeDelete","eachOptimisticUpdater","eachUpdater","RelayRecordProxy","mutator","_dataID","_mutator","_source","copyFields","isValidLeafValue","setValue__UNSAFE","linkedID","getLinkedRecordID","setLinkedRecordID","getOrCreateLinkedRecord","typeName","linkedRecord","_this$_source$get","clientID","linkedIDs","getLinkedRecordIDs","records","setLinkedRecordIDs","invalidateRecord","markIDForInvalidation","every","EXISTENT","RelayRecordSourceMutator","base","__sources","_base","_sink","unstable_getRawRecordWithChanges","baseRecord","sinkRecord","_getSinkRecord","sourceID","sinkID","sinkSource","baseSource","copyFieldsFromRecord","getStatus","NONEXISTENT","_readUpdatableFragment","readUpdatableFragment","_readUpdatableQuery","readUpdatableQuery","RelayRecordSourceProxy","handlerProvider","missingFieldHandlers","__mutator","_handlerProvider","_proxies","_getDataID","_invalidatedStore","_idsMarkedForInvalidation","_missingFieldHandlers","publishSource","fieldPayloads","getRecordIDs","sourceRecord","fieldPayload","handler","getRoot","invalidateStore","isStoreMarkedForInvalidation","getIDsMarkedForInvalidation","fragmentReference","RelayRecordSourceSelectorProxy","recordSource","readSelector","__recordSource","_readSelector","getOperationRoot","_getRootField","fieldName","field","selection","getPluralRootField","operationKind","optimisticResponse","applyMutation","commitUpdate","uploadables","_RelayDeclarativeMuta","executeMutation","item","apply","ACTOR_CHANGE","ALIASED_FRAGMENT_SPREAD","ALIASED_INLINE_FRAGMENT_SPREAD","CLIENT_EDGE_TO_CLIENT_OBJECT","CLIENT_EDGE_TO_SERVER_OBJECT","CLIENT_EXTENSION","CONDITION","DEFER","FLIGHT_FIELD","FRAGMENT_SPREAD","INLINE_DATA_FRAGMENT_SPREAD","INLINE_FRAGMENT","LINKED_FIELD","MODULE_IMPORT","RELAY_LIVE_RESOLVER","RELAY_RESOLVER","REQUIRED_FIELD","SCALAR_FIELD","STREAM","nonUpdatableKeys","updateProxyFromSelections","mutableUpdatableProxy","updatableProxyRootRecord","recordSourceProxy","_selection$alias3","_selection$alias","alias","createGetterForPluralLinkedField","createSetterForPluralLinkedField","_selection$alias2","createGetterForSingularLinkedField","createSetterForSingularLinkedField","scalarFieldName","_selection$args","newVariables","getScalarUsingMissingFieldHandlers","includes","newValue","_selection$args2","_selection$args3","recordProxies","newValueRecord","_selection$args4","_selection$args5","linkedRecords","newIds","newId","getPluralLinkedRecordUsingMissingFieldHandlers","updatableProxy","_selection$args6","getLinkedRecordUsingMissingFieldHandlers","createUpdatableProxy","proxy","updatableFragment","fragmentRoot","updatableData","getUpdatableQuery","updatableQuery","CLIENT_COMPONENT","LINKED_HANDLE","SCALAR_HANDLE","TYPE_DISCRIMINATOR","convertFetch","fn","logRequestInfo","observeFetch","operationVariables","providedVariables","pollInterval","poll","hostReportError","_isUncaughtThrownError","onUnhandledError","obj","isObservable","fromObservable","fromPromise","fromValue","sub","_error2","error2","both","alternate","hasValue","closed","withClosed","doCleanup","_error3","isUncaughtThrownError","_subscribe","mapValue","subscriptions","_sub","splice","timeout","toPromise","_this9","reject","resolved","ttl","_responses","_size","_ttl","queryID","getCacheKey","fetchTime","extensions","cacheTimestamp","generateID","env","network","networkRequestId","logObserver","FRAGMENT","REQUEST","isUpdatableQuery","UPDATABLE_QUERY","INLINE_DATA_FRAGMENT","_fragment$metadata","_fragment$metadata2","strings","preloadableQueryRegistry","_preloadableQueries","_callbacks","callbacks","_this$_callbacks$get","getNetworkObservable","queryNode","readData","requestCachesByEnvironment","getRequestCache","cachedRequest","subjectForInFlightStatus","cachedReq","getCachedRequest","cachedRequestInstance","getObserverCount","getObservableForCachedRequest","getActiveStatusObservableForCachedRequest","isRequestActive","USE_REACT_CACHE","resolveOnNext","intern","PREFIX","localID","STRING_INTERN_LEVEL","MAX_DATA_ID_LENGTH","generateClientObjectClientID","typename","localId","getOperation","cloneRelayHandleSourceField","cloneRelayScalarHandleSourceField","getLocalVariables","UNKNOWN","RelayStoreReactFlightUtils","TYPE_SCHEMA_TYPE","generateTypeID","DataChecker","getSourceForActor","getTargetForActor","defaultActorIdentifier","handlers","operationLoader","shouldProcessClientComponents","_getSourceForActor","_getTargetForActor","_mutatorRecordSourceProxyCache","_this$_getMutatorAndR","_getMutatorAndRecordProxyForActor","_mostRecentlyInvalidatedAt","_handlers","_operationLoader","_recordSourceProxy","_recordWasMissing","_variables","_shouldProcessClientComponents","tuple","target","_assignClientAbstractTypes","_traverse","mostRecentlyInvalidatedAt","_getVariableValue","_handleMissing","_handleMissingScalarField","_handleMissingLinkField","_handleMissingPluralLinkField","invalidatedAt","getInvalidationEpoch","_traverseSelections","_checkScalar","_checkPluralLink","_checkLink","_checkActorChange","linkedField","passingValue","_abstractKey","abstractKey","_recordType","_typeID","_implementsInterface","handleField","_handleField","_checkModuleImport","prevVariables","argumentDefinitions","recordWasMissing","recordType","typeID","ENABLE_REACT_FLIGHT_COMPONENT_FIELD","_checkFlightField","_checkResolver","backingField","moduleImport","operationKey","documentName","operationReference","normalizationRootNode","fieldValue","getActorLinkedRecordID","prevSource","prevMutator","prevRecordSourceProxy","_this$_getMutatorAndR2","REACT_FLIGHT_TREE_STORAGE_KEY","reachableExecutableDefinitions","REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY","definition","clientAbstractTypes","_i","_Object$keys","abstractType","concreteType","withDuration","RelayResponseNormalizer","Executor","getPublishQueue","isClientPayload","operationExecutions","operationTracker","optimisticConfig","_reactFlightPayloadDeserializer","reactFlightPayloadDeserializer","reactFlightServerErrorHandler","scheduler","treatMissingFieldsAsNull","log","_withDuration","duration","_log","executeId","_executeId","operationName","_operation","_actorIdentifier","_treatMissingFieldsAsNull","_incrementalPayloadsPending","_incrementalResults","_nextSubscriptionId","_operationExecutions","_operationTracker","_operationUpdateEpochs","_optimisticUpdates","_pendingModulePayloadsCount","_getPublishQueue","_scheduler","_state","_getStore","_subscriptions","_updater","_isClientPayload","_reactFlightServerErrorHandler","_isSubscriptionOperation","_retainDisposables","_seenActors","_completeFns","_complete","_next","_this$_operation$requ","_start","_processOptimisticResponse","cancel","optimisticUpdates","_getPublishQueueAndSaveActor","revertUpdate","_runPublishQueue","_asyncStoreUpdateDisposable","_completeOperationTracker","_disposeRetainedData","_updateActiveState","activeState","_schedule","task","cancellationToken","schedule","_id","_handleNext","_maybeCompleteSubscriptionOperationTracking","_handleErrorResponse","responses","results","messages","stack","responseWithData","_handleOptimisticResponses","_response$extensions","responsePart","_responsePart$extensi","isOptimistic","responsesWithData","x","_x$extensions","is_final","_partitionGraphQLResp","nonIncrementalResponses","incrementalResponses","label","partitionGraphQLResponses","hasNonIncrementalResponses","payloadFollowups","_processResponses","_processPayloadFollowups","_payloadFollowups","_processIncrementalResponses","__relay_subscription_root_id","updatedOwners","_retainData","_updateOperationTracker","normalizeResponse","_deserializeReactFlightPayloadWithLogging","validateOptimisticResponsePayload","_processOptimisticFollowups","incrementalPlaceholders","followupPayloads","isFinal","applyUpdate","followupPayload","_expectOperationLoader","_processAsyncOptimisticModuleImport","moduleImportOptimisticUpdates","_processOptimisticModuleImport","_normalizeFollowupPayload","normalizationNode","moduleImportPayload","modulePayload","_this$_optimisticUpda","payloadPart","relayPayload","commitPayload","payloads","_followupPayload$acto","prevActorIdentifier","_processFollowupPayload","incrementalPlaceholder","_incrementalPlacehold","_processIncrementalPlaceholder","relayPayloads","placeholder","_processDeferResponse","_this10","_processFollowupPayloadWithNormalizationNode","decrementPendingCount","loadedNode","publishModuleImportPayload","batchAsyncModuleUpdatesFN","BATCH_ASYNC_MODULE_UPDATES_FN","shouldScheduleAsyncStoreUpdate","_handleFollowupPayload","_scheduleAsyncStoreUpdate","_error4","_relayPayload$fieldPa","pathKey","resultForLabel","resultForPath","pendingResponses","nextParentRecord","nextParentPayloads","parentRecord","parentPayloads","fieldID","previousParentEntry","handlePayloads","dedupePayload","_JSON$stringify","stableStringify","_this11","incrementalResponse","_pathKey","_resultForPath","_placeholder","_processStreamResponse","_placeholder$actorIde","parentEntry","_response$extensions2","handleFieldsRelayPayload","_this$_normalizeStrea","_normalizeStreamItem","itemID","itemIndex","currentParentRecord","currentItems","currentItem","nextItems","normalizationPath","_field$alias","_field$concreteType","_this$_getDataID","responseKey","finalPathEntry","parseInt","scheduleFn","completeFn","_this12","_getActorsToVisit","run","_response$extensions3","normalize","currentVariables","nextVariables","nextArgs","def","_nextArgs$def$name","defaultValue","argumentVariables","varName","wrapNetworkWithLogObserver","registerEnvironmentWithDevTools","defaultGetDataID","defaultRequiredFieldLogger","OperationExecutor","RelayPublishQueue","_config$log","_config$requiredField","_config$UNSTABLE_defa","_config$getDataID","_config$missingFieldH","_config$handlerProvid","_config$scheduler","_config$isServer","_config$operationTrac","configName","requiredFieldLogger","_defaultRenderPolicy","UNSTABLE_defaultRenderPolicy","ENABLE_PARTIAL_RENDERING_DEFAULT","_network","_publishQueue","_store","_isServer","__setNet","newNet","getOperationTracker","getScheduler","requestIdentifier","optimisticUpdate","_scheduleUpdates","replaceUpdate","newUpdate","_execute","createSource","operationHasClientAbstractTypes","_checkSelectorAndHandleMissingFields","getSource","commitSource","executeSubscription","_ref4","toJSON","_this$configName","_ref5","publishQueue","executor","RelayModernFragmentSpecResolver","_stale","_callback","_context","_data","_fragments","_props","_resolvers","_rootIsQueryRenderer","disposeCallback","prevItem","nextItem","prop","_nextItem","ownedSelectors","ownedSelector","SelectorListResolver","_onChange","setSelector","SelectorResolver","subscribeOnConstruction","_isMissingData","_missingRequiredFields","_relayResolverErrors","_selector","_subscription","_pendingOperationsRes","_subscribeOnConstruction","_proto3","isSuspenseSentinel","ACTOR_IDENTIFIER_KEY","INVALIDATED_AT_KEY","RELAY_RESOLVER_VALUE_KEY","maybeLink","link","links","record1","record2","prevRecord","nextRecord","updated","setActorLinkedRecordID","getResolverLinkedRecordID","getResolverLinkedRecordIDs","resolverValue","CLIENT_EDGE_TRAVERSAL_PATH","IS_WITHIN_UNMATCHED_TYPE_REFINEMENT","mixedOwner","isWithinUnmatchedTypeRefinement","mixedClientEdgeTraversalPath","clientEdgeTraversalPath","items","ids","getDataIDs","itemVariables","areEqualSingularSelectors","thisSelector","thatSelector","object","_regeneratorRuntime","resolveImmediate","RelayOptimisticRecordSource","RelayReader","RelayReferenceMarker","RelayStoreSubscriptions","RecordResolverCache","_options$gcReleaseBuf","_options$gcScheduler","_options$getDataID","_options$log","_options$operationLoa","_gcRun","_gcScheduler","_gcStep","_currentWriteEpoch","_gcHoldCounter","_gcReleaseBufferSize","gcReleaseBufferSize","gcScheduler","_globalInvalidationEpoch","_invalidationSubscriptions","_invalidatedRecordIDs","_queryCacheExpirationTime","queryCacheExpirationTime","_optimisticSource","_recordSource","_releaseBuffer","_roots","_shouldScheduleGC","_resolverCache","_getMutableRecordSource","_storeSubscriptions","_updatedRecordIDs","rootRecord","initializeRecordSource","_this$_optimisticSour","_this$_optimisticSour2","_options$handlers","_options$getSourceFor","_options$getTargetFor","_options$defaultActor","globalInvalidationEpoch","rootEntry","operationLastWrittenAt","epoch","operationFetchTime","getAvailabilityStatus","refCount","scheduleGC","shift","notify","sourceOperation","ENABLE_RELAY_RESOLVERS","invalidateDataIDs","updateSubscriptions","_updateInvalidationSubscription","updatedRecordIDs","invalidatedRecordIDs","temporaryRootEntry","publish","idsMarkedForInvalidation","currentWriteEpoch","targetRecord","REACT_FLIGHT_TYPE_NAME","updateTargetFromSource","optimistic","holdGC","__getUpdatedRecordIDs","invalidations","_RelayModernRecord$ge","checkInvalidationState","prevInvalidationState","currentInvalidations","prevInvalidations","invalidatedStore","snapshotSubscriptions","restore","restoreSubscriptions","_collect","__gc","gcRun","mark","startEpoch","references","storeIDs","wrap","abrupt","t0","finish","remove","stop","_ownersToPendingOperations","_pendingOperationsToOwners","_ownersToPendingPromise","pendingOperation","affectedOwners","pendingOperationIdentifier","newlyAffectedOwnersIdentifier","ownerIdentifier","pendingOperationsAffectingOwner","ownersAffectedByPendingOperation","_ownerIdentifier","_resolveOwnerResolvers","affectedOwnersIdentifier","completedOwnersIdentifier","updatedOwnersIdentifier","_ownerIdentifier2","_ownerIdentifier3","promiseEntry","getPendingOperationsAffectingOwner","pendingOperationsForOwner","cachedPromiseEntry","UNPUBLISH_RECORD_SENTINEL","__UNPUBLISH_RECORD_SENTINEL","getOptimisticRecordIDs","_global$ErrorUtils$ap","_global$ErrorUtils","_global","window","applyWithGuard","ErrorUtils","_hasStoreSnapshot","_pendingBackupRebase","_pendingData","_pendingOptimisticUpdates","_appliedOptimisticUpdates","_gcHold","revertAll","runWillClearGcHold","_commitData","_applyUpdates","_publishSourceFromPayload","pendingPayload","lookupSelector","payloadInvalidatedStore","processUpdate","storeUpdater","selectorData","recordSourceSelectorProxy","getReactFlightClientResponse","FRAGMENT_PROP_NAME_KEY","MODULE_COMPONENT_KEY","NoopResolverCache","_require6","RESOLVER_FRAGMENT_MISSING_DATA_SENTINEL","withResolverContext","resolverCache","_selector$clientEdgeT","_clientEdgeTraversalPath","_missingClientEdges","_missingLiveResolverFields","_isWithinUnmatchedTypeRefinement","_owner","_seenRecords","_resolverErrors","_fragmentName","_updatedDataIDs","_this$_selector","isDataExpectedToBePresent","implementsInterface","notifyUpdatedSubscribers","_markDataAsMissing","top","readerClientEdge","_maybeReportUnexpectedNull","fieldPath","_record","_this$_missingRequire","fields","_readRequiredField","_readScalar","_readPluralLink","_readLink","_readInlineFragment","_readResolverField","_createFragmentPointer","_createAliasedFragmentSpread","_fieldValue","_readModuleImport","_createInlineDataOrResolverFragmentPointer","alreadyMissingClientEdges","_hasExpectedData","_readFlightField","_readActorChange","_readClientEdge","parentRecordID","getDataForResolverFragment","singularReaderSelector","_this$_resolverCache$","readFromCacheOrEvaluate","_getResolverValue","getResolverValue","resolverResult","resolverError","_getResolverValue2","seenRecord","cachedSnapshot","suspenseID","updatedDataIDs","_addMissingRequiredFields","missing","missingResolverField","_backingField$alias","applicationName","backingFieldData","clientEdgeResolverResponse","validClientEdgeResolverResponse","extractIdFromResponse","assertValidClientEdgeResolverResponse","normalizationInfo","ensureClientRecord","getStoreIDsForPluralClientEdgeResolver","_readLinkedIds","_getStoreIDAndTravers","getStoreIDAndTraversalPathSegmentForSingularClientEdgeResolver","storeID","traversalPathSegment","_field$alias2","reactFlightClientResponseRecordID","reactFlightClientResponseRecord","clientResponse","_field$alias3","_field$alias4","_field$alias5","externalRef","fragmentSpread","__fragmentRef","__viewer","_field$alias6","linkedArray","nextIndex","componentKey","fragmentPropName","namedFragmentSpread","fieldData","inlineFragment","parentIsMissingData","parentIsWithinUnmatchedTypeRefinement","fragmentPointers","fragmentSpreadOrFragment","inlineData","parentFragmentName","additional","typeRecord","ownerName","resolverFunction","resolverModule","resolverFunctionArgs","_field$path","individualResponse","errorMessage","RelayRecordState","_records","_step$value","getOutputTypeRecordIDs","_operationName","_references","_traverseLink","_traversePluralLink","_typeName","_typeName2","_traverseModuleImport","_traverseFlightField","_traverseResolverField","_traverseClientEdgeToClientObject","resolverRecord","isOutputType","outputTypeRecordIDs","_dataID2","_dataID3","refineToReactFlightPayloadData","_require7","getHandleStorageKey","_require8","_getDataId","_handleFieldPayloads","_incrementalPlaceholders","_isClientExtension","_isUnmatchedAbstractType","_followupPayloads","_path","_getRecordType","_normalizeField","_typeRecord","_normalizeModuleImport","_normalizeDefer","_normalizeStream","isClientExtension","_normalizeFlightField","_normalizeActorChange","_normalizeResolver","defer","stream","componentReference","componentModuleProvider","operationModuleProvider","_normalizePluralLink","_normalizeLink","reactFlightPayload","reactFlightID","reactFlightClientResponse","__typename","_field$concreteType2","_field$concreteType3","_validateRecordType","_field$concreteType4","_validateConflictingFieldsWithIdenticalId","_validateConflictingLinkedFieldsWithIdenticalId","prevID","hasOverlappingIDs","backup","stale","hasUpdatedRecords","_updateSubscription","hasOverlappingUpdates","nextSnapshot","ENABLE_NOTIFY_SUBSCRIPTION","VARIABLE","LITERAL","OBJECT_VALUE","LIST_VALUE","getArgumentValue","getStableVariableValue","variableName","_value","formatStorageKey","argValues","argName","RELAY_RESOLVER_INVALIDATION_KEY","RELAY_RESOLVER_SNAPSHOT_KEY","RELAY_RESOLVER_ERROR_KEY","RELAY_RESOLVER_OUTPUT_TYPE_RECORD_IDS","dynamicKey","handleName","filterArgs","_field$fragment2","_field$fragment","getArguments","emptySet","evaluate","_evaluate","addDependencyEdge","to","getRecordSource","_resolverIDToRecordIDs","_recordIDToResolverIDs","_getRecordSource","_isInvalid","_linkedID","evaluationResult","currentRecord","_evaluationResult$sna","fragmentStorageKey","resolverID","seenRecordIds","seenRecordID","answer","visited","recordsToVisit","_this$_recordIDToReso","_this$_resolverIDToRe","anotherRecordID","_markInvalidatedResolverRecord","originalInputs","readerSelector","latestValues","contextStack","readFragment","_context$getDataForRe","isTypeID","sourceField","firstReact","react","event","LIVE_RESOLVER_SUSPENSE_SENTINEL","__LIVE_RESOLVER_SUSPENSE_SENTINEL","suspenseSentinel","maybeOutputTypeRecordIDs","ITERATOR_KEY","Symbol","iterator","_fragmentRef$FRAGMENT","inlineDataFragment","_responses$","_responses$$extension","_responses$extensions","LOCAL_ARGUMENT","OPERATION","ROOT_ARGUMENT","SPLIT_OPERATION","createError","messageFormat","_len","messageParams","_key","taalOpcodes","_len2","_key2","createWarning","_len3","_key3","ENABLE_VARIABLE_CONNECTION_KEY","ENABLE_GETFRAGMENTIDENTIFIER_OPTIMIZATION","ENABLE_FRIENDLY_QUERY_NAME_GQL_URL","ENABLE_DO_NOT_WRAP_LIVE_QUERY","USE_REACT_CACHE_LEGACY_TIMEOUTS","profileHandlersByName","defaultProfiler","profile","stopHandlers","stopHandler","attachProfileHandler","detachProfileHandler","array","element","removeFromArray","_observable","_sinks","events","_events","internTable","digits","initDigitTable","INTERN_PREFIX","ESCAPE_PREFIX","str","limit","escape","internedString","getOwnPropertyNames","property","isFrozen","isEmptyObject","fragmentOwnerIdentifier","sel","_ids","refetchMetadata","_objectSpread4","backwardMetadata","backward","forwardMetadata","forward","_paginationVariables","_pendingOperations$ma","_pendingOperations","_result$pendingOperat","_result$promise","pendingOperationName","op","promiseDisplayName","fragmentPathInResult","requestID","_missingRequiredField","valueA","valueB","hasWeakSetDefined","WeakSet","hasWeakMapDefined","canRecycle","prevArray","nextArray","wasEqual","nextValue","prevObject","nextObject","nextKeys","devToolsHook","__RELAY_DEVTOOLS_HOOK__","registerEnvironment","resolvedPromise","throwNext","stable","_window","_window$performance","isPerformanceNowAvailable","performance","currentTimestamp","startTime","debugCache","userSuppliedVariables","providerFunction","providerResult","cachedResult","tests_only_resetDebugCache","arr","len","arr2","__esModule","arrayLikeToArray","self","ReferenceError","unsupportedIterableToArray","o","allowArrayLike","it","F","_e","TypeError","normalCompletion","didErr","step","_e2","toPropertyKey","enumerable","configurable","writable","_extends","bind","setPrototypeOf","subClass","superClass","iter","ownKeys","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","excluded","sourceKeys","_typeof","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","__proto__","awrap","async","reverse","skipTempReset","charAt","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","thrown","delegateYield","_setPrototypeOf","arrayWithoutHoles","iterableToArray","nonIterableSpread","hint","prim","toPrimitive","minLen","test"],"sourceRoot":""}