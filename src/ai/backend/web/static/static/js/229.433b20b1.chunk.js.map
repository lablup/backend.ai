{"version":3,"file":"static/js/229.433b20b1.chunk.js","mappings":"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","sources":["components/UserDropdownMenu.tsx","hooks/backendai.tsx","hooks/reactQueryAlias.tsx"],"sourcesContent":["import { useSuspendedBackendaiClient } from '../hooks';\nimport { useCurrentUserInfo } from '../hooks/backendai';\nimport { useTanQuery } from '../hooks/reactQueryAlias';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport Flex from './Flex';\nimport {\n  UserOutlined,\n  MailOutlined,\n  SecurityScanOutlined,\n  ExclamationCircleOutlined,\n  LockOutlined,\n  HolderOutlined,\n  FileTextOutlined,\n  LogoutOutlined,\n} from '@ant-design/icons';\nimport { useDebounce } from 'ahooks';\nimport { Avatar, Dropdown, Grid, MenuProps, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst UserDropdownMenu: React.FC = () => {\n  const { t } = useTranslation();\n  const { dispatchEvent } = useWebComponentInfo();\n  const baiClient = useSuspendedBackendaiClient();\n  const [userInfo] = useCurrentUserInfo();\n  const [open, setOpen] = useState(false);\n  const screens = Grid.useBreakpoint();\n  const debouncedOpenToFixDropdownMenu = useDebounce(open, {\n    wait: 100,\n    leading: true,\n    trailing: false,\n  });\n\n  const { data: roleData } = useTanQuery<{\n    user: {\n      role: string;\n    };\n  }>(\n    'getUserRole',\n    () => {\n      return baiClient.user.get(userInfo.email, ['role']);\n    },\n    {\n      suspense: false,\n    },\n  );\n  const userRole = roleData?.user.role;\n\n  const items: MenuProps['items'] = [\n    {\n      label: userInfo.username,\n      key: 'userFullName',\n      icon: <UserOutlined />,\n      disabled: true,\n      style: {\n        color: '#1f1f1f',\n        cursor: 'default',\n      },\n    },\n    {\n      label: userInfo.email,\n      key: 'userEmail',\n      icon: <MailOutlined />,\n      disabled: true,\n      style: {\n        cursor: 'default',\n      },\n    },\n    {\n      type: 'divider',\n    },\n    {\n      label: userRole,\n      key: 'userRole',\n      icon: <SecurityScanOutlined />,\n      disabled: true,\n      style: {\n        cursor: 'default',\n      },\n    },\n    {\n      type: 'divider',\n    },\n    {\n      label: t('webui.menu.AboutBackendAI'),\n      key: 'description',\n      icon: <ExclamationCircleOutlined />,\n      onClick: () => {\n        const event: CustomEvent = new CustomEvent('backend-ai-show-splash');\n        document.dispatchEvent(event);\n      },\n    },\n    {\n      label: t('webui.menu.MyAccount'),\n      key: 'userProfileSetting',\n      icon: <LockOutlined />,\n      onClick: () => {\n        // toggleUserProfileModal();\n        dispatchEvent('moveTo', {\n          path: '#userprofile',\n        });\n      },\n    },\n    {\n      label: t('webui.menu.Preferences'),\n      key: 'preferences',\n      icon: <HolderOutlined />,\n      onClick: () => {\n        dispatchEvent('moveTo', {\n          path: '/usersettings',\n          params: { tab: 'general' },\n        });\n      },\n    },\n    {\n      label: t('webui.menu.LogsErrors'),\n      key: 'logs',\n      icon: <FileTextOutlined />,\n      onClick: () => {\n        dispatchEvent('moveTo', {\n          path: '/usersettings',\n          params: { tab: 'logs' },\n        });\n      },\n    },\n    {\n      label: t('webui.menu.LogOut'),\n      key: 'logout',\n      icon: <LogoutOutlined />,\n      onClick: () => {\n        const event: CustomEvent = new CustomEvent('backend-ai-logout');\n        document.dispatchEvent(event);\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Dropdown\n        menu={{ items }}\n        trigger={['click']}\n        open={debouncedOpenToFixDropdownMenu}\n        onOpenChange={(v) => setOpen(v)}\n      >\n        <Flex direction=\"row\" gap=\"sm\" style={{ cursor: 'pointer' }}>\n          {screens.md && (\n            <Typography.Text strong>{userInfo.username}</Typography.Text>\n          )}\n          <Avatar icon={<UserOutlined />} />\n        </Flex>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default UserDropdownMenu;\n","import { useSuspendedBackendaiClient, useUpdatableState } from '.';\nimport { maskString } from '../helper';\nimport { useTanMutation, useTanQuery } from './reactQueryAlias';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\n\nexport interface QuotaScope {\n  id: string;\n  quota_scope_id: string;\n  storage_host_name: string;\n  details: {\n    hard_limit_bytes: number | null;\n    usage_bytes: number | null;\n    usage_count: number | null;\n  };\n}\n\nexport const useResourceSlots = () => {\n  const [key, checkUpdate] = useUpdatableState('first');\n  // const baiRequestWithPromise = useBaiSignedRequestWithPromise();\n  const baiClient = useSuspendedBackendaiClient();\n  const { data: resourceSlots } = useTanQuery<{\n    cpu?: string;\n    mem?: string;\n    'cuda.shares'?: string;\n    'cuda.device'?: string;\n  }>({\n    queryKey: ['useResourceSlots', key],\n    queryFn: () => {\n      return baiClient.get_resource_slots();\n    },\n    staleTime: 0,\n  });\n  return [\n    resourceSlots,\n    {\n      refresh: () => checkUpdate(),\n    },\n  ] as const;\n};\n\ninterface UserInfo {\n  full_name: string;\n  email: string;\n}\n\ntype mutationOptions<T> = {\n  onSuccess?: (value: T) => void;\n  onError?: (error: any) => void;\n};\n\nexport const useCurrentUserInfo = () => {\n  const baiClient = useSuspendedBackendaiClient();\n\n  const [userInfo, _setUserInfo] = useState<UserInfo>({\n    full_name: baiClient.full_name,\n    email: baiClient.email,\n  });\n\n  const getUsername = () => {\n    let name: string =\n      _.trim(userInfo.full_name).length > 0\n        ? userInfo.full_name\n        : userInfo.email;\n    // mask username only when the configuration is enabled\n    if (baiClient._config.maskUserInfo) {\n      const maskStartIdx = 2;\n      const emailPattern =\n        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      const isEmail: boolean = emailPattern.test(name);\n      const maskLength = isEmail\n        ? name.split('@')[0].length - maskStartIdx\n        : name.length - maskStartIdx;\n      name = maskString(name, '*', maskStartIdx, maskLength);\n    }\n    return name;\n  };\n\n  useEffect(() => {\n    const handler = (e: any) => {\n      if (baiClient.supports('change-user-name')) {\n        const input = e.detail;\n        _setUserInfo((v) => ({\n          ...v,\n          full_name: input,\n        }));\n      }\n    };\n    document.addEventListener('current-user-info-changed', handler);\n    return () => {\n      document.removeEventListener('current-user-info-changed', handler);\n    };\n  }, [baiClient]);\n\n  const mutationToUpdateUserFullName = useTanMutation({\n    mutationFn: (values: { email: string; full_name: string }) => {\n      return baiClient.update_full_name(values.email, values.full_name);\n    },\n  });\n  const mutationToUpdateUserPassword = useTanMutation({\n    mutationFn: (values: {\n      old_password: string;\n      new_password: string;\n      new_password2: string;\n    }) => {\n      return baiClient.update_password(\n        values.old_password,\n        values.new_password,\n        values.new_password2,\n      );\n    },\n  });\n\n  return [\n    {\n      ...userInfo,\n      username: getUsername(),\n      isPendingMutation:\n        mutationToUpdateUserFullName.isLoading ||\n        mutationToUpdateUserPassword.isLoading,\n    },\n    {\n      updateFullName: (\n        newFullName: string,\n        options?: mutationOptions<string>,\n      ) => {\n        mutationToUpdateUserFullName.mutate(\n          {\n            full_name: newFullName,\n            email: baiClient.email,\n          },\n          {\n            onSuccess: () => {\n              options?.onSuccess && options.onSuccess(newFullName);\n              document.dispatchEvent(\n                new CustomEvent('current-user-info-changed', {\n                  detail: newFullName,\n                }),\n              );\n              _setUserInfo((v) => ({\n                ...v,\n                full_name: newFullName,\n              }));\n            },\n            onError: (error: any) => {\n              options?.onError && options.onError(error);\n            },\n          },\n        );\n      },\n      updatePassword: (\n        params: {\n          old_password: string;\n          new_password: string;\n          new_password2: string;\n        },\n        options?: mutationOptions<undefined>,\n      ) => {\n        mutationToUpdateUserPassword.mutate(params, {\n          onSuccess: () => {\n            options?.onSuccess && options.onSuccess(undefined);\n          },\n          onError: (error: any) => {\n            options?.onError && options.onError(error);\n          },\n        });\n      },\n    },\n  ] as const;\n};\n","import { useQuery, useMutation } from 'react-query';\n\nexport const useTanQuery = useQuery;\nexport const useTanMutation = useMutation;\n"],"names":["t","useTranslation","dispatchEvent","useWebComponentInfo","baiClient","useSuspendedBackendaiClient","_useCurrentUserInfo","useCurrentUserInfo","userInfo","_slicedToArray","_useState","useState","_useState2","open","setOpen","screens","Grid","useBreakpoint","debouncedOpenToFixDropdownMenu","useDebounce","wait","leading","trailing","roleData","useTanQuery","user","get","email","suspense","data","userRole","role","items","label","username","key","icon","_jsx","UserOutlined","disabled","style","color","cursor","MailOutlined","type","SecurityScanOutlined","ExclamationCircleOutlined","onClick","event","CustomEvent","document","LockOutlined","path","HolderOutlined","params","tab","FileTextOutlined","LogoutOutlined","_Fragment","children","Dropdown","menu","trigger","onOpenChange","v","_jsxs","Flex","direction","gap","md","Typography","Text","strong","Avatar","useResourceSlots","_useUpdatableState","useUpdatableState","_useUpdatableState2","checkUpdate","queryKey","queryFn","get_resource_slots","staleTime","refresh","full_name","_setUserInfo","useEffect","handler","e","supports","input","detail","_objectSpread","addEventListener","removeEventListener","mutationToUpdateUserFullName","useTanMutation","mutationFn","values","update_full_name","mutationToUpdateUserPassword","update_password","old_password","new_password","new_password2","name","_","length","_config","maskUserInfo","maskLength","test","split","maskString","getUsername","isPendingMutation","isLoading","updateFullName","newFullName","options","mutate","onSuccess","onError","error","updatePassword","undefined","useQuery","useMutation"],"sourceRoot":""}