[project]
requires-python = "~=3.12.4"

[tool.towncrier]
package = "ai.backend.manager"  # reference point for getting __version__
filename = "CHANGELOG.md"
directory = "changes/"
title_format = ""  # embedded inside the template
template = "changes/template.md"
start_string = "<!-- towncrier release notes start -->\n"
issue_format = "([#{issue}](https://github.com/lablup/backend.ai/issues/{issue}))"
underlines = ["", "", ""]

# NOTE: A single PR may have multiple news fragments with different types.

[[tool.towncrier.type]]
    # Put breaking changes that should be announced loudly.
    directory = "breaking"
    name = "Breaking Changes"
    showcontent = true

[[tool.towncrier.type]]
    directory = "feature"
    name = "Features"
    showcontent = true

[[tool.towncrier.type]]
    # Describe general improvements, such as internal refactoring, optimization,
    # performance improvements, and etc. that do not introduce new features.
    directory = "enhance"
    name = "Improvements"
    showcontent = true

[[tool.towncrier.type]]
    directory = "deprecation"
    name = "Deprecations"
    showcontent = true

[[tool.towncrier.type]]
    directory = "fix"
    name = "Fixes"
    showcontent = true

[[tool.towncrier.type]]
    directory = "doc"
    name = "Documentation Updates"
    showcontent = true

[[tool.towncrier.type]]
    # Describe notable changes of external/upstream dependencies
    # that may require installers updates and extra concerns
    # to upgrade existing setups.
    directory = "deps"
    name = "External Dependency Updates"
    showcontent = true

[[tool.towncrier.type]]
    directory = "misc"
    name = "Miscellaneous"
    showcontent = true

[tool.pytest.ini_options]
testpaths = "tests"
markers = [
    "integration: Test cases that spawn Dockerized kernel sessions",
]
filterwarnings = [
    "ignore::DeprecationWarning:etcd3.*:",
]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
src = ["src"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    # "C",  # flake8-comprehensions
    # "B",  # flake8-bugbear
]
ignore = ["E203","E731","E501"]

[tool.ruff.isort]
known-first-party = ["ai.backend"]
known-local-folder = ["src"]
known-third-party = ["alembic", "redis"]
split-on-trailing-comma = true

[tool.ruff.per-file-ignores]
"src/ai/backend/manager/config.py" = ["E402"]
"src/ai/backend/manager/models/alembic/env.py" = ["E402"]

[tool.ruff.format]
preview = true  # enable the black's preview style

[tool.black]
# unused for our codebase but preserved for `pants tailor`
line-length = 100
preview = true

[tool.mypy]
ignore_missing_imports = true
implicit_optional = true  # FIXME: remove after adding https://github.com/hauntsaninja/no_implicit_optional to fmt
mypy_path = "stubs:src:tools/pants-plugins"
namespace_packages = true
explicit_package_bases = true
python_executable = "dist/export/python/virtualenvs/python-default/3.12.4/bin/python"
disable_error_code = ["typeddict-unknown-key"]
