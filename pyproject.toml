[tool.towncrier]
package = "ai.backend.manager"  # reference point for getting __version__
filename = "CHANGELOG.md"
directory = "changes/"
title_format = ""  # embedded inside the template
template = "changes/template.md"
start_string = "<!-- towncrier release notes start -->\n"
issue_format = "([#{issue}](https://github.com/lablup/backend.ai/issues/{issue}))"
underlines = ["", "", ""]

# NOTE: A single PR may have multiple news fragments with different types.

[[tool.towncrier.type]]
    # Put breaking changes that should be announced loudly.
    directory = "breaking"
    name = "Breaking Changes"
    showcontent = true

[[tool.towncrier.type]]
    directory = "feature"
    name = "Features"
    showcontent = true

[[tool.towncrier.type]]
    # Describe general improvements, such as internal refactoring, optimization,
    # performance improvements, and etc. that do not introduce new features.
    directory = "enhance"
    name = "Improvements"
    showcontent = true

[[tool.towncrier.type]]
    directory = "deprecation"
    name = "Deprecations"
    showcontent = true

[[tool.towncrier.type]]
    directory = "fix"
    name = "Fixes"
    showcontent = true

[[tool.towncrier.type]]
    directory = "doc"
    name = "Documentation Updates"
    showcontent = true

[[tool.towncrier.type]]
    # Describe notable changes of external/upstream dependencies
    # that may require installers updates and extra concerns
    # to upgrade existing setups.
    directory = "deps"
    name = "External Dependency Updates"
    showcontent = true

[[tool.towncrier.type]]
    directory = "misc"
    name = "Miscellaneous"
    showcontent = true

[tool.pytest.ini_options]
testpaths = "tests"
markers = [
    "integration: Test cases that spawn Dockerized kernel sessions",
]
filterwarnings = [
    "ignore::DeprecationWarning:etcd3.*:",
]
asyncio_mode = "auto"

[tool.mypy]
ignore_missing_imports = true
implicit_optional = true  # FIXME: remove after adding https://github.com/hauntsaninja/no_implicit_optional to fmt
mypy_path = "stubs:src:tools/pants-plugins"
namespace_packages = true
explicit_package_bases = true
python_executable = "dist/export/python/virtualenvs/python-default/3.11.2/bin/python"
disable_error_code = ["typeddict-unknown-key"]

[tool.black]
line-length = 100
preview = true

[tool.isort]
profile = "black"
split_on_trailing_comma = true
line_length = 100
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["ai.backend"]
skip_glob = [
    "dist",
    "plugins",
    "docs",
    "scratches",
    "vfroot",
    "volumes",
    ".tmp",
    ".git",
    ".pants.d",
    ".pytest_cache",
    ".vscode",
    "tools/pants-src",
    "src/ai/backend/webui",
]
